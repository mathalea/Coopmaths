import Exercice from '../ClasseExercice.js';
import {liste_de_question_to_contenu_sans_numero,randint,choice,combinaison_listes,image_point_par_transformation,tex_fraction_reduite,num_alpha} from "/modules/outils.js"

/**
 * Transformations : trouvers un point numéroté par une des transformations du plan. Fonction générale utilisée sur tous les niveaux
 * @Auteur Jean-Claude Lhote
 * Pas de version LaTeX
 */
export default function Transformations() {
  "use strict";
  Exercice.call(this); // Héritage de la classe Exercice()

  // this.titre = "Trouver l'image d'un point par une transformation du plan";
  this.consigne = "";
  this.nb_questions = 1;
  this.nb_questions_modifiable = false;
  this.nb_cols = 1;
  this.nb_cols_corr = 1;
  this.pas_de_version_LaTeX = true;
  // this.sup = 1; // 1 pour les 6ème, 2 pour les 5èmes, 3 pour les 4èmes, et 4 pour les 3èmes.
  sortie_html ? (this.spacing_corr = 2.5) : (this.spacing_corr = 1.5);
  this.liste_packages = "tkz-euclide";
  this.nouvelle_version = function (numero_de_l_exercice) {
    this.type_exercice = "MG32";
    this.MG32editable = false;
    this.taille_div_MG32 = [700, 700];
    this.MG32codeBase64 =
      "TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wAAAADEAACIuAAAgIkAAICKAAB9FwAAgCoAAH0TAAB9EgAAgCcAAIAoAAB9FAAAgK4AAIB8AACAhAAAgAsAAIAlAACAIAAAgA0AAIAOAACBWQAAgAwAAIDxAACBJwAAgHkAAIB7AACAegAAgCQAAIFxAACAbQAAgGoAAIC7AACAvAAAfR0AAH0eAACAgAAAgYMAAIAPAACAEwAAgBIAAIAXAACAFgAAgF4AAIBfAACAZQAAfRAAAIDrAACAEAAAgEgAAIAUAAB9KAAAgBoAAIAdAACA6QAAgVAAAIFRAACBDAAAgQ0AAIFSAACBUwAAgB4AAIAcAACAGwAAgBkAAIBgAACBIAAAgN4AAIDfAACBCgAAgOAAAIFDAACASQAAgEoAAIEXAACBGAAAgDMAAIB2AACA7AAAgO0AAIDYAACA2QAAgNoAAIDbAACAcgAAgXkAAIFiAACBZAAAgE0AAIAfAACAIgAAgCMAAIAhAACAxwAAgT0AAIELAACBBAAAgC0AAIFMAACAMAAAgSoAAIErAACALgAAgDEAAIDyAACBaQAAgWcAAIGlAACBdQAAgC8AAIA1AACAWQAAgFwAAH0KAAB9CwAAgUkAAIFLAAB9DgAAfQ8AAH0RAAB9FQAAfSQAAIBuAACAawAAgLAAAIFXAACAsQAAgVYAAICyAACBVAAAgLcAAIC4AACAswAAgPcAAIC0AACAtQAAgQYAAIEfAACBAgAAgY4AAIGPAACBAwAAgOMAAID2AACBBwAAgQkAAIEpAACBKAAAgOgAAIBvAACAcAAAgHQAAIBQAACA3QAAfRkAAH0YAACBbAAAgHEAAIFtAACBbgAAgXIAAIGGAAB9IwAAgQgAAIDkAACA5wAAgOUAAIDuAAB9KwAAfS0AAH0qAAB9LAAAgW8AAIFwAACBeAAAgXcAAH0mAACA8AAAfSUAAIEiAAB9KQAAfScAAIGjAACBpAAAfR8AAH0gAAB9IQAAfSIAAIBiAACAYwAAgGcAAIBoAACAaQAAgMkAAIBLAACArwAAgSwAAIDhAACA4gAAAAAFHAAAAtIAAAEBAAAAAAAAAAEAAABt#####wAAAAEACkNDYWxjQ29uc3QA#####wACcGkAFjMuMTQxNTkyNjUzNTg5NzkzMjM4NDb#####AAAAAQAKQ0NvbnN0YW50ZUAJIftURC0Y#####wAAAAEAB0NDYWxjdWwA#####wACeU8AATQAAAABQBAAAAAAAAAAAAACAP####8AAnhPAAE0AAAAAUAQAAAAAAAA#####wAAAAEACkNQb2ludEJhc2UA#####wEAAAAADgABRwDAKAAAAAAAAAAAAAAAAAAABQABQEnAAAAAAABAhAQo9cKPXP####8AAAABABRDRHJvaXRlRGlyZWN0aW9uRml4ZQD#####ANjY2AAQAAABAQEAAAADAT#wAAAAAAAA#####wAAAAEAD0NQb2ludExpZURyb2l0ZQD#####AQAAAAAOAAFJAMAcAAAAAAAAQDQAAAAAAAAFAAFAUIAAAAAAAAAAAAT#####AAAAAQAJQ0Ryb2l0ZUFCAP####8BAAAAABAAAAEAAQAAAAMAAAAF#####wAAAAEAFkNEcm9pdGVQZXJwZW5kaWN1bGFpcmUA#####wDY2NgAEAAAAQEBAAAAAwAAAAb#####AAAAAQAJQ0NlcmNsZU9BAP####8BAAAAAAEAAAADAAAABf####8AAAABABBDSW50RHJvaXRlQ2VyY2xlAP####8AAAAHAAAACP####8AAAABABBDUG9pbnRMaWVCaXBvaW50AP####8BAAAAAA4AAUoAwC4AAAAAAABAGAAAAAAAAAUAAgAAAAn#####AAAAAgAHQ1JlcGVyZQD#####AObm5gEBAAAAAwAAAAUAAAAKAQEBAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEAEENQb2ludERhbnNSZXBlcmUA#####wEAAAAAEAABUQAAAAAAAAAAAEAIAAAAAAAABQAAAAALAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAA#####wAAAAEADENUcmFuc2xhdGlvbgD#####AAAAAwAAAAX#####AAAAAQALQ1BvaW50SW1hZ2UA#####wEAAAAADgACUTEAAAAAAAAAAABACAAAAAAAAAUAAAAADAAAAA0AAAANAP####8AAAADAAAACgAAAA4A#####wEAAAAADgACUTIAAAAAAAAAAABACAAAAAAAAAUAAAAADAAAAA######AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAwAAAABQCIAAAAAAAAAAAAOAP####8BAAAAAA4AAlEzAAAAAAAAAAAAQAgAAAAAAAAFAAAAAA4AAAARAAAADgD#####AQAAAAAOAAJRNAAAAAAAAAAAAEAIAAAAAAAABQAAAAAQAAAAEf####8AAAABAAhDU2VnbWVudAD#####AQAAAAAQAAABAAEAAAAMAAAAEgAAAAUA#####wEAAAAADgACUjEAAAAAAAAAAABACAAAAAAAAAUAAT#uZmZmZmZmAAAAFAAAAA0A#####wAAAAwAAAATAAAADgD#####AQAAAAAOAAJSMgAAAAAAAAAAAEAIAAAAAAAABQAAAAAVAAAAFgAAABAA#####wEAAAAAEAAAAQABAAAAFQAAABcAAAAFAP####8Bf39#AA4AAlMxAAAAAAAAAAAAQAgAAAAAAAADAAE#u38NRim38QAAABgAAAALAP####8A5ubmAAEAAAAMAAAADgAAABAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABP#AAAAAAAAAAAAABP#AAAAAAAAD#####AAAAAgAIQ01lc3VyZVgA#####wADeFMxAAAAGgAAABn#####AAAAAgAIQ01lc3VyZVkA#####wADeVMxAAAAGgAAABkAAAACAP####8ACE5vbVBvaW50AAoxMCp5UzEreFMx#####wAAAAEACkNPcGVyYXRpb24AAAAAEwIAAAABQCQAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAHAAAABQAAAAb#####wAAAAEAD0NWYWxldXJBZmZpY2hlZQD#####AQAAAABAKAAAAAAAAEAxAAAAAAAAAAAAGQ4AAf###wAAAAEAAAACAAAAAUBGgAAAAAAAAAAAAAIAAAAd#####wAAAAIAEkNMaWV1T2JqZXRQYXJQdExpZQD#####AQAAAAAAAB4AAAABQCQAAAAAAAAAAAAZAAAABQAAABkAAAAbAAAAHAAAAB0AAAAeAAAAFgD#####AAAAAAAAAB8AAAABQCQAAAAAAAAAAAAVAAAACQAAABUAAAAXAAAAGAAAABkAAAAbAAAAHAAAAB0AAAAeAAAAHwAAABYA#####wEAAAAAAAAZAAAAAUAkAAAAAAAAAAAAGQAAAAIAAAAZAAAAGQAAABYA#####wCkpKQAAAAhAAAAAUAkAAAAAAAAAAAAFQAAAAUAAAAVAAAAFwAAABgAAAAZAAAAIQAAAAoA#####wEAAAAAEAAAAQUAAQAAAAn#####AAAAAQAKQ1VuaXRleFJlcAD#####AAR1bml0AAAACwAAAA8A#####wAAAAMAAAATAwAAAAE#8AAAAAAAAAAAABQAAAAkAAAADgD#####AQAAAAAQAAJXIgBAJAAAAAAAAEAYAAAAAAAAAQAAAAAFAAAAJf####8AAAABAAlDTG9uZ3VldXIA#####wAAAAMAAAAmAAAADAD#####AQAAAAAQAAJPIgDAMQAAAAAAAMBBAAAAAAAACQAAAAAL#####wAAAAIACUNGb25jdGlvbgAAAAAUAAAAAgAAABkAAAAAFAAAAAH#####AAAAAQAJQ0Ryb2l0ZU9tAP####8BAAAAABAAAAEAAQAAAAsAAAAoAAAAAT#wAAAAAAAAAAAAAgD#####AARiaXMxAAExAAAAAT#wAAAAAAAAAAAABAD#####AQAAAAEQAAABAAEAAAAoAT#wAAAAAAAAAAAAAgD#####AAN4eCcAATEAAAABP#AAAAAAAAAAAAAPAP####8AAAAoAAAAFAAAACwAAAAEAP####8BAAAAARAAAAEAAQAAACgAP#AAAAAAAAAAAAACAP####8AA3l5JwABMQAAAAE#8AAAAAAAAAAAAA8A#####wAAACgAAAAUAAAALwAAABoA#####wEAAAAAEAAAAQABAAAACwAAACj#####AAAAAQAMQ01vaW5zVW5haXJlAAAAAT#wAAAAAAAAAAAAAgD#####AARiaXMyAAExAAAAAT#wAAAAAAAAAAAADwD#####AAAAKAAAABQAAAAyAAAADwD#####AAAAAwAAAAE#8AAAAAAAAAAAAA4A#####wEAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAFAAAAACgAAAA0#####wAAAAEAEUNQb2ludFBhckFic2Npc3NlAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAAADAAAABQAAAAFAHmZmZmZmZgAAAAIA#####wACeE4AATMAAAABQAgAAAAAAAAAAAAMAP####8BAAAAAQ4AAU0AwCwAAAAAAADAOQAAAAAAAAMAAAAACwAAAAFAGAAAAAAAAAAAAAFAFAAAAAAAAAAAAAIA#####wACeU4AAi0xAAAAGwAAAAE#8AAAAAAAAAAAAAwA#####wEAAAABDgABTgDAKAAAAAAAAMA9AAAAAAAAAwAAAAALAAAAEwAAAAABQBgAAAAAAAAAAAAUAAAANwAAABMAAAAAAUAUAAAAAAAAAAAAFAAAADkAAAACAP####8ACEFmZmljaGVOAAEwAAAAAQAAAAAAAAAAAAAAAgD#####AAhBZmZpY2hlTQABMAAAAAEAAAAAAAAAAAAAAA8A#####wAAAAMAAAATAwAAAAE#8AAAAAAAAAAAABQAAAA7AAAADgD#####AQAAAAAQAAAAAAAAAAAAAABACAAAAAAAAAMAAAAAOAAAAD0AAAAPAP####8AAAADAAAAEwMAAAABP#AAAAAAAAAAAAAUAAAAPAAAAA4A#####wAAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAADgAAAA#AAAADwD#####AAAAAwAAABMDAAAAAT#wAAAAAAAAAAAAFAAAADsAAAAOAP####8AAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAAA6AAAAQf####8AAAACAAxDQ29tbWVudGFpcmUA#####wAAAAAAwC4AAAAAAADAOAAAAAAAAAAAAEAQAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAABTQAAAB0A#####wAAAAAAwCoAAAAAAADAOgAAAAAAAAAAAEIQAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAABTgAAAAIA#####wAEbnVtMAACMjMAAAABQDcAAAAAAAAAAAACAP####8AAnkwAAxpbnQobnVtMC8xMCkAAAAZAgAAABMDAAAAFAAAAEUAAAABQCQAAAAAAAAAAAACAP####8AAngwAAxtb2QobnVtMCwxMCn#####AAAAAQANQ0ZvbmN0aW9uMlZhcgYAAAAUAAAARQAAAAFAJAAAAAAAAAAAAAwA#####wAAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAAsAAAAUAAAARwAAABQAAABGAAAAAgD#####AARudW0yAAIyNwAAAAFAOwAAAAAAAAAAAAIA#####wACeTIADGludChudW0yLzEwKQAAABkCAAAAEwMAAAAUAAAASQAAAAFAJAAAAAAAAAAAAAIA#####wACeDIADG1vZChudW0yLDEwKQAAAB4GAAAAFAAAAEkAAAABQCQAAAAAAAAAAAAMAP####8AAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAAALAAAAFAAAAEsAAAAUAAAASgAAAAIA#####wAEbnVtMQACNTEAAAABQEmAAAAAAAAAAAACAP####8AAnkxAAxpbnQobnVtMS8xMCkAAAAZAgAAABMDAAAAFAAAAE0AAAABQCQAAAAAAAAAAAACAP####8AAngxAAxtb2QobnVtMSwxMCkAAAAeBgAAABQAAABNAAAAAUAkAAAAAAAAAAAADAD#####AAAAAAAQAAAAAAAAAAAAAABACAAAAAAAAAkAAAAACwAAABQAAABPAAAAFAAAAE4AAAACAP####8ACEFmZmljaGVPAAExAAAAAT#wAAAAAAAAAAAADwD#####AAAAAwAAABMDAAAAAT#wAAAAAAAAAAAAFAAAAFEAAAAOAP####8AAAAAABIAAU8AwDEAAAAAAADAQgAAAAAAAAkAAAAAKAAAAFIAAAAPAP####8AAAAoAAAAEwMAAAABP#AAAAAAAAAAAAAUAAAAKv####8AAAABAAxDRHJvaXRlSW1hZ2UA#####wAAAAAAEAAAAQACAAAAKQAAAFQAAAAPAP####8AAAAoAAAAEwMAAAABP#AAAAAAAAAAAAAUAAAAMgAAAB8A#####wAAAAAAEAAAAQACAAAAMQAAAFYAAAAPAP####8AAAAoAAAAEwMAAAABP#AAAAAAAAAAAAAUAAAALAAAAB8A#####wAAAAAAEAAAAQADAAAAKwAAAFgAAAAPAP####8AAAAoAAAAEwMAAAABP#AAAAAAAAAAAAAUAAAALwAAAB8A#####wAAAAAAEAAAAQADAAAALgAAAFr#####AAAAAgAJQ0NlcmNsZU9SAP####8BAAAAAAMAAAAoAAAAAUAUAAAAAAAAAAAAAAkA#####wAAAFcAAABcAAAACgD#####AQAAAAAQAAAAAAAAAAAAAABACAAAAAAAAAkAAQAAAF0AAAAKAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQACAAAAXQAAAAkA#####wAAAFsAAABcAAAACgD#####AQAAAAAQAAAAAAAAAAAAAABACAAAAAAAAAkAAQAAAGAAAAAKAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQACAAAAYAAAAAkA#####wAAAFUAAABcAAAACgD#####AQAAAAAQAAAAAAAAAAAAAABACAAAAAAAAAkAAgAAAGMAAAAKAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQABAAAAYwAAAAkA#####wAAAFkAAABcAAAACgD#####AQAAAAAQAAAAAAAAAAAAAABACAAAAAAAAAkAAgAAAGYAAAAKAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQABAAAAZgAAAB0A#####wAAAAAAwDYAAAAAAADARoAAAAAAAAAAAF8QAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAIKGQjTCgyKSkAAAAdAP####8AAAAAAMA9AAAAAAAAwD8AAAAAAAAAAABiEAAAAAAAAAAAAAAAAAABAAAAAAAAAAAACChkI0woNCkpAAAAHQD#####AAAAAADAAAAAAAAAAMBHAAAAAAAAAAAAZRAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAgoZCNMKDEpKQAAAB0A#####wAAAAAAQBwAAAAAAADAPQAAAAAAAAAAAGgQAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAIKGQjTCgzKSkAAAAn##########8=";
    this.MG32codeBase64corr =
      "TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wAAAADEAACIuAAAgIkAAICKAAB9FwAAgCoAAH0TAAB9EgAAgCcAAIAoAAB9FAAAgK4AAIB8AACAhAAAgAsAAIAlAACAIAAAgA0AAIAOAACBWQAAgAwAAIDxAACBJwAAgHkAAIB7AACAegAAgCQAAIFxAACAbQAAgGoAAIC7AACAvAAAfR0AAH0eAACAgAAAgYMAAIAPAACAEwAAgBIAAIAXAACAFgAAgF4AAIBfAACAZQAAfRAAAIDrAACAEAAAgEgAAIAUAAB9KAAAgBoAAIAdAACA6QAAgVAAAIFRAACBDAAAgQ0AAIFSAACBUwAAgB4AAIAcAACAGwAAgBkAAIBgAACBIAAAgN4AAIDfAACBCgAAgOAAAIFDAACASQAAgEoAAIEXAACBGAAAgDMAAIB2AACA7AAAgO0AAIDYAACA2QAAgNoAAIDbAACAcgAAgXkAAIFiAACBZAAAgE0AAIAfAACAIgAAgCMAAIAhAACAxwAAgT0AAIELAACBBAAAgC0AAIFMAACAMAAAgSoAAIErAACALgAAgDEAAIDyAACBaQAAgWcAAIGlAACBdQAAgC8AAIA1AACAWQAAgFwAAH0KAAB9CwAAgUkAAIFLAAB9DgAAfQ8AAH0RAAB9FQAAfSQAAIBuAACAawAAgLAAAIFXAACAsQAAgVYAAICyAACBVAAAgLcAAIC4AACAswAAgPcAAIC0AACAtQAAgQYAAIEfAACBAgAAgY4AAIGPAACBAwAAgOMAAID2AACBBwAAgQkAAIEpAACBKAAAgOgAAIBvAACAcAAAgHQAAIBQAACA3QAAfRkAAH0YAACBbAAAgHEAAIFtAACBbgAAgXIAAIGGAAB9IwAAgQgAAIDkAACA5wAAgOUAAIDuAAB9KwAAfS0AAH0qAAB9LAAAgW8AAIFwAACBeAAAgXcAAH0mAACA8AAAfSUAAIEiAAB9KQAAfScAAIGjAACBpAAAfR8AAH0gAAB9IQAAfSIAAIBiAACAYwAAgGcAAIBoAACAaQAAgMkAAIBLAACArwAAgSwAAIDhAACA4gAAAAAFHAAAAtIAAAEBAAAAAQAAAAYACFN5bWV0cmllAClDbHF1ZXIgc3VyIGxlIHBvaW50CkNsaXF1ZXIgc3VyIGxhIGRyb2l0ZQAAAAIAAAAGAAAAABr#####AAAAAQARQ0VsZW1lbnRHZW5lcmlxdWUAAAAAAAT#####AAAAAAAAAAAACf##########AAAAAQAHQ0NhbGN1bAD#####AAJ5TwABNP####8AAAABAApDQ29uc3RhbnRlQBAAAAAAAAAAAAABAP####8AAnhPAAE0AAAAAkAQAAAAAAAAAAAAAQD#####AARiaXMyAAExAAAAAj#wAAAAAAAAAAAAAQD#####AARudW0xAAI1MQAAAAJASYAAAAAAAAAAAAEA#####wACeTEADGludChudW0xLzEwKf####8AAAACAAlDRm9uY3Rpb24C#####wAAAAEACkNPcGVyYXRpb24D#####wAAAAEAD0NSZXN1bHRhdFZhbGV1cgAAAAUAAAACQCQAAAAAAAAAAAABAP####8AAngxAAxtb2QobnVtMSwxMCn#####AAAAAQANQ0ZvbmN0aW9uMlZhcgYAAAAFAAAABQAAAAJAJAAAAAAAAP####8AAAABAA9DU3ltZXRyaWVBeGlhbGUA#####wAAAAH#####AAAAAQALQ1BvaW50SW1hZ2UB#####wAAAP8AEgAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAAAAAAAI#####wAAAAEAB0NNaWxpZXUA#####wAAAP8AEgAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAAAAAAAJ#####wAAAAEACENTZWdtZW50Af####8AAAD#ABAAAAEAAgAAAAAAAAAKAAAACgH#####AAAA#wAQAAABAAIAAAAKAAAACf####8AAAACAAlDQ2VyY2xlT1IA#####wEAAP8AAgAAAAoAAAACP9MzMzMzMzMA#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAsAAAAN#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wAAAP8AEgAAAAAAAAAAAAAAQAgAAAAAAAAHAAIAAAAOAAAACgD#####AQAAAAAQAAABAAEAAAAKAAAAD#####8AAAABABZDRHJvaXRlUGVycGVuZGljdWxhaXJlAP####8AAAAAAA0AAAEBAQAAAAoAAAAQ#####wAAAAEACUNDZXJjbGVPQQD#####AAAAAAEBAAAACgAAAA8AAAAMAP####8AAAARAAAAEgAAAA0A#####wAAAP8AEgAAAQcAAgAAABP#####AAAAAQAMQ1RyYW5zbGF0aW9uAP####8AAAAKAAAADwAAAAgA#####wAAAP8AEgAAAQcAAAAAFAAAABX#####AAAAAQAJQ1BvbHlnb25lAf####8AAAD#AAIAAAAFAAAACgAAAA8AAAAWAAAAFAAAAAr#####AAAAAQAOQ01hcnF1ZVNlZ21lbnQB#####wAAAP8AAgAAAAALAAAAEgH#####AAAA#wACAAAAAAwAAAABAAABNP####8AAAABAApDQ2FsY0NvbnN0AP####8AAnBpABYzLjE0MTU5MjY1MzU4OTc5MzIzODQ2AAAAAkAJIftURC0YAAAAAQD#####AAJ5TwABNAAAAAJAEAAAAAAAAAAAAAEA#####wACeE8AATQAAAACQBAAAAAAAAD#####AAAAAQAKQ1BvaW50QmFzZQD#####AQAAAAAOAAFHAMAoAAAAAAAAAAAAAAAAAAAFAAFAScAAAAAAAECEBCj1wo9c#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8A2NjYABAAAAEBAQAAAAMBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8BAAAAAA4AAUkAwBwAAAAAAABANAAAAAAAAAUAAUBQgAAAAAAAAAAABP####8AAAABAAlDRHJvaXRlQUIA#####wEAAAAAEAAAAQABAAAAAwAAAAUAAAAOAP####8A2NjYABAAAAEBAQAAAAMAAAAGAAAADwD#####AQAAAAABAAAAAwAAAAUAAAAMAP####8AAAAHAAAACAAAAA0A#####wEAAAAADgABSgDALgAAAAAAAEAYAAAAAAAABQACAAAACf####8AAAACAAdDUmVwZXJlAP####8A5ubmAQEAAAADAAAABQAAAAoBAQEAAAACAAAAAAAAAAAAAAACAAAAAAAAAAAAAAACP#AAAAAAAAAAAAACP#AAAAAAAAD#####AAAAAQAQQ1BvaW50RGFuc1JlcGVyZQD#####AQAAAAAQAAFRAAAAAAAAAAAAQAgAAAAAAAAFAAAAAAsAAAACAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAQAP####8AAAADAAAABQAAAAgA#####wEAAAAADgACUTEAAAAAAAAAAABACAAAAAAAAAUAAAAADAAAAA0AAAAQAP####8AAAADAAAACgAAAAgA#####wEAAAAADgACUTIAAAAAAAAAAABACAAAAAAAAAUAAAAADAAAAA######AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAwAAAACQCIAAAAAAAAAAAAIAP####8BAAAAAA4AAlEzAAAAAAAAAAAAQAgAAAAAAAAFAAAAAA4AAAARAAAACAD#####AQAAAAAOAAJRNAAAAAAAAAAAAEAIAAAAAAAABQAAAAAQAAAAEQAAAAoA#####wEAAAAAEAAAAQABAAAADAAAABIAAAAWAP####8BAAAAAA4AAlIxAAAAAAAAAAAAQAgAAAAAAAAFAAE#7mZmZmZmZgAAABQAAAAQAP####8AAAAMAAAAEwAAAAgA#####wEAAAAADgACUjIAAAAAAAAAAABACAAAAAAAAAUAAAAAFQAAABYAAAAKAP####8BAAAAABAAAAEAAQAAABUAAAAXAAAAFgD#####AX9#fwAOAAJTMQAAAAAAAAAAAEAIAAAAAAAAAwABP7t#DUYpt#EAAAAYAAAAGAD#####AObm5gABAAAADAAAAA4AAAAQAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAj#wAAAAAAAAAAAAAj#wAAAAAAAA#####wAAAAIACENNZXN1cmVYAP####8AA3hTMQAAABoAAAAZ#####wAAAAIACENNZXN1cmVZAP####8AA3lTMQAAABoAAAAZAAAAAQD#####AAhOb21Qb2ludAAKMTAqeVMxK3hTMQAAAAQAAAAABAIAAAACQCQAAAAAAAAAAAAFAAAAHAAAAAUAAAAb#####wAAAAEAD0NWYWxldXJBZmZpY2hlZQD#####AQAAAABAKAAAAAAAAEAxAAAAAAAAAAAAGQ4AAf###wAAAAEAAAACAAAAAkBGgAAAAAAAAAAAAAIAAAAd#####wAAAAIAEkNMaWV1T2JqZXRQYXJQdExpZQD#####AQAAAAAAAB4AAAACQCQAAAAAAAAAAAAZAAAABQAAABkAAAAbAAAAHAAAAB0AAAAeAAAAHgD#####AAAAAAAAAB8AAAACQCQAAAAAAAAAAAAVAAAACQAAABUAAAAXAAAAGAAAABkAAAAbAAAAHAAAAB0AAAAeAAAAHwAAAB4A#####wEAAAAAAAAZAAAAAkAkAAAAAAAAAAAAGQAAAAIAAAAZAAAAGQAAAB4A#####wCkpKQAAAAhAAAAAkAkAAAAAAAAAAAAFQAAAAUAAAAVAAAAFwAAABgAAAAZAAAAIQAAAA0A#####wEAAAAAEAAAAQUAAQAAAAn#####AAAAAQAKQ1VuaXRleFJlcAD#####AAR1bml0AAAACwAAABoA#####wAAAAMAAAAEAwAAAAI#8AAAAAAAAAAAAAUAAAAkAAAACAD#####AQAAAAAQAAJXIgBAJAAAAAAAAEAYAAAAAAAAAQAAAAAFAAAAJf####8AAAABAAlDTG9uZ3VldXIA#####wAAAAMAAAAmAAAAGQD#####AQAAAAAQAAJPIgDAMQAAAAAAAMBBAAAAAAAACQAAAAALAAAAAwAAAAAFAAAAAgAAAAMAAAAABQAAAAH#####AAAAAQAJQ0Ryb2l0ZU9tAP####8BAAAAABAAAAEAAQAAAAsAAAAoAAAAAj#wAAAAAAAAAAAAAQD#####AARiaXMxAAExAAAAAj#wAAAAAAAAAAAAFQD#####AQAAAAEQAAABAAEAAAAoAT#wAAAAAAAAAAAAAQD#####AAN4eCcAATEAAAACP#AAAAAAAAAAAAAaAP####8AAAAoAAAABQAAACwAAAAVAP####8BAAAAARAAAAEAAQAAACgAP#AAAAAAAAAAAAABAP####8AA3l5JwABMQAAAAI#8AAAAAAAAAAAABoA#####wAAACgAAAAFAAAALwAAACEA#####wEAAAAAEAAAAQABAAAACwAAACj#####AAAAAQAMQ01vaW5zVW5haXJlAAAAAj#wAAAAAAAAAAAAAQD#####AARiaXMyAAExAAAAAj#wAAAAAAAAAAAAGgD#####AAAAKAAAAAUAAAAyAAAAGgD#####AAAAAwAAAAI#8AAAAAAAAAAAAAgA#####wEAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAFAAAAACgAAAA0#####wAAAAEAEUNQb2ludFBhckFic2Npc3NlAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAAADAAAABQAAAAJAHmZmZmZmZgAAAAEA#####wACeE4AATMAAAACQAgAAAAAAAAAAAAZAP####8BAAAAAQ4AAU0AwCwAAAAAAADAOQAAAAAAAAMAAAAACwAAAAJAGAAAAAAAAAAAAAJAFAAAAAAAAAAAAAEA#####wACeU4AAi0xAAAAIgAAAAI#8AAAAAAAAAAAABkA#####wEAAAABDgABTgDAKAAAAAAAAMA9AAAAAAAAAwAAAAALAAAABAAAAAACQBgAAAAAAAAAAAAFAAAANwAAAAQAAAAAAkAUAAAAAAAAAAAABQAAADkAAAABAP####8ACEFmZmljaGVOAAExAAAAAj#wAAAAAAAAAAAAAQD#####AAhBZmZpY2hlTQABMQAAAAI#8AAAAAAAAAAAABoA#####wAAAAMAAAAEAwAAAAI#8AAAAAAAAAAAAAUAAAA7AAAACAD#####AQAAAAAQAAAAAAAAAAAAAABACAAAAAAAAAMAAAAAOAAAAD0AAAAaAP####8AAAADAAAABAMAAAACP#AAAAAAAAAAAAAFAAAAPAAAAAgA#####wAAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAADgAAAA#AAAAGgD#####AAAAAwAAAAQDAAAAAj#wAAAAAAAAAAAABQAAADsAAAAIAP####8AAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAAA6AAAAQf####8AAAACAAxDQ29tbWVudGFpcmUA#####wAAAAAAwC4AAAAAAADAOAAAAAAAAAAAAEAQAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAABTQAAACQA#####wAAAAAAwCoAAAAAAADAOgAAAAAAAAAAAEIQAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAABTgAAAAEA#####wAEbnVtMAACMjMAAAACQDcAAAAAAAAAAAABAP####8AAnkwAAxpbnQobnVtMC8xMCkAAAADAgAAAAQDAAAABQAAAEUAAAACQCQAAAAAAAAAAAABAP####8AAngwAAxtb2QobnVtMCwxMCkAAAAGBgAAAAUAAABFAAAAAkAkAAAAAAAAAAAAGQD#####AAAAAAAQAAAAAAAAAAAAAABACAAAAAAAAAkAAAAACwAAAAUAAABHAAAABQAAAEYAAAABAP####8ABG51bTIAAjI3AAAAAkA7AAAAAAAAAAAAAQD#####AAJ5MgAMaW50KG51bTIvMTApAAAAAwIAAAAEAwAAAAUAAABJAAAAAkAkAAAAAAAAAAAAAQD#####AAJ4MgAMbW9kKG51bTIsMTApAAAABgYAAAAFAAAASQAAAAJAJAAAAAAAAAAAABkA#####wAAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAAsAAAAFAAAASwAAAAUAAABKAAAAAQD#####AARudW0xAAI1MQAAAAJASYAAAAAAAAAAAAEA#####wACeTEADGludChudW0xLzEwKQAAAAMCAAAABAMAAAAFAAAATQAAAAJAJAAAAAAAAAAAAAEA#####wACeDEADG1vZChudW0xLDEwKQAAAAYGAAAABQAAAE0AAAACQCQAAAAAAAAAAAAZAP####8AAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAAALAAAABQAAAE8AAAAFAAAATgAAAAEA#####wAIQWZmaWNoZU8AATEAAAACP#AAAAAAAAAAAAAaAP####8AAAADAAAABAMAAAACP#AAAAAAAAAAAAAFAAAAUQAAAAgA#####wEAAAAAEgABTwDAMQAAAAAAAMBCAAAAAAAACQAAAAAoAAAAUgAAABoA#####wAAACgAAAAEAwAAAAI#8AAAAAAAAAAAAAUAAAAq#####wAAAAEADENEcm9pdGVJbWFnZQD#####AAAAAAAQAAABAAIAAAApAAAAVAAAABoA#####wAAACgAAAAEAwAAAAI#8AAAAAAAAAAAAAUAAAAyAAAAJQD#####AAAAAAAQAAABAAIAAAAxAAAAVgAAABoA#####wAAACgAAAAEAwAAAAI#8AAAAAAAAAAAAAUAAAAsAAAAJQD#####AAAAAAAQAAABAAMAAAArAAAAWAAAABoA#####wAAACgAAAAEAwAAAAI#8AAAAAAAAAAAAAUAAAAvAAAAJQD#####AAAAAAAQAAABAAMAAAAuAAAAWgAAAAsA#####wEAAAAAAwAAACgAAAACQBAAAAAAAAAAAAAADAD#####AAAAVwAAAFwAAAANAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQABAAAAXQAAAA0A#####wEAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAIAAABdAAAADAD#####AAAAWwAAAFwAAAANAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQABAAAAYAAAAA0A#####wEAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAIAAABgAAAADAD#####AAAAVQAAAFwAAAANAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQACAAAAYwAAAA0A#####wEAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAEAAABjAAAADAD#####AAAAWQAAAFwAAAANAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQACAAAAZgAAAA0A#####wEAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAEAAABmAAAAJAD#####AAAAAADANgAAAAAAAMBGgAAAAAAAAAAAXxAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAgoZCNMKDIpKQAAACQA#####wAAAAAAwD0AAAAAAADAPwAAAAAAAAAAAGIQAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAIKGQjTCg0KSkAAAAkAP####8AAAAAAMAAAAAAAAAAwEcAAAAAAAAAAABlEAAAAAAAAAAAAAAAAAACAAAAAAAAAAAACChkI0woMSkpAAAAJAD#####AAAAAABAHAAAAAAAAMA9AAAAAAAAAAAAaBAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAgoZCNMKDMpKf####8AAAABAAVDRm9uYwD#####AARhYnNuAAltb2QoeCwxMCkAAAAGBv####8AAAACABFDVmFyaWFibGVGb3JtZWxsZQAAAAAAAAACQCQAAAAAAAAAAXgAAAAmAP####8ABG9yZG4ACWludCh4LzEwKQAAAAMCAAAABAMAAAAnAAAAAAAAAAJAJAAAAAAAAAABeAAAAAEA#####wACbjEAATEAAAACP#AAAAAAAAAAAAABAP####8AAm4yAAEyAAAAAkAAAAAAAAAAAAAAAQD#####AAJuMwACNzcAAAACQFNAAAAAAAAAAAABAP####8AAm40AAE1AAAAAkAUAAAAAAAAAAAAAQD#####AAJuNQACNTYAAAACQEwAAAAAAAAAAAABAP####8AAm42AAE2AAAAAkAYAAAAAAAAAAAAAQD#####AAJuNwABNwAAAAJAHAAAAAAAAAAAAAEA#####wACbjgAAjg1AAAAAkBVQAAAAAAAAAAAAQD#####AAJuOQACNTMAAAACQEqAAAAAAAAAAAAZAP####8BAAD#ABIAAlAxAAAAAAAAAAAAQAgAAAAAAAAJAAAAAAv#####AAAAAQAOQ0FwcGVsRm9uY3Rpb24AAABtAAAABQAAAG8AAAAoAAAAbgAAAAUAAABvAAAAGQD#####AQAA#wASAAJQMgAAAAAAAAAAAEAIAAAAAAAABwAAAAALAAAAKAAAAG0AAAAFAAAAcAAAACgAAABuAAAABQAAAHAAAAAZAP####8BAAD#ABIAAnAzAAAAAAAAAAAAQAgAAAAAAAAHAAAAAAsAAAAoAAAAbQAAAAUAAABxAAAAKAAAAG4AAAAFAAAAcQAAABkA#####wEAAP8AEgACUDQAAAAAAAAAAABACAAAAAAAAAkAAAAACwAAACgAAABtAAAABQAAAHIAAAAoAAAAbgAAAAUAAAByAAAAGQD#####AQAA#wASAAJQNQAAAAAAAAAAAEAIAAAAAAAACQAAAAALAAAAKAAAAG0AAAAFAAAAcwAAACgAAABuAAAABQAAAHMAAAAZAP####8BAAD#ABIAAlA2AAAAAAAAAAAAQAgAAAAAAAAJAAAAAAsAAAAoAAAAbQAAAAUAAAB0AAAAKAAAAG4AAAAFAAAAdAAAABkA#####wEAAP8AEgACUDcAAAAAAAAAAABACAAAAAAAAAkAAAAACwAAACgAAABtAAAABQAAAHUAAAAoAAAAbgAAAAUAAAB1AAAAGQD#####AQAA#wASAAJQOAAAAAAAAAAAAEAIAAAAAAAACQAAAAALAAAAKAAAAG0AAAAFAAAAdgAAACgAAABuAAAABQAAAHYAAAAZAP####8BAAD#ABIAAlA5AAAAAAAAAAAAQAgAAAAAAAAJAAAAAAsAAAAoAAAAbQAAAAUAAAB3AAAAKAAAAG4AAAAFAAAAdwAAACYA#####wAFdGVzdG4ABzEtKHg8MCkAAAAEAQAAAAI#8AAAAAAAAAAAAAQEAAAAJwAAAAAAAAACAAAAAAAAAAAAAXgAAAAaAP####8AAAAoAAAABAMAAAACP#AAAAAAAAAAAAAoAAAAgQAAAAUAAABvAAAACAD#####AAAA#wESAANQJzEAAAAAAAAAAABACAAAAAAAAAkAAAAAeAAAAIIAAAAaAP####8AAAAoAAAABAMAAAACP#AAAAAAAAAAAAAoAAAAgQAAAAUAAABwAAAACAD#####AAAA#wESAANQJzIAAAAAAAAAAABACAAAAAAAAAkAAAAAeQAAAIQAAAAaAP####8AAAAoAAAABAMAAAACP#AAAAAAAAAAAAAoAAAAgQAAAAUAAABxAAAACAD#####AAAA#wESAANQJzMAAAAAAAAAAABACAAAAAAAAAkAAAAAegAAAIYAAAAaAP####8AAAAoAAAABAMAAAACP#AAAAAAAAAAAAAoAAAAgQAAAAUAAAByAAAACAD#####AAAA#wESAANQJzQAAAAAAAAAAABACAAAAAAAAAkAAAAAewAAAIgAAAAaAP####8AAAAoAAAABAMAAAACP#AAAAAAAAAAAAAoAAAAgQAAAAUAAABzAAAACAD#####AAAA#wESAANQJzUAAAAAAAAAAABACAAAAAAAAAkAAAAAfAAAAIoAAAAaAP####8AAAAoAAAABAMAAAACP#AAAAAAAAAAAAAoAAAAgQAAAAUAAAB0AAAACAD#####AAAA#wESAANQJzYAAAAAAAAAAABACAAAAAAAAAkAAAAAfQAAAIwAAAAaAP####8AAAAoAAAABAMAAAACP#AAAAAAAAAAAAAoAAAAgQAAAAUAAAB1AAAACAD#####AAAA#wESAANQJzcAAAAAAAAAAABACAAAAAAAAAkAAAAAfgAAAI4AAAAaAP####8AAAAoAAAABAMAAAACP#AAAAAAAAAAAAAoAAAAgQAAAAUAAAB2AAAACAD#####AAAA#wESAANQJzgAAAAAAAAAAABACAAAAAAAAAkAAAAAfwAAAJAAAAAaAP####8AAAAoAAAABAMAAAACP#AAAAAAAAAAAAAoAAAAgQAAAAUAAAB3AAAACAD#####AAAA#wESAANQJzkAAAAAAAAAAABACAAAAAAAAAkAAAAAgAAAAJL#####AAAAAQAUQ0ltcGxlbWVudGF0aW9uUHJvdG8A#####wAIU3ltZXRyaWUAAAASAAAABgAAAAIAAACDAAAAVQAAAAEAAAAAlAADeU8xAAE0AAAAAkAQAAAAAAAAAAAAAQAAAACUAAN4TzEAATQAAAACQBAAAAAAAAAAAAABAAAAAJQAA2JpcwABMQAAAAI#8AAAAAAAAAAAAAEAAAAAlAADbnVtAAI1MQAAAAJASYAAAAAAAAAAAAEAAAAAlAABeQALaW50KG51bS8xMCkAAAADAgAAAAQDAAAABQAAAJgAAAACQCQAAAAAAAAAAAABAAAAAJQAAXgAC21vZChudW0sMTApAAAABgYAAAAFAAAAmAAAAAJAJAAAAAAAAAAAAAcAAAAAlAAAAFUAAAAIAQAAAJQAAAD#ABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAACDAAAAmwAAAAkAAAAAlAAAAP8AEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAIMAAACcAAAACgEAAACUAAAA#wAQAAABAAIAAACDAAAAnQAAAAoBAAAAlAAAAP8AEAAAAQACAAAAnQAAAJwAAAALAAAAAJQBAAD#AAIAAACdAAAAAj#TMzMzMzMzAAAAAAwAAAAAlAAAAJ4AAACgAAAADQAAAACUAAAA#wAQAAAAAAAAAAAAAABACAAAAAAAAAcAAgAAAKEAAAAKAAAAAJQBAAAAABAAAAEAAQAAAJ0AAACiAAAADgAAAACUAAAAAAAQAAABAQEAAACdAAAAowAAAA8AAAAAlAAAAAABAQAAAJ0AAACiAAAADAAAAACUAAAApAAAAKUAAAANAAAAAJQAAAD#ABAAAAEHAAIAAACmAAAAEAAAAACUAAAAnQAAAKIAAAAIAAAAAJQAAAD#ABAAAAEHAAAAAKcAAACoAAAAEQEAAACUAAAA#wACAAAABQAAAJ0AAACiAAAAqQAAAKcAAACdAAAAEgEAAACUAP8AAAEBAAAAAJ4AAAASAQAAAJQA#wAAAQEAAAAAnwAAACkA#####wAIU3ltZXRyaWUAAAASAAAABgAAAAIAAACFAAAAVwAAAAEAAAAArQADeU8xAAE0AAAAAkAQAAAAAAAAAAAAAQAAAACtAAN4TzEAATQAAAACQBAAAAAAAAAAAAABAAAAAK0AA2JpcwABMQAAAAI#8AAAAAAAAAAAAAEAAAAArQADbnVtAAI1MQAAAAJASYAAAAAAAAAAAAEAAAAArQABeQALaW50KG51bS8xMCkAAAADAgAAAAQDAAAABQAAALEAAAACQCQAAAAAAAAAAAABAAAAAK0AAXgAC21vZChudW0sMTApAAAABgYAAAAFAAAAsQAAAAJAJAAAAAAAAAAAAAcAAAAArQAAAFcAAAAIAQAAAK0AAAD#ABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAACFAAAAtAAAAAkAAAAArQAAAP8AEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAIUAAAC1AAAACgEAAACtAAAA#wAQAAABAAIAAACFAAAAtgAAAAoBAAAArQAAAP8AEAAAAQACAAAAtgAAALUAAAALAAAAAK0BAAD#AAIAAAC2AAAAAj#TMzMzMzMzAAAAAAwAAAAArQAAALcAAAC5AAAADQAAAACtAAAA#wAQAAAAAAAAAAAAAABACAAAAAAAAAcAAgAAALoAAAAKAAAAAK0BAAAAABAAAAEAAQAAALYAAAC7AAAADgAAAACtAAAAAAAQAAABAQEAAAC2AAAAvAAAAA8AAAAArQAAAAABAQAAALYAAAC7AAAADAAAAACtAAAAvQAAAL4AAAANAAAAAK0AAAD#ABAAAAEHAAIAAAC#AAAAEAAAAACtAAAAtgAAALsAAAAIAAAAAK0AAAD#ABAAAAEHAAAAAMAAAADBAAAAEQEAAACtAAAA#wACAAAABQAAALYAAAC7AAAAwgAAAMAAAAC2AAAAEgEAAACtAP8AAAEBAQAAALcAAAASAQAAAK0A#wAAAQEBAAAAuAAAACkA#####wAIU3ltZXRyaWUAAAASAAAABgAAAAIAAACHAAAAWQAAAAEAAAAAxgADeU8xAAE0AAAAAkAQAAAAAAAAAAAAAQAAAADGAAN4TzEAATQAAAACQBAAAAAAAAAAAAABAAAAAMYAA2JpcwABMQAAAAI#8AAAAAAAAAAAAAEAAAAAxgADbnVtAAI1MQAAAAJASYAAAAAAAAAAAAEAAAAAxgABeQALaW50KG51bS8xMCkAAAADAgAAAAQDAAAABQAAAMoAAAACQCQAAAAAAAAAAAABAAAAAMYAAXgAC21vZChudW0sMTApAAAABgYAAAAFAAAAygAAAAJAJAAAAAAAAAAAAAcAAAAAxgAAAFkAAAAIAQAAAMYAAAD#ABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAACHAAAAzQAAAAkAAAAAxgAAAP8AEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAIcAAADOAAAACgEAAADGAAAA#wAQAAABAAIAAACHAAAAzwAAAAoBAAAAxgAAAP8AEAAAAQACAAAAzwAAAM4AAAALAAAAAMYBAAD#AAIAAADPAAAAAj#TMzMzMzMzAAAAAAwAAAAAxgAAANAAAADSAAAADQAAAADGAAAA#wAQAAAAAAAAAAAAAABACAAAAAAAAAcAAgAAANMAAAAKAAAAAMYBAAAAABAAAAEAAQAAAM8AAADUAAAADgAAAADGAAAAAAAQAAABAQEAAADPAAAA1QAAAA8AAAAAxgAAAAABAQAAAM8AAADUAAAADAAAAADGAAAA1gAAANcAAAANAAAAAMYAAAD#ABAAAAEHAAIAAADYAAAAEAAAAADGAAAAzwAAANQAAAAIAAAAAMYAAAD#ABAAAAEHAAAAANkAAADaAAAAEQEAAADGAAAA#wACAAAABQAAAM8AAADUAAAA2wAAANkAAADPAAAAEgEAAADGAP8AAAEBAgAAANAAAAASAQAAAMYA#wAAAQECAAAA0QAAACkA#####wAIU3ltZXRyaWUAAAASAAAABgAAAAIAAACJAAAAWwAAAAEAAAAA3wADeU8xAAE0AAAAAkAQAAAAAAAAAAAAAQAAAADfAAN4TzEAATQAAAACQBAAAAAAAAAAAAABAAAAAN8AA2JpcwABMQAAAAI#8AAAAAAAAAAAAAEAAAAA3wADbnVtAAI1MQAAAAJASYAAAAAAAAAAAAEAAAAA3wABeQALaW50KG51bS8xMCkAAAADAgAAAAQDAAAABQAAAOMAAAACQCQAAAAAAAAAAAABAAAAAN8AAXgAC21vZChudW0sMTApAAAABgYAAAAFAAAA4wAAAAJAJAAAAAAAAAAAAAcAAAAA3wAAAFsAAAAIAQAAAN8AAAD#ABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAACJAAAA5gAAAAkAAAAA3wAAAP8AEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAIkAAADnAAAACgEAAADfAAAA#wAQAAABAAIAAACJAAAA6AAAAAoBAAAA3wAAAP8AEAAAAQACAAAA6AAAAOcAAAALAAAAAN8BAAD#AAIAAADoAAAAAj#TMzMzMzMzAAAAAAwAAAAA3wAAAOkAAADrAAAADQAAAADfAAAA#wAQAAAAAAAAAAAAAABACAAAAAAAAAcAAgAAAOwAAAAKAAAAAN8BAAAAABAAAAEAAQAAAOgAAADtAAAADgAAAADfAAAAAAAQAAABAQEAAADoAAAA7gAAAA8AAAAA3wAAAAABAQAAAOgAAADtAAAADAAAAADfAAAA7wAAAPAAAAANAAAAAN8AAAD#ABAAAAEHAAIAAADxAAAAEAAAAADfAAAA6AAAAO0AAAAIAAAAAN8AAAD#ABAAAAEHAAAAAPIAAADzAAAAEQEAAADfAAAA#wACAAAABQAAAOgAAADtAAAA9AAAAPIAAADoAAAAEgEAAADfAP8AAAEBAwAAAOkAAAASAQAAAN8A#wAAAQEDAAAA6v####8AAAABAAlDUm90YXRpb24A#####wAAACgAAAACQFaAAAAAAAAAAAAIAP####8AAAD#ABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAACLAAAA+AAAAAoA#####wAAAP8AEAAAAQABAAAAKAAAAIsAAAAKAP####8AAAD#ABAAAAEAAQAAACgAAAD5#####wAAAAIAE0NNYXJxdWVBbmdsZU9yaWVudGUA#####wD#AAAAAQAAAAFAMAAAAAAAAAAAAIsAAAAoAAAA+QAAAAASAP####8A#wAAAAEBAAAA+gAAABIA#####wD#AAAAAQEAAAD7#####wAAAAEAEkNBcmNEZUNlcmNsZURpcmVjdAD#####AP8AAAABAAAAKAAAAIsAAAD5AAAAKgD#####AAAAKAAAACIAAAACQFaAAAAAAAAAAAAIAP####8AAAD#ABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAACNAAABAAAAAAoA#####wAAAP8AEAAAAQABAAAAKAAAAI0AAAAKAP####8AAAD#ABAAAAEAAQAAACgAAAEBAAAAEgD#####AP8AAAABAQAAAQMAAAASAP####8A#wAAAAEBAAABAgAAACsA#####wD#AAAAAQAAAAFAMAAAAAAAAAAAAI0AAAAoAAABAQD#####AAAAAQAUQ0FyY0RlQ2VyY2xlSW5kaXJlY3QA#####wD#AAAAAQAAACgAAACNAAABAf####8AAAABABFDU3ltZXRyaWVDZW50cmFsZQD#####AAAAKAAAAAgA#####wAAAP8AEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAI8AAAEIAAAACgD#####AAAA#wAQAAABAAEAAACPAAAAKAAAAAoA#####wAAAP8AEAAAAQABAAAAKAAAAQkAAAASAP####8A#wAAAAECAAABCwAAABIA#####wD#AAAAAQIAAAEKAAAAEAD#####AAAAQAAAAEIAAAAIAP####8AAAD#ABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAACRAAABDv####8AAAABAAhDVmVjdGV1cgD#####AP8AAAAQAAABAAEAAACRAAABDwAAAAAvAP####8A#wAAABAAAAEAAQAAAEAAAABCAAAAAAoA#####wD#AAAAEAAAAQEBAAAAQAAAAJEAAAAKAP####8A#wAAABAAAAEBAQAAAEIAAAEPAAAAAQD#####AAFrAAE0AAAAAkAQAAAAAAAAAAAAGgD#####AAAAKAAAAAUAAAEUAAAACAD#####AAAA#wESAAFBAAAAAAAAAAAAQAgAAAAAAAAJAAAAAJMAAAEVAAAACgD#####AAAA#wAQAAABAQEAAAAoAAAAkwAAAAoA#####wAAAP8AEAAAAQEBAAAAKAAAARYAAAApAP####8AEk1lc3VyZSBkZSBsb25ndWV1cgAAAAUAAAABAAAAAgAAACgAAACT#####wAAAAEAC0NNZWRpYXRyaWNlAAAAARkBAAAAABAAAAEAAQAAACgAAACTAAAACQAAAAEZAQAAAAAQAAABBQAAAAAoAAAAkwAAAAsAAAABGQEAAAAAAQAAARsAAAACQDAAAAAAAAABAAAADAAAAAEZAAABGgAAARwAAAANAAAAARkBAAAAABAAAAEFAAEAAAEdAAAAIAEAAAEZAAAAKAAAAJMAAAApAP####8AEk1lc3VyZSBkZSBsb25ndWV1cgAAAAUAAAABAAAAAgAAACgAAAEWAAAAMAAAAAEgAQAAAAAQAAABAAEAAAAoAAABFgAAAAkAAAABIAEAAAAAEAAAAQUAAAAAKAAAARYAAAALAAAAASABAAAAAAEAAAEiAAAAAkAwAAAAAAAAAQAAAAwAAAABIAAAASEAAAEjAAAADQAAAAEgAQAAAAAQAAABBQABAAABJAAAACABAAABIAAAACgAAAEWAAAAFgD#####Af8AAAASAAFGAAAAAAAAAAAAQAgAAAAAAAAFAAE#585Z#OWfzwAAARgAAAAeAP####8A#wAAAAABJwAAAAQAAAAABQAAARQAAAACP#AAAAAAAAAAAAEnAAAAAgAAAScAAAEnAAAAAQD#####AANuMTAAAjE5AAAAAkAzAAAAAAAAAAAAGQD#####Af8AAAASAANQMTAAAAAAAAAAAABACAAAAAAAAAUAAAAACwAAACgAAABtAAAABQAAASkAAAAoAAAAbgAAAAUAAAEpAAAAGgD#####AAAAKAAAAAQDAAAAAj#wAAAAAAAAAAAAKAAAAIEAAAAFAAABKQAAAAgA#####wAAAP8BEgAEUCcxMAAAAAAAAAAAAEAIAAAAAAAACQAAAAEqAAABKwAAAAoA#####wAAAP8AEAAAAQEBAAAAKAAAASwAAAABAP####8AAmsyAAE0AAAAAkAQAAAAAAAAAAAAGgD#####AAAAKAAAAAQDAAAAAj#wAAAAAAAAAAAABQAAAS4AAAAIAP####8AAAD#ABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAAEsAAABLwAAABYA#####wEAAP8AEgABRQAAAAAAAAAAAEAIAAAAAAAABQABP+MmybJsmyQAAAEtAAAAHgD#####AP8AAAAAATEAAAAEAAAAAAMAAAAABQAAAS4AAAACP#AAAAAAAAAAAAExAAAAAgAAATEAAAExAAAACgD#####AAAA#wAQAAABAQEAAAAoAAABMAAAACf##########w==";
    this.liste_questions = [];
    this.liste_corrections = []; // Liste de questions corrigées
    let antecedents = [0, 0, 0],
      images = [0, 0, 0],
      k = [1, 1, 1],
      k1,
      k2,
      xO = 4,
      yO = 4,
      xu,
      yu,
      point_reseau; // k : rapports d'homothéties, (xO,yO) point de rencontre des droites et centre, les composantes du vecteur de translation : (xu,yu)
    let bis1 = 0,
      bis2 = 0,
      xx = 0,
      yy = 0,
      AfficheO = 1,
      AfficheN = 0,
      AfficheM = 0;
    let n = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
    let texte = ``,
      texte_corr = ``;
    let point = [[]];
    let transformation = parseInt(this.sup) - 1;
    let liste_type_de_questions = [
      [1, 2, 3, 4],
      [1, 2, 3, 4, 7],
      [1, 2, 3, 4, 7, 8],
      [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    ];
    let choix_transformation = combinaison_listes(
      liste_type_de_questions[transformation],
      3
    );
    xu = randint(-3, 3);
    if (xu == 0)
      yu = randint(-3, 3, [0]);

    // pas de vecteur nul de translation.
    else
      yu = randint(-3, 3);
    for (let j = 0; j < 3; j++) {
      if (choix_transformation[j] == 10) {
        k[j] = choice([2, 4]) * randint(-1, 1, [0]); // rapport d'homothétie < 1 ( 0.5 ou 0.25 )
        k2 = k[j];
      } else if (choix_transformation[j] == 9) {
        k[j] = choice([1, 2, 3]) * randint(-1, 1, [0]); // rapport d'homothétie >=1 (1,2 ou 3)
        k1 = k[j];
      }
      antecedents[j] = randint(0, 99);
      point[j] = image_point_par_transformation(
        choix_transformation[j],
        [antecedents[j] % 10, Math.floor(antecedents[j] / 10)],
        [xO, yO],
        [xu, yu],
        k[j]
      );
      images[j] = point[j][0] + point[j][1] * 10;
      // Limitation des points invariants
      if (choix_transformation[j] == 1 && images[j] % 11 == 0)
        point[j][0] = -1; // Point impossible sur (d1) pour sa symétrie
      if (choix_transformation[j] == 3 && Math.floor(images[j] / 10 == 4))
        point[j][0] = -1; // Point impossible sur (d3) pour sa symétrie
      if (choix_transformation[j] == 4 && images[j] % 10 == 4)
        point[j][0] = -1; // Point impossible sur  (d4) pour sa symétrie
      if ((choix_transformation[j] == 5 || choix_transformation[j] == 5) &&
        antecedents[j] == 44)
        point[j][0] = -1; // point O impossible pour rotation
      if (choix_transformation[j] == 10 && antecedents[j] == 44)
        point[j][0] = -1; // point O impossible par homothétie de rapport 1/k2

      // pour éviter les points en dehors des clous dans homothétie de rapport 1/k2
      if (point[j][0] - Math.floor(point[j][0]) == 0 &&
        point[j][1] - Math.floor(point[j][1]) == 0)
        point_reseau = true;
      else
        point_reseau = false;
      // On vérifie que l'image est bien un point du réseau sinon, on change.
      while (point[j][0] < 0 ||
        point[j][0] > 9 ||
        point[j][1] < 0 ||
        point[j][1] > 9 ||
        point_reseau == false) {
        if (choix_transformation[j] == 10) {
          k[j] = choice([2, 4]) * randint(-1, 1, [0]); // rapport d'homothétie < 1 ( 0.5 ou 0.25 )
          k2 = k[j];
        } else if (choix_transformation[j] == 9) {
          k[j] = choice([1, 2, 3]) * randint(-1, 1, [0]); // rapport d'homothétie >=1 (1,2 ou 3)
          k1 = k[j];
        }
        antecedents[j] = randint(0, 99);
        point[j] = image_point_par_transformation(
          choix_transformation[j],
          [antecedents[j] % 10, Math.floor(antecedents[j] / 10)],
          [xO, yO],
          [xu, yu],
          k[j]
        );
        images[j] = point[j][0] + point[j][1] * 10;
        // Limitation des points invariants
        if (choix_transformation[j] == 1 && images[j] % 11 == 0)
          point[j][0] = -1; // Point impossible sur (d1) pour sa symétrie
        if (choix_transformation[j] == 3 && Math.floor(images[j] / 10 == 4))
          point[j][0] = -1; // Point impossible sur (d3) pour sa symétrie
        if (choix_transformation[j] == 4 && images[j] % 10 == 4)
          point[j][0] = -1; // Point impossible sur  (d4) pour sa symétrie
        if ((choix_transformation[j] == 5 || choix_transformation[j] == 5) &&
          antecedents[j] == 44)
          point[j][0] = -1; // point O impossible pour rotation
        if (choix_transformation[j] == 10 && antecedents[j] == 44)
          point[j][0] = -1; // point O impossible par homothétie de rapport 1/k2


        // pour éviter les points en dehors des clous dans homothétie de rapport 1/k2
        if (point[j][0] - Math.floor(point[j][0]) == 0 &&
          point[j][1] - Math.floor(point[j][1]) == 0)
          point_reseau = true;
        else
          point_reseau = false;
      }
    }
    // n[i] est un tableau contenant -1 pour la transformation d'indice i si elle n'est pas utilisée, et contenant le numéro du point concerné si la transformation i est utilisée pour ce point.
    // Je l'utilise pour faire apparaître la correction liée au point et à la transformation.
    for (let j = 0; j < 3; j++) {
      n[choix_transformation[j] - 1] = antecedents[j];
    }
    for (let i = 0; i < 3; i++) {
      switch (choix_transformation[i]) {
        case 1:
          bis1 = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro du symétrique du point ${antecedents[i]} par rapport à la droite $(d_1)$.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` Le symétrique du point ${antecedents[i]} par rapport à $(d_1)$ est le point ${images[i]}.<br>`;
          break;

        case 2:
          bis2 = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro du symétrique du point ${antecedents[i]} par rapport à la droite $(d_2)$.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` Le symétrique du point ${antecedents[i]} par rapport à $(d_2)$ est le point ${images[i]}.<br>`;
          break;

        case 3:
          xx = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro du symétrique du point ${antecedents[i]} par rapport à la droite $(d_3)$.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` Le symétrique du point ${antecedents[i]} par rapport à $(d_3)$ est le point ${images[i]}.<br>`;
          break;

        case 4:
          yy = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro du symétrique du point ${antecedents[i]} par rapport à la droite $(d_4)$.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` Le symétrique du point ${antecedents[i]} par rapport à $(d_4)$ est le point ${images[i]}.<br>`;
          break;

        case 5:
          AfficheO = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro de  l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 90° dans le sens anti-horaire.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 90° dans le sens anti-horaire est le point ${images[i]}.<br>`;
          break;

        case 6:
          AfficheO = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro de  l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 90° dans le sens horaire.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 90° dans le sens horaire est le point ${images[i]}.<br>`;
          break;

        case 7:
          AfficheO = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro de l'image du point ${antecedents[i]} par la symétrie de centre O.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` L'image du point ${antecedents[i]} par la symétrie de centre O est le point ${images[i]}.<br>`;
          break;

        case 11:
          AfficheO = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro de l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 60° dans le sens anti-horaire.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 60° dans le sens anti-horaire est le point ${images[i]}.<br>`;
          break;

        case 12:
          AfficheO = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro de l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 60° dans le sens horaire.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 60° dans le sens horaire est le point ${images[i]}.<br>`;
          break;

        case 13:
          AfficheO = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro de l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 120° dans le sens anti-horaire.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 120° dans le sens anti-horaire est le point ${images[i]}.<br>`;
          break;

        case 14:
          AfficheO = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro de l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 120° dans le sens horaire.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 120° dans le sens horaire est le point ${images[i]}.<br>`;
          break;

        case 8:
          AfficheN = 1;
          AfficheM = 1;
          // AfficheOO=1
          texte +=
            num_alpha(i) +
            ` Donner le numéro de l'image du point ${antecedents[i]} par la translation qui transforme M en N.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` L'image du point ${antecedents[i]} par la translation qui transforme M en N est le point ${images[i]}.<br>`;
          break;

        case 9:
          AfficheO = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro de l'image du point ${antecedents[i]} par l'homothétie de centre O et de rapport ${k1}.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` L'image du point ${antecedents[i]} par l'homothétie de centre O et de rapport ${k1} est le point ${images[i]}.<br>`;
          break;

        case 10:
          AfficheO = 1;
          texte +=
            num_alpha(i) +
            ` Donner le numéro de l'image du point ${antecedents[i]} par l'homothétie de centre O et de rapport $${tex_fraction_reduite(
              1,
              k2
            )}$.<br>`;
          texte_corr +=
            num_alpha(i) +
            ` L'image du point ${antecedents[i]} par l'homothétie de centre O et de rapport $${tex_fraction_reduite(
              1,
              k2
            )}$ est le point ${images[i]}.<br>`;
          break;
      }
    }
    if (sortie_html) {
      /*
      booléens permettant l'affichage des éléments si =1 et le masquage si =0
      bis1 affiche la droite de coefficient directeur 1 passant par O'
      bis2 affiche la droite de coefficient directeur -1 passant par O'
      xx' affiche la droite horizontale passant par O'
      yy' affiche la droite verticale passant par O'
      AfficheO' affiche O' comme son nom l'indique.
      AfficheN, AffichM pour afficher les points M et N définissant la translation.
        
      */
      this.MG32code_pour_modifier_la_figure = `
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "t0", "${choix_transformation[0]}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "t1", "${choix_transformation[1]}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "t2", "${choix_transformation[2]}");						
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "num0", "${antecedents[0]}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "num1", "${antecedents[1]}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "num2", "${antecedents[2]}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "yO", "${yO}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "xO", "${xO}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "yN", "${yu}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "xN", "${xu}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "yy\'", "${yy}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "xx\'", "${xx}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "bis1", "${bis1}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "bis2", "${bis2}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "AfficheO", "${AfficheO}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "AfficheM", "${AfficheM}");
			mtg32App.giveFormula2("MG32svg${numero_de_l_exercice}", "AfficheN", "${AfficheN}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "k", "${k1}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "k2", "${k2}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "n1", "${n[0]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "n2", "${n[1]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "n3", "${n[2]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "n4", "${n[3]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "n5", "${n[4]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "n6", "${n[5]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "n7", "${n[6]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "n8", "${n[7]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "n9", "${n[8]}");	
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "n10", "${n[9]}");									
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "num0", "${antecedents[0]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "num1", "${antecedents[1]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "num2", "${antecedents[2]}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "yO", "${yO}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "xO", "${xO}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "yN", "${yu}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "xN", "${xu}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "yy\'", "${yy}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "xx\'", "${xx}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "bis1", "${bis1}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "bis2", "${bis2}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "AfficheO", "${AfficheO}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "AfficheM", "${AfficheM}");
			mtg32App.giveFormula2("MG32svgcorr${numero_de_l_exercice}", "AfficheN", "${AfficheN}");	

			
			
			mtg32App.calculate("MG32svg${numero_de_l_exercice}");
			mtg32App.display("MG32svg${numero_de_l_exercice}");
			mtg32App.calculate("MG32svgcorr${numero_de_l_exercice}");
			mtg32App.display("MG32svgcorr${numero_de_l_exercice}");
			`;
      this.liste_questions.push(texte);
      this.liste_corrections.push(texte_corr);
      liste_de_question_to_contenu_sans_numero(this);
    } else {
      texte = ``;
      texte_corr = ``;
      this.liste_questions.push(texte); // on envoie la question
      this.liste_corrections.push(texte_corr);
      liste_de_question_to_contenu_sans_numero(this);
    }
  };
  // this.besoin_formulaire_numerique = ['Transformations',5, '1 : Symétries axiales\n 2 : Symétries centrales\n 3 : Rotations\n 4 : Translations\n 5 : Homothéties\n'];
}
