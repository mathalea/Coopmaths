{"version":3,"file":"js/14409.f32673976bcd07c819dd.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3S12.js","webpack://mathalea/./src/js/exercices/5e/5S13-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { randint, listeQuestionsToContenu, choice, premiereLettreEnMajuscule, numAlpha, texFractionSigne, calcul, arrondi, arrondiVirgule, texteGras } from '../../modules/outils.js'\nimport { repere2, traceBarre, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Calculer des effectifs et des fréquences'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n* Calculer des effectifs et des fréquences.\n* @author Erwan DUPLESSY\n* 3S12\n* 2021-02-07\n*/\n\nexport default function calculEffectifFrequence () {\n  Exercice.call(this)\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Répondre aux questions à l\\'aide du graphique et de calculs.'\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = false // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.tailleDiaporama = 50\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.video = 'https://youtu.be/GWDDay-mdVA' // Id YouTube ou url\n  this.correctionDetailleeDisponible = false\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n\n  this.sup = 1 // A décommenter : valeur par défaut d'un premier paramètre\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.sup3 = false; // A décommenter : valeur par défaut d'un troisième paramètre\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function () {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    // let listeTypeDeQuestions_disponibles= [];\n    const lstQuadri = ['girafes', 'zèbres', 'gnous', 'buffles', 'gazelles', 'crocodiles', 'rhinocéros', 'léopards', 'guépards', 'hyènes', 'lycaons', 'servals', 'phacochères']\n    const lstOiseaux = ['hérons', 'marabouts', 'flamants roses', 'cigognes', 'grues', 'vautours']\n    const nbAnimaux = 4 + parseInt(this.sup) // nombre d'animaux différents dans l'énoncé (entre 5 et 7)\n    const nbQuadri = 3\n    const lstAnimauxExo = [] // liste des animaux uniquement cités dans l'exercice\n    const lstNombresAnimaux = [] // liste des effectifs de chaque animal\n    let lstVal = [] // liste des valeurs à éviter pour les effectifs\n    let N = 0; let nom = ''; let texte = ''; let texteCorr = ''\n\n    for (let i = 0; i < nbAnimaux; i++) {\n      N = randint(2, 10, lstVal) // choisit un nombre entre 2 et 10 sauf dans les valeurs à éviter\n      lstNombresAnimaux.push(N)\n      lstVal = lstVal.concat([N]) // valeurs à supprimer pour éviter des valeurs égales\n      if (i < nbQuadri) {\n        nom = choice(lstQuadri, lstAnimauxExo) // choisit un animal au hasard sauf parmi ceux déjà utilisés\n      } else {\n        nom = choice(lstOiseaux, lstAnimauxExo) // choisit un animal au hasard sauf parmi ceux déjà utilisés\n      }\n      lstAnimauxExo.push(nom)\n    }\n\n    const lstNomParc = ['Dramve', 'Fatenmin', 'Batderfa', 'Vihi', 'Genser', 'Barbetdou', 'Dramrendu', 'Secai', 'Cipeudram', 'Cigel', 'Lisino', 'Fohenlan', 'Farnfoss', 'Kinecardine', 'Zeffari', 'Barmwich', 'Swadlincote', 'Swordbreak', 'Loshull', 'Ruyron', 'Fluasall', 'Blueross', 'Vlane']\n\n    texte += 'Dans le parc naturel de ' + choice(lstNomParc) + ', il y a des animaux. '\n    texte += 'Certains sont des quadrupèdes ('\n    for (let i = 0; i < nbQuadri; i++) {\n      texte += lstAnimauxExo[i] + ', '\n    }\n    texte = texte.substring(0, texte.length - 2)\n    texte += '), et d\\'autres sont des oiseaux ('\n    for (let i = nbQuadri; i < nbAnimaux; i++) {\n      texte += lstAnimauxExo[i] + ', '\n    }\n    texte = texte.substring(0, texte.length - 2)\n    texte += '). '\n\n    texte += 'Voici un diagramme en barres qui donne le nombre d’individus pour chaque espèce.<br>'\n    texte += numAlpha(0) + ' Quel est l\\'effectif des ' + lstAnimauxExo[0] + ' ?<br>'\n    texte += ajouteChampTexteMathLive(this, 1)\n    texte += numAlpha(1) + ' Calculer la fréquence des ' + lstAnimauxExo[1] + ' ? Donner le résultat sous la forme d\\'un pourcentage.<br>'\n    texte += ajouteChampTexteMathLive(this, 2)\n    texte += numAlpha(2) + ' Calculer l\\'effectif des quadrupèdes ? <br>'\n    texte += ajouteChampTexteMathLive(this, 3)\n    texte += numAlpha(3) + ' Calculer la fréquence des oiseaux ? Donner le résultat sous la forme d\\'un pourcentage.<br>'\n    texte += ajouteChampTexteMathLive(this, 4)\n\n    texte += 'Les pourcentages seront éventuellement arrondis à 0,1% près. <br>'\n\n    const coef = 1\n\n    const r = repere2({\n      grilleX: false,\n      grilleY: 'pointilles',\n      xThickListe: [],\n      xLabelListe: [],\n      yUnite: 1 / coef,\n      yThickDistance: 1 * coef,\n      yMax: 11,\n      xMin: 0,\n      xMax: 10,\n      yMin: 0,\n      axeXStyle: '',\n      yLegende: \"Nombre d'individus\"\n    })\n\n    const lstElementGraph = []\n    for (let i = 0; i < nbAnimaux; i++) {\n      lstElementGraph.push(traceBarre((((r.xMax - r.xMin) / (nbAnimaux + 1)) * (i + 1)), lstNombresAnimaux[i], premiereLettreEnMajuscule(lstAnimauxExo[i]), { unite: 1 / coef }))\n    }\n    texte += '<br>' + mathalea2d({ xmin: -5, xmax: 11, ymin: -4, ymax: 11, pixelsParCm: 30, scale: 1 }, r, lstElementGraph)\n\n    // début de la correction\n    // question 1\n    texteCorr += numAlpha(0) + texteGras(' D\\'après le graphique, il y a ' + lstNombresAnimaux[0] + ' ' + lstAnimauxExo[0] + '. <br>')\n    setReponse(this, 1, lstNombresAnimaux[0])\n    // question 2\n    let Ntotal = lstNombresAnimaux[0]\n    texteCorr += numAlpha(1) + ' L\\'effectif total des animaux est : ' + lstNombresAnimaux[0]\n    for (let i = 1; i < nbAnimaux; i++) {\n      texteCorr += ' + ' + lstNombresAnimaux[i]\n      Ntotal += lstNombresAnimaux[i]\n    }\n\n    texteCorr += ' = ' + Ntotal + '. '\n    texteCorr += ' D\\'après le graphique, il y a ' + lstNombresAnimaux[1] + ' ' + lstAnimauxExo[1] + '. <br>'\n    texteCorr += ' La fréquence (ou la proportion) de  ' + lstAnimauxExo[1] + ' est : $ ' + texFractionSigne(lstNombresAnimaux[1], Ntotal) + '$ '\n    // test de l'arrondi\n    if (calcul(lstNombresAnimaux[1] / Ntotal) === arrondi(lstNombresAnimaux[1] / Ntotal, 3)) {\n      texteCorr += '= '\n    } else {\n      texteCorr += '$\\\\approx $ '\n    }\n    texteCorr += arrondiVirgule(lstNombresAnimaux[1] / Ntotal, 3) + '. <br>'\n    texteCorr += texteGras('La fréquence des ' + lstAnimauxExo[1] + ' est donc : ' + arrondiVirgule(100 * lstNombresAnimaux[1] / Ntotal, 1) + '%. <br>')\n    setReponse(this, 2, [calcul(100 * lstNombresAnimaux[1] / Ntotal, 1), `${calcul(100 * lstNombresAnimaux[1] / Ntotal, 1)}\\\\%`])\n    // question 3\n    texteCorr += numAlpha(2) + ' On fait la somme des effectifs de chaque espèce de quadrupèdes : '\n    let NTotalQuadri = lstNombresAnimaux[0]\n    texteCorr += lstNombresAnimaux[0]\n    for (let i = 1; i < nbQuadri; i++) {\n      texteCorr += ' + ' + lstNombresAnimaux[i]\n      NTotalQuadri += lstNombresAnimaux[i]\n    }\n    texteCorr += '. <br>'\n    texteCorr += texteGras('L\\'effectif des quadrupèdes est donc : ' + NTotalQuadri + '.<br>')\n    setReponse(this, 3, NTotalQuadri)\n    // question 4\n    let NTotalOiseaux = lstNombresAnimaux[3]\n    texteCorr += numAlpha(3) + ' L\\'effectif total des oiseaux est : ' + lstNombresAnimaux[3]\n    for (let i = 4; i < nbAnimaux; i++) {\n      texteCorr += ' + ' + lstNombresAnimaux[i]\n      NTotalOiseaux += lstNombresAnimaux[i]\n    }\n    texteCorr += ' = ' + NTotalOiseaux + '. '\n    texteCorr += ' L\\'effectif total des animaux est : ' + Ntotal + '. <br>'\n    texteCorr += ' La fréquence (ou la proportion) d\\'oiseaux est : $ ' + texFractionSigne(NTotalOiseaux, Ntotal) + '$ '\n    // test de l'arrondi\n    if (calcul(NTotalOiseaux / Ntotal) === arrondi(NTotalOiseaux / Ntotal, 3)) {\n      texteCorr += '= '\n    } else {\n      texteCorr += '$\\\\approx $ '\n    }\n    texteCorr += arrondiVirgule(NTotalOiseaux / Ntotal, 3) + '. <br>'\n    texteCorr += texteGras('La fréquence des oiseaux est donc : ' + arrondiVirgule(100 * NTotalOiseaux / Ntotal, 1) + '%. <br>')\n    setReponse(this, 4, [calcul(100 * NTotalOiseaux / Ntotal, 1), calcul(100 * NTotalOiseaux / Ntotal, 1) + '\\\\%'])\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  this.besoinFormulaireNumerique = ['Nombre d\\'espèces différentes', 3, ' choix 1 : 5 espèces\\n choix 2 : 6 espèces\\n choix 3 : 7 espèces']\n} // Fin de l'exercice.\n","import calculEffectifFrequence from '../3e/3S12.js'\nexport const titre = 'Calculer des effectifs et des fréquences'\n\n/**\n * Calculer des effectifs et des fréquences\n * @author Guillaume Valmont\n * reference 5S13-1\n * Publié le 08/08/2021\n */\nexport default function calculEffectifFrequence5e () {\n  calculEffectifFrequence.call(this)\n  this.titre = titre\n  this.sup = 1\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","calculEffectifFrequence","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","tailleDiaporama","pasDeVersionLatex","pas_de_version_HMTL","video","correctionDetailleeDisponible","sup","nouvelleVersion","listeQuestions","listeCorrections","lstQuadri","lstOiseaux","nbAnimaux","parseInt","lstAnimauxExo","lstNombresAnimaux","lstVal","N","nom","texte","texteCorr","i","randint","push","concat","choice","substring","length","numAlpha","ajouteChampTexteMathLive","r","repere2","grilleX","grilleY","xThickListe","xLabelListe","yUnite","yThickDistance","yMax","xMin","xMax","yMin","axeXStyle","yLegende","lstElementGraph","traceBarre","premiereLettreEnMajuscule","unite","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","texteGras","setReponse","Ntotal","texFractionSigne","calcul","arrondi","arrondiVirgule","NTotalQuadri","NTotalOiseaux","listeQuestionsToContenu","besoinFormulaireNumerique","calculEffectifFrequence5e","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}