{"version":3,"file":"js/27227.ee7e20617f88badc7fbd.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,egal,randint,choice,shuffle,nombreAvecEspace,arcenciel,texcolors} from '../../modules/outils.js'\nimport {pavage,tracePoint,labelPoint,segment,rotation,rotationAnimee,codeAngle,texteParPosition,mathalea2d,} from '../../modules/2d.js'\nexport const titre = 'Trouver l’image d’une figure par une rotation dans un pavage'\n\n/**\n * Publié le 16/12/2020\n * @author Jean-Claude Lhote\n * Trouver l'image par sune rotation d'une figure dans un pavage\n * Ref 3G12\n */\nexport default function Pavage_et_rotation2d() {\n\t\"use strict\";\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.consigne = \"\";\n\tthis.nbQuestions = 3;\n\tthis.nbQuestionsModifiable = true;\n\tthis.correctionDetailleeDisponible = true;\n\tthis.correctionDetaillee = true;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.sup = 1; // 1 pour des pavages modestes, 2 pour des plus grand.\n\tthis.sup2 = false; // On cache les barycentres par défaut.\n\tthis.sup3 = 7;\n\tcontext.isHtml ? (this.spacingCorr = 2.5) : (this.spacingCorr = 1.5);\n\tthis.nouvelleVersion = function () {\n\t\tlet videcouples = function (tableau) {\n\t\t\tfor (let k = 0; k < tableau.length; k++) {\n\t\t\t\tif (tableau[k][0] == tableau[k][1]) {\n\t\t\t\t\ttableau.splice(k, 1);\n\t\t\t\t}\n\t\t\t\tfor (let j = k + 1; j < tableau.length; j++) {\n\t\t\t\t\tif (tableau[k][1] == tableau[j][0]) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tableau;\n\t\t};\n\t\tlet compare2polys = function (poly1, poly2) {\n\t\t\tif (comparenbsommets(poly1, poly2)) {\n\t\t\t\tif (comparesommets(poly1, poly2))\n\t\t\t\t\treturn true;\n\n\t\t\t\telse\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\telse\n\t\t\t\treturn false;\n\t\t};\n\t\tlet comparenbsommets = function (poly1, poly2) {\n\t\t\tif (poly1.listePoints.length == poly2.listePoints.length) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn false;\n\t\t};\n\n\t\tlet compare2sommets = function (sommet1, sommet2) {\n\t\t\tif (egal(sommet1.x, sommet2.x, 0.1) && egal(sommet1.y, sommet2.y, 0.1)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn false;\n\t\t};\n\t\tlet comparesommets = function (poly1, poly2) {\n\t\t\tlet trouve = false, trouves = 0;\n\t\t\tif (comparenbsommets(poly1, poly2))\n\t\t\t\tfor (let P of poly1.listePoints) {\n\t\t\t\t\tfor (let M of poly2.listePoints) {\n\t\t\t\t\t\tif (compare2sommets(M, P)) {\n\t\t\t\t\t\t\ttrouve = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (trouve)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (trouve) {\n\t\t\t\t\t\ttrouves++;\n\t\t\t\t\t\ttrouve = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttrouves -= 100;\n\t\t\t\t\t}\n\t\t\t\t\tif (trouves < 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif (trouves == poly1.listePoints.length)\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t};\n\n\t\tlet rotaccion = function (pavage, A, angle, numero) {\n\t\t\tlet poly = pavage.polygones[numero - 1];\n\t\t\tlet pol;\n\t\t\tlet result = -1;\n\t\t\tlet sympoly = rotation(poly, A, angle);\n\t\t\tfor (let k = 0; k < pavage.polygones.length; k++) {\n\t\t\t\tpol = pavage.polygones[k];\n\t\t\t\tif (compare2polys(sympoly, pol)) {\n\t\t\t\t\treturn k + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\n\t\tlet objets = [], objetsCorrection = [];\n\t\tlet taillePavage = parseInt(this.sup);\n\t\tif (taillePavage < 1 || taillePavage > 2) {\n\t\t\ttaillePavage = 1;\n\t\t}\n\t\tif (this.nbQuestions > 5) {\n\t\t\ttaillePavage = 2;\n\t\t}\n\t\tthis.listeCorrections = [];\n\t\tthis.listeQuestions = [];\n\t\tlet Nx, Ny, index1, A, image, couples = [], tailles = [], monpavage, fenetre;\n\t\tlet texte = \"\", texteCorr = \"\", type_de_pavage = parseInt(this.sup);\n\t\tlet nombreTentatives, nombrePavageTestes = 1;\n\t\tlet sensdirect, M, N, trace, label, P1, P2, P3, t;\n\t\tlet alphas = [[60, 120, 180], [90, 180], [60, 120, 180], [60, 120, 180, 90], [45, 90, 135, 180], [60, 120, 180], [60, 120, 180]], alpha;\n\t\tif (this.sup3 == 8) {\n\t\t\ttype_de_pavage = randint(1, 7);\n\t\t}\n\t\telse {\n\t\t\ttype_de_pavage = parseInt(this.sup3);\n\t\t}\n\t\twhile (couples.length < this.nbQuestions && nombrePavageTestes < 6) {\n\t\t\tnombreTentatives = 0;\n\t\t\tmonpavage = pavage(); // On crée l'objet Pavage qui va s'appeler monpavage\n\t\t\ttailles = [[[3, 2], [3, 2], [2, 2], [2, 2], [2, 2], [2, 2], [3, 2]], [[4, 3], [4, 3], [3, 3], [3, 3], [3, 3], [3, 2], [5, 3]]];\n\n\t\t\tNx = tailles[taillePavage - 1][type_de_pavage - 1][0];\n\t\t\tNy = tailles[taillePavage - 1][type_de_pavage - 1][1];\n\t\t\tmonpavage.construit(type_de_pavage, Nx, Ny, 3); // On initialise toutes les propriétés de l'objet.\n\t\t\tfenetre = monpavage.fenetre;\n\t\t\t// fenetreMathalea2d = [fenetre.xmin, fenetre.ymin, fenetre.xmax, fenetre.ymax];\n\t\t\twhile (couples.length < this.nbQuestions + 2 && nombreTentatives < 3) { // On cherche d pour avoir suffisamment de couples\n\t\t\t\tcouples = []; // On vide la liste des couples pour une nouvelle recherche\n\n\t\t\t\tindex1 = randint(Math.floor(monpavage.nb_polygones / 3), Math.ceil(monpavage.nb_polygones * 2 / 3)); // On choisit 1 point dans un des polygones\n\t\t\t\tif (choice([true, false])) {\n\t\t\t\t\tA = monpavage.polygones[index1].listePoints[randint(0, monpavage.polygones[index1].listePoints.length - 1)]; // On choisit un sommet\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tA = monpavage.barycentres[index1]; // Ou on choisit un barycentre\n\t\t\t\t}\n\t\t\t\twhile (A.x - 5 < fenetre.xmin || A.x + 5 > fenetre.xmax || A.y - 5 < fenetre.ymin || A.y + 5 > fenetre.ymax) {\n\t\t\t\t\tindex1 = randint(Math.floor(monpavage.nb_polygones / 3), Math.ceil(monpavage.nb_polygones * 2 / 3)); // On choisit 1 point dans un des polygones\n\t\t\t\t\tif (choice([true, false])) {\n\t\t\t\t\t\tA = monpavage.polygones[index1].listePoints[randint(0, monpavage.polygones[index1].listePoints.length - 1)]; // On choisit un sommet\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tA = monpavage.barycentres[index1]; // Ou on choisit un barycentre\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tA.nom = 'A';\n\t\t\t\tA.positionLabel = 'above left';\n\t\t\t\ttrace = tracePoint(A); // la trace du centre de symétrie sera rouge et grosse\n\t\t\t\tlabel = labelPoint(A);\n\t\t\t\ttrace.epaisseur = 3;\n\t\t\t\ttrace.taille = 4;\n\t\t\t\ttrace.color = 'red';\n\t\t\t\talpha = alphas[type_de_pavage - 1][randint(0, alphas[type_de_pavage - 1].length - 1)];\n\t\t\t\tsensdirect = choice([1, -1]);\n\t\t\t\tfor (let i = 1; i <= monpavage.nb_polygones; i++) { //on crée une liste des couples (antécédents, images)\n\t\t\t\t\timage = rotaccion(monpavage, A, alpha * sensdirect, i);\n\t\t\t\t\tif (image != -1) { // si l'image du polygone i existe, on ajoute le couple à la liste\n\t\t\t\t\t\tcouples.push([i, image]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcouples = videcouples(couples); //supprime tous les couples en double (x,y)=(y,x)\n\t\t\t\tnombreTentatives++;\n\t\t\t}\n\t\t\tif (couples.length < this.nbQuestions) {\n\t\t\t\tif (this.sup3 == 7) {\n\t\t\t\t\ttype_de_pavage = (type_de_pavage + 1) % 5 + 1;\n\t\t\t\t}\n\t\t\t\tnombrePavageTestes++;\n\t\t\t}\n\t\t}\n\t\tif (couples.length < this.nbQuestions) {\n\t\t\tconsole.log('trop de questions, augmentez la taille du pavage');\n\t\t\treturn;\n\t\t}\n\n\t\tobjets.push(trace); // le centre est OK on pousse sa trace\n\t\tobjets.push(label); // et son label\n\t\tcouples = shuffle(couples); // on mélange les couples\n\t\tfor (let i = 0; i < monpavage.nb_polygones; i++) {\n\t\t\tobjets.push(texteParPosition(nombreAvecEspace(i + 1), monpavage.barycentres[i].x + 0.5, monpavage.barycentres[i].y, 'milieu', 'gray', 1, 0, true));\n\t\t}\n\t\tif (this.sup2) { // Doit-on montrer les centres des figures ?\n\t\t\tfor (let i = 0; i < monpavage.nb_polygones; i++) {\n\t\t\t\tobjets.push(monpavage.tracesCentres[i]);\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < monpavage.nb_polygones; i++) { // il faut afficher tous les polygones du pavage\n\t\t\tobjets.push(monpavage.polygones[i]);\n\t\t}\n\t\ttexte = mathalea2d(fenetre, objets); // monpavage.fenetre est calibrée pour faire entrer le pavage dans une feuille A4\n\t\ttexte += `<br>Dans la rotation de centre $A$ et d\\'angle ${alpha}° dans le sens `;\n\t\tif (sensdirect == 1) {\n\t\t\ttexte += `inverse des aiguilles d'une montre.<br>`;\n\t\t}\n\t\telse {\n\t\t\ttexte += `des aiguilles d'une montre.<br>`;\n\t\t}\n\t\ttexteCorr += `Dans la rotation de centre $A$ et d\\'angle ${alpha}° dans le sens `;\n\t\tif (sensdirect == 1) {\n\t\t\ttexteCorr += `inverse des aiguilles d'une montre, <br>`;\n\t\t}\n\t\telse {\n\t\t\ttexteCorr += `des aiguilles d'une montre, <br>`;\n\t\t}\n\t\tfor (let i = 0; i < this.nbQuestions; i++) {\n\t\t\ttexte += `Quel est l'image de la figure $${couples[i][0]}$ ?<br>`;\n\t\t\ttexteCorr += `- l'image de la figure $${couples[i][0]}$ est la figure ${couples[i][1]}.<br>`;\n\n\t\t\tif (this.correctionDetaillee) {\n\t\t\t\tt = this.nbQuestions * 3;\n\t\t\t\tM = monpavage.barycentres[couples[i][0] - 1];\n\t\t\t\tN = monpavage.barycentres[couples[i][1] - 1];\n\t\t\t\tP1 = monpavage.polygones[couples[i][0] - 1];\n\t\t\t\tP1.color = texcolors(i);\n\t\t\t\tP1.couleurDeRemplissage = texcolors(i);\n\t\t\t\tP1.opaciteDeRemplissage = 0.5;\n\t\t\t\tP1.epaisseur = 2;\n\t\t\t\tP2 = monpavage.polygones[couples[i][1] - 1];\n\t\t\t\tP2.color = texcolors(i);\n\t\t\t\tP2.couleurDeRemplissage = texcolors(i);\n\t\t\t\tP2.opaciteDeRemplissage = 0.5;\n\t\t\t\tP2.epaisseur = 2;\n\t\t\t\tP3 = rotationAnimee(P1, A, alpha * sensdirect, `begin=\"${i * 3}s;${i * 3 + t}s;${i * 3 + t * 2}s\" end=\"${i * 3 + 2}s;${i * 3 + t + 2}s;${i * 3 + t * 2 + 2}s\" dur=\"2s\" repeatCount=\"indefinite\" repeatDur=\"${9 * this.nbQuestions}s\" id=\"poly-${i}-anim\"`);\n\t\t\t\tP3.color = texcolors(i);\n\t\t\t\tP3.epaisseur = 2;\n\t\t\t\tobjetsCorrection.push(tracePoint(M, N), segment(A, M, texcolors(i)), segment(A, N, arcenciel(i)), codeAngle(M, A, N, 0.8, '', arcenciel(i), 1, 1, 'blue', 0.2, true), P1, P2, P3);\n\n\t\t\t}\n\t\t}\n\t\tif (this.correctionDetaillee) {\n\t\t\ttexteCorr += mathalea2d(fenetre, objets, objetsCorrection);\n\t\t}\n\t\tthis.listeQuestions.push(texte);\n\t\tthis.listeCorrections.push(texteCorr);\n\t\tlisteQuestionsToContenu(this);\n\t};\n\tthis.besoinFormulaireNumerique = ['Taille du pavage (la grande est automatique au-delà de 5 questions)', 2, '1 : Taille modeste\\n 2 : Grande taille'];\n\tthis.besoinFormulaire2CaseACocher = [\"Montrer les centres\"];\n\tthis.besoinFormulaire3Numerique = ['Choix du pavage', 8, '1 : Pavage de triangles équilatéraux\\n2 : Pavage de carrés\\n3 : Pavage d\\'hexagones réguliers\\n4 : Pavage 3².4.3.4\\n5 : Pavage 8².4\\n 6 : Pavage de losanges (hexagonal d\\'écolier)\\n7 : Pavage 6.3.6.3\\n8 : Un des sept pavages au hasard'];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Pavage_et_rotation2d","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","correctionDetailleeDisponible","correctionDetaillee","nbCols","nbColsCorr","sup","sup2","sup3","context","spacingCorr","nouvelleVersion","videcouples","tableau","k","length","splice","j","comparenbsommets","poly1","poly2","listePoints","comparesommets","trouve","trouves","P","M","sommet1","sommet2","egal","x","y","rotaccion","pavage","A","angle","numero","pol","poly","polygones","sympoly","rotation","objets","objetsCorrection","taillePavage","parseInt","listeCorrections","listeQuestions","Nx","Ny","index1","image","monpavage","fenetre","nombreTentatives","sensdirect","N","trace","label","P1","P2","P3","t","alpha","couples","tailles","texte","texteCorr","type_de_pavage","nombrePavageTestes","alphas","randint","construit","Math","floor","nb_polygones","ceil","choice","barycentres","xmin","xmax","ymin","ymax","nom","positionLabel","tracePoint","labelPoint","epaisseur","taille","color","i","push","console","log","shuffle","texteParPosition","nombreAvecEspace","tracesCentres","mathalea2d","texcolors","couleurDeRemplissage","opaciteDeRemplissage","rotationAnimee","segment","arcenciel","codeAngle","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}