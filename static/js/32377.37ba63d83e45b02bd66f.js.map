{"version":3,"file":"js/32377.37ba63d83e45b02bd66f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta3s21.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, calcul, arrondiVirgule, nombreAvecEspace, texteEnCouleurEtGras } from '../../modules/outils.js'\n\nexport const titre = 'Stabilisation des fréquences'\n\n/**\n * Reconnaître une fonction affine\n* @author Erwan Duplessy\n* 3S21\n* D'après le document \"Attendus en fin de 3eme\"\n* On donne les fréquences d’apparition de chaque face d’un dé pour 10000 lancers.\n* L’élève interprète les résultats en les comparant aux probabilités théoriques.\n*/\n\nexport default function StabilisationFrequence () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n\n  this.sup = 1 // situation 1=dés\n  this.sup2 = 10000 // nbLancers\n  this.sup3 = false // true = équiprobable, false = jeu truqué\n\n  if (context.isHtml) {\n    this.consigne = '<center><a title=\"Diacritica, CC BY-SA 3.0 &lt;https://creativecommons.org/licenses/by-sa/3.0&gt;, via Wikimedia Commons\" href=\"https://commons.wikimedia.org/wiki/File:Dice_(typical_role_playing_game_dice).jpg\"><img width=\"128\" alt=\"Dice (typical role playing game dice)\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Dice_%28typical_role_playing_game_dice%29.jpg/128px-Dice_%28typical_role_playing_game_dice%29.jpg\"></a></center>'\n  }\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function () {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4] // tableau à compléter par valeurs possibles des types de questions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n      const nbFaces = 2 * randint(1, 4) + 2 // nombre de faces du dé : 4, 6, 8, ou 10. Avec 12, le tableau devient trop grand....\n      const nbLancers = 10000 // nombre de lancers\n      const tabcoul = ['rouges', 'vertes', 'bleues', 'noires']\n      let tabEff = [] // tableau d'effectifs temporaires - une dimension [eff]\n      let tabEffModif = [] // tableau d'effectifs temporaires après modification - une dimension [eff]\n      let S1 = 0; let S2 = 0 // effectif total\n      const tabRes = [] // tableau des fréquences observées - deux dimensions [val, freq]\n      const tabProba = [] // tableau des proba théoriques, à comparer à tabRes\n      const tabValeur = [] // numéro de la face du dé\n      let titreligne = 'Numéro de la face' // ou \"couleur de la boule\"\n      let tabtitrecolonne = tabValeur // ou tabcoul\n      let face = 0\n      let N = 0 // largeur du tableau\n\n      switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n        case 1:\n          // avec un dé\n          // Cas où les fréquesnces rejoignent les proba\n          texte += `On lance un dé équilibré à ${nbFaces} faces ${nombreAvecEspace(nbLancers)} fois. On étudie les fréquences d'apparition de chaque face. On obtient les résultats suivants : <br>`\n          for (let i = 0; i < nbFaces; i++) {\n            tabValeur[i] = i + 1\n            tabEff[i] = [randint(90, 110)]\n            S1 += parseInt(tabEff[i])\n          }\n          for (let i = 0; i < nbFaces; i++) {\n            tabRes[i] = [i, calcul(tabEff[i] / S1)]\n          }\n          texteCorr += 'Le dé est équilibré, donc c\\'est une situation d\\'équiprobabilité. Chaque face du dé a une probabilité égale à '\n          switch (nbFaces) {\n            case 4:\n              texteCorr += ' $\\\\dfrac{1}{4} = 25\\\\%$ '\n              break\n            case 6:\n              texteCorr += ' $\\\\dfrac{1}{6} \\\\approx  16.7\\\\%$ '\n              break\n            case 8:\n              texteCorr += ' $\\\\dfrac{1}{8} = 12.5\\\\%$ '\n              break\n            case 10:\n              texteCorr += ' $\\\\dfrac{1}{10} = 10\\\\%$ '\n              break\n            case 12:\n              texteCorr += ' $\\\\dfrac{1}{12} \\\\approx 8.3\\\\%$ '\n              break\n          }\n          texteCorr += 'd\\'apparaitre. <br>'\n          texteCorr += `Comme le dé a été lancé ${nombreAvecEspace(nbLancers)} fois, les fréquences doivent se stabiliser autour de la probabilité. `\n          texteCorr += 'Les valeurs du tableau de fréquences sont toutes proches de cette probabilité. <br>'\n          texteCorr += texteEnCouleurEtGras('Conclusion : les résultats semblent respecter le principe de stabilisation des fréquences ; le tableau est bien compatible avec un lancer aléatoire de dé. ')\n          break\n\n        case 2:\n          // avec un dé\n          // Cas où les fréquences ne rejoignent pas les proba\n          texte += `On lance un dé équilibré à ${nbFaces} faces ${nombreAvecEspace(nbLancers)} fois. On étudie les fréquences d'apparition de chaque face. On obtient les résultats suivants : <br>`\n          face = randint(1, nbFaces) // on choisit une face au hasard. Elle aura une fréquence déséquilibrée.\n          for (let i = 0; i < nbFaces; i++) {\n            tabValeur[i] = i + 1\n            if (i === face) {\n              tabEff[i] = [2 * randint(90, 110)]\n            } else {\n              tabEff[i] = [randint(90, 110)]\n            }\n            S1 += parseInt(tabEff[i])\n          }\n          for (let i = 0; i < nbFaces; i++) {\n            tabRes[i] = [i, calcul(tabEff[i] / S1)]\n          }\n          texteCorr += 'Le dé est équilibré, donc c\\'est une situation d\\'équiprobabilité. Chaque face du dé a une probabilité égale à '\n          switch (nbFaces) {\n            case 4:\n              texteCorr += ' $\\\\dfrac{1}{4} = 25\\\\%$ '\n              break\n            case 6:\n              texteCorr += ' $\\\\dfrac{1}{6} \\\\approx  16.7\\\\%$ '\n              break\n            case 8:\n              texteCorr += ' $\\\\dfrac{1}{8} = 12.5\\\\%$ '\n              break\n            case 10:\n              texteCorr += ' $\\\\dfrac{1}{10} = 10\\\\%$ '\n              break\n            case 12:\n              texteCorr += ' $\\\\dfrac{1}{12} \\\\approx 8.3\\\\%$ '\n              break\n          }\n          texteCorr += 'd\\'apparaitre. <br>'\n          texteCorr += `Comme le dé a été lancé ${nombreAvecEspace(nbLancers)} fois, les fréquences devraient se stabiliser autour de la probabilité. `\n          texteCorr += 'Cependant, une valeur du tableau de fréquences est éloignée de cette probabilité. <br>'\n          texteCorr += `Il s'agit de la fréquence d'apparition du ${tabValeur[face]}. <br>`\n          texteCorr += texteEnCouleurEtGras('Conclusion : les résultats ne semblent pas respecter le principe de stabilisation des fréquences ; le tableau n\\'est pas compatible avec un lancer aléatoire de dé.')\n          break\n\n        case 3:\n          // avec une urne et des boules\n          // Cas où les fréquences rejoignent les proba\n          texte += 'CAS 3 *********************** <br>'\n          tabEff = [randint(2, 9), randint(2, 9), randint(2, 9), randint(2, 9)]\n          S1 = tabEff.reduce((a, b) => a + b, 0)\n          for (let i = 0; i < 4; i++) {\n            tabProba[i] = [tabcoul[i], calcul(tabEff[i] / S1)]\n          }\n\n          texte += 'Dans une urne opaque, il y a '\n          for (let i = 0; i < 3; i++) {\n            texte += `${tabEff[i]} boules ${tabcoul[i]}, `\n          }\n          texte += `et ${tabEff[3]} boules ${tabcoul[3]}. <br>`\n          texte += `On prend une boule, on note sa couleur, et on remet la boule dans l'urne. On répète ce processus ${nombreAvecEspace(nbLancers)} fois. `\n          texte += 'On étudie les fréquences d\\'apparition de chaque couleur. On obtient les résultats suivants : <br>'\n          tabEffModif = tabEff.map(x => x * (1 + randint(-50, 50) / 1000)) // on modifie très légèrement le tirage max 5%\n          S2 = tabEff.reduce((a, b) => a + b, 0)\n          for (let i = 0; i < 4; i++) {\n            tabRes[i] = [tabcoul[i], calcul(tabEffModif[i] / S2)]\n          }\n          titreligne = 'Couleur des boules' // pour remplir le tableau\n          tabtitrecolonne = tabcoul\n          texteCorr += `Chaque boule a la même probabilité d'être choisie. Par exemple, la probabilité de tirer une boule ${tabcoul[0]} est : $\\\\dfrac{${tabEff[0]}}{${S1}}$. `\n          texteCorr += 'Les probabilités théoriques sont : <br>'\n          N = tabtitrecolonne.length\n          texteCorr += '$\\\\begin{array}{|l|' + 'c|'.repeat(N) + '}\\n'\n          texteCorr += '\\\\hline\\n'\n          texteCorr += `\\\\text{${titreligne}}`\n          for (let i = 0; i < N; i++) {\n            texteCorr += ` & \\\\textbf{\\\\text{${tabtitrecolonne[i]}}}`\n          }\n          texteCorr += '\\\\\\\\\\\\hline\\n'\n          texteCorr += '\\\\text{Fréquence d\\'apparition (en fraction)}'\n          for (let i = 0; i < N; i++) {\n            texteCorr += ` & \\\\dfrac{${tabEff[i]}}{${S1}} ` // probleme d'espace\n          }\n          texteCorr += '\\\\\\\\\\\\hline\\n'\n          texteCorr += '\\\\text{Fréquence d\\'apparition (en pourcentage)}'\n          for (let i = 0; i < N; i++) {\n            texteCorr += ` & \\\\text{${arrondiVirgule(100 * tabEff[i] / S1, 1)}} \\\\% `\n          }\n          texteCorr += '\\\\\\\\\\\\hline\\n'\n          texteCorr += '\\\\end{array}\\n$ <br>'\n          texteCorr += 'Les probabilités semblent très proches des fréquences observées. <br>'\n          texteCorr += texteEnCouleurEtGras('Conclusion : les résultats semblent respecter le principe de stabilisation des fréquences; le tableau est bien compatible avec un tirage aléatoire dans une urne.')\n\n          break\n\n        case 4:\n          // avec une urne et des boules\n          // Cas où les fréquences rejoignent les proba\n          texte += 'CAS 4 *********************** <br>'\n          face = randint(1, nbFaces) // on choisit une couleur au hasard. Elle aura une fréquence déséquilibrée.\n          tabEff = [randint(2, 9), randint(2, 9), randint(2, 9), randint(2, 9)]\n          S1 = tabEff.reduce((a, b) => a + b, 0)\n          for (let i = 0; i < 4; i++) {\n            tabProba[i] = [tabcoul[i], calcul(tabEff[i] / S1)]\n          }\n          texte += 'Dans une urne opaque, il y a '\n          for (let i = 0; i < 3; i++) {\n            texte += `${tabEff[i]} boules ${tabcoul[i]}, `\n          }\n          texte += `et ${tabEff[3]} boules ${tabcoul[3]}. <br>`\n          texte += `On prend une boule, on note sa couleur, et on remet la boule dans l'urne. On répète ce processus ${nombreAvecEspace(nbLancers)} fois. `\n          texte += 'On étudie les fréquences d\\'apparition de chaque couleur. On obtient les résultats suivants : '\n          tabEffModif = tabEff.map(x => x * (1 + randint(-50, 50) / 1000)) // on modifie très légèrement le tirage de max 5%\n          tabEffModif[face] = 1.75 * tabEff[face] // on augmente de 75% l'effectif d'une couleur\n          S2 = tabEffModif.reduce((a, b) => a + b, 0)\n          for (let i = 0; i < 4; i++) {\n            tabRes[i] = [tabcoul[i], calcul(tabEffModif[i] / S2)]\n          }\n          // CORRECTION :\n          titreligne = 'Couleur des boules' // pour remplir le tableau\n          tabtitrecolonne = tabcoul\n          texteCorr += `Chaque boule a la même probabilité d'être choisie. Par exemple, la probabilité de tirer une boule ${tabcoul[0]} est : $\\\\dfrac{${tabEff[0]}}{${S1}}$. `\n          texteCorr += 'Les probabilités théoriques sont : <br>'\n          N = tabtitrecolonne.length\n          texteCorr += '$\\\\begin{array}{|l|' + 'c|'.repeat(N) + '}\\n'\n          texteCorr += '\\\\hline\\n'\n          texteCorr += `\\\\text{${titreligne}}`\n          for (let i = 0; i < N; i++) {\n            texteCorr += ` & \\\\textbf{\\\\text{${tabtitrecolonne[i]}}}`\n          }\n          texteCorr += '\\\\\\\\\\\\hline\\n'\n          texteCorr += '\\\\text{Fréquence d\\'apparition (en fraction)}'\n          for (let i = 0; i < N; i++) {\n            texteCorr += ` & \\\\dfrac{${tabEff[i]}}{${S1}} ` // probleme d'espace\n          }\n          texteCorr += '\\\\\\\\\\\\hline\\n'\n          texteCorr += '\\\\text{Fréquence d\\'apparition (en pourcentage)}'\n          for (let i = 0; i < N; i++) {\n            texteCorr += ` & \\\\text{${arrondiVirgule(100 * tabEff[i] / S1, 1)}} \\\\% `\n          }\n          texteCorr += '\\\\\\\\\\\\hline\\n'\n          texteCorr += '\\\\end{array}\\n$ <br>'\n          texteCorr += `Les valeurs de fréquence et de probabilité pour les boules ${tabcoul[face]} ne correspondent pas. Il y a trop de différence. <br>`\n          texteCorr += texteEnCouleurEtGras('Conclusion : les résultats ne semblent pas respecter le principe de stabilisation des fréquences ; le tableau n\\'est pas compatible avec un tirage aléatoire dans une urne.')\n\n          break\n      }\n      N = tabtitrecolonne.length\n\n      context.isHtml ? texte += '<br><center>' : texte += '\\\\begin{center}'\n\n      texte += '$\\\\begin{array}{|l|' + 'c|'.repeat(N) + '}\\n'\n      texte += '\\\\hline\\n'\n      texte += `\\\\text{${titreligne}}`\n      for (let i = 0; i < N; i++) {\n        texte += ` & \\\\textbf{\\\\text{${tabtitrecolonne[i]}}}`\n      }\n      texte += '\\\\\\\\\\\\hline\\n'\n      texte += '\\\\text{Fréquence d\\'apparition}'\n      for (let i = 0; i < N; i++) {\n        texte += ` & \\\\text{${arrondiVirgule(100 * tabRes[i][1], 1)}} \\\\% `\n      }\n      texte += '\\\\\\\\\\\\hline\\n'\n      texte += '\\\\end{array}\\n$'\n      context.isHtml ? texte += '</center>' : texte += '\\\\end{center}'\n\n      texte += '<br>'\n      texte += 'Ces résultats vous semblent-ils respecter les principes des probabilités ? Détailler votre réponse en vous basant sur des calculs.<br>'\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n\n  this.besoinFormulaireNumerique = ['Type d\\'expérience', 2, '1 : Tirage de dés\\n 2 : Tirage dans une urne']\n  this.besoinFormulaire2Texte = ['Nombre de tirages']\n  this.besoinFormulaire3CaseACocher = ['équiprobabilité', true]\n} // Fin de l'exercice.\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","StabilisationFrequence","pas_de_version_HMTL","sup","sup2","sup3","context","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","cpt","nbFaces","randint","nbLancers","tabcoul","tabEff","tabEffModif","S1","S2","tabRes","tabProba","tabValeur","titreligne","tabtitrecolonne","face","N","nombreAvecEspace","parseInt","calcul","texteEnCouleurEtGras","reduce","a","b","map","x","length","repeat","arrondiVirgule","listeQuestionsToContenu"],"sourceRoot":""}