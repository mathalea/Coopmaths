/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e__Construire_par_symetrie_js"],{

/***/ "./src/js/exercices/6e/_Construire_par_symetrie.js":
/*!*********************************************************!*\
  !*** ./src/js/exercices/6e/_Construire_par_symetrie.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Construire_par_Symetrie)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\n\n/**\n * @Auteur Jean-Claude Lhote\n * Fonction générale pour les exercices de construction de symétriques (centrale/axiale et points/triangles)\n * références  6G24-1, 6G24-2, 5G10-1, 5G10-2, 5G11-1 et 5G11-2\n * Permet une sortie html/pdf sur petits carreaux/gros carreaux/papier blanc\n */\n\nfunction Construire_par_Symetrie() {\n\t\"use strict\";\n\t_ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this);\n\tthis.titre = \"Construire par Symétrie...\";\n\tthis.nb_questions = 1;\n\tthis.nb_cols = 1;\n\tthis.nb_cols_corr = 1;\n\tthis.sup = 2;\n\tthis.sup2 = 1;\n\tthis.figure = false\n\tthis.nouvelle_version = function () {\n\t\tlet type_de_questions_disponibles;\n\t\tif (this.sup == 3) \t  //Symétrie axiale ou centrale\n\t\t\tif (this.figure == false) type_de_questions_disponibles = [0, 1, 2]; // points\n\t\t\telse type_de_questions_disponibles = [3, 4, 5] // triangle\n\n\t\telse\n\t\t\tif (this.figure == false) type_de_questions_disponibles = [parseInt(this.sup)]; // Le choix 1 ou 2 : points\n\t\t\telse type_de_questions_disponibles = [parseInt(this.sup) + 3] //figures\n\n\t\tlet liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(\n\t\t\ttype_de_questions_disponibles,\n\t\t\tthis.nb_questions\n\t\t);\n\t\tthis.liste_questions = []; // Liste de questions\n\t\tthis.liste_corrections = []; // Liste de questions corrigées\n\t\tlet Xmin, Xmax, Ymin, Ymax, sc;\n\t\tif (this.sup2 == 2) sc = 0.8;\n\t\telse sc = 0.5;\n\n\t\tlet A, AA, cA, sA,\n\t\t\tB,\n\t\t\tC, CC, cC, sC, sCE,\n\t\t\tD, DD, cD, sD, sDE,\n\t\t\tE, EE, cE, sE, sED,\n\t\t\tsEC, inter,\n\t\t\td, enonce,\n\t\t\tcorrection,\n\t\t\tg,\n\t\t\tcarreaux,\n\t\t\tk,\n\t\t\tobjets_enonce = [],\n\t\t\tobjets_correction = [],\n\t\t\tp1, p2, p1nom;\n\t\tfor (\n\t\t\tlet i = 0, cpt = 0;\n\t\t\ti < this.nb_questions && cpt < 50;\n\n\t\t) {\n\t\t\tobjets_enonce.length = 0\n\t\t\tobjets_correction.length = 0\n\t\t\tswitch (liste_type_de_questions[i]) {\n\t\t\t\tcase 0: // 3 symétries axiales simples de points (6ème)\n\t\t\t\t\tp1nom = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.creerNomDePolygone)(5, \"PQ\")\n\t\t\t\t\tA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, `${p1nom[0]}`, 'above');\n\t\t\t\t\tk = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 0, 1, 2])\n\n\t\t\t\t\tif (k < 2) d = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droiteParPointEtPente)(A, k);\n\t\t\t\t\telse d = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droiteVerticaleParPoint)(A)\n\t\t\t\t\tB = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointSurDroite)(d, 6, `${p1nom[1]}`, 'above');\n\t\t\t\t\td.isVisible = true;\n\t\t\t\t\td.epaisseur = 1\n\t\t\t\t\tif (k == 2) {\n\t\t\t\t\t\tA.positionLabel = 'left'\n\t\t\t\t\t\tB.positionLabel = 'left'\n\t\t\t\t\t}\n\t\t\t\t\tC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 3), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 4), `${p1nom[2]}`, 'above left');\n\t\t\t\t\tD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 5), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-4, -3), `${p1nom[3]}`, 'below right');\n\t\t\t\t\t//\t\t\tdB = droiteParPointEtPerpendiculaire(B, d);\n\t\t\t\t\tE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(6, 7), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(5, 6), `${p1nom[4]}`, \"left\");\n\t\t\t\t\t//F = point(E.x+1,5-B.y,'F','above left');\n\t\t\t\t\tCC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.symetrieAxiale)(C, d, `${p1nom[2]}\\'`, 'below left')\n\t\t\t\t\tDD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.symetrieAxiale)(D, d, `${p1nom[3]}\\'`, 'above right')\n\t\t\t\t\tEE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.symetrieAxiale)(E, d, `${p1nom[4]}\\'`, 'left')\n\t\t\t\t\t//FF=symetrieAxiale(F,d,'F\\'','below left')\n\t\t\t\t\tcC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(C, CC, 'red', '|')\n\t\t\t\t\tcD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(D, DD, 'blue', 'X')\n\t\t\t\t\tcE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(E, EE, 'green', 'O')\n\t\t\t\t\t//cF=codageMediatrice(F,FF,'purple','V')\n\t\t\t\t\tsC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, CC)\n\t\t\t\t\tsD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(D, DD)\n\t\t\t\t\tsE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(E, EE)\n\t\t\t\t\t//sF=segment(F,FF)\n\t\t\t\t\tsCE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(CC, EE, '', 'gray')\n\t\t\t\t\tsCE.pointilles = true\n\t\t\t\t\tsED = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(EE, D, '', 'gray')\n\t\t\t\t\tsED.pointilles = true\n\t\t\t\t\tsDE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(DD, E, '', 'gray')\n\t\t\t\t\tsDE.pointilles = true\n\t\t\t\t\tsEC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(C, E, '', 'gray')\n\t\t\t\t\tsEC.pointilles = true\n\n\n\n\t\t\t\t\tobjets_correction.push(d, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B, C, D, E, CC, DD, EE), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B, C, D, E, CC, DD, EE), cC, cD, cE, sC, sD, sE, sED, sDE, sCE, sEC)\n\t\t\t\t\tobjets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B, C, D, E), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B, C, D, E), d);\n\t\t\t\t\tenonce = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(0) + ` Reproduire la figure ci-dessous.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(1) + ` Construire le point $${p1nom[2]}\\'$ symétrique de $${p1nom[2]}$ par rapport à la droite $(${p1nom[0]}${p1nom[1]})$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(2) + ` Construire le point $${p1nom[3]}\\'$ symétrique de $${p1nom[3]}$ par rapport à la droite $(${p1nom[0]}${p1nom[1]})$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(3) + ` Construire le point $${p1nom[4]}\\'$ symétrique de $${p1nom[4]}$ par rapport à la droite $(${p1nom[0]}${p1nom[1]})$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(5) + ` Coder la figure.<br>`;\n\t\t\t\t\tXmin = Math.floor(Math.min(A.x, B.x, C.x, D.x, E.x, EE.x, CC.x, DD.x) - 1)\n\t\t\t\t\tXmax = Math.ceil(Math.max(A.x, B.x, C.x, D.x, E.x, EE.x, CC.x, DD.x) + 1)\n\t\t\t\t\tYmin = Math.floor(Math.min(A.y, B.y, C.y, D.y, E.y, EE.y, CC.y, DD.y) - 1)\n\t\t\t\t\tYmax = Math.ceil(Math.max(A.y, B.y, C.y, D.y, E.y, EE.y, CC.y, DD.y) + 1)\n\n\n\t\t\t\t\tcorrection = `Contrôler la figure en vérifiant que les segments en pointillés se coupent bien sur la droite $(${p1nom[0]}${p1nom[1]})$<br>`\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1: // 3 symétries axiales de points\n\t\t\t\t\tp1nom = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.creerNomDePolygone)(5)\n\t\t\t\t\tA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-1, 1), `${p1nom[0]}`, 'above');\n\t\t\t\t\tB = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(6, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-1, 1, A.y), `${p1nom[1]}`, 'above');\n\t\t\t\t\td = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(A, B);\n\t\t\t\t\td.isVisible = true;\n\t\t\t\t\td.epaisseur = 1\n\t\t\t\t\tC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 3), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 4), `${p1nom[2]}`, 'above left');\n\t\t\t\t\tD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 13), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-4, -3), `${p1nom[3]}`, 'below right');\n\t\t\t\t\t//\t\t\tdB = droiteParPointEtPerpendiculaire(B, d);\n\t\t\t\t\tE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(6, 8), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-8, -5), `${p1nom[4]}`, \"left\");\n\t\t\t\t\t//F = point(E.x+1,5-B.y,'F','above left');\n\t\t\t\t\tCC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.symetrieAxiale)(C, d, `${p1nom[2]}\\'`, 'below left')\n\t\t\t\t\tDD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.symetrieAxiale)(D, d, `${p1nom[3]}\\'`, 'above right')\n\t\t\t\t\tEE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.symetrieAxiale)(E, d, `${p1nom[4]}\\'`, 'left')\n\t\t\t\t\t//FF=symetrieAxiale(F,d,'F\\'','below left')\n\t\t\t\t\tcC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(C, CC, 'red', '|')\n\t\t\t\t\tcD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(D, DD, 'blue', 'X')\n\t\t\t\t\tcE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(E, EE, 'green', 'O')\n\t\t\t\t\t//cF=codageMediatrice(F,FF,'purple','V')\n\t\t\t\t\tsC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, CC)\n\t\t\t\t\tsD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(D, DD)\n\t\t\t\t\tsE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(E, EE)\n\t\t\t\t\t//sF=segment(F,FF)\n\t\t\t\t\tsCE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(CC, EE, 'gray')\n\t\t\t\t\tsCE.pointilles = true\n\t\t\t\t\tsED = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(EE, D, 'gray')\n\t\t\t\t\tsED.pointilles = true\n\t\t\t\t\tsDE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(DD, E, 'gray')\n\t\t\t\t\tsDE.pointilles = true\n\t\t\t\t\tsEC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, E, 'gray')\n\t\t\t\t\tsEC.pointilles = true\n\n\n\n\t\t\t\t\tobjets_correction.push(d, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B, C, D, E, CC, DD, EE), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B, C, D, E, CC, DD, EE), cC, cD, cE, sC, sD, sE, sED, sDE, sCE, sEC)\n\t\t\t\t\tobjets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B, C, D, E), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B, C, D, E), d);\n\t\t\t\t\tenonce = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(0) + ` Reproduire la figure ci-dessous.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(1) + ` Construire le point $${p1nom[2]}\\'$ symétrique de $${p1nom[2]}$ par rapport à la droite $(${p1nom[0]}${p1nom[1]})$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(2) + ` Construire le point $${p1nom[3]}\\'$ symétrique de $${p1nom[3]}$ par rapport à la droite $(${p1nom[0]}${p1nom[1]})$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(3) + ` Construire le point $${p1nom[4]}\\'$ symétrique de $${p1nom[4]}$ par rapport à la droite $(${p1nom[0]}${p1nom[1]})$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(5) + ` Coder la figure.<br>`;\n\t\t\t\t\tXmin = Math.floor(Math.min(A.x, B.x, C.x, D.x, E.x, EE.x, CC.x, DD.x) - 1)\n\t\t\t\t\tXmax = Math.ceil(Math.max(A.x, B.x, C.x, D.x, E.x, EE.x, CC.x, DD.x) + 1)\n\t\t\t\t\tYmin = Math.floor(Math.min(A.y, B.y, C.y, D.y, E.y, EE.y, CC.y, DD.y) - 1)\n\t\t\t\t\tYmax = Math.ceil(Math.max(A.y, B.y, C.y, D.y, E.y, EE.y, CC.y, DD.y) + 1)\n\n\n\t\t\t\t\tcorrection = `Contrôler la figure en vérifiant que les segments en pointillés se coupent bien sur la droite $(${p1nom[0]}${p1nom[1]})$<br>`\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // 3 symétries centrales de points\n\t\t\t\t\tp1nom = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.creerNomDePolygone)(4)\n\t\t\t\t\tA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-1, 4), `${p1nom[0]}`, 'left');\n\t\t\t\t\tB = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(7, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-1, 1, A.y), `${p1nom[1]}`, 'above');\n\t\t\t\t\tC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 3), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-4, -2), `${p1nom[2]}`, 'left');\n\t\t\t\t\tD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 13), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-6, -5), `${p1nom[3]}`, 'below right');\n\t\t\t\t\tCC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(C, B, 180, `${p1nom[2]}\\'`, 'right')\n\t\t\t\t\tDD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(D, B, 180, `${p1nom[3]}\\'`, 'above left')\n\t\t\t\t\tAA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A, B, 180, `${p1nom[0]}\\'`, 'right')\n\t\t\t\t\tcC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMilieu)(C, CC, 'red', '|', false)\n\t\t\t\t\tcD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMilieu)(D, DD, 'blue', '||', false)\n\t\t\t\t\tcA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMilieu)(A, AA, 'green', '|||', false)\n\t\t\t\t\tsC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, CC)\n\t\t\t\t\tsD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(D, DD)\n\t\t\t\t\tsA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(A, AA)\n\n\t\t\t\t\tobjets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, C, D, CC, DD, AA), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B, C, D, CC, DD, AA), cC, cD, cA, sC, sD, sA)\n\t\t\t\t\tobjets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B, C, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B, C, D));\n\t\t\t\t\tenonce = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(0) + ` Reproduire la figure ci-dessous.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(1) + ` Construire le point $${p1nom[2]}\\'$ symétrique de $${p1nom[2]}$ par rapport au point $${p1nom[1]}$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(2) + ` Construire le point $${p1nom[3]}\\'$ symétrique de $${p1nom[3]}$ par rapport au point $${p1nom[1]}$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(3) + ` Construire le point $${p1nom[0]}\\'$ symétrique de $${p1nom[0]}$ par rapport au point $${p1nom[1]}$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(4) + ` Coder la figure.<br>`;\n\t\t\t\t\tXmin = Math.floor(Math.min(A.x, B.x, C.x, D.x, AA.x, CC.x, DD.x) - 1)\n\t\t\t\t\tXmax = Math.ceil(Math.max(A.x, B.x, C.x, D.x, AA.x, CC.x, DD.x) + 1)\n\t\t\t\t\tYmin = Math.floor(Math.min(A.y, B.y, C.y, D.y, AA.y, CC.y, DD.y) - 1)\n\t\t\t\t\tYmax = Math.ceil(Math.max(A.y, B.y, C.y, D.y, AA.y, CC.y, DD.y) + 1)\n\t\t\t\t\tcorrection = ''\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // symétrie axiale simple d'un triangle\n\t\t\t\t\tp1nom = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.creerNomDePolygone)(5, \"PQ\")\n\t\t\t\t\tA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, `${p1nom[0]}`, 'above');\n\t\t\t\t\tk = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 0, 1, 2])\n\n\t\t\t\t\tif (k < 2) d = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droiteParPointEtPente)(A, k);\n\t\t\t\t\telse d = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droiteVerticaleParPoint)(A)\n\t\t\t\t\tB = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointSurDroite)(d, 6, `${p1nom[1]}`, 'above');\n\t\t\t\t\td.isVisible = true;\n\t\t\t\t\td.epaisseur = 1\n\t\t\t\t\tC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 3), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 4), `${p1nom[2]}`, 'above left');\n\t\t\t\t\tD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 5), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-4, -3), `${p1nom[3]}`, 'below right');\n\t\t\t\t\t//\t\t\tdB = droiteParPointEtPerpendiculaire(B, d);\n\t\t\t\t\tE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(6, 7), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(5, 6), `${p1nom[4]}`, \"left\");\n\t\t\t\t\tp1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)(C, D, E)\n\t\t\t\t\tp2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.symetrieAxiale)(p1, d)\n\t\t\t\t\tp2.listePoints[0].nom = `${p1nom[2]}\\'`\n\t\t\t\t\tp2.listePoints[1].nom = `${p1nom[3]}\\'`\n\t\t\t\t\tp2.listePoints[2].nom = `${p1nom[4]}\\'`\n\t\t\t\t\t//CC=nommePolygone(p1)\n\t\t\t\t\t//DD=nommePolygone(p2)\n\t\t\t\t\tcC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(p1.listePoints[0], p2.listePoints[0], 'red', '|')\n\t\t\t\t\tcD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(p1.listePoints[1], p2.listePoints[1], 'blue', 'X')\n\t\t\t\t\tcE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(p1.listePoints[2], p2.listePoints[2], 'green', 'O')\n\t\t\t\t\tsC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(p1.listePoints[0], p2.listePoints[0], 'red')\n\t\t\t\t\tsD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(p1.listePoints[1], p2.listePoints[1], 'blue')\n\t\t\t\t\tsE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(p1.listePoints[2], p2.listePoints[2], 'green')\n\t\t\t\t\tsCE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(p1.listePoints[2], p1.listePoints[1], '', 'gray')\n\t\t\t\t\tsCE.pointilles = true\n\t\t\t\t\tsED = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(p2.listePoints[2], p2.listePoints[1], '', 'gray')\n\t\t\t\t\tsED.pointilles = true\n\t\t\t\t\tobjets_correction.push(d, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B), cC, cD, cE, sC, sD, sE, CC, DD, p1, p1.sommets, p2, p2.sommets, sCE, sED)\n\t\t\t\t\tobjets_enonce.push(d, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B), CC, p1);\n\t\t\t\t\tenonce = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(0) + `Reproduire la figure ci-dessous.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(1) + ` Construire le triangle  $${p1nom[2]}\\'${p1nom[3]}\\'${p1nom[4]}\\'$ symétrique de $${p1nom[2]}${p1nom[3]}${p1nom[4]}$ par rapport à la droite $(${p1nom[0]}${p1nom[1]})$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(2) + ` Coder la figure.<br>`;\n\t\t\t\t\tXmin = Math.floor(Math.min(A.x, B.x, C.x, D.x, p1.listePoints[0].x, p1.listePoints[1].x, p1.listePoints[2].x, p2.listePoints[0].x, p2.listePoints[1].x, p2.listePoints[2].x) - 1)\n\t\t\t\t\tXmax = Math.ceil(Math.max(A.x, B.x, C.x, D.x, p1.listePoints[0].x, p1.listePoints[1].x, p1.listePoints[2].x, p2.listePoints[0].x, p2.listePoints[1].x, p2.listePoints[2].x) + 1)\n\t\t\t\t\tYmin = Math.floor(Math.min(A.y, B.y, C.y, D.y, p1.listePoints[0].y, p1.listePoints[1].y, p1.listePoints[2].y, p2.listePoints[0].y, p2.listePoints[1].y, p2.listePoints[2].y) - 1)\n\t\t\t\t\tYmax = Math.ceil(Math.max(A.y, B.y, C.y, D.y, p1.listePoints[0].y, p1.listePoints[1].y, p1.listePoints[2].y, p2.listePoints[0].y, p2.listePoints[1].y, p2.listePoints[2].y) + 1)\n\t\t\t\t\tcorrection = ''\n\n\t\t\t\t\tbreak\n\t\t\t\tcase 4: // symetrie axiale d'un triangle\n\t\t\t\t\tp1nom = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.creerNomDePolygone)(5)\n\n\n\t\t\t\t\tA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-1, 1), `${p1nom[0]}`, 'above');\n\t\t\t\t\tB = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(6, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-1, 1, A.y), `${p1nom[1]}`, 'above');\n\t\t\t\t\td = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(A, B);\n\t\t\t\t\td.isVisible = true;\n\t\t\t\t\td.epaisseur = 1\n\t\t\t\t\tC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 3), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 4), `${p1nom[2]}`, 'above left');\n\t\t\t\t\tD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 13), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-4, -2), `${p1nom[3]}`, 'below right');\n\t\t\t\t\tE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(6, 8), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-8, -6), `${p1nom[4]}`, \"left\");\n\t\t\t\t\tp1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)(C, D, E)\n\t\t\t\t\tp2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.symetrieAxiale)(p1, d)\n\t\t\t\t\tp2.listePoints[0].nom = `${p1nom[2]}\\'`\n\t\t\t\t\tp2.listePoints[1].nom = `${p1nom[3]}\\'`\n\t\t\t\t\tp2.listePoints[2].nom = `${p1nom[4]}\\'`\n\t\t\t\t\tCC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p1)\n\t\t\t\t\tDD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p2)\n\t\t\t\t\tcC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(p1.listePoints[0], p2.listePoints[0], 'red', '|')\n\t\t\t\t\tcD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(p1.listePoints[1], p2.listePoints[1], 'blue', 'X')\n\t\t\t\t\tcE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMediatrice)(p1.listePoints[2], p2.listePoints[2], 'green', 'O')\n\t\t\t\t\tsC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(p1.listePoints[0], p2.listePoints[0], 'red')\n\t\t\t\t\tsD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(p1.listePoints[1], p2.listePoints[1], 'blue')\n\t\t\t\t\tsE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(p1.listePoints[2], p2.listePoints[2], 'green')\n\t\t\t\t\tsCE = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(p1.listePoints[2], p1.listePoints[1], '', 'gray')\n\t\t\t\t\tsCE.pointilles = true\n\t\t\t\t\tsED = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(p2.listePoints[2], p2.listePoints[1], '', 'gray')\n\t\t\t\t\tsED.pointilles = true\n\t\t\t\t\tinter = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointIntersectionDD)(sCE, sED)\n\t\t\t\t\tobjets_correction.push(d, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B), cC, cD, cE, sC, sD, sE, CC, DD, p1, p2, sCE, sED)\n\t\t\t\t\tobjets_enonce.push(d, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B), CC, p1);\n\t\t\t\t\tenonce = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(0) + `Reproduire la figure ci-dessous.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(1) + ` Construire le triangle  $${p1nom[2]}\\'${p1nom[3]}\\'${p1nom[4]}\\'$ symétrique de $${p1nom[2]}${p1nom[3]}${p1nom[4]}$ par rapport à la droite $(${p1nom[0]}${p1nom[1]})$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(2) + ` Coder la figure.<br>`;\n\t\t\t\t\tXmin = Math.floor(Math.min(inter.x, A.x, B.x, C.x, D.x, p1.listePoints[0].x, p1.listePoints[1].x, p1.listePoints[2].x, p2.listePoints[0].x, p2.listePoints[1].x, p2.listePoints[2].x) - 1)\n\t\t\t\t\tXmax = Math.ceil(Math.max(inter.x, A.x, B.x, C.x, D.x, p1.listePoints[0].x, p1.listePoints[1].x, p1.listePoints[2].x, p2.listePoints[0].x, p2.listePoints[1].x, p2.listePoints[2].x) + 1)\n\t\t\t\t\tYmin = Math.floor(Math.min(inter.y, A.y, B.y, C.y, D.y, p1.listePoints[0].y, p1.listePoints[1].y, p1.listePoints[2].y, p2.listePoints[0].y, p2.listePoints[1].y, p2.listePoints[2].y) - 1)\n\t\t\t\t\tYmax = Math.ceil(Math.max(inter.y, A.y, B.y, C.y, D.y, p1.listePoints[0].y, p1.listePoints[1].y, p1.listePoints[2].y, p2.listePoints[0].y, p2.listePoints[1].y, p2.listePoints[2].y) + 1)\n\n\t\t\t\t\tcorrection = `Contrôler la figure en vérifiant que les côtés des deux triangles se coupent bien sur la droite $(${p1nom[0]}${p1nom[1]})$<br>`\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tp1nom = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.creerNomDePolygone)(4)\n\t\t\t\t\tA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-1, 4), `${p1nom[0]}`, 'left');\n\t\t\t\t\tB = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(7, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-1, 1, A.y), `${p1nom[1]}`, 'above');\n\t\t\t\t\tC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 3), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-6, -4), `${p1nom[2]}`, 'left');\n\t\t\t\t\tD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 13), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-6, -5), `${p1nom[3]}`, 'below right');\n\t\t\t\t\tp1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)(A, C, D)\n\t\t\t\t\tp2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(p1, B, 180)\n\t\t\t\t\tp2.listePoints[0].nom = `${p1nom[0]}\\'`\n\t\t\t\t\tp2.listePoints[1].nom = `${p1nom[2]}\\'`\n\t\t\t\t\tp2.listePoints[2].nom = `${p1nom[3]}\\'`\n\t\t\t\t\tCC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p1)\n\t\t\t\t\tDD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p2)\n\t\t\t\t\tcC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMilieu)(p1.listePoints[0], p2.listePoints[0], 'red', '|', false)\n\t\t\t\t\tcD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMilieu)(p1.listePoints[1], p2.listePoints[1], 'blue', 'X', false)\n\t\t\t\t\tcA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageMilieu)(p1.listePoints[2], p2.listePoints[2], 'green', 'O', false)\n\t\t\t\t\tsA = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(p1.listePoints[0], p2.listePoints[0], 'red')\n\t\t\t\t\tsC = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(p1.listePoints[1], p2.listePoints[1], 'blue')\n\t\t\t\t\tsD = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(p1.listePoints[2], p2.listePoints[2], 'green')\n\n\t\t\t\t\tobjets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(B), cC, cD, cA, sC, sD, sA, DD, CC, p1, p2)\n\t\t\t\t\tobjets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(B), CC, p1);\n\t\t\t\t\tenonce = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(0) + `Reproduire la figure ci-dessous.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(1) + ` Construire le triangle  $${p1nom[0]}\\'${p1nom[2]}\\'${p1nom[3]}\\'$ symétrique de $${p1nom[0]}${p1nom[2]}${p1nom[3]}$ par rapport au point $${p1nom[1]}$.<br>`\n\t\t\t\t\tenonce += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(2) + ` Coder la figure.<br>`;\n\t\t\t\t\tXmin = Math.floor(Math.min(A.x, B.x, C.x, D.x, p1.listePoints[0].x, p1.listePoints[1].x, p1.listePoints[2].x, p2.listePoints[0].x, p2.listePoints[1].x, p2.listePoints[2].x) - 1)\n\t\t\t\t\tXmax = Math.ceil(Math.max(A.x, B.x, C.x, D.x, p1.listePoints[0].x, p1.listePoints[1].x, p1.listePoints[2].x, p2.listePoints[0].x, p2.listePoints[1].x, p2.listePoints[2].x) + 1)\n\t\t\t\t\tYmin = Math.floor(Math.min(A.y, B.y, C.y, D.y, p1.listePoints[0].y, p1.listePoints[1].y, p1.listePoints[2].y, p2.listePoints[0].y, p2.listePoints[1].y, p2.listePoints[2].y) - 1)\n\t\t\t\t\tYmax = Math.ceil(Math.max(A.y, B.y, C.y, D.y, p1.listePoints[0].y, p1.listePoints[1].y, p1.listePoints[2].y, p2.listePoints[0].y, p2.listePoints[1].y, p2.listePoints[2].y) + 1)\n\t\t\t\t\tcorrection = ''\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlet params = {\n\t\t\t\txmin: Xmin,\n\t\t\t\tymin: Ymin,\n\t\t\t\txmax: Xmax,\n\t\t\t\tymax: Ymax,\n\t\t\t\tpixelsParCm: 20,\n\t\t\t\tscale: sc,\n\t\t\t}\n\t\t\tif (this.sup2 < 3) g = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.grille)(Xmin, Ymin, Xmax, Ymax, \"gray\", 0.7);\n\t\t\telse g = ''\n\t\t\tif (this.sup2 == 2) {\n\t\t\t\tk = 0.8;\n\t\t\t\tcarreaux = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.seyes)(Xmin, Ymin, Xmax, Ymax);\n\t\t\t} else {\n\t\t\t\tk = 0.5;\n\t\t\t\tcarreaux = \"\";\n\t\t\t}\n\t\t\tobjets_enonce.push(g, carreaux)\n\t\t\tobjets_correction.push(g, carreaux)\n\t\t\tenonce += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(params\n\t\t\t\t,\n\t\t\t\tobjets_enonce\n\t\t\t);\n\t\t\tcorrection += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(\n\t\t\t\tparams,\n\t\t\t\tobjets_correction\n\t\t\t);\n\t\t\tif (this.liste_questions.indexOf(enonce) == -1) {\n\t\t\t\t// Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.liste_questions.push(enonce + \"<br>\");\n\t\t\t\tthis.liste_corrections.push(correction + \"<br>\");\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\t};\n\tthis.besoin_formulaire_numerique = ['Type de questions', 4, `0 : symétries axiales simples\\n 1 : Symétrie axiale\\n 2 : Symétrie centrale\\n 3 : Mélange`]\n\tthis.besoin_formulaire2_numerique = [\n\t\t\"Type de cahier\",\n\t\t3,\n\t\t`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`,\n\t];\n}\n\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/_Construire_par_symetrie.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);