{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5G42.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","demonstrations_parallelogrammes","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","objets","O","A","B","C","D","p","t1","t2","t3","t4","s1","s2","s3","s4","d1","d2","texte","texteCorr","noms","nom","prop1","prop2","type","def","centre","i","cpt","choisitLettresDifferentes","point","rotation","randint","similitude","polygoneAvecNom","segment","color","push","codeSegments","codageAngleDroit","labelPoint","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","mainlevee","amplitude","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/66383.60f9909d3d009ac051c6.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes,choisitLettresDifferentes} from '../../modules/outils.js'\nimport { mathalea2d,point,rotation,codeSegments,segment, polygoneAvecNom,codageAngleDroit,labelPoint,similitude, } from '../../modules/2d.js';\nexport const titre = 'Nature de parallélogrammes'\n\n/**\n * Description didactique de l'exercice\n * @author \n * Référence \n*/\nexport default function demonstrations_parallelogrammes() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 7;\n  this.nbCols = 1; // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1; // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 50; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = \"\" // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    let typesDeQuestionsDisponibles = ['type1','type2','type3','type4','type5','type6','type7']; // On créé 3 types de questions\n    let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions); // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0,objets,O,A,B,C,D,p,t1,t2,t3,t4,s1,s2,s3,s4,d1,d2, texte, texteCorr,noms,nom,prop1,prop2,type,def,centre, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      noms=choisitLettresDifferentes(5,'Q')\n      nom=`$${noms[0]+noms[1]+noms[2]+noms[3]}$`\n      centre=`$${noms[4]}$`\n      objets=[]\n      O=point(0,0,noms[4],'above left')\n      A=rotation(point(3,0),O,randint(0,90),noms[0])\n      B=similitude(A,O,80+randint(0,20),0.8+randint(1,40)/100,noms[1])\n      C=similitude(A,O,180,0.9+randint(1,20)/100,noms[2])\n      D=similitude(B,O,180,0.9+randint(1,20)/100,noms[3])\n      p=polygoneAvecNom(A,B,C,D)\n      s1=segment(A,B)\n      s2=segment(B,C)\n      s3=segment(C,D)\n      s4=segment(D,A)\n      d1=segment(A,C)\n      d2=segment(B,D)\n      s1.color='blue'\n      s3.color='blue'\n      s2.color='red'\n      s4.color='red'\n      objets.push(s1,s2,s3,s4,p[1])\n        // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeDeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'type1': // rectangle 1\n          def=`ses diagonales $[${noms[0]+noms[2]}]$ et $[${noms[1]+noms[3]}]$ ont la même longueur`\n          prop1=`a des diagonales de même longueur`\n          prop2=`$${noms[0]+noms[2]}=${noms[1]+noms[3]}$`\n          type=`rectangle`\n          t2=codeSegments('||','red',B,O,O,D)\n          t1=codeSegments('||','red',A,O,O,C)\n          objets.push(t1,t2,d1,d2) \n          break;\n        case 'type2': // losange 1\n        def=`ses diagonales $[${noms[0]+noms[2]}]$ et $[${noms[1]+noms[3]}]$ sont perpendiculaires`\n        prop1=`a des diagonales perpendiculaires`\n        prop2=`$[${noms[0]+noms[2]}]\\\\perp[${noms[1]+noms[3]}]$`\n        type=`losange`\n        t1=codeSegments('||','red',A,O,O,C)\n        t2=codageAngleDroit(A,O,D)\n        t3=codeSegments('|||','blue',B,O,O,D)\n        t4=labelPoint(O)    \n        objets.push(t1,t2,t3,t4,d1,d2)   \n          break;\n        case 'type3': // carré 1\n        prop2=`$[${noms[0]+noms[2]}]\\\\perp[${noms[1]+noms[3]}]$ et $${noms[0]+noms[2]}=${noms[1]+noms[3]}$`\n        def=`ses diagonales $[${noms[0]+noms[2]}]$ et $[${noms[1]+noms[3]}]$ ont la même longueur et sont perpendiculaires`\n        prop1=`a des diagonales perpendiculaires et de même longueur`\n        t1=codeSegments('||','red',A,O,O,C)\n        t2=codageAngleDroit(A,O,D)\n        t3=codeSegments('||','red',B,O,O,D)\n        t4=labelPoint(O)     \n        objets.push(t1,t2,t3,t4,d1,d2)  \n        type=`carré`\n          break;\n          case 'type4': //losange 2\n          prop2=`$${noms[0]+noms[1]}=${noms[1]+noms[2]}$`\n          def=`ses côtés $[${noms[0]+noms[1]}]$ et $[${noms[1]+noms[2]}]$ ont la même longueur`\n          prop1=`a deux côtés consécutifs de même longueur`\n          type=`losange`\n          t3=codeSegments('O','green',A,B,B,C)\n          objets.push(t3)      \n            break;\n          case 'type5': // rectangle 2\n          prop2=`$[${noms[0]+noms[1]}]\\\\perp[${noms[1]+noms[2]}]$`\n          def=`ses côtés $[${noms[0]+noms[1]}]$ et $[${noms[1]+noms[2]}]$ sont perpendiculaires`\n          prop1=`a deux côtés consécutifs perpendiculaires`\n          t3=codageAngleDroit(A,B,C)\n          objets.push(t3)      \n          type=`rectangle`\n            break;\n            case 'type6': // carré 2\n            prop2=`$[${noms[0]+noms[1]}]\\\\perp[${noms[1]+noms[2]}]$ et $${noms[0]+noms[1]}=${noms[1]+noms[2]}$`\n          def=`ses côtés $[${noms[0]+noms[1]}]$ et $[${noms[1]+noms[2]}]$ sont perpendiculaires et de même longueur`\n          prop1=`a deux côtés consécutifs perpendiculaires et de même longueur`\n          t2=codeSegments('O','green',A,B,B,C)\n          t3=codageAngleDroit(A,B,C)\n          objets.push(t2,t3)\n          type=`carré`\n            break;\n            case 'type7': // carré 3\n            prop2=`$[${noms[0]+noms[1]}]\\\\perp[${noms[1]+noms[2]}]$ et $[${noms[0]+noms[2]}]\\\\perp[${noms[1]+noms[3]}]$`           \n          def=`ses côtés $[${noms[0]+noms[1]}]$ et $[${noms[1]+noms[2]}]$ sont perpendiculaires et ses diagonales $[${noms[0]+noms[2]}]$ et $[${noms[1]+noms[3]}]$ aussi`\n          prop1=`a deux côtés consécutifs perpendiculaires et des diagonales perpendiculaires`\n          type=`carré`\n          t1=codageAngleDroit(A,O,B)\n          t2=codageAngleDroit(A,B,C)\n          t4=labelPoint(O)  \n          objets.push(t1,t2,t4,d1,d2)     \n            break;\n\n      }\n      texte = `${nom} est un parallélogramme tel que ${def}.<br>`;\n      texte+=`Déterminer la nature de ${nom} en justifiant la réponse.`\n      texteCorr=`Les segments de même couleur sont parallèles sur le schéma suivant :<br>`\n      texteCorr+=mathalea2d({xmin:-5,ymin:-4.5,xmax:5,ymax:4.5,pixelsParCm:20,scale:0.5,mainlevee:true,amplitude:0.3},objets)+'<br>'\n      texteCorr+=`On sait que ${prop2}.<br>`\n      texteCorr += `Si un parralélogramme ${prop1}, alors c'est un ${type}.<br>`;\n      texteCorr +=`${nom} est donc un ${type}.`\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  //this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n}\n\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}