{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaExempleFigureClic.js","webpack://mathalea/./src/js/modules/2dinteractif.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","interactifReady","interactifType","NomQuelconqueDeLaFonctionQuiCreeExercice","amcType","question","objets2d","A","point","B","randint","C","p","polygone","s1","pointCliquable","x","y","s2","s3","push","mathalea2d","xmin","ymin","xmax","ymax","correctionInteractive","elt","cpt","s","etat","stopCliquable","addFeedback","message","type","listeQuestionsToContenu","PointCliquable","options","ObjetMathalea2D","out","opacity","over","click","svg","coeff","code","trace","tracePoint","color","couleur","epaisseur","width","taille","size","isVisible","style","id","xSVG","ySVG","radius","rayon","moi","gestionDeLaSouris","document","removeEventListener","groupe","getElementById","changeEtatPoint","key","mouseOverEffect","mouseOutEffect","addEventListener","replaceWith","cloneNode","args"],"mappings":"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","file":"js/54982.7b8cd4849f73249b1116.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint } from '../../modules/outils.js'\nimport { mathalea2d, point, polygone } from '../../modules/2d.js'\nimport { pointCliquable } from '../../modules/2dinteractif.js'\nimport { addFeedback } from '../../modules/messages.js'\nexport const titre = 'Sommets du triangle'\nexport const interactifReady = true\n// il y avait un fonctionnement avec amcType cf commit 3ae7c43\nexport const interactifType = 'custom' // La correction doit être gérée dans l'exercice avec la méthode this.correctionInteractive()\n\n/**\n * Description didactique de l'exercice\n * @author\n * Référence\n*/\nexport default function NomQuelconqueDeLaFonctionQuiCreeExercice () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactif = true\n  this.amcType = amcType\n  this.consigne = ''\n  this.nbQuestionsModifiable = false\n  // this.nbQuestions = 10\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  // this.sup = 1; // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let question\n    const objets2d = []\n    const A = point(0, 0)\n    const B = point(randint(5, 10), randint(-3, 5))\n    const C = point(randint(1, 10), randint(4, 10))\n    const p = polygone(A, B, C)\n    const s1 = pointCliquable(A.x, A.y)\n    const s2 = pointCliquable(B.x, B.y)\n    const s3 = pointCliquable(C.x, C.y)\n    objets2d.push(p, s1, s2, s3)\n\n    question = 'Clique sur les sommets du triangle.'\n    question += '<br>' + mathalea2d({ xmin: -2, ymin: -5, xmax: 10, ymax: 11 }, objets2d)\n\n    const correction = 'texte de la correction 1'\n    this.listeQuestions.push(question)\n    this.listeCorrections.push(correction)\n\n    this.correctionInteractive = (elt) => {\n      let cpt = 0\n      for (const s of [s1, s2, s3]) {\n        if (s.etat) cpt++\n        s.stopCliquable()\n      }\n      addFeedback(elt, {\n        message: `Tu as cliqué sur ${cpt} ${cpt > 1 ? 'points' : 'point'}.`,\n        type: 'positive'\n      })\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 3];\n}\n","import { ObjetMathalea2D, point, tracePoint } from './2d.js'\n\n/**\n * @author Rémi ANGOT\n * @param {number} x abscisse du point\n * @param {number} y ordonnée du point\n * @param {object} options over, out et click sont des ojets pour le style css des évènements de la souris, radius, width, color, size, style sont les paramètres possibles pour la trace du point\n */\nfunction PointCliquable (x, y, options) {\n  ObjetMathalea2D.call(this)\n  const A = point(x, y)\n  if (!options) options = {}\n  const out = options.out || { opacity: 0 }\n  const over = options.over || { opacity: 0.5 }\n  const click = options.click || { opacity: 1 }\n  this.etat = false // Pour récupérer si le point est affiché ou pas\n  this.svg = function (coeff) {\n    let code\n    const trace = tracePoint(A)\n    trace.color = options.color || options.couleur || 'black'\n    trace.epaisseur = options.width || options.epaisseur || 1\n    trace.taille = options.size || options.taille || 3\n    trace.isVisible = false\n    trace.style = options.style || 'x'\n    code = `<g id=\"${this.id}\">\\n`\n    code += trace.svg(coeff) + '\\n'\n    // Le cercle est la zone d'effet pour les évènements\n    // Comme fill est à none, il faut ajouter pointer-events=\"visible\" cf https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/\n    code += `<circle cx=\"${A.xSVG(coeff)}\" cy=\"${A.ySVG(coeff)}\" r=\"${(options.radius || options.rayon || 1) * coeff}\" fill=\"none\" pointer-events=\"visible\" />\\n`\n    code += '</g>'\n    return code\n  }\n  const moi = this // Pour utiliser this dans les fonctions\n  const gestionDeLaSouris = () => {\n    document.removeEventListener('exercicesAffiches', gestionDeLaSouris)\n    const groupe = document.getElementById(`${this.id}`)\n    const changeEtatPoint = (etat) => {\n      this.etat = etat\n    }\n    // On initialise avec le style de out\n    if (groupe) {\n      for (const key in out) {\n        groupe.style[key] = out[key]\n      }\n      groupe.addEventListener('mouseover', mouseOverEffect)\n      groupe.addEventListener('mouseout', mouseOutEffect)\n      groupe.addEventListener('click', mouseClick)\n      function mouseOverEffect () {\n        for (const key in over) {\n          this.style[key] = over[key]\n        }\n      }\n      function mouseOutEffect () {\n        for (const key in out) {\n          this.style[key] = out[key]\n        }\n      }\n      function mouseClick () {\n        if (moi.etat) {\n          // On désactive le point\n          groupe.addEventListener('mouseover', mouseOverEffect)\n          groupe.addEventListener('mouseout', mouseOutEffect)\n          // On lui remet le style de out\n          for (const key in out) {\n            this.style[key] = out[key]\n          }\n          moi.etat = false\n          changeEtatPoint(false)\n        } else {\n          // On désactive les listeners\n          groupe.removeEventListener('mouseover', mouseOverEffect)\n          groupe.removeEventListener('mouseout', mouseOutEffect)\n          // On applique le style de click\n          for (const key in click) {\n            this.style[key] = click[key]\n          }\n          moi.etat = true\n        }\n      }\n    }\n  }\n  document.addEventListener('exercicesAffiches', gestionDeLaSouris)\n  this.stopCliquable = () => {\n    const groupe = document.getElementById(`${this.id}`)\n    // On retire tous les listener en le remplaçant par un clone\n    groupe.replaceWith(groupe.cloneNode(true))\n  }\n}\n\nexport function pointCliquable (...args) {\n  return new PointCliquable(...args)\n}\n"],"sourceRoot":""}