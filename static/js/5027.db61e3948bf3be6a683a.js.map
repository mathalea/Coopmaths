{"version":3,"file":"js/5027.db61e3948bf3be6a683a.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/5e/can5P01.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { randint, calcul, choice, texNombrec, texNombre, texteEnCouleur } from '../../../modules/outils.js'\nexport const titre = 'Calculer un prix après une évolution en pourcentage'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence\n * Date de publication\n*/\nexport default function PoucentageE () {\n  Exercice.call(this)\n  this.typeExercice = 'simple'\n  this.nbQuestions = 1\n  this.formatChampTexte = 'largeur25 inline'\n  this.optionsChampTexte = { texteApres: ' €' }\n  this.nouvelleVersion = function () {\n    let a, b, n\n    switch (choice(['a', 'b', 'c', 'd', 'e'])) { //,\n      case 'a':\n        a = calcul(randint(4, 13) * 5)\n        n = choice(['pull', 'pantalon', 'tee-shirt', 'vêtement', 'blouson', 'sweat'])\n        b = choice([10, 20])\n        this.question = `Le prix d'un ${n} est $${a}$ €. Il baisse de $${b}\\\\%$ . <br>\n        Quel est son nouveau prix ? `\n        this.optionsChampTexte = { texteApres: '€' }\n        this.correction = `Le nouveau prix est de $${texNombrec(a - (b * a) / 100)} $ €.`\n        if (b === 10) {\n          this.correction += texteEnCouleur(`\n    <br> Mentalement : <br>\n    On calcule d'abord le montant de la réduction. <br>\n    Prendre $10\\\\%$  d'une quantité revient à la diviser par $10$. <br>\n    Ainsi, $${b}\\\\%$  de $${a}$ est égal à $${a}\\\\div 10=${a / 10}$.<br>\n                 La réduction est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n         Le nouveau prix est :   $${a}-${texNombrec(b * a / 100)}= ${texNombrec(a - (b * a) / 100)}$  €.\n    \n  `)\n        } else {\n          this.correction += texteEnCouleur(`\n    <br> Mentalement : <br>\n    On calcule d'abord le montant de la réduction. <br>\n    Pour calculer $20\\\\%$  d'une quantité, on commence par calculer $10\\\\%$  en divisant \n    par $10$ :<br> $10\\\\%$  de $${a}$ est égal à $${a}\\\\div 10=${a / 10}$.<br>\n    Puisque $20\\\\%$  est deux fois plus grand que $10\\\\%$ ,  $20\\\\%$  de $${a}$ est égal à $2\\\\times ${a / 10}=${2 * a / 10}$.<br>\n                    La réduction est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n         Le nouveau prix est :   $${a}-${texNombrec(b * a / 100)}= ${texNombrec(a - (b * a) / 100)}$  €.\n    \n`)\n        }\n        this.reponse = calcul(a - (b * a) / 100)\n        break\n      case 'b':\n        a = calcul(randint(2, 6) * 10)\n        n = choice(['pull', 'pantalon', 'tee-shirt', 'vêtement', 'blouson', 'sweat'])\n        b = choice([5, 15])\n        this.question = `Le prix d'un ${n} est $${a}$ €. Il baisse de $${b}\\\\%$ . <br>\n        Quel est son nouveau prix ? `\n        this.optionsChampTexte = { texteApres: '€' }\n        this.correction = `\n         Le nouveau prix est :  $ ${texNombrec(a - (b * a) / 100)} $ €.`\n        if (b === 5) {\n          this.correction += texteEnCouleur(`\n    <br> Mentalement : <br>\n    On calcule d'abord le montant de la réduction. <br>\n    Pour calculer $5\\\\%$  d'une quantité, on commence par calculer $10\\\\%$  en divisant \n    par $10$ :<br> $10\\\\%$  de $${a}$ est égal à $${a}\\\\div 10=${a / 10}$.<br>\n    Puisque $5\\\\%$  est deux fois plus petit  que $10\\\\%$ ,  $5\\\\%$  de $${a}$ est égal à $ ${a / 10}\\\\div 2=${a / 20}$.<br>\n                 La réduction est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n         Le nouveau prix est :   $${a}-${texNombrec(b * a / 100)}= ${texNombrec(a - (b * a) / 100)}$  €.\n    \n  `)\n        } else {\n          this.correction += texteEnCouleur(`\n    <br> Mentalement : <br>\n    On calcule d'abord le montant de la réduction. <br>\n    Pour calculer $15\\\\%$  d'une quantité, on commence par calculer $10\\\\%$  en divisant \n    par $10$ :<br> $10\\\\%$  de $${a}$ est égal à $${a}\\\\div 10=${a / 10}$.<br>\n    Puis on calcule $5\\\\%$  de $${a}$ qui est égal à la moitié de $10\\\\%$  de $${a}$, soit \n    $${a / 10}\\\\div 2=${a / 20}$.<br>\n    Puisque $15\\\\%$  est égal à $10\\\\%$  $+5\\\\%$ ,  $15\\\\%$  de $${a}$ est égal à $${a / 10}+${a / 20}=${3 * a / 20}$.<br>\n                    La réduction est donc de : $${texNombrec(3 * a / 20)}$ €.<br>\n         Le nouveau prix est :   $${a}-${texNombrec(b * a / 100)}= ${texNombrec(a - (b * a) / 100)}$  €.\n    \n`)\n        }\n\n        this.reponse = calcul(a - (b * a) / 100)\n        break\n      case 'c':\n        a = calcul(randint(4, 13) * 5)\n        n = choice(['pull', 'pantalon', 'tee-shirt', 'vêtement', 'blouson'])\n        b = choice([10, 20])\n        this.question = `Le prix d'un ${n} est $${a}$ €. Il augmente de $${b}\\\\%$ . <br>\n        Quel est son nouveau prix ? `\n        this.optionsChampTexte = { texteApres: '€' }\n        this.correction = `\n         Le nouveau prix est :  $ ${texNombrec(a + (b * a) / 100)} $ €.`\n        this.reponse = calcul(a + (b * a) / 100)\n        if (b === 10) {\n          this.correction += texteEnCouleur(`\n    <br> Mentalement : <br>\n    On calcule d'abord le montant de l'augmentation. <br>\n    Prendre $10\\\\%$  d'une quantité revient à la diviser par $10$. <br>\n    Ainsi, $${b}\\\\%$  de $${a}$ est égal à $${a}\\\\div 10=${texNombrec(a / 10)}$.<br>\n                 L'augmentation est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n         Le nouveau prix est :   $${a}+${texNombrec(b * a / 100)}= ${texNombrec(a + (b * a) / 100)}$  €.\n    \n  `)\n        } else {\n          this.correction += texteEnCouleur(`\n    <br> Mentalement : <br>\n    On calcule d'abord le montant de l'augmentation. <br>\n    Pour calculer $20\\\\%$ d'une quantité, on commence par calculer $10\\\\%$  en divisant \n    par $10$ :<br> $10\\\\%$  de $${a}$ est égal à $${a}\\\\div 10=${texNombrec(a / 10)}$.<br>\n    Puisque $20\\\\%$  est deux fois plus grand que $10\\\\%$ ,  $20\\\\%$  de $${a}$ est égal à $2\\\\times ${a / 10}=${2 * a / 10}$.<br>\n                    L'augmentation est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n         Le nouveau prix est :   $${a}+${texNombrec(b * a / 100)}= ${texNombrec(a + (b * a) / 100)}$  €.\n    \n`)\n        }\n        break\n      case 'd':\n        a = calcul(randint(10, 20) * 1000)\n        b = randint(1, 5)\n        this.question = `Le prix d'une voiture est $${texNombre(a)}$ €. Il augmente de $${b}\\\\%$ . <br>\n        Quel est son nouveau prix ? `\n        this.optionsChampTexte = { texteApres: '€' }\n        this.correction = `\n         Le nouveau prix est :   $ ${texNombrec(a + (b * a) / 100)} $ €.`\n        this.reponse = calcul(a + (b * a) / 100)\n        if (b === 1) {\n          this.correction += texteEnCouleur(`\n        <br> Mentalement : <br>\n        On calcule d'abord le montant de l'augmentation. <br>\n        Prendre $1\\\\%$  d'une quantité revient à la diviser par $100$. <br>\n        Ainsi, $${b}\\\\%$  de $${a}$ est égal à $${a}\\\\div 100=${texNombrec(a / 100)}$.<br>\n                     L'augmentation est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n             Le nouveau prix est :   $${a}+${texNombrec(b * a / 100)}= ${texNombrec(a + (b * a) / 100)}$  €.\n        \n      `)\n        }\n        if (b === 5) {\n          this.correction += texteEnCouleur(`\n        <br> Mentalement : <br>\n        On calcule d'abord le montant de l'augmentation. <br>\n        Pour calculer $5\\\\%$  d'une quantité, on commence par calculer $10\\\\%$  en divisant \n        par $10$ :<br> $10\\\\%$  de $${a}$ est égal à $${a}\\\\div 10=${a / 10}$.<br>\n        Puisque $5\\\\%$  est deux fois plus petit  que $10\\\\%$ ,  $5\\\\%$  de $${a}$ est égal à $ ${a / 10}\\\\div 2=${a / 20}$.<br>\n                     L'augmentation est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n             Le nouveau prix est :   $${a}+${texNombrec(b * a / 100)}= ${texNombrec(a + (b * a) / 100)}$  €.\n        \n      `)\n        }\n        if (b === 2 || b === 3 || b === 4) {\n          this.correction += texteEnCouleur(`\n        <br> Mentalement : <br>\n        On calcule d'abord le montant de l'augmenattion. <br>\n        Pour calculer $${b}\\\\%$  d'une quantité, on commence par calculer $1\\\\%$  en divisant \n        par $100$ :<br> $1\\\\%$  de $${a}$ est égal à $${a}\\\\div 100=${a / 100}$.<br>\n        Puisque $${b}\\\\%$  est $${b}$ fois plus grand que $1\\\\%$ ,  $${b}\\\\%$  de $${a}$ est égal à $${b}\\\\times ${a / 100}=${b * a / 100}$.<br>\n                        L'augmentation est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n             Le nouveau prix est :   $${a}+${texNombrec(b * a / 100)}= ${texNombrec(a + (b * a) / 100)}$  €.\n        \n    `)\n        }\n\n        break\n      case 'e':\n        a = calcul(randint(10, 20) * 1000)\n        b = randint(1, 5)\n        this.question = `Le prix d'une voiture est $${texNombre(a)}$ €. Il baisse de $${b}\\\\%$ . <br>\n          Quel est son nouveau prix ? `\n        this.optionsChampTexte = { texteApres: '€' }\n        this.correction = `\n         Le nouveau prix est :   $ ${texNombrec(a - (b * a) / 100)} €.$`\n        this.reponse = calcul(a - (b * a) / 100)\n        if (b === 1) {\n          this.correction += texteEnCouleur(`\n        <br> Mentalement : <br>\n        On calcule d'abord le montant de la réduction. <br>\n        Prendre $1\\\\%$  d'une quantité revient à la diviser par $100$. <br>\n        Ainsi, $${b}\\\\%$  de $${a}$ est égal à $${a}\\\\div 100=${texNombrec(a / 100)}$.<br>\n        La réduction est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n             Le nouveau prix est :   $${a}-${texNombrec(b * a / 100)}= ${texNombrec(a - (b * a) / 100)}$  €.\n        \n      `)\n        }\n        if (b === 5) {\n          this.correction += texteEnCouleur(`\n        <br> Mentalement : <br>\n        On calcule d'abord le montant de la réduction. <br>\n        Pour calculer $5\\\\%$  d'une quantité, on commence par calculer $10\\\\%$  en divisant \n        par $10$ :<br> $10\\\\%$  de $${a}$ est égal à $${a}\\\\div 10=${a / 10}$.<br>\n        Puisque $5\\\\%$  est deux fois plus petit  que $10\\\\%$ ,  $5\\\\%$  de $${a}$ est égal à $ ${a / 10}\\\\div 2=${a / 20}$.<br>\n        La réduction est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n             Le nouveau prix est :   $${a}-${texNombrec(b * a / 100)}= ${texNombrec(a - (b * a) / 100)}$  €.\n        \n      `)\n        }\n        if (b === 2 || b === 3 || b === 4) {\n          this.correction += texteEnCouleur(`\n        <br> Mentalement : <br>\n        On calcule d'abord le montant de la réduction. <br>\n        Pour calculer $${b}\\\\%$  d'une quantité, on commence par calculer $1\\\\%$  en divisant \n        par $100$ :<br> $1\\\\%$  de $${a}$ est égal à $${a}\\\\div 100=${a / 100}$.<br>\n        Puisque $${b}\\\\%$  est $${b}$ fois plus grand que $1\\\\%$,  $${b}\\\\%$  de $${a}$ est égal à $${b}\\\\times ${a / 100}=${b * a / 100}$.<br>\n        La réduction est donc de : $${texNombrec(b * a / 100)}$ €.<br>\n             Le nouveau prix est :   $${a}-${texNombrec(b * a / 100)}= ${texNombrec(a - (b * a) / 100)}$  €.\n        \n    `)\n        }\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","PoucentageE","typeExercice","formatChampTexte","optionsChampTexte","texteApres","a","b","n","choice","calcul","randint","question","correction","texNombrec","texteEnCouleur","reponse","texNombre"],"sourceRoot":""}