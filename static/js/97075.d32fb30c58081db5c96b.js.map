{"version":3,"file":"js/97075.d32fb30c58081db5c96b.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N23-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombre, texFraction } from '../../modules/outils.js'\nexport const titre = 'Différentes écritures des nombres décimaux'\n\n/**\n * Compléter des égalités sur les nombres décimaux\n * * n/100 = .../10 + .../100\n * * n/100 = .../100 + .../10\n * * .../100 = u+ d/10 + c/100\n * * u = .../10\n * * u = .../100\n * * n/10 = ... + .../10 + .../100\n * @author Rémi Angot\n * 6N23-1\n */\nexport default function ExerciceDifferentesEcrituresNombresDecimaux () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Compléter l'égalité puis donner l'écriture décimale.\"\n  this.spacing = 2\n  this.spacingCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestions\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6]\n    let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    if (this.nbQuestions === 3) listeTypeDeQuestions = combinaisonListes([choice([1, 2, 6]), 3, choice([4, 5])], this.nbQuestions)\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      const u = randint(2, 9) // chiffre des unités\n      const d = randint(1, 9) // chiffre des dixièmes\n      const c = randint(1, 9) // chiffre des centièmes\n      const n = 100 * u + 10 * d + c\n      let ecritureDecimale\n      switch (typesDeQuestions) {\n        case 1: // n/100 = .../10 + .../100\n          ecritureDecimale = texNombre(calcul(u + d / 10 + c / 100))\n          texte = `$${texFraction(n, '100')}=\\\\ldots\\\\ldots+${texFraction(\n            '',\n            10\n          )}+${texFraction('', 100)}=\\\\ldots$`\n          texteCorr = `$${texFraction(n, '100')}=${u}+${texFraction(\n            d,\n            '10'\n          )}+${texFraction(c, '100')}=${ecritureDecimale}$`\n\n          break\n        case 2: // n/100 = .../100 + .../10\n          ecritureDecimale = texNombre(calcul(u + d / 10 + c / 100))\n          texte = `$${texFraction(n, '100')}=\\\\ldots\\\\ldots+${texFraction(\n            '',\n            100\n          )}+${texFraction('', 10)}=\\\\ldots$`\n          texteCorr = `$${texFraction(n, '100')}=${u}+${texFraction(\n            c,\n            100\n          )}+${texFraction(d, 10)}=${ecritureDecimale}$`\n          break\n        case 3: // .../100 = u+ d/10 + c/100\n          ecritureDecimale = texNombre(calcul(u + d / 10 + c / 100))\n          texte = `$${texFraction('', '100')}=${u}+${texFraction(\n            d,\n            '10'\n          )}+${texFraction(c, '100')}=\\\\ldots$`\n          texteCorr = `$${texFraction(n, '100')}=${u}+${texFraction(\n            d,\n            '10'\n          )}+${texFraction(c, '100')}=${ecritureDecimale}$`\n          break\n        case 4: // u = .../10\n          texte = `$${u}=${texFraction('', '10')}$`\n          texteCorr = `$${u}=${texFraction(10 * u, '10')}$`\n          break\n        case 5: // u = .../100\n          texte = `$${u}=${texFraction('', '100')}$`\n          texteCorr = `$${u}=${texFraction(100 * u, '10')}$`\n          break\n        case 6: // n/10 = ... + .../10 + .../100\n          ecritureDecimale = texNombre(calcul(n / 10))\n          texte = `$${texFraction(n, 10)}=\\\\ldots\\\\ldots+${texFraction(\n            '',\n            10\n          )}+${texFraction('', 100)}=\\\\ldots$`\n          texteCorr = `$${texFraction(n, 10)}=${u * 10 + d}+${texFraction(\n            c,\n            10\n          )}+${texFraction(0, 100)}=${ecritureDecimale}$`\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ExerciceDifferentesEcrituresNombresDecimaux","Exercice","this","consigne","spacing","spacingCorr","nouvelleVersion","typesDeQuestions","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","nbQuestions","choice","texte","texteCorr","i","cpt","u","randint","d","c","n","ecritureDecimale","texNombre","calcul","texFraction","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}