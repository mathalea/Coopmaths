{"version":3,"file":"js/3555.50b18af24afed511f909.js","mappings":"8RAKO,MAAMA,GAAkB,EAClBC,EAAiB,WACjBC,GAAW,EACXC,EAAU,aACVC,EAAQ,6EASN,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,YAAc,EACnBD,KAAKE,uBAAwB,EAC7BF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKK,KAAM,EACXL,KAAKM,+BAAgC,EACrCN,KAAKO,qBAAsB,EAEvBC,EAAAA,GAAAA,QACFR,KAAKS,QAAU,EACfT,KAAKU,YAAc,IAEnBV,KAAKS,QAAU,EACfT,KAAKU,YAAc,GAGrBV,KAAKW,gBAAkB,WAKrB,IAAIC,EAAKC,EAJTb,KAAKc,eAAiB,GACtBd,KAAKe,iBAAmB,GACxBf,KAAKgB,eAAiB,GAGRJ,EAAVZ,KAAKK,IAAW,OACT,GACmBQ,EAA1Bb,KAAKO,oBAA4B,OACzB,GACZ,MAAMU,GAAMC,EAAAA,EAAAA,KAAmB,GAC/B,IAAIC,EAAQ,GAAQC,EAAY,GAAI,MAAMC,EAAe,GAAUC,EAAmB,GAAI,IAAIC,EAC1FC,EAAIC,EAAIC,EAAIC,EAWhB,OATEJ,EADiB,IAAfvB,KAAK4B,OACaC,EAAAA,EAAAA,KAAO,CAAC,UAERA,EAAAA,EAAAA,KAAO,CAAC,OAAQ,OAAQ,SAE9CF,GAAWG,EAAAA,EAAAA,KAAQ,GAAI,KAElBtB,EAAAA,GAAAA,QAAkBR,KAAKK,MAC1Bc,GAAS,sCAEHI,GACN,IAAK,OACHE,GAAKM,EAAAA,EAAAA,MAAQD,EAAAA,EAAAA,KAAQ,IAAK,KAAO,GAAI,GACrCN,GAAKO,EAAAA,EAAAA,MAAQD,EAAAA,EAAAA,KAAQ,GAAe,IAAVL,EAAK,IAAW,GAAI,GAC9CE,EAAWK,KAAKC,MAA2B,IAArBD,KAAKE,KAAKV,EAAKC,GAAYO,KAAKG,IACtDT,GAAKK,EAAAA,EAAAA,MAAQK,EAAAA,EAAAA,KAAOX,EAAKO,KAAKK,IAAIL,KAAKE,KAAKV,EAAKC,KAAO,GACxDN,GAAU,qBAAoBF,oBAAsBA,EAAI,OAAOL,MAAQK,EAAI,GAAKA,EAAI,OAAMqB,EAAAA,EAAAA,KAAWb,cAAeR,EAAI,GAAKA,EAAI,OAAMqB,EAAAA,EAAAA,KAAWd,cAClJL,GAAU,uBAAsBF,2BAChC,MACF,IAAK,OACHQ,GAAKK,EAAAA,EAAAA,KAAQ,IAAK,KAAO,GACzBJ,GAAKI,EAAAA,EAAAA,KAAQ,GAAe,IAAVL,EAAK,IAAW,GAClCE,EAAWK,KAAKC,MAA2B,IAArBD,KAAKO,KAAKb,EAAKD,GAAYO,KAAKG,IACtDX,GAAKY,EAAAA,EAAAA,KAAOX,EAAKO,KAAKQ,IAAIR,KAAKO,KAAKb,EAAKD,KACzCN,GAAU,qBAAoBF,oBAAsBA,EAAI,OAAOL,MAAQK,EAAI,GAAKA,EAAI,OAAMqB,EAAAA,EAAAA,KAAWb,cAAeR,EAAI,GAAKA,EAAI,OAAMqB,EAAAA,EAAAA,KAAWZ,cAClJP,GAAU,uBAAsBF,2BAChC,MACF,IAAK,OACHO,GAAKM,EAAAA,EAAAA,KAAQ,GAAI,KAAO,GACxBJ,GAAKI,EAAAA,EAAAA,KAAQ,GAAI,KAAO,GACxBH,EAAWK,KAAKC,MAA2B,IAArBD,KAAKS,KAAKf,EAAKF,GAAYQ,KAAKG,IACtDV,GAAKW,EAAAA,EAAAA,KAAOZ,EAAKQ,KAAKQ,IAAIR,KAAKS,KAAKf,EAAKF,KACzCL,GAAU,qBAAoBF,oBAAsBA,EAAI,OAAOL,MAAQK,EAAI,GAAKA,EAAI,OAAMqB,EAAAA,EAAAA,KAAWd,eAAgBP,EAAI,GAAKA,EAAI,OAAMqB,EAAAA,EAAAA,KAAWZ,cACnJP,GAAU,uBAAsBF,4BAI/BT,EAAAA,GAAAA,QAAkBR,KAAKK,MAC1Bc,GAAS,uBAEX,MAAMuB,GAAcZ,EAAAA,EAAAA,KAAQ,GAAI,IAAK,KAAO,IACtCa,GAAIC,EAAAA,EAAAA,KAAM,EAAG,GACbC,GAAID,EAAAA,EAAAA,KAAMpB,EAAKkB,EAAa,GAC5BI,GAAKF,EAAAA,EAAAA,KAAMpB,EAAI,GACfuB,GAAIH,EAAAA,EAAAA,KAAM,EAAGlB,EAAKgB,GAClBM,GAAKJ,EAAAA,EAAAA,KAAM,EAAGlB,GACduB,GAAKC,EAAAA,EAAAA,KAASP,EAAGE,EAAGE,GACpBI,GAAKD,EAAAA,EAAAA,KAASP,EAAGG,EAAIE,GAErBI,GAAQtB,EAAAA,EAAAA,KAAQ,EAAG,KACnBuB,GAAKC,EAAAA,EAAAA,KAASL,EAAIN,EAAGS,GACrBG,GAAKD,EAAAA,EAAAA,KAASH,EAAIR,EAAGS,GACrBI,EAAIH,EAAGI,YAAY,GACnBC,EAAIL,EAAGI,YAAY,GACnBE,EAAIN,EAAGI,YAAY,GACnBG,EAAKL,EAAGE,YAAY,GACpBI,EAAKN,EAAGE,YAAY,GAEpBK,GAASC,EAAAA,EAAAA,KAAiBL,EAAGF,EAAGG,GAChCK,GAAUD,EAAAA,EAAAA,KAAiBH,EAAIJ,EAAGK,GACxCL,EAAEvC,IAAMA,EAAI,GACZyC,EAAEzC,IAAMA,EAAI,GACZ0C,EAAE1C,IAAMA,EAAI,GACZ,MAAMgD,GAAQC,EAAAA,EAAAA,KAAcb,EAAIpC,GAC1BkD,GAASD,EAAAA,EAAAA,KAAcX,EAAItC,GAE3BmD,GAAOC,EAAAA,EAAAA,KAAQR,EAAID,GACzBQ,EAAKE,UAAY,EACjBF,EAAKG,MAAQ,OAGb,MAAMC,GAAgBC,EAAAA,EAAAA,KAAUjB,EAAGE,EAAGC,EAAG,GACnCe,GAAiBD,EAAAA,EAAAA,KAAUjB,EAAGI,EAAIC,EAAI,GAEtCc,GAAKC,EAAAA,EAAAA,KAAOpB,EAAGE,GACfmB,GAAKD,EAAAA,EAAAA,KAAOpB,EAAGG,GACfmB,GAAKF,EAAAA,EAAAA,KAAOlB,EAAGC,GACfoB,GAAIC,EAAAA,EAAAA,KAAW3B,GACf4B,GAAML,EAAAA,EAAAA,KAAOpB,EAAGI,GAChBsB,GAAMN,EAAAA,EAAAA,KAAOpB,EAAGK,GAChBsB,GAAMP,EAAAA,EAAAA,KAAOhB,EAAIC,GACjBuB,GAAKJ,EAAAA,EAAAA,KAAWzB,GAChB8B,GAAKC,EAAAA,EAAAA,KAAWR,EAAIC,EAAG,EAAI,KAAMQ,EAAAA,EAAAA,KAASR,EAAGD,IAC7CU,GAAKF,EAAAA,EAAAA,KAAWX,EAAIG,EAAI,EAAI,KAAMS,EAAAA,EAAAA,KAAST,EAAIH,IAC/Cc,GAAKH,EAAAA,EAAAA,KAAWT,EAAIC,EAAI,EAAI,KAAMS,EAAAA,EAAAA,KAAST,EAAID,IACrD,IAAIa,EACJF,EAAGG,cAAgB,SACnBF,EAAGE,cAAgB,SACnBN,EAAGM,cAAgB,SACnB,MAAMC,GAAMN,EAAAA,EAAAA,KAAWH,EAAKC,EAAI,EAAI,KAAMG,EAAAA,EAAAA,KAASH,EAAID,IACjDU,GAAMP,EAAAA,EAAAA,KAAWL,EAAKE,EAAK,EAAI,KAAMI,EAAAA,EAAAA,KAASJ,EAAKF,IACnDa,GAAMR,EAAAA,EAAAA,KAAWJ,EAAKC,EAAK,EAAI,KAAMI,EAAAA,EAAAA,KAASJ,EAAKD,IACzD,IAAIa,GAKAC,GAAIC,GAAIC,GAAIC,GAAKC,GAAKC,GAC1B,OALAR,EAAIF,cAAgB,SACpBG,EAAIH,cAAgB,SACpBC,EAAID,cAAgB,SAGZpE,GACN,IAAK,OACH2E,IAAKI,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWb,iBAAmB4D,EAAI,QAAS,IAAK,GAAI,IAC1EY,IAAKK,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWd,iBAAmBgE,EAAI,QAAS,IAAK,GAAI,IAC1EE,GAAKJ,EAAAA,EAAAA,KAAWP,EAAGrB,EAAG,KAAM6B,EAAAA,EAAAA,KAAS7B,EAAGqB,IACxCW,EAAGC,cAAgB,SACnBK,IAAKM,EAAAA,EAAAA,KAAc,IAAKZ,EAAI,QAAS,GAAI,GAAI,IAC7CW,IAAMC,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWb,iBAAmBmE,EAAK,QAAS,IAAK,GAAI,IAC5EQ,IAAME,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWd,iBAAmBqE,EAAK,QAAS,IAAK,GAAI,IAC5EE,IAAMT,EAAAA,EAAAA,KAAWF,EAAIxB,EAAI,KAAM2B,EAAAA,EAAAA,KAAS3B,EAAIwB,IAC5CW,GAAIJ,cAAgB,SACpBQ,IAAMG,EAAAA,EAAAA,KAAc,IAAKP,GAAK,QAAS,GAAI,GAAI,IAC/C,MACF,IAAK,OACHG,IAAKI,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWb,iBAAmB4D,EAAI,QAAS,IAAK,GAAI,IAC1EY,IAAKK,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWZ,iBAAmB+D,EAAI,QAAS,IAAK,GAAI,IAC1EC,GAAKJ,EAAAA,EAAAA,KAAWP,EAAGrB,EAAG,KAAM6B,EAAAA,EAAAA,KAAS7B,EAAGqB,IACxCW,EAAGC,cAAgB,SACnBK,IAAKM,EAAAA,EAAAA,KAAc,IAAKZ,EAAI,QAAS,IAAK,GAAI,IAC9CW,IAAMC,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWb,iBAAmBmE,EAAK,QAAS,IAAK,GAAI,IAC5EQ,IAAME,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWZ,iBAAmBoE,EAAK,QAAS,IAAK,GAAI,IAC5EC,IAAMT,EAAAA,EAAAA,KAAWF,EAAIxB,EAAI,KAAM2B,EAAAA,EAAAA,KAAS3B,EAAIwB,IAC5CW,GAAIJ,cAAgB,SACpBQ,IAAMG,EAAAA,EAAAA,KAAc,IAAKP,GAAK,QAAS,IAAK,GAAI,IAChD,MACF,IAAK,OACHC,IAAKM,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWd,iBAAmBgE,EAAI,QAAS,IAAK,GAAI,IAC1ES,IAAKK,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWZ,iBAAmB+D,EAAI,QAAS,IAAK,GAAI,IAC1EC,GAAKJ,EAAAA,EAAAA,KAAWP,EAAGrB,EAAG,KAAM6B,EAAAA,EAAAA,KAAS7B,EAAGqB,IACxCW,EAAGC,cAAgB,SACnBO,IAAKI,EAAAA,EAAAA,KAAc,IAAKZ,EAAI,QAAS,IAAK,GAAI,IAC9CS,IAAMG,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWd,iBAAmBqE,EAAK,QAAS,IAAK,GAAI,IAC5EO,IAAME,EAAAA,EAAAA,KAAe,IAAEhE,EAAAA,EAAAA,KAAWZ,iBAAmBoE,EAAK,QAAS,IAAK,GAAI,IAC5EC,IAAMT,EAAAA,EAAAA,KAAWF,EAAIxB,EAAI,KAAM2B,EAAAA,EAAAA,KAAS3B,EAAIwB,IAC5CW,GAAIJ,cAAgB,GACpBU,IAAMC,EAAAA,EAAAA,KAAc,IAAKP,GAAK,QAAS,IAAK,GAAI,IAIpD1E,EAAakF,KAAKlD,EAAIS,EAAQG,EAAO+B,GAAIC,GAAIC,GAAI1B,GACjDlD,EAAiBiF,KAAKhD,EAAIS,EAASG,EAAQgC,GAAKC,GAAKC,GAAKjC,EAAMM,GAEhE,MAAM8B,GAAe,CAAEC,KAAMzE,KAAK0E,IAAIlD,EAAEmD,EAAGjD,EAAEiD,EAAGhD,EAAEgD,GAAK,EAAGC,KAAM5E,KAAK0E,IAAIlD,EAAEqD,EAAGnD,EAAEmD,EAAGlD,EAAEkD,GAAK,EAAGC,KAAM9E,KAAK+E,IAAIvD,EAAEmD,EAAGjD,EAAEiD,EAAGhD,EAAEgD,GAAK,EAAGK,KAAMhF,KAAK+E,IAAIvD,EAAEqD,EAAGnD,EAAEmD,EAAGlD,EAAEkD,GAAK,EAAGI,YAAa,GAAIC,MAAO,IAAMC,WAAW,EAAMC,UAAW,IACvNC,GAAmB,CAAEZ,KAAMzE,KAAK0E,IAAIlD,EAAEmD,EAAGjD,EAAEiD,EAAGhD,EAAEgD,GAAK,EAAGC,KAAM5E,KAAK0E,IAAIlD,EAAEqD,EAAGnD,EAAEmD,EAAGlD,EAAEkD,GAAK,EAAGC,KAAM9E,KAAK+E,IAAIvD,EAAEmD,EAAGjD,EAAEiD,EAAGhD,EAAEgD,GAAK,EAAGK,KAAMhF,KAAK+E,IAAIvD,EAAEqD,EAAGnD,EAAEmD,EAAGlD,EAAEkD,GAAK,EAAGI,YAAa,GAAIC,MAAO,GAAKC,WAAW,GAgB/M,QAfK3G,EAAAA,GAAAA,QAAkBR,KAAKK,MAC1Bc,GAAS,sCAEPnB,KAAKK,MACPc,IAASmG,EAAAA,EAAAA,KAAWd,GAAcnF,GAAgB,QAEhDrB,KAAKO,sBACFC,EAAAA,GAAAA,SAAgBY,GAAa,sCAClCA,IAAakG,EAAAA,EAAAA,KAAWD,GAAkB/F,GAAoB,OACzDd,EAAAA,GAAAA,SAAgBY,GAAa,yBAE/BZ,EAAAA,GAAAA,QAAkBR,KAAKK,MAC1Bc,GAAS,uBAEPnB,KAAKO,sBAAwBC,EAAAA,GAAAA,SAAgBY,GAAa,sCACtDG,GACN,IAAK,OACHH,GAAc,qBAAoBH,oBAAsBA,EAAI,QAAQJ,qCAAwCI,2BAC5GG,GAAc,0BAAyBH,sBAAwBA,EAAI,GAAKA,EAAI,OAAOA,EAAI,GAAKA,EAAI,YAChGG,GAAa,oCACbA,GAAc,0BAAyBH,eAAgBsG,EAAAA,EAAAA,MAAYjF,EAAAA,EAAAA,KAAWd,IAAKc,EAAAA,EAAAA,KAAWb,WAC9FL,GAAc,cAAaH,gBAAiBsG,EAAAA,EAAAA,MAAYjF,EAAAA,EAAAA,KAAWd,IAAKc,EAAAA,EAAAA,KAAWb,gBAAiBE,iBACpG,MACF,IAAK,OACHP,GAAc,qBAAoBH,oBAAsBA,EAAI,OAAOJ,oCAAuCI,2BAC1GG,GAAc,2BAA0BH,eAAgBsG,EAAAA,EAAAA,KAAYtG,EAAI,GAAKA,EAAI,GAAIA,EAAI,GAAKA,EAAI,WAClGG,GAAa,oCACbA,GAAc,0BAAyBH,eAAgBsG,EAAAA,EAAAA,MAAYjF,EAAAA,EAAAA,KAAWZ,IAAKY,EAAAA,EAAAA,KAAWb,WAC9FL,GAAc,cAAaH,gBAAiBsG,EAAAA,EAAAA,MAAYjF,EAAAA,EAAAA,KAAWZ,IAAKY,EAAAA,EAAAA,KAAWb,gBAAiBE,iBAEpG,MACF,IAAK,OACHP,GAAc,qBAAoBH,oBAAsBA,EAAI,QAAQJ,sCAAyCI,2BAC7GG,GAAc,2BAA0BH,eAAgBsG,EAAAA,EAAAA,KAAYtG,EAAI,GAAKA,EAAI,GAAIA,EAAI,GAAKA,EAAI,WAClGG,GAAa,oCACbA,GAAc,0BAAyBH,eAAgBsG,EAAAA,EAAAA,MAAYjF,EAAAA,EAAAA,KAAWZ,IAAKY,EAAAA,EAAAA,KAAWd,WAC9FJ,GAAc,cAAaH,sBAAuBsG,EAAAA,EAAAA,MAAYjF,EAAAA,EAAAA,KAAWZ,IAAKY,EAAAA,EAAAA,KAAWd,wBAAyBG,oBAGlH3B,KAAKO,sBAAwBC,EAAAA,GAAAA,SAAgBY,GAAa,uBAI1DZ,EAAAA,GAAAA,MACFR,KAAKgB,eAAe,GAAK,CACvBwG,OAAQrG,EACRsG,aAAc,CAAC,CAAEtG,MAAOC,EAAWsG,OAAQ,EAAGC,SAAU,KACxDC,QAAS,CAAEC,OAAQlG,EAAUmG,MAAO,CAAEC,OAAQ,EAAGC,SAAU,EAAGC,OAAO,EAAOC,mBAAoB,KAEzFlI,KAAKmI,YAAc3H,EAAAA,GAAAA,SAC5B4H,EAAAA,EAAAA,IAAWpI,KAAM,GAAGqI,EAAAA,EAAAA,KAAe1G,IAErCR,IAASmH,EAAAA,EAAAA,IAAyBtI,KAAM,EAAG,mBAAoB,CAAEuI,WAAY,OAE7EvI,KAAKc,eAAeyF,KAAKpF,GACzBnB,KAAKe,iBAAiBwF,KAAKnF,IAC3BoH,EAAAA,EAAAA,KAAwBxI,OAG1BA,KAAKyI,4BAA8B,CAAC,uBAAuB,K,gMCzPtD,MAAM5I,EAAQ,oFASN,SAAS6I,IACtB5I,EAAAA,QAAAA,KAAkBE,MAClBA,KAAK4B,MAAQ,EACb5B,KAAKK,KAAM,EACXL,KAAKH,MAAQA,I,gBCTA,SAASE,IAItBC,KAAKH,MAAQ,GACbG,KAAK2I,YAAa,EAclB3I,KAAK4I,SAAW,GAChB5I,KAAK6I,mBAAqB,GAC1B7I,KAAK8I,aAAe,GACpB9I,KAAKc,eAAiB,GACtBd,KAAKe,iBAAmB,GACxBf,KAAK+I,QAAU,GACf/I,KAAKgJ,kBAAoB,GACzBhJ,KAAKgB,eAAiB,GACtBhB,KAAKiJ,sBAAwB,GAK7BjJ,KAAKS,QAAU,EACfT,KAAKU,YAAc,EAKnBV,KAAKkJ,mBAAoB,EACzBlJ,KAAKmJ,cAAgB,GACrBnJ,KAAKoJ,oBAAqB,EAC1BpJ,KAAKE,uBAAwB,EAC7BF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKqJ,kBAAmB,EACxBrJ,KAAKsJ,sBAAuB,EAC5BtJ,KAAKuJ,mBAAoB,EACzBvJ,KAAKwJ,uBAAwB,EAM7BxJ,KAAKyJ,QAAS,EACdzJ,KAAK0J,gBAAkB,EAKvB1J,KAAKC,YAAc,GACnBD,KAAK2J,mBAAqB,EAC1B3J,KAAKM,+BAAgC,EACrCN,KAAKO,qBAAsB,EAC3BP,KAAK4J,oBAAqB,EAC1B5J,KAAK6J,MAAQ,GAEb7J,KAAKmI,YAAa,EAClBnI,KAAK8J,uBAAwB,EAE7B9J,KAAK+J,2BAA4B,EACjC/J,KAAKgK,uBAAwB,EAC7BhK,KAAKyI,6BAA8B,EAEnCzI,KAAKiK,4BAA6B,EAClCjK,KAAKkK,wBAAyB,EAC9BlK,KAAKmK,8BAA+B,EAEpCnK,KAAKoK,4BAA6B,EAClCpK,KAAKqK,wBAAyB,EAC9BrK,KAAKsK,8BAA+B,EAEpCtK,KAAKuK,4BAA6B,EAClCvK,KAAKwK,wBAAyB,EAC9BxK,KAAKyK,8BAA+B,EAMpCzK,KAAK0K,cAAe,EASpB1K,KAAK2K,eAAiB,GAMtB3K,KAAKW,gBAAkB,SAAUiK,KAQjC5K,KAAK6K,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAAS9K,KAAK2K,eAAiB,IACnC,IAAIK,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAInL,KAAK2K,eAAeS,QAAQJ,IAAmB,KAGjDhL,KAAK2K,eAAepE,KAAKyE,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/3e/3G31.js","webpack://mathalea/./src/js/exercices/4e/4G41.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { homothetie, codeAngle, longueur, barycentre, milieu, latexParPoint, mathalea2d, point, polygone, rotation, codageAngleDroit, nommePolygone, segment } from '../../modules/2d.js'\nimport { calcul, texFraction, arrondi, texNombre2, listeQuestionsToContenu, randint, creerNomDePolygone, choice, arrondiVirgule } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCOpenNum'\nexport const titre = 'Calculer un angle dans un triangle rectangle en utilisant la trigonométrie'\n\n/**\n * @author Jean-Claude Lhote à partir de 3G30-1 de Rémi Angot\n * 3G31 Exercice remplaçant l'exercice initial utilisant MG32\n * Calculer un angle en utilisant l'un des trois rapport trigonométrique.\n * * Si this.level=4 alors seul le cosinus sera utilisé.\n * Mars 2021\n */\nexport default function CalculDAngle () {\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = false\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false\n\n  if (context.isHtml) {\n    this.spacing = 0\n    this.spacingCorr = 0\n  } else {\n    this.spacing = 2\n    this.spacingCorr = 2\n  }\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n\n    let mEp, mEp2\n    if (this.sup) mEp = '<br>'\n    else mEp = ''\n    if (this.correctionDetaillee) mEp2 = '<br>'\n    else mEp2 = ''\n    const nom = creerNomDePolygone(3)\n    let texte = ''; let texteCorr = ''; const objetsEnonce = []; const objetsCorrection = []; let choixRapportTrigo\n    let ab, bc, ac, angleABC\n    if (this.level === 4) {\n      choixRapportTrigo = choice(['Acos'])\n    } else {\n      choixRapportTrigo = choice(['Acos', 'Asin', 'Atan'])\n    }\n    angleABC = randint(35, 55)\n\n    if (!context.isHtml && this.sup) {\n      texte += '\\\\begin{minipage}{.6\\\\linewidth}\\n'\n    }\n    switch (choixRapportTrigo) {\n      case 'Acos': // AB=BCxcos(B)\n        bc = arrondi(randint(100, 150) / 10, 1)\n        ab = arrondi(randint(40, (bc - 2) * 10) / 10, 1)\n        angleABC = Math.round(Math.acos(ab / bc) * 180 / Math.PI)\n        ac = arrondi(calcul(bc * Math.sin(Math.acos(ab / bc))), 1)\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,${mEp} $${nom[1] + nom[2]}=${texNombre2(bc)}$ cm et $${nom[0] + nom[1]}=${texNombre2(ab)}$ cm.<br>`\n        texte += `Calculer $\\\\widehat{${nom}}$ à $1 \\\\degree$ près.`\n        break\n      case 'Asin':\n        bc = randint(100, 150) / 10\n        ac = randint(40, (bc - 2) * 10) / 10\n        angleABC = Math.round(Math.asin(ac / bc) * 180 / Math.PI)\n        ab = calcul(bc * Math.cos(Math.asin(ac / bc)))\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,${mEp} $${nom[1] + nom[2]}=${texNombre2(bc)}$ cm et $${nom[0] + nom[2]}=${texNombre2(ac)}$ cm.<br>`\n        texte += `Calculer $\\\\widehat{${nom}}$ à $1 \\\\degree$ près.`\n        break\n      case 'Atan':\n        ab = randint(40, 100) / 10\n        ac = randint(40, 100) / 10\n        angleABC = Math.round(Math.atan(ac / ab) * 180 / Math.PI)\n        bc = calcul(ab / Math.cos(Math.atan(ac / ab)))\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,${mEp} $${nom[0] + nom[1]}=${texNombre2(ab)}$ cm et  $${nom[0] + nom[2]}=${texNombre2(ac)}$ cm.<br>`\n        texte += `Calculer $\\\\widehat{${nom}}$ à $1 \\\\degree$ près.`\n        break\n    }\n\n    if (!context.isHtml && this.sup) {\n      texte += '\\n\\\\end{minipage}\\n'\n    }\n    const ratioerreur = randint(80, 120, 100) / 100\n    const a = point(0, 0)\n    const b = point(ab * ratioerreur, 0)\n    const bb = point(ab, 0)\n    const c = point(0, ac / ratioerreur)\n    const cb = point(0, ac)\n    const p1 = polygone(a, b, c)\n    const p3 = polygone(a, bb, cb)\n    // p1.isVisible = false\n    const alpha = randint(0, 360)\n    const p2 = rotation(p1, a, alpha)\n    const p4 = rotation(p3, a, alpha)\n    const A = p2.listePoints[0]\n    const B = p2.listePoints[1]\n    const C = p2.listePoints[2]\n    const Bb = p4.listePoints[1]\n    const Cb = p4.listePoints[2]\n\n    const codage = codageAngleDroit(B, A, C)\n    const codageb = codageAngleDroit(Bb, A, Cb)\n    A.nom = nom[0]\n    B.nom = nom[1]\n    C.nom = nom[2]\n    const nomme = nommePolygone(p2, nom)\n    const nommeb = nommePolygone(p4, nom)\n\n    const hypo = segment(Cb, Bb)\n    hypo.epaisseur = 2\n    hypo.color = 'blue'\n    //   codageAngle.epaisseur = 3\n    //  codageAngle2.epaisseur = 3\n    const codageDeAngle = codeAngle(A, B, C, 2)\n    const codageDeAngleB = codeAngle(A, Bb, Cb, 2)\n\n    const M1 = milieu(A, B)\n    const M2 = milieu(A, C)\n    const M3 = milieu(B, C)\n    const G = barycentre(p2)\n    const M1b = milieu(A, Bb)\n    const M2b = milieu(A, Cb)\n    const M3b = milieu(Bb, Cb)\n    const Gb = barycentre(p4)\n    const m3 = homothetie(M3, G, 1 + 1.5 / longueur(G, M3))\n    const m1 = homothetie(M1, M3, 1 + 1.5 / longueur(M3, M1))\n    const m2 = homothetie(M2, M3, 1 + 1.5 / longueur(M3, M2))\n    let m4\n    m1.positionLabel = 'center'\n    m2.positionLabel = 'center'\n    m3.positionLabel = 'center'\n    const m3b = homothetie(M3b, Gb, 1 + 1.5 / longueur(Gb, M3b))\n    const m1b = homothetie(M1b, M3b, 1 + 1.5 / longueur(M3b, M1b))\n    const m2b = homothetie(M2b, M3b, 1 + 1.5 / longueur(M3b, M2b))\n    let m4b\n    m1b.positionLabel = 'center'\n    m2b.positionLabel = 'center'\n    m3b.positionLabel = 'center'\n\n    let t1, t2, t3, t1b, t2b, t3b\n    switch (choixRapportTrigo) {\n      case 'Acos': // AB=BCxcos(B)\n        t3 = latexParPoint(`${texNombre2(bc)} \\\\text{ cm}`, m3, 'black', 120, 12, '')\n        t2 = latexParPoint(`${texNombre2(ab)} \\\\text{ cm}`, m1, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G))\n        m4.positionLabel = 'center'\n        t1 = latexParPoint('?', m4, 'black', 50, 12, '')\n        t3b = latexParPoint(`${texNombre2(bc)} \\\\text{ cm}`, m3b, 'black', 120, 12, '')\n        t2b = latexParPoint(`${texNombre2(ab)} \\\\text{ cm}`, m1b, 'black', 120, 12, '')\n        m4b = homothetie(Gb, Bb, 2.7 / longueur(Bb, Gb))\n        m4b.positionLabel = 'center'\n        t1b = latexParPoint('?', m4b, 'black', 50, 12, '')\n        break\n      case 'Asin':\n        t3 = latexParPoint(`${texNombre2(bc)} \\\\text{ cm}`, m3, 'black', 120, 12, '')\n        t2 = latexParPoint(`${texNombre2(ac)} \\\\text{ cm}`, m2, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G))\n        m4.positionLabel = 'center'\n        t1 = latexParPoint('?', m4, 'black', 100, 12, '')\n        t3b = latexParPoint(`${texNombre2(bc)} \\\\text{ cm}`, m3b, 'black', 120, 12, '')\n        t2b = latexParPoint(`${texNombre2(ac)} \\\\text{ cm}`, m2b, 'black', 120, 12, '')\n        m4b = homothetie(Gb, Bb, 2.7 / longueur(Bb, Gb))\n        m4b.positionLabel = 'center'\n        t1b = latexParPoint('?', m4b, 'black', 100, 12, '')\n        break\n      case 'Atan':\n        t1 = latexParPoint(`${texNombre2(ab)} \\\\text{ cm}`, m1, 'black', 120, 12, '')\n        t2 = latexParPoint(`${texNombre2(ac)} \\\\text{ cm}`, m2, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G))\n        m4.positionLabel = 'center'\n        t3 = latexParPoint('?', m4, 'black', 100, 12, '')\n        t1b = latexParPoint(`${texNombre2(ab)} \\\\text{ cm}`, m1b, 'black', 120, 12, '')\n        t2b = latexParPoint(`${texNombre2(ac)} \\\\text{ cm}`, m2b, 'black', 120, 12, '')\n        m4b = homothetie(Gb, Bb, 2.7 / longueur(Bb, Gb))\n        m4b.positionLabel = ''\n        t3b = latexParPoint('?', m4b, 'black', 100, 12, '')\n        break\n    }\n\n    objetsEnonce.push(p2, codage, nomme, t1, t2, t3, codageDeAngle)\n    objetsCorrection.push(p4, codageb, nommeb, t1b, t2b, t3b, hypo, codageDeAngleB)\n\n    const paramsEnonce = { xmin: Math.min(A.x, B.x, C.x) - 4, ymin: Math.min(A.y, B.y, C.y) - 4, xmax: Math.max(A.x, B.x, C.x) + 3, ymax: Math.max(A.y, B.y, C.y) + 2, pixelsParCm: 17, scale: 0.37, mainlevee: true, amplitude: 0.4 }\n    const paramsCorrection = { xmin: Math.min(A.x, B.x, C.x) - 4, ymin: Math.min(A.y, B.y, C.y) - 4, xmax: Math.max(A.x, B.x, C.x) + 3, ymax: Math.max(A.y, B.y, C.y) + 2, pixelsParCm: 20, scale: 0.5, mainlevee: false }\n    if (!context.isHtml && this.sup) {\n      texte += '\\\\begin{minipage}{.4\\\\linewidth}\\n'\n    }\n    if (this.sup) {\n      texte += mathalea2d(paramsEnonce, objetsEnonce) + '<br>'\n    }\n    if (this.correctionDetaillee) {\n      if (!context.isHtml) texteCorr += '\\\\begin{minipage}{.5\\\\linewidth}\\n'\n      texteCorr += mathalea2d(paramsCorrection, objetsCorrection) + '<br>'\n      if (!context.isHtml) texteCorr += '\\n\\\\end{minipage}\\n'\n    }\n    if (!context.isHtml && this.sup) {\n      texte += '\\n\\\\end{minipage}\\n'\n    }\n    if (this.correctionDetaillee && !context.isHtml) texteCorr += '\\\\begin{minipage}{.5\\\\linewidth}\\n'\n    switch (choixRapportTrigo) {\n      case 'Acos': // AB=BCxcos(B)\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$, ${mEp2}le cosinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\cos\\\\left(\\\\widehat{${nom}}\\\\right)=\\\\dfrac{${nom[0] + nom[1]}}{${nom[1] + nom[2]}}$.<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\cos\\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(texNombre2(ab), texNombre2(bc))}$<br>`\n        texteCorr += `$\\\\widehat{${nom}}=\\\\arccos(${texFraction(texNombre2(ab), texNombre2(bc))})\\\\approx ${angleABC}\\\\degree$<br>`\n        break\n      case 'Asin':\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$ ${mEp2},le sinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\sin \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[1] + nom[2])}$<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\sin\\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(texNombre2(ac), texNombre2(bc))}$<br>`\n        texteCorr += `$\\\\widehat{${nom}}=\\\\arcsin(${texFraction(texNombre2(ac), texNombre2(bc))})\\\\approx ${angleABC}\\\\degree$<br>`\n\n        break\n      case 'Atan':\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$, ${mEp2}la tangente de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\tan \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[0] + nom[1])}$<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\tan\\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(texNombre2(ac), texNombre2(ab))}$<br>`\n        texteCorr += `$\\\\widehat{${nom}}=\\\\arctan\\\\left(${texFraction(texNombre2(ac), texNombre2(ab))}\\\\right) \\\\approx ${angleABC} \\\\degree $ <br>`\n        break\n    }\n    if (this.correctionDetaillee && !context.isHtml) texteCorr += '\\n\\\\end{minipage}\\n'\n\n    /*****************************************************/\n    // Pour AMC\n    if (context.isAmc) {\n      this.autoCorrection[0] = {\n        enonce: texte,\n        propositions: [{ texte: texteCorr, statut: 4, feedback: '' }],\n        reponse: { valeur: angleABC, param: { digits: 2, decimals: 0, signe: false, exposantNbChiffres: 0 } }\n      }\n    } else if (this.interactif && context.isHtml) {\n      setReponse(this, 0, arrondiVirgule(angleABC))\n    }\n    texte += ajouteChampTexteMathLive(this, 0, 'largeur25 inline', { texteApres: ' °' })\n    /****************************************************/\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n\n  this.besoinFormulaireCaseACocher = ['Figure à main levée', false]\n}\n","import CalculDAngle from '../3e/3G31.js'\nexport { interactifReady, interactifType, amcReady, amcType } from '../3e/3G31.js'\nexport const titre = 'Utiliser le cosinus pour calculer la mesure d’un angle dans un triangle rectangle'\n\n/**\n * @author Jean-Claude Lhote\n * 3G31\n * Calcul d'angle dans le triangle rectangle\n * Le niveau 1 se limite à l'utilisation de Arccos\n * Le niveau 2 utilise la fonction trigo la plus pertinente pour un calcul direct\n */\nexport default function CalculDAngle4e () {\n  CalculDAngle.call(this)\n  this.level = 4\n  this.sup = true\n  this.titre = titre\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["interactifReady","interactifType","amcReady","amcType","titre","CalculDAngle","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","correctionDetailleeDisponible","correctionDetaillee","context","spacing","spacingCorr","nouvelleVersion","mEp","mEp2","listeQuestions","listeCorrections","autoCorrection","nom","creerNomDePolygone","texte","texteCorr","objetsEnonce","objetsCorrection","choixRapportTrigo","ab","bc","ac","angleABC","level","choice","randint","arrondi","Math","round","acos","PI","calcul","sin","texNombre2","asin","cos","atan","ratioerreur","a","point","b","bb","c","cb","p1","polygone","p3","alpha","p2","rotation","p4","A","listePoints","B","C","Bb","Cb","codage","codageAngleDroit","codageb","nomme","nommePolygone","nommeb","hypo","segment","epaisseur","color","codageDeAngle","codeAngle","codageDeAngleB","M1","milieu","M2","M3","G","barycentre","M1b","M2b","M3b","Gb","m3","homothetie","longueur","m1","m2","m4","positionLabel","m3b","m1b","m2b","m4b","t1","t2","t3","t1b","t2b","t3b","latexParPoint","push","paramsEnonce","xmin","min","x","ymin","y","xmax","max","ymax","pixelsParCm","scale","mainlevee","amplitude","paramsCorrection","mathalea2d","texFraction","enonce","propositions","statut","feedback","reponse","valeur","param","digits","decimals","signe","exposantNbChiffres","interactif","setReponse","arrondiVirgule","ajouteChampTexteMathLive","texteApres","listeQuestionsToContenu","besoinFormulaireCaseACocher","CalculDAngle4e","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}