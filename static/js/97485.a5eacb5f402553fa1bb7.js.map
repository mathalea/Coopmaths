{"version":3,"file":"js/97485.a5eacb5f402553fa1bb7.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/2e/can2F06.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { listeQuestionsToContenu, reduireAxPlusB, randint, choice, texFractionReduite } from '../../../modules/outils.js'\nimport { tableauDeVariation, mathalea2d } from '../../../modules/2d.js'\nimport { propositionsQcm } from '../../../modules/gestionInteractif.js'\nexport const titre = 'Dresser le tableau de signes d’une fonction affine'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '15/12/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence\n*/\nexport default function TableauSignes () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 1\n  this.tailleDiaporama = 1\n  this.spacing = 2\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let texte, texteCorr, a, b, ligne1\n    if (a === 0 && b === 0) { // On évite la fonction nulle\n      a = 1\n    }\n    if (this.interactif) {\n      a = randint(1, 6) * choice([-1, 1])// coefficient a de la fonction affine\n      b = randint(1, 6) * choice([-1, 1])// coefficient b de la fonction affine\n      texte = `Quel est le tableau de signes de la fonction $f$ définie sur  $\\\\mathbb R$ par $f(x)=${reduireAxPlusB(a, b)}$ ? `\n      if (a > 0) {\n        this.autoCorrection[0] = {\n          enonce: texte,\n          options: { vertical: true },\n          propositions: [\n            {\n              texte: mathalea2d({ xmin: -0.5, ymin: -6.1, xmax: 30, ymax: 0.1 }, tableauDeVariation({\n                tabInit: [\n                  [\n                  // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n                    ['$x$', 2, 30], ['$f(x)$', 2, 50]\n                  ],\n                  // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n                  ['$-\\\\infty$', 30, `$${texFractionReduite(-b, a)}$`, 20, '$+\\\\infty$', 30]\n                ],\n                // tabLines ci-dessous contient les autres lignes du tableau.\n                tabLines: [['Line', 30, '', 0, '-', 20, 'z', 20, '+']],\n                colorBackground: '',\n                espcl: 3.5, // taille en cm entre deux antécédents\n                deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n                lgt: 5, // taille de la première colonne en cm\n                hauteurLignes: [15, 15]\n              })),\n              statut: true\n            },\n            {\n              texte: mathalea2d({ xmin: -0.5, ymin: -6.1, xmax: 30, ymax: 0.1 }, tableauDeVariation({\n                tabInit: [\n                  [\n                  // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n                    ['$x$', 2, 30], ['$f(x)$', 2, 50]\n                  ],\n                  // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n                  ['$-\\\\infty$', 30, `$${texFractionReduite(b, a)}$`, 20, '$+\\\\infty$', 30]\n                ],\n                // tabLines ci-dessous contient les autres lignes du tableau.\n                tabLines: [['Line', 30, '', 0, '-', 20, 'z', 20, '+']],\n                colorBackground: '',\n                espcl: 3.5, // taille en cm entre deux antécédents\n                deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n                lgt: 5, // taille de la première colonne en cm\n                hauteurLignes: [15, 15]\n              })),\n              statut: false\n            },\n            {\n              texte: mathalea2d({ xmin: -0.5, ymin: -6.1, xmax: 30, ymax: 0.1 }, tableauDeVariation({\n                tabInit: [\n                  [\n                  // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n                    ['$x$', 2, 30], ['$f(x)$', 2, 50]\n                  ],\n                  // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n                  ['$-\\\\infty$', 30, `$${texFractionReduite(-b, a)}$`, 20, '$+\\\\infty$', 30]\n                ],\n                // tabLines ci-dessous contient les autres lignes du tableau.\n                tabLines: [['Line', 30, '', 0, '+', 20, 'z', 20, '-']],\n                colorBackground: '',\n                espcl: 3.5, // taille en cm entre deux antécédents\n                deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n                lgt: 5, // taille de la première colonne en cm\n                hauteurLignes: [15, 15]\n              })),\n              statut: false\n            }\n          ]\n        }\n      } else {\n        this.autoCorrection[0] = {\n          enonce: texte,\n          options: { vertical: true },\n          propositions: [\n            {\n              texte: mathalea2d({ xmin: -0.5, ymin: -6.1, xmax: 30, ymax: 0.1 }, tableauDeVariation({\n                tabInit: [\n                  [\n                    // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n                    ['$x$', 2, 30], ['$f(x)$', 2, 50]\n                  ],\n                  // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n                  ['$-\\\\infty$', 30, `$${texFractionReduite(-b, a)}$`, 20, '$+\\\\infty$', 30]\n                ],\n                // tabLines ci-dessous contient les autres lignes du tableau.\n                tabLines: [['Line', 30, '', 0, '+', 20, 'z', 20, '-']],\n                colorBackground: '',\n                espcl: 3.5, // taille en cm entre deux antécédents\n                deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n                lgt: 5, // taille de la première colonne en cm\n                hauteurLignes: [15, 15]\n              })),\n              statut: true\n            },\n            {\n              texte: mathalea2d({ xmin: -0.5, ymin: -6.1, xmax: 30, ymax: 0.1 }, tableauDeVariation({\n                tabInit: [\n                  [\n                    // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n                    ['$x$', 2, 30], ['$f(x)$', 2, 50]\n                  ],\n                  // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n                  ['$-\\\\infty$', 30, `$${texFractionReduite(b, a)}$`, 20, '$+\\\\infty$', 30]\n                ],\n                // tabLines ci-dessous contient les autres lignes du tableau.\n                tabLines: [['Line', 30, '', 0, '+', 20, 'z', 20, '-']],\n                colorBackground: '',\n                espcl: 3.5, // taille en cm entre deux antécédents\n                deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n                lgt: 5, // taille de la première colonne en cm\n                hauteurLignes: [15, 15]\n              })),\n              statut: false\n            },\n            {\n              texte: mathalea2d({ xmin: -0.5, ymin: -6.1, xmax: 30, ymax: 0.1 }, tableauDeVariation({\n                tabInit: [\n                  [\n                    // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n                    ['$x$', 2, 30], ['$f(x)$', 2, 50]\n                  ],\n                  // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n                  ['$-\\\\infty$', 30, `$${texFractionReduite(-b, a)}$`, 20, '$+\\\\infty$', 30]\n                ],\n                // tabLines ci-dessous contient les autres lignes du tableau.\n                tabLines: [['Line', 30, '', 0, '-', 20, 'z', 20, '+']],\n                colorBackground: '',\n                espcl: 3.5, // taille en cm entre deux antécédents\n                deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n                lgt: 5, // taille de la première colonne en cm\n                hauteurLignes: [15, 15]\n              })),\n              statut: false\n            }\n          ]\n        }\n      }\n      texte += propositionsQcm(this, 0).texte\n    } else {\n      a = randint(1, 6) * choice([-1, 1])// coefficient a de la fonction affine\n      b = randint(0, 6) * choice([-1, 1])// coefficient b de la fonction affine\n      texte = `Dresser le tableau de signes de la fonction $f$ définie sur  $\\\\mathbb R$ par $f(x)=${reduireAxPlusB(a, b)}$ `\n    }\n\n    texteCorr = `$f$ est une fonction affine. Elle s’annule en $x_0=${texFractionReduite(-b, a)}$. `\n    if (a > 0) {\n      texteCorr += `<br>Comme $${a}>0~$, $~f(x)$ est positif pour $~x>${texFractionReduite(-b, a)} ~$ et négatif pour $~x<${texFractionReduite(-b, a)} $<br>`\n      ligne1 = ['Line', 30, '', 0, '-', 20, 'z', 20, '+']\n    } else {\n      texteCorr += `<br>Comme $${a}<0$,  $f(x)~$ est négatif pour $~x>${texFractionReduite(-b, a)} ~$ et positif pour $~x<${texFractionReduite(-b, a)} $<br>`\n      ligne1 = ['Line', 30, '', 0, '+', 20, 'z', 20, '-']\n    }\n    texteCorr += mathalea2d({ xmin: -0.5, ymin: -6.1, xmax: 30, ymax: 0.1 }, tableauDeVariation({\n      tabInit: [\n        [\n          // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n          ['$x$', 2, 30], ['$f(x)$', 2, 50]\n        ],\n        // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n        ['$-\\\\infty$', 30, `$${texFractionReduite(-b, a)}$`, 20, '$+\\\\infty$', 30]\n      ],\n      // tabLines ci-dessous contient les autres lignes du tableau.\n      tabLines: [ligne1],\n      colorBackground: '',\n      espcl: 3.5, // taille en cm entre deux antécédents\n      deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n      lgt: 5, // taille de la première colonne en cm\n      hauteurLignes: [15, 15]\n    }))\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","dateDePublication","TableauSignes","texte","texteCorr","a","b","ligne1","randint","choice","reduireAxPlusB","enonce","options","vertical","propositions","mathalea2d","xmin","ymin","xmax","ymax","tableauDeVariation","tabInit","texFractionReduite","tabLines","colorBackground","espcl","deltacl","lgt","hauteurLignes","statut","propositionsQcm","listeQuestionsToContenu"],"sourceRoot":""}