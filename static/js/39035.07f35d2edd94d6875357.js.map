{"version":3,"file":"js/39035.07f35d2edd94d6875357.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R10-0.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListesSansChangerOrdre,calcul,texNombre,miseEnEvidence,texteEnCouleur,tableauColonneLigne} from '../../modules/outils.js'\nexport const titre = 'Trouver l’opposé d’un nombre relatif'\n\n/** \n* * Remplir un tableau en utilisant la notion d'opposé\n* * 5R10-0\n* @author Sébastien Lozano\n*/\nexport default function Trouver_oppose() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.debug = false;\n\tthis.sup = 1;\n\tif (this.debug) {\n\t\tthis.nbQuestions = 1;\n\t} else {\n\t\tthis.nbQuestions = 1;\n\t};\n\n\tthis.titre = titre;\n\tthis.consigne = \"Compléter le tableau suivant.\";\n\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\t//this.nbQuestionsModifiable = false;\n\t//context.isHtml? this.spacing = 3 : this.spacing = 2; \n\t//context.isHtml? this.spacingCorr = 3 : this.spacingCorr = 2;\n\n\tlet typesDeQuestionsDisponibles;\n\n\tthis.nouvelleVersion = function () {\n\t\tif (this.debug) {\n\t\t\ttypesDeQuestionsDisponibles = [1];\n\t\t} else {\n\t\t\ttypesDeQuestionsDisponibles = [1];\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\n\t\t//typesDeQuestionsDisponibles=[1];\t\t\t\n\n\t\t//let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\t\t\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\t// une fonction pour générer un relatif et son opposé\n\t\t\tfunction nbRel_et_son_oppose() {\n\t\t\t\tlet nb_num = calcul(randint(-9, 9) + calcul(randint(-9, 9) / 10));\n\n\t\t\t\treturn {\n\t\t\t\t\tnb: texNombre(nb_num),\n\t\t\t\t\topp: texNombre(-nb_num)\n\t\t\t\t};\n\t\t\t}\n\t\t\tlet nb_ligne_nombres = ['\\\\text{Nombre}'];\n\t\t\tlet nb_ligne_nombres_corr = ['\\\\text{Nombre}'];\n\t\t\tlet nb_ligne_nombres_opp = [];\n\t\t\tlet nb_ligne_nombres_opp_corr = [];\n\t\t\tlet nb;\n\t\t\tfor (let k = 0; k < 6; k++) {\n\t\t\t\tnb = nbRel_et_son_oppose();\n\t\t\t\tif (randint(0, 1) == 1) {\n\t\t\t\t\tnb_ligne_nombres[k + 1] = '';\n\t\t\t\t\tnb_ligne_nombres_corr[k + 1] = miseEnEvidence(nb.nb);\n\t\t\t\t\tnb_ligne_nombres_opp.push(nb.opp)\n\t\t\t\t\tnb_ligne_nombres_opp_corr.push(nb.opp)\n\t\t\t\t} else {\n\t\t\t\t\tnb_ligne_nombres.push(nb.nb);\n\t\t\t\t\tnb_ligne_nombres_corr.push(nb.nb);\n\t\t\t\t\tnb_ligne_nombres_opp[k] = '';\n\t\t\t\t\tnb_ligne_nombres_opp_corr[k] = miseEnEvidence(nb.opp);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet enonces = [];\n\t\t\tenonces.push({\n\t\t\t\tenonce: `\t\t\t\t\t\t\t\t\n\t\t\t\t${tableauColonneLigne(nb_ligne_nombres, ['\\\\text{Opposé du nombre}'], nb_ligne_nombres_opp)}\n\t\t\t\t`,\n\t\t\t\tquestion: ``,\n\t\t\t\tcorrection: `\n\t\t\t\t${tableauColonneLigne(nb_ligne_nombres_corr, ['\\\\text{Opposé du nombre}'], nb_ligne_nombres_opp_corr)}\t\t\t\t\n\t\t\t\t`\n\t\t\t});\n\t\t\tenonces.push({\n\t\t\t\tenonce: `énoncé type 2`,\n\t\t\t\tquestion: ``,\n\t\t\t\tcorrection: `${texteEnCouleur(`correction type2`)}`\n\t\t\t});\n\n\t\t\tswitch (listeTypeDeQuestions[i]) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttexte = `${enonces[0].enonce}`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = `${enonces[0].correction}`;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ttexte = `${enonces[1].enonce}`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += `<br> =====CORRECTION======<br>${enonces[1].correction}`;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = `${enonces[1].correction}`;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\tlisteQuestionsToContenu(this);\n\n\t}\n\t//this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n\t//this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\t\n}\n\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Trouver_oppose","typesDeQuestionsDisponibles","Exercice","this","debug","sup","nbQuestions","consigne","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","nbRel_et_son_oppose","nb_num","calcul","randint","nb","texNombre","opp","nb_ligne_nombres","nb_ligne_nombres_corr","nb_ligne_nombres_opp","nb_ligne_nombres_opp_corr","k","miseEnEvidence","push","enonces","enonce","tableauColonneLigne","question","correction","texteEnCouleur","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}