/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_5e__Constructibilite_des_triangles_js"],{

/***/ "./src/js/exercices/5e/_Constructibilite_des_triangles.js":
/*!****************************************************************!*\
  !*** ./src/js/exercices/5e/_Constructibilite_des_triangles.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Constructibilite_des_triangles)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst titre = 'Constructibilité des triangles via les longueurs';\n/**\n * Constructibilité des triangles\n * Préciser ici les numéros des exos\n * 5G2 exercice parent il faudra supprimmer la version beta5G2 de la liste des choix du fichier mathalea_exercices.js\n * 5G21-1\n * 5G31-1\n * Dans ces exercices je me servais de this.beta pour faire passer l'exo de beta.html à mathalea.html\n * this.beta pouvait prendre la valeur 'beta' ou '', tous les autres this.beta sont devenus des this.debug\n * Mise à jour le 2021-01-25\n * @author Sébastien Lozano\n */\n\nfunction Constructibilite_des_triangles() {\n  'use strict';\n\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\n  this.sup = 1;\n\n  if (this.exo == this.beta + '5G21-1') {\n    // via longueurs\n    this.titre = titre;\n    this.consigne = `Justifier si les longueurs données permettent de construire le triangle.`;\n    this.consigne += `<br>Dire si tous les élèves qui doivent construire ce triangle auront la même figure.`;\n  } else if (this.exo == this.beta + '5G31-1') {\n    //via angles\n    this.titre = `Constructibilité des triangles via les angles`;\n    this.consigne = `Justifier si les angles donnés permettent de construire le triangle.`;\n    this.consigne += `<br>Dire si tous les élèves qui doivent construire ce triangle auront la même figure.`;\n  } else {\n    this.titre = \"Constructibilité des triangles\";\n    this.consigne = `Justifier si les longueurs ou les angles donnés permettent de construire le triangle.`;\n    this.consigne += `<br>Dire si tous les élèves qui doivent construire ce triangle auront la même figure.`;\n  }\n\n  ;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.nbQuestionsModifiable = false;\n  this.listePackages = `bclogo`;\n  let type_de_questions_disponibles;\n\n  this.nouvelleVersion = function () {\n    if (this.exo == this.beta + '5G21-1') {\n      // via longueurs\n      if (this.sup == 1) {\n        type_de_questions_disponibles = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)([1, 2, 3]);\n        this.nbQuestions = type_de_questions_disponibles.length;\n      } else if (this.sup == 2) {\n        type_de_questions_disponibles = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([1, 2, 3]), 4];\n        this.nbQuestions = type_de_questions_disponibles.length;\n      }\n\n      ;\n    } else if (this.exo == this.beta + '5G31-1') {\n      //via angles\n      if (this.sup == 1) {\n        type_de_questions_disponibles = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)([5, 6, 7]);\n        this.nbQuestions = type_de_questions_disponibles.length;\n      } else if (this.sup == 2) {\n        type_de_questions_disponibles = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([5, 6, 7]), 8];\n        this.nbQuestions = type_de_questions_disponibles.length;\n      }\n\n      ;\n    } else {\n      type_de_questions_disponibles = [1, 2, 3, 4, 5, 6, 7, 8];\n      this.nbQuestions = type_de_questions_disponibles.length;\n    }\n\n    ; //let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n    let listeTypeDeQuestions = type_de_questions_disponibles; // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    this.listeQuestions = []; // Liste de questions\n\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    for (let i = 0, texte, texteCorr, l1, l2, l3, a1, a2, a3, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // on fixe longueur min et max en cm\n      let l_min = 2;\n      let l_max = 20; // on fixe angle min et max en degré\n\n      let a_min = 0;\n      let a_max = 180; // on crée un objet triangle\n\n      let triangle = new _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.Triangles(); // on crée un tableau pour le triangle courant\n\n      let current_triangle = [];\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          // 3 longueurs constructible\n          while (!triangle.isTrueTriangleLongueurs()) {\n            l1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            l2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            l3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            triangle.l1 = l1;\n            triangle.l2 = l2;\n            triangle.l3 = l3;\n          }\n\n          ;\n          texte = `${triangle.getNom()} tel que ${triangle.getLongueurs()[0]} $= ${triangle.l1}$ cm ; `;\n          texte += `${triangle.getLongueurs()[1]} $= ${triangle.l2}$ cm et ${triangle.getLongueurs()[2]} $= ${triangle.l3}$ cm.`; // on crée l'objet longueurs + valeurs des côtés du triangle\n\n          for (let _i = 0; _i < 3; _i++) {\n            current_triangle.push({\n              longueur: triangle.getLongueurs()[_i],\n              cote: triangle.getCotes()[_i],\n              valeur: triangle.getLongueursValeurs()[_i]\n            });\n          }\n\n          ; // on trie les couples longueurs/valeurs du triangle selon les valeurs croissantes.\n\n          current_triangle.sort(function (a, b) {\n            return a.valeur - b.valeur;\n          });\n          texteCorr = `Supposons que l'on puisse construire un triangle ${triangle.getNom()} avec ces mesures.`;\n          texteCorr += `<br>Dans le triangle ${triangle.getNom()}, ${current_triangle[2].cote} qui mesure $${current_triangle[2].valeur}$ cm est le plus grand côté.`;\n          texteCorr += `<br> De plus ${current_triangle[0].longueur} + ${current_triangle[1].longueur} = $${current_triangle[0].valeur}$ cm + $${current_triangle[1].valeur}$ cm = $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(current_triangle[0].valeur + current_triangle[1].valeur)}$ cm.`;\n          texteCorr += `<br> On constate que ${current_triangle[0].longueur} + ${current_triangle[1].longueur} > ${current_triangle[2].longueur}.`;\n          texteCorr += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('On peut donc construire le triangle ' + triangle.getNom())}.`;\n          texteCorr += `<br><br>  Si on considère que le triangle nommé dans le sens des aiguilles d'une montre et celui nommé dans le sens inverse sont différents, ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('plusieurs tels triangles existent')}.`;\n          texteCorr += `<br> Ils sont obtenus les uns à partir des autres par symétire axiale par rapport à un des côtés.`;\n          break;\n\n        case 2:\n          // 3 longueurs plat\n          while (!triangle.isPlatTriangleLongueurs()) {\n            l1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            l2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            l3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(l1 + l2);\n            triangle.l1 = l1;\n            triangle.l2 = l2;\n            triangle.l3 = l3;\n          }\n\n          ;\n          texte = `${triangle.getNom()} tel que ${triangle.getLongueurs()[0]} $ = ${triangle.l1}$ cm ; `;\n          texte += `${triangle.getLongueurs()[1]} $= ${triangle.l2}$ cm et ${triangle.getLongueurs()[2]} $= ${triangle.l3}$ cm.`; // on crée l'objet longueurs + valeurs des côtés du triangle\n\n          for (let _i2 = 0; _i2 < 3; _i2++) {\n            current_triangle.push({\n              longueur: triangle.getLongueurs()[_i2],\n              cote: triangle.getCotes()[_i2],\n              valeur: triangle.getLongueursValeurs()[_i2]\n            });\n          }\n\n          ; // on trie les couples longueurs/valeurs du triangle selon les valeurs croissantes.\n\n          current_triangle.sort(function (a, b) {\n            return a.valeur - b.valeur;\n          });\n          texteCorr = `Supposons que l'on puisse construire un triangle ${triangle.getNom()} avec ces mesures.`;\n          texteCorr += `<br>Dans le triangle ${triangle.getNom()}, ${current_triangle[2].cote} qui mesure $${current_triangle[2].valeur}$ cm est le plus grand côté.`;\n          texteCorr += `<br> De plus ${current_triangle[0].longueur} + ${current_triangle[1].longueur} = $${current_triangle[0].valeur}$ cm + $${current_triangle[1].valeur}$ cm = $${current_triangle[2].valeur}$ cm aussi.`;\n          texteCorr += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('On peut donc construire le triangle ' + triangle.getNom() + ' c\\'est un triangle plat')}.`;\n          texteCorr += `<br><br>${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('Un seul triangle de ce type existe')}, il s'agit du segment ${current_triangle[2].cote} sur lequel on place le point `;\n\n          if (current_triangle[0].longueur.split('')[2] == current_triangle[2].cote.split('')[1] || current_triangle[0].longueur.split('')[2] == current_triangle[2].cote.split('')[2]) {\n            texteCorr += `${current_triangle[0].longueur.split('')[1]}`;\n          } else {\n            texteCorr += `${current_triangle[0].longueur.split('')[2]}`;\n          }\n\n          ;\n          texteCorr += `.`; //`${current_triangle[0].longueur.split('')[2]}.`;\n\n          break;\n\n        case 3:\n          // 3 longueurs non constructible\n          // on initialise les longueurs sinon la méthode isTrueTriangleLongueurs() renvoie false!\n          l1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n          l2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n          l3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n          triangle.l1 = l1;\n          triangle.l2 = l2;\n          triangle.l3 = l3;\n\n          while (triangle.isTrueTriangleLongueurs() || triangle.isPlatTriangleLongueurs()) {\n            l1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            l2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            l3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            triangle.l1 = l1;\n            triangle.l2 = l2;\n            triangle.l3 = l3;\n          }\n\n          ;\n          texte = `${triangle.getNom()} tel que ${triangle.getLongueurs()[0]} $= ${triangle.l1}$ cm ; `;\n          texte += `${triangle.getLongueurs()[1]} $= ${triangle.l2}$ cm et ${triangle.getLongueurs()[2]} $= ${triangle.l3}$ cm.`; // on crée l'objet longueurs + valeurs des côtés du triangle\n\n          for (let _i3 = 0; _i3 < 3; _i3++) {\n            current_triangle.push({\n              longueur: triangle.getLongueurs()[_i3],\n              cote: triangle.getCotes()[_i3],\n              valeur: triangle.getLongueursValeurs()[_i3]\n            });\n          }\n\n          ; // on trie les couples longueurs/valeurs du triangle selon les valeurs croissantes.\n\n          current_triangle.sort(function (a, b) {\n            return a.valeur - b.valeur;\n          });\n          texteCorr = `Supposons que l'on puisse construire un triangle ${triangle.getNom()} avec ces mesures.`;\n          texteCorr += `<br>Dans le triangle ${triangle.getNom()}, ${current_triangle[2].cote} qui mesure $${current_triangle[2].valeur}$ cm est le plus grand côté.`;\n          texteCorr += `<br> De plus ${current_triangle[0].longueur} + ${current_triangle[1].longueur} = $${current_triangle[0].valeur}$ cm + $${current_triangle[1].valeur}$ cm = $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(current_triangle[0].valeur + current_triangle[1].valeur)}$ cm.`;\n          texteCorr += `<br> On constate que ${current_triangle[0].longueur} + ${current_triangle[1].longueur} < ${current_triangle[2].longueur}, les longueurs données ne permettent donc pas de satisfaire à l'inégalité triangulaire.`;\n          texteCorr += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('On ne peut donc pas construire le triangle ' + triangle.getNom())}.`;\n          texteCorr += `<br><br>  ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('Aucun triangle de ce type n\\'existe')}.`;\n          break;\n\n        case 4:\n          // 2 longueurs et le périmètre\n          // on utilise la méthode isTrueTriangleLongueurs(), le triangle ne sera pas plat.\n          while (!triangle.isTrueTriangleLongueurs()) {\n            l1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            l2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            l3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(l_min, l_max);\n            triangle.l1 = l1;\n            triangle.l2 = l2;\n            triangle.l3 = l3;\n          }\n\n          ;\n          texte = `${triangle.getNom()} tel que ${triangle.getLongueurs()[0]} $= ${triangle.l1}$ cm ; `;\n          texte += `${triangle.getLongueurs()[1]} $= ${triangle.l2}$ cm et dont le périmètre vaut $${triangle.getPerimetre()}$ cm.`; // on crée l'objet longueurs + valeurs des côtés du triangle\n\n          for (let _i4 = 0; _i4 < 3; _i4++) {\n            current_triangle.push({\n              longueur: triangle.getLongueurs()[_i4],\n              cote: triangle.getCotes()[_i4],\n              valeur: triangle.getLongueursValeurs()[_i4]\n            });\n          }\n\n          ; // on trie les couples longueurs/valeurs du triangle selon les valeurs croissantes.\n\n          current_triangle.sort(function (a, b) {\n            return a.valeur - b.valeur;\n          });\n          texteCorr = `Supposons que l'on puisse construire un triangle ${triangle.getNom()} avec ces mesures.`;\n          texteCorr += `<br>Puisque le périmètre vaut $${triangle.getPerimetre()}$ cm alors la troisième longueur vaut ${triangle.getLongueurs()[2]} = $${triangle.getPerimetre()}$ cm - $${triangle.l1}$ cm - $${triangle.l2}$ cm = $${triangle.l3}$ cm.`;\n          texteCorr += `<br> Donc dans le triangle ${triangle.getNom()}, ${current_triangle[2].cote} qui mesure $${current_triangle[2].valeur}$ cm est le plus grand côté.`;\n          texteCorr += `<br> De plus ${current_triangle[0].longueur} + ${current_triangle[1].longueur} = $${current_triangle[0].valeur}$ cm + $${current_triangle[1].valeur}$ cm = $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(current_triangle[0].valeur + current_triangle[1].valeur)}$ cm.`;\n          texteCorr += `<br> On constate que ${current_triangle[0].longueur} + ${current_triangle[1].longueur} > ${current_triangle[2].longueur}`;\n          texteCorr += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('On peut donc construire le triangle ' + triangle.getNom())}.`; // texteCorr += `<br><br>  Si on considère que le triangle nommé dans le sens des aiguilles d'une montre et celui nommé dans le sens inverse sont différents, ${texte_en_couleur('deux tels triangles existent')}.`;\n          // texteCorr += `<br> Les deux étant obtenus l'un à partir de l'autre par symétire axiale.`;\n\n          texteCorr += `<br><br>  Si on considère que le triangle nommé dans le sens des aiguilles d'une montre et celui nommé dans le sens inverse sont différents, ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('plusieurs tels triangles existent')}.`;\n          texteCorr += `<br> Ils sont obtenus les uns à partir des autres par symétire axiale par rapport à un des côtés.`;\n          break;\n\n        case 5:\n          //3 angles constructible\n          while (!triangle.isTrueTriangleAngles()) {\n            a1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max, [0, 180]);\n            a2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max, [0, 180]);\n            a3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(180 - a1 - a2);\n            triangle.a1 = a1;\n            triangle.a2 = a2;\n            triangle.a3 = a3;\n          }\n\n          ;\n          texte = ``;\n          texteCorr = ``;\n          texte = `${triangle.getNom()} tel que ${triangle.getAngles()[0]} $= ${triangle.a1}\\\\degree$ ; `;\n          texte += `${triangle.getAngles()[1]} $= ${triangle.a2}\\\\degree$ et ${triangle.getAngles()[2]} $= ${triangle.a3}\\\\degree$.`; // on crée l'objet longueurs + valeurs des côtés du triangle\n\n          for (let _i5 = 0; _i5 < 3; _i5++) {\n            current_triangle.push({\n              angle: triangle.getAngles()[_i5],\n              valeur: triangle.getAnglesValeurs()[_i5]\n            });\n          }\n\n          ; // on trie les couples longueurs/valeurs du triangle selon les valeurs croissantes.\n\n          current_triangle.sort(function (a, b) {\n            return a.valeur - b.valeur;\n          });\n          texteCorr = `Supposons que l'on puisse construire un triangle ${triangle.getNom()} avec ces mesures.`;\n          texteCorr += `<br>Dans le triangle ${triangle.getNom()}, ${current_triangle[0].angle} + ${current_triangle[1].angle} + ${current_triangle[2].angle} = $${current_triangle[0].valeur}\\\\degree + ${current_triangle[1].valeur}\\\\degree + ${current_triangle[2].valeur}\\\\degree = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(current_triangle[0].valeur + current_triangle[1].valeur + current_triangle[2].valeur)}\\\\degree$.`;\n          texteCorr += `<br> On constate que la somme des trois angles du triangle vaut bien $180\\\\degree$.`;\n          texteCorr += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('On peut donc construire le triangle ' + triangle.getNom())}.`;\n          texteCorr += `<br><br>  ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('Il existe une infinité de triangles avec ces mesures.')}`;\n          texteCorr += `<br> On les obtient les uns à partir des autres par un agrandissement ou une réduction.`;\n          break;\n\n        case 6:\n          // 3 angles plat\n          while (!triangle.isPlatTriangleAngles()) {\n            a1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max);\n            a2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max);\n            a3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(180 - a1 - a2);\n            triangle.a1 = a1;\n            triangle.a2 = a2;\n            triangle.a3 = a3;\n          }\n\n          ;\n          texte = ``;\n          texteCorr = ``;\n          texte = `${triangle.getNom()} tel que ${triangle.getAngles()[0]} $= ${triangle.a1}\\\\degree$ ; `;\n          texte += `${triangle.getAngles()[1]} $= ${triangle.a2}\\\\degree$ et ${triangle.getAngles()[2]} $= ${triangle.a3}\\\\degree$.`; // on crée l'objet longueurs + valeurs des côtés du triangle\n\n          for (let _i6 = 0; _i6 < 3; _i6++) {\n            current_triangle.push({\n              angle: triangle.getAngles()[_i6],\n              valeur: triangle.getAnglesValeurs()[_i6]\n            });\n          }\n\n          ; // on trie les couples longueurs/valeurs du triangle selon les valeurs croissantes.\n\n          current_triangle.sort(function (a, b) {\n            return a.valeur - b.valeur;\n          });\n          texteCorr = `Supposons que l'on puisse construire un triangle ${triangle.getNom()} avec ces mesures.`;\n          texteCorr += `<br>Dans le triangle ${triangle.getNom()}, ${current_triangle[0].angle} + ${current_triangle[1].angle} + ${current_triangle[2].angle} = $${current_triangle[0].valeur}\\\\degree + ${current_triangle[1].valeur}\\\\degree + ${current_triangle[2].valeur}\\\\degree = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(current_triangle[0].valeur + current_triangle[1].valeur + current_triangle[2].valeur)}\\\\degree$.`;\n          texteCorr += `<br> On constate que la somme des trois angles du triangle vaut bien $180\\\\degree$.`;\n          texteCorr += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('On peut donc construire le triangle ' + triangle.getNom())}.`;\n          texteCorr += `<br> Deux des trois angles du triangle valent $0\\\\degree$, ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(triangle.getNom() + ' est donc un triangle plat')}.`;\n          texteCorr += `<br><br>  ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('Il existe une infinité de triangles avec ces mesures.')}`;\n          texteCorr += `<br> On les obtient en traçant des segments et en plaçant le troisième sommet sur ce segment, les longueurs n'ayant aucune importance.`;\n          texteCorr += `<br> Dans le cas présent, il s'agit d'un segment $[${current_triangle[2].angle.split('')[12]}${current_triangle[2].angle.split('')[14]}]$ sur lequel on place un point ${current_triangle[2].angle.split('')[13]}.`; //texteCorr += `<br> ${JSON.stringify(current_triangle)}`;\n\n          break;\n\n        case 7:\n          // 3 angles non constructible\n          // on initialise les angles sinon la méthode isTrueTriangleAngles() renvoie false!\n          a1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max);\n          a2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max);\n          a3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max);\n          triangle.a1 = a1;\n          triangle.a2 = a2;\n          triangle.a3 = a3;\n\n          while (triangle.isTrueTriangleAngles()) {\n            a1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max);\n            a2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max);\n            a3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max);\n            triangle.a1 = a1;\n            triangle.a2 = a2;\n            triangle.a3 = a3;\n          }\n\n          ;\n          texte = `${triangle.getNom()} tel que ${triangle.getAngles()[0]} $= ${triangle.a1}\\\\degree$ ; `;\n          texte += `${triangle.getAngles()[1]} $= ${triangle.a2}\\\\degree$ et ${triangle.getAngles()[2]} $= ${triangle.a3}\\\\degree$.`; // on crée l'objet longueurs + valeurs des côtés du triangle\n\n          for (let _i7 = 0; _i7 < 3; _i7++) {\n            current_triangle.push({\n              angle: triangle.getAngles()[_i7],\n              valeur: triangle.getAnglesValeurs()[_i7]\n            });\n          }\n\n          ; // on trie les couples longueurs/valeurs du triangle selon les valeurs croissantes.\n\n          current_triangle.sort(function (a, b) {\n            return a.valeur - b.valeur;\n          });\n          texteCorr = `Supposons que l'on puisse construire un triangle ${triangle.getNom()} avec ces mesures.`;\n          texteCorr += `<br>Dans le triangle ${triangle.getNom()}, ${current_triangle[0].angle} + ${current_triangle[1].angle} + ${current_triangle[2].angle} = $${current_triangle[0].valeur}\\\\degree + ${current_triangle[1].valeur}\\\\degree + ${current_triangle[2].valeur}\\\\degree = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(current_triangle[0].valeur + current_triangle[1].valeur + current_triangle[2].valeur)}\\\\degree$.`;\n          texteCorr += `<br> Si le triangle était constructible, la somme des trois angles vaudrait $180\\\\degree$,`;\n          texteCorr += ` or ce n'est pas le cas.`;\n          texteCorr += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('On ne peut donc pas construire le triangle ' + triangle.getNom())}.`;\n          texteCorr += `<br><br>  ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('Aucun triangle de ce type n\\'existe')}.`;\n          break;\n\n        case 8:\n          // 2 angles et le 3e fonction du 1er ou du 2eme\n          let angle_rg = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1);\n          let operations_possibles = ['triple', 'quadruple', 'quart'];\n          let operation = '';\n          texte = ``;\n          texteCorr = ``;\n          texteCorr = `Supposons que l'on puisse construire un triangle ${triangle.getNom()} avec ces mesures.`;\n\n          switch (angle_rg) {\n            case 0:\n              a1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max);\n              triangle.a1 = a1;\n              operation = operations_possibles[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 2)];\n              texte += `${triangle.getNom()} tel que ${triangle.getAngles()[0]} $= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(triangle.a1)}\\\\degree$ ; `;\n\n              switch (operation) {\n                case 'triple':\n                  a2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((180 - a1) / 4);\n                  a3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(3 * a2);\n                  break;\n\n                case 'quadruple':\n                  a2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((180 - a1) / 5);\n                  a3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(4 * a2);\n                  break;\n\n                case 'quart':\n                  a2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(4 * (180 - a1) / 5);\n                  a3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(a2 / 4);\n                  break;\n              }\n\n              ;\n              triangle.a2 = a2;\n              triangle.a3 = a3;\n              texte += `${triangle.getAngles()[1]} $= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(triangle.a2)}\\\\degree$ et ${triangle.getAngles()[2]} est le ${operation} de ${triangle.getAngles()[1]}.`; // on crée l'objet longueurs + valeurs des côtés du triangle\n\n              for (let _i8 = 0; _i8 < 3; _i8++) {\n                current_triangle.push({\n                  angle: triangle.getAngles()[_i8],\n                  valeur: triangle.getAnglesValeurs()[_i8]\n                });\n              }\n\n              ;\n              texteCorr += `<br>Dans le triangle ${triangle.getNom()}, ${current_triangle[2].angle} est le ${operation} de ${current_triangle[1].angle} = $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(current_triangle[1].valeur)}\\\\degree$  d'où ${current_triangle[2].angle} = $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(current_triangle[2].valeur)}\\\\degree$.`;\n              break;\n\n            case 1:\n              a2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(a_min, a_max);\n              triangle.a2 = a2;\n              operation = operations_possibles[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 2)];\n              texte += `${triangle.getNom()} tel que ${triangle.getAngles()[1]} $= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(triangle.a2)}\\\\degree$ ; `;\n\n              switch (operation) {\n                case 'triple':\n                  a1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((180 - a2) / 4);\n                  a3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(3 * a1);\n                  break;\n\n                case 'quadruple':\n                  a1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((180 - a2) / 5);\n                  a3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(4 * a1);\n                  break;\n\n                case 'quart':\n                  a1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(4 * (180 - a2) / 5);\n                  a3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(a1 / 4);\n                  break;\n              }\n\n              ;\n              triangle.a1 = a1;\n              triangle.a3 = a3;\n              texte += `${triangle.getAngles()[0]} $= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(triangle.a1)}\\\\degree$ et ${triangle.getAngles()[2]} est le ${operation} de ${triangle.getAngles()[0]}.`; // on crée l'objet longueurs + valeurs des côtés du triangle\n\n              for (let _i9 = 0; _i9 < 3; _i9++) {\n                current_triangle.push({\n                  angle: triangle.getAngles()[_i9],\n                  valeur: triangle.getAnglesValeurs()[_i9]\n                });\n              }\n\n              ;\n              texteCorr += `<br>Dans le triangle ${triangle.getNom()}, ${current_triangle[2].angle} est le ${operation} de ${current_triangle[0].angle} = $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(current_triangle[0].valeur)}\\\\degree$  d'où ${current_triangle[2].angle} = $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(current_triangle[2].valeur)}\\\\degree$.`;\n              break;\n          }\n\n          ;\n          texteCorr += `<br>Donc ${current_triangle[0].angle} + ${current_triangle[1].angle} + ${current_triangle[2].angle} = $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(current_triangle[0].valeur)}\\\\degree + ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(current_triangle[1].valeur)}\\\\degree + ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(current_triangle[2].valeur)}\\\\degree = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(current_triangle[0].valeur + current_triangle[1].valeur + current_triangle[2].valeur)}\\\\degree$.`;\n          texteCorr += `<br> On constate que la somme des trois angles du triangle vaut bien $180\\\\degree$.`;\n          texteCorr += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('On peut donc construire le triangle ' + triangle.getNom())}.`;\n          texteCorr += `<br><br>  ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)('Il existe une infinité de triangles avec ces mesures.')}`;\n          texteCorr += `<br> On les obtient les uns à partir des autres par un agrandissement ou une réduction.`;\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n\n      cpt++;\n    }\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeQuestionsToContenu)(this);\n  };\n\n  if (this.exo == this.beta + '5G21-1') {\n    this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, \"1 : 3 longueurs\\n2 : 2 longueurs et le périmètre\"];\n  } else if (this.exo == this.beta + '5G31-1') {\n    this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, \"1 : 3 angles\\n2 : 2 angles et le 3e en fonction du 1er ou du 2eme\"];\n  } else {//this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : sans conversions de longueurs\\n2 : avec conversions de longueurs\"];\n  }\n\n  ;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/exercices/5e/_Constructibilite_des_triangles.js\n");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice() {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigneCorrection = '';\n  this.listeQuestions = [];\n  this.listeCorrections = [];\n  this.introduction = '';\n  this.contenu = '';\n  this.contenuCorrection = '';\n  this.nbQuestions = 10;\n  this.nbCols = 2;\n  this.nbColsCorr = 2;\n  this.spacing = 1;\n  this.spacingCorr = 1;\n  this.beamer = false;\n  this.besoinFormulaireNumerique = false; // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n\n  this.besoinFormulaireTexte = false; // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n\n  this.besoinFormulaireCaseACocher = false; // Sinon this.besoinFormulaireCaseACocher = [texte];\n\n  this.consigneModifiable = true;\n  this.nbQuestionsModifiable = true;\n  this.nbColsModifiable = true;\n  this.nbColsCorrModifiable = true;\n  this.spacingModifiable = true;\n  this.spacingCorrModifiable = true;\n  this.correctionDetailleeDisponible = false;\n  this.correctionDetaillee = true;\n  this.video = '';\n  this.boutonAide = false;\n  this.tailleDiaporama = 50; // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  this.pasDeVersionLatex = false;\n  this.qcm = false; // Pour les exercices de type QCM : contient un tableau.\n\n  this.qcmDisponible = false; // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n\n  this.modeQcm = false; // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false; // pas d'interface par défaut pour les figures MG32\n\n  this.nouvelleVersion = function (numeroExercice) {};\n\n  this.listePackages = []; // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWF0aGFsZWEvLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzP2RiNDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogIENsYXNzZSBwYXJlbnRlIGRlIHRvdXMgbGVzIGV4ZXJjaWNlc1xuICpcbiAqIEBBdXRldXIgUsOpbWkgQW5nb3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRXhlcmNpY2UgKCkge1xuICAvLyBDbGFzc2UgcGFyZW50ZSBkZSB0b3VzIGxlcyBleGVyY2ljZXMgcXVpIHNlcm9udCBjcsOpw6lzXG4gIHRoaXMudGl0cmUgPSAnJ1xuICB0aGlzLmNvbnNpZ25lID0gJydcbiAgdGhpcy5jb25zaWduZUNvcnJlY3Rpb24gPSAnJ1xuICB0aGlzLmxpc3RlUXVlc3Rpb25zID0gW11cbiAgdGhpcy5saXN0ZUNvcnJlY3Rpb25zID0gW11cbiAgdGhpcy5pbnRyb2R1Y3Rpb24gPSAnJ1xuICB0aGlzLmNvbnRlbnUgPSAnJ1xuICB0aGlzLmNvbnRlbnVDb3JyZWN0aW9uID0gJydcbiAgdGhpcy5uYlF1ZXN0aW9ucyA9IDEwXG4gIHRoaXMubmJDb2xzID0gMlxuICB0aGlzLm5iQ29sc0NvcnIgPSAyXG4gIHRoaXMuc3BhY2luZyA9IDFcbiAgdGhpcy5zcGFjaW5nQ29yciA9IDFcbiAgdGhpcy5iZWFtZXIgPSBmYWxzZVxuXG4gIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IGZhbHNlIC8vIFNpbm9uIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IFt0ZXh0ZSxtYXgsdG9vbHRpcCBmYWN1bHRhdGlmXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlVGV4dGUgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVUZXh0ZSA9IFt0ZXh0ZSx0b29sdGlwXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlQ2FzZUFDb2NoZXIgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVDYXNlQUNvY2hlciA9IFt0ZXh0ZV07XG4gIHRoaXMuY29uc2lnbmVNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iUXVlc3Rpb25zTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5uYkNvbHNNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iQ29sc0NvcnJNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdDb3JyTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5jb3JyZWN0aW9uRGV0YWlsbGVlRGlzcG9uaWJsZSA9IGZhbHNlXG4gIHRoaXMuY29ycmVjdGlvbkRldGFpbGxlZSA9IHRydWVcbiAgdGhpcy52aWRlbyA9ICcnXG4gIHRoaXMuYm91dG9uQWlkZSA9IGZhbHNlXG4gIHRoaXMudGFpbGxlRGlhcG9yYW1hID0gNTAgLy8gVGFpbGxlIGVuIHBpeGVscyBwb3VyIGxlIGNhbGN1bCBjaHJvbm9tw6l0csOpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsVGV4dGVDb3VydChudW1lcm9FeGVyY2ljZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFRleHRlTG9uZyhudW1lcm9FeGVyY2ljZSx0aXRyZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFlvdXR1YmUobnVtZXJvRXhlcmNpY2UsaWRfeW91dHViZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlIC0gVmlkw6lvXCIsaWNvbmU9XCJ5b3V0dWJlXCIpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsUGRmKG51bWVyb0V4ZXJjaWNlLHVybF9wZGYsdGV4dGU9XCJBaWRlXCIsbGFiZWxfYm91dG9uPVwiQWlkZSAtIFBERlwiLGljb25lPVwiZmlsZSBwZGZcIilcbiAgLy8gdGhpcy52c3BhY2UgPSAtMSAvL0Fqb3V0ZSB1biBcXHZzcGFjZXstMWNtfSBhdmFudCBsJ8Opbm9uY8OpIGNlIHF1aSBwZXV0IMOqdHJlIHByYXRpcXVlIHBvdXIgZGVzIGV4ZXJjaWNlcyBhdmVjIGRlcyBmaWd1cmVzLlxuICB0aGlzLnBhc0RlVmVyc2lvbkxhdGV4ID0gZmFsc2VcbiAgdGhpcy5xY20gPSBmYWxzZSAvLyBQb3VyIGxlcyBleGVyY2ljZXMgZGUgdHlwZSBRQ00gOiBjb250aWVudCB1biB0YWJsZWF1LlxuICB0aGlzLnFjbURpc3BvbmlibGUgPSBmYWxzZSAvLyBQb3VyIGFqb3V0ZXIgdW5lIGNhc2Ugw6AgY29jaGVyIE1vZGUgUUNNIHF1aSBwZXJtZXQgZGUgY2hhbmdlciBsZSBzdGF0dXQgZGUgdGhpcy5tb2RlUWNtXG4gIHRoaXMubW9kZVFjbSA9IGZhbHNlIC8vIFBvdXIgY2hvaXNpciBsYSB2ZXJzaW9uIFFDTSBvdSBsYSB2ZXJzaW9uIGNsYXNzaXF1ZSAoZmFsc2UgPSB2ZXJzaW9uIGNsYXNzaXF1ZSlcblxuICB0aGlzLm1nMzJFZGl0YWJsZSA9IGZhbHNlIC8vIHBhcyBkJ2ludGVyZmFjZSBwYXIgZMOpZmF1dCBwb3VyIGxlcyBmaWd1cmVzIE1HMzJcbiAgdGhpcy5ub3V2ZWxsZVZlcnNpb24gPSBmdW5jdGlvbiAobnVtZXJvRXhlcmNpY2UpIHt9XG4gIHRoaXMubGlzdGVQYWNrYWdlcyA9IFtdIC8vIHN0cmluZyBvdSBsaXN0ZSBkZSBzdHJpbmcgYXZlYyBsZSBub20gZGVzIHBhY2thZ2VzIHNww6ljaWZpcXVlcyDDoCBham91dGVyIGRhbnMgbGUgcHLDqWFtYnVsZVxuICAvLyB0aGlzLnR5cGVFeGVyY2ljZSA9IFwiTUczMlwiO1xuICAvLyB0aGlzLmRpbWVuc2lvbnNEaXZNZzMyID0gWzUwMCwgNDUwXTtcbiAgLy8gdGhpcy50eXBlRXhlcmNpY2UgPSBcIlNjcmF0Y2hcIlxuICAvLyB0aGlzLnFjbT1bXCJRdWVscyBzb250IGxlcyBub21icmVzIHBhaXJzID9cIixbNywxMiwzNCwyNSwxOF0sWzAsMSwxLDAsMV1dID0+W1wiTGEgcXVlc3Rpb25cIixbbGVzIHLDqXBvbnNlc10sW2Jvbm5lPTEgZXQgbWF1dmFpc2U9MF1dXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/exercices/ClasseExercice.js\n");

/***/ })

}]);