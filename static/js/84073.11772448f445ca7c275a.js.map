{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4I1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","TracerAvecScratch","typesDeQuestionsDisponibles","Exercice","this","consigne","nbCols","nbColsCorr","listePackages","typeExercice","nbQuestions","debug","nouvelleVersion","listeQuestions","listeCorrections","fenetreMathalea2D","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","myPolyName","n","sortie","name","nameParSommets","nbPas","mySituation","situations","nbCotes","nom","codeScratch","fig","fig_corr","tabAbsDemLutin2","shuffle","lutin2","creerLutin","color","pointilles","allerA","baisseCrayon","leveCrayon","k","avance","tournerD","calcul","mesAppelsEnonce","mathalea2d","lutin3","mesAppelsCorr","enonces","push","enonce","scratchblock","question","correction","texteEnCouleur","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice"],"mappings":"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","file":"js/84073.11772448f445ca7c275a.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, shuffle, calcul, texteEnCouleur, combinaisonListes } from '../../modules/outils.js'\nimport { creerLutin, avance, baisseCrayon, leveCrayon, tournerD, allerA, mathalea2d, scratchblock } from '../../modules/2d.js'\n\nexport const titre = 'Dessiner avec scratch'\n\n/**\n * * Dessiner selon un programme scratch\n * * 4Algo1-0\n * @author Sébastien Lozano\n * mise à plat du big ouaille suite au passage à la V2\n * implémentation fonction scratchblock par Jean-Claude Lhote\n * la fonction gère la sortie Latex ou html du code scratch\n */\n\nexport default function TracerAvecScratch () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Laquelle des 4 figures ci-dessous va être tracée avec le script fourni ?'\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.listePackages = 'scratch3'\n  this.typeExercice = 'Scratch'\n\n  let typesDeQuestionsDisponibles\n  this.nbQuestions = 3\n  this.debug = false\n\n  this.nouvelleVersion = function () {\n    if (this.debug) {\n      typesDeQuestionsDisponibles = [1, 2, 3, 4, 5]\n    } else {\n      typesDeQuestionsDisponibles = [1, 2, 3, 4, 5]\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const fenetreMathalea2D = { xmin: -10, ymin: -15, xmax: 60, ymax: 2, pixelsParCm: 10, scale: 0.2 }\n    const pixelsParCm = fenetreMathalea2D.pixelsParCm * 5// 100;\n    //    var unitesLutinParCm = 100;\n\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    // let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // une fonction pour gérer la sortie HTML/LaTeX\n      // code est un string contenant le code svg ou tikz\n\n      // une fonction pour dire le nom du polygone\n      function myPolyName (n) {\n        const sortie = {\n          name: '',\n          nameParSommets: '',\n          nbPas: ''\n        }\n        switch (n) {\n          case 2:\n            sortie.name = 'segment'\n            sortie.nameParSommets = 'AB'\n            sortie.nbPas = 400\n            break\n          case 3:\n            sortie.name = 'triangle équilatéral'\n            sortie.nameParSommets = 'ABC'\n            sortie.nbPas = 400\n            break\n          case 4:\n            sortie.name = 'carré'\n            sortie.nameParSommets = 'ABCD'\n            sortie.nbPas = 400\n            break\n          case 5:\n            sortie.name = 'pentagone régulier'\n            sortie.nameParSommets = 'ABCDE'\n            sortie.nbPas = 300\n            break\n          case 6:\n            sortie.name = 'hexagone régulier'\n            sortie.nameParSommets = 'ABCDEF'\n            sortie.nbPas = 250\n            break\n          case 7:\n            sortie.name = 'heptagone régulier'\n            sortie.nameParSommets = 'ABCDEFG'\n            sortie.nbPas = 200\n            break\n          case 8:\n            sortie.name = 'octogone régulier'\n            sortie.nameParSommets = 'ABCDEFGH'\n            sortie.nbPas = 200\n            break\n          case 9:\n            sortie.name = 'ennéagone régulier'\n            sortie.nameParSommets = 'ABCDEFGHI'\n            sortie.nbPas = 200\n            break\n        }\n        return sortie\n      }\n\n      // une fonction pour renvoyer une situation\n      // n définit le nombre de côtés du polygone régulier\n      function mySituation (n) {\n        const situations = [\n          { // polygones réguliers\n            nbCotes: n,\n            nom: myPolyName(n).name,\n            codeScratch: `\\\\begin{scratch}\n\\\\blockinit{quand \\\\greenflag est cliqué}\n\\\\blockpen{stylo en position d’écriture} \n\\\\blockrepeat{répéter \\\\ovalnum{${n}} fois}\n{\n\\\\blockmove{avancer de \\\\ovalnum{${myPolyName(n).nbPas}} pas}\n\\\\blockmove{tourner \\\\turnright{} de \\\\ovaloperator{\\\\ovalnum{360}/\\\\ovalnum{${n}}} degrés}\n}\n\\\\end{scratch}`,\n            fig: '',\n            fig_corr: ''\n          }\n        ]\n\n        let tabAbsDemLutin2\n        if (n === 6) {\n          tabAbsDemLutin2 = [0, 3 * myPolyName(n).nbPas, 6 * myPolyName(n).nbPas, 9 * myPolyName(n).nbPas]\n        } else if (n === 8) {\n          tabAbsDemLutin2 = [0, 4 * myPolyName(n).nbPas, 8 * myPolyName(n).nbPas, 12 * myPolyName(n).nbPas]\n        } else {\n          tabAbsDemLutin2 = [0, 2 * myPolyName(n).nbPas, 4 * myPolyName(n).nbPas, 6 * myPolyName(n).nbPas]\n        };\n        // on mélange tout ça !\n        tabAbsDemLutin2 = shuffle(tabAbsDemLutin2)\n        // Les figures de l'énoncé\n        // le lutin2  trace le cadre en pointillés\n        const lutin2 = creerLutin()\n        lutin2.color = 'black'\n        lutin2.pointilles = true\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin2)\n        baisseCrayon(lutin2)\n        allerA(fenetreMathalea2D.xmax * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin2)\n        allerA(fenetreMathalea2D.xmax * pixelsParCm, fenetreMathalea2D.ymin * pixelsParCm, lutin2)\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymin * pixelsParCm, lutin2)\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin2)\n        leveCrayon(lutin2)\n        // le lutin2 fait la bonne figure\n        lutin2.pointilles = false\n        lutin2.color = 'blue'\n        allerA(tabAbsDemLutin2[0], 0, lutin2)\n        baisseCrayon(lutin2)\n        for (let k = 1; k < n + 1; k++) {\n          avance(myPolyName(n).nbPas, lutin2)\n          tournerD(calcul(360 / n), lutin2)\n        };\n        // le lutin2 fait un polygone régulier avec un côté de plus\n        leveCrayon(lutin2)\n        allerA(tabAbsDemLutin2[1], 0, lutin2)\n        baisseCrayon(lutin2)\n        for (let k = 1; k < n + 1 + 1; k++) {\n          avance(myPolyName(n + 1).nbPas, lutin2)\n          tournerD(calcul(360 / (n + 1)), lutin2)\n        };\n\n        // le lutin2 fait un polygone régulier avec un côté de moins\n        leveCrayon(lutin2)\n        allerA(tabAbsDemLutin2[2], 0, lutin2)\n        baisseCrayon(lutin2)\n        for (let k = 1; k < n; k++) {\n          avance(myPolyName(n - 1).nbPas, lutin2)\n          tournerD(calcul(360 / (n - 1)), lutin2)\n        };\n\n        // le lutin2 fait une figure ouverte à n côtés\n        leveCrayon(lutin2)\n        allerA(tabAbsDemLutin2[3], 0, lutin2)\n        baisseCrayon(lutin2)\n        for (let k = 1; k < n + 1; k++) {\n          avance(myPolyName(n).nbPas, lutin2)\n          tournerD(calcul((360 / n) - 10), lutin2)\n        };\n        allerA(tabAbsDemLutin2[3], 0, lutin2)\n\n        const mesAppelsEnonce = [\n          lutin2\n        ]\n        situations[0].fig = mathalea2d(\n          fenetreMathalea2D,\n          mesAppelsEnonce\n        )\n\n        // les figures de la correction\n        // le lutin3  trace le cadre\n        const lutin3 = creerLutin()\n        lutin3.color = 'black'\n        lutin3.pointilles = true\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin3)\n        baisseCrayon(lutin3)\n        allerA(fenetreMathalea2D.xmax * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin3)\n        allerA(fenetreMathalea2D.xmax * pixelsParCm, fenetreMathalea2D.ymin * pixelsParCm, lutin3)\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymin * pixelsParCm, lutin3)\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin3)\n        leveCrayon(lutin3)\n        // le lutin3 fait la bonne figure\n        lutin3.pointilles = false\n        lutin3.color = 'green'\n        allerA(tabAbsDemLutin2[0], 0, lutin3)\n        baisseCrayon(lutin3)\n        for (let k = 1; k < n + 1; k++) {\n          avance(myPolyName(n).nbPas, lutin3)\n          tournerD(calcul(360 / n), lutin3)\n        };\n        // le lutin3 fait un polygone régulier avec un côté de plus\n        lutin3.color = 'red'\n        leveCrayon(lutin3)\n        allerA(tabAbsDemLutin2[1], 0, lutin3)\n        baisseCrayon(lutin3)\n        for (let k = 1; k < n + 1 + 1; k++) {\n          avance(myPolyName(n + 1).nbPas, lutin3)\n          tournerD(calcul(360 / (n + 1)), lutin3)\n        };\n\n        // le lutin3 fait un polygone régulier avec un côté de moins\n        leveCrayon(lutin3)\n        allerA(tabAbsDemLutin2[2], 0, lutin3)\n        baisseCrayon(lutin3)\n        for (let k = 1; k < n; k++) {\n          avance(myPolyName(n - 1).nbPas, lutin3)\n          tournerD(calcul(360 / (n - 1)), lutin3)\n        };\n\n        // le lutin3 fait une figure ouverte à n côtés\n        leveCrayon(lutin3)\n        allerA(tabAbsDemLutin2[3], 0, lutin3)\n        baisseCrayon(lutin3)\n        for (let k = 1; k < n + 1; k++) {\n          avance(myPolyName(n).nbPas, lutin3)\n          tournerD(calcul((360 / n) - 10), lutin3)\n        };\n        allerA(tabAbsDemLutin2[3], 0, lutin3)\n\n        const mesAppelsCorr = [\n          lutin3\n        ]\n        situations[0].fig_corr = mathalea2d(\n          fenetreMathalea2D,\n          mesAppelsCorr\n        )\n\n        const enonces = []\n        enonces.push({\n          enonce: `\n          ${scratchblock(situations[0].codeScratch)}\n          <br> \n          ${situations[0].fig}\n          `,\n          question: '',\n          correction: `\n          <br> Les figures rouges sont erronées.\n          <br> La figure tracée par le programme a ${situations[0].nbCotes} côtés de même longueur et ${situations[0].nbCotes} angles de même mesure, c'est un ${situations[0].nom}.\n          <br>${texteEnCouleur('La bonne figure est donc la figure verte.')}\n          <br><br>\n          ${situations[0].fig_corr}\n          `\n        })\n\n        return enonces\n      }\n\n      const enonces = []\n      enonces.push(mySituation(3)[0])\n      enonces.push(mySituation(4)[0])\n      enonces.push(mySituation(5)[0])\n      enonces.push(mySituation(6)[0])\n      enonces.push(mySituation(8)[0])\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte = `${enonces[0].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n        case 2:\n          texte = `${enonces[1].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[1].correction}`\n          };\n          break\n        case 3:\n          texte = `${enonces[2].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[2].correction}`\n          };\n          break\n        case 4:\n          texte = `${enonces[3].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[3].correction}`\n          };\n          break\n        case 5:\n          texte = `${enonces[4].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[4].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[4].correction}`\n          };\n          break\n      };\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}