/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_Profs_P010_js"],{

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ }),

/***/ "./src/js/exercices/Profs/P010.js":
/*!****************************************!*\
  !*** ./src/js/exercices/Profs/P010.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ variation_polynome_degre3)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\nconst titre = 'étude de fonction de degré 3'\n\n/**\n * Description didactique de l'exercice\n * @Auteur \n * Référence \n*/\nfunction variation_polynome_degre3() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nb_questions = 1;\n  this.nb_questions_modifiable = false\n  this.nb_cols = 1; // Uniquement pour la sortie LaTeX\n  this.nb_cols_corr = 1; // Uniquement pour la sortie LaTeX\n  this.sup = \"-1/-2/3/1\"; // Niveau de difficulté à ne définir que si on peut le modifier avec un formulaire en paramètre\n  this.sup2 = true\n  this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = \"\" // Id YouTube ou url\n  this.liste_packages = 'tkz-tab'\n  this.type_exercice='XCas'\n  \n  this.nouvelle_version = function () {\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n\n    // un tableau correct en exemple \n    // escpl=taille en cm entre deux antécédents, deltacl=distance entre la bordure et les premiers et derniers antécédents\n    // lgt = taille de la première colonne tout est en cm\n    // tabInit contient 2 tableaux\n    // le premier contient des triplets [chaine d'entête,hauteur de ligne,nombre de pixels de largeur estimée du texte pour le centrage]\n    // le deuxième contient une succession de chaines et de largeurs en pixels : ce sont les antécédent de la ligne d'entête\n    // tabLines contient des tableaux de la forme ['type',...] \n    // type est 'Line' pour une ligne de signes et valeurs. Les valeurs sont données avec à la suite leur largeur estimée en pixels.\n    // type est 'Var' pour une ligne de variations. Les variations sont des chaines respectant une syntaxe particulière.\n    // On intercale une largeur estimée pour le texte éventuel\n    // Pour plus d'info sur le codage des variations, voir ce tuto : https://zestedesavoir.com/tutoriels/439/des-tableaux-de-variations-et-de-signes-avec-latex/\n    // reste à faire les types 'Ima', 'Val' et 'Slope\"\n\n\n    let a, b, c, d, a1, b1, c1, a2, xx, xxs, rac = [], t, x1s, fx1s, x3s, x2s\n    let sig1, sig2, s, delta, x1, x2, x3,X1,X2,X3,XXs, f, minima, fxstring, mafonction, maderivee,MaFonction,solutions\n    let YMAXI, YMINI, XMINI, XMAXI, monrepere, macourbe, texte, texte_corr, scalex, scaley\n    let coef_f = this.sup.split('/')\n    let vecteurs = [], A, B, C, tangente\n\n    let trouver_les_racines = function (a0, b0, c0) { // Une fonction locale pour trouver les racines d'une équation du 2nd degré\n      delta = b0 * b0 - 4 * a0 * c0 // on calcule les racines de f'\n      if (delta < 0) {\n        return []\n      }\n      else if (delta == 0) {\n        return [-b0 / 2 / a0]\n      }\n      x1 = (-b0 - Math.sqrt(delta)) / 2 / a0\n      x3 = (-b0 + Math.sqrt(delta)) / 2 / a0\n      X1=`(${-b0}-sqrt(${b0*b0}-${4*a0*c0}))/${2*a0}`\n      X3=`(${-b0}+sqrt(${b0*b0}-${4*a0*c0}))/${2*a0}`\n      x1s=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.xcas)(`simplify((${-b0}-sqrt(${delta}))/${2*a0})`)\n      x3s=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.xcas)(`simplify((${-b0}+sqrt(${delta}))/${2*a0})`)\n      if (x3 < x1) { // on ordonne les racines de f'\n        xx = x3\n        xxs = x3s\n        XXs=X3\n        x3 = x1\n        x3s = x1s\n        X3=X1\n        x1 = xx\n        x1s = xxs\n        X1=XXs\n      }\n      x1s = x1s.replace('(', '')\n      x1s = x1s.replace(')', '')\n      x3s = x3s.replace('(', '')\n      x3s = x3s.replace(')', '')\n      return [x1, x3, x1s, x3s,X1,X3]\n    }\n    a = parseFloat(coef_f[0])\n    b = parseFloat(coef_f[1])\n    c = parseFloat(coef_f[2])\n    d = parseFloat(coef_f[3])\n    // [a, b, c, d] = coef_f //On récupère les coefficient du polynome\n    fxstring = `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.reduire_polynome_degre3)(a, b, c, d)}`\n    if (a != 0) { //degré 3\n      a1 = 3 * a\n      b1 = 2 * b\n      c1 = 1 * c\n      a2 = 6 * a\n      mafonction = x => a * x ** 3 + b * x ** 2 + c * x + d\n      MaFonction=`${a}*x^3+${b}*x^2+${c}x+${d}`\n      maderivee = x => 3 * a * x ** 2 + 2 * b * x + c\n\n      if (a < 0) {\n        if (maderivee(-b / 3 / a) > 0) { // la dérivée croit jusqu'à un maximum >0 , il y a deux zéros donc négatif-positif-négatif\n          rac = trouver_les_racines(a1, b1, c1)\n     if (this.sup3){\n      \n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[30,20,30],\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 1.5, 60]],\n            ['$-\\\\infty$', 30, `$${rac[2]}$`, 70, `$${rac[3]}$`, 70, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'z', 20, '-', 20],\n              ['Var', 10, '+/$+\\\\infty$', 30, `-/$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.xcas)(`simplifier(subst(${MaFonction},x=${rac[4]}))`)}$`, 90, `+/$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.xcas)(`simplifier(subst(${MaFonction},x=${rac[5]}))`)}$`, 90, '-/$-\\\\infty$', 30]\n              ]\n          })\n        }\n        else {\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[30,20,30],\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 1.5, 60]],\n            ['$-\\\\infty$', 30, `$${rac[2]}$`, 70, `$${rac[3]}$`, 70, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'z', 20, '-', 20],\n              ['Var', 10, '+/$+\\\\infty$', 30, `-/$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(mafonction(rac[0]))}$`, 50, `+/$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(mafonction(rac[1]))}$`, 50, '-/$-\\\\infty$', 30]\n              ]\n          })\n        }\n          XMINI = Math.round(rac[0]) - 2\n          XMAXI = Math.round(rac[1]) + 2\n          YMINI = Math.min(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)), Math.round(mafonction(rac[0])), Math.round(mafonction(rac[1])))\n          YMAXI = Math.max(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)), Math.round(mafonction(rac[0])), Math.round(mafonction(rac[1])))\n          scalex = Math.abs(10 / (XMAXI - XMINI))\n          scaley = 20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI)))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(rac[0] * scalex, mafonction(rac[0]) * scaley)\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(rac[0]) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'blue'\n          vecteurs.push(tangente)\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(rac[1] * scalex, mafonction(rac[1]) * scaley)\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(rac[1]) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'blue'\n          vecteurs.push(tangente)\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(-b / (3 * a) * scalex, mafonction(-b / (3 * a)) * scaley)\n          vecteurs.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A))\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(-b / (3 * a)) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'red'\n          vecteurs.push(tangente)\n\n\n        }\n        else { //  la dérivée croit jusqu'à un maximum <0 , il n'y a pas de zéro donc négatif sur tout l'interval\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[30,20,30],\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 30], [\"$f(x)$\", 2, 25]],\n            ['$-\\\\infty$', 30, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, '', 0, '-', 20],\n              ['Var', 10, '+/$+\\\\infty$', 30, '-/$-\\\\infty$', 30]\n              ]\n          })\n          XMINI = -4\n          XMAXI = 4\n          YMINI = Math.min(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)))\n          YMAXI = Math.max(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)))\n          scalex = Math.abs(10 / (XMAXI - XMINI))\n          scaley = 20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI)))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(-b / (3 * a) * scalex, mafonction(-b / (3 * a)) * scaley)\n          vecteurs.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A))\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(-b / (3 * a)) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'red'\n          vecteurs.push(tangente)\n        }\n\n      }\n      else {\n        if (maderivee(-b / 3 / a) > 0) {//  la dérivée décroit jusqu'à un minimum >0 , il n'y a pas de zéro donc positif sur tout l'interval\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 3.5, deltacl: 0.6, lgt: 3.5,hauteurLignes:[30,20,30],\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n            ['$-\\\\infty$', 30, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, '', 0, '+', 20],\n              ['Var', 20, '-/$-\\\\infty$', 30, '+/$+\\\\infty$', 30]\n              ]\n          })\n          XMINI = -4\n          XMAXI = 4\n          YMINI = Math.min(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)))\n          YMAXI = Math.max(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)))\n          scalex = Math.abs(10 / (XMAXI - XMINI))\n          scaley = 20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI)))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(-b / (3 * a) * scalex, mafonction(-b / (3 * a)) * scaley)\n          vecteurs.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A))\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(-b / (3 * a)) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'red'\n          vecteurs.push(tangente)\n        }\n        else {// la dérivée décroit jusqu'à un minimum <0 , il y a deux zéros donc positif-négatif-positif\n          rac = trouver_les_racines(a1, b1, c1)\n          if (this.sup3){\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n            ['$-\\\\infty$', 30, `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(rac[0])}$`, 60, `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(rac[1])}$`, 60, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'z', 20, '+', 20],\n              ['Var', 10, '-/$-\\\\infty$', 30, `+/$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.xcas)(`simplifier(subst(${MaFonction},x=${rac[4]}))`)}$`, 90, `-/$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.xcas)(`simplifier(subst(${MaFonction},x=${rac[5]}))`)}$`, 90, '+/$+\\\\infty$', 30]\n              ]\n          })\n        }\n        else {\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n            ['$-\\\\infty$', 30, `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(rac[0])}$`, 60, `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(rac[1])}$`, 60, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'z', 20, '+', 20],\n              ['Var', 10, '-/$-\\\\infty$', 30, `+/$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(mafonction(rac[0]))}$`, 50, `-/$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(mafonction(rac[1]))}$`, 50, '+/$+\\\\infty$', 30]\n              ]\n          })\n        }\n          XMINI = Math.round(rac[0]) - 2\n          XMAXI = Math.round(rac[1]) + 2\n          YMINI = Math.min(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)), Math.round(mafonction(rac[0])), Math.round(mafonction(rac[1])))\n          YMAXI = Math.max(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)), Math.round(mafonction(rac[0])), Math.round(mafonction(rac[1])))\n          scalex = Math.abs(10 / (XMAXI - XMINI))\n          scaley = 20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI)))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(rac[0] * scalex, mafonction(rac[0]) * scaley)\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(rac[0]) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'blue'\n          vecteurs.push(tangente)\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(rac[1] * scalex, mafonction(rac[1]) * scaley)\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(rac[1]) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'blue'\n          vecteurs.push(tangente)\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(-b / (3 * a) * scalex, mafonction(-b / (3 * a)) * scaley)\n          vecteurs.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A))\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(-b / (3 * a)) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'red'\n          vecteurs.push(tangente)\n        }\n\n\n      }\n      // Attention : pixelsParCm n'influe pas sur le latexParCoordonnees, il faudra laisser 30 !\n      // Sinon, le tableau sera réduit mais pas le texte à l'intérieur.\n    }\n    else if (b != 0) { //degré 2\n      a = b\n      b = c\n      c = d\n      mafonction = x => a * x ** 2 + b * x + c\n      maderivee = x => 2 * a * x + b\n      a1 = 2 * a\n      b1 = b\n      x1 = -b1 / a1\n      x2 = -b / (a * 2)\n      minima = (-b * b + 4 * a * c) / 4 / a\n      if (b != 0) {\n        x2s = `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_fraction_signe)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(-b, 2 * a)[0], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(-b, 2 * a)[1])}`\n      }\n      else {\n        x2s = `0`\n      }\n      fx1s = `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_fraction_signe)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(-b * b + 4 * a * c, 4 * a)[0], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(-b * b + 4 * a * c, 4 * a)[1])}`\n      if (a > 0) {\n\n        if (minima < 0) { // f(x)=0 a deux solutions\n          rac = trouver_les_racines(a, b, c)\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[20,20,20,20,20],\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n            ['$-\\\\infty$', 30, `$${rac[2]}$`, 60, `$${x2s}$`, 60, `$${rac[3]}$`, 60, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, 'R/', 0, 'R/', 0, '-', 20, 'R/', 0, 'z', 20, 'R/', 0, '+', 20, 'R/', 0],\n              ['Var', 10, '+/$+\\\\infty$', 30, 'R/', 0, `-/$${fx1s}$`, 50, 'R/', 0, '+/$+\\\\infty$', 30],\n              ['Ima', 1, 3, '$0$', 12],\n              ['Ima', 3, 5, '$0$', 12]\n              ]\n          })\n          XMINI = Math.round(x2 - 3)\n          XMAXI = Math.round(x2 + 3)\n          YMINI = Math.round(mafonction(x2)) - 2\n          YMAXI = Math.max(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)), Math.round(mafonction(x2)))\n          scalex = Math.abs(10 / (XMAXI - XMINI))\n          scaley = 20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI)))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(x2 * scalex, mafonction(x2) * scaley)\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(x2) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'blue'\n          vecteurs.push(tangente)\n        }\n        else if (minima > 0) { // f(x)=0 n'a pas de solution f(x)>0 pour tout x\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[20,20,20,20,20],\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n            ['$-\\\\infty$', 30, `$${x2s}$`, 60, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, 'R/', 0, '-', 20, 'z', 20, '+', 20],\n              ['Var', 10, '+/$+\\\\infty$', 30, `-/$${fx1s}$`, 50, '+/$+\\\\infty$', 30]\n              ]\n          })\n          XMINI = Math.round(x2) - 3\n          XMAXI = Math.round(x2) + 3\n          YMINI = -10\n          YMAXI = Math.max(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)), Math.round(mafonction(x2)))\n          scalex = Math.abs(10 / (XMAXI - XMINI))\n          scaley = 20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI)))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(x2 * scalex, mafonction(x2) * scaley)\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(x2) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'blue'\n          vecteurs.push(tangente)\n        }\n        else { //f(x)=0 a une solution unique : minima=0\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[20,20,20,20,20],\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n            ['$-\\\\infty$', 30, `$${x2s}$`, 60, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, 'R/', 0, '-', 20, 'z', 20, '+', 20],\n              ['Var', 10, '+/$+\\\\infty$', 30, `-/$0$`, 50, '+/$+\\\\infty$', 30]\n              ]\n          })\n          XMINI = Math.round(x2) - 3\n          XMAXI = Math.round(x2) + 3\n          YMINI = -10\n          YMAXI = Math.max(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)), Math.round(mafonction(x2)))\n          scalex = Math.abs(10 / (XMAXI - XMINI))\n          scaley = 20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI)))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(x2 * scalex, mafonction(x2) * scaley)\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(x2) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'blue'\n          vecteurs.push(tangente)\n        }\n      }\n      else { // a<0\n        if (minima > 0) {// f(x)=0 a deux solutions\n          rac = trouver_les_racines(a, b, c)\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[20,20,20,20,20],\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n            ['$-\\\\infty$', 30, `$${rac[2]}$`, 60, `$${x2s}$`, 60, `$${rac[3]}$`, 60, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, 'R/', 0, 'R/', 0, '+', 20, 'R/', 0, 'z', 20, 'R/', 0, '-', 20, 'R/', 0],\n              ['Var', 10, '-/$-\\\\infty$', 30, 'R/', 0, `+/$${fx1s}$`, 50, 'R/', 0, '-/$-\\\\infty$', 30],\n              ['Ima', 1, 3, '$0$', 12],\n              ['Ima', 3, 5, '$0$', 12]\n              ]\n          })\n          XMINI = Math.round(x2) - 3\n          XMAXI = Math.round(x2) + 3\n          YMINI = Math.min(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)), Math.round(mafonction(x2)))\n          YMAXI = Math.round(mafonction(x2)) + 2\n          scalex = Math.abs(10 / (XMAXI - XMINI))\n          scaley = 20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI)))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(x2 * scalex, mafonction(x2) * scaley)\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(x2) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'blue'\n          vecteurs.push(tangente)\n        }\n        else if (minima < 0) {// f(x)=0 n'a pas de solution f(x)<0 pour tout x\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[20,20,20,20,20],\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n            ['$-\\\\infty$', 30, `$${x2s}$`, 60, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, 'R/', 0, '+', 20, 'z', 20, '-', 20],\n              ['Var', 10, '-/$-\\\\infty$', 30, `+/$${fx1s}$`, 50, '-/$-\\\\infty$', 30]\n              ]\n          })\n          XMINI = Math.round(x2) - 3\n          XMAXI = Math.round(x2) + 3\n          YMINI = Math.min(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)), Math.round(mafonction(x2)))\n          YMAXI = 10\n          scalex = Math.abs(10 / (XMAXI - XMINI))\n          scaley = 20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI)))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(x2 * scalex, mafonction(x2) * scaley)\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(x2) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'blue'\n          vecteurs.push(tangente)\n        }\n        else {//f(x)=0 a une solution unique : minima=0 désigne ici un maximum\n\n          t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n            colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[20,20,20,20,20],\n            tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n            ['$-\\\\infty$', 30, `$${x2s}$`, 60, '$+\\\\infty$', 30]],\n            tabLines:\n              [['Line', 30, 'R/', 0, '+', 20, 'z', 20, '-', 20],\n              ['Var', 10, '-/$-\\\\infty$', 30, `+/$0$`, 12, '-/$-\\\\infty$', 30]\n              ]\n          })\n          XMINI = Math.round(x2) - 3\n          XMAXI = Math.round(x2) + 3\n          YMINI = Math.min(Math.round(mafonction(XMINI)), Math.round(mafonction(XMAXI)), Math.round(mafonction(x2)))\n          YMAXI = 10\n          scalex = Math.abs(10 / (XMAXI - XMINI))\n          scaley = 20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI)))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(x2 * scalex, mafonction(x2) * scaley)\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(A, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1 * scalex, maderivee(x2) * scaley))\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 180)\n          tangente = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B)\n          tangente.styleExtremites = '<->'\n          tangente.color = 'blue'\n          vecteurs.push(tangente)\n        }\n      }\n\n\n    }\n\n    else if (c != 0) { // degré 1\n\n      mafonction = x => c * x + d\n      maderivee = () => c\n      x2 = -d / c\n      if (c > 0) { // croissante\n        t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n          colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[20,20,20,20,20],\n          tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n          ['$-\\\\infty$', 30, `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_fraction_signe)(-d, c)}$`, 60, '$+\\\\infty$', 30]],\n          tabLines:\n            [['Line', 30, 'R/', 0, 'R/', 0, '+', 20, 'R/', 0],\n            ['Var', 10, '-/$-\\\\infty$', 30, `R/`, 0, '+/$+\\\\infty$', 30],\n            ['Ima', 1, 3, '$0$', 12]\n            ]\n        })\n        XMINI = Math.round(x2) - 4\n        XMAXI = Math.round(x2) + 4\n        YMINI = Math.round(mafonction(x2)) - 4\n        YMAXI = Math.round(mafonction(x2)) + 4\n      }\n      else { //décroissante\n        t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n          colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,hauteurLignes:[20,20,20,20,20],\n          tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 2.5, 60]],\n          ['$-\\\\infty$', 30, `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_fraction_signe)(-d, c)}$`, 60, '$+\\\\infty$', 30]],\n          tabLines:\n            [['Line', 30, 'R/', 0, 'R/', 0, '-', 20, 'R/', 0],\n            ['Var', 10, '+/$+\\\\infty$', 30, `R/`, 0, '-/$-\\\\infty$', 30],\n            ['Ima', 1, 3, '$0$', 12]\n            ]\n        })\n        XMINI = Math.round(x2) - 4\n        XMAXI = Math.round(x2) + 4\n        YMINI = Math.round(mafonction(x2)) - 4\n        YMAXI = Math.round(mafonction(x2)) + 4\n      }\n    }\n\n    else { // fonction constante\n      mafonction = () => d\n      maderivee = () => 0\n\n      t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tableau_de_variation)({\n        colorBackground: 'white', escpl: 3.5, delatcl: 0.8, lgt: 3.5,\n        tabInit: [[['$x$', 1.5, 30], [\"$f'(x)$\", 1, 60], [\"$f(x)$\", 1.5, 60]],\n        ['$-\\\\infty$', 30, '$+\\\\infty$', 30]],\n        tabLines:\n          [['Line', 30, 'R/', 0, '$0$', 20, 'R/', 0],\n          ['Var', 10, `+/$${d}$`, 30, `+/$${d}$`, 30]\n          ]\n      })\n      XMINI = Math.round(x2) - 3\n      XMAXI = Math.round(x2) + 3\n      if (d > 0)\n        YMINI = 0\n      YMAXI = 10 ** (Math.ceil(Math.log10(d)))\n    }\n\n    let pas = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(10 ** Math.ceil(Math.log10((Math.abs((YMAXI - YMINI) / 20)))) / 2)\n    scalex = Math.abs(10 / (XMAXI - XMINI))\n    scaley = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(20 / 10 ** Math.ceil(Math.log10(Math.abs(YMAXI - YMINI))))\n\n\n    monrepere = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.repere2)({\n      xUnite: scalex,\n      yUnite: scaley,\n      xMin: XMINI,\n      xMax: XMAXI,\n      yMin: YMINI - YMINI % pas,\n      yMax: YMAXI,\n      grille: true,\n      xThickDistance: 1,\n      yThickDistance: pas,\n    })\n    macourbe = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.courbe2)(mafonction, { repere: monrepere, step: 0.1, epaisseur: 1 })\n    texte = 'Étude des variations de la fonction $f(x)='\n    texte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.printlatex)(fxstring)}$.<br>`\n    texte += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: 0, ymin: -8, xmax: 21, ymax: 1, pixelsParCm: 30 }, t);\n    if (this.sup2) {\n      texte += '<br>' + (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: (XMINI - 1) * scalex, ymin: (YMINI - 1) * scaley, xmax: (XMAXI + 2) * scalex, ymax: (YMAXI + 1) * scaley, pixelsParCm: 30 }, macourbe, monrepere, vecteurs)+'<br>';\n      solutions=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.xcas)(\"fsolve(\"+fxstring+\"=0,x)\").replace('[','').replace(']','').split(',')\n      if (solutions[0]==\"\"){\n        texte+=`A la vue du tableau de variation de la fonction $f$, il n'y a pas de solution à l'équation $f(x)=0$.`\n      }\n      else {\n      texte +=`Par lecture graphique on peut lire les solutions de $f(x)=0$ : `\n        if (solutions.length==1) {\n          texte+=`$x\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(solutions[0],1)}$`\n        }\n        else {\n          if (solutions.length==2) {\n            texte += `$x\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(solutions[0],1)}$ et $x\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(solutions[1],1)}$`\n          }\n          else {\n            texte += `$x\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(solutions[0],1)}$, $x\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(solutions[1],1)}$ et $x\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(solutions[2],1)}$`\n          }\n        }\n    }\n  }\n\n    texte_corr = ``;\n\n    this.liste_questions.push(texte);\n    this.liste_corrections.push(texte_corr);\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  this.besoin_formulaire_texte = ['Coefficients de $ax^3+bx^2+cx+d$ séparés par des /', '-1/-2/3/1 par exemple'];\n  this.besoin_formulaire2_case_a_cocher = ['Représentation graphique', true]\n  this.besoin_formulaire3_case_a_cocher = ['Valeurs exactes',false]\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/Profs/P010.js?");

/***/ })

}]);