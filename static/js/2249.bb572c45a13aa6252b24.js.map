{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G20-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","ProblemesThales","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","typesDeQuestions","randint","A","B","C","D","E","M","N","x","k","y","p","codage1","codage2","codage3","codage4","sMN","sBD","sCote","texte1","texte2","texte3","texte4","labels","BC","BD","MN","nomA","nomB","nomC","nomD","creerNomDePolygone","calcul","texNombre","texNombrec","context","fig1","fig2","choice","point","polygone","codageAngleDroit","pointSurSegment","longueur","segment","styleExtremites","texteParPoint","milieu","texteSurSegment","nombreAvecEspace","labelPoint","mathalea2d","xmin","xmax","ymin","ymax","scale","texFraction","arrondi","listeQuestionsToContenu","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/2249.bb572c45a13aa6252b24.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, arrondi, calcul, texNombrec, creerNomDePolygone, texNombre, nombreAvecEspace, texFraction } from '../../modules/outils.js'\nimport { point, milieu, pointSurSegment, labelPoint, segment, polygone, codageAngleDroit, texteSurSegment, texteParPoint, longueur, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Problèmes avec le théorème de Thalès'\n\n/**\n* Banque de problèmes utilisant le théorème de Thalès et différentes propriétés de géométrie\n* @author Rémi Angot\n* 3G20-1\n*/\nexport default function ProblemesThales () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let texte = ''\n    let texteCorr = ''\n    const typesDeQuestions = randint(1, 2)\n    let A, B, C, D, E, M, N, x, k, y, p, codage1, codage2, codage3, codage4, sMN, sBD, sCote, texte1, texte2, texte3, texte4, labels, BC, BD, MN\n    const [nomA, nomB, nomC, nomD] = creerNomDePolygone(4, ['M', 'N'])\n\n    switch (typesDeQuestions) {\n      case 1:\n        x = randint(6, 10)\n        k = calcul(randint(12, 19) / 10)\n        y = calcul(randint(30, 50) / 10);\n        [A, B, C, D, E] = creerNomDePolygone(5)\n        texte = `On sait que $${A}${E}=${texNombre(x)}$ cm ; $${A}${D}=${texNombrec(k * x)}$ cm et $${E}${B}=${texNombre(y)}$ cm.<br>`\n        texte += `Calculer la valeur exacte de $${D}${C}$.`\n        if (context.isHtml) {\n          // Pour le svg toutes les longueurs sont multipliées par 20\n          const fig1 = `<div><svg width=\"450\" height=\"300\" viewBox=\"-40 -40 450 300\" xmlns=\"http://www.w3.org/2000/svg\">\n <polygon points=\"0,0 ${calcul(k * x * 20)},0 ${calcul(k * x * 20)},${calcul(k * y * 20)}  \" fill=\"none\" stroke=\"black\" />\n <line x1=\"${calcul(x * 20)}\" y1=\"0\" x2=\"${calcul(x * 20)}\" y2=\"${calcul(y * 20)}\" stroke=\"black\" /> //[BE]\n <polyline points=\"${calcul(x * 20 - 10)},0 ${calcul(x * 20 - 10)},10 ${calcul(x * 20)},10\" fill=\"none\" stroke=\"black\" />  //Angle droit en E\n <polyline points=\"${calcul(k * x * 20 - 10)},0 ${calcul(k * x * 20 - 10)},10 ${calcul(k * x * 20)},10\" fill=\"none\" stroke=\"black\" />  //Angle droit en D\n <text x=\"-10\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${A}</text> \n <text x=\"${calcul(x * 20)}\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${E}</text> \n <text x=\"${calcul(x * 20)}\" y=\"${calcul(y * 20 + 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${B}</text> \n <text x=\"${calcul(k * x * 20 + 10)}\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${D}</text>\n<text x=\"${calcul(k * x * 20 + 10)}\" y=\"${calcul(k * y * 20 + 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${C}</text>\n</svg></div>`\n\n          const fig2 = `<div><svg width=\"450\" height=\"300\" viewBox=\"-40 -260 450 300\" xmlns=\"http://www.w3.org/2000/svg\">\n <polygon points=\"0,0 ${calcul(k * x * 20)},0 ${calcul(k * x * 20)},${calcul(-k * y * 20)}  \" fill=\"none\" stroke=\"black\" />\n <line x1=\"${calcul(x * 20)}\" y1=\"0\" x2=\"${calcul(x * 20)}\" y2=\"${calcul(-y * 20)}\" stroke=\"black\" /> //[BE]\n <polyline points=\"${calcul(x * 20 - 10)},0 ${calcul(x * 20 - 10)},-10 ${calcul(x * 20)},-10\" fill=\"none\" stroke=\"black\" />  //Angle droit en E\n <polyline points=\"${calcul(k * x * 20 - 10)},0 ${calcul(k * x * 20 - 10)},-10 ${calcul(k * x * 20)},-10\" fill=\"none\" stroke=\"black\" />  //Angle droit en D\n <text x=\"-10\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${A}</text> \n <text x=\"${calcul(x * 20)}\" y=\"10\" text-anchor=\"middle\" alignment-baseline=\"central\">${E}</text> \n <text x=\"${calcul(x * 20)}\" y=\"${calcul(-y * 20 - 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${B}</text> \n <text x=\"${calcul(k * x * 20 + 10)}\" y=\"10\" text-anchor=\"middle\" alignment-baseline=\"central\">${D}</text>\n <text x=\"${calcul(k * x * 20 + 10)}\" y=\"${calcul(-k * y * 20 - 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${C}</text>\n</svg></div>`\n\n          texte += choice([fig1, fig2])\n        } else {\n          const fig1 = `\\\\begin{tikzpicture}[scale=.6]\n\\\\draw (0,0)--(${calcul(k * x)},0)--(${calcul(k * x)},${-k * y})--cycle;\n\\\\draw (${x},0)--(${x},${-y});\n\\\\draw (${x},0) rectangle ++(-.5,-.5);\n\\\\draw (${calcul(k * x)},0) rectangle ++(-.5,-.5);\n\\\\node [above left] at (0,0) {${A}};\n\\\\node [above] at (${x},0) {${E}};\n\\\\node [above right] at (${k * x},0) {${D}};\n\\\\node [below right] at (${k * x},${-k * y}) {${C}};\n\\\\node [below] at (${x},${-y}) {${B}};\n\\\\end{tikzpicture}`\n\n          const fig2 = `\\\\begin{tikzpicture}[scale=.6]\n\\\\draw (0,0)--(${calcul(k * x)},0)--(${calcul(k * x)},${k * y})--cycle;\n\\\\draw (${x},0)--(${x},${y});\n\\\\draw (${x},0) rectangle ++(.5,.5);\n\\\\draw (${calcul(k * x)},0) rectangle ++(.5,.5);\n\\\\node [below left] at (0,0) {${A}};\n\\\\node [below] at (${x},0) {${E}};\n\\\\node [below right] at (${k * x},0) {${D}};\n\\\\node [above right] at (${k * x},${k * y}) {${C}};\n\\\\node [above] at (${x},${y}) {${B}};\n\\\\end{tikzpicture}`\n\n          texte += '<br>' + choice([fig1, fig2])\n        }\n\n        texteCorr = `Les droites $(${E}${B})$ et $(${D}${C})$ sont perpendiculaires à la même droite $(${A}${D})$, elles sont donc parallèles entre elles.`\n        texteCorr += `<br>De plus les points $${A}$, $${E}$, $${D}$  et $${A}$, $${B}$, $${C}$ sont alignés dans cet ordre donc d'après le théorème de Thalès on a :`\n        texteCorr += `<br><br>$\\\\dfrac{${A}${E}}{${A}${D}}=\\\\dfrac{${E}${B}}{${D}${C}}=\\\\dfrac{${A}${B}}{${A}${C}}$`\n        texteCorr += `<br><br>$\\\\dfrac{${texNombre(x)}}{${texNombrec(k * x)}}=\\\\dfrac{${texNombre(y)}}{${D}${C}}$`\n        texteCorr += `<br><br>$${D}${C}=\\\\dfrac{${texNombrec(k * x)}\\\\times${texNombre(y)}}{${texNombre(x)}}=${texNombrec(k * y)}$`\n        break\n\n      case 2:\n        BC = randint(2, 6)\n        BD = 2 * BC\n        MN = calcul(BD * choice([0.2, 0.3, 0.4]))\n        A = point(0, 4, nomA, 'above')\n        B = point(7, 4, nomB, 'above')\n        C = point(7, 0, nomC, 'below')\n        D = point(0, 0, nomD, 'below')\n        p = polygone(A, B, C, D)\n        codage1 = codageAngleDroit(D, A, B)\n        codage2 = codageAngleDroit(A, B, C)\n        codage3 = codageAngleDroit(B, C, D)\n        codage4 = codageAngleDroit(C, D, A)\n        M = pointSurSegment(A, B, longueur(A, B) / 3, 'M', 'above')\n        N = pointSurSegment(A, D, longueur(A, D) / 3, 'N', 'left')\n        sMN = segment(M, N)\n        sBD = segment(B, D)\n        sCote = segment(point(N.x - 1.3, N.y), point(D.x - 1.3, D.y))\n        sCote.styleExtremites = '<->'\n        texte1 = texteParPoint('?', milieu(point(N.x - 1.5, N.y), point(D.x - 1.5, D.y)), 'gauche')\n        texte2 = texteSurSegment(nombreAvecEspace(BD) + ' cm', B, D)\n        texte3 = texteSurSegment(nombreAvecEspace(MN) + ' cm', M, N)\n        texte4 = texteSurSegment(nombreAvecEspace(BC) + ' cm', B, C)\n\n        labels = labelPoint(M, N, A, B, C, D)\n\n        texte = `Sur la figure ci-dessous $${nomA + nomB + nomC + nomD}$ est un rectangle et $(MN)$ est parallèle à la diagonale $(${nomB + nomD})$.`\n        texte += `<br>Calculer la longueur $${nomD + 'N'}$ au millimètre près.<br><br>`\n        texte += mathalea2d({\n          xmin: -2,\n          xmax: 9,\n          ymin: -1.5,\n          ymax: 5,\n          scale: 0.8\n        }, p, codage1, codage2, codage3, codage4, sMN, sBD, sCote, texte1, texte2, texte3, texte4, labels)\n\n        texteCorr = `Dans le triangle $${nomA + nomB + nomD}$, $M$ est un point de $[${nomA + nomB}]$, $N$ est un point de $[${nomA + nomD}]$ et $(MN)$ est parallèle à $(${nomB + nomD})$ donc d'après le théorème de Thalès on a : `\n        texteCorr += `<br><br> $${texFraction(nomA + 'M', nomA + nomB)}=${texFraction(nomA + 'N', nomA + nomD)}=${texFraction('MN', nomB + nomD)}$`\n        texteCorr += `<br><br> $${texFraction(nomA + 'M', nomA + nomB)}=${texFraction(nomA + 'N', BC)}=${texFraction(texNombre(MN), texNombre(BD))}$`\n        texteCorr += `<br><br> $${nomA}N = ${texFraction(BC + '\\\\times' + texNombre(MN), BD)}=${texNombre(arrondi(calcul(BC * MN / BD), 1))}$ cm`\n        texteCorr += `<br><br> Les points $${nomA}$, $N$ et $${nomD}$ sont alignés dans cet ordre donc $N${nomD}=${nomA + nomD}-${nomA}N= ${BC}-${texNombre(arrondi(calcul(BC * MN / BD), 1))}=${texNombre(arrondi(calcul(BC - BC * MN / BD), 1))}$ cm.`\n        break\n    }\n\n    this.listeQuestions[0] = texte\n    this.listeCorrections[0] = texteCorr\n    listeQuestionsToContenu(this)\n    // this.besoinFormulaireNumerique = ['Type de questions',2,\"1 : Donner l'égalité\\n2 : Compléter une égalité avec une addition ou une soustraction\"];\n    // this.besoinFormulaire2CaseACocher = ['Sans figures']\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}