{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3I1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","InstructionConditionelle","Exercice","this","debug","sup","nbQuestions","consigne","typeExercice","nbCols","nbColsCorr","nbQuestionsModifiable","context","spacing","spacingCorr","listePackages","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","codeTikz","codeSvg","xLutin","yLutin","n1","randint","n2","n3","n4","scratchblocksTikz","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice"],"mappings":"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","file":"js/24041.938a2c6f0ecc5aaf23d0.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint } from '../../modules/outils.js'\nexport const titre = 'Instruction conditionelle (scratch)'\n\n/**\n * * Instructions conditionnelles\n * * numéro de l'exo ex : 3Algo1\n * * publié le  24/11/2020\n * @author Erwan Duplessy\n */\nexport default function InstructionConditionelle () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.debug = false\n  this.sup = 1\n  this.nbQuestions = 2\n\n  this.titre = titre\n  this.consigne = 'Donner les coordonnées de la position finale du lutin.'\n  this.typeExercice = 'Scratch'\n  this.nbCols = 2\n  this.nbColsCorr = 1\n  this.nbQuestionsModifiable = false\n  context.isHtml ? this.spacing = 1 : this.spacing = 1\n  context.isHtml ? this.spacingCorr = 1 : this.spacingCorr = 1\n  this.listePackages = 'scratch3'\n  // let typesDeQuestionsDisponibles;\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    function scratchblocksTikz (codeSvg, codeTikz) {\n      if (context.isHtml) {\n        return codeSvg\n      } else {\n        return codeTikz\n      };\n    };\n\n    let texte = \"La position initiale d'un lutin dans un repère est (0,0). Dans le programme, x désigne l'abscisse, et y désigne l'ordonnée d'un lutin. <br>\" // texte de l'énoncé\n    texte += 'Une variable a été créée, elle s\\'appelle <code class=\"b\">(var) :: ring</code>. <br>'\n    let texteCorr = ' ' // texte du corrigé\n    let codeTikz = '' // code pour dessiner les blocs en tikz\n    let codeSvg = '' // code pour dessiner les blocs en svg\n    let xLutin = 0\n    let yLutin = 0\n\n    codeTikz += '\\\\medskip \\\\\\\\ \\\\begin{scratch} <br>'\n    codeSvg += '<pre class=\\'blocks\\'>'\n\n    const n1 = randint(1, 10)\n    const n2 = randint(1, 10)\n    const n3 = randint(1, 10)\n    const n4 = randint(1, 10)\n\n    codeTikz += '\\\\blockmove{aller à x: \\\\ovalnum{0} y: \\\\ovalnum{0}}'\n    codeSvg += 'quand le drapeau vert pressé <br>'\n    codeSvg += 'Aller à x:(0) y:(0) <br>'\n    codeSvg += `mettre (var) à (${n1}) <br>`\n    codeSvg += ` si <(var) < [${n2}]> alors <br>`\n    codeSvg += ' ajouter (100) à x <br>'\n    if (this.sup > 1) {\n      codeSvg += ` si <(var) > [${n3}]> alors <br>`\n      codeSvg += ' ajouter (50) à x <br>'\n      codeSvg += ' fin <br>'\n    }\n    codeSvg += ' sinon <br>'\n    codeSvg += ' ajouter (70) à y <br>'\n    if (this.sup > 2) {\n      codeSvg += ` si <(var) > [${n4}]> alors <br>`\n      codeSvg += ' ajouter (40) à y <br>'\n      codeSvg += ' fin <br>'\n    }\n    codeSvg += ' fin <br>'\n\n    codeSvg += '</pre>'\n    codeTikz += '\\\\end{scratch}'\n\n    texte += scratchblocksTikz(codeSvg, codeTikz)\n\n    if (n1 < n2) {\n      texteCorr += `Comme l'inégalité \"${n1} < ${n2}\" est vraie, alors on ajoute 100 à l'abscisse du lutin. <br>`\n      xLutin += 100\n      if (this.sup > 1) {\n        if (n1 > n3) {\n          texteCorr += `Comme l'inégalité \"${n1} > ${n3}\" est vraie, alors on ajoute 50 à l'abscisse du lutin. <br>`\n          xLutin += 50\n        } else {\n          texteCorr += `Comme l'inégalité \"${n1} > ${n3}\" est fausse, alors on ne change pas l'abscisse du lutin. <br>`\n        }\n      }\n    } else {\n      texteCorr += `Comme l'inégalité \"${n1} < ${n2}\" est fausse, alors on ajoute 70 à l'ordonnée du lutin. <br>`\n      yLutin += 70\n      if (this.sup > 2) {\n        if (n1 > n4) {\n          texteCorr += `Comme l'inégalité \"${n1} > ${n4}\" est vraie, on ajoute 40 à l'ordonnée du lutin. <br>`\n          yLutin += 40\n        } else {\n          texteCorr += `Comme l'inégalité \"${n1} > ${n4}\" est fausse, alors on ne change pas l'ordonnée du lutin. <br>`\n        }\n      }\n    }\n    texteCorr += ` La position finale est donc : (${xLutin} ; ${yLutin}).`\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Variante ', 3, '1 : sans condition imbriquée\\n2 : avec une condition imbriquée\\n3 : avec deux conditions imbriquées']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}