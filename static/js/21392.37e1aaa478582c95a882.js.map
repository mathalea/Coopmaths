{"version":3,"file":"js/21392.37e1aaa478582c95a882.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3P10-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["/* eslint-disable camelcase */\nimport Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombrec, texPrix, modalUrl } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Coefficient multiplicateur d’une variation en pourcentage'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n* Déterminer le coefficient de proportionnalité associé à une évolution en pourcentage ou l'inverse\n*\n*\n* @author Rémi Angot\n* 3P10-1\n*/\nexport default function Coefficient_evolution () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Compléter.'\n  this.nbQuestions = 4\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.boutonAide = modalUrl(numeroExercice, 'https://coopmaths.fr/aide/3P10/')\n    this.sup = parseInt(this.sup)\n\n    let typesDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = ['coef+', 'coef-']\n    }\n    if (this.sup === 2) {\n      typesDeQuestionsDisponibles = ['taux+', 'taux-']\n    }\n    if (this.sup === 3) {\n      typesDeQuestionsDisponibles = ['coef+', 'coef-', 'taux+', 'taux-']\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, reponse, taux, coeff, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      taux = choice([randint(1, 9) * 10, randint(1, 9)])\n      switch (listeTypeDeQuestions[i]) {\n        case 'coef+':\n          texte = `Augmenter de $${taux}~\\\\%$ revient à multiplier par...`\n          coeff = texPrix(calcul(1 + taux / 100))\n          texteCorr = `Augmenter de $${taux}~\\\\%$ revient à multiplier par ${coeff} car $100~\\\\% + ${taux}~\\\\% = ${100 + taux}~\\\\%$.`\n          reponse = calcul(1 + taux / 100)\n          break\n        case 'coef-':\n          texte = `Diminuer de $${taux}~\\\\%$ revient à multiplier par...`\n          coeff = texPrix(calcul(1 - taux / 100))\n          texteCorr = `Diminuer de $${taux}~\\\\%$ revient à multiplier par ${coeff} car $100~\\\\% - ${taux}~\\\\% = ${100 - taux}~\\\\%$.`\n          reponse = calcul(1 - taux / 100)\n          break\n        case 'taux+':\n          coeff = texNombrec(1 + taux / 100)\n          texte = `Multiplier par ${coeff} revient à...`\n          texteCorr = `Multiplier par ${coeff} revient à augmenter de $${taux}~\\\\%$ car $${coeff} = ${100 + taux}~\\\\% = 100~\\\\% + ${taux}~\\\\%$.`\n          reponse = taux\n          break\n        case 'taux-':\n          coeff = texNombrec(1 - taux / 100)\n          texte = `Multiplier par ${coeff} revient à...`\n          texteCorr = `Multiplier par ${coeff} revient à diminuer de $${taux}~\\\\%$ car $${coeff} = ${100 - taux}~\\\\% = 100~\\\\% - ${taux}~\\\\%$.`\n          reponse = taux\n          break\n      }\n      setReponse(this, i, reponse)\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Déterminer le coefficient\\n2 : Exprimer une variation en pourcentage\\n3 : Mélange des 2 types de questions']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","Coefficient_evolution","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","boutonAide","modalUrl","parseInt","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","reponse","taux","coeff","i","cpt","choice","randint","texPrix","calcul","texNombrec","setReponse","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}