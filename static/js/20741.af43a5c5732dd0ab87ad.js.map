{"version":3,"file":"js/20741.af43a5c5732dd0ab87ad.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6P11-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, choice, randint, prenom, texPrix, texNombre, texNombrec, miseEnEvidence, texMasse } from '../../modules/outils.js'\nimport { mathalea2d, tableau } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Résoudre des problèmes de proportionnalité dans un tableau avec la linéarité'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Résoudre un problème de proportionnalité avec linéarité via tableau\n * @Mireille Gain, 30 mai 2021\n * Référence 6P11-2\n*/export default function ProportionnaliteParLineariteTableau () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'On considère que les situations suivantes, sauf cas flagrant, sont des situations de proportionnalité. <br>On demande de les résoudre à l\\'aide d\\'un tableau.'\n  this.nbQuestions = 5\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 4 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typeDeQuestionsDisponibles\n    if (this.sup === 1) {\n      typeDeQuestionsDisponibles = [1, 1, 1, 1, 4]\n    } else if (this.sup === 2) {\n      typeDeQuestionsDisponibles = [2, 2, 2, 2, 4]\n    } else if (this.sup === 3) {\n      typeDeQuestionsDisponibles = [3, 3, 3, 3, 4]\n    } else if (this.sup === 4) {\n      typeDeQuestionsDisponibles = [1, 2, 3, 2, 4]\n    }\n\n    const listeTypeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    let np, cm, ng, o, pp, pg, pu, tp, index, a\n    const fruits = [\n      ['pêches', 0.24],\n      ['noix', 0.29],\n      ['cerises', 0.31],\n      ['pommes', 0.12],\n      ['framboises', 0.75],\n      ['fraises', 0.37],\n      ['citrons', 0.08],\n      ['bananes', 0.09]\n    ]\n\n    const objets = [\n      ['billes', 0.1],\n      ['bonbons', 0.1],\n      ['bougies', 1.2],\n      ['crayons', 0.5],\n      ['gâteaux', 1.3],\n      ['gommes', 0.4],\n      ['stickers', 0.2],\n      ['cahiers', 1.4]\n    ]\n\n    for (let i = 0, texte, texteCorr, monTableau, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      a = choice([1, 2, 3])\n      // Boucle principale où i+1 correspond au numéro de la question\n\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 1: // multiplication\n          if (a === 1) {\n            index = randint(0, 7)\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * randint(8, 9) * ([objets[index][1]]) / 10\n            pg = cm * pp\n            o = choice([objets[index][0]])\n            texte = `${prenom()} achète ${np} ${o} pour ${texPrix(pp)} €. Combien faudrait-il payer pour en acheter ${ng} ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: [`\\\\text{Nombre de ${o}}`, np, ng],\n              ligne2: ['\\\\text{Prix (en euros)}', `${texPrix(pp)}`, `${miseEnEvidence(texPrix(pg))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\times' + cm)}`]]\n            })\n            setReponse(this, i, texPrix(pg))\n          } else if (a === 2) {\n            index = randint(0, 7)\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * fruits[index][1]\n            pg = cm * pp\n            o = choice([fruits[index][0]])\n            texte = `${prenom()} achète ${texMasse(pp)} kg de ${o} pour ${texPrix(np)} €. Quelle masse pourrait être achetée avec ${ng} € ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: [`\\\\text{Prix des ${o} (en euros)}`, np, ng],\n              ligne2: [`\\\\text{Masse des ${o} (en kg)}`, `${texMasse(pp)}`, `${miseEnEvidence(texMasse(pg))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\times' + cm)}`]]\n            })\n            setReponse(this, i, texMasse(pg))\n          } else if (a === 3) {\n            index = randint(0, 7)\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * randint(11, 48) / 10\n            pg = cm * pp\n            texte = `${np} objets occupent un volume de ${texNombre(pp)} cm³. Quel volume serait occupé par ${ng} de ces objets ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: ['\\\\text{Nombre d\\'objets}', np, ng],\n              ligne2: ['\\\\text{Volume des objets (en cm³)}', `${texNombre(pp)}`, `${miseEnEvidence(texNombrec(pg))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\times' + cm)}`]]\n            })\n            setReponse(this, i, texNombrec(pg))\n          }\n          texteCorr = mathalea2d({ xmin: -1, xmax: 16, ymin: 0, ymax: 7.5, style: 'display: block' }, monTableau)\n          break\n\n        case 2: // division\n          if (a === 1) {\n            index = randint(0, 7)\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * randint(8, 9) / 10\n            pg = cm * pp\n            o = choice([objets[index][0]])\n            texte = `${prenom()} achète ${ng} ${o} pour ${texPrix(pg)} €. Combien faudrait-il payer pour en acheter ${np} ? `\n            monTableau = tableau({\n              ligne1: [`\\\\text{Nombre de ${o}}`, ng, np],\n              ligne2: ['\\\\text{Prix (en euros)}', `${texPrix(pg)}`, `${miseEnEvidence(texPrix(pp))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + cm)}`]],\n              largeurTitre: 9\n            })\n            setReponse(this, i, texPrix(pp))\n          } else if (a === 2) {\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * randint(40, 60)\n            pg = cm * pp\n            texte = `${prenom()} peint une surface de ${pg} m² en ${ng} jours. Quelle surface serait peinte en ${np} jours ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: ['\\\\text{Durée (en jours)}', ng, np],\n              ligne2: ['\\\\text{Surface peinte (en m²)}', `${texNombre(pg)}`, `${miseEnEvidence(texNombre(pp))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + cm)}`]]\n            })\n            setReponse(this, i, texNombre(pp))\n          } else if (a === 3) {\n            index = randint(0, 7)\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * fruits[index][1]\n            pg = cm * pp\n            o = choice([fruits[index][0]])\n            texte = `${prenom()} achète ${texMasse(pg)} kg de ${o} pour ${texPrix(ng)} €. Quelle masse pourrait être achetée avec ${np} € ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: [`\\\\text{Prix des ${o} (en euros)}`, ng, np],\n              ligne2: [`\\\\text{Masse des ${o} (en kg)}`, `${texMasse(pg)}`, `${miseEnEvidence(texMasse(pp))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + cm)}`]]\n            })\n            setReponse(this, i, texMasse(pp))\n          }\n          texteCorr = mathalea2d({ xmin: -1, xmax: 16, ymin: 0, ymax: 7.5, style: 'display: block' }, monTableau)\n          break\n\n        case 3: // passage par l'unité\n          if (a === 1) {\n            index = randint(0, 7)\n            pu = randint(1, 19) * ([objets[index][1]]) / 10\n            np = randint(2, 10)\n            pp = pu * np\n            ng = randint(2, 10, np)\n            pg = pu * ng\n            o = choice([objets[index][0]])\n            texte = `${prenom()} achète ${np} ${o} pour ${texPrix(pp)} €. Combien faudrait-il payer pour en acheter ${ng} ? `\n            monTableau = tableau({\n              ligne1: [`\\\\text{Nombre de ${o}}`, np, 1, ng],\n              ligne2: ['\\\\text{Prix (en euros)}', `${texPrix(pp)}`, `${miseEnEvidence(texPrix(pu))}`, `${miseEnEvidence(texPrix(pg))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + np)}`], [2, 3, `${miseEnEvidence('\\\\times' + ng)}`]],\n              largeurTitre: 9\n            })\n            setReponse(this, i, texPrix(pg))\n          } else if (a === 2) {\n            pu = randint(40, 60)\n            np = randint(2, 10)\n            pp = pu * np\n            ng = randint(2, 10, np)\n            pg = pu * ng\n            texte = `${prenom()} peint une surface de ${pp} m² en ${np} jours. Quelle surface serait peinte en ${ng} jours ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: ['\\\\text{Durée (en jours)}', np, 1, ng],\n              ligne2: ['\\\\text{Surface peinte (en m²)}', `${pp}`, `${miseEnEvidence(pu)}`, `${miseEnEvidence(pg)}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + np)}`], [2, 3, `${miseEnEvidence('\\\\times' + ng)}`]]\n            })\n            setReponse(this, i, pg)\n          } else if (a === 3) {\n            index = randint(0, 7)\n            pu = randint(8, 12) * fruits[index][1] / 10\n            np = randint(2, 10)\n            pp = pu * np\n            ng = randint(2, 10, np)\n            pg = pu * ng\n            o = choice([fruits[index][0]])\n            texte = `${prenom()} achète ${texMasse(pp)} kg de ${o} pour ${texPrix(np)} €. Quelle masse pourrait être achetée avec ${ng} € ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: [`\\\\text{Prix des ${o} (en euros)}`, np, 1, ng],\n              ligne2: [`\\\\text{Masse des ${o} (en kg)}`, `${texMasse(pp)}`, `${miseEnEvidence(texMasse(pu))}`, `${miseEnEvidence(texMasse(pg))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + np)}`], [2, 3, `${miseEnEvidence('\\\\times' + ng)}`]]\n            })\n            setReponse(this, i, texMasse(pg))\n          }\n          texteCorr = mathalea2d({ xmin: -1, xmax: 19, ymin: 0, ymax: 7.5, style: 'display: block' }, monTableau)\n\n          break\n\n        case 4: // Non proportionnalité\n          if (a === 1) {\n            tp = randint(120, 165) / 100\n            np = randint(10, 14)\n            cm = randint(2, 4)\n            ng = np * cm\n            texte = `${prenom()} mesure ${texNombre(tp)} m à ${np} ans. Quelle sera sa taille à ${ng} ans ?`\n            texteCorr = 'On ne peut pas savoir car la taille n\\'est pas proportionnelle à l\\'âge.'\n          } else if (a === 2) {\n            tp = randint(30, 45)\n            np = randint(10, 13)\n            cm = randint(2, 5)\n            ng = np * cm\n            texte = `${prenom()} pèse ${texNombre(tp)} kg à ${np} ans. Quelle sera son poids à ${ng} ans ?`\n            texteCorr = 'On ne peut pas savoir car le poids (plus précisément la masse) n\\'est pas proportionnel à l\\'âge.'\n          } else if (a === 3) {\n            tp = randint(35, 39)\n            np = randint(10, 13)\n            cm = randint(2, 5)\n            ng = np * cm\n            texte = `${prenom()} chausse du ${texNombre(tp)} à ${np} ans. Quelle sera sa pointure à ${ng} ans ?`\n            texteCorr = 'On ne peut pas savoir car la pointure n\\'est pas proportionnelle à l\\'âge.'\n          }\n\n          setReponse(this, i, 'non')\n      }\n      if (!this.interactif) {\n        this.consigne = 'On considère que les situations suivantes, sauf cas flagrant, sont des situations de proportionnalité. <br>On demande de les résoudre à l\\'aide d\\'un tableau.'\n      } else {\n        this.consigne = 'On considère que les situations suivantes, sauf cas flagrant, sont des situations de proportionnalité. <br>Attention à donner le résultat avec le bon format : deux chiffres après la virgule si c\\'est un prix, trois si c\\'est une masse; écrire \"non\" si ce n\\'est pas une situation de proportionnalité.'\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, '1 : Multiplication\\n2 : Division\\n3 : Passage par l\\'unité\\n4 : Mélange des trois']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","ProportionnaliteParLineariteTableau","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","typeDeQuestionsDisponibles","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","np","cm","ng","o","pp","pg","pu","tp","index","a","fruits","objets","texte","texteCorr","monTableau","i","cpt","choice","randint","prenom","texPrix","tableau","largeurTitre","ligne1","ligne2","miseEnEvidence","flecheHaut","setReponse","texMasse","texNombre","texNombrec","mathalea2d","xmin","xmax","ymin","ymax","style","interactif","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}