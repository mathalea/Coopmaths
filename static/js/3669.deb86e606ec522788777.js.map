{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R20.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","amcType","interactifReady","titre","ExerciceAdditionsRelatifs","max","Exercice","this","sup","sup2","consigne","spacing","qcmDisponible","modeQcm","nouvelleVersion","parseInt","listeQuestions","listeCorrections","a","b","k","texte","texteCorr","i","cpt","nbQuestions","randint","choice","texNombre","ecritureAlgebrique","ecritureNombreRelatif","ecritureNombreRelatifc","autoCorrection","enonce","propositions","statut","interactif","propositionsQcm","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","length","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","id","feedback","type","querySelectorAll","uicheck","classList","add","espace","context","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","reponse","valeur","exerciceInteractif","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"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","file":"js/3669.deb86e606ec522788777.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureNombreRelatif, ecritureNombreRelatifc, ecritureAlgebrique, texNombre } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType =1 //type de question AMC \nexport const interactifReady = true\n\nexport const titre = 'Addition de deux entiers relatifs'\n\n/**\n* Additionner deux relatifs inférieurs à la valeur maximale en paramètre qui est par défaut à 20.\n*\n* Paramètre supplémentaire ; utilisation des écritures simplifiées\n* @Auteur Rémi Angot\n* 5R20\n*/\nexport default function ExerciceAdditionsRelatifs (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    for (let i = 0, a, b, k, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(1, this.sup)\n      b = randint(1, this.sup)\n      k = choice([[-1, -1], [-1, 1], [1, -1]]) // Les deux nombres relatifs ne peuvent pas être tous les deux positifs\n      a = a * k[0]\n      b = b * k[1]\n      if (this.sup2) {\n        texte = `$ ${texNombre(a)}${ecritureAlgebrique(b)} = \\\\dotfill $`\n        texteCorr = `$ ${a}${ecritureAlgebrique(b)} = ${a + b} $`\n      } else {\n        texte = '$ ' + ecritureNombreRelatif(a) + ' + ' + ecritureNombreRelatif(b) + ' = \\\\dotfill $'\n        texteCorr = '$ ' + ecritureNombreRelatifc(a) + ' + ' + ecritureNombreRelatifc(b) + ' = ' + ecritureNombreRelatifc(a + b) + ' $'\n      }\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${a + b}$`,\n          statut: true\n        },\n        {\n          texte: `$${a - b}$`,\n          statut: false\n        },\n        {\n          texte: `$${-a + b}$`,\n          statut: false\n        },\n        {\n          texte: `$${-a - b}$`,\n          statut: false\n        }\n      ]\n      if (this.interactif) {\n        texte += propositionsQcm(this, i).texte\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}