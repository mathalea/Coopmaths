/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_4e_4S11_js"],{

/***/ "./src/js/exercices/4e/4S11.js":
/*!*************************************!*\
  !*** ./src/js/exercices/4e/4S11.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Calculer_des_frequences)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\n\n\nconst titre = 'Déterminer des médianes'\n\n/**\n * Calculs de médianes dans des séries statistiques\n* @auteur Sébastien Lozano forked de Jean-Claude Lhote\n* Référence 4S11\n* Date initiale 2021-01-12\n* Mise à jour le ...\n*/\nfunction Calculer_des_frequences() {\n\t_ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.consigne = \"\";\n\tthis.nb_questions = 1;\n\tthis.spacing = 1;\n\tthis.spacing_corr = 1.5;\n\tthis.nb_cols = 1;\n\tthis.nb_cols_corr = 1;\n\tthis.sup = 1;\n\tthis.liste_packages = `bclogo`;\n\n\tthis.nouvelle_version = function () {\n\t\tthis.liste_questions = []; // Liste de questions\n\t\tthis.liste_corrections = []; // Liste de questions corrigées\n\n\t\tfor (let i = 0, temperatures, nombre_temperatures, nombre_notes, notes, nombre_des, nombre_faces, nombre_tirages, index_valeur, frequence, tirages, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\t\t\t\n\t\t\tvar underbrace_mediane = (nb_val) => {\n\t\t\t\tlet sortie;\n\t\t\t\tif (nb_val%2 == 0) {// nb pair de valeurs\n\t\t\t\t\tsortie = `$\\\\underbrace{1^e\\\\hspace{0.25cm}2^e ... ${nb_val/2-1}^e}_{${nb_val/2-1}\\\\; valeurs} \\\\hspace{0.25cm} ${nb_val/2}^e \\\\hspace{0.25cm} ${nb_val/2+1}^e \\\\hspace{0.25cm} \\\\underbrace{${nb_val/2+2}^e ... ${nb_val}^e}_{${nb_val/2-1}\\\\; valeurs}$`;\n\t\t\t\t} else {// nb impair de valeurs\n\t\t\t\t\tsortie = `$\\\\underbrace{1^e\\\\hspace{0.25cm}2^e ... ${(nb_val-1)/2}^e}_{${(nb_val-1)/2}\\\\; valeurs} \\\\hspace{0.25cm} ${(nb_val-1)/2+1}^e \\\\hspace{0.25cm} \\\\underbrace{${(nb_val-1)/2+2}^e ... ${nb_val}^e}_{${(nb_val-1)/2}\\\\; valeurs}$`;\n\t\t\t\t}\n\t\t\t\treturn sortie\n\t\t\t};\n\t\t\tvar des_tab_eff_cumul = (tirages,effCumulBool) => {\n\t\t\t\tlet sortie;\t\t\t\t\n\t\t\t\tif (!effCumulBool) {\n\t\t\t\t\tsortie = ``;\t\t\t\t\n\t\t\t\t\tif (tirages.length > 12) {\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 1/2\n\t\t\t\t\t\tfor (let j = 0; j <= Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = 0; j < Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = 0; j < Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>';\n\t\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 2/2\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j <= tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs en un seul morceau\n\t\t\t\t\t\tfor (let j = 0; j <= tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = 0; j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = 0; j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\t\t\t\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n\t\t\t\t\t};\t\n\t\t\t\t} else {\n\t\t\t\t\tsortie = ``;\t\t\t\t\n\t\t\t\t\tif (tirages.length > 12) {\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 1/2\n\t\t\t\t\t\tfor (let j = 0; j <= Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = 0; j < Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = 0; j < Math.round(tirages.length / 2); j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions cumulées}';\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let j = 0; j < Math.round(tirages.length / 2); j++) {\n\t\t\t\t\t\t\tlet cumul = 0 ;\n\t\t\t\t\t\t\tfor (let k = 0; k<=j ; k++) {\n\t\t\t\t\t\t\t\tcumul += tirages[k][1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsortie += '&' + cumul;//tirages[j][1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>';\n\t\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 2/2\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j <= tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions cumulées}';\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let j = Math.round(tirages.length / 2); j < tirages.length; j++) {\n\t\t\t\t\t\t\tlet cumul = 0 ;\n\t\t\t\t\t\t\tfor (let k = 0; k<=j ; k++) {\n\t\t\t\t\t\t\t\tcumul += tirages[k][1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsortie += '&' + cumul;//tirages[j][1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs en un seul morceau\n\t\t\t\t\t\tfor (let j = 0; j <= tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '|c';\n\t\t\t\t\t\tsortie += '}\\\\hline  \\\\text{Scores}';\n\t\t\t\t\t\tfor (let j = 0; j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][0];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\t\t\t\t\t\tfor (let j = 0; j < tirages.length; j++)\n\t\t\t\t\t\t\tsortie += '&' + tirages[j][1];\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions cumulées}';\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let j = 0; j < tirages.length; j++) {\n\t\t\t\t\t\t\tlet cumul = 0 ;\n\t\t\t\t\t\t\tfor (let k = 0; k<=j ; k++) {\n\t\t\t\t\t\t\t\tcumul += tirages[k][1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsortie += '&' + cumul;//tirages[j][1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\treturn sortie;\n\t\t\t};\n\t\t\tif (this.sup == 1) { // ici on lance des dés\n\t\t\t\tvar solid_name = (nb_cot) => {\n\t\t\t\t\tswitch (nb_cot) {\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\treturn `tétraèdre`;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\treturn `hexaèdre`;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn `octaèdre`;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 10:\n\t\t\t\t\t\t\treturn `decaèdre`;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn `cas non prévu`\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t};\n\t\t\t\t};\t\t\t\t\n\t\t\t\tnombre_des = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 2);\n\t\t\t\tnombre_faces = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([4, 6, 8, 10]);\n\t\t\t\tnombre_tirages = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([50, 99, 100, 199, 200, 299, 500, 999, 1000, 1999, 2000]);\n\t\t\t\ttirages = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tirer_les_des)(nombre_tirages, nombre_faces, nombre_des); // on récupère une série rangée dans l'ordre croissant avec les effectifs correspondants\n\t\t\t\tdo\n\t\t\t\t\tindex_valeur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, tirages.length - 1);\n\t\t\t\twhile (tirages[index_valeur][1] == 0); // on choisi au hasard l'index d'une valeur dont l'effectif est différent de 0.\n\t\t\t\tif (nombre_des > 1) {\n\t\t\t\t\ttexte = `On a réalisé $${nombre_tirages}$ lancers de $${nombre_des}$ dés à $${nombre_faces}$ faces.<br>`;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttexte = `On a réalisé $${nombre_tirages}$ lancers d'un dé à $${nombre_faces}$ faces.<br>`;\n\t\t\t\t}\n\t\t\t\ttexte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampe_message)({\n\t\t\t\t\ttitre : `Vocabulaire`,\n\t\t\t\t\ttexte :  `Le solide qui correspond à ce type de dé s'appelle ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(solid_name(nombre_faces))}.`,\n\t\t\t\t\tcouleur : `nombres`\n\t\t\t\t})+'<br>';\n\t\t\t\ttexte += 'Les résultats sont inscrits dans le tableau ci-dessous :<br><br>';\n\t\t\t\ttexte += des_tab_eff_cumul(tirages,false)+ '<br>';\t\t\t\t\n\t\t\t\ttexte += `<br><br> Déterminer une médiane de cette série.`;\n\t\t\t\ttexte_corr = `On a réalisé $${nombre_tirages}$ lancers en tout.<br>`;\t\t\t\t\n\t\t\t\tif (nombre_tirages%2 == 0) {\n\t\t\t\t\ttexte_corr += `Le nombre de lancers est pair, les scores sont rangés dans l'ordre croissant.<br>\n\t\t\t\t\tLes deux valeurs centrales sont la $${nombre_tirages/2}^{e}$ et la $${nombre_tirages/2+1}^{e}$ valeur.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(nombre_tirages)} <br>\n\t\t\t\t\tUne médiane est donc un score compris entre le $${nombre_tirages/2}^{e}$ et le $${nombre_tirages/2+1}^{e}$ score.<br>\n\t\t\t\t\tOn peut ajouter une ligne avec les effectifs cumulés pour trouver ces deux valeurs.<br><br>\n\t\t\t\t\t${des_tab_eff_cumul(tirages,true)}<br><br>\n\t\t\t\t\t`;\n\t\t\t\t\t// on récupère le score des deux lancers médians\n\t\t\t\t\tlet scoresMedians = []\n\t\t\t\t\t// compteur\n\t\t\t\t\tlet cpt = 0;\n\t\t\t\t\t// Pour cumuler les effectifs, tirages est un tableau 2D qui contient les couples [score,effectif]\n\t\t\t\t\tlet effCumulCroiss = tirages[0][1];\n\t\t\t\t\t// On récupère le premier score médian\n\t\t\t\t\twhile (effCumulCroiss <= nombre_tirages/2) {\n\t\t\t\t\t\tcpt+=1;\n\t\t\t\t\t\teffCumulCroiss += tirages[cpt][1];\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscoresMedians.push(tirages[cpt][0]);\n\t\t\t\t\t\n\t\t\t\t\t// On récupère le second score médian\n\t\t\t\t\tcpt = 0;\n\t\t\t\t\teffCumulCroiss = tirages[0][1];\n\t\t\t\t\twhile (effCumulCroiss <= nombre_tirages/2+1) {\n\t\t\t\t\t\tcpt+=1;\n\t\t\t\t\t\teffCumulCroiss += tirages[cpt][1];\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscoresMedians.push(tirages[cpt][0]);\n\t\t\t\t\ttexte_corr += `D'où ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(`le score médian : ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)((scoresMedians[0]+scoresMedians[1])/2)}`)}<br>`;\t\t\t\t\t\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampe_message)({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${(nombre_tirages)/2}$ lancers dont le score est inférieur ou égal à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(scoresMedians[0])}$ et $${(nombre_tirages)/2}$ lancers dont le score est supérieur ou égal à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(scoresMedians[0])}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t} else { // Le nombre de lancers est impair ici\n\t\t\t\t\ttexte_corr += `Le nombre de lancers est impair, les scores sont rangés dans l'odre croissant.<br>\n\t\t\t\t\tLa valeur centrale est la $${(nombre_tirages-1)/2+1}^{e}$ valeur.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(nombre_tirages)} <br>\n\t\t\t\t\tUne médiane est donc le $${(nombre_tirages-1)/2+1}^{e}$ score.<br>\n\t\t\t\t\tOn peut ajouter une ligne avec les effectifs cumulés pour trouver cette valeur.<br><br>\n\t\t\t\t\t${des_tab_eff_cumul(tirages,true)}<br><br>`;\n\t\t\t\t\t// on récupère le score des deux lancers médians\n\t\t\t\t\tlet scoresMedians = []\n\t\t\t\t\t// compteur\n\t\t\t\t\tlet cpt = 0;\n\t\t\t\t\t// Pour cumuler les effectifs, tirages est un tableau 2D qui contient les couples [score,effectif]\n\t\t\t\t\tlet effCumulCroiss = tirages[0][1];\n\t\t\t\t\t// On récupère le premier score médian\n\t\t\t\t\twhile (effCumulCroiss <= nombre_tirages/2) {\n\t\t\t\t\t\tcpt+=1;\n\t\t\t\t\t\teffCumulCroiss += tirages[cpt][1];\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\tscoresMedians.push(tirages[cpt][0]);\n\t\t\t\t\ttexte_corr += `D'où ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(`le score médian : ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(scoresMedians[0])}`)}<br>`;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampe_message)({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${(nombre_tirages-1)/2}$ lancers dont le score est inférieur ou égal à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(scoresMedians[0])}$ et $${(nombre_tirages-1)/2}$ lancers dont le score est supérieur ou égal à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(scoresMedians[0])}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.sup == 2) { // ici on trie des notes\n\t\t\t\tnombre_notes = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([7, 8, 9, 10, 11, 12]);\n\t\t\t\tnotes = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_notes)(nombre_notes, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 7), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(13, 20)); // on récupère une liste de notes (série brute)\n\t\t\t\tindex_valeur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, notes.length - 1); // on choisi une des notes au hasard\n\t\t\t\tfrequence = 0;\n\t\t\t\tfor (let j = 0; j < notes.length; j++) { // frequence va contenir l'effectif de la note choisie\n\t\t\t\t\tif (notes[j] == notes[index_valeur])\n\t\t\t\t\t\tfrequence++;\n\t\t\t\t}\n\t\t\t\ttexte = `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)()} a obtenu ces notes ce trimestre-ci en mathématiques :<br>`;\n\t\t\t\ttexte += `$${notes[0]}$`;\n\t\t\t\tfor (let j = 1; j < nombre_notes - 1; j++)\n\t\t\t\t\ttexte += `; $${notes[j]}$ `; // On liste les notes (série brute)\n\t\t\t\ttexte += `et $${notes[nombre_notes - 1]}$.`;\n\n\t\t\t\ttexte += `<br><br>Déterminer une médiane de cette série.`;\n\t\t\t\tlet notes_rangees = notes.sort((a, b) => a - b);\n\t\t\t\tlet mediane;\n\t\t\t\tif (notes.length%2==0) {// attention les indices commencent à 0 !\n\t\t\t\t\tmediane = (notes_rangees[notes.length/2-1]+notes_rangees[notes.length/2])/2;\n\t\t\t\t\t//console.log('parité');\n\t\t\t\t} else {\n\t\t\t\t\tmediane = notes_rangees[(notes.length-1)/2];\n\t\t\t\t\t//console.log('imparité');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttexte_corr = `Il y a $${notes.length}$ notes en tout. `;\t\t\t\t\n\t\t\t\tif (notes.length%2==0) {\n\t\t\t\t\ttexte_corr += `Le nombre de notes est pair.<br>`;\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\ttexte_corr += `Le nombre de notes est impair.<br>`;\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\ttexte_corr += `Il faut par exemple ranger les notes dans l'ordre croissant : <br> $${notes[0]}$`;\n\t\t\t\tfor (let j = 1; j < nombre_notes - 1; j++)\n\t\t\t\t\ttexte_corr += `; $${notes[j]}$ `; // On liste les notes (série brute)\n\t\t\t\ttexte_corr += `et $${notes[nombre_notes - 1]}$.<br>`;\n\n\t\t\t\tif (notes.length%2==0) {\n\t\t\t\t\ttexte_corr += `Les notes centrales sont la $${notes.length/2}^{e}$ et la $${notes.length/2+1}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(notes.length)}<br>\n\t\t\t\t\tUne médiane est donc une note comprise entre la $${notes.length/2}^{e}$ et la $${notes.length/2+1}^{e}$ note, lorsque ces notes sont rangées.<br>`;\n\t\t\t\t} else {\n\t\t\t\t\ttexte_corr += `La note centrale est donc la $${(notes.length+1)/2}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(notes.length)}<br>\t\t\t\t\t\n\t\t\t\t\tUne médiane est donc la $${(notes.length+1)/2}^{e}$ note, lorsque ces notes sont rangées.<br>`;\t\t\t\n\t\t\t\t};\n\t\t\t\ttexte_corr += `D'où ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(`la note médiane : ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(mediane)}`)}<br>`;\n\t\t\t\tif (notes.length%2==0) {\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampe_message)({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${notes.length/2}$ notes inférieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(mediane)}$ et $${notes.length/2}$ notes supérieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(mediane)}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampe_message)({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${(notes.length-1)/2}$ notes inférieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(mediane)}$ et $${(notes.length-1)/2}$ notes supérieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(mediane)}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { // ici on relève des températures\n\t\t\t\tlet mois = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 12);\n\t\t\t\tlet annee = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1980, 2019);\n\t\t\t\tlet temperatures_de_base = [3, 5, 9, 13, 19, 24, 26, 25, 23, 18, 10, 5];\n\t\t\t\tnombre_temperatures = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.jours_par_mois)(mois);\n\t\t\t\ttemperatures = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.un_mois_de_temperature)(temperatures_de_base[mois - 1], mois, annee); // on récupère une série de température correspondant à 1 mois d'une année (série brute)\n\t\t\t\tindex_valeur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, temperatures.length - 1); // on choisi l'index d'une valeur au hasard\n\t\t\t\tfrequence = 0;\n\t\t\t\tfor (let j = 0; j < temperatures.length; j++) {\n\t\t\t\t\tif (temperatures[j] == temperatures[index_valeur])\n\t\t\t\t\t\tfrequence++; // frequence contient l'effectif de cette valeur\n\t\t\t\t}\n\t\t\t\ttexte = `En ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nom_du_mois)(mois)} ${annee}, à ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(['Moscou', 'Berlin', 'Paris', 'Bruxelles', 'Rome', 'Belgrade'])}, on a relevé les températures suivantes<br>`;\n\n\t\t\t\ttexte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // On construit le tableau des températures\n\t\t\t\ttexte += '|c';\n\t\t\t\tfor (let j = 0; j < Math.round(temperatures.length / 2); j++)\n\t\t\t\t\ttexte += '|c';\n\t\t\t\ttexte += '}\\\\hline  \\\\text{Jour}';\n\t\t\t\tfor (let j = 0; j < Math.round(temperatures.length / 2); j++)\n\t\t\t\t\ttexte += '&' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(j + 1);\n\t\t\t\ttexte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}';\n\t\t\t\tfor (let j = 0; j < Math.round(temperatures.length / 2); j++)\n\t\t\t\t\ttexte += '&' + temperatures[j];\n\t\t\t\ttexte += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>';\n\t\t\t\ttexte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // On construit le tableau des températures\n\t\t\t\ttexte += '|c';\n\t\t\t\tfor (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++)\n\t\t\t\t\ttexte += '|c';\n\t\t\t\ttexte += '}\\\\hline  \\\\text{Jour}';\n\t\t\t\tfor (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++)\n\t\t\t\t\ttexte += '&' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(j + 1);\n\t\t\t\ttexte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}';\n\t\t\t\tfor (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++)\n\t\t\t\t\ttexte += '&' + temperatures[j];\n\t\t\t\ttexte += '\\\\\\\\\\\\hline\\\\end{array}$';\n\n\n\t\t\t\ttexte += `<br><br>Déterminer une médiane de cette série.`;\n\t\t\t\t//texte += temperatures;\n\t\t\t\t//texte += temperatures.length;\n\t\t\t\ttexte_corr = ``;\n\t\t\t\tlet temperatures_rangees = temperatures.sort((a, b) => a - b);\n\t\t\t\tlet mediane;\n\t\t\t\tif (temperatures.length%2==0) {// attention les indices commencent à 0 !\n\t\t\t\t\tmediane = (temperatures_rangees[temperatures.length/2-1]+temperatures_rangees[temperatures.length/2])/2;\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tmediane = temperatures_rangees[(temperatures.length-1)/2];\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\ttexte_corr = `Il y a $${temperatures.length}$ températures relevées en tout. `;\t\t\t\t\n\t\t\t\tif (temperatures.length%2==0) {\n\t\t\t\t\ttexte_corr += `Le nombre de temperatures est pair.<br>`;\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\ttexte_corr += `Le nombre de temperatures est impair.<br>`;\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\ttexte_corr += `Il faut par exemple ranger les temperatures dans l'ordre croissant : <br> $${temperatures[0]}$`;\n\t\t\t\tfor (let j = 1; j < nombre_temperatures - 1; j++)\n\t\t\t\t\ttexte_corr += `; $${temperatures[j]}$ `; // On liste les temperatures (série brute)\n\t\t\t\ttexte_corr += `et $${temperatures[nombre_temperatures - 1]}$.<br>`;\n\n\t\t\t\tif (temperatures.length%2==0) {\n\t\t\t\t\ttexte_corr += `Les temperatures centrales sont la $${temperatures.length/2}^{e}$ et la $${temperatures.length/2+1}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(temperatures.length)}<br>\n\t\t\t\t\tUne médiane est donc une temperature comprise entre la $${temperatures.length/2}^{e}$ et la $${temperatures.length/2+1}^{e}$ temperature, lorsque ces temperatures sont rangées.<br>`;\n\t\t\t\t} else {\n\t\t\t\t\ttexte_corr += `La temperature centrale est donc la $${(temperatures.length+1)/2}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(temperatures.length)}<br>\t\t\t\t\t\n\t\t\t\t\tUne médiane est donc la $${(temperatures.length+1)/2}^{e}$ temperature, lorsque ces temperatures sont rangées.<br>`;\t\t\t\n\t\t\t\t};\n\t\t\t\ttexte_corr += `D'où ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(`la temperature médiane : ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(mediane)}`)}<br>`;\n\t\t\t\tif (temperatures.length%2==0) {\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampe_message)({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${temperatures.length/2}$ temperatures inférieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(mediane)}$ et $${temperatures.length/2}$ temperatures supérieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(mediane)}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampe_message)({\n\t\t\t\t\t\ttitre: `Interprétation`,\n\t\t\t\t\t\ttexte: `Ìl y a bien $${(temperatures.length-1)/2}$ temperatures inférieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(mediane)}$ et $${(temperatures.length-1)/2}$ temperatures supérieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(mediane)}$.`,\n\t\t\t\t\t\tcouleur: `nombres`,\n\t\t\t\t\t  });\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.liste_questions.push(texte);\n\t\t\t\tthis.liste_corrections.push(texte_corr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\t};\n\tthis.besoin_formulaire_numerique = ['Type de séries', 3, \"1 : Lancers de dés \\n 2 : Liste de notes\\n 3 : Un mois de températures\"];\n}\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/4e/4S11.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);