{"version":3,"file":"js/62161.e27951778b4c0068aca7.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C33-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, choice, combinaisonListes, lettreDepuisChiffre, texteGras, simpNotPuissance, eclatePuissance, reorganiseProduitPuissance, modalPdf } from '../../modules/outils.js'\n\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Puissances : Le sens des règles de calculs'\n\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true // pour définir que l'exercice est exportable AMC\nexport const amcType = 'AMCNum'\n\n/**\n * Puissances d'un relatif (1)\n * * L’objectif est de travailler le sens des règles de calcul sur les puissances plutôt que les formules magiques\n *\n * Paramétrages possibles :\n * * 1 : produit de puissances de même base\n * * 2 : quotient de puissances de même base\n * * 3 : puissance de puissance\n * * 4 : produit de puissances de même exposant\n * * 5 : mélange des trois autres niveaux\n * @author Sébastien Lozano\n * 4C33-1\n */\nexport default function PuissancesDunRelatif1 () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 1\n  this.titre = titre\n  context.isHtml\n    ? (this.consigne = 'Écrire sous la forme $\\\\mathbf{a^n}$.')\n    : (this.consigne = 'Écrire sous la forme $a^n$.')\n  context.isHtml ? (this.spacing = 3) : (this.spacing = 2)\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1)\n  this.nbQuestions = 5\n  this.correctionDetailleeDisponible = true\n  this.nbColsCorr = 1\n  this.sup = 5\n\n  this.listePackages = 'bclogo'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.sup = Number(this.sup)\n    let typesDeQuestions\n    this.boutonAide = modalPdf(\n      numeroExercice,\n      'assets/pdf/FichePuissances-4N21.pdf',\n      'Aide mémoire sur les puissances (Sébastien Lozano)',\n      'Aide mémoire'\n    )\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    let typesDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = [1] // produit de puissances de même base\n    } else if (this.sup === 2) {\n      typesDeQuestionsDisponibles = [2] // quotient de puissances de même base\n    } else if (this.sup === 3) {\n      typesDeQuestionsDisponibles = [3] // puissance de puissance\n    } else if (this.sup === 4) {\n      typesDeQuestionsDisponibles = [4] // produit de puissances de même exposant\n    } else if (this.sup === 5) {\n      typesDeQuestionsDisponibles = [1, 2, 3, 4] // mélange\n    }\n\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    )\n\n    // pour pouvoir adapter les couleurs en cas de besoin\n    const coul0 = 'red'\n    const coul1 = 'blue'\n\n    for (\n      let i = 0,\n        base0,\n        base1,\n        base,\n        baseUtile,\n        baseUtileBisAMC,\n        exp0,\n        exp1,\n        exp,\n        couleurExp0,\n        couleurExp1,\n        lettre,\n        texte,\n        texteCorr,\n        reponseInteractive,\n        exposantInteractif,\n        cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      // une fonction pour des infos supp sur les exposants\n      function remarquesPuissances (base, baseUtile, exposant) {\n        let sortie = ''\n        if (base < 0 && exposant % 2 === 0) {\n          sortie += '<br>'\n          sortie += `${texteGras('Remarque : ')} Dans ce cas comme les puissances d'exposant pair de deux nombres opposés sont égaux, on peut écrire $${simpNotPuissance(base, exposant)}$ à la place de $${baseUtile}^{${exposant}}$`\n        };\n        if (base < 0 && exposant % 2 === 1) {\n          sortie += '<br>'\n          sortie += `${texteGras('Remarque : ')} Dans ce cas comme les puissances d'exposant impair de deux nombres négatifs sont opposées, on pourrait écrire $${simpNotPuissance(base, exposant)}$  à la place de $${baseUtile}^{${exposant}}$`\n        };\n\n        return sortie\n      };\n\n      typesDeQuestions = listeTypeDeQuestions[i]\n\n      base = randint(2, 9) * choice([-1, 1]) // on choisit une base sauf 1 ... penser à gérer le cas des bases qui sont des puissances\n      exp0 = randint(1, 9)\n      exp1 = randint(1, 9, [exp0])\n      exp = [exp0, exp1] // on choisit deux exposants différents c'est mieux\n      lettre = lettreDepuisChiffre(i + 1) // on utilise des lettres pour les calculs\n\n      if (base < 0) {\n        baseUtile = '(' + base + ')' // on définit une base avec des parenthèses pour l'affichage du cas negatif\n      } else {\n        baseUtile = base\n      }\n\n      texteCorr = ''\n\n      switch (typesDeQuestions) {\n        case 1: // produit de puissances de même base\n          texte = `$${lettre}=${baseUtile}^${exp[0]}\\\\times ${baseUtile}^${exp[1]}$`\n\n          texteCorr += `$${lettre}=${baseUtile}^${exp[0]}\\\\times ${baseUtile}^${exp[1]}$`\n          if (this.correctionDetaillee) {\n            texteCorr += '<br>'\n            texteCorr += `$${lettre}=${eclatePuissance(\n              baseUtile,\n              exp[0],\n              coul0\n            )} \\\\times ${eclatePuissance(baseUtile, exp[1], coul1)}$`\n          }\n          texteCorr += '<br>'\n          texteCorr += `Il y a donc $\\\\mathbf{\\\\color{${coul0}}{${exp[0]}}~\\\\color{black}{+}~\\\\color{${coul1}}{${exp[1]}}}$ facteurs tous égaux à $${baseUtile}$`\n          texteCorr += '<br>'\n          texteCorr += `$${lettre}=${baseUtile}^{${exp[0]}+${exp[1]}} = ${baseUtile}^{${exp[0] + exp[1]}}`\n          // attention la baseUtile est de type str alors que la fonction switch sur un type number\n          if ((base < 0) && ((exp[1] + exp[0]) % 2 === 0)) {\n            texteCorr += `=${simpNotPuissance(base, exp[1] + exp[0])}$`\n          } else {\n            texteCorr += '$'\n          }\n          texteCorr += remarquesPuissances(base, baseUtile, exp[1] + exp[0])\n          texteCorr += '<br>'\n          if (base < 0 && ((exp[0] + exp[1]) % 2) === 0) {\n            reponseInteractive = [`${baseUtile}^${exp[1] + exp[0]}`, `${-base}^${exp[1] + exp[0]}`]\n            baseUtileBisAMC = -base\n          } else {\n            reponseInteractive = `${baseUtile}^${exp[1] + exp[0]}`\n          }\n          exposantInteractif = exp[1] + exp[0]\n          break\n        case 2: // quotient de puissances de même base\n          // Pour que la couleur de la base associée à l'exposant max soit toujours rouge.\n          if (Math.max(exp[0], exp[1]) === exp[0]) {\n            couleurExp0 = coul0\n            couleurExp1 = coul1\n          } else {\n            couleurExp0 = coul1\n            couleurExp1 = coul0\n          };\n\n          texte = `$${lettre}=\\\\dfrac{${baseUtile}^${exp[0]}}{${baseUtile}^${exp[1]}}$`\n\n          texteCorr += `$${lettre}=\\\\dfrac{${baseUtile}^${exp[0]}}{${baseUtile}^${exp[1]}}$`\n\n          if (this.correctionDetaillee) {\n            texteCorr += '<br><br>'\n            texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(baseUtile, exp[0], couleurExp0)}}{${eclatePuissance(baseUtile, exp[1], couleurExp1)}}$`\n          }\n          texteCorr += '<br><br>'\n          texteCorr += `Il y a donc $\\\\mathbf{\\\\color{${coul1}}{${Math.min(exp[0], exp[1])}}}$ simplifications par $${baseUtile}$ possibles.`\n          if (this.correctionDetaillee) {\n            texteCorr += '<br><br>'\n          }\n          if (exp[0] - exp[1] === 0) {\n            if (this.correctionDetaillee) {\n              texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n                `\\\\cancel{${baseUtile}}`,\n                exp[0],\n                couleurExp0\n              )}}{${eclatePuissance(\n                `\\\\cancel{${baseUtile}}`,\n                exp[0],\n                couleurExp1\n              )}}$`\n            }\n            texteCorr += '<br><br>'\n            texteCorr += `$${lettre}=1$`\n          } else if (exp[0] - exp[1] < 0) {\n            if (this.correctionDetaillee) {\n              texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n                `\\\\cancel{${baseUtile}}`,\n                exp[0],\n                couleurExp0\n              )}}{${eclatePuissance(\n                `\\\\cancel{${baseUtile}}`,\n                exp[0],\n                couleurExp1\n              )}\\\\times${eclatePuissance(\n                baseUtile,\n                exp[1] - exp[0],\n                couleurExp1\n              )}}$`\n            }\n            texteCorr += '<br><br>'\n            texteCorr += `$${lettre}=\\\\dfrac{1}{${baseUtile}^{${exp[1]}-${exp[0]}}}=\\\\dfrac{1}{${baseUtile}^{${exp[1] - exp[0]}}}`\n            if ((base < 0) && ((exp[1] - exp[0]) % 2 === 0)) {\n              texteCorr += `=\\\\dfrac{1}{${simpNotPuissance(\n                base,\n                exp[1] - exp[0]\n              )}}=${simpNotPuissance(base, exp[0] - exp[1])}$`\n            } else {\n              texteCorr += `=${baseUtile}^{${exp[0] - exp[1]}}$`\n            }\n          } else {\n            if (this.correctionDetaillee) {\n              texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n                `\\\\cancel{${baseUtile}}`,\n                exp[1],\n                couleurExp0\n              )}\\\\times${eclatePuissance(\n                baseUtile,\n                exp[0] - exp[1],\n                couleurExp0\n              )}}{${eclatePuissance(\n                `\\\\cancel{${baseUtile}}`,\n                exp[1],\n                couleurExp1\n              )}}$`\n            }\n            texteCorr += '<br><br>'\n            texteCorr += `$${lettre}=${baseUtile}^{${exp[0]}-${exp[1]}}=${baseUtile}^{${exp[0] - exp[1]}}`\n            if ((base < 0) && ((exp[0] - exp[1]) % 2 === 0)) {\n              texteCorr += `=${simpNotPuissance(base, exp[0] - exp[1])}$`\n            } else {\n              texteCorr += '$'\n            }\n          }\n          texteCorr += remarquesPuissances(base, baseUtile, exp[0] - exp[1])\n          texteCorr += '<br>'\n          if (base < 0 && ((exp[0] - exp[1]) % 2) === 0) {\n            reponseInteractive = [`${baseUtile}^${exp[0] - exp[1]}`, `${-base}^${exp[0] - exp[1]}`]\n            baseUtileBisAMC = -base\n          } else {\n            reponseInteractive = `${baseUtile}^${exp[0] - exp[1]}`\n          }\n          exposantInteractif = exp[0] - exp[1]\n          break\n        case 3: // exponentiation\n          exp = [randint(2, 4), randint(2, 4)] // on redéfinit les deux exposants pour ne pas avoir d'écritures trop longues et pour éviter 1\n          texte = `$${lettre}=(${baseUtile}^${exp[0]})^{${exp[1]}}$`\n\n          texteCorr += `$${lettre}=(${baseUtile}^${exp[0]})^{${exp[1]}}$`\n\n          if (this.correctionDetaillee) {\n            texteCorr += '<br>'\n            texteCorr += `$${lettre}=\\\\color{${coul0}}{\\\\underbrace{${eclatePuissance(\n              `(${baseUtile}^${exp[0]})`,\n              exp[1],\n              coul0\n            )}}_{${exp[1]}\\\\thickspace\\\\text{facteurs}}}$`\n            texteCorr += '<br>'\n            texteCorr += `$${lettre}=\\\\color{${coul0}}{\\\\underbrace{${eclatePuissance(\n              `(\\\\color{${coul1}}{\\\\underbrace{${eclatePuissance(\n                baseUtile,\n                exp[0],\n                coul1\n              )}}_{${exp[0]}\\\\thickspace\\\\text{facteurs}}}\\\\color{${coul0}})`,\n              exp[1],\n              coul0\n            )}}_{${exp[1]}\\\\times\\\\color{${coul1}}{${exp[0]\n              }}\\\\thickspace\\\\color{black}{\\\\text{facteurs}}}}$`\n          }\n          texteCorr += '<br>'\n          texteCorr += `Il y a donc $\\\\mathbf{\\\\color{${coul0}}{${exp[1]}}~\\\\color{black}{\\\\times}~\\\\color{${coul1}}{${exp[0]}}}$ facteurs tous égaux à $${baseUtile}$`\n          texteCorr += '<br>'\n          texteCorr += `$${lettre}=${baseUtile}^{${exp[0]}\\\\times${exp[1]\n            }} = ${baseUtile}^{${exp[0] * exp[1]}}`\n          if ((base < 0) && ((exp[1] * exp[0]) % 2 === 0)) {\n            texteCorr += `= ${simpNotPuissance(base, exp[0] * exp[1])}$`\n          } else {\n            texteCorr += '$'\n          }\n          texteCorr += remarquesPuissances(base, baseUtile, exp[0] * exp[1])\n          texteCorr += '<br>'\n          if (base < 0 && (exp[0] * exp[1] % 2) === 0) {\n            reponseInteractive = [`${baseUtile}^${exp[0] * exp[1]}`, `${-base}^${exp[0] * exp[1]}`]\n            baseUtileBisAMC = -base\n          } else {\n            reponseInteractive = `${baseUtile}^${exp[0] * exp[1]}`\n          }\n          exposantInteractif = exp[0] * exp[1]\n          break\n        case 4: // produit de puissances de même exposant\n          base0 = randint(2, 8, [4, 6])\n          base1 = randint(2, 8, [4, 6, base0])\n          base = [base0, base1] // on choisit 2 bases différentes c'est mieux\n          exp = randint(2, 5, 6) // on choisit un exposant\n          texte = `$${lettre}=${base[0]}^${exp}\\\\times ${base[1]}^${exp}$`\n          texteCorr += '<br>'\n          texteCorr += `$${lettre}=${base[0]}^${exp}\\\\times ${base[1]}^${exp}$`\n\n          if (this.correctionDetaillee) {\n            texteCorr += '<br>'\n            texteCorr += `$${lettre}=${eclatePuissance(\n              base[0],\n              exp,\n              coul0\n            )} \\\\times ${eclatePuissance(base[1], exp, coul1)}$`\n            texteCorr += '<br>'\n            texteCorr += `$${lettre}=${reorganiseProduitPuissance(\n              base[0],\n              base[1],\n              exp,\n              coul0,\n              coul1\n            )}$`\n          }\n          texteCorr += '<br>'\n          texteCorr += `$${lettre}= (\\\\color{${coul0}}{\\\\mathbf{${base[0]\n            }}} \\\\color{black}{\\\\times} \\\\color{${coul1}}{\\\\mathbf{${base[1]\n            }}}\\\\color{black}{)^{${exp}}}=${base[0] * base[1]}^${exp}$`\n          texteCorr += '<br>'\n          // Ici la base ne peut jamais être négative\n          reponseInteractive = `${base[0] * base[1]}^${exp}`\n          baseUtile = base[0] * base[1]\n          baseUtileBisAMC = base[0] * base[1] // juste pour ne pas avoir à ajouter un batterie de ligne spécifique pour ce cas, je mets deux fois la même chose\n          base = baseUtile\n          exposantInteractif = exp\n          break\n      }\n      if (this.interactif && !context.isAmc) {\n        setReponse(this, i, reponseInteractive, { formatInteractif: 'puissance' })\n        texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline', { texte: ' $=$' })\n      }\n      if (context.isAmc) {\n        setReponse(this, i, reponseInteractive, { formatInteractif: 'puissance', basePuissance: base, exposantPuissance: exposantInteractif, exposantNbChiffres: 2, signe: true, aussiCorrect: baseUtileBisAMC })\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Règle à travailler',\n    5,\n    '1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissances\\n4 : Produit de puissances de même exposant\\n5 : Mélange'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","PuissancesDunRelatif1","Exercice","this","sup","context","consigne","spacing","spacingCorr","nbQuestions","correctionDetailleeDisponible","nbColsCorr","listePackages","nouvelleVersion","numeroExercice","typesDeQuestions","Number","boutonAide","modalPdf","listeQuestions","listeCorrections","autoCorrection","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","coul0","coul1","base0","base1","base","baseUtile","baseUtileBisAMC","exp0","exp1","exp","couleurExp0","couleurExp1","lettre","texte","texteCorr","reponseInteractive","exposantInteractif","i","cpt","remarquesPuissances","exposant","sortie","texteGras","simpNotPuissance","randint","choice","lettreDepuisChiffre","correctionDetaillee","eclatePuissance","Math","max","min","reorganiseProduitPuissance","interactif","setReponse","formatInteractif","ajouteChampTexteMathLive","basePuissance","exposantPuissance","exposantNbChiffres","signe","aussiCorrect","indexOf","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}