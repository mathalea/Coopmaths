{"version":3,"file":"js/95259.59314443a3091f6a1a0d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C30.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, lettreDepuisChiffre, simpExp, simpNotPuissance, eclatePuissance, modalPdf } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Puissances de 10 : Le sens des règles de calculs'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n/**\n * 4C30 -- Puissances de 10\n * * Travailler des résultats automatisés\n * @author Sébastien Lozano\n */\nexport default function PuissancesDeDix () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 1\n  this.titre = titre\n  context.isHtml\n    ? (this.consigne = 'Écrire sous la forme $\\\\mathbf{10^n}$.')\n    : (this.consigne = 'Écrire sous la forme $10^n$.')\n  context.isHtml ? (this.spacing = 3) : (this.spacing = 2)\n  context.isHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 2)\n  this.nbQuestions = 5\n  this.correctionDetailleeDisponible = true\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.nouvelleVersion = function (numeroExercice) {\n    this.sup = Number(this.sup)\n    let typesDeQuestions\n    this.boutonAide = modalPdf(\n      numeroExercice,\n      'assets/pdf/FichePuissances-4N21.pdf',\n      'Aide mémoire sur les puissances (Sébastien Lozano)',\n      'Aide mémoire'\n    )\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typesDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = [1, 2, 3] // produit, quotient et exponentiation de puissances de 10\n    } else if (this.sup === 2) {\n      typesDeQuestionsDisponibles = [4, 5, 6, 7, 8, 9, 10, 11] // calculs première série\n    } else if (this.sup === 3) {\n      typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] // calculs deuxième série\n    }\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    )\n\n    // pour pouvoir adapter les couleurs en cas de besoin\n    const coul0 = 'red'\n    const coul1 = 'blue'\n\n    for (\n      let i = 0,\n        exp0,\n        exp1,\n        exp,\n        couleurExp0,\n        couleurExp1,\n        lettre,\n        texte,\n        texteCorr,\n        reponseInteractive,\n        exposantInteractif,\n        cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n\n      exp0 = randint(1, 9)\n      exp1 = randint(1, 9, [exp0])\n      exp = [exp0, exp1] // on choisit deux exposants différents c'est mieux\n      lettre = lettreDepuisChiffre(i + 1) // on utilise des lettres pour les calculs\n\n      switch (typesDeQuestions) {\n        case 1: // produit de puissances de même base\n          texte = `$${lettre}=10^${exp[0]}\\\\times 10^${exp[1]}$`\n          texteCorr = `$${lettre}=10^${exp[0]}\\\\times 10^${exp[1]}$`\n          if (this.correctionDetaillee) {\n            texteCorr += '<br>'\n            texteCorr += `$${lettre}=${eclatePuissance(\n              10,\n              exp[0],\n              coul0\n            )} \\\\times ${eclatePuissance(10, exp[1], coul1)}$`\n          }\n          texteCorr += '<br>'\n          texteCorr += `Il y a donc $\\\\mathbf{\\\\color{${coul0}}{${exp[0]}}~\\\\color{black}{+}~\\\\color{${coul1}}{${exp[1]}}}$ facteurs tous égaux à $10$`\n          texteCorr += '<br>'\n          texteCorr += `$${lettre}=10^{${exp[0]}+${exp[1]}} = 10^{${exp[0] + exp[1]\n            }}`\n          // attention la base est de type str alors que la fonction switch sur un type number\n          if ((exp[1] + exp[0]) % 2 === 0) {\n            texteCorr += `=${simpNotPuissance(10, exp[0] + exp[1])}`\n          }\n          texteCorr += '$'\n          texteCorr += '<br>'\n          reponseInteractive = `10^{${exp[0] + exp[1]}}`\n          exposantInteractif = exp[0] + exp[1]\n          break\n        case 2: // quotient de puissances de même base\n          // Pour que la couleur de la 10 associée à l'exposant max soit toujours rouge.\n          if (Math.max(exp[0], exp[1]) === exp[0]) {\n            couleurExp0 = coul0\n            couleurExp1 = coul1\n          } else {\n            couleurExp0 = coul1\n            couleurExp1 = coul0\n          }\n          texte = `$${lettre}=\\\\dfrac{10^${exp[0]}}{10^${exp[1]}}$`\n          texteCorr = `$${lettre}=\\\\dfrac{10^${exp[0]}}{10^${exp[1]}}$`\n          if (this.correctionDetaillee) {\n            texteCorr += '<br><br>'\n            texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n              10,\n              exp[0],\n              couleurExp0\n            )}}{${eclatePuissance(10, exp[1], couleurExp1)}}$`\n          }\n          texteCorr += '<br><br>'\n          texteCorr += `Il y a donc $\\\\mathbf{\\\\color{${coul1}}{${Math.min(\n            exp[0],\n            exp[1]\n          )}}}$ simplifications par $10$ possibles.`\n          if (this.correctionDetaillee) {\n            texteCorr += '<br><br>'\n          }\n          if (exp[0] - exp[1] === 0) {\n            if (this.correctionDetaillee) {\n              texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n                '\\\\cancel{10}',\n                exp[0],\n                couleurExp0\n              )}}{${eclatePuissance('\\\\cancel{10}', exp[0], couleurExp1)}}$`\n            }\n            texteCorr += '<br><br>'\n            texteCorr += `$${lettre}=1`\n          } else if (exp[0] - exp[1] < 0) {\n            if (this.correctionDetaillee) {\n              texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n                '\\\\cancel{10}',\n                exp[0],\n                couleurExp0\n              )}}{${eclatePuissance(\n                '\\\\cancel{10}',\n                exp[0],\n                couleurExp1\n              )}\\\\times${eclatePuissance(10, exp[1] - exp[0], couleurExp1)}}$`\n            }\n            texteCorr += '<br><br>'\n            texteCorr += `$${lettre}=\\\\dfrac{1}{10^{${exp[1]}-${exp[0]}}}=\\\\dfrac{1}{10^{${exp[1] - exp[0]}}}`\n            if ((exp[1] - exp[0]) % 2 === 0) {\n              texteCorr += `=\\\\dfrac{1}{${simpNotPuissance(\n                10,\n                exp[1] - exp[0]\n              )}}=${simpNotPuissance(10, exp[0] - exp[1])}`\n            } else {\n              texteCorr += `=10^{${exp[0] - exp[1]}}`\n            }\n          } else {\n            if (this.correctionDetaillee) {\n              texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n                '\\\\cancel{10}',\n                exp[1],\n                couleurExp0\n              )}\\\\times${eclatePuissance(\n                10,\n                exp[0] - exp[1],\n                couleurExp0\n              )}}{${eclatePuissance('\\\\cancel{10}', exp[1], couleurExp1)}}$`\n            }\n            texteCorr += '<br><br>'\n            texteCorr += `$${lettre}=10^{${exp[0]}-${exp[1]}}=10^{${exp[0] - exp[1]\n              }}`\n          }\n          setReponse(this, i, `10^{${exp[0] - exp[1]}}`, { formatInteractif: 'puissance' })\n          texteCorr += '$'\n          texteCorr += '<br>'\n          reponseInteractive = `10^{${exp[0] - exp[1]}}`\n          exposantInteractif = exp[0] - exp[1]\n          break\n        case 3: // exponentiation\n          exp = [randint(2, 4), randint(2, 4)] // on redéfinit les deux exposants pour ne pas avoir d'écritures trop longues et pour éviter 1\n          texte = `$${lettre}=(10^${exp[0]})^{${exp[1]}}$`\n          texteCorr = `$${lettre}=(10^${exp[0]})^{${exp[1]}}$`\n          if (this.correctionDetaillee) {\n            texteCorr += '<br>'\n            texteCorr += `$${lettre}=\\\\color{${coul0}}{\\\\underbrace{${eclatePuissance(\n              `(10^${exp[0]})`,\n              exp[1],\n              coul0\n            )}}_{${exp[1]}\\\\thickspace\\\\text{facteurs}}}$`\n            texteCorr += '<br>'\n            texteCorr += `$${lettre}=\\\\color{${coul0}}{\\\\underbrace{${eclatePuissance(\n              `(\\\\color{${coul1}}{\\\\underbrace{${eclatePuissance(\n                10,\n                exp[0],\n                coul1\n              )}}_{${exp[0]}\\\\thickspace\\\\text{facteurs}}}\\\\color{${coul0}})`,\n              exp[1],\n              coul0\n            )}}_{${exp[1]}\\\\times\\\\color{${coul1}}{${exp[0]\n              }}\\\\thickspace\\\\color{black}{\\\\text{facteurs}}}}$`\n          }\n          texteCorr += '<br>'\n          texteCorr += `Il y a donc $\\\\mathbf{\\\\color{${coul0}}{${exp[1]}}~\\\\color{black}{\\\\times}~\\\\color{${coul1}}{${exp[0]}}}$ facteurs tous égaux à $10$`\n          texteCorr += '<br>'\n          texteCorr += `$${lettre}=10^{${exp[0]}\\\\times${exp[1]}} = 10^{${exp[0] * exp[1]\n            }}`\n          texteCorr += '$'\n          texteCorr += '<br>'\n          reponseInteractive = `10^{${exp[0] * exp[1]}}`\n          exposantInteractif = exp[0] * exp[1]\n          break\n        case 4:\n          exp = [randint(1, 7, [1]), randint(1, 7, [1]), randint(1, 7, [1])] // on a besoin de 3 exposants distincts\n          texte = `$\\\\dfrac{10^${exp[0]}\\\\times 100}{10^${exp[1]} \\\\times 10^${exp[2]}}$`\n          texteCorr = `$\\\\dfrac{10^${exp[0]}\\\\times 100}{10^${exp[1]} \\\\times 10^${exp[2]}}`\n          texteCorr += ` = \\\\dfrac{10^${exp[0]}\\\\times 10^{2}}{10^${exp[1]} \\\\times 10^${exp[2]}}`\n          texteCorr += ` = \\\\dfrac{10^{${exp[0]}+2}}{10^{${exp[1]}+${exp[2]}}}`\n          texteCorr += ` = \\\\dfrac{10^{${exp[0] + 2}}}{10^{${exp[1] + exp[2]\n            }}}`\n          texteCorr += ` = 10^{${exp[0] + 2}-${exp[1] + exp[2]}}`\n          texteCorr += ` = 10^{${exp[0] + 2 - exp[1] - exp[2]}}`\n          if (\n            exp[0] + 2 - exp[1] - exp[2] === 0 ||\n            exp[0] + 2 - exp[1] - exp[2] === 1\n          ) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant 1 est évincé\n            texteCorr += '=' + simpExp(10, exp[0] + 2 - exp[1] - exp[2])\n          }\n          texteCorr += '$'\n          reponseInteractive = `10^{${exp[0] + 2 - exp[1] - exp[2]}}`\n          exposantInteractif = exp[0] + 2 - exp[1] - exp[2]\n          break\n        case 5:\n          exp = [randint(1, 7, [1]), randint(1, 7, [1])] // on a besoin de 2 exposants distincts\n          texte = `$\\\\dfrac{10^${exp[0]}\\\\times 1000}{10^${exp[1]}}$`\n          texteCorr = `$\\\\dfrac{10^${exp[0]}\\\\times 1000}{10^${exp[1]}}`\n          texteCorr += ` = \\\\dfrac{10^${exp[0]}\\\\times 10^3}{10^${exp[1]}}`\n          texteCorr += ` = \\\\dfrac{10^{${exp[0]}+3}}{10^${exp[1]}}`\n          texteCorr += ` = \\\\dfrac{10^{${exp[0] + 3}}}{10^${exp[1]}}`\n          texteCorr += ` = 10^{${exp[0] + 3}-${exp[1]}}`\n          texteCorr += ` = 10^{${exp[0] + 3 - exp[1]}}`\n          if (exp[0] + 3 - exp[1] === 0 || exp[0] + 3 - exp[1] === 1) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant 1 est évincé\n            texteCorr += '=' + simpExp(10, exp[0] + 3 - exp[1])\n          }\n          texteCorr += '$'\n          reponseInteractive = `10^{${exp[0] + 3 - exp[1]}}`\n          exposantInteractif = exp[0] + 3 - exp[1]\n          break\n        case 6:\n          exp = [randint(1, 7, [1]), randint(1, 2)] // on a besoin de 2 exposants distincts\n          // le second exposant ne peut valoir que 1 ou 2 la fonction testExp ne convient pas à l'affichage ici\n          if (exp[1] === 2) {\n            texte = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100^${exp[1]}}$`\n            texteCorr = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100^${exp[1]}}`\n            texteCorr += `=\\\\dfrac{10^{1+${exp[0]}}}{(10^2)^${exp[1]}}`\n            texteCorr += `=\\\\dfrac{10^{1+${exp[0]}}}{10^{2 \\\\times ${exp[1]}}}`\n            texteCorr += `=\\\\dfrac{10^{${1 + exp[0]}}}{10^{${2 * exp[1]}}}`\n          } else {\n            texte = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100}$`\n            texteCorr = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100}`\n            texteCorr += `=\\\\dfrac{10^{1+${exp[0]}}}{10^2}`\n          }\n          texteCorr += `=10^{${1 + exp[0]}-${2 * exp[1]}}`\n          texteCorr += `=10^{${1 + exp[0] - 2 * exp[1]}}`\n          if (1 + exp[0] - 2 * exp[1] === 0 || 1 + exp[0] - 2 * exp[1] === 1) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant 1 est évincé\n            texteCorr += '=' + simpExp(10, 1 + exp[0] - 2 * exp[1])\n          }\n          texteCorr += '$'\n          reponseInteractive = `10^{${1 + exp[0] - 2 * exp[1]}}`\n          exposantInteractif = 1 + exp[0] + 2 * exp[1]\n          break\n        case 7:\n          exp = [randint(1, 7, [1])] // on a besoin de 1 exposant\n          texte = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100\\\\times 100}$`\n          texteCorr = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100\\\\times 100}`\n          texteCorr += `=\\\\dfrac{10^{1+${exp[0]}}}{10^2\\\\times 10^2}`\n          texteCorr += `=\\\\dfrac{10^{${1 + exp[0]}}}{10^{2+2}}`\n          texteCorr += `=\\\\dfrac{10^{${1 + exp[0]}}}{10^{${2 + 2}}}`\n          texteCorr += `=10^{${1 + exp[0]}-${2 + 2}}`\n          texteCorr += `=10^{${1 + exp[0] - 2 - 2}}`\n          if (1 + exp[0] - 2 - 2 === 0 || 1 + exp[0] - 2 - 2 === 1) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant 1 est évincé\n            texteCorr += '=' + simpExp(10, exp[0] - 3)\n          }\n\n          texteCorr += '$'\n          reponseInteractive = `10^{${exp[0] - 3}}`\n          exposantInteractif = exp[0] - 3\n          break\n        case 8:\n          exp = [randint(1, 7, [1])] // on a besoin de 1 exposant\n          texte = `$\\\\dfrac{100^${exp[0]}}{10}$`\n          texteCorr = `$\\\\dfrac{100^${exp[0]}}{10}`\n          texteCorr += `=\\\\dfrac{(10^2)^${exp[0]}}{10}`\n          texteCorr += `=\\\\dfrac{10^{2\\\\times ${exp[0]}}}{10}`\n          texteCorr += `=\\\\dfrac{10^{${2 * exp[0]}}}{10}`\n          texteCorr += `=10^{${2 * exp[0]}-1}`\n          texteCorr += `=10^{${2 * exp[0] - 1}}$`\n          reponseInteractive = `10^{${2 * exp[0] - 1}}`\n          exposantInteractif = 2 * exp[0] - 1\n          // Inutile de tester l'exposant final car il vaut au minimum 3\n          break\n        case 9:\n          exp = [randint(1, 3, [1])] // on a besoin de 1 exposant\n          texte = `$\\\\dfrac{1000^${exp[0]}}{10}$`\n          texteCorr = `$\\\\dfrac{1000^${exp[0]}}{10}`\n          texteCorr += `=\\\\dfrac{(10^3)^${exp[0]}}{10}`\n          texteCorr += `=\\\\dfrac{10^{3\\\\times ${exp[0]}}}{10}`\n          texteCorr += `=\\\\dfrac{10^{${3 * exp[0]}}}{10}`\n          texteCorr += `=10^{${3 * exp[0]}-1}`\n          texteCorr += `=10^{${3 * exp[0] - 1}}$`\n          reponseInteractive = `10^{${3 * exp[0] - 1}}`\n          exposantInteractif = 3 * exp[0] - 1\n          // inutile de tester l'exposant final car il vaut au minimum 5\n          break\n        case 10:\n          exp = [randint(1, 7, [1]), randint(1, 7, [1]), randint(1, 4, [1])] // on a besoin de 3 exposants distincts\n          texte = `$\\\\dfrac{10^${exp[0]}\\\\times 10^${exp[1]}}{100^${exp[2]}}\\\\times 10$`\n          texteCorr = `$\\\\dfrac{10^${exp[0]}\\\\times 10^${exp[1]}}{100^${exp[2]}}\\\\times 10`\n          texteCorr += `=\\\\dfrac{10^{${exp[0]}+${exp[1]}}}{(10^2)^${exp[2]}}\\\\times 10`\n          texteCorr += `=\\\\dfrac{10^{${exp[0] + exp[1]}}}{10^{2\\\\times ${exp[2]\n            }}}\\\\times 10`\n          texteCorr += `=\\\\dfrac{10^{${exp[0] + exp[1]}}}{10^{${2 * exp[2]\n            }}}\\\\times 10`\n          texteCorr += `=\\\\dfrac{10^{${exp[0] + exp[1]}}\\\\times 10}{10^{${2 * exp[2]\n            }}}`\n          texteCorr += `=\\\\dfrac{10^{${exp[0] + exp[1]}+1}}{10^{${2 * exp[2]\n            }}}`\n          texteCorr += `=\\\\dfrac{10^{${exp[0] + exp[1] + 1}}}{10^{${2 * exp[2]\n            }}}`\n          texteCorr += `=10^{${exp[0] + exp[1] + 1}-${2 * exp[2]}}`\n          texteCorr += `=10^{${exp[0] + exp[1] + 1 - 2 * exp[2]}}`\n          if (\n            exp[0] + exp[1] + 1 - 2 * exp[2] === 0 ||\n            exp[0] + exp[1] + 1 - 2 * exp[2] === 1\n          ) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant est évincé\n            texteCorr += '=' + simpExp(10, exp[0] + exp[1] + 1 - 2 * exp[2])\n          }\n          texteCorr += '$'\n          reponseInteractive = `10^{${exp[0] + exp[1] + 1 - 2 * exp[2]}}`\n          exposantInteractif = exp[0] + exp[1] + 1 - 2 * exp[2]\n          break\n        case 11:\n          exp = [randint(1, 7, [1])] // on a besoin de 1 exposant\n          texte = `$\\\\dfrac{1000\\\\times 10}{100^${exp[0]}}$`\n          texteCorr = `$\\\\dfrac{1000\\\\times 10}{100^${exp[0]}}`\n          texteCorr += `=\\\\dfrac{10^3\\\\times 10}{(10^2)^${exp[0]}}`\n          texteCorr += `=\\\\dfrac{10^{3+1}}{10^{2\\\\times${exp[0]}}}`\n          texteCorr += `=\\\\dfrac{10^{4}}{10^{${2 * exp[0]}}}`\n          texteCorr += `=10^{4-${2 * exp[0]}}`\n          texteCorr += `=10^{${3 + 1 - 2 * exp[0]}}`\n          if (3 + 1 - 2 * exp[0] === 0 || 3 + 1 - 2 * exp[0] === 1) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant est évincé\n            texteCorr += '=' + simpExp(10, 3 + 1 - 2 * exp[0])\n          }\n          texteCorr += '$'\n          reponseInteractive = `10^{${4 - 2 * exp[0]}}`\n          exposantInteractif = 4 - 2 * exp[0]\n          break\n      }\n      if (this.interactif && !context.isAmc) {\n        setReponse(this, i, reponseInteractive, { formatInteractif: 'puissance' })\n        texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n      }\n      if (context.isAmc) {\n        setReponse(this, i, reponseInteractive, { formatInteractif: 'puissance', basePuissance: 10, exposantPuissance: exposantInteractif })\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Règle à travailler',\n    3,\n    '1 : Calculs de base\\n2 : Calculs plus complexes\\n3 : Mélange'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","PuissancesDeDix","Exercice","this","sup","context","consigne","spacing","spacingCorr","nbQuestions","correctionDetailleeDisponible","nbColsCorr","nouvelleVersion","numeroExercice","typesDeQuestions","Number","boutonAide","modalPdf","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","coul0","coul1","exp0","exp1","exp","couleurExp0","couleurExp1","lettre","texte","texteCorr","reponseInteractive","exposantInteractif","i","cpt","randint","lettreDepuisChiffre","correctionDetaillee","eclatePuissance","simpNotPuissance","Math","max","min","setReponse","formatInteractif","simpExp","interactif","ajouteChampTexteMathLive","basePuissance","exposantPuissance","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}