{"version":3,"file":"js/49819.41ccd7e4c9cd6a8a3420.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4G52.js"],"sourcesContent":["import { labelPoint, mathalea2d, tracePoint } from '../../modules/2d.js'\nimport { context } from '../../modules/context.js'\nimport { lettreDepuisChiffre, listeQuestionsToContenu, miseEnEvidence, randint } from '../../modules/outils.js'\nimport { radians, sin } from '../../modules/fonctionsMaths.js'\nimport { point3d, arete3d } from '../../modules/3d.js'\nimport Exercice from '../Exercice.js'\nexport const titre = 'Exercice de repérage dans un pavé droit'\n\n/**\n * Un point est situé dans un pavé découpé suivant les trois axes, on doit donner ses coordonnées\n * @author Arnaud Durand et Jean-Claude Lhote\n * Référence 4G52\n * publié 9/06/2021\n*/\nexport default function ReperagePaveDroit () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Placer les points sur le pavé ci-dessous dans le repère $\\\\bm{(A;I;J;K)}$ : '\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = false // à modifier si besoin\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // 30+ pour la persperctive\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () { // c'est ici que les données sont relatives\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.introduction = '' // consigne avant les question y mettre le dessin + texte\n\n    const hauteur = 12\n    const largeur = 12\n    const profondeur = 12\n    if (parseInt(this.sup) === 3) {\n      context.anglePerspective = 60\n      context.coeffPerspective = 0.4\n    } else if (parseInt(this.sup) === 2) {\n      context.anglePerspective = 45\n      context.coeffPerspective = 0.3\n    } else if (parseInt(this.sup) === 1) {\n      context.anglePerspective = 30\n      context.coeffPerspective = 0.4\n    }\n    const A = point3d(0, 0, 0, true, 'A', 'below left')\n    const B = point3d(largeur, 0, 0, true, 'B', 'below right')\n    const C = point3d(largeur, profondeur, 0, true, 'C', 'above right')\n    const D = point3d(0, profondeur, 0, true, 'D', 'above left')\n    const E = point3d(0, 0, hauteur, true, 'E', 'above left')\n    const F = point3d(largeur, 0, hauteur, true, 'F', 'above right')\n    const G = point3d(largeur, profondeur, hauteur, true, 'G', 'above right')\n    const H = point3d(0, profondeur, hauteur, true, 'H', 'above left')\n\n    const objetsAtracer = []\n    let nbgraduationx = randint(2, 4)\n    let nbgraduationy = randint(2, 3)\n    let nbgraduationz = randint(2, 4)\n    while ((nbgraduationx >= 3) && (nbgraduationy >= 3)) {\n      nbgraduationx = randint(2, 5)\n      nbgraduationy = randint(2, 3, nbgraduationx)\n      nbgraduationz = randint(2, 5, [nbgraduationx, nbgraduationy])\n    }\n    const deltax = largeur / nbgraduationx\n    const deltay = profondeur / nbgraduationy\n    const deltaz = hauteur / nbgraduationz\n    const I = point3d(deltax, 0, 0, true, 'I', 'below right')\n    const J = point3d(0, deltay, 0, false, 'J', 'left')\n    const K = point3d(0, 0, deltaz, true, 'K', 'left')\n\n    objetsAtracer.push(labelPoint(A, B, C, D, E, F, G, H, I, J, K))\n\n    for (let i = 0; i <= nbgraduationy; i++) {\n      for (let j = 0, M, N, s; j <= nbgraduationz; j++) {\n        M = point3d(0, i * deltay, j * deltaz)\n        N = point3d(largeur, i * deltay, j * deltaz)\n\n        if ((i === 0) || (j === nbgraduationz)) {\n          s = arete3d(M, N, 'black', true)\n        } else {\n          s = arete3d(M, N, 'black', false)\n        }\n        objetsAtracer.push(s.c2d)\n      }\n    }\n    for (let i = 0; i <= nbgraduationx; i++) {\n      for (let j = 0, M, N, s; j <= nbgraduationz; j++) {\n        M = point3d(i * deltax, 0, j * deltaz)\n        N = point3d(i * deltax, profondeur, j * deltaz)\n        if ((i === nbgraduationx) || (j === nbgraduationz)) {\n          s = arete3d(M, N, 'black', true)\n        } else {\n          s = arete3d(M, N, 'black', false)\n        }\n        objetsAtracer.push(s.c2d)\n      }\n    }\n\n    for (let i = 0, M, N, s; i <= nbgraduationx; i++) {\n      M = point3d(i * deltax, 0, 0)\n      N = point3d(i * deltax, 0, hauteur)\n      s = arete3d(M, N, 'black', true)\n      objetsAtracer.push(s.c2d)\n      M = point3d(i * deltax, profondeur, 0)\n      N = point3d(i * deltax, profondeur, hauteur)\n      if (i < nbgraduationx) {\n        s = arete3d(M, N, 'black', false)\n      } else {\n        s = arete3d(M, N, 'black', true)\n      }\n      objetsAtracer.push(s.c2d)\n    }\n    for (let i = 1, M, N, s; i < nbgraduationy; i++) {\n      M = point3d(0, i * deltay, 0)\n      N = point3d(0, i * deltay, hauteur)\n      s = arete3d(M, N, 'black', false)\n      objetsAtracer.push(s.c2d)\n      M = point3d(largeur, i * deltay, 0)\n      N = point3d(largeur, i * deltay, hauteur)\n      s = arete3d(M, N, 'black', true)\n      objetsAtracer.push(s.c2d)\n    }\n\n    for (let i = 0, texte, texteCorr, cpt = 0, pointCoord, s1, s2, s3, x, y, z, t, pointAplacer, objetsAtracerCorr; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      x = 0\n      y = 0\n      z = 0\n      while (x === 0 && y === 0 && z === 0) {\n        x = randint(0, nbgraduationx)\n        y = randint(0, nbgraduationy)\n        z = randint(0, nbgraduationz)\n      }\n      pointCoord = [x, y, z]\n      texte = `Placer le point $${lettreDepuisChiffre(i + 12)}$ de coordonnées $(${pointCoord[0]};${pointCoord[1]};${pointCoord[2]})$.`\n      pointAplacer = point3d(pointCoord[0] * deltax, pointCoord[1] * deltay, pointCoord[2] * deltaz, lettreDepuisChiffre(i + 12), `${lettreDepuisChiffre(i + 12)}`, 'below right')\n      s1 = arete3d(A, point3d(pointAplacer.x, 0, 0), 'blue', true)\n      s2 = arete3d(point3d(pointAplacer.x, 0, 0), point3d(pointAplacer.x, pointAplacer.y, 0), 'orange', true)\n      s3 = arete3d(point3d(pointAplacer.x, pointAplacer.y, 0), pointAplacer, 'red', true)\n      s1.c2d.epaisseur = 3\n      s2.c2d.epaisseur = 3\n      s3.c2d.epaisseur = 3\n      t = tracePoint(pointAplacer)\n      t.epaisseur = 2\n      t.color = 'red'\n      t.taille = 6\n      objetsAtracerCorr = [s1.c2d, s2.c2d, s3.c2d, t, labelPoint(pointAplacer)].concat(objetsAtracer)\n      texteCorr = mathalea2d({ xmin: -1, xmax: 1 + largeur + profondeur * Math.cos(radians(context.anglePerspective)), ymin: -1, ymax: hauteur + profondeur * context.coeffPerspective * sin(context.anglePerspective), style: 'display: block; margin-top:20px;' }, objetsAtracerCorr)\n      texteCorr += `<br>$${lettreDepuisChiffre(i + 12)}$ de coordonnées $(${miseEnEvidence(pointCoord[0], 'blue')};${miseEnEvidence(pointCoord[1], 'orange')};${miseEnEvidence(pointCoord[2], 'red')})$.`\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    this.introduction = mathalea2d({ xmin: -1, xmax: 1 + largeur + profondeur * Math.cos(radians(context.anglePerspective)), ymin: -1, ymax: hauteur + profondeur * context.coeffPerspective * sin(context.anglePerspective), style: 'display: block; margin-top:20px;' }, objetsAtracer)\n\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Angle de la perspective', 3, '1 : 30°\\n2 : 45°\\n3 : 60°']\n}\n"],"names":["titre","ReperagePaveDroit","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","introduction","hauteur","largeur","profondeur","parseInt","context","A","point3d","B","C","D","E","F","G","H","objetsAtracer","nbgraduationx","randint","nbgraduationy","nbgraduationz","deltax","deltay","deltaz","I","J","K","push","labelPoint","i","M","N","s","j","arete3d","c2d","texte","texteCorr","pointCoord","s1","s2","s3","x","y","z","t","pointAplacer","objetsAtracerCorr","cpt","lettreDepuisChiffre","epaisseur","tracePoint","color","taille","concat","mathalea2d","xmin","xmax","Math","cos","radians","ymin","ymax","sin","style","miseEnEvidence","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique"],"sourceRoot":""}