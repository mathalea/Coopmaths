{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5A11.js","webpack://mathalea/./src/js/exercices/6e/6N43-2.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","Tableau_criteres_de_divisibilite5e","Tableau_criteres_de_divisibilite","this","amcReady","amcType","TableauCriteresDeDivisibilite","Exercice","spacing","spacingCorr","nbQuestions","nbColsCorr","nbCols","qcmDisponible","modeQcm","nouvelleVersion","autoCorrection","consigne","espace","context","listeQuestions","listeCorrections","listeDesTypesDeNombres","combinaisonListes","tableauDeNombres","texte","texteCorr","tableauDeNombresAvecCorrection","listeDeFacteurs","i","choice","texNombre2","propositions","statut","feedback","enonce","toString","charAt","length","options","ordered","lastChoice","propositionsQcm","k","l","push","amc","id","listeQuestionsToContenu","listeQuestionsToContenuSansNumero","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","type","querySelectorAll","uicheck","classList","add","undefined","shuffleJusqua","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","a","reponse","valeur","exerciceInteractif","getElementById","value","replaceAll","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"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","file":"js/3936.0e12a1a657785bd7f6c5.js","sourcesContent":["import Tableau_criteres_de_divisibilite from '../6e/6N43-2.js'\nexport const titre = 'Critères de divisibilité'\n\n/**\n * Écrire une fraction avec un nouveau dénominateur qui est un multiple de son dénominateur (ce multiple est inférieur à une valeur maximale de 11 par défaut)\n * @Auteur Rémi Angot\n * 5N13-2 et 6N41\n */\nexport default function Tableau_criteres_de_divisibilite5e() {\n    Tableau_criteres_de_divisibilite.call(this)\n    this.titre = titre;\n}","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, listeQuestionsToContenu, choice, combinaisonListes, texNombre2 } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const amcType =2 //type de question AMC \n\nexport const titre = 'Critères de divisibilité (plusieurs possibles)'\n\n/**\n * Un nombre est-il divisible par 2, 3, 5, 9 ?\n *\n *\n * @Auteur Rémi Angot\n * 6N43-2\n */\nexport default function TableauCriteresDeDivisibilite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.nbCols = 1\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    if (!this.modeQcm) {\n      this.consigne =\n        'Compléter le tableau en mettant oui ou non dans chaque case.'\n    } else {\n      this.consigne =\n        'mettre une croix dans la ou les cases qui conviennent.'\n    }\n    let espace = ''\n    if (context.isHtml) {\n      espace = '&emsp;'\n    } else {\n      espace = '\\\\qquad'\n    }\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const listeDesNombresPossibles = [\n      'div2',\n      'div3',\n      'div39',\n      'div5',\n      'div25',\n      'div23',\n      'div239',\n      'div35',\n      'div2359',\n      'divrien'\n    ]\n    // divisible par 2, divisible par 3, divisible par 3 et 9...\n\n    const listeDesTypesDeNombres = combinaisonListes(\n      listeDesNombresPossibles,\n      this.nbQuestions\n    )\n    const tableauDeNombres = []; let texte; let texteCorr\n    const tableauDeNombresAvecCorrection = []\n    const listeDeFacteurs = [\n      7,\n      11,\n      13,\n      17,\n      19,\n      23,\n      29,\n      31,\n      37,\n      41,\n      43,\n      47,\n      53,\n      59,\n      61,\n      67,\n      71,\n      73,\n      79,\n      83,\n      89,\n      97,\n      101,\n      103,\n      107,\n      109,\n      113,\n      127,\n      131,\n      137,\n      139,\n      149,\n      151,\n      157,\n      163,\n      167,\n      173,\n      179,\n      181,\n      191,\n      193,\n      197,\n      199,\n      211,\n      223,\n      227,\n      229,\n      233,\n      239,\n      241,\n      251,\n      257,\n      263,\n      269,\n      271,\n      277,\n      281,\n      283,\n      293\n    ]\n    texteCorr = ''\n    texte = ''\n    for (let i = 0; i < this.nbQuestions; i++) {\n      this.autoCorrection[i] = {}\n      switch (listeDesTypesDeNombres[i]) {\n        case 'div2':\n          tableauDeNombres[i] = 2 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $3$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $3$.\"\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est pair. Il est donc divisible par 2.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n\n          break\n        case 'div3':\n          tableauDeNombres[i] = 3 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: false,\n              feedback: \"Ce nombre est impair. Il n'est pas divisible par $2$\"\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est divisible par $3$ car la somme de ses chiffres est divisible par $3$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div39':\n          tableauDeNombres[i] = 9 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\color{blue} \\\\text{oui} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: false,\n              feedback: \"Ce nombre est impair. Il n'est pas divisible par $2$\"\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est divisible par $9$ et par $3$ car la somme de ses chiffres est divisible par $9$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div5':\n          tableauDeNombres[i] = 5 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: false,\n              feedback: \"Ce nombre est impair. Il n'est pas divisible par $2$\"\n            },\n            {\n              texte: 'par $3$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $3$.\"\n            },\n            {\n              texte: 'par $5$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: `Ce nombre est divisible par $5$ car son chiffre des unités est $${tableauDeNombres[i].toString().charAt(tableauDeNombres[i].toString().length - 1)}$.`\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div25':\n          tableauDeNombres[i] = 10 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $3$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $3$.\"\n            },\n            {\n              texte: 'par $5$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un multiple de $10$. Il est donc divisible par $2$ et par $5$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div23':\n          tableauDeNombres[i] = 6 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par $2$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div239':\n          tableauDeNombres[i] = 18 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\color{blue} \\\\text{oui} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par $2$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div35':\n          tableauDeNombres[i] = 15 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\color{blue} \\\\text{oui} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: false,\n              feedback: \"Ce nombre est impair. Il n'est pas divisible par $2$\"\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par $2$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div2359':\n          tableauDeNombres[i] = 90 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\text{oui} & \\\\text{oui} & \\\\text{oui} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $9$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par $2$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'divrien':\n          tableauDeNombres[i] = choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\text{non} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: false,\n              feedback: \"Ce nombre est un nombre impair. Il ,'est pas divisible par $2$\"\n            },\n            {\n              texte: 'par $3$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $3$.\"\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: true,\n              feedback: 'Correct !'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n      }\n      this.autoCorrection[i].options = {\n        ordered: true,\n        lastChoice: 4\n      }\n      if (!context.isAmc && this.modeQcm) {\n        texte += `$${texNombre2(tableauDeNombres[i])}$ est divisible ${espace}  `\n        texte += propositionsQcm(this, i).texte\n        texte += '<br>'\n      }\n    } // fin de boucle de préparation des question\n    // mise en forme selon les cas de figures\n    // l'enoncé\n    if (context.isHtml && !this.modeQcm) {\n      texte = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n    if (!context.isHtml && !this.modeQcm) {\n      texte = '$\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n    if (!context.isAmc && !this.modeQcm) {\n      texte += '\\\\hline\\n'\n      texte += '\\\\text{... est divisible} & \\\\text{par }2 & \\\\text{par }3 & \\\\text{par }5 & \\\\text{par }9\\\\\\\\\\n'\n      texte += '\\\\hline\\n'\n      for (let k = 0; k < this.nbQuestions; k++) {\n        texte += `${texNombre2(tableauDeNombres[k])} & & & & \\\\\\\\\\n`\n        texte += '\\\\hline\\n'\n      }\n      texte += '\\\\end{array}\\n$'\n    }\n\n    // la correction\n    if (context.isHtml) {\n      texteCorr = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n    if (!context.isHtml && !context.isAmc) {\n      texteCorr = '$\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n\n    if (!context.isAmc) {\n      texteCorr += '\\\\hline\\n'\n      texteCorr += '\\\\text{... est divisible} & \\\\text{par }2 & \\\\text{par }3 & \\\\text{par }5 & \\\\text{par }9\\\\\\\\\\n'\n      texteCorr += '\\\\hline\\n'\n      for (let l = 0; l < this.nbQuestions; l++) {\n        texteCorr += tableauDeNombresAvecCorrection[l]\n        texteCorr += '\\\\hline\\n'\n      }\n      texteCorr += '\\\\end{array}$\\n'\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    if (!context.isAmc) {\n      if (this.modeQcm) {\n        listeQuestionsToContenu(this)\n      } else {\n        listeQuestionsToContenuSansNumero(this)\n      }\n    } else {\n      this.amc = [this.id, this.autoCorrection, titre, amcType]\n    }\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}