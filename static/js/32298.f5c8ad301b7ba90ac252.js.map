{"version":3,"file":"js/32298.f5c8ad301b7ba90ac252.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6G10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, creerNomDePolygone } from '../../modules/outils.js'\nimport { point, labelPoint, droite, segment, demiDroite, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Notation des droites, segments et demi-droites'\n\n/**\n * Utiliser les notations des segments, droites et demi-droites\n * @author Rémi Angot\n * Référence 6G10\n */\nexport default function NotationSegmentDroiteDemiDroite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Compléter les programmes de constructions qui ont permis d'obtenir ces figures.\"\n  this.nbQuestions = 3\n  this.nbCols = 3\n  this.nbColsCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      const p = creerNomDePolygone(3, 'PQ')\n      const A = point(0, 0, p[0], 'above left')\n      const B = point(1, 1.2, p[1], 'above')\n      const C = point(2.2, -0.3, p[2], 'above right')\n      function creerDroiteDemiSegment (A, B) {\n        let trait, notation\n        switch (randint(1, 4)) {\n          case 1:\n            trait = droite(A, B)\n            notation = `$(${A.nom}${B.nom})$`\n            break\n          case 2:\n            trait = demiDroite(A, B)\n            notation = `$[${A.nom}${B.nom})$`\n            break\n          case 3:\n            trait = demiDroite(B, A)\n            notation = `$[${B.nom}${A.nom})$`\n            break\n          case 4:\n            trait = segment(A, B)\n            notation = `$[${A.nom}${B.nom}]$`\n            break\n        }\n        return [trait, notation]\n      }\n      const [dAB, dABCorr] = creerDroiteDemiSegment(A, B)\n      const [dAC, dACCorr] = creerDroiteDemiSegment(A, C)\n      const [dBC, dBCCorr] = creerDroiteDemiSegment(B, C)\n      const labels = labelPoint(A, B, C)\n\n      texte = `Placer 3 points $${p[0]}$, $${p[1]}$ et $${p[2]}$ non alignés puis tracer... <br><br>`\n      texte += mathalea2d(\n        { xmin: -1, ymin: -1, xmax: 3, ymax: 2.5, pixelsParCm: 40, scale: 1 },\n        dAB,\n        dBC,\n        dAC,\n        labels\n      )\n      texteCorr = `...tracer ${dABCorr}, ${dBCCorr}, ${dACCorr}.`\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","NotationSegmentDroiteDemiDroite","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","i","cpt","p","creerNomDePolygone","A","point","B","C","creerDroiteDemiSegment","trait","notation","randint","droite","nom","demiDroite","segment","dAB","dABCorr","dAC","dACCorr","dBC","dBCCorr","labels","labelPoint","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}