{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaXcas.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","NomQuelconqueDeLaFonctionQuiCreeExercice","sup","typeExercice","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","i","cpt","randint","xcas","indexOf","push","listeQuestionsToContenu"],"mappings":"yGAMe,SAASA,IAEtBC,KAAKC,MAAQ,GACbD,KAAKE,SAAW,GAChBF,KAAKG,mBAAqB,GAC1BH,KAAKI,eAAiB,GACtBJ,KAAKK,iBAAmB,GACxBL,KAAKM,aAAe,GACpBN,KAAKO,QAAU,GACfP,KAAKQ,kBAAoB,GACzBR,KAAKS,YAAc,GACnBT,KAAKU,OAAS,EACdV,KAAKW,WAAa,EAClBX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EACnBb,KAAKc,QAAS,EAEdd,KAAKe,2BAA4B,EACjCf,KAAKgB,uBAAwB,EAC7BhB,KAAKiB,6BAA8B,EACnCjB,KAAKkB,oBAAqB,EAC1BlB,KAAKmB,uBAAwB,EAC7BnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAC7BvB,KAAKwB,+BAAgC,EACrCxB,KAAKyB,qBAAsB,EAC3BzB,KAAK0B,MAAQ,GACb1B,KAAK2B,YAAa,EAClB3B,KAAK4B,gBAAkB,GAMvB5B,KAAK6B,mBAAoB,EACzB7B,KAAK8B,YAAa,EAClB9B,KAAK+B,uBAAwB,EAC7B/B,KAAKgC,KAAM,EACXhC,KAAKiC,eAAgB,EACrBjC,KAAKkC,SAAU,EACflC,KAAKmC,eAAiB,GACtBnC,KAAKoC,sBAAwB,GAC7BpC,KAAKqC,cAAe,EACpBrC,KAAKsC,gBAAkB,SAAUC,KACjCvC,KAAKwC,cAAgB,G,wIChDhB,MAAMvC,EAAQ,eAON,SAASwC,IACtB1C,eAAcC,MACdA,KAAKC,MAAQA,EACbD,KAAKE,SAAW,kCAChBF,KAAKS,YAAc,GACnBT,KAAKU,OAAS,EACdV,KAAKW,WAAa,EAClBX,KAAK0C,IAAM,EACX1C,KAAK4B,gBAAkB,IACvB5B,KAAK0B,MAAQ,GACb1B,KAAK2C,aAAe,OAEpB3C,KAAKsC,gBAAkB,WACrBtC,KAAKI,eAAiB,GACtBJ,KAAKK,iBAAmB,GAExB,IACIuC,GAAuBC,SADO,CAAC,SACsC7C,KAAKS,aAC9E,IAAK,IAAWqC,EAAOC,EAAWC,EAAGC,EAA5BC,EAAI,EAA2BC,EAAM,EAAGD,EAAIlD,KAAKS,aAAe0C,EAAM,IAAK,CAElF,OAAQP,EAAqBM,IAC3B,IAAK,QACDF,GAAII,SAAQ,EAAE,GACdH,GAAIG,SAAQ,EAAE,GACfN,EAAS,KAAGO,SAAM,cAAaL,SAASA,EAAEC,QAAQA,WAClDF,EAAa,KAAGM,SAAM,sBAAqBL,SAASA,EAAEC,QAAQA,YAC9D,MACH,IAAK,QAIL,IAAK,QACDH,EAAS,YAAWI,EAAE,cACtBH,EAAa,cAAaG,EAAE,eAKU,IAAxClD,KAAKI,eAAekD,QAAQR,KAE9B9C,KAAKI,eAAemD,KAAKT,GACzB9C,KAAKK,iBAAiBkD,KAAKR,GAC3BG,KAEFC,KAEFK,SAAwBxD,OAE1BA,KAAKe,0BAA4B,CAAC,uBAAuB","file":"js/5555.3ed1759d0c2f0b6f9bd6.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import { xcas } from '../../modules/outils.js';\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint, combinaisonListes} from '../../modules/outils.js'\nexport const titre = 'Test de XCas'\n\n/**\n * Description didactique de l'exercice\n * @author \n * Référence \n*/\nexport default function NomQuelconqueDeLaFonctionQuiCreeExercice() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"Dériver les fonctions suivantes\";\n  this.nbQuestions = 10;\n  this.nbCols = 2; // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2; // Uniquement pour la sortie LaTeX\n  this.sup = 1; // Niveau de difficulté \n  this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = \"\" // Id YouTube ou url\n  this.typeExercice = \"XCas\"\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    let typesDeQuestionsDisponibles = ['type1']; // On créé 3 types de questions\n    let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions); // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, a, b, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n        // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeDeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'type1': \n            a = randint(1,5)\n            b = randint(1,5)\n           texte = `$${xcas(`simplifier(${a}sqrt(${a+b}x)/(${b}x))`)}$`\n           texteCorr = `$${xcas(`simplifier(deriver(${a}sqrt(${a+b}x)/(${b}x)))`)}$`\n           break;\n        case 'type2': \n            texte = `Question ${i+1} de type 2`;\n            texteCorr = `Correction ${i+1} de type 2`;\n          break;\n        case 'type3': // Table de 200\n            texte = `Question ${i+1} de type 2`;\n            texteCorr = `Correction ${i+1} de type 2`;\n          break;\n        \n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n\n"],"sourceRoot":""}