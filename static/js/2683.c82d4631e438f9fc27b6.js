(self.webpackChunkmathalea=self.webpackChunkmathalea||[]).push([[2683,7004],{87004:(t,e,i)=>{"use strict";i.r(e),i.d(e,{titre:()=>l,default:()=>h});var s=i(66969),n=i(55339),o=i(31935),r=i(1328);const l="Déterminer les coordonnées (relatives) d’un point";function h(){s.default.call(this),this.titre=l,this.consigne="Donner les coordonnées des points représentés",this.nbQuestions=1,this.nbQuestionsModifiable=!1,this.nbCols=1,this.nbColsCorr=1,this.spacing=1,this.spacingCorr=1,this.sup=1,this.sup2=!0,this.quart_de_plan=!1,this.listePackages="tkz-euclide",this.nouvelleVersion=function(t){let e,i;this.listeQuestions=[],this.listeCorrections=[],this.contenu="",this.contenuCorrection="";let s,l,h,u,a,c,p,d,f,b,w=[],k=[];h=Math.round(.7*window.innerHeight),l=h,u=Math.pow(2,parseInt(this.sup)-1);const v=[];s=this.sup2,this.quart_de_plan?(a=0,p=0,c=10,d=10):(a=-5,p=-5,c=5,d=5);const C=[],z=[];for(let o=(0,n.n0o)(a+1/u);o<(0,n.n0o)(c-(parseInt(this.sup)-1)/u);o=(0,n.n0o)(o+1/u))C.push(o);for(let o=(0,n.n0o)(p+1/u);o<(0,n.n0o)(d-(parseInt(this.sup)-1)/u);o=(0,n.n0o)(o+1/u))z.push(o);let g=!1,m=!1;w=(0,n.RZ9)(C,z,10*u);for(let n=0;n<5;n++)k.push(w[n]),0==k[n][0]&&(g=!0),0==k[n][1]&&(m=!0);g||(k[0][0]=0),m||(k[1][1]=0),k=(0,n.TVQ)(k);for(let o=0,r=(0,n.nSR)(1,20);o<5;o++)v.push((0,n.Gag)(o+r));if(sortieHtml){const e=`div_svg${t}${`${Date.now()}`}`;this.consigne=`<div id="${e}" style="height: ${h}px"></div>`,window.SVGExist||(window.SVGExist={}),window.SVGExist[e]=setInterval((function(){if($(`#${e}`).length){$(`#${e}`).html("");const t=(0,r.Wj)().addTo(`#${e}`).viewbox(0,0,520,520).size("100%","100%"),i=(0,o.oE)(t,a,c,p,d,u,u,500,500,s);for(let e=0;e<5;e++)f=0==k[e][0]||.25==k[e][0]?20:0,b=0,-.5==k[e][1]&&(b=10),-.25==k[e][1]&&(b=20),(0,o.vv)(t,(0,n.n0o)(20+480*(k[e][0]-a)/(c-a)),(0,n.n0o)(480-480*(k[e][1]-p)/(d-p)),v[e],"blue",-10+f,10+b,[!0,i[0],i[1]]);clearInterval(SVGExist[e])}}),100)}else{e="\\begin{tikzpicture}",e+=(0,o.d1)(a,c,p,d,u,u,s);for(let t=0;t<5;t++)e+=`\n\t \\tkzDefPoint(${k[t][0]},${k[t][1]}){A}`,e+="\n\t \\tkzDrawPoint[shape=cross out,color=blue,size=6](A)",e+=`\n\t \\tkzLabelPoint[above right=3pt,fill=white,fill opacity=0.7,text opacity=1,inner sep=0](A){$${v[t]}$}`;e+="\n\t \\end{tikzpicture}",this.listeQuestions.push(e),i="\\begin{tikzpicture}",i+=(0,o.d1)(a,c,p,d,u,u,s);for(let t=0;t<5;t++)i+=`\n\t \\tkzDefPoint(${k[t][0]},${k[t][1]}){A}`,i+="\n\t \\tkzDrawPoint[shape=cross out,color=blue,size=6](A)",i+=`\n\t \\tkzLabelPoint[above right=3pt,fill=white,fill opacity=0.7,text opacity=1,inner sep=0](A){$${v[t]}$}`,i+="\n\t \\tkzPointShowCoord(A)";i+="\n\t \\end{tikzpicture}",this.listeCorrections.push(i)}e="Déterminer les coordonnées des points",i="Les coordonnées des points sont :<br>";for(let o=0;o<4;o++)e+=` $${v[o]}$,`,i+=` $${v[o]}(${(0,n.euh)(k[o][0])};${(0,n.euh)(k[o][1])})$, `;e+=` $${v[4]}$.`,i+=` $${v[4]}(${(0,n.euh)(k[4][0])};${(0,n.euh)(k[4][1])})$.`,this.listeQuestions.push(e),this.listeCorrections.push(i),(0,n.FRy)(this)},this.besoinFormulaireNumerique=["Niveau de difficulté",3,"1 : Coordonnées entières\n2 : Coordonnées 'en demis'\n3 : Coordonnées 'en quarts'"],this.besoinFormulaire2CaseACocher=["Grille de lecture"]}},62683:(t,e,i)=>{"use strict";i.r(e),i.d(e,{titre:()=>n,default:()=>o});var s=i(87004);const n="Déterminer les coordonnées (positives) d’un point";function o(){s.default.call(this),this.titre=n,this.quart_de_plan=!0}}}]);
//# sourceMappingURL=2683.c82d4631e438f9fc27b6.js.map