{"version":3,"file":"js/74047.01953dedf9eb3dbd62be.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2F32-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, sp, combinaisonListes, numAlpha } from '../../modules/outils.js'\nimport { tableauDeVariation, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Déterminer un extremum ou encadrer par lecture d’un tableau de variations'\nexport const dateDePublication = '20/12/2021'\n/**\n* @author Gilles Mora\n*/\nexport default function LireUnTableauDevariations () {\n  Exercice.call(this)\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 1 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typeDeQuestionsDisponibles\n    if (this.sup === 1) {\n      typeDeQuestionsDisponibles = ['typeE1']\n    } else {\n      if (this.sup === 2) {\n        typeDeQuestionsDisponibles = ['typeE2']\n      } else { typeDeQuestionsDisponibles = ['typeE1', 'typeE2'] }\n    }\n    const listeTypeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, x1, x2, x3, x4, y1, y2, y3, y4, ligne1, M, m, M1, M2, m1, choix, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'typeE1':\n          x1 = randint(-20, 10)\n          x2 = randint(x1 + 1, 15)\n          x3 = randint(x2 + 1, 20)\n          x4 = randint(x3 + 1, 25)\n          y1 = randint(-10, 10)\n          y2 = randint(y1 - 10, y1 - 1)\n          y3 = randint(y2 + 1, y2 + 10, y1)\n          y4 = randint(y3 - 10, y3 - 1, y2)\n          M = Math.max(y1, y2, y3, y4)\n          m = Math.min(y1, y2, y3, y4)\n          choix = randint(1, 2)\n          if (choix === 1) {\n            ligne1 = ['Var', 10, `+/$${y1}$`, 10, `-/$${y2}$`, 10, `+/$${y3}$`, 10, `-/$${y4}$`, 10]\n          } else {\n            ligne1 = ['Var', 10, `-/$${-y1}$`, 10, `+/$${-y2}$`, 10, `-/$${-y3}$`, 10, `+/$${-y4}$`, 10]\n          }\n          // xmin détermine la marge à gauche, ymin la hauteur réservée pour le tableau, xmax la largeur réservée pour le tableau et ymax la marge au dessus du tableau\n\n          texte = ` Voici le tableau de variations d'une fonction $f$ définie sur $[${x1};${x4}]$.<br><br>\n              `\n          texte += mathalea2d({ xmin: -0.5, ymin: -6.1, xmax: 30, ymax: 0.1, scale: 0.6 }, tableauDeVariation({\n            tabInit: [\n              [\n                // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n                ['$x$', 2, 10], ['$f(x)$', 4, 30]\n              ],\n              // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n              [`$${x1}$`, 10, `$${x2}$`, 10, `$${x3}$`, 10, `$${x4}$`, 10]\n            ],\n            // tabLines ci-dessous contient les autres lignes du tableau.\n            tabLines: [ligne1],\n            colorBackground: '',\n            espcl: 3, // taille en cm entre deux antécédents\n            deltacl: 1, // distance entre la bordure et les premiers et derniers antécédents\n            lgt: 3, // taille de la première colonne en cm\n            hauteurLignes: [15, 15]\n          }))\n\n          texte += ' <br>Déterminer le minimum et le maximum de $f$ sur son ensemble de définition. Préciser en quelles valeurs de $x$ ils sont atteints.'\n\n          texteCorr = `$\\\\bullet~$ $f$ admet un maximum en $a$ sur un intervalle $I$ signifie que pour tout réel $x$ de $I$, $f(x)\\\\leqslant f(a)$.<br>\n          Le nombre $f(a)$ est le maximum de $f$ sur $I$.<br>\n          $\\\\bullet~$ $f$ admet un minimum en $b$ sur un intervalle $I$ signifie que pour tout réel $x$ de $I$, $f(x)\\\\geqslant f(b)$.<br>\n          Le nombre $f(b)$ est le minimum de $f$ sur $I$.<br>\n          <br>`\n          if (choix === 1) {\n            if (M === y1) {\n              texteCorr += `Pour tout réel $x$ de $[${x1};${x4}]$, on a  $f(x)\\\\leqslant ${y1}$, c'est-à-dire  $f(x)\\\\leqslant f(${x1})$.<br>\n           Ainsi, le maximum de $f$ est $${y1}$. Il est atteint en $x=${x1}$. `\n            } else {\n              texteCorr += `Pour tout réel $x$ de $[${x1};${x4}]$, on a  $f(x)\\\\leqslant ${y3}$, c'est-à-dire  $f(x)\\\\leqslant f(${x3})$.<br>\n          Ainsi, le maximum de $f$ est $${y3}$. Il est atteint en $x=${x3}$.  `\n            }\n            if (m === y2) {\n              texteCorr += `<br>Pour tout réel $x$ de $[${x1};${x4}]$, on a  $f(x)\\\\geqslant ${y2}$, c'est-à-dire  $f(x)\\\\geqslant f(${x2})$.<br>\n          Ainsi, le minimum de $f$ est $${y2}$. Il est atteint en $x=${x2}$. `\n            } else {\n              texteCorr += `<br>Pour tout réel $x$ de $[${x1};${x4}]$, on a  $f(x)\\\\geqslant ${y4}$, c'est-à-dire  $f(x)\\\\geqslant f(${x4})$.<br>\n         Ainsi, le minimum de $f$ est $${y4}$. Il est atteint en $x=${x4}$.  `\n            }\n          } else {\n            if (M === y1) {\n              texteCorr += `Pour tout réel $x$ de $[${x1};${x4}]$, on a  $f(x)\\\\geqslant ${-y1}$, c'est-à-dire  $f(x)\\\\geqslant f(${x1})$.<br>\n           Ainsi, le minimum de $f$ est $${-y1}$. Il est atteint en $x=${x1}$. `\n            } else {\n              texteCorr += `Pour tout réel $x$ de $[${x1};${x4}]$, on a  $f(x)\\\\geqslant ${-y3}$, c'est-à-dire  $f(x)\\\\geqslant f(${x3})$.<br>\n          Ainsi, le minimum de $f$ est $${-y3}$. Il est atteint en $x=${x3}$.  `\n            }\n            if (m === y2) {\n              texteCorr += `<br>Pour tout réel $x$ de $[${x1};${x4}]$, on a  $f(x)\\\\leqslant ${-y2}$, c'est-à-dire  $f(x)\\\\leqslant f(${x2})$.<br>\n          Ainsi, le maximum de $f$ est $${-y2}$. Il est atteint en $x=${x2}$. `\n            } else {\n              texteCorr += `<br>Pour tout réel $x$ de $[${x1};${x4}]$, on a  $f(x)\\\\leqslant ${-y4}$, c'est-à-dire  $f(x)\\\\leqslant f(${x4})$.<br>\n         Ainsi, le maximum de $f$ est $${-y4}$. Il est atteint en $x=${x4}$.  `\n            }\n          }\n          break\n        case 'typeE2':\n          x1 = randint(-20, 10)\n          x2 = randint(x1 + 1, 15)\n          x3 = randint(x2 + 1, 20)\n          x4 = randint(x3 + 1, 25)\n          y1 = randint(-10, 10)\n          y2 = randint(y1 - 10, y1 - 1)\n          y3 = randint(y2 + 1, y2 + 10, y1)\n          y4 = randint(y3 - 10, y3 - 1, y2)\n          M1 = Math.max(y1, y3)\n          M2 = Math.max(y1, y3)\n          m1 = Math.min(y2, y4)\n          choix = randint(1, 2)\n          if (choix === 1) {\n            ligne1 = ['Var', 10, `+/$${y1}$`, 10, `-/$${y2}$`, 10, `+/$${y3}$`, 10, `-/$${y4}$`, 10]\n          } else {\n            ligne1 = ['Var', 10, `-/$${-y1}$`, 10, `+/$${-y2}$`, 10, `-/$${-y3}$`, 10, `+/$${-y4}$`, 10]\n          }\n          texte = ` Voici le tableau de variations d'une fonction $f$ définie sur $[${x1};${x4}]$.<br><br>\n              `\n          texte += mathalea2d({ xmin: -0.5, ymin: -6.1, xmax: 30, ymax: 0.1, scale: 0.6 }, tableauDeVariation({\n            tabInit: [\n              [\n                // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n                ['$x$', 2, 10], ['$f(x)$', 4, 30]\n              ],\n              // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n              [`$${x1}$`, 10, `$${x2}$`, 10, `$${x3}$`, 10, `$${x4}$`, 10]\n            ],\n            // tabLines ci-dessous contient les autres lignes du tableau.\n            tabLines: [ligne1],\n            colorBackground: '',\n            espcl: 3, // taille en cm entre deux antécédents\n            deltacl: 1, // distance entre la bordure et les premiers et derniers antécédents\n            lgt: 3, // taille de la première colonne en cm\n            hauteurLignes: [15, 15]\n          }))\n\n          texte += ' <br>Encadrer le plus précisément possible $f(x)$ (en déterminant les valeurs de $m$ et de $M$ telles que $m\\\\leqslant f(x)\\\\leqslant M$) dans chacun des cas suivants :<br>'\n          texte += numAlpha(0) + ` $x\\\\in[${x1};${x3}]$<br>`\n          texte += numAlpha(1) + ` $x\\\\in[${x2};${x4}]$`\n          texteCorr = ''\n          if (choix === 1) {\n            if (M1 === y1) {\n              texteCorr += numAlpha(0) + `Sur $[${x1};${x3}]$, le minimum de $f$ est $${y2}$ et le maximum est \n          $${y1}$. <br>\n          Ainsi, pour $x\\\\in[${x1};${x3}]$, ${sp(3)} $${y2}\\\\leqslant f(x)\\\\leqslant ${y1}$.<br>`\n            } else {\n              texteCorr += numAlpha(0) + `Sur $[${x1};${x3}]$, le minimum de $f$ est $${y2}$ et le maximum est \n          $${y3}$. <br>\n          Ainsi, pour $x\\\\in[${x1};${x3}]$, ${sp(3)} $${y2}\\\\leqslant f(x)\\\\leqslant ${y3}$.<br>`\n            }\n            if (m1 === y2) {\n              texteCorr += numAlpha(1) + `Sur $[${x2};${x4}]$, le minimum de $f$ est $${y2}$ et le maximum est \n          $${y3}$. <br>\n          Ainsi, pour $x\\\\in[${x2};${x4}]$, ${sp(3)} $${y2}\\\\leqslant f(x)\\\\leqslant ${y3}$.<br>`\n            } else {\n              texteCorr += numAlpha(1) + `Sur $[${x2};${x4}]$, le minimum de $f$ est $${y4}$ et le maximum est \n          $${y3}$. <br>\n          Ainsi, pour $x\\\\in[${x2};${x4}]$, ${sp(3)} $${y4}\\\\leqslant f(x)\\\\leqslant ${y3}$.<br>`\n            }\n          } else {\n            if (M2 === y1) {\n              texteCorr += numAlpha(0) + `Sur $[${x1};${x3}]$, le minimum de $f$ est $${-y1}$ et le maximum est \n            $${-y2}$. <br>\n            Ainsi, pour $x\\\\in[${x1};${x3}]$, ${sp(3)} $${-y1}\\\\leqslant f(x)\\\\leqslant ${-y2}$.<br>`\n            } else {\n              texteCorr += numAlpha(0) + `Sur $[${x1};${x3}]$, le minimum de $f$ est $${-y3}$ et le maximum est \n            $${-y2}$. <br>\n            Ainsi, pour $x\\\\in[${x1};${x3}]$, ${sp(3)} $${-y3}\\\\leqslant f(x)\\\\leqslant ${-y2}$.<br>`\n            }\n            if (m1 === y2) {\n              texteCorr += numAlpha(1) + `Sur $[${x2};${x4}]$, le minimum de $f$ est $${-y3}$ et le maximum est \n            $${-y2}$. <br>\n            Ainsi, pour $x\\\\in[${x2};${x4}]$, ${sp(3)} $${-y3}\\\\leqslant f(x)\\\\leqslant ${-y2}$.<br>`\n            } else {\n              texteCorr += numAlpha(1) + `Sur $[${x2};${x4}]$, le minimum de $f$ est $${-y3}$ et le maximum est \n            $${-y4}$. <br>\n            Ainsi, pour $x\\\\in[${x2};${x4}]$, ${sp(3)} $${-y3}\\\\leqslant f(x)\\\\leqslant ${-y4}$.<br>`\n            }\n          }\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Choix des questions', 3, '1 : Minimum et maximum\\n2 :Encadrement\\n3 :Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","dateDePublication","LireUnTableauDevariations","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","typeDeQuestionsDisponibles","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","x1","x2","x3","x4","y1","y2","y3","y4","ligne1","M","m","M1","M2","m1","choix","texte","texteCorr","i","cpt","randint","Math","max","min","mathalea2d","xmin","ymin","xmax","ymax","scale","tableauDeVariation","tabInit","tabLines","colorBackground","espcl","deltacl","lgt","hauteurLignes","numAlpha","sp","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}