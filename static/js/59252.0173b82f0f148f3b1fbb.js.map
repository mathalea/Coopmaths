{"version":3,"file":"js/59252.0173b82f0f148f3b1fbb.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/CM/CM019.js","webpack://mathalea/./src/js/exercices/CM/_TrouverSolutionMathador.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu } from '../../modules/outils.js'\nimport TrouverSolutionMathador from './_TrouverSolutionMathador.js'\nexport const titre = 'Générateur de compte est bon'\nexport const amcReady = true\nexport const interactifReady = false\nexport const amcType = 'AMCOpen'\n\n/**\n * Générateur de tirages pour un compte est bon avec en correction la solution mathador (4 opérations différentes).\n * @author Jean-Claude Lhote\n * référence CM019\n */\n\nexport default function LeCompteEstBonV3 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne =\n    'Écrire un calcul égal au nombre cible en utilisant les 5 nombres, 4 opérations différentes et éventuellement des parenthèses.'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 30\n  this.sup2 = 70\n  let maxSolution = 70\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let solutionMathador = []\n    let tirage, solution, expression\n    let minSolution = parseInt(this.sup)\n    maxSolution = parseInt(this.sup2)\n    if (minSolution > maxSolution) {\n      minSolution = maxSolution\n      this.sup = this.sup2\n    }\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      this.autoCorrection[i] = {}\n      solutionMathador = TrouverSolutionMathador(minSolution, maxSolution)\n      tirage = solutionMathador[0]\n      solution = solutionMathador[1]\n      expression = solutionMathador[3]\n\n      texte = `Le tirage est le suivant : $${tirage[0]}~;~${tirage[1]}~;~${tirage[2]}~;~${tirage[3]}~;~${tirage[4]}$ <br>La cible est : $${solution}$`\n      texteCorr = `Pour le tirage $${tirage[0]}~;~${tirage[1]}~;~${tirage[2]}~;~${tirage[3]}~;~${tirage[4]}$ et pour la cible $${solution}$, la solution est : $${expression}=${solution}$ `\n      texteCorr += `ou $${solutionMathador[4]}$.<br>`\n      texteCorr += 'En effet : <br>'\n      for (let j = 0; j < 4; j++) {\n        texteCorr += `$${solutionMathador[2][j]}$<br>`\n      }\n      if (this.questionJamaisPosee(i, ...solutionMathador)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        this.autoCorrection[i] = { enonce: texte, propositions: [{ texte: texteCorr, statut: 4, feedback: '' }] }\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Limite inférieure', maxSolution]\n  this.besoinFormulaire2Numerique = ['Limite supérieure', 100]\n}\n","import {choice,shuffle} from '../../modules/outils.js'\n\n/**\n * @author Jean-Claude Lhote\n * @param {number} min Valeur minimum pour la solution\n * @param {number} max Valeur maximum pour la solution\n * Cette fonction produit aléatoirement un tirage de 5 nombres, une solution, un tableau contenant les calculs successifs, une chaine contenant l'expression mathador correspondante\n * @returns {array} [tirage=[a,b,c,d,e],solution (compris entre min et max),operationsSuccessives=[string1,string2,string3,string4,string5],expression]\n * les string1 à 5 ainsi que l'expresion sont ) mettre en mode maths.\n * sert dans les exercices CM019,\n */\nexport default function TrouverSolutionMathador(\n  min,\n  max,\n  A = 1,\n  B = 4,\n  C = 8,\n  D = 3,\n  E = 5\n) {\n  let eureka,\n    a,\n    b,\n    c,\n    d,\n    e,\n    tirage,\n    nombresRestants,\n    operationsRestantes,\n    expressionEnCoursF,\n    expressionEnCoursD,\n    op,\n    part1f,\n    part2f,\n    part1d,\n    part2d,\n    operationsSuccessives = [],\n    solution;\n  let listeChoix = [\n    1,\n    2,\n    2,\n    3,\n    3,\n    4,\n    4,\n    4,\n    4,\n    5,\n    6,\n    6,\n    6,\n    6,\n    7,\n    7,\n    8,\n    8,\n    8,\n    8,\n    9,\n    9,\n    9,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n  ];\n  eureka = false;\n  let nbDetermines = arguments.length - 2;\n  while (eureka == false) {\n    tirage = [];\n\n    if (nbDetermines < 1)\n      a = parseInt(choice(listeChoix));\n    else\n      a = A;\n    if (nbDetermines < 2)\n      b = parseInt(choice(listeChoix, [13, 14, 15, 16, 17, 18, 19, 20, a]));\n    else\n      b = B;\n    if (nbDetermines < 3)\n      c = parseInt(\n        choice(listeChoix, [12, 13, 14, 15, 16, 17, 18, 19, 20, a, b])\n      );\n    else\n      c = C;\n    if (nbDetermines < 4)\n      d = parseInt(\n        choice(listeChoix, [12, 13, 14, 15, 16, 17, 18, 19, 20, b, c])\n      );\n    else\n      d = D;\n    if (nbDetermines < 5)\n      e = parseInt(choice(listeChoix, [12, 13, 14, 15, 16, 17, 18, 19, 20]));\n    else\n      e = E;\n    tirage.push(a, b, c, d, e);\n    nombresRestants = shuffle(tirage);\n    operationsRestantes = [\"\\\\times\", \"+\", \"-\", \"\\\\div\"];\n    operationsRestantes = shuffle(operationsRestantes);\n    expressionEnCoursF = [\n      `${nombresRestants[0]}`,\n      `${nombresRestants[1]}`,\n      `${nombresRestants[2]}`,\n      `${nombresRestants[3]}`,\n      `${nombresRestants[4]}`,\n    ];\n    expressionEnCoursD = [\n      `${nombresRestants[0]}`,\n      `${nombresRestants[1]}`,\n      `${nombresRestants[2]}`,\n      `${nombresRestants[3]}`,\n      `${nombresRestants[4]}`,\n    ];\n\n    while (nombresRestants.length > 1) {\n      b = nombresRestants.pop();\n      a = nombresRestants.pop();\n      part2f = expressionEnCoursF.pop();\n      part1f = expressionEnCoursF.pop();\n      part2d = expressionEnCoursD.pop();\n      part1d = expressionEnCoursD.pop();\n\n      op = operationsRestantes.pop();\n      if (op == \"\\\\times\") {\n        c = a * b;\n        expressionEnCoursF.push(`${part1f}${op}${part2f}`);\n        expressionEnCoursD.push(`${part1d}${op}${part2d}`);\n        nombresRestants.push(c);\n      } else if (op == \"\\\\div\") {\n        if (a % b == 0) {\n          c = a / b;\n          if (part1f[0] == \"\\\\\") {\n            part1f = part1f.substring(6, part1f.length);\n            part1f = part1f.substring(0, part1f.length - 7);\n          }\n          if (part2f[0] == \"\\\\\") {\n            part2f = part2f.substring(6, part2f.length);\n            part2f = part2f.substring(0, part2f.length - 7);\n          }\n          expressionEnCoursF.push(`\\\\dfrac{${part1f}}{${part2f}}`);\n          expressionEnCoursD.push(`${part1d}${op}${part2d}`);\n          nombresRestants.push(c);\n        } else\n          break;\n      } else if (op == \"-\") {\n        if (a > b) {\n          c = a - b;\n          expressionEnCoursF.push(\n            `\\\\left(${part1f}${op}${part2f}\\\\right)`\n          );\n          expressionEnCoursD.push(\n            `\\\\left(${part1d}${op}${part2d}\\\\right)`\n          );\n          nombresRestants.push(c);\n        } else\n          break;\n      } else if (op == \"+\") {\n        c = a + b;\n        if (part2f.substring(0, 2) == \"\\\\l\") {\n          part2f = part2f.substring(6, part2f.length);\n          part2f = part2f.substring(0, part2f.length - 7);\n        }\n        expressionEnCoursF.push(`\\\\left(${part1f}${op}${part2f}\\\\right)`);\n        if (part2d.substring(0, 2) == \"\\\\l\") {\n          part2d = part2d.substring(6, part2d.length);\n          part2d = part2d.substring(0, part2d.length - 7);\n        }\n        expressionEnCoursD.push(`\\\\left(${part1d}${op}${part2d}\\\\right)`);\n        nombresRestants.push(c);\n      }\n      operationsSuccessives.push(`${a}` + op + `${b}=${c}`);\n    }\n\n    if (nombresRestants.length == 1 && operationsRestantes.length == 0) {\n      solution = nombresRestants[0];\n      if (solution >= min && solution <= max) {\n        eureka = true;\n        if (expressionEnCoursF[0][0] == \"\\\\\" &&\n          expressionEnCoursF[0][1] == `l`) {\n          expressionEnCoursF[0] = expressionEnCoursF[0].substring(\n            6,\n            expressionEnCoursF[0].length\n          );\n          expressionEnCoursF[0] = expressionEnCoursF[0].substring(\n            0,\n            expressionEnCoursF[0].length - 7\n          );\n        }\n        if (expressionEnCoursD[0][0] == \"\\\\\" &&\n          expressionEnCoursD[0][1] == `l`) {\n          expressionEnCoursD[0] = expressionEnCoursD[0].substring(\n            6,\n            expressionEnCoursD[0].length\n          );\n          expressionEnCoursD[0] = expressionEnCoursD[0].substring(\n            0,\n            expressionEnCoursD[0].length - 7\n          );\n        }\n        return [\n          tirage,\n          solution,\n          operationsSuccessives,\n          expressionEnCoursF,\n          expressionEnCoursD,\n        ];\n      } else\n        operationsSuccessives = [];\n    } else\n      operationsSuccessives = [];\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","interactifReady","amcType","LeCompteEstBonV3","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","sup2","maxSolution","nouvelleVersion","autoCorrection","listeQuestions","listeCorrections","tirage","solution","expression","solutionMathador","minSolution","parseInt","texte","texteCorr","i","cpt","TrouverSolutionMathador","j","questionJamaisPosee","push","enonce","propositions","statut","feedback","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","min","max","A","B","C","D","E","eureka","a","b","c","d","e","nombresRestants","operationsRestantes","expressionEnCoursF","expressionEnCoursD","op","part1f","part2f","part1d","part2d","operationsSuccessives","listeChoix","nbDetermines","arguments","length","choice","shuffle","pop","substring","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}