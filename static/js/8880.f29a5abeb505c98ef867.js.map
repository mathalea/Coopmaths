{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5A11-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Exercice_labyrinthe_divisibilite","Exercice","this","consigne","niveau","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","sup3","sup","sup2","nouvelleVersion","params","texte","texteCorr","trouve","listeCorrections","listeQuestions","laby","labyrinthe","parseInt","chemin","choisitChemin","murs2d","construitMurs","chemin2d","traceChemin","monchemin","table","texteEnCouleurEtGras","length","listeMultiples","index","i","randint","push","combinaisonListes","a","nombres","b","k","nombres2d","placeNombres","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","besoinFormulaire3Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/8880.f29a5abeb505c98ef867.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes,texteEnCouleurEtGras} from '../../modules/outils.js'\nimport {mathalea2d,labyrinthe} from '../../modules/2d.js'\n\n\nexport const titre = 'Labyrinthe de multiples basé sur les critères de divisibilité'\n\n/**\n * @author Jean-Claude Lhote\n * Publié le 7/12/2020\n * Ref 5A11-1\n * Sortir du labyrinthe en utilisant les critères de divisibilité.\n */\nexport default function Exercice_labyrinthe_divisibilite() {\n\tExercice.call(this);\n\tthis.titre = titre;\n\tthis.consigne = \"\";\n\tthis.niveau = '6e';\n\tthis.nbQuestions = 1;\n\tthis.nbQuestionsModifiable = false;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.pasDeVersionLatex = false;\n\tthis.pas_de_version_HMTL = false;\n\tthis.sup3 = 3;\n\tthis.sup = 9;\n\tif (this.niveau = 'CM') {\n\t\tthis.sup2 = 1;\n\t\tthis.sup3 = 3;\n\t}\n\telse {\n\t\tthis.sup2 = 2;\n\t\tthis.sup3 = 4;\n\t}\n\t//this.consigne=`Trouve la sortie en ne passant que par les cases contenant un nombre divisible par $${parseInt(this.sup)}$.`\n\tthis.nouvelleVersion = function () {\n\t\tthis.listeCorrections = [];\n\t\tthis.listeQuestions = [];\n\t\tlet params, texte, texteCorr, trouve;\n\t\tlet laby = labyrinthe();\n\t\tlaby.niveau = parseInt(this.sup3); // Le niveau (de 1 à 6=mélange) définit le nombre d'étapes\n\t\tlaby.chemin = laby.choisitChemin(laby.niveau); // On choisi un chemin\n\t\tlaby.murs2d = laby.construitMurs(laby.chemin); // On construit le labyrinthe\n\t\tlaby.chemin2d = laby.traceChemin(laby.chemin); // On trace le chemin solution\n\t\tlet monchemin = laby.chemin;\n\t\tlet table = parseInt(this.sup);\n\t\tif (this.sup2 == 2) {\n\t\t\tif (table % 2 != 0) {\n\t\t\t\ttable = table * 2;\n\t\t\t}\n\t\t}\n\t\telse if (this.sup2 == 3) {\n\t\t\tif (table % 3 != 0) {\n\t\t\t\ttable = table * 3;\n\t\t\t}\n\t\t}\n\t\telse if (this.sup2 == 4) {\n\t\t\tif (table % 4 != 0) {\n\t\t\t\tif (table % 2 != 0) {\n\t\t\t\t\ttable = table * 4;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttable = table * 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.sup2 == 5) {\n\t\t\tif (table % 5 != 0) {\n\t\t\t\ttable = table * 5;\n\t\t\t}\n\t\t}\n\t\telse if (this.sup2 == 6) {\n\t\t\tif (table % 9 != 0) {\n\t\t\t\tif (table % 3 != 0) {\n\t\t\t\t\ttable = table * 9;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttable = table * 3;\n\t\t\t}\n\t\t}\n\t\ttexte = `${texteEnCouleurEtGras(`Trouve la sortie en ne passant que par les cases contenant un nombre divisible par `, 'black')}$${table}$.<br>`;\n\t\ttexteCorr = `${texteEnCouleurEtGras(`Voici le chemin en marron et la sortie était la numéro $${2 - monchemin[monchemin.length - 1][1] + 1}$.`, 'black')}<br>`;\n\t\t// Zone de construction du tableau de nombres : Si ils sont sur monchemin et seulement si, ils doivent vérifier la consigne\n\t\tlet listeMultiples = [], index = 0;\n\t\tfor (let i = 200; i <= 12000; i += randint(1, 100)) {\n\t\t\tlisteMultiples.push(table * i);\n\t\t}\n\t\tlisteMultiples = combinaisonListes(listeMultiples, 12);\n\t\tfor (let a = 1; a < 7; a++) {\n\t\t\tlaby.nombres.push([0, 0, 0]);\n\t\t}\n\t\tfor (let a = 1; a < 7; a++) {\n\t\t\tfor (let b = 0; b < 3; b++) {\n\t\t\t\ttrouve = false;\n\t\t\t\tfor (let k = 0; k < monchemin.length; k++) {\n\t\t\t\t\tif (monchemin[k][0] == a && monchemin[k][1] == b)\n\t\t\t\t\t\ttrouve = true;\n\t\t\t\t}\n\t\t\t\tif (!trouve) {\n\t\t\t\t\tlaby.nombres[a - 1][b] = randint(200, 5000) * table + randint(1, table - 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlaby.nombres[a - 1][b] = listeMultiples[index];\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\t\t} // Le tableau de nombre étant fait, on place les objets nombres.\n\t\tlaby.nombres2d = laby.placeNombres(laby.nombres, 1);\n\t\tparams = { xmin: -4, ymin: 0, xmax: 22, ymax: 11, pixelsParCm: 20, scale: 0.7 };\n\t\ttexte += mathalea2d(params, laby.murs2d, laby.nombres2d);\n\t\ttexteCorr += mathalea2d(params, laby.murs2d, laby.nombres2d, laby.chemin2d);\n\t\tthis.listeQuestions.push(texte);\n\t\tthis.listeCorrections.push(texteCorr);\n\t\tlisteQuestionsToContenu(this);\n\t};\n\tthis.besoinFormulaireNumerique = [\"Critère de divisibilité \", 5, '1 : Par 2\\n2 : Par 3\\n3 : Par 4\\n4 : Par 5\\n5 : Par 9'];\n\tthis.besoinFormulaire2Numerique = [\"Critère de divisibilité supplémentaire \", 6, '1 : Aucun\\n2 : Par 2\\n3 : Par 3\\n4 : Par 4\\n5 : Par 5\\n6 : Par 9'];\n\tthis.besoinFormulaire3Numerique = ['Niveau de rapidité', 6, '1 : Escargot\\n 2 : Tortue\\n 3 : Lièvre\\n 4 : Antilope\\n 5 : Guépard\\n 6 : Au hasard'];\n} // Fin de l'exercice.\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}