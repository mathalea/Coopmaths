{"version":3,"file":"js/10943.e946f65ee1e46dab30dc.js","mappings":"sMAKO,MAAMA,EAAQ,iEAQN,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,SAAW,GAChBD,KAAKE,YAAc,EACnBF,KAAKG,uBAAwB,EAC7BH,KAAKI,OAAS,EACdJ,KAAKK,WAAa,EAClBL,KAAKM,IAAM,EACXN,KAAKO,gBAAkB,WACrBP,KAAKQ,eAAiB,GACtBR,KAAKS,iBAAmB,GACxBT,KAAKU,eAAiB,GACtB,IAAIC,EAAS,CAAC,EAAG,GAAQC,EAAY,GAAI,MAAMC,EAAWC,SAASd,KAAKM,KAOlES,GAAIC,EAAAA,EAAAA,KAAM,EAAG,EAAG,KAChBC,EAAQ,CAAC,IAAK,KAAM,MAAO,IAAK,IAAK,IAAK,KAC1CC,GAAOC,EAAAA,EAAAA,KAA0BN,EAAU,MAAM,GACvDb,KAAKC,SAAY,wCAAuCiB,EAAK,MAC7D,IAAK,IAAIE,EAAI,EAAGA,EAAIP,EAAW,EAAGO,IAChCpB,KAAKC,UAAa,MAAKiB,EAAKE,MAE9BpB,KAAKC,UAAa,QAAOiB,EAAKL,EAAW,yBACzC,MAAMQ,EAAS,GAAUC,EAAI,GAAUC,EAAI,GAAUC,EAAe,GAAUC,EAAmB,GAC3FC,EAAW,GACjB,IAAIC,EAAMC,EAAMC,EAAMC,EAAMC,EAAWC,GACtCL,EAAMC,EAAMC,EAAMC,GAAQ,CAAC,EAAG,EAAG,EAAG,GACrC,IAAK,IAAIV,EAAI,EAAGA,EAAIP,EAAUO,IAG5B,IAFAG,EAAEU,MAAKjB,EAAAA,EAAAA,MAAMkB,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,MAAS,GAAI,GAAI,GAAK,KAAKD,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,MAAS,GAAI,GAAI,GAAK,IAAKjB,EAAKE,GAAK,MAC3FW,GAAY,GACLK,EAAAA,EAAAA,KAASb,EAAEH,GAAIL,GAAK,GAAKgB,GAE9B,GADAA,GAAY,GACRK,EAAAA,EAAAA,KAASb,EAAEH,GAAIL,GAAK,EACtBQ,EAAEH,GAAGiB,GAAIH,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,MAAS,GAAI,GAAI,GAAK,IACtCZ,EAAEH,GAAGkB,GAAIJ,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,MAAS,GAAI,GAAI,GAAK,QACjC,CACLH,GAAY,EACZ,IAAK,IAAIO,EAAI,EAAGA,EAAInB,EAAGmB,KACjBH,EAAAA,EAAAA,KAASb,EAAEH,GAAIG,EAAEgB,IAAM,MAAOP,GAAY,IAE9B,IAAdA,GACFT,EAAEH,GAAGiB,GAAIH,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,MAAS,GAAI,GAAI,GAAK,IACtCZ,EAAEH,GAAGkB,GAAIJ,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,MAAS,GAAI,GAAI,GAAK,KAC/BJ,GAAY,EAK3BP,EAAaS,MAAKO,EAAAA,EAAAA,KAAWzB,IAAI0B,EAAAA,EAAAA,KAAW1B,IAC5CU,EAAiBQ,MAAKO,EAAAA,EAAAA,KAAWzB,IAAI0B,EAAAA,EAAAA,KAAW1B,IAEhD,IAAK,IAAIK,EAAI,EAAGA,EAAIP,EAAUO,IAAK,CACjCM,EAASO,MA3CmBS,EA2CF,GA1CXC,EAAAA,EAAAA,MAAoBR,EAAAA,EAAAA,KAAQ,EAAGO,IAC9BE,QAAOT,EAAAA,EAAAA,KAAQ,EAAGO,IAAOG,aA0CzClC,GAASmC,EAAAA,EAAAA,KAAkBvB,EAAEH,GAAGiB,EAAGd,EAAEH,GAAGkB,EAAG,EAAG,GAAKZ,EAASN,IAC5D,MAAM2B,GAAQC,EAAAA,EAAAA,KAAY,CAAEX,EAAG1B,EAAO,GAAI2B,EAAG3B,EAAO,GAAI+B,KAAM,EAAGO,IAAK7B,EAAI,EAAG8B,OAAQ,KACrFH,EAAMG,OAAS,GACfH,EAAMI,MAAQ,SACdJ,EAAMK,QAAU,GAChB/B,EAAOY,KAAKc,GAjDM,IAAUL,EAmD9B,IAAK,IAAItB,EAAI,EAAGA,EAAIP,EAAUO,IAC5BE,EAAEW,MAAKoB,EAAAA,EAAAA,KAAS9B,EAAEH,GAAIL,EAAG,IAAKG,EAAKE,KACnCI,EAAaS,MAAKO,EAAAA,EAAAA,KAAWlB,EAAEF,KAAKqB,EAAAA,EAAAA,KAAWnB,EAAEF,IAAKC,EAAOD,IAC7DK,EAAiBQ,MAAKO,EAAAA,EAAAA,KAAWlB,EAAEF,GAAIG,EAAEH,KAAKqB,EAAAA,EAAAA,KAAWnB,EAAEF,GAAIG,EAAEH,IAAKC,EAAOD,IAC7EK,EAAiBQ,MAAKqB,EAAAA,EAAAA,KAAQhC,EAAEF,GAAIG,EAAEH,IAAImC,EAAAA,EAAAA,KAAUnC,KAAKoC,EAAAA,EAAAA,KAAalC,EAAEF,GAAIG,EAAEH,IAAImC,EAAAA,EAAAA,KAAUnC,EAAI,GAAIH,EAAMG,KAC1GK,EAAiBQ,MAAKwB,EAAAA,EAAAA,KAAY1C,EAAGQ,EAAEH,GAAI,KAC3CR,GAAc,IAAGM,EAAKE,iCAAiCF,EAAKE,wBAAwBM,EAASN,mBAAmBA,EAAI,SAGtH,IAAK,IAAIA,EAAI,EAAGA,EAAIP,EAAUO,IAC5BO,EAAO+B,KAAKC,IAAIhC,EAAMJ,EAAEH,GAAGiB,EAAI,EAAGf,EAAEF,GAAGiB,EAAI,GAC3CT,EAAO8B,KAAKC,IAAI/B,EAAML,EAAEH,GAAGkB,EAAI,EAAGhB,EAAEF,GAAGkB,EAAI,GAC3CT,EAAO6B,KAAKE,IAAI/B,EAAMN,EAAEH,GAAGiB,EAAI,EAAGf,EAAEF,GAAGiB,EAAI,GAC3CP,EAAO4B,KAAKE,IAAI9B,EAAMP,EAAEH,GAAGkB,EAAI,EAAGhB,EAAEF,GAAGkB,EAAI,GAG7CuB,EAAAA,GAAAA,kBAA4B,CAAClC,EAAMC,EAAMC,EAAMC,GAE/C9B,KAAKQ,eAAeyB,MAAK6B,EAAAA,EAAAA,KAAW,CAAEC,KAAMpC,EAAMqC,KAAMpC,EAAMqC,KAAMpC,EAAMqC,KAAMpC,EAAMqC,YAAa,GAAIC,MAAO,IAAO5C,IACrHxB,KAAKS,iBAAiBwB,KAAKrB,GAAYkD,EAAAA,EAAAA,KAAW,CAAEC,KAAMpC,EAAMqC,KAAMpC,EAAMqC,KAAMpC,EAAMqC,KAAMpC,EAAMqC,YAAa,GAAIC,MAAO,IAAO3C,KACnI4C,EAAAA,EAAAA,KAAwBrE,OAI1BA,KAAKsE,0BAA4B,CAAC,2BAA4B,K,gBChGjD,SAASvE,IAItBC,KAAKH,MAAQ,GACbG,KAAKuE,YAAa,EAclBvE,KAAKC,SAAW,GAChBD,KAAKwE,mBAAqB,GAC1BxE,KAAKyE,aAAe,GACpBzE,KAAKQ,eAAiB,GACtBR,KAAKS,iBAAmB,GACxBT,KAAK0E,QAAU,GACf1E,KAAK2E,kBAAoB,GACzB3E,KAAKU,eAAiB,GACtBV,KAAK4E,sBAAwB,GAK7B5E,KAAK6E,QAAU,EACf7E,KAAK8E,YAAc,EAKnB9E,KAAK+E,mBAAoB,EACzB/E,KAAKgF,cAAgB,GACrBhF,KAAKiF,oBAAqB,EAC1BjF,KAAKG,uBAAwB,EAC7BH,KAAKI,OAAS,EACdJ,KAAKK,WAAa,EAClBL,KAAKkF,kBAAmB,EACxBlF,KAAKmF,sBAAuB,EAC5BnF,KAAKoF,mBAAoB,EACzBpF,KAAKqF,uBAAwB,EAM7BrF,KAAKsF,QAAS,EACdtF,KAAKuF,gBAAkB,EAKvBvF,KAAKE,YAAc,GACnBF,KAAKwF,mBAAqB,EAC1BxF,KAAKyF,+BAAgC,EACrCzF,KAAK0F,qBAAsB,EAC3B1F,KAAK2F,oBAAqB,EAC1B3F,KAAK4F,MAAQ,GAEb5F,KAAK6F,YAAa,EAClB7F,KAAK8F,uBAAwB,EAE7B9F,KAAKsE,2BAA4B,EACjCtE,KAAK+F,uBAAwB,EAC7B/F,KAAKgG,6BAA8B,EAEnChG,KAAKiG,4BAA6B,EAClCjG,KAAKkG,wBAAyB,EAC9BlG,KAAKmG,8BAA+B,EAEpCnG,KAAKoG,4BAA6B,EAClCpG,KAAKqG,wBAAyB,EAC9BrG,KAAKsG,8BAA+B,EAEpCtG,KAAKuG,4BAA6B,EAClCvG,KAAKwG,wBAAyB,EAC9BxG,KAAKyG,8BAA+B,EAMpCzG,KAAK0G,cAAe,EASpB1G,KAAK2G,eAAiB,GAMtB3G,KAAKO,gBAAkB,SAAUqG,KAQjC5G,KAAK6G,oBAAsB,SAAUzF,KAAM0F,GAC/B,IAAN1F,IAASpB,KAAK2G,eAAiB,IACnC,IAAII,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAInE,YAE/C,QAAI7C,KAAK2G,eAAeO,QAAQH,IAAmB,KAGjD/G,KAAK2G,eAAe1E,KAAK8E,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/5e/5G11-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, calcul, choisitLettresDifferentes, lettreDepuisChiffre, arcenciel } from '../../modules/outils.js'\nimport { point, tracePoint, labelPoint, codageMilieu, segment, traceCompas, dansLaCibleCarree, cibleCarree, rotation, longueur, mathalea2d } from '../../modules/2d.js'\nimport { context } from '../../modules/context.js'\n\nexport const titre = 'Construire le symétrique d’un point avec cible auto-corrective'\n\n/**\n * Construction de symétrique avec dispositif d'auto-correction aléatoire\n * Ref 5G11-3\n * @author Jean-Claude Lhote\n * Publié le 30/11/2020\n */\nexport default function ConstruireSymetriquePoint5e () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 3\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let result = [0, 0]; let texteCorr = ''; const nbpoints = parseInt(this.sup)\n    const celluleAlea = function (rang) {\n      const lettre = lettreDepuisChiffre(randint(1, rang))\n      const chiffre = Number(randint(1, rang)).toString()\n      return lettre + chiffre\n    }\n    // On prépare la figure...\n    const O = point(0, 0, 'O')\n    const marks = ['/', '//', '///', 'x', 'o', 'S', 'V']\n    const noms = choisitLettresDifferentes(nbpoints, 'QO', true)\n    this.consigne = `Construire le symétrique des points $${noms[0]}$`\n    for (let i = 1; i < nbpoints - 1; i++) {\n      this.consigne += `, $${noms[i]}$`\n    }\n    this.consigne += ` et $${noms[nbpoints - 1]}$ par rapport à $O$.`\n    const cibles = []; const M = []; const N = []; const objetsEnonce = []; const objetsCorrection = [] // cibles, M point marqués, N symétrique de M\n    const cellules = []\n    let xMin, yMin, xMax, yMax, nontrouve, assezloin;\n    [xMin, yMin, xMax, yMax] = [0, 0, 0, 0]\n    for (let i = 0; i < nbpoints; i++) { // On place les cibles.\n      N.push(point(calcul(randint(-80, 80, 0) / 10), calcul(randint(-80, 80, 0) / 10), noms[i] + \"'\"))\n      nontrouve = true\n      while (longueur(N[i], O) < 3 || nontrouve) {\n        nontrouve = true\n        if (longueur(N[i], O) < 3) {\n          N[i].x = calcul(randint(-80, 80, 0) / 10)\n          N[i].y = calcul(randint(-80, 80, 0) / 10)\n        } else {\n          assezloin = true\n          for (let j = 0; j < i; j++) {\n            if (longueur(N[i], N[j]) < 4.5) { assezloin = false }\n          }\n          if (assezloin === false) { // éloigner les points donc les grilles\n            N[i].x = calcul(randint(-80, 80, 0) / 10)\n            N[i].y = calcul(randint(-80, 80, 0) / 10)\n          } else { nontrouve = false }\n        }\n      }\n    }\n\n    objetsEnonce.push(tracePoint(O), labelPoint(O))\n    objetsCorrection.push(tracePoint(O), labelPoint(O))\n\n    for (let i = 0; i < nbpoints; i++) {\n      cellules.push(celluleAlea(4))\n      result = dansLaCibleCarree(N[i].x, N[i].y, 4, 0.6, cellules[i])\n      const cible = cibleCarree({ x: result[0], y: result[1], rang: 4, num: i + 1, taille: 0.6 })\n      cible.taille = 0.6\n      cible.color = 'orange'\n      cible.opacite = 0.7\n      cibles.push(cible)\n    }\n    for (let i = 0; i < nbpoints; i++) {\n      M.push(rotation(N[i], O, 180, noms[i]))\n      objetsEnonce.push(tracePoint(M[i]), labelPoint(M[i]), cibles[i])\n      objetsCorrection.push(tracePoint(M[i], N[i]), labelPoint(M[i], N[i]), cibles[i])\n      objetsCorrection.push(segment(M[i], N[i], arcenciel(i)), codageMilieu(M[i], N[i], arcenciel(i + 5), marks[i]))\n      objetsCorrection.push(traceCompas(O, N[i], 20))\n      texteCorr += `$${noms[i]}'$, le symétrique du point $${noms[i]}$ est dans la case ${cellules[i]} de la grille ${i + 1}.<br>`\n    }\n\n    for (let i = 0; i < nbpoints; i++) {\n      xMin = Math.min(xMin, N[i].x - 3, M[i].x - 3)\n      yMin = Math.min(yMin, N[i].y - 3, M[i].y - 3)\n      xMax = Math.max(xMax, N[i].x + 3, M[i].x + 3)\n      yMax = Math.max(yMax, N[i].y + 3, M[i].y + 3)\n    }\n\n    context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n\n    this.listeQuestions.push(mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsEnonce))\n    this.listeCorrections.push(texteCorr + mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection))\n    listeQuestionsToContenu(this)\n\n    //  let nonchoisi,coords=[],x,y,objetsEnonce=[],objetsCorrection=[],nomd,label_pos\n  }\n  this.besoinFormulaireNumerique = ['Nombre de points (1 à 5)', 5]\n  // this.besoinFormulaire2CaseACocher = [\"Avec des points de part et d'autre\"];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ConstruireSymetriquePoint5e","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","result","texteCorr","nbpoints","parseInt","O","point","marks","noms","choisitLettresDifferentes","i","cibles","M","N","objetsEnonce","objetsCorrection","cellules","xMin","yMin","xMax","yMax","nontrouve","assezloin","push","calcul","randint","longueur","x","y","j","tracePoint","labelPoint","rang","lettreDepuisChiffre","Number","toString","dansLaCibleCarree","cible","cibleCarree","num","taille","color","opacite","rotation","segment","arcenciel","codageMilieu","traceCompas","Math","min","max","context","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}