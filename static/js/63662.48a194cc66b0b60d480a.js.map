{"version":3,"file":"js/63662.48a194cc66b0b60d480a.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C32-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, calcul, choice, texNombre } from '../../modules/outils.js'\nexport const titre = 'Problèmes avec des puissances de 10 et des conversions'\n\n/**\n * Problèmes avec des multiplications ou des divisions avec des puissances de 10 et des conversions\n * @author Rémi Angot\n * Référence 4C32-3\n * 2021-02-05\n*/\nexport default function ProblemesPuissancesDe10EtConversions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 4\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  // this.sup = 1; // Niveau de difficulté\n  // this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = ['info', 'info2', 'electricite', 'lumiere']\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, a, a1, b, b1, c, c1, u, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeDeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'info':\n          a = randint(3, 7)\n          a1 = randint(3, 7, a) * 100\n          a *= 100\n          b = randint(11, 40)\n          b1 = choice([650, 700, 750])\n          c = randint(3, 20)\n          c1 = calcul(randint(11, 49) / 10)\n          texte = `Sur mon disque dur, j'ai ${a} photos de ${a1} ko, ${b} films de ${b1} Mo et ${c} films HD de ${texNombre(c1)} Go.<br>`\n          texte += 'Combien de place vont occuper tous ces fichiers ? Donner le résultat en mega-octets et en giga-octets.'\n          texteCorr = `Taille des photos : $${a}\\\\times${a1}~\\\\text{ko}=${texNombre(a * a1)}~\\\\text{ko}=${texNombre(calcul(a * a1 / 1000))}~\\\\text{Mo}$<br>`\n          texteCorr += `Taille des films : $${b}\\\\times${b1}~\\\\text{Mo}=${texNombre(b * b1)}~\\\\text{Mo}$<br>`\n          texteCorr += `Taille des films HD : $${c}\\\\times${texNombre(c1)}~\\\\text{Go}=${texNombre(c * c1)}~\\\\text{Go}=${texNombre(c * c1 * 1000)}~\\\\text{Mo}$<br>`\n          texteCorr += `Taille totale : $${texNombre(calcul(a * a1 / 1000))}~\\\\text{Mo}+${texNombre(b * b1)}~\\\\text{Mo}+${texNombre(c * c1 * 1000)}~\\\\text{Mo}=${texNombre(calcul(a * a1 / 1000 + b * b1 + c * c1 * 1000))}~\\\\text{Mo}=${texNombre(calcul((a * a1 / 1000 + b * b1 + c * c1 * 1000) / 1000))}~\\\\text{Go}$`\n          break\n        case 'info2':\n          a = calcul(randint(11, 49, [20, 30, 40]) / 10)\n          a1 = randint(4, 10)\n          b = randint(11, 40)\n          texte = `Un serveur héberge $${texNombre(a)}\\\\times10^{${a1}}$ fichiers de $${b}$ Mo.<br>`\n          texte += 'Combien de place occupent tous ces fichiers ? Donner le résultat en tera-octets.'\n          texteCorr = `$${texNombre(a)}\\\\times10^{${a1}}\\\\times${b}~\\\\text{Mo}=${texNombre(calcul(a * b))}\\\\times10^{${a1}}~\\\\text{Mo}$<br>`\n          texteCorr += 'Or $1~\\\\text{To}=1~000~\\\\text{Go}=1~000~000~\\\\text{Mo}$, il faut donc diviser par un million ou multiplier par $10^{-6}$ pour convertir les méga-octets en tera-octets.<br>'\n          texteCorr += `$${texNombre(calcul(a * b))}\\\\times10^{${a1}}~\\\\text{Mo}=${texNombre(calcul(a * b))}\\\\times10^{${a1 - 6}}~\\\\text{To}$`\n          break\n        case 'electricite':\n          a = choice([30, 35, 40, 45])\n          b = calcul(randint(11, 49, [20, 30, 40]) / 10)\n          texte = `On estime qu'un foyer consomme ${a} kWh par jour. Si une centrale électrique produit ${texNombre(b)} TWh par an, combien de foyers pourra-t-elle alimenter ?<br>`\n          texteCorr = `Consommation annuelle d'un foyer français : $365\\\\times${texNombre(a)}~\\\\text{kWh} = ${texNombre(a * 365)}~\\\\text{kWh}$<br>`\n          texteCorr += `Nombre de foyers pouvant être alimentés par cette centrale : $\\\\dfrac{${texNombre(b)}~\\\\text{TWh}}{${texNombre(a * 365)}~\\\\text{kWh}}=\\\\dfrac{${texNombre(b)}\\\\times10^{12}~\\\\text{Wh}}{${texNombre(a * 365)}\\\\times10^3~\\\\text{Wh}}\\\\approx${texNombre(calcul((b * 10 ** 12) / (a * 365 * 10 ** 3), 1))}$`\n          break\n        case 'lumiere':\n          a = randint(2, 22)\n          u = choice(['j', 'h'])\n          texte = `On admet que la vitesse de la lumière dans le vide est de $3\\\\times10^8~\\\\text{m/s}$. Quelle est la distance parcourue par la lumière en ${a} `\n          if (u === 'j') {\n            texte += 'jours ? Donner le résultat en kilomètres.'\n            texteCorr = 'Dans une journée, il y a $24$ heures et dans chaque heure $3~600$ secondes, la distance parcourue est donc : <br>'\n            texteCorr += `$${a}\\\\times24\\\\times3~600~\\\\text{s}\\\\times3\\\\times10^8~\\\\text{m/s}=${texNombre(a * 24 * 3600 * 3)}\\\\times10^8~\\\\text{m}=${texNombre(calcul(a * 24 * 3600 * 3) / 1000)}\\\\times10^8~\\\\text{km}$`\n          } else {\n            texte += 'heures ? Donner le résultat en kilomètres.<br>'\n            texteCorr = 'Dans une heure, il y a $3~600$ secondes, la distance parcourue est donc : <br>'\n            texteCorr += `$${a}\\\\times3~600~\\\\text{s}\\\\times3\\\\times10^8~\\\\text{m/s}=${texNombre(a * 3600 * 3)}\\\\times10^8~\\\\text{m}=${texNombre(calcul(a * 3600 * 3) / 1000)}\\\\times10^8~\\\\text{km}$`\n          }\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ProblemesPuissancesDe10EtConversions","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","video","context","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","a1","b","b1","c","c1","u","i","cpt","randint","choice","calcul","texNombre","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}