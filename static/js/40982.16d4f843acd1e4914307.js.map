{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3F21-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","NomQuelconqueDeLaFonctionQuiCreeExercice","Exercice","this","consigne","nbQuestionsModifiable","nbCols","nbColsCorr","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","num","randint","den","a","calcul","b","xMin","context","xMax","yMin","yMax","r","repere2","f","x","d","courbe2","color","repere","c","cercle","point","epaisseur","x0","Number","isInteger","A","B","C","s1","segment","s2","M1","milieu","M2","t1","texteParPoint","y","t2","texNombre","pointilles","introduction","mathalea2d","xmin","xmax","ymin","ymax","consigneCorrection","question1","ajouteChampTexteMathLive","question2","question3","setReponse","correction1","correction2","Math","abs","correction3","rienSi1","toString","replace","ecritureAlgebrique","push","listeQuestionsToContenu","contenu","contenuCorrection","nbQuestions","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"4PAKO,MAAMA,EAAQ,6FACRC,GAAkB,EAClBC,EAAiB,WAOf,SAASC,IACtBC,eAAcC,MACdA,KAAKL,MAAQA,EACbK,KAAKJ,gBAAkBA,EACvBI,KAAKH,eAAiBA,EACtBG,KAAKC,SAAW,GAChBD,KAAKE,uBAAwB,EAE7BF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAElBJ,KAAKK,gBAAkB,IACvBL,KAAKM,MAAQ,GAEbN,KAAKO,gBAAkB,WACrBP,KAAKQ,eAAiB,GACtBR,KAAKS,iBAAmB,GACxB,MAAMC,GAAMC,UAAS,EAAG,EAAG,GACrBC,GAAMD,SAAQ,EAAG,GACjBE,GAAIC,SAAOJ,EAAME,GACjBG,GAAIJ,UAAS,EAAG,EAAG,GACzB,IAAIK,EACaA,EAAjBC,aAAyB,IAAa,EACtC,MAAMC,GAAQF,EACRG,EAAOH,EACPI,GAAQD,EAERE,GAAIC,SAAQ,CAAEN,OAAMG,OAAMD,OAAME,SAChCG,EAAIC,GAAKX,EAAIW,EAAIT,EAEjBU,GAAIC,SAAQH,EAAG,CAAEI,MAAO,OAAQC,OAAQP,IACxCQ,GAAIC,UAAOC,SAAM,EAAGhB,GAAI,IAC9Bc,EAAEF,MAAQ,UACVE,EAAEG,UAAY,EACd,IAAIC,GAAM,EACV,MAAQC,OAAOC,UAAUZ,EAAEU,KAAQV,EAAEU,IAAOd,GAAQI,EAAEU,IAAOb,IAAgB,IAARa,IAAqB,IAARA,GAAoB,IAAPA,GAC7FA,GAAM,EAER,MAAMG,GAAIL,SAAME,EAAIV,EAAEU,IAChBI,GAAIN,SAAME,EAAK,EAAGV,EAAEU,IACpBK,GAAIP,SAAME,EAAK,EAAGV,EAAEU,EAAK,IACzBM,GAAKC,SAAQJ,EAAGC,GAChBI,GAAKD,SAAQH,EAAGC,GAChBI,GAAKC,SAAOP,EAAGC,GACfO,GAAKD,SAAON,EAAGC,GACfO,GAAKC,SAAc,KAAKf,SAAMW,EAAGlB,EAAGkB,EAAGK,GAAKlC,EAAI,GAAK,GAAM,MAC3DmC,GAAKF,UAAcG,SAAUpC,IAAIkB,SAAMa,EAAGpB,EAAI,GAAKoB,EAAGG,IAC5DF,EAAGlB,MAAQ,UACXqB,EAAGrB,MAAQ,UAEXY,EAAGP,UAAY,EACfO,EAAGW,YAAa,EAChBX,EAAGZ,MAAQ,UACXc,EAAGT,UAAY,EACfS,EAAGS,YAAa,EAChBT,EAAGd,MAAQ,UAEX3B,KAAKmD,cAAeC,SAAW,CAAEC,KAAMrC,EAAMsC,KAAMpC,EAAMqC,KAAMpC,EAAMqC,KAAMpC,GAAQC,EAAGI,GACtFzB,KAAKyD,oBAAqBL,SAAW,CAAEC,KAAMrC,EAAMsC,KAAMpC,EAAMqC,KAAMpC,EAAMqC,KAAMpC,GAAQC,EAAGI,EAAGI,EAAGU,EAAIE,EAAII,EAAIG,GAC9G,IAAIU,EAAY,yDAChBA,IAAaC,QAAyB3D,KAAM,GAC5C,IAAI4D,EAAY,6CAChBA,IAAaD,QAAyB3D,KAAM,GAC5C,IAAI6D,EAAY,6CAChBA,IAAaF,QAAyB3D,KAAM,IAE5C8D,QAAW9D,KAAM,EAAGe,IACpB+C,QAAW9D,KAAM,EAAG,CAACa,EAAI,UAASH,MAAQE,QAC1CkD,QAAW9D,KAAM,EAAI,IAAEiD,SAAUpC,OAAOE,KAC5B,IAARH,IAAWkD,QAAW9D,KAAM,EAAG,CAAE,IAAEiD,SAAUpC,OAAOE,IAAM,UAASL,oBAAsBK,MAE7F,MAAMgD,EAAe,mEAAkEhD,yCAAyCA,MAChI,IAAIiD,EAAe,kDAAiDnD,EAAI,EAAI,QAAU,iBAAgBoC,SAAUpC,MAAMoD,KAAKC,IAAIrD,IAAM,EAAI,WAAa,aACtJmD,GAAgB,uCAAqCf,SAAUpC,MAC/D,IAAIsD,EAAc,2IAClBA,GAAgB,oCAAkCC,SAAQvD,GAAGwD,WAAWC,QAAQ,IAAK,UAASC,SAAmBxD,OACjHf,KAAKQ,eAAegE,KAAKd,EAAWE,EAAWC,GAC/C7D,KAAKS,iBAAiB+D,KAAKT,EAAaC,EAAaG,IAErDM,SAAwBzE,S,6BCvFb,SAASD,IAEtBC,KAAKL,MAAQ,GACbK,KAAKC,SAAW,GAChBD,KAAKyD,mBAAqB,GAC1BzD,KAAKQ,eAAiB,GACtBR,KAAKS,iBAAmB,GACxBT,KAAKmD,aAAe,GACpBnD,KAAK0E,QAAU,GACf1E,KAAK2E,kBAAoB,GACzB3E,KAAK4E,YAAc,GACnB5E,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAK6E,QAAU,EACf7E,KAAK8E,YAAc,EACnB9E,KAAK+E,QAAS,EAEd/E,KAAKgF,2BAA4B,EACjChF,KAAKiF,uBAAwB,EAC7BjF,KAAKkF,6BAA8B,EACnClF,KAAKmF,4BAA6B,EAClCnF,KAAKoF,wBAAyB,EAC9BpF,KAAKqF,8BAA+B,EACpCrF,KAAKsF,4BAA6B,EAClCtF,KAAKuF,wBAAyB,EAC9BvF,KAAKwF,8BAA+B,EACpCxF,KAAKyF,oBAAqB,EAC1BzF,KAAKE,uBAAwB,EAC7BF,KAAK0F,kBAAmB,EACxB1F,KAAK2F,sBAAuB,EAC5B3F,KAAK4F,mBAAoB,EACzB5F,KAAK6F,uBAAwB,EAC7B7F,KAAK8F,+BAAgC,EACrC9F,KAAK+F,qBAAsB,EAC3B/F,KAAKM,MAAQ,GACbN,KAAKgG,YAAa,EAClBhG,KAAKK,gBAAkB,GAMvBL,KAAKiG,mBAAoB,EACzBjG,KAAKkG,YAAa,EAClBlG,KAAKmG,uBAAwB,EAC7BnG,KAAKoG,KAAM,EACXpG,KAAKqG,eAAgB,EACrBrG,KAAKsG,SAAU,EACftG,KAAKuG,eAAiB,GACtBvG,KAAKwG,sBAAwB,GAC7BxG,KAAKyG,cAAe,EACpBzG,KAAKO,gBAAkB,SAAUmG,KACjC1G,KAAK2G,cAAgB,G","file":"js/40982.16d4f843acd1e4914307.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { ecritureAlgebrique, listeQuestionsToContenu, calcul, randint, rienSi1, texNombre } from '../../modules/outils.js'\nimport { mathalea2d, repere2, courbe2, cercle, point, segment, milieu, texteParPoint } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = \"Lire graphiquement les caractérisitiques de la courbe représentative d'une fonction affine\"\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Lire la pente et l'ordonnée à l'origine d'une droite pour en déduire la forme algébrique de la fonction affine\n * @author Rémi Angot\n * Référence\n*/\nexport default function NomQuelconqueDeLaFonctionQuiCreeExercice () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = ''\n  this.nbQuestionsModifiable = false\n  // this.nbQuestions = 10\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  // this.sup = 1; // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const num = randint(-5, 5, 0)\n    const den = randint(1, 2)\n    const a = calcul(num / den)\n    const b = randint(-4, 4, 0)\n    let xMin\n    context.isHtml ? xMin = -10 : xMin = -8\n    const xMax = -xMin\n    const yMin = xMin\n    const yMax = -yMin\n\n    const r = repere2({ xMin, yMin, xMax, yMax })\n    const f = x => a * x + b\n\n    const d = courbe2(f, { color: 'blue', repere: r })\n    const c = cercle(point(0, b), 0.8)\n    c.color = '#f15929'\n    c.epaisseur = 2\n    let x0 = -7\n    while (!Number.isInteger(f(x0)) || f(x0) <= yMin || f(x0) >= yMax || x0 === -2 || x0 === -1 || x0 === 0) {\n      x0 += 1\n    }\n    const A = point(x0, f(x0))\n    const B = point(x0 + 1, f(x0))\n    const C = point(x0 + 1, f(x0 + 1))\n    const s1 = segment(A, B)\n    const s2 = segment(B, C)\n    const M1 = milieu(A, B)\n    const M2 = milieu(B, C)\n    const t1 = texteParPoint('1', point(M1.x, M1.y + (a > 0 ? -0.4 : 0.4)))\n    const t2 = texteParPoint(texNombre(a), point(M2.x + 0.6, M2.y))\n    t1.color = '#f15929'\n    t2.color = '#f15929'\n\n    s1.epaisseur = 3\n    s1.pointilles = true\n    s1.color = '#f15929'\n    s2.epaisseur = 3\n    s2.pointilles = true\n    s2.color = '#f15929'\n\n    this.introduction = mathalea2d({ xmin: xMin, xmax: xMax, ymin: yMin, ymax: yMax }, r, d)\n    this.consigneCorrection = mathalea2d({ xmin: xMin, xmax: xMax, ymin: yMin, ymax: yMax }, r, d, c, s1, s2, t1, t2)\n    let question1 = \"Quelle est l'ordonnée à l'origine de la fonction $f$ ?\"\n    question1 += ajouteChampTexteMathLive(this, 0)\n    let question2 = 'Quel est le coefficient directeur de $f$ ?'\n    question2 += ajouteChampTexteMathLive(this, 1)\n    let question3 = \"En déduire l'expression algébrique de $f$.\"\n    question3 += ajouteChampTexteMathLive(this, 2)\n\n    setReponse(this, 0, b)\n    setReponse(this, 1, [a, `\\\\frac{${num}}{${den}}`])\n    setReponse(this, 2, `${texNombre(a)}x+${b}`)\n    if (den === 2) setReponse(this, 2, [`${texNombre(a)}x+${b}`, `\\\\frac{${num}}{2}\\\\times x + ${b}`])\n\n    const correction1 = `La droite coupe l'axe des ordonnées au point de coordonnées $(0;${b})$, l'ordonnée à l'origine est donc $${b}$.`\n    let correction2 = `À chaque fois que l'on avance de 1 carreau, on ${a > 0 ? 'monte' : 'descend'} de ${texNombre(a)} ${Math.abs(a) >= 2 ? 'carreaux' : 'carreau'},`\n    correction2 += ` le coefficient directeur est donc ${texNombre(a)}.`\n    let correction3 = '$f$ étant une fonction affine, on a $f : x \\\\mapsto ax + b$ avec $a$ le coefficient directeur (ou pente) et $b$ son ordonné à l\\'origine.'\n    correction3 += `<br>Finalement, $f : x \\\\mapsto ${rienSi1(a).toString().replace('.', ',')}x ${ecritureAlgebrique(b)}$.`\n    this.listeQuestions.push(question1, question2, question3)\n    this.listeCorrections.push(correction1, correction2, correction3)\n\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 3];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}