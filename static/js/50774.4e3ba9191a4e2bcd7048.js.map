{"version":3,"file":"js/50774.4e3ba9191a4e2bcd7048.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C30-5.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { calcul, listeQuestionsToContenu, combinaisonListes, randint, texNombre2, texFraction, choice, miseEnEvidence } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 'qcmMono' // QCM\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\nexport const titre = 'Multiplication par 0,1 ; 0,01 ; 0,001 (compléter avec le nombre qui convient)'\n\n/**\n * @author Jean-claude Lhote\n * Publié le 20/02/2021\n * Référence 6C30-5\n */\nexport default function MultiplierPar001 () {\n  'use strict'\n  Exercice.call(this)\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.consigne = 'Compléter les pointillés.'\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n\n  this.sup = false\n  this.sup2 = 4\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.modeQcm = false; // A décommenter : valeur par défaut d'un troisième paramètre\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function () {\n    this.sup2 = parseInt(this.sup2)\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    let typeDeQuestionsDisponibles\n    if (parseInt(this.sup2) === 4) {\n      typeDeQuestionsDisponibles = [1, 2, 3]\n    } else {\n      typeDeQuestionsDisponibles = [parseInt(this.sup2)]\n    }\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n    const rang = ['millièmes', 'centièmes', 'dixièmes']\n\n    for (let i = 0, texte, texteCorr, coef, nombre, nombreentier, resultat, exposant, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n      coef = -randint(1, 3)\n      if (!this.sup) {\n        exposant = -randint(1, 3)\n      } else {\n        exposant = 0\n      }\n      nombreentier = calcul(randint(10, 1000) + randint(10, 999) * choice([0, 1000]))\n      nombre = calcul(nombreentier * 10 ** exposant)\n      resultat = calcul(nombre * 10 ** coef)\n      switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n        case 1:\n          texte = `$${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10 ** coef))}~~ = ~~\\\\ldots\\\\ldots\\\\ldots\\\\ldots$`\n          texteCorr = `Quand on multiplie par $${texNombre2(calcul(10 ** coef))}=${texFraction(1, calcul(10 ** (-coef)))}$ chaque chiffre prend une valeur $${texNombre2(calcul(10 ** (-coef)))}$ fois plus petite.<br>`\n          texteCorr += `Le chiffre des unités se positionne donc dans les ${rang[3 + coef]} :<br>`\n          texteCorr = `$${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10 ** coef))}~~ =~~ ${miseEnEvidence(texNombre2(resultat), 'blue')}$`\n\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(resultat)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre * 10 ** (-coef)))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre * 10 ** (coef - 1)))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre * 10 ** (-coef + 1)))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          break\n\n        case 2:\n          texte = `$${texNombre2(nombre)} \\\\times \\\\ldots\\\\ldots\\\\ldots~~ = ~~${texNombre2(resultat)}$`\n          texteCorr = `Quand on multiplie par $${texNombre2(10 ** coef)}=${texFraction(1, 10 ** (-coef))}$ chaque chiffre prend une valeur $${texNombre2(10 ** (-coef))}$ fois plus petite.<br>`\n          texteCorr += `Le chiffre des unités se positionne donc dans les ${rang[3 + coef]} :<br>`\n          texteCorr = `$${texNombre2(nombre)} \\\\times ${miseEnEvidence(texNombre2(10 ** coef), 'blue')} ~~=~~ ${texNombre2(resultat)}$`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(calcul(10 ** coef))}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul(10 ** (coef - 1)))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(10 ** (coef - 1)))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(10 ** (-coef)))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          break\n\n        case 3:\n          texte = `$\\\\ldots\\\\ldots\\\\ldots\\\\ldots \\\\times ${texNombre2(10 ** coef)}~~ = ~~${texNombre2(resultat)}$`\n          texteCorr = `Quand on multiplie par $${texNombre2(10 ** coef)}=${texFraction(1, 10 ** (-coef))}$ chaque chiffre prend une valeur $${texNombre2(10 ** (-coef))}$ fois plus petite.<br>`\n          texteCorr += `Le chiffre des unités se positionne donc dans les ${rang[3 + coef]} :<br>`\n          texteCorr = `$${miseEnEvidence(texNombre2(nombre), 'blue')} \\\\times ${texNombre2(10 ** coef)} = ${texNombre2(resultat)}$`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(nombre)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre / 10))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre * 10))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre * 10 ** (-coef + 1)))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          break\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  this.besoinFormulaireCaseACocher = ['Nombres entiers', true]\n  this.besoinFormulaire2Numerique = ['Type de question', 4, '1 : Résultat à calculer\\n 2 : Nombre à retrouver\\n 3 : Fraction décimale à retrouver\\n 4 : Alternance des 3 types de question']\n  // this.besoinFormulaire3CaseACocher =['Mode QCM',false]\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","MultiplierPar001","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","consigne","sup","sup2","nouvelleVersion","typeDeQuestionsDisponibles","parseInt","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","rang","texte","texteCorr","coef","nombre","nombreentier","resultat","exposant","i","cpt","randint","calcul","choice","texNombre2","texFraction","miseEnEvidence","autoCorrection","enonce","propositions","statut","options","ordered","lastChoice","interactif","propositionsQcm","indexOf","push","listeQuestionsToContenu","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}