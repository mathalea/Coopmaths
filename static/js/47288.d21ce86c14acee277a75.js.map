{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3F12-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","ImageFonctionAlgebrique","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","numeroExercice","parseInt","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","signesDeX","texte","texteCorr","a","b","c","d","expression","nomdef","x","i","cpt","randint","lettreMinusculeDepuisChiffre","ecritureParentheseSiNegatif","setReponse","ecritureAlgebrique","texFractionReduite","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/47288.d21ce86c14acee277a75.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif, texFractionReduite, lettreMinusculeDepuisChiffre } from '../../modules/outils.js'\nimport { setReponse, ajouteChampTexteMathLive } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Déterminer l’image d’un nombre par une fonction d’après sa forme algébrique'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n* Déterminer l'image d'un nombre par une fonction d'après sa forme algébrique\n*\n* * Niveau 1 : Fonctions affines\n* * Niveau 2 : Polynôme du second degré\n* * Niveau 3 : Quotients de fonctions affines\n* * Niveau 4 : (ax+b)(cx+d)\n* * Niveau 5 : Mélange\n* @author Rémi Angot\n* 3F12-2\n*/\nexport default function ImageFonctionAlgebrique () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = ''\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 5 // niveau de difficulté\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typesDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = ['ax+b', 'ax-b', '-ax+b', '-ax-b']\n    }\n    if (this.sup === 2) {\n      typesDeQuestionsDisponibles = ['ax2+bx+c', 'ax2+c', 'ax2+bx', '-ax2+bx-c', '-ax2-bx-c', '-ax2-bx+c', '-ax2-bx']\n    }\n    if (this.sup === 3) {\n      typesDeQuestionsDisponibles = ['a/cx+d', 'ax+b/cx+d']\n    }\n    if (this.sup === 4) {\n      typesDeQuestionsDisponibles = ['(ax+b)(cx+d)', '(ax+b)2']\n    }\n    if (this.sup === 5) {\n      typesDeQuestionsDisponibles = ['ax+b', 'ax-b', '-ax+b', 'ax2+bx+c', '-ax2+bx-c', '-ax2-bx', 'a/cx+d', 'ax+b/cx+d', '(ax+b)(cx+d)', '(ax+b)2']\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const signesDeX = combinaisonListes([true, false], this.nbQuestions)\n    for (let i = 0, texte, texteCorr, a, b, c, d, expression, nomdef, x, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      x = randint(1, 12)\n      if (signesDeX[i]) {\n        x = -1 * x\n      }\n      a = randint(2, 11)\n      b = randint(2, 11)\n      c = randint(2, 11)\n      nomdef = lettreMinusculeDepuisChiffre(6 + i) // on commence par f puis on continue dans l'ordre alphabétique\n      switch (listeTypeDeQuestions[i]) {\n        case 'ax+b':\n          expression = `${a}x+${b}`\n          texteCorr = `$${nomdef}(${x})=${a}\\\\times ${ecritureParentheseSiNegatif(x)}+${b}=${a * x}+${b}=${a * x + b}$`\n          setReponse(this, i, a * x + b)\n          break\n        case 'ax-b':\n          expression = `${a}x-${b}`\n          texteCorr = `$${nomdef}(${x})=${a}\\\\times ${ecritureParentheseSiNegatif(x)}-${b}=${a * x}-${b}=${a * x - b}$`\n          setReponse(this, i, a * x - b)\n          break\n        case '-ax+b':\n          expression = `-${a}x+${b}`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}+${b}=${-1 * a * x}+${b}=${-1 * a * x + b}$`\n          setReponse(this, i, -1 * a * x + b)\n          break\n        case '-ax-b':\n          expression = `-${a}x-${b}`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}-${b}=${-1 * a * x}-${b}=${-1 * a * x - b}$`\n          setReponse(this, i, -1 * a * x - b)\n          break\n        case 'ax2+bx+c':\n          expression = `${a}x^2+${b}x+${c}`\n          texteCorr = `$${nomdef}(${x})=${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2+${b}\\\\times ${ecritureParentheseSiNegatif(x)}+${c}=${a}\\\\times${x * x}${ecritureAlgebrique(b * x)}+${c}=${a * x * x}${ecritureAlgebrique(b * x)}+${c}=${a * x * x + b * x + c}$`\n          setReponse(this, i, a * x * x + b * x + c)\n          break\n        case 'ax2+c':\n          expression = `${a}x^2+${c}`\n          texteCorr = `$${nomdef}(${x})=${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2+${c}=${a}\\\\times${x * x}+${c}=${a * x * x}+${c}=${a * x * x + c}$`\n          setReponse(this, i, a * x * x + c)\n          break\n        case 'ax2+bx':\n          expression = `${a}x^2+${b}x`\n          texteCorr = `$${nomdef}(${x})=${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2+${b}\\\\times ${ecritureParentheseSiNegatif(x)}=${a}\\\\times${x * x}${ecritureAlgebrique(b * x)}=${a * x * x}${ecritureAlgebrique(b * x)}=${a * x * x + b * x}$`\n          setReponse(this, i, a * x * x + b * x)\n          break\n        case '-ax2+bx-c':\n          expression = `-${a}x^2+${b}x-${c}`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2+${b}\\\\times ${ecritureParentheseSiNegatif(x)}-${c}=-${a}\\\\times${x * x}${ecritureAlgebrique(b * x)}-${c}=${-1 * a * x * x}${ecritureAlgebrique(b * x)}-${c}=${-1 * a * x * x + b * x - c}$`\n          setReponse(this, i, -1 * a * x * x + b * x - c)\n          break\n        case '-ax2-bx-c':\n          expression = `-${a}x^2-${b}x-${c}`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2-${b}\\\\times ${ecritureParentheseSiNegatif(x)}-${c}=-${a}\\\\times${x * x}${ecritureAlgebrique(-1 * b * x)}-${c}=${-1 * a * x * x}${ecritureAlgebrique(-1 * b * x)}-${c}=${-1 * a * x * x - b * x - c}$`\n          setReponse(this, i, -1 * a * x * x - b * x - c)\n          break\n        case '-ax2-bx+c':\n          expression = `-${a}x^2-${b}x+${c}`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2-${b}\\\\times ${ecritureParentheseSiNegatif(x)}+${c}=-${a}\\\\times${x * x}${ecritureAlgebrique(-1 * b * x)}+${c}=${-1 * a * x * x}${ecritureAlgebrique(-1 * b * x)}+${c}=${-1 * a * x * x - b * x + c}$`\n          setReponse(this, i, -1 * a * x * x - b * x + c)\n          break\n        case '-ax2-bx':\n          expression = `-${a}x^2-${b}x`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2-${b}\\\\times ${ecritureParentheseSiNegatif(x)}=-${a}\\\\times${x * x}${ecritureAlgebrique(-1 * b * x)}=${-1 * a * x * x}${ecritureAlgebrique(-1 * b * x)}=${-1 * a * x * x - b * x}$`\n          setReponse(this, i, -1 * a * x * x - b * x)\n          break\n        case 'a/cx+d':\n          d = randint(1, 11)\n          while (c * x + d === 0) {\n            c = randint(2, 11)\n          }\n          expression = `\\\\dfrac{${a}}{${c}x+${d}}`\n          texteCorr = `$${nomdef}(${x})=\\\\dfrac{${a}}{${c}\\\\times${ecritureParentheseSiNegatif(x)}+${d}}=\\\\dfrac{${a}}{${c * x}+${d}}=\\\\dfrac{${a}}{${c * x + d}}=${texFractionReduite(a, c * x + d)}$`\n          setReponse(this, i, texFractionReduite(a, c * x + d))\n          break\n        case 'ax+b/cx+d':\n          d = randint(1, 11)\n          while (c * x + d === 0) {\n            c = randint(2, 11)\n          }\n          while (a * x + b === 0) {\n            a = randint(2, 11)\n          }\n          expression = `\\\\dfrac{${a}x+${b}}{${c}x+${d}}`\n          texteCorr = `$${nomdef}(${x})=\\\\dfrac{${a}\\\\times${ecritureParentheseSiNegatif(x)}+${b}}{${c}\\\\times${ecritureParentheseSiNegatif(x)}+${d}}=\\\\dfrac{${a * x}+${b}}{${c * x}+${d}}=\\\\dfrac{${a * x + b}}{${c * x + d}}=${texFractionReduite(a * x + b, c * x + d)}$`\n          setReponse(this, i, texFractionReduite(a * x + b, c * x + d))\n          break\n        case '(ax+b)(cx+d)':\n          a = randint(-4, 4, [0, 1, -1])\n          b = randint(-4, 4, [0])\n          c = randint(-4, 4, [0, 1, -1])\n          d = randint(-4, 4, [0])\n          x = randint(-2, 2, [0])\n\n          expression = `(${a}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})`\n          texteCorr = `$${nomdef}(${x})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${c}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(d)}\\\\right)=(${a * x}${ecritureAlgebrique(b)})(${c * x}${ecritureAlgebrique(d)})=${a * x + b}\\\\times${ecritureParentheseSiNegatif(c * x + d)}=${(a * x + b) * (c * x + d)}$`\n          setReponse(this, i, (a * x + b) * (c * x + d))\n          break\n        case '(ax+b)2':\n          a = randint(-4, 4, [0, -1, 1])\n          b = randint(-4, 4, [0])\n          c = randint(-4, 4, [0, -1, 1])\n          d = randint(-4, 4, [0])\n          x = randint(-2, 2, [0])\n\n          expression = `(${a}x${ecritureAlgebrique(b)})^2`\n          texteCorr = `$${nomdef}(${x})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}\\\\right)^2=(${a * x}${ecritureAlgebrique(b)})^2=${ecritureParentheseSiNegatif(a * x + b)}^2=${(a * x + b) * (a * x + b)}$`\n          setReponse(this, i, (a * x + b) * (a * x + b))\n          break\n      }\n\n      texte = `On considère la fonction $${nomdef}$ définie par $${nomdef}:x\\\\mapsto ${expression}$. Calculer $${nomdef}(${x})$.`\n      texte += ajouteChampTexteMathLive(this, i)\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 5, '1 : Fonctions affines\\n2 : Polynome du second degré\\n3 : Quotient\\n4 : Produit \\n5 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}