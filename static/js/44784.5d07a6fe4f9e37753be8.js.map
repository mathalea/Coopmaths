{"version":3,"file":"js/44784.5d07a6fe4f9e37753be8.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/c3/c3N20.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, texNombrec, choice, calcul } from '../../modules/outils.js'\nimport { setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Donner l’écriture décimale à partir d’un somme d’entiers et de fractions décimales'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\n/**\n * Description didactique de l'exercice\n * @author Benjamin Angot\n * Référence C3N20\n * 2021-03-24\n*/\n\nexport default function NomQuelconqueDeLaFonctionQuiCreeExercice () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Donner l'écriture décimale des nombres suivants.\"\n  this.nbQuestions = 6\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.sup = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typesDeQuestionsDisponibles = ['type1', 'type2', 'type3', 'type4', 'type5', 'type6'] // On créé 3 types de questions\n    if (parseInt(this.sup) === 1) {\n      typesDeQuestionsDisponibles = ['type1', 'type5']\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    for (let i = 0, a, b, c, texte, texteCorr, reponse, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      a = choice([randint(1, 9), randint(1, 9), randint(10, 99)])\n      b = randint(1, 9, [a])\n      c = randint(1, 9, [a, b]) // Tous les chiffres doivent être différents\n      switch (listeTypeDeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'type1':\n          texte = `$${a} + \\\\dfrac{${b}}{10} + \\\\dfrac{${c}}{100}$`\n          texteCorr = `$${a} + \\\\dfrac{${b}}{10} + \\\\dfrac{${c}}{100} = ${texNombrec(a + b / 10 + c / 100)} $`\n          reponse = calcul(a + b / 10 + c / 100)\n          break\n        case 'type2':\n          texte = `$${a} + \\\\dfrac{${c}}{100} + \\\\dfrac{${b}}{10} $`\n          texteCorr = `$${a} + \\\\dfrac{${c}}{100} + \\\\dfrac{${b}}{10}  = ${texNombrec(a + b / 10 + c / 100)} $`\n          reponse = calcul(a + b / 10 + c / 100)\n          break\n        case 'type3':\n          texte = `$\\\\dfrac{${c}}{100} + \\\\dfrac{${b}}{10} + ${a}$`\n          texteCorr = `$\\\\dfrac{${c}}{100} + \\\\dfrac{${b}}{10} + ${a} = ${texNombrec(a + b / 10 + c / 100)} $`\n          reponse = calcul(a + b / 10 + c / 100)\n          break\n        case 'type4':\n          texte = `$\\\\dfrac{${c}}{100} + ${a} + \\\\dfrac{${b}}{10} $`\n          texteCorr = `$\\\\dfrac{${c}}{100} + ${a} + \\\\dfrac{${b}}{10}  = ${texNombrec(a + b / 10 + c / 100)} $`\n          reponse = calcul(a + b / 10 + c / 100)\n          break\n        case 'type5':\n          texte = `$${a} + \\\\dfrac{${b}}{100}$`\n          texteCorr = `$${a} + \\\\dfrac{${b}}{100} = ${texNombrec(a + b / 100)}$`\n          reponse = calcul(a + b / 100)\n          break\n        case 'type6':\n          texte = `$\\\\dfrac{${b}}{100} + ${a}$`\n          texteCorr = `$\\\\dfrac{${b}}{100} + ${a} = ${texNombrec(a + b / 100)}$`\n          reponse = calcul(a + b / 100)\n          break\n      }\n\n      if (this.questionJamaisPosee(i, a, b, c)) {\n        setReponse(this, i, reponse)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : L\\'ordre est respecté\\n 2 : L\\'ordre des termes est aléatoire']\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","NomQuelconqueDeLaFonctionQuiCreeExercice","sup","typesDeQuestionsDisponibles","parseInt","listeTypeDeQuestions","combinaisonListes","a","b","c","texte","texteCorr","reponse","cpt","choice","randint","texNombrec","calcul","setReponse","listeQuestionsToContenu"],"sourceRoot":""}