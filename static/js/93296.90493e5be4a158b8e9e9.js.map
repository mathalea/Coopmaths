{"version":3,"file":"js/93296.90493e5be4a158b8e9e9.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F21-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, ecritureAlgebrique, randint, reduireAxPlusB, texNombre, katexPopup2 } from '../../modules/outils.js'\nimport { droiteParPointEtPente, point, repere2, mathalea2d } from '../../modules/2d.js'\nimport { setReponse, ajouteChampTexteMathLive } from '../../modules/gestionInteractif.js'\nexport const titre = 'Déterminer une fonction affine'\nexport const amcReady = true\nexport const amcType = 'AMCOpenNum✖︎2'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Trace 5 droites et demande l'expression de la fonction affine ou linéaire correspondante\n * @author Jean-Claude Lhote\n * Référence : 3F21-1\n */\nexport default function LectureExpressionFonctionsAffines () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  context.isHtml ? this.spacing = 2 : this.spacing = 1\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1\n  this.sup = 1\n  this.sup2 = 3\n  this.lineaire = false\n  this.amcReady = amcReady\n  this.amcType = amcType\n\n  this.nouvelleVersion = function (numeroExercice) {\n    let explain = ''\n    let k = Math.pow(2, parseInt(this.sup) - 1)\n    let nbDroites = parseInt(this.sup2)\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    const listeDroites = []\n    context.fenetreMathalea2d = [-5.5, -5.5, 5.5, 5.5]\n    const pente = []\n    let OrdX0\n    if (context.isAmc) {\n      nbDroites = 1\n      k = 1\n    }\n    pente.push(randint(-3 * k, 3 * k, 0))\n    pente.push(randint(-3 * k, 3 * k, [pente[0], 0]))\n    pente.push(randint(-3 * k, 3 * k, [pente[0], pente[1], 0]))\n    pente.push(randint(-3 * k, 3 * k, [pente[0], pente[1], pente[2], 0]))\n    pente.push(randint(-3 * k, 3 * k, [pente[0], pente[1], pente[2], pente[3], 0]))\n    const d = []\n    for (let i = 0; i < 5; i++) {\n      if (this.lineaire) { OrdX0 = 0 } else { OrdX0 = randint(-1 + pente[i] / k, 1 + pente[i] / k, [pente[i], 0]) }\n      listeDroites.push([OrdX0, pente[i] / k])\n    }\n    d[0] = droiteParPointEtPente(point(0, listeDroites[0][0]), listeDroites[0][1], '(d_1)', 'blue')\n    d[1] = droiteParPointEtPente(point(0, listeDroites[1][0]), listeDroites[1][1], '(d_2)', 'red')\n    d[2] = droiteParPointEtPente(point(0, listeDroites[2][0]), listeDroites[2][1], '(d_3)', 'green')\n    d[3] = droiteParPointEtPente(point(0, listeDroites[3][0]), listeDroites[3][1], '(d_4)', 'brown')\n    d[4] = droiteParPointEtPente(point(0, listeDroites[4][0]), listeDroites[4][1], '(d_5)', 'purple')\n    const r = repere2({ xMin: -6, yMin: -6, xMax: 6, yMax: 6 })\n    const objets2d = []\n    objets2d.push(r)\n    for (let i = 0; i < nbDroites; i++) {\n      objets2d.push(d[i])\n    }\n\n    this.introduction = mathalea2d({ xmin: -5.5, ymin: -5.5, xmax: 5.5, ymax: 5.5, pixelsParCm: 30, scale: 0.75 }, objets2d)\n    for (let i = 0; i < nbDroites; i++) {\n      this.listeQuestions.push(`Déterminer l'expression de la fonction $f_${i + 1}$ représentée par la droite $(d_${i + 1})$.` + ajouteChampTexteMathLive(this, i))\n      if (this.lineaire || listeDroites[i][0] === 0) {\n        explain += `La droite $(d_${i + 1})$ passe par l'origine. Elle représente donc la fonction linéaire $f_${i + 1}(x)=ax$ dont il faut déterminer le coefficient a.<br>$(d_${i + 1})$ passe par le point de coordonnées $(1;${texNombre(listeDroites[i][1])})$ donc $f_${i + 1}(1)=${texNombre(listeDroites[i][1])}$ c'est-à-dire $a\\\\times 1=${texNombre(listeDroites[i][1])}$ donc $a=${texNombre(listeDroites[i][1])}\\\\div 1$ d'où $a=${texNombre(listeDroites[i][1])}$. Ainsi $f_${i + 1}(x)=${reduireAxPlusB(listeDroites[i][1], 0)}$.`\n        this.listeCorrections.push(`La droite $(d_${i + 1})$ passe par l'origine. Elle représente donc la fonction linéaire $f_${i + 1}(x)=ax$ dont il faut déterminer le coefficient a.<br>$(d_${i + 1})$ passe par le point de coordonnées $(1;${texNombre(listeDroites[i][1])})$ donc $f_${i + 1}(1)=${texNombre(listeDroites[i][1])}$ c'est-à-dire $a\\\\times 1=${texNombre(listeDroites[i][1])}$ donc $a=${texNombre(listeDroites[i][1])}\\\\div 1$ d'où $a=${texNombre(listeDroites[i][1])}$. Ainsi $f_${i + 1}(x)=${reduireAxPlusB(listeDroites[i][1], 0)}$.`)\n        setReponse(this, i, reduireAxPlusB(listeDroites[i][1], 0))\n      } else {\n        explain += `La droite $d_${i + 1}$ passe par le point de coordonnées $(0;${texNombre(listeDroites[i][0])})$. Elle représente donc la fonction affine $f_${i + 1}(x)=ax+b$ dont la constante $b$ est égale à $f_${i + 1}(0)=a\\\\times 0+b$, c'est-à-dire  $${texNombre(listeDroites[i][0])}=0+b$ donc $b=${texNombre(listeDroites[i][0])}$.<br> De plus $(d_${i + 1})$ passe par le point de coordonnées $(1;${texNombre(listeDroites[i][1] + listeDroites[i][0])})$ donc $f_${i + 1}(1)=${texNombre(listeDroites[i][1] + listeDroites[i][0])}=a\\\\times 1${ecritureAlgebrique(listeDroites[i][0])}=a${ecritureAlgebrique(listeDroites[i][0])}$ donc $a=${texNombre(listeDroites[i][1] + listeDroites[i][0])}${ecritureAlgebrique(-listeDroites[i][0])}=${texNombre(listeDroites[i][1])}$. Ainsi $f_${i + 1}(x)=${reduireAxPlusB(listeDroites[i][1], listeDroites[i][0])}$.`\n        this.listeCorrections.push(`La droite $d_${i + 1}$ passe par le point de coordonnées $(0;${texNombre(listeDroites[i][0])})$. Elle représente donc la fonction affine $f_${i + 1}(x)=ax+b$ dont la constante $b$ est égale à $f_${i + 1}(0)=a\\\\times 0+b$, c'est-à-dire  $${texNombre(listeDroites[i][0])}=0+b$ donc $b=${texNombre(listeDroites[i][0])}$.<br> De plus $(d_${i + 1})$ passe par le point de coordonnées $(1;${texNombre(listeDroites[i][1] + listeDroites[i][0])})$ donc $f_${i + 1}(1)=${texNombre(listeDroites[i][1] + listeDroites[i][0])}=a\\\\times 1${ecritureAlgebrique(listeDroites[i][0])}=a${ecritureAlgebrique(listeDroites[i][0])}$ donc $a=${texNombre(listeDroites[i][1] + listeDroites[i][0])}${ecritureAlgebrique(-listeDroites[i][0])}=${texNombre(listeDroites[i][1])}$. Ainsi $f_${i + 1}(x)=${reduireAxPlusB(listeDroites[i][1], listeDroites[i][0])}$.`)\n        setReponse(this, i, reduireAxPlusB(listeDroites[i][1], listeDroites[i][0]))\n      }\n    }\n    listeQuestionsToContenu(this)\n    if (!this.lineaire) {\n      explain = 'Il s’agit de fonctions affines, elles sont donc de la forme $f(x)=ax+b$, $b$ étant l’ordonnée à l’origine et $a$ la pente de la droite.\\\\\\n' + explain\n      this.contenuCorrection = 'Il s’agit de fonctions affines, elles sont donc de la forme $f(x)=ax+b$, $b$ étant l’ordonnée à l’origine et $a$ la pente de la droite.\\n' + this.contenuCorrection\n    } else {\n      explain = 'Il s’agit de fonctions linéaires, elles sont donc de la forme $f(x)=ax$, $a$ étant la pente de la droite.\\\\ \\n' + explain\n      this.contenuCorrection = 'Il s’agit de fonctions linéaires, elles sont donc de la forme $f(x)=ax$, $a$ étant la ' + katexPopup2(numeroExercice, 1, 'pente', 'pente d\\'une droite', 'La pente (le a de y=ax ou y=ax+b) d\\'une droite donne le taux d\\'accroissement de y par rapport à x : lorsque x augmente de 1, alors y augmente de a.') + ' de la droite.\\n' + this.contenuCorrection\n    }\n    if (context.isAmc) {\n      this.autoCorrection[0] = {\n        enonce: \"Déterminer l'expression  de la fonction représentée ci dessous : <br>\" + mathalea2d({ xmin: -5.5, ymin: -5.5, xmax: 5.5, ymax: 5.5, pixelsParCm: 30, scale: 0.5 }, objets2d) + '<br>',\n        propositions: [{ texte: explain, statut: 2 }],\n        reponse: { texte: 'coefficient', valeur: pente[0], param: { digits: 1, decimals: 0, signe: true, exposantNbChiffres: 0, exposantSigne: false, approx: 0 } },\n        reponse2: { texte: \"ordonnée \\\\\\\\\\nà l'origine\", valeur: listeDroites[0][0], param: { digits: 1, decimals: 0, signe: true, exposantNbChiffres: 0, exposantSigne: false, approx: 0 } }\n      }\n    }\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, \"1 : Coefficient directeur entier\\n2 : Coefficient directeur 'en demis'\\n3 : Coefficient directeur 'en quarts'\"]\n  this.besoinFormulaire2Numerique = ['Nombre de droites (1 à 5)', 5]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","amcType","interactifReady","interactifType","LectureExpressionFonctionsAffines","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","context","spacing","spacingCorr","sup","sup2","lineaire","nouvelleVersion","numeroExercice","explain","k","Math","pow","parseInt","nbDroites","listeQuestions","listeCorrections","autoCorrection","contenu","contenuCorrection","listeDroites","pente","OrdX0","push","randint","d","i","droiteParPointEtPente","point","r","repere2","xMin","yMin","xMax","yMax","objets2d","introduction","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","ajouteChampTexteMathLive","texNombre","reduireAxPlusB","setReponse","ecritureAlgebrique","listeQuestionsToContenu","katexPopup2","enonce","propositions","texte","statut","reponse","valeur","param","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","reponse2","besoinFormulaireNumerique","besoinFormulaire2Numerique","boutonAide","consigneCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}