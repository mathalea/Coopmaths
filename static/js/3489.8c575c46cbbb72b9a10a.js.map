{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G23-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/modules/gestionQcm.js"],"names":["amcReady","amcType","titre","MesurerUnAngle","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","video","qcmDisponible","modeQcm","nouvelleVersion","tabrep","tabicone","angle","anglerot","Apos","Bpos","Cpos","p","texte","texteCorr","A","B","C","s2","s1","bis","parseInt","qcm","listeQuestions","listeCorrections","signes","labels","secteur","xMin","xMax","yMin","yMax","objetsEnonce","objetsCorrection","secteur0","i","push","choice","randint","Math","round","elimineDoublons","lettreDepuisChiffre","point","rotation","texteParPoint","similitude","homothetie","demiDroite","pointSurSegment","labelPoint","afficheMesureAngle","min","x","max","y","mathalea","fenetreMathalea2d","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","shuffle2tableaux","sortieAMC","tableauSolutionsDuQcm","propositionsQcm","numeroExercice","listeQuestionsToContenu","gestionQcmInteractif","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","tailleDiaporama","pasDeVersionLatex","autoCorrection","mg32Editable","listePackages","exercice","document","addEventListener","$","checkbox","button","querySelector","event","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","reduce","a","b","spanReponseLigne","forEach","solution","rep","label","check","style","backgroundColor","checked","innerHTML","color","fontSize","querySelectorAll","uicheck","classList","add","espace","sortieHtml","length","reponses","statuts","reponsesEpurees","slice","statutsEpures","j","console","log","splice"],"mappings":"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","file":"js/3489.8c575c46cbbb72b9a10a.js","sourcesContent":["/* global mathalea */\nimport Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenu, randint, choice, lettreDepuisChiffre, shuffle2tableaux } from '../../modules/outils.js'\nimport { point, labelPoint, rotation, mathalea2d, afficheMesureAngle, homothetie, demiDroite, texteParPoint, similitude, pointSurSegment } from '../../modules/2d.js'\nimport { gestionQcmInteractif, propositionsQcm,elimineDoublons } from '../../modules/gestionQcm.js'\n\nexport const amcReady = true\nexport const amcType = 1 // type de question AMC\n\nexport const titre = 'Mesurer un angle'\n\n/**\n * Construire un angle\n * @Auteur Jean-Claude Lhote\n * Référence 6G23\n */\nexport default function MesurerUnAngle () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbQuestionsModifiable = true\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1\n  this.video = 'TEzu9uky56M'\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.qcm = ['6G23-1', [], \"Estimer la mesure d'un angle.\", 1]\n    let tabrep, tabicone\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let angle; let anglerot; let Apos; let Bpos; let Cpos; let p; let texte; let texteCorr; let A; let B; let C; let s2; let s1; let bis; const signes = []\n    let labels, secteur, xMin, xMax, yMin, yMax, objetsEnonce, objetsCorrection, secteur0\n\n    for (let i = 0; i < this.nbQuestions; i++) {\n      signes.push(choice([-1, 1]))\n      if (this.sup === 1) {\n        angle = randint(2, 16, 9) * 10\n      } else if (this.sup === 2) {\n        angle = randint(4, 32, 18) * 5\n      } else {\n        angle = randint(20, 160, 90)\n      }\n      tabrep = [`$${angle}\\\\degree$`, `$${180 - angle}\\\\degree$`, `$${angle / 2}\\\\degree$`, `$${Math.round((180 + angle) / 2)}\\\\degree$`, '$180\\\\degree$', '$90\\\\degree$']\n      tabicone = [1, 0, 0, 0, 0, 0];\n      [tabrep, tabicone] = elimineDoublons(tabrep, tabicone)\n      anglerot = randint(-180, 180)\n      angle = signes[i] * angle\n      p = [choice(['x', 'y', 'z', 't']), lettreDepuisChiffre(randint(1, 16)), choice(['s', 'u', 'v', 'w'])]\n      if (this.modeQcm) {\n        texte = `Estime la mesure de l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$ sans instrument.<br>`\n      } else {\n        texte = `Mesure l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$.<br>`\n      }\n      A = point(0, 0)\n      B = point(6, 0)\n      B = rotation(B, A, anglerot)\n\n      // texte, A, orientation = \"milieu\", color = 'black', scale = 1, ancrageDeRotation = \"middle\", math_on = false\n      Bpos = texteParPoint(p[0], similitude(A, homothetie(B, A, 0.95), signes[i] * 90, 0.1), 'milieu', 'black', 1, 'middle', true)\n      s1 = demiDroite(A, B)\n      C = rotation(B, A, angle)\n      bis = rotation(B, A, angle / 2)\n      Apos = texteParPoint(p[1], pointSurSegment(A, bis, -0.5), 'milieu', 'black', 1, 'middle', true)\n      Cpos = texteParPoint(p[2], similitude(A, homothetie(C, A, 0.95), -signes[i] * 90, 0.1), 'milieu', 'black', 1, 'middle', true)\n      s2 = demiDroite(A, C)\n      labels = labelPoint(A, B, C)\n      secteur = afficheMesureAngle(B, A, C)\n      secteur0 = afficheMesureAngle(B, A, C, 'black', 1.5, ' ')\n      texteCorr = ''\n      xMin = Math.min(A.x, C.x, B.x) - 1\n      xMax = Math.max(A.x, C.x, B.x) + 1\n      yMin = Math.min(A.y, C.y, B.y) - 1\n      yMax = Math.max(A.y, C.y, B.y) + 1\n      mathalea.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n      objetsEnonce = [s1, s2, labels, Apos, Bpos, Cpos, secteur0]\n      objetsCorrection = [s1, s2, labels, Apos, Bpos, Cpos, secteur]\n      texte += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.8 }, objetsEnonce)\n      texteCorr += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection)\n      /**********************************************/\n      // Ajout pour AMC\n      this.qcm[1].push([`${texte}\\\\\\\\ \\n Réponses possibles : `,\n        tabrep,\n        tabicone])\n      /********************************************/\n      shuffle2tableaux(tabrep, tabicone)\n      if (this.modeQcm && !mathalea.sortieAMC) {\n        this.tableauSolutionsDuQcm[i] = tabicone\n        texte += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n        texteCorr += '<br><br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  gestionQcmInteractif(this)\n  this.besoinFormulaireNumerique = ['Précision de l\\'angle', 3, '1 : Angle à 10°\\n2 : Angle à 5°\\n3 : Angle à 1°']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ mathalea sortieHtml */\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function gestionQcmInteractif (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          const nbBonnesReponsesAttendues = exercice.tableauSolutionsDuQcm[i].reduce((a, b) => a + b, 0)\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.tableauSolutionsDuQcm[i].forEach((solution, rep) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${rep}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${rep}`)\n            if (solution === 1) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n            }\n          })\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '✔︎'\n            spanReponseLigne.style.color = 'green'\n          } else {\n            spanReponseLigne.innerHTML = '✖︎'\n            spanReponseLigne.style.color = 'red'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (numeroExercice, i, tabrep, tabicone) {\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (sortieHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  if (!mathalea.sortieAMC) {\n    if (sortieHtml) {\n      texte += `<br>  <form id=\"formEx${numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < tabrep.length; rep++) {\n      if (sortieHtml) {\n        texte += `<div class=\"ui checkbox ex${numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${numeroExercice}Q${i}R${rep}\">${tabrep[rep] + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n      if (tabicone[rep] === 1) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[rep]}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n    }\n    if (sortieHtml) {\n      texte += `<span id=\"resultatCheckEx${numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un objet {reponse=[a,b,c,d,e],statuts=[1,0,0,0,0]}\n * élimine les doublons de réponses et les statuts associés avant de retourner l'objet épuré.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (reponses, statuts) { // fonction qui va éliminer les doublons si il y en a\n  const reponsesEpurees = reponses.slice()\n  const statutsEpures = statuts.slice()\n  for (let i = 0; i < reponsesEpurees.length - 1; i++) {\n    for (let j = i + 1; j < reponsesEpurees.length;) {\n      if (reponsesEpurees[i] === reponsesEpurees[j]) {\n        console.log('doublon trouvé', reponsesEpurees[i], reponsesEpurees[j]) // les réponses i et j sont les mêmes\n\n        if (statutsEpures[i] === 1) { // si la réponse i est bonne, on vire la j\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n        } else if (statutsEpures[j] === 1) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n          statutsEpures[i] = 1\n        } else { // Les deux réponses sont mauvaises\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return [reponsesEpurees, statutsEpures]\n}\n"],"sourceRoot":""}