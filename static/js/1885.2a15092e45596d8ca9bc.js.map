{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G25.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Construire_mediatrices_6e","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","result","texteCorr","texte","noms","choisitLettresDifferentes","marks","I","point","A","pointAdistance","randint","B","similitude","medA","droite","medB","dA","droiteParPointEtPerpendiculaire","dB","color","cA","cercle","calcul","cB","A1","pointIntersectionLC","A2","B1","B2","sA","segmentAvecExtremites","sB","cible","cellule","xMin","yMin","xMax","yMax","objets_enonce","objets_correction","nomA1","texteParPoint","homothetie","nomA2","nomB1","nomB2","rang","lettreDepuisChiffre","Number","toString","dansLaCibleCarree","x","y","cibleCarree","taille","opacite","push","tracePoint","labelPoint","codageMediatrice","Math","min","max","mathalea","fenetreMathalea2d","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1885.2a15092e45596d8ca9bc.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,calcul,choisitLettresDifferentes,lettreDepuisChiffre} from '../../modules/outils.js'\nimport {point,tracePoint,pointAdistance,labelPoint,droite,droiteParPointEtPerpendiculaire,codageMediatrice,segmentAvecExtremites,cercle,pointIntersectionLC,dansLaCibleCarree,cibleCarree,homothetie,similitude,texteParPoint,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Construire des médiatrices avec cible auto-corrective'\n\n/**\n * Construction de médiatrices avec dispositif d'auto-correction aléatoire\n * Ref 6G25\n * @Auteur Jean-Claude Lhote\n * Publié le 30/11/2020\n */\nexport default function Construire_mediatrices_6e() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 1;\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let result = [0, 0], texteCorr = \"\", texte = \"\", num1, num2\n   \n    let celluleAlea = function (rang) {\n      let lettre = lettreDepuisChiffre(randint(1, rang))\n      let chiffre = Number(randint(1, rang)).toString()\n      return lettre + chiffre\n    }\n    // On prépare la figure...\n    let noms = choisitLettresDifferentes(4, 'QI',true)\n    texte = `Construire la médiatrice $(d_1)$ du segment $[${noms[0]}${noms[1]}]$ et la médiatrice $(d_2)$ du segment $[${noms[2]}${noms[3]}]$.<br>`\n    texte += `Prolonger les droites $(d_1)$ et $(d_2)$ pour obtenir leur point d'intersection.<br>`\n    let marks = ['/', '//', '///', 'x', 'o', 'S', 'V']\n    let I = point(0, 0, 'I')\n    let A = pointAdistance(I, randint(3, 6))\n    let B = similitude(A, I, randint(65, 150), randint(8, 15) / 10)\n    let medA = droite(I, A, `(d_1)`), medB = droite(I, B, `(d_2)`)\n\n    let dA = droiteParPointEtPerpendiculaire(A, medA)\n    let dB = droiteParPointEtPerpendiculaire(B, medB)\n    medA.color = 'blue'\n    medB.color = 'green'\n    let cA = cercle(A, calcul(randint(25, 40) / 20))\n    let cB = cercle(B, calcul(randint(45, 60) / 20))\n    let A1 = pointIntersectionLC(dA, cA, noms[0], 1)\n    let A2 = pointIntersectionLC(dA, cA, noms[1], 2)\n    let B1 = pointIntersectionLC(dB, cB, noms[2], 1)\n    let B2 = pointIntersectionLC(dB, cB, noms[3], 2)\n    let sA = segmentAvecExtremites(A1, A2)\n    let sB = segmentAvecExtremites(B1, B2)\n    sA.color = 'black'\n    sB.color = 'black'\n\n\n    let cible, objets_enonce = [], objets_correction = [], cellule\n    let xMin, yMin, xMax, yMax\n    let nomA1 = texteParPoint(noms[0], homothetie(A1, A2, 1.1), 'milieu', 'black', 1, '', true)\n    let nomA2 = texteParPoint(noms[1], homothetie(A2, A1, 1.1), 'milieu', 'black', 1, '', true)\n    let nomB1 = texteParPoint(noms[2], homothetie(B1, B2, 1.1), 'milieu', 'black', 1, '', true)\n    let nomB2 = texteParPoint(noms[3], homothetie(B2, B1, 1.1), 'milieu', 'black', 1, '', true)\n\n    cellule = celluleAlea(6)\n    result = dansLaCibleCarree(I.x, I.y, 6, 0.6, cellule)\n    cible = cibleCarree({ x: result[0], y: result[1], rang: 6, taille: 0.6 })\n    cible.taille = 0.6\n    cible.color = 'orange'\n    cible.opacite = 0.7\n\n    objets_enonce.push(cible, sA, sB, nomA1, nomA2, nomB1, nomB2)\n    objets_correction.push(cible, sA, sB, tracePoint(I), labelPoint(I), nomA1, nomA2, nomB1, nomB2)\n    objets_correction.push(medA, medB, codageMediatrice(A1, A2, 'blue', marks[1]), codageMediatrice(B1, B2, 'green', marks[2]))\n\n    //      objets_correction.push(segment(M[i],N[i],arcenciel(i)),codageMediatrice(M[i],N[i],arcenciel(i+5),marks[i])) \n    //      objets_correction.push(traceCompas(A1,N[i],20),traceCompas(B,N[i],20))\n    texteCorr += `Le point $I$ d'intersection des deux médiatrices est dans la case ${cellule} de la grille.<br>`\n    xMin = Math.min(A1.x - 1, A2.x - 1, B1.x - 1, B2.x - 1, I.x - 4)\n    yMin = Math.min(A1.y - 1, A2.y - 1, B1.y - 1, B2.y - 1, I.y - 4)\n    xMax = Math.max(A1.x + 1, A2.x + 1, B1.x + 1, B2.x + 1, I.x + 4)\n    yMax = Math.max(A1.y + 1, A2.y + 1, B1.y + 1, B2.y + 1, I.y + 4)\n\n    mathalea.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n\n    this.listeQuestions.push(texte + mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objets_enonce))\n    this.listeCorrections.push(texteCorr + mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objets_correction))\n    listeQuestionsToContenu(this)\n  }\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}