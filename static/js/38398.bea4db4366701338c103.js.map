{"version":3,"file":"js/38398.bea4db4366701338c103.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5N15.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, texNombre2, arrondi, sp, personnes, personne, miseEnEvidence, combinaisonListes, texFraction, randint, numAlpha, choice, premiereLettreEnMajuscule, ppcm, calcul } from '../../modules/outils.js'\n\nexport const titre = 'Problèmes de ratio'\n\nexport default function ProblemeDeRatio () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  this.sup = 3\n  this.spacing = 2\n  this.spacingCorr = 3\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function () {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    this.autoCorrection = []\n    let prenoms = []\n    const objets = ['billes', 'livres', 'perles', 'gâteaux', 'bonbons']\n    const sirops = ['de fraise', 'de citron', 'de cerise', 'de menthe', 'd\\'orange']\n    const jusdefruit = ['d\\'annanas', 'de banane', 'de pamplemousse', 'd\\'abricot', 'de raisin']\n    const produits = ['produit d\\'entretien', 'décapant biologique', 'colorant', 'shampoing automobile', 'fertilisant liquide']\n    let article; let p1; let p2; let quidam; let index; let index2\n    const ratiosables = [[10, 6, 5], [7, 4, 4], [13, 7, 10]]\n    const ratiovinaigrette = [[2, 3], [3, 5], [4, 7]]\n    const ratioecran = [[16, 9], [4, 3], [21, 9], [16, 10]]\n    const resolutions = [[800, 600], [1024, 768], [1280, 720], [1280, 1024], [1366, 768], [1600, 900], [1680, 1050], [1920, 1080]]\n    const typeDeQuestionsDisponibles = ['partage', 'mélange', 'dilution', 'recette', 'ecran']\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, x, y, z, total, a, b, c, n = 2, k, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      index = randint(0, 10)\n      index2 = randint(0, 10)\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n      switch (parseInt(this.sup)) {\n        case 1:\n          x = randint(1, 5)\n          y = randint(1, 5, x)\n          z = 0\n          n = 2\n          break\n        case 2:\n          x = randint(1, 5)\n          y = randint(1, 5, x)\n          z = randint(1, 7, [x, y])\n          n = 3\n          break\n        case 3:\n          x = randint(1, 5)\n          y = randint(1, 5, x)\n          if (choice([true, false])) {\n            z = randint(1, 7, [x, y])\n            n = 3\n          } else {\n            n = 2\n            z = 0\n          }\n          break\n      }\n      k = randint(2, 6)\n      total = (x + y + z) * k\n      switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n        case 'partage':\n          prenoms = personnes(n)\n          for (let j = 0; j < n - 1; j++) {\n            if (j > 0) {\n              texte += ', '\n            }\n            texte += `${prenoms[j].prenom}`\n          }\n          texte += ` et ${prenoms[n - 1].prenom} se partagent $${total}$ ${objets[index % 5]} dans le ratio $~${x}~:~${y}$`\n          if (n === 3) {\n            texte += `$~:~${z}$`\n          }\n          texte += `.<br>Combien de ${objets[index % 5]} chaque enfant reçoit-il ?`\n          if (n === 2) {\n            texteCorr += `Si les enfants se partageaient $${x}+${y}=${x + y}$ ${objets[index % 5]} alors ${prenoms[0].prenom} en aurait $${x}$ et ${prenoms[1].prenom} en aurait $${y}$.`\n            texteCorr += `<br>Mais il y a $${total}$ ${objets[index % 5]}, soit $${miseEnEvidence(k)}\\\\times ${x + y + z}$ ${objets[index % 5]}.<br>`\n            texteCorr += `Donc ${prenoms[0].prenom} en aura $${miseEnEvidence(k)}\\\\times ${x}=${k * x}$ et ${prenoms[1].prenom} en aura $${miseEnEvidence(k)}\\\\times ${y}=${k * y}$.<br>`\n            texteCorr += `Conclusion : ${prenoms[0].prenom} aura $${k * x}$ ${objets[index % 5]} et ${prenoms[1].prenom} en aura $${k * y}$.`\n          } else {\n            texteCorr += `Si les enfants se partageaient $${x}+${y}+${z}=${x + y + z}$ ${objets[index % 5]} alors ${prenoms[0].prenom} en aurait $${x}$, ${prenoms[1].prenom} en aurait $${y}$ et ${prenoms[2].prenom} en aurait $${z}$.`\n            texteCorr += `<br>Mais il y a $${total}$ ${objets[index % 5]}, soit $${miseEnEvidence(k)}\\\\times ${x + y + z}$ ${objets[index % 5]}.<br>`\n            texteCorr += `Donc ${prenoms[0].prenom} en aura $${miseEnEvidence(k)}\\\\times ${x}=${k * x}$, ${prenoms[1].prenom} en aura $${miseEnEvidence(k)}\\\\times ${y}=${k * y}$ et  ${prenoms[2].prenom} en aura $${miseEnEvidence(k)}\\\\times ${z}=${k * z}$.<br>`\n            texteCorr += `Conclusion : ${prenoms[0].prenom} aura $${k * x}$ ${objets[index % 5]}, ${prenoms[1].prenom} en aura $${k * y}$ et  ${prenoms[2].prenom} en aura $${k * z}$.`\n          }\n          break\n        case 'mélange':\n          x = randint(1, 3)\n          y = x + randint(5, 7)\n          if (n === 3) {\n            z = y + randint(1, 3)\n          } else {\n            z = 0\n          }\n          total = ppcm(x + y + z, 20)\n          k = calcul(total / (x + y + z))\n          quidam = personne({})\n          article = quidam.pronom\n\n          if (n === 2) { // On mélange du sirop et de l'eau\n            texte += `${quidam.prenom} prépare un sirop à l'eau pour ses amis. ${premiereLettreEnMajuscule(article)} mélange du sirop ${sirops[index % 5]} et de l'eau dans le ratio $~${x}~:~${y}$.<br>`\n            if (choice([true, false])) {\n              texte += `${premiereLettreEnMajuscule(article)} désire préparer $${total}\\\\text{ cL} $ de boisson. Quelle quantité de sirop et d'eau doit-${article} mélanger ?`\n              texteCorr += `Si ${quidam.prenom} mélange selon le ratio donné $${x}\\\\text{ cL} $ de sirop ${sirops[index % 5]} et $${y}\\\\text{ cL} $ d'eau ${article} obtiendra $${x + y}\\\\text{ cL} $ de mélange.<br>`\n              texteCorr += `${premiereLettreEnMajuscule(article)} veut obtenir $${total}\\\\text{ cL} $ $=${miseEnEvidence(k)}\\\\times ${x + y}\\\\text{ cL} $.<br>`\n              texteCorr += `Donc pour cela, ${article} doit mélanger $${miseEnEvidence(k)}\\\\times ${x}\\\\text{ cL} $$=${k * x}\\\\text{ cL} $ de sirop ${sirops[index % 5]} et $${miseEnEvidence(k)}\\\\times ${y}\\\\text{ cL} $$=${k * y}\\\\text{ cL} $ d'eau`\n            } else {\n              texte += `${premiereLettreEnMajuscule(article)} verse $${k * x}\\\\text{ cL} $ de sirop ${sirops[index % 5]}. Quelle quantité d'eau doit-${article} ajouter et quelle quantité de boisson obtiendra-t-${article} ?`\n              texteCorr += `Pour cette boisson le sirop ${sirops[index % 5]} et l'eau sont dans un ratio de $${x}~:~${y}$<br>ce qui signifie que : `\n              texteCorr += `$${texFraction('\\\\text{Volume de sirop en cL}', x + '\\\\text{ cL}')}=${texFraction(\"\\\\text{Volume d'eau en cL}\", y + '\\\\text{ cL}')}$.<br>`\n              texteCorr += `Avec la valeur numérique : $${texFraction(k * x + '\\\\text{ cL}', x + '\\\\text{ cL}')}=${texFraction(\"\\\\text{Volume d'eau en cL}\", y + '\\\\text{ cL}')}$.<br>`\n              texteCorr += `${quidam.prenom} doit ajouter un volume d'eau de : $${texFraction(y + '\\\\times' + k * x, x)}=${y * k}\\\\text{ cL} $.`\n            }\n          } else { // On mélange du sirop, du jus de fruit et de la limonade.\n            texte += `${quidam.prenom} prépare un coktail à base de sirop  ${sirops[index % 5]}, de jus ${jusdefruit[index2 % 5]} et d'eau gazeuse pour ses amis. ${premiereLettreEnMajuscule(article)} mélange les trois ingrédients dans le ratio $~${x}~:~${y}~:~${z}$.<br>`\n            if (choice([true, false])) {\n              texte += `${premiereLettreEnMajuscule(article)} désire préparer $${total}\\\\text{ cL} $ de boisson. Quelle quantité de sirop, de jus et d'eau gazeuse doit-${article} mélanger ?`\n              texteCorr += `Si ${quidam.prenom} mélange selon le ratio donné $${x}\\\\text{ cL} $ de sirop ${sirops[index % 5]}, $${y}\\\\text{ cL} $ de jus ${jusdefruit[index2 % 5]} et $${z}\\\\text{ cL} $ d'eau gazeuse ${article} obtiendra $${x + y + z}\\\\text{ cL} $ de coktail.<br>`\n              texteCorr += `${premiereLettreEnMajuscule(article)} veut obtenir $${total}\\\\text{ cL} $ $=${miseEnEvidence(k)}\\\\times ${x + y + z}\\\\text{ cL} $ de coktail.<br>`\n              texteCorr += `Donc pour cela, ${article} doit mélanger $${miseEnEvidence(k)}\\\\times ${x}\\\\text{ cL} $$=${k * x}\\\\text{ cL} $ de sirop ${sirops[index % 5]}, $${miseEnEvidence(k)}\\\\times ${y}\\\\text{ cL} $$=${k * y}\\\\text{ cL} $ de jus ${jusdefruit[index2 % 5]} et $${miseEnEvidence(k)}\\\\times ${z}\\\\text{ cL} $$=${k * z}\\\\text{ cL} $ d'eau gazeuse.`\n            } else {\n              texte += `${premiereLettreEnMajuscule(article)} verse $${k * x}\\\\text{ cL} $ de sirop ${sirops[index % 5]}. Quelle quantité de jus ${jusdefruit[index2 % 5]} et d'eau gazeuse doit-${article} ajouter et quelle quantité de coktail obtiendra-t-${article} ?`\n              texteCorr += `Pour ce coktail le sirop ${sirops[index % 5]}, le jus ${jusdefruit[index2 % 5]} et l'eau gazeuse sont dans un ratio de $${x}~:~${y}~:~${z}$<br>`\n              texteCorr += `ce qui signifie que $${texFraction('\\\\text{Volume de sirop en cL}', x + '\\\\text{ cL}')}=${texFraction('\\\\text{Volume de jus de fruit en cL}', y + '\\\\text{ cL}')}=${texFraction(\"\\\\text{Volume d'eau gazeuse en cL}\", z + '\\\\text{ cL}')}$<br>`\n              texteCorr += `Avec la valeur numérique : $${texFraction(k * x + '\\\\text{ cL}', x + '\\\\text{ cL}')}=${texFraction('\\\\text{Volume de jus de fruit en cL}', y + '\\\\text{ cL}')}=${texFraction(\"\\\\text{Volume d'eau gazeuse en cL}\", z + '\\\\text{ cL}')}$.<br>`\n              texteCorr += `${quidam.prenom} en déduit que le volume de jus ${jusdefruit[index2 % 5]} est : $${texFraction(k * x + '\\\\times' + y, x)}\\\\text{ cL}=${y * k}\\\\text{ cL}$.<br>`\n              texteCorr += `Et le volume d'eau gazeuse est : $${texFraction(k * x + '\\\\times' + z, x)}\\\\text{ cL}=${z * k}\\\\text{ cL}$.<br>`\n            }\n          }\n          break\n\n        case 'dilution':\n          x = randint(1, 3)\n          y = randint(2 * x, 4 * x)\n          a = x + y\n          p1 = Math.round(x * 100 / a)\n          if (n === 3) { // Deux ratios de dilution : x:y x:z\n            z = randint(5 * x, 10 * x)\n            b = x + z\n            p2 = p1\n            p1 = Math.round(x * 100 / b)\n          }\n          k = randint(10, 20) * 10\n          texte += `Un ${produits[index % 5]} est vendu sous forme concentrée avec l'indication suivante sur le bidon :<br>`\n          if (n === 2) {\n            texte += `Diluer avec de l'eau à $${p1}\\\\%$ ($~${x}~:~${y}~$).<br>`\n            if (choice([true, false])) {\n              texte += `Montrer que le ratio correspond bien à la présence de $${p1}\\\\%$ de produit concentré dans le mélange final.`\n              texteCorr += `Une dilution selon le ratio $~${x}~:~${y}~$ signifie qu'on dilue $${x}$ unités de volume de ${produits[index % 5]} dans $${y}$ unités de volume d'eau.<br>`\n              texteCorr += `Ce qui fait donc un total de $${x + y}$ unités de volume de produit dilué.<br>`\n              texteCorr += `La proportion de ${produits[index % 5]} est donc : $${texFraction(x + '\\\\text{ unités de volume}', x + y + '\\\\text{ unités de volume}')}\\\\approx ${texNombre2(arrondi(x / (x + y)), 3)}$ soit environ $${Math.round(100 * x / (x + y))}\\\\%$`\n            } else {\n              total = k * (x + y)\n              texte += `Si on veut préparer $${total}\\\\text{ cL} $ de produit dilué, quel volume d\\`eau et de ${produits[index % 5]} faut-il mélanger ?`\n              texteCorr += `Selon le ratio donné, pour $${x}$ unités de volume de ${produits[index % 5]} il faut $${y}$ unités de volume d'eau soit au total un volume de $${x + y}$ unités de volume.<br>`\n              texteCorr += `Or $${total}\\\\text{ cL} $ $=${miseEnEvidence(k)}\\\\times ${x + y}$ donc il faut $${miseEnEvidence(k)}\\\\times ${x}=${k * x}\\\\text{ cL} $ de ${produits[index % 5]} et $${miseEnEvidence(k)}\\\\times ${y}=${k * y}\\\\text{ cL} $ d'eau.<br>`\n            }\n          } else {\n            texte += `Diluer avec de l'eau de $${p1}\\\\%$ à $${p2}\\\\%$ ( de $~${x}~:~${y}~$ à $~${x}~:~${z}~$).<br>`\n            if (choice([true, false])) {\n              texte += 'Montrer que les ratios proposés correspondent bien aux pourcentages de produit concentré dans le mélange final.'\n              texteCorr += `Une dilution selon le ratio $~${x}~:~${y}~$ signifie qu'on dilue $${x}$ unités de volume de ${produits[index % 5]} dans $${y}$ unités de volume d'eau.<br>`\n              texteCorr += `Ce qui fait donc un total de $${x}+${y}=${x + y}$ unités de volume de produit dilué.<br>`\n              texteCorr += `La proportion de ${produits[index % 5]} est donc : $${texFraction(x + '\\\\text{ unités de volume}', x + y + '\\\\text{ unités de volume}')}\\\\approx ${texNombre2(arrondi(x / (x + y)), 4)}$ soit environ $${Math.round(100 * x / (x + y))}\\\\%$<br>`\n              texteCorr += `De la même façon, selon le ratio $~${x}~:~${z}$, on obtient la proportion suivante :<br>`\n              texteCorr += `$${texFraction(x + '\\\\text{ unités de volume}', `(${x}+${z})\\\\text{ unités de volume}`)}=${texFraction(x, x + z)}\\\\approx ${texNombre2(arrondi(x / (x + z)), 4)}$ soit environ $${Math.round(100 * x / (x + z))}\\\\%$.<br>`\n              texteCorr += 'Conclusion : les pourcentages et les ratios annoncés correspondent bien.'\n            } else {\n              total = k * (x + y)\n              texte += ` ${numAlpha(0)} Si on veut préparer $${total}\\\\text{ cL} $ de produit dilué selon le ratio $~${x}~:~${y}$, quel volume d\\`eau et de ${produits[index % 5]} faut-il mélanger ?<br>`\n              texte += ` ${numAlpha(1)} Avec $${k * x}\\\\text{ cL} $ de ${produits[index % 5]}, quel volume d'eau faut-il ajouter pour obtenir un produit dilué selon le ratio $~${x}~:~${z}$ ?`\n              texteCorr += ` ${numAlpha(0)} Selon le ratio donné, pour $${x}$ unités de volume de ${produits[index % 5]} il faut $${y}$ unités de volume d'eau soit au total un volume de $${x + y}$ unités de volume.<br>`\n              texteCorr += `${sp(4)}Or $${total}\\\\text{ cL} $ $=${miseEnEvidence(k)}\\\\times ${x + y}$ donc il faut $${miseEnEvidence(k)}\\\\times ${x}=${k * x}\\\\text{ cL} $ de ${produits[index % 5]} et $${miseEnEvidence(k)}\\\\times ${y}=${k * y}\\\\text{ cL} $ d'eau.<br>`\n              texteCorr += ` ${numAlpha(1)} Le ratio $~${x}~:~${z}~$ pour le ${produits[index % 5]} signifie que :<br>`\n              texteCorr += `${sp(4)}$${texFraction(k * x + '\\\\text{ cL}', x + '\\\\text{ cL}')}=${texFraction(\"\\\\text{volume d'eau en cL}\", z + '\\\\text{ cL}')}=${miseEnEvidence(k)}$.<br>`\n              texteCorr += `${sp(4)}Donc il faut ajouter $${miseEnEvidence(k)}\\\\times ${z}\\\\text{ cL}=${k * z}\\\\text{ cL} $ d'eau pour obtenir une dilution selon le ratio $~${x}~:~${z}$`\n            }\n          }\n\n          break\n\n        case 'recette':\n          quidam = personne({})\n          if (n === 3) {\n            article = quidam.pronom\n            x = ratiosables[index % 3][0]\n            y = ratiosables[index % 3][1]\n            z = ratiosables[index % 3][2]\n            k = choice([10, 15, 20, 25])\n            total = (x + y + z) * k\n            texte += `${quidam.prenom} veut faire des sablés bretons. Pour cela ${article} doit réaliser un mélange de farine, de sucre et de beurre selon le ratio $~${x}~:~${y}~:~${z}$.<br>`\n            texte += `${numAlpha(0)} ${premiereLettreEnMajuscule(article)} dispose de $${k * z}\\\\text{ g}$ de beurre. Quelle masse de farine et de sucre doit-${article} utiliser si ${article} utilise tout le beurre disponible ?<br>`\n            texte += `${numAlpha(1)} Quelle sera alors la masse totale du \"sable\" produit ?`\n            texteCorr += `${numAlpha(0)} La farine, le sucre et le beurre respecte le ratio $~${x}~:~${y}~:~${z}$, ce qui signifie :<br>`\n            texteCorr += `$${texFraction('\\\\text{masse de farine en gramme}', x + '\\\\text{ g}')}=${texFraction('\\\\text{masse de sucre en gramme}', y + '\\\\text{ g}')}=${texFraction(`${k * z}\\\\text{ g}`, `${z}\\\\text{ g}`)}=${miseEnEvidence(k)}$.<br>`\n            texteCorr += `On en déduit que ${quidam.prenom} devra utiliser $${miseEnEvidence(k)}\\\\times ${x}\\\\text{ g}=${k * x}\\\\text{ g}$ de farine et $${miseEnEvidence(k)}\\\\times ${y}\\\\text{ g}=${k * y}\\\\text{ g}$ de sucre.<br>`\n            texteCorr += `${numAlpha(1)} La masse de \"sable\" sera donc : $${k * x}\\\\text{ g} + ${k * y}\\\\text{ g} +${k * z}\\\\text{ g} =${total}\\\\text{ g}$.`\n          } else {\n            article = quidam.pronom\n            x = ratiovinaigrette[index % 3][0]\n            y = ratiovinaigrette[index % 3][1]\n            k = randint(2, 6)\n            total = (x + y) * k\n            texte += `${quidam.prenom} veut réaliser une vinaigrette. Pour cela ${article} mélange du vinaigre et de l'huile d'olive selon le ratio $~${x}~:~${y}$.<br>`\n            texte += `${premiereLettreEnMajuscule(article)} utilise $${y * k}$ cuillères à soupe d'huile d'une contenance de $15 \\\\text{ mL}$ chacune.<br>`\n            texte += `${numAlpha(0)} Quel volume de vinaigre doit-${article} utiliser ?<br>`\n            texte += `${numAlpha(1)} Quel volume de vinaigrette ${quidam.prenom} réalisera-t-${article} ?`\n            texteCorr += `${numAlpha(0)} Comme le ratio de vinaigre et d'huile est $${x}~:~${y}$, alors on a :<br>`\n            texteCorr += `${sp(6)}$${texFraction('\\\\text{volume de vinagre en mL}', x + '\\\\text{ mL}')}=${texFraction(`${y * k}\\\\times 15 \\\\text{ mL}`, y + '\\\\text{ mL}')}=${miseEnEvidence(k * 15)}$.<br>`\n            texteCorr += `${sp(6)}Le volume de vinaigre doit-être : $${miseEnEvidence(k * 15)}\\\\times ${x}\\\\text{ mL}=${k * 15 * x}\\\\text{ mL}$.<br>`\n            texteCorr += `${numAlpha(1)} Donc le volume de vinaigrette est : $${miseEnEvidence(k * 15)}\\\\text{ mL}\\\\times \\\\left( ${x}+${y} \\\\right)=${miseEnEvidence(k * 15)}\\\\text{ mL}\\\\times ${x + y}=${k * 15 * (x + y)}\\\\text{ mL}$.`\n          }\n          break\n\n        case 'ecran':\n          x = ratioecran[index % 4][0]\n          y = ratioecran[index % 4][1]\n          a = resolutions[index2 % 8][0]\n          b = resolutions[index2 % 8][1]\n          texte += `Un écran au format $${x}~:~${y}$ est-il adapté à une résolution de $${a}\\\\times ${b}$ ?<br>`\n          if (calcul(a / x) === calcul(b / y)) {\n            texteCorr += `La résolution d'image $${a}\\\\times ${b}$ respecte effectivement le format $${x}~:~${y}$.<br>`\n            texteCorr += `En effet, $${texFraction(a, x)}=${texFraction(b, y)}=${texNombre2(calcul(a / x))}$`\n          } else {\n            texteCorr += `La résolution d'image $${a}\\\\times ${b}$ ne respecte pas le format $${x}~:~${y}$.<br>`\n            if (Number.isInteger(a / x)) {\n              texteCorr += `En effet, $${texFraction(a, x)}=${texNombre2(calcul(a / x))}$ et $${texFraction(b, y)}\\\\approx ${texNombre2(calcul(b / y))}$.<br>`\n\n              k = calcul(a / x)\n              texte += 'Sinon, proposer une résolution qui conviendrait en gardant la largeur d\\'image.'\n              texteCorr += `On doit avoir : $${texFraction(a, x)}=${texFraction('h', y)}$<br>`\n              texteCorr += `Donc $h=${texFraction(y + '\\\\times' + a, x)}=${k * y}$. La résolution $${a}\\\\times ${k * y}$ respecte le format $${x}~:~${y}$.`\n            } else if (Number.isInteger(b / y)) {\n              texteCorr += `En effet, $${texFraction(a, x)}\\\\approx ${texNombre2(calcul(a / x))}$ et $${texFraction(b, y)}=${texNombre2(calcul(b / y))}$.<br>`\n              k = calcul(b / y)\n              texte += 'Sinon, proposer une résolution qui conviendrait en gardant la hauteur d\\'image.'\n              texteCorr += `On doit avoir : $${texFraction(b, y)}=${texFraction('L', x)}$<br>`\n              texteCorr += `Donc $L=${texFraction(x + '\\\\times' + b, y)}=${k * x}$. La résolution $${k * x}\\\\times ${b}$ respecte le format $${x}~:~${y}$.`\n            } else {\n              texteCorr += `En effet, $${texFraction(a, x)}\\\\approx ${texNombre2(calcul(a / x))}$ et $${texFraction(b, y)}\\\\approx ${texNombre2(calcul(b / y))}$.<br>`\n              texte += 'Sinon proposer une résolution adaptée à ce ratio.'\n              k = ppcm(x, y)\n              if (k % 10 !== 0) {\n                if (k % 2 === 0) {\n                  c = calcul(k * 5)\n                } else {\n                  if (k % 5 === 0) {\n                    c = calcul(k * 2)\n                  } else {\n                    c = calcul(k * 10)\n                  }\n                }\n              } else {\n                c = 0\n              }\n              while (c < 1024) {\n                c += k\n              }\n              b = calcul(c * y / x)\n              a = c\n              texteCorr += `Le nombre $${c}$ est un multiple de $${x}$ et de $${y}$.<br>`\n              texteCorr += `Je choisis comme résolution $${c} \\\\times ${texFraction(c + '\\\\times ' + y, x)}$ soit $${c}\\\\times ${b}$.<br>`\n              texteCorr += `En effet $${texFraction(a, x)}=${texFraction(b, y)}=${calcul(b / y)}$ donc la résolution $${a}\\\\times ${b}$ respecte le format $${x}~:~${y}$.`\n            }\n          }\n\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n\n  this.besoinFormulaireNumerique = ['Type de ratios', 3, ' 1 : x:y\\n 2 : x:y:z\\n 3 : Mélange']\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,` 1 : Cahier à petits carreaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ProblemeDeRatio","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","sup","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","prenoms","objets","sirops","jusdefruit","produits","article","p1","p2","quidam","index","index2","ratiosables","ratiovinaigrette","ratioecran","resolutions","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","x","y","z","total","a","b","c","k","i","n","cpt","randint","parseInt","choice","personnes","j","prenom","miseEnEvidence","ppcm","calcul","personne","pronom","premiereLettreEnMajuscule","texFraction","Math","round","texNombre2","arrondi","numAlpha","sp","Number","isInteger","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}