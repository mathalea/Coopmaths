{"version":3,"file":"js/73965.d7e3b47134f98c01d9c4.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, ecritureParentheseSiMoins, texNombrec, texNombre, arrondi, choice, combinaisonListes, nombreDeChiffresDansLaPartieEntiere } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const interactifReady = true\n\nexport const amcReady = true\nexport const amcType = 'AMCNum'\nexport const interactifType = 'numerique'\nexport const titre = 'Trouver le terme manquant d’une somme de nombres relatifs'\n\n/**\n * Additions à trou dans les relatifs\n *\n *  @author Jean-Claude Lhote à partir de CM000 de Rémi Angot\n * Référence 5R10\n */\nexport default function TermeInconnuDeSomme () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 5\n  this.sup = 1\n  this.sup3 = 1\n  this.sup2 = 20 // additions|additions à trous|soustractions|soustractions à trous|mélange sans trou|mélange avec trou\n  this.titre = titre\n  this.consigne = 'Calculer le terme manquant.'\n  this.spacing = 2\n  this.interactif = false\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4]\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    let decimal\n    let inconnue\n    if (parseInt(this.sup) === 1) {\n      decimal = 1\n    } else {\n      decimal = 10\n    }\n    for (let i = 0, a, b, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      if (!context.isAmc) {\n        a = arrondi(randint(4 * decimal, this.sup2 * decimal) / decimal, 1)\n        b = arrondi(randint(2 * decimal, this.sup2 * decimal) / decimal, 1)\n      } else {\n        a = arrondi(randint(4 * decimal, 20 * decimal) / decimal, 1)\n        b = arrondi(randint(2 * decimal, 20 * decimal) / decimal, 1)\n      }\n      if (parseInt(this.sup3) === 1) {\n        inconnue = ' \\\\ldots\\\\ldots '\n      } else {\n        inconnue = ` ${choice(['x', 'y', 'z', 'a', 't', 'n'])} `\n      }\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte = `$${texNombre(a)} + ${inconnue} = ${texNombre(b)}$`\n          if (this.interactif && !context.isAmc) {\n            texte = `$${texNombre(a)} + $${ajouteChampTexte(this, i, { texte: '' })}$ = ${texNombre(b)}$`\n          }\n          texteCorr = `$${texNombre(a)} + ${ecritureParentheseSiMoins(texNombrec(b - a))} = ${texNombre(b)}$`\n          texteCorr += `. En effet : $${texNombre(b)}-${texNombre(a)}=${texNombrec(b - a)}$`\n\n          break\n\n        case 2:\n          texte = `$${inconnue} + ${texNombre(a)}  = ${texNombre(b)}$`\n          if (this.interactif && !context.isAmc) {\n            texte = `${ajouteChampTexte(this, i, { texte: '' })}$ + ${texNombre(a)} = ${texNombre(b)}$`\n          }\n          texteCorr = `$${ecritureParentheseSiMoins(texNombrec(b - a))} + ${texNombre(a)} = ${texNombre(b)}$`\n          texteCorr += `. En effet : $${texNombre(b)}-${texNombre(a)}=${texNombrec(b - a)}$`\n          break\n\n        case 3:\n          texte = `$${texNombre(b)} = ${inconnue} + ${texNombre(a)} $`\n          if (this.interactif && !context.isAmc) {\n            texte = `$${texNombre(b)} = $${ajouteChampTexte(this, i, { texte: '' })}$ + ${texNombre(a)}$`\n          }\n          texteCorr = `$${texNombre(b)}=${ecritureParentheseSiMoins(texNombrec(b - a))} + ${texNombre(a)}$`\n          texteCorr += `. En effet : $${texNombre(b)}-${texNombre(a)}=${texNombrec(b - a)}$`\n          break\n\n        case 4:\n          texte = `$${texNombre(b)} = ${texNombre(a)} + ${inconnue}$`\n          if (this.interactif && !context.isAmc) {\n            texte = `$ ${texNombre(b)} = ${texNombre(a)} + $${ajouteChampTexte(this, i, { texte: '' })}`\n          }\n          texteCorr = `$${texNombre(b)}=${texNombre(a)} + ${ecritureParentheseSiMoins(texNombrec(b - a))}$`\n          texteCorr += `. En effet : $${texNombre(b)}-${texNombre(a)}=${texNombrec(b - a)}$`\n          break\n      }\n\n      if (context.isDiaporama) {\n        texte = texte.replace('= \\\\dotfill', '')\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        setReponse(this, i, b - a, { signe: true, digits: Math.max(2, nombreDeChiffresDansLaPartieEntiere(b - a)), decimals: 0 })\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Nombres entiers\\n2 : Nombres décimaux']\n  this.besoinFormulaire2Numerique = ['Valeur maximale', 9999]\n  this.besoinFormulaire3Numerique = [\"Type d'égalités\", 2, '1 : Égalités à trou\\n2 : Équations']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["interactifReady","amcReady","amcType","interactifType","titre","TermeInconnuDeSomme","Exercice","this","nbQuestions","sup","sup3","sup2","consigne","spacing","interactif","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","listeTypeDeQuestions","combinaisonListes","decimal","inconnue","parseInt","a","b","texte","texteCorr","i","cpt","context","arrondi","randint","choice","texNombre","ajouteChampTexte","ecritureParentheseSiMoins","texNombrec","replace","indexOf","push","setReponse","signe","digits","Math","max","nombreDeChiffresDansLaPartieEntiere","decimals","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","besoinFormulaire3Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}