{"version":3,"sources":["webpack://mathalea/./src/js/exercices/2e/2N25.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","union_et_intersection_intervalles_de_R","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","X1","point","X2","a","b","c","d","s","e","f","A","B","C","D","c1","c2","c3","c4","int","int1","int2","i","texte","texteCorr","cpt","randint","segment","styleExtremites","crochetD","crochetG","intervalle","mathalea2d","xmin","ymin","xmax","ymax","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/5191.3c7b642694386582caac.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes} from '../../modules/outils.js'\nimport {point,segment,crochetD,crochetG,intervalle,mathalea2d,} from '../../modules/2d.js'\n\nexport const titre = 'Utiliser et comprendre les symboles $\\\\cup $ et $\\\\cap $ avec les intervalles de $\\\\mathbb{R}$'\n\n/**\n * 2N25\n * @author Stéphane Guyon\n */\nexport default function union_et_intersection_intervalles_de_R() {\n    Exercice.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n    this.consigne = \"Répondre aux questions suivantes: :\";\n    this.nbQuestions = 4;\n    this.nbCols = 2;\n    this.nbColsCorr = 2;\n\n    this.nouvelleVersion = function () {\n        this.listeQuestions = []; // Liste de questions\n        this.listeCorrections = []; // Liste de questions corrigées\n        let typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],typesDeQuestions\n        let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions);\n        let X1 = point(0, 0);\n        let X2 = point(12, 0);\n        for (let i = 0, a, b, c, d, s, e, f,A,B,C,D, c1, c2, c3, c4, int, int1, int2, texte=\"\", texteCorr=\"\", cpt = 0; i < this.nbQuestions && cpt < 50;) {\n            typesDeQuestions = listeTypeDeQuestions[i];\n            switch (typesDeQuestions) {\n                // Cas par cas, on définit le type de nombres que l'on souhaite\n                // Combien de chiffres ? Quelles valeurs ?\n                case 1:\n                    a = randint(1, 15);\n                    e = a + 1;\n                    b = randint(e, 25);\n                    e = b + 1;\n                    c = randint(e, 35);\n                    e = c + 1;\n                    d = randint(e, 45);\n                    s = segment(0, 0, 10, 0);\n                    s.styleExtremites = '->';\n\n                    A = point(2, 0,a);\n                    B = point(5, 0,b);\n                    C = point(6, 0,c);\n                    D = point(9, 0,d);\n                    c1 = crochetD(A, 'red');\n                    c2 = crochetG(B, 'red');\n                    c3 = crochetD(C, 'blue');\n                    c4 = crochetG(D, 'blue');\n                    int = intervalle(X1, X2, 'black', 0);\n                    int1 = intervalle(A, B, 'red', 0);\n                    int2 = intervalle(C, D, 'blue', 0);\n\n\n                    texte = `Donner si possible, une écriture simplifiée de $I=[${a};${b}] \\\\cap [${c};${d}].$`;\n\n                    texteCorr += `<br>On cherche les réels qui sont à la fois dans $[${a};${b}]$ et dans $[${c};${d}]$.`;\n                    texteCorr += `<br>On regarde la partie de l'intervalle qui est coloriée à la fois en bleu et en rouge :<br>`;\n                    texteCorr += `<br>Les deux ensembles sont disjoints, ils n'ont aucun élément en commun.<br>\n                    $I=\\\\emptyset$`;\n                    break;\n                case 2:\n                    a = randint(1, 15);\n                    e = a + 1;\n                    b = randint(e, 25);\n                    e = b + 1;\n                    c = randint(e, 35);\n                    e = c + 1;\n                    d = randint(e, 45);\n                    s = segment(0, 0, 10, 0);\n                    s.styleExtremites = '->';\n\n                    A = point(2, 0,a);\n                    B = point(5, 0,b);\n                    C = point(6, 0,c);\n                    D = point(9, 0,d);\n                    c1 = crochetD(A, 'red');\n                    c2 = crochetG(B, 'red');\n                    c3 = crochetD(C, 'blue');\n                    c4 = crochetG(D, 'blue');\n                    int = intervalle(X1, X2, 'black', 0);\n                    int1 = intervalle(A, B, 'red', 0);\n                    int2 = intervalle(C, D, 'blue', 0);\n                    texte = `Donner si possible, une écriture simplifiée de $I=[${a};${b}] \\\\cup [${c};${d}].$`;\n                    texteCorr += `<br>On cherche les réels qui sont ou bien dans $[${a};${b}]$, ou bien dans $[${c};${d}]$.`;\n                    texteCorr += `<br>On donc regarde la partie de l'intervalle qui est coloriée, soit en bleu, soit en rouge, soit en bleu et rouge :<br>`;\n                    texteCorr += `<br>Les deux ensembles sont disjoints, ils n'ont aucun élément en commun.<br>\n                    On ne peut pas simplifier l'écriture de $I$ qui s'écrit donc $I=[${a};${b}] \\\\cup [${c};${d}].$`;\n                    break;\n                case 3:\n                    a = randint(1, 15);\n                    e = a + 4;\n                    b = randint(29, 45);\n                    e = b - 1;\n                    c = randint(16, e);\n                    e = b + 1;\n                    d = randint(e, 65);\n                    s = segment(0, 0, 10, 0);\n                    s.styleExtremites = '->';\n\n                    A = point(2, 0,a )\n                    B = point(6, 0,b);\n                    C = point(5, 0,c);\n                    D = point(9, 0,d);\n                    c1 = crochetD(A, 'red');\n                    c2 = crochetG(B, 'red');\n                    c3 = crochetD(C, 'blue');\n                    c4 = crochetG(D, 'blue');\n                    int = intervalle(X1, X2, 'black', 0);\n                    int1 = intervalle(A, B, 'red', -0.1);\n                    int2 = intervalle(C, D, 'blue', 0.1);\n                    texte = `Donner si possible, une écriture simplifiée de $I=[${a};${b}] \\\\cap [${c};${d}].$`;\n\n                    texteCorr += `<br>On cherche les réels qui sont à la fois dans $[${a};${b}]$ et dans $[${c};${d}]$.`;\n                    texteCorr += `<br>On regarde la partie de l'intervalle qui est coloriée à la fois en bleu et en rouge :<br>`;\n                    texteCorr += `$I=[${c};${b}]$`;\n                    break;\n                case 4:\n                    a = randint(1, 15);\n                    e = a + 4;\n                    b = randint(29, 45);\n                    e = b - 1;\n                    c = randint(16, e);\n                    e = b + 1;\n                    d = randint(e, 65);\n                    s = segment(0, 0, 10, 0);\n                    s.styleExtremites = '->';\n\n                    A = point(2, 0,a)\n                    B = point(6, 0,b);\n                    C = point(5, 0,c);\n                    D = point(9, 0,d);\n                    c1 = crochetD(A, 'red');\n                    c2 = crochetG(B, 'red');\n                    c3 = crochetD(C, 'blue');\n                    c4 = crochetG(D, 'blue');\n                    int = intervalle(X1, X2, 'black', 0);\n                    int1 = intervalle(A, B, 'red', -0.1);\n                    int2 = intervalle(C, D, 'blue', 0.1);\n                    texte = `Donner si possible, une écriture simplifiée de $I=[${a};${b}] \\\\cup [${c};${d}].$`;\n                    texteCorr += `<br>On cherche les réels qui sont ou bien dans $[${a};${b}]$, ou bien dans $[${c};${d}]$.`;\n                    texteCorr += `<br>On donc regarde la partie de l'intervalle qui est coloriée, soit en bleu, soit en rouge, soit en bleu et rouge :<br>`;\n                    texteCorr += `$I=[${a};${d}]$`;\n                    break;\n                case 5:\n                    a = randint(1, 15);\n                    e = a + 15;\n                    b = randint(e, 35);\n                    e = a + 1;\n                    f = b - 10;\n                    c = randint(e, f);\n                    e = c + 1;\n                    d = randint(e, f);\n                    s = segment(0, 0, 10, 0);\n                    s.styleExtremites = '->';\n\n                    A = point(2, 0,a )\n                    B = point(9, 0,b);\n                    C = point(5, 0,c);\n                    D = point(7, 0,d);\n                    c1 = crochetD(A, 'red');\n                    c2 = crochetG(B, 'red');\n                    c3 = crochetD(C, 'blue');\n                    c4 = crochetG(D, 'blue');\n                    int = intervalle(X1, X2, 'black', 0);\n                    int1 = intervalle(A, B, 'red', -0.1);\n                    int2 = intervalle(C, D, 'blue', 0.1);\n                    texte = `Donner si possible, une écriture simplifiée de $I=[${a};${b}] \\\\cap [${c};${d}].$`;\n                    texteCorr += `<br>On cherche les réels qui sont à la fois dans $[${a};${b}]$ et dans $[${c};${d}]$.`;\n                    texteCorr += `<br>On donc regarde la partie de l'intervalle qui est coloriée en bleu et rouge :<br>`;\n                    texteCorr += `On observe que $[${c};${d}]\\\\subset [${a};${b}]$ donc $I=[${c};${d}].$`;\n                    break;\n                case 6:\n                    a = randint(1, 15);\n                    e = a + 15;\n                    b = randint(e, 35);\n                    e = a + 1;\n                    f = b - 10;\n                    c = randint(e, f);\n                    e = c + 1;\n                    d = randint(e, f);\n                    s = segment(0, 0, 10, 0);\n                    s.styleExtremites = '->';\n\n                    A = point(2, 0,a )\n                    B = point(9, 0,b);\n                    C = point(5, 0,c);\n                    D = point(7, 0,d);\n                    c1 = crochetD(A, 'red');\n                    c2 = crochetG(B, 'red');\n                    c3 = crochetD(C, 'blue');\n                    c4 = crochetG(D, 'blue');\n                    int = intervalle(X1, X2, 'black', 0);\n                    int1 = intervalle(A, B, 'red', -0.1);\n                    int2 = intervalle(C, D, 'blue', 0.1);\n                    texte = `Donner si possible, une écriture simplifiée de $I=[${a};${b}] \\\\cup [${c};${d}].$`;\n                    texteCorr += `<br>On cherche les réels qui sont ou bien dans $[${a};${b}]$, ou bien dans $[${c};${d}]$.`;\n                    texteCorr += `<br>On donc regarde la partie de l'intervalle qui est coloriée soit en bleu, soit en rouge, soit en bleu et rouge :<br>`;\n                    texteCorr += `On $[${c};${d}]\\\\subset [${a};${b}]$ donc $I=[${a};${b}].$`;\n                    break;\n                case 7:\n                    a = randint(1, 15);\n                    e = a + 1;\n                    b = randint(e, 25);\n                    e = b + 1;\n                    c = randint(e, 35);\n                    e = c + 1;\n                    d = randint(e, 45);\n                    s = segment(0, 0, 10, 0);\n                    s.styleExtremites = '->';\n\n                    A = point(2, 0,a);\n                    B = point(5, 0,b);\n                    C = point(6, 0,c);\n                    D = point(9, 0,d);\n                    c1 = crochetG(A, 'red');\n                    c2 = crochetG(B, 'red');\n                    c3 = crochetD(C, 'blue');\n                    c4 = crochetG(D, 'blue');\n                    int = intervalle(X1, X2, 'black', 0);\n                    int1 = intervalle(A, B, 'red', 0);\n                    int2 = intervalle(C, D, 'blue', 0);\n\n\n                    texte = `Donner si possible, une écriture simplifiée de $I=]${a};${b}] \\\\cap [${c};${d}].$`;\n\n                    texteCorr += `<br>On cherche les réels qui sont à la fois dans $]${a};${b}]$ et dans $[${c};${d}]$.`;\n                    texteCorr += `<br>On donc regarde la partie de l'intervalle qui est coloriée en bleu et rouge :<br>`;\n                    texteCorr += `<br>Aucun réel n'appartient aux deux ensembles.<br>\n                    $I=\\\\emptyset$`;\n                    break;\n                case 8:\n                    a = randint(1, 15);\n                    e = a + 1;\n                    b = randint(e, 25);\n                    e = b + 1;\n                    c = randint(e, 35);\n                    e = c + 1;\n                    d = randint(e, 45);\n                    s = segment(0, 0, 10, 0);\n                    s.styleExtremites = '->';\n\n                    A = point(2, 0,a);\n                    B = point(5, 0,b);\n                    C = point(6, 0,c);\n                    D = point(9, 0,d);\n                    c1 = crochetD(A, 'red');\n                    c2 = crochetG(B, 'red');\n                    c3 = crochetD(C, 'blue');\n                    c4 = crochetD(D, 'blue');\n                    int = intervalle(X1, X2, 'black', 0);\n                    int1 = intervalle(A, B, 'red', 0);\n                    int2 = intervalle(C, D, 'blue', 0);\n                    texte = `Donner si possible, une écriture simplifiée de $I=[${a};${b}] \\\\cup [${c};${d}[.$`;\n                    texteCorr += `<br>On cherche les réels qui sont ou bien dans $[${a};${b}]$, ou bien dans $[${c};${d}[$.`;\n                    texteCorr += `<br>On donc regarde la partie de l'intervalle qui est coloriée soit en bleu, soit en rouge, soit en bleu et rouge :`;\n                    texteCorr += `<br>Les deux ensembles sont disjoints, ils n'ont aucun élément en commun.<br>\n                    On ne peut pas simplifier l'écriture de $I$ qui s'écrit donc $I=[${a};${b}] \\\\cup [${c};${d}[.$`;\n                    break;\n                case 9:\n                    a = randint(1, 15);\n                    e = a + 4;\n                    b = randint(29, 45);\n                    e = b - 1;\n                    c = randint(16, e);\n                    e = b + 1;\n                    d = randint(e, 65);\n                    s = segment(0, 0, 10, 0);\n                    s.styleExtremites = '->';\n\n                    A = point(2, 0,a);\n                    B = point(6, 0,b);\n                    C = point(5, 0,c);\n                    D = point(9, 0,d);\n                    c1 = crochetG(A, 'red');\n                    c2 = crochetD(B, 'red');\n                    c3 = crochetD(C, 'blue');\n                    c4 = crochetG(D, 'blue');\n                    int = intervalle(X1, X2, 'black', 0);\n                    int1 = intervalle(A, B, 'red', -0.1);\n                    int2 = intervalle(C, D, 'blue', 0.1);\n                    texte = `Donner si possible, une écriture simplifiée de $I=]${a};${b}[ \\\\cap [${c};${d}].$`;\n\n                    texteCorr += `<br>On cherche les réels qui sont à la fois dans $]${a};${b}[$ et dans $[${c};${d}]$.`;\n                    texteCorr += `<br>On regarde la partie de l'intervalle qui est coloriée à la fois en bleu et en rouge :<br>`;\n                    texteCorr += `$I=[${c};${b}[$`;\n                    break;\n                case 10:\n                    a = randint(1, 15);\n                    e = a + 4;\n                    b = randint(29, 45);\n                    e = b - 1;\n                    c = randint(16, e);\n                    e = b + 1;\n                    d = randint(e, 65);\n                    s = segment(0, 0, 10, 0);\n                    s.styleExtremites = '->';\n\n                    A = point(2, 0,a);\n                    B = point(6, 0,b);\n                    C = point(5, 0,c);\n                    D = point(9, 0,d);\n                    c1 = crochetG(A, 'red');\n                    c2 = crochetD(B, 'red');\n                    c3 = crochetG(C, 'blue');\n                    c4 = crochetD(D, 'blue');\n                    int = intervalle(X1, X2, 'black', 0);\n                    int1 = intervalle(A, B, 'red', -0.1);\n                    int2 = intervalle(C, D, 'blue', 0.1);\n                    texte = `Donner si possible, une écriture simplifiée de $I=]${a};${b}[ \\\\cup ]${c};${d}[.$`;\n\n                    texteCorr += `<br>On cherche les réels qui sont ou bien dans $]${a};${b}[$, ou bien dans $]${c};${d}[$.`;\n                    texteCorr += `<br>On donc regarde la partie de l'intervalle qui est coloriée, soit en bleu, soit en rouge, soit en bleu et rouge :<br>`;\n                    texteCorr += `$I=]${a};${d}[$`;\n                    break;\n            }\n            texteCorr = mathalea2d({\n                xmin: -2,\n                ymin: -2,\n                xmax: 15,\n                ymax: 2\n            }, int, int1, int2, c1, c2, c3, c4);\n            if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n                this.listeQuestions.push(texte);\n                this.listeCorrections.push(texteCorr);\n                i++;\n            }\n            cpt++;\n        }\n        listeQuestionsToContenu(this);\n    };\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}