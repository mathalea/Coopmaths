{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta6G21.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","Construire_un_triangle","classe","typeExercice","IEP","typesDeQuestionsDisponibles","A","B","C","CC","lAB","lBC","lAC","cA","cB","T","TT","dBC","dAB","objetsEnonce","objetsCorrection","paramsEnonce","paramsCorrection","nom","sommets","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","Alea2iep","creerNomDePolygone","push","shuffle","point","randint","calcul","pointAdistance","positionLabel","cercle","pointIntersectionCC","x","y","afficheLongueurSegment","traceCompas","triangle3longueurs","droite","droiteParPointEtPerpendiculaire","pointIntersectionLC","codageAngleDroit","triangleRectangleCoteHypotenuse","polygoneAvecNom","xmin","Math","min","ymin","xmax","max","ymax","pixelsParCm","scale","mainlevee","amplitude","mathalea2d","htmlBouton","indexOf","listeQuestionsToContenu"],"mappings":"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","file":"js/3947.1fe6dc24b88790dbc6a8.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, shuffle, combinaisonListes, calcul, creerNomDePolygone } from '../../modules/outils.js'\nimport { triangle2points2longueurs, point, pointAdistance, droite, droiteParPointEtPerpendiculaire, polygoneAvecNom, cercle, pointIntersectionLC, pointIntersectionCC, traceCompas, codageAngleDroit, afficheLongueurSegment, mathalea2d } from '../../modules/2d.js'\nimport Alea2iep from '../../modules/Alea2iep.js'\n\nexport const titre = 'Construire un triangle aux instruments'\n\n/**\n * Publié le 30/08/202\n * @author Jean-Claude Lhote (exercice) et Rémi Angot (animation Instrumenpoche)\n * Réfrence 6G21 et ... (exercice en 5e ? pas encore fait)\n * Modifié 2021/04/02\n */\nexport default function Construire_un_triangle () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 2\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.classe = 6\n  this.typeExercice = 'IEP'\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let IEP\n    let typesDeQuestionsDisponibles, A, B, C, CC, lAB, lBC, lAC, cA, cB, T, TT, dBC, dAB, objetsEnonce, objetsCorrection, paramsEnonce, paramsCorrection, nom, sommets\n    if (this.classe == 6) typesDeQuestionsDisponibles = [1, 2]\n    // else typesDeQuestionsDisponibles = [1, 2, 3]\n    else typesDeQuestionsDisponibles = [1]\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      IEP = new Alea2iep()\n      objetsEnonce = []\n      objetsCorrection = []\n      texte = 'Le triangle ci-dessous a été réalisé à main levée.<br>Construire ce triangle avec les instruments de géométrie en respectant les mesures indiquées.<br>'\n      texteCorr = 'Voici la construction que tu devais réaliser.<br>'\n      nom = creerNomDePolygone(3, 'PQ')\n      sommets = []\n      for (let i = 0; i < 3; i++) sommets.push(nom[i])\n      sommets = shuffle(sommets)\n      A = point(0, 0, sommets[0], 'left')\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // triangle donné par trois longueurs\n          lAC = randint(35, 45)\n          lBC = calcul(randint(35, 45, lAC) / 10)\n          lAB = calcul(randint(46, 60) / 10)\n          lAC = calcul(lAC / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cA = cercle(A, lAC)\n          cB = cercle(B, lBC)\n          C = pointIntersectionCC(cA, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, 0) / 10, C.y + randint(-5, 5, 0) / 10, sommets[2])\n\n          objetsEnonce.push(afficheLongueurSegment(B, A), afficheLongueurSegment(C, B), afficheLongueurSegment(A, C))\n          objetsCorrection.push(traceCompas(A, C, 30, 'gray', 1, 2), traceCompas(B, C, 30, 'gray', 1, 2), afficheLongueurSegment(B, A), afficheLongueurSegment(C, B), afficheLongueurSegment(A, C))\n          texteCorr += 'Pour cette construction, nous avons utilisé le compas et la règle graduée.<br>'\n\n          IEP.triangle3longueurs(sommets, lAB, lAC, lBC)\n          break\n\n        case 2: // triangle rectangle donné par longueur hypoténuse et un côté de l'angle droit.\n          lAC = randint(70, 80) / 10\n          lAB = calcul(randint(46, 60) / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          cA = cercle(A, lAC)\n          dAB = droite(A, B)\n          dBC = droiteParPointEtPerpendiculaire(B, dAB)\n          C = pointIntersectionLC(dBC, cA, sommets[2], 1)\n          CC = point(C.x + randint(-5, 5, 0) / 10, C.y + randint(-5, 5, 0) / 10, sommets[2])\n\n          objetsEnonce.push(afficheLongueurSegment(B, A), afficheLongueurSegment(C, A), codageAngleDroit(A, B, C))\n          objetsCorrection.push(traceCompas(A, C, 30, 'gray', 1, 2), codageAngleDroit(A, B, C), afficheLongueurSegment(B, A), afficheLongueurSegment(C, A))\n          texteCorr += 'Pour cette construction, nous avons utilisé la règle graduée, l\\'équerre et le compas.<br>'\n\n          IEP.triangleRectangleCoteHypotenuse(sommets, lAB, lAC)\n          break\n\n        case 3:\n\n          break\n      }\n      T = polygoneAvecNom(A, B, C)\n      TT = polygoneAvecNom(A, B, CC)\n      objetsEnonce.push(TT[0], TT[1])\n      objetsCorrection.push(T[0], T[1])\n      paramsEnonce = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 1), ymin: Math.min(A.y - 1, B.y - 1, C.y - 1), xmax: Math.max(A.x + 1, B.x + 1, C.x + 1), ymax: Math.max(A.y + 1, B.y + 1, C.y + 1), pixelsParCm: 30, scale: 1, mainlevee: true, amplitude: 0.3 }\n      paramsCorrection = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 2), ymin: Math.min(A.y - 1, B.y - 1, C.y - 2), xmax: Math.max(A.x + 1, B.x + 1, C.x + 2), ymax: Math.max(A.y + 1, B.y + 1, C.y + 2), pixelsParCm: 30, scale: 1 }\n      texte += mathalea2d(paramsEnonce, objetsEnonce)\n      texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n\n      texteCorr += IEP.htmlBouton(this.numeroExercice, i)\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n"],"sourceRoot":""}