{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3A11-3.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Lister_Diviseurs_Par_Decomposition_facteurs_premiers","Exercice","this","sup","consigne","sortieHtml","spacing","spacingCorr","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","numeroExercice","type_de_questions","boutonAide","modalPdf","modalVideo","listeQuestions","listeCorrections","contenu","contenuCorrection","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","nb_de_premiers_b","randint","max_premier_b","rg_max_b","cribleEratostheneN","length","tab_rangs_b","tab_rangs_exclus_b","k","m","push","tab_premiers_b","sort","a","b","tab_multiplicites_b","nombre_a_decomposer_b","texNombre","numAlpha","tab_temp","ent_lignes","contenu_lignes","ent_colonnes","l","shift","concat","c","tableauColonneLigne","tab_temp_corr","tab1_temp_corr","ent_lignes_corr","ent_lignes_corr_res","contenu_lignes_corr","ent_colonnes_corr","ent_colonnes_corr_res","miseEnEvidence","w","listeDiviseurs","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/4396.e06dc8de71ca5aea3a22.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,combinaisonListesSansChangerOrdre,texNombre,miseEnEvidence,modalPdf,modalVideo,listeDiviseurs,numAlpha,cribleEratostheneN,tableauColonneLigne} from '../../modules/outils.js'\nexport const titre = 'Compter/lister les diviseurs d’un entier à partir de sa décomposition en facteurs premiers.'\n\n/**\n * 3A11-3 - Lister/Compter les diviseurs d'un entier à partir de sa decomposition en facteurs premiers\n * @author Sébastien Lozano\n */\nexport default function Lister_Diviseurs_Par_Decomposition_facteurs_premiers() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.sup = 1;\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `Sans la calculatrice, compter/lister les diviseurs d'un entier à partir de sa décomposition en facteurs premiers.`;\n\t//this.consigne += `<br>`;\n\tsortieHtml ? this.spacing = 2 : this.spacing = 1;\n\tsortieHtml ? this.spacingCorr = 2 : this.spacingCorr = 1;\n\tthis.nbQuestions = 2;\n\t//this.correctionDetailleeDisponible = true;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.sup = 1;\n\n\tthis.nouvelleVersion = function (numeroExercice) {\n\t\tlet type_de_questions;\n\t\tif (sortieHtml) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.boutonAide = '';\n\t\t\tthis.boutonAide = modalPdf(numeroExercice, \"assets/pdf/FicheArithmetique-3A11.pdf\", \"Aide mémoire sur les nombres premiers (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\tthis.boutonAide += modalVideo('conteMathsNombresPremiers', '/videos/LesNombresPremiers.mp4', 'Petit conte mathématique - Les Nombres Premiers', 'Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenuCorrection = ''; // Liste de questions corrigées\n\n\t\tlet type_de_questions_disponibles = [1];\n\t\t//let type_de_questions_disponibles = [1];\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(type_de_questions_disponibles, this.nbQuestions);\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\ttype_de_questions = listeTypeDeQuestions[i];\n\n\n\t\t\tswitch (type_de_questions) {\n\t\t\t\tcase 1: // lister/compter les diviseurs d'un entier à partir de sa décomposition en facteurs premiers\t\t\t\n\t\t\t\t\ttexte = `Lister/compter les diviseurs d'un entier à partir de sa décomposition en facteurs premiers`;\n\t\t\t\t\t//let premiers_dispos = premiersEntreBornes(2,11);\n\t\t\t\t\t// on fixe le nombre de facteurs premier à 3\n\t\t\t\t\tlet nb_de_premiers_b = randint(3, 3);\n\t\t\t\t\t// on fixe la limite pour le choix des premiers\n\t\t\t\t\tlet max_premier_b = 11;\n\t\t\t\t\t// on fixe le rang max pour le choix des premiers\n\t\t\t\t\tlet rg_max_b = cribleEratostheneN(max_premier_b).length - 1;\n\t\t\t\t\t// on choisit les rangs pour les nombres premiers\n\t\t\t\t\tlet tab_rangs_b = [];\n\t\t\t\t\tlet tab_rangs_exclus_b = [];\n\t\t\t\t\tfor (let k = 0; k < (nb_de_premiers_b); k++) {\n\t\t\t\t\t\tfor (let m = 0; m < k; m++) {\n\t\t\t\t\t\t\ttab_rangs_exclus_b.push(tab_rangs_b[m]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttab_rangs_b[k] = randint(0, rg_max_b, tab_rangs_exclus_b);\n\t\t\t\t\t};\n\t\t\t\t\t// on choisit les premiers\n\t\t\t\t\tlet tab_premiers_b = [];\n\t\t\t\t\tfor (let k = 0; k < tab_rangs_b.length; k++) {\n\t\t\t\t\t\ttab_premiers_b[k] = cribleEratostheneN(max_premier_b)[tab_rangs_b[k]];\n\t\t\t\t\t};\n\t\t\t\t\t// on range les facteurs premiers dans l'ordre croissant\n\t\t\t\t\ttab_premiers_b.sort(function (a, b) {\n\t\t\t\t\t\treturn a - b;\n\t\t\t\t\t});\n\t\t\t\t\t// on choisit les multiplicités\n\t\t\t\t\tlet tab_multiplicites_b = [];\n\t\t\t\t\tfor (let k = 0; k < tab_rangs_b.length; k++) {\n\t\t\t\t\t\ttab_multiplicites_b[k] = randint(1, 2);\n\t\t\t\t\t};\n\t\t\t\t\ttexte = ``;\n\t\t\t\t\tlet nombre_a_decomposer_b = 1;\n\t\t\t\t\tfor (let k = 0; k < tab_rangs_b.length; k++) {\n\t\t\t\t\t\tfor (let m = 0; m < tab_multiplicites_b[k]; m++) {\n\t\t\t\t\t\t\tnombre_a_decomposer_b = nombre_a_decomposer_b * tab_premiers_b[k];\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `La décomposition en facteurs premiers de $${texNombre(nombre_a_decomposer_b)}$ est : $`;\n\t\t\t\t\tif (tab_multiplicites_b[0] == 1) {\n\t\t\t\t\t\ttexte += `${tab_premiers_b[0]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte += `${tab_premiers_b[0]}^{${tab_multiplicites_b[0]}}`;\n\t\t\t\t\t};\n\t\t\t\t\tfor (let k = 1; k < tab_premiers_b.length; k++) {\n\t\t\t\t\t\tif (tab_multiplicites_b[k] == 1) {\n\t\t\t\t\t\t\ttexte += `\\\\times ${tab_premiers_b[k]}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexte += `\\\\times ${tab_premiers_b[k]}^{${tab_multiplicites_b[k]}}`;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `$, <br>`;\n\t\t\t\t\ttexte += numAlpha(0) + ` Compléter le tableau ci-dessous.`;\n\t\t\t\t\tif (!sortieHtml) {\n\t\t\t\t\t\ttexte += `$\\\\medskip$`;\n\t\t\t\t\t};\n\t\t\t\t\t// on crée le tableau des entetes de lignes et des colonnes\n\t\t\t\t\tlet ent_lignes = [];\n\t\t\t\t\tlet contenu_lignes = [];\n\t\t\t\t\tlet ent_colonnes = [`\\\\times`];\n\t\t\t\t\t// les entetes des lignes\n\t\t\t\t\tfor (let k = 0; k < tab_multiplicites_b[0] + 1; k++) {\n\t\t\t\t\t\tent_lignes.push(`\\\\phantom{plusLarge}` + tab_premiers_b[0] + `^{` + k + `}\\\\phantom{plusLarge}`);\n\t\t\t\t\t};\n\t\t\t\t\t// les entetes des colonnes \n\t\t\t\t\tfor (let m = 0; m < tab_multiplicites_b[1] + 1; m++) {\n\t\t\t\t\t\tfor (let l = 0; l < tab_multiplicites_b[2] + 1; l++) {\n\t\t\t\t\t\t\tent_colonnes.push(tab_premiers_b[1] + `^{` + m + `}\\\\times` + tab_premiers_b[2] + `^{` + l + `}`);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\t// tableau pour la permutation circulaire\n\t\t\t\t\tlet tab_temp;\n\t\t\t\t\t// on y affecte les lignes\n\t\t\t\t\ttab_temp = ent_lignes;\n\t\t\t\t\t// on supprime le x de l'entete des colonnes\n\t\t\t\t\tent_colonnes.shift();\n\t\t\t\t\t// on affecte ça aux lignes;\n\t\t\t\t\tent_lignes = ent_colonnes;\n\t\t\t\t\t// on remet le x en colonnes et on ajoute le reste\n\t\t\t\t\tent_colonnes = [`\\\\times`].concat(tab_temp);\n\t\t\t\t\t// le contenu des lignes\n\t\t\t\t\tfor (let l = 0; l < (tab_multiplicites_b[0] + 1); l++) {\n\t\t\t\t\t\tfor (let c = 1; c < (tab_multiplicites_b[1] + 1) * (tab_multiplicites_b[2] + 1) + 1; c++) {\n\t\t\t\t\t\t\t//contenu_lignes.push(`l : `+l+`, c : `+Number(c));\n\t\t\t\t\t\t\tcontenu_lignes.push(``);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\ttexte += tableauColonneLigne(ent_colonnes, ent_lignes, contenu_lignes);\n\t\t\t\t\tif (!sortieHtml) {\n\t\t\t\t\t\ttexte += `$\\\\medskip$`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\ttexte += numAlpha(1) + ` En déduire le nombre de diviseurs de $${texNombre(nombre_a_decomposer_b)}$.<br>`;\n\t\t\t\t\ttexte += numAlpha(2) + ` Enfin, dresser la liste des diviseurs de $${texNombre(nombre_a_decomposer_b)}$.<br>`;\n\n\t\t\t\t\t// correction\n\t\t\t\t\ttexteCorr = `Avec la décomposition en facteurs premiers de $${texNombre(nombre_a_decomposer_b)}$ qui est : $`;\n\t\t\t\t\tif (tab_multiplicites_b[0] == 1) {\n\t\t\t\t\t\ttexteCorr += `${tab_premiers_b[0]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += `${tab_premiers_b[0]}^{${tab_multiplicites_b[0]}}`;\n\t\t\t\t\t};\n\t\t\t\t\tfor (let k = 1; k < tab_premiers_b.length; k++) {\n\t\t\t\t\t\tif (tab_multiplicites_b[k] == 1) {\n\t\t\t\t\t\t\ttexteCorr += `\\\\times ${tab_premiers_b[k]}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexteCorr += `\\\\times ${tab_premiers_b[k]}^{${tab_multiplicites_b[k]}}`;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `$, <br>`;\n\t\t\t\t\ttexteCorr += numAlpha(0) + ` Le tableau donne :`;\n\t\t\t\t\t// on crée le tableau des entetes de lignes et des colonnes\n\t\t\t\t\tlet ent_lignes_corr = [];\n\t\t\t\t\tlet ent_lignes_corr_res = [];\n\t\t\t\t\tlet contenu_lignes_corr = [];\n\t\t\t\t\t//let contenu_lignes_corr_res = [];\n\t\t\t\t\tlet ent_colonnes_corr = [`\\\\times`];\n\t\t\t\t\tlet ent_colonnes_corr_res = [1];\n\t\t\t\t\t// les entetes des lignes\n\t\t\t\t\tfor (let k = 0; k < tab_multiplicites_b[0] + 1; k++) {\n\t\t\t\t\t\tent_lignes_corr.push(tab_premiers_b[0] + `^{` + k + `}`);\n\t\t\t\t\t\tent_lignes_corr_res.push(tab_premiers_b[0] ** k);\n\t\t\t\t\t};\n\t\t\t\t\t// les entetes des colonnes \n\t\t\t\t\tfor (let m = 0; m < tab_multiplicites_b[1] + 1; m++) {\n\t\t\t\t\t\tfor (let l = 0; l < tab_multiplicites_b[2] + 1; l++) {\n\t\t\t\t\t\t\tent_colonnes_corr.push(tab_premiers_b[1] + `^{` + m + `}\\\\times` + tab_premiers_b[2] + `^{` + l + `}`);\n\t\t\t\t\t\t\tent_colonnes_corr_res.push(tab_premiers_b[1] ** m * tab_premiers_b[2] ** l);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\t// tableaux pour les permutations circulaires\n\t\t\t\t\tlet tab_temp_corr;\n\t\t\t\t\tlet tab1_temp_corr;\n\t\t\t\t\t// on y affecte les lignes\n\t\t\t\t\ttab_temp_corr = ent_lignes_corr;\n\t\t\t\t\ttab1_temp_corr = ent_lignes_corr_res;\n\t\t\t\t\t// on supprime le x de l'entete des colonnes\n\t\t\t\t\tent_colonnes_corr.shift();\n\t\t\t\t\tent_colonnes_corr_res.shift();\n\t\t\t\t\t// on affecte ça aux lignes;\n\t\t\t\t\tent_lignes_corr = ent_colonnes_corr;\n\t\t\t\t\tent_lignes_corr_res = ent_colonnes_corr_res;\n\t\t\t\t\t// on remet le x en colonnes et on ajoute le reste\n\t\t\t\t\tent_colonnes_corr = [`\\\\times`].concat(tab_temp_corr);\n\t\t\t\t\tent_colonnes_corr_res = [1].concat(tab1_temp_corr);\n\t\t\t\t\t// le contenu des lignes\n\t\t\t\t\tfor (let l = 0; l < (tab_multiplicites_b[1] + 1) * (tab_multiplicites_b[2] + 1) + 1; l++) {\n\t\t\t\t\t\tfor (let c = 1; c < (tab_multiplicites_b[0] + 2); c++) {\n\t\t\t\t\t\t\t//contenu_lignes_corr.push(`l : `+l+`, c : `+Number(c));\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontenu_lignes_corr.push(ent_lignes_corr[l] + `\\\\times` + ent_colonnes_corr[c] + `=` + miseEnEvidence(texNombre(ent_lignes_corr_res[l] * ent_colonnes_corr_res[c])));\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\ttexteCorr += tableauColonneLigne(ent_colonnes_corr, ent_lignes_corr, contenu_lignes_corr);\n\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\ttexteCorr += numAlpha(1) + ` $${texNombre(nombre_a_decomposer_b)}$ a donc `;\n\t\t\t\t\ttexteCorr += `$(${tab_multiplicites_b[0]}+1)\\\\times(${tab_multiplicites_b[1]}+1)\\\\times(${tab_multiplicites_b[2]}+1) = `;\n\t\t\t\t\ttexteCorr += `${tab_multiplicites_b[0] + 1}\\\\times${tab_multiplicites_b[1] + 1}\\\\times${tab_multiplicites_b[2] + 1} = `;\n\t\t\t\t\ttexteCorr += `${(tab_multiplicites_b[0] + 1) * (tab_multiplicites_b[1] + 1) * (tab_multiplicites_b[2] + 1)}$ diviseurs.<br>`;\n\t\t\t\t\ttexteCorr += `En effet, dans la décomposition apparait : `;\n\t\t\t\t\ttexteCorr += ` <br> - Le facteur premier $${tab_premiers_b[0]}$ avec la multiplicité $${tab_multiplicites_b[0]}$`;\n\t\t\t\t\ttexteCorr += `, le facteur $${tab_premiers_b[0]}$ apparait donc sous les formes : `;\n\t\t\t\t\tfor (let k = 0; k < tab_multiplicites_b[0]; k++) {\n\t\t\t\t\t\ttexteCorr += `$${tab_premiers_b[0]}^{` + k + `}$ ou `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `$${tab_premiers_b[0]}^{` + tab_multiplicites_b[0] + `}$ d'où le facteur $(${tab_multiplicites_b[0]}+1)$.`;\n\n\t\t\t\t\ttexteCorr += ` <br> - Le facteur premier $${tab_premiers_b[1]}$ avec la multiplicité $${tab_multiplicites_b[1]}$`;\n\t\t\t\t\ttexteCorr += `, le facteur $${tab_premiers_b[1]}$ apparait donc sous les formes : `;\n\t\t\t\t\tfor (let k = 0; k < tab_multiplicites_b[1]; k++) {\n\t\t\t\t\t\ttexteCorr += `$${tab_premiers_b[1]}^{` + k + `}$ ou `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `$${tab_premiers_b[1]}^{` + tab_multiplicites_b[1] + `}$ d'où le facteur $(${tab_multiplicites_b[1]}+1)$.`;\n\n\t\t\t\t\ttexteCorr += ` <br> - Le facteur premier $${tab_premiers_b[2]}$ avec la multiplicité $${tab_multiplicites_b[2]}$`;\n\t\t\t\t\ttexteCorr += `, le facteur $${tab_premiers_b[2]}$ apparait donc sous les formes : `;\n\t\t\t\t\tfor (let k = 0; k < tab_multiplicites_b[2]; k++) {\n\t\t\t\t\t\ttexteCorr += `$${tab_premiers_b[2]}^{` + k + `}$ ou `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `$${tab_premiers_b[2]}^{` + tab_multiplicites_b[2] + `}$ d'où le facteur $(${tab_multiplicites_b[2]}+1)$.`;\n\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\ttexteCorr += numAlpha(2) + ` Enfin, voici la liste des $${(tab_multiplicites_b[0] + 1) * (tab_multiplicites_b[1] + 1) * (tab_multiplicites_b[2] + 1)}$ diviseurs de $${texNombre(nombre_a_decomposer_b)}$ issus du tableau ci-dessus : `;\n\t\t\t\t\ttexteCorr += `$1`;\n\t\t\t\t\tfor (let w = 1; w < listeDiviseurs(nombre_a_decomposer_b).length; w++) {\n\t\t\t\t\t\ttexteCorr += `\\\\text{ ; }` + texNombre(listeDiviseurs(nombre_a_decomposer_b)[w]);\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `.$`;\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\tlisteQuestionsToContenu(this);\n\t};\n\t//this.besoinFormulaireNumerique = ['Règle à travailler',5,\"1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissance\\n4 : Produit de puissances de même exposant\\n5 : Mélange\"]; \n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}