{"version":3,"file":"js/11788.c99d60690d55cd874a0f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C10-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Quotient de deux entiers relatifs'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n* Effectuer une division entre 2 nombres relatifs écrite sous la forme d'une fraction.\n*\n* * On peut choisir de n'avoir que des tables de multiplications, par défaut il y a aussi des divisions simples par 2, 3 ou 4\n* @author Rémi Angot\n* 4C10-4\n*/\nexport default function ExerciceQuotientsRelatifs () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = false\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.titre = titre\n  this.consigne = 'Calculer :'\n  this.spacing = 2\n  this.nbQuestions = 6\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const listeTypeDeQuestions = combinaisonListes(['-+', '+-', '--', '++'], this.nbQuestions)\n    let typesDeNombres = combinaisonListes(['tables', 'horstables'], this.nbQuestions)\n    if (this.sup) {\n      typesDeNombres = combinaisonListes(['tables'], this.nbQuestions)\n    }\n    for (let i = 0, a, b, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      if (typesDeNombres[i] === 'tables') {\n        b = randint(2, 9)\n        a = b * randint(2, 9)\n      } else {\n        b = choice([11, 12, 13, 14, 15, 16, 20, 60, 80])\n        a = b * randint(2, 4)\n      }\n      switch (listeTypeDeQuestions[i]) {\n        case '-+':\n          a *= -1\n          break\n        case '+-':\n          b *= -1\n          break\n        case '--':\n          a *= -1\n          b *= -1\n          break\n      }\n      texte = `$\\\\dfrac{${a}}{${b}}$`\n      texteCorr = `$\\\\dfrac{${a}}{${b}}=${calcul(a / b)}$`\n      setReponse(this, i, calcul(a / b))\n      if (this.interactif && context.isHtml) texte = texte.replace('\\\\dotfill', '')\n      texte += ajouteChampTexteMathLive(this, i)\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Utiliser seulement les tables de multiplications de 2 à 9']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","ExerciceQuotientsRelatifs","Exercice","this","sup","consigne","spacing","nbQuestions","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","typesDeNombres","a","b","texte","texteCorr","i","cpt","randint","choice","calcul","setReponse","interactif","context","replace","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}