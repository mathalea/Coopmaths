{"version":3,"sources":["webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/exercices/beta/beta3s21.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","Stabilisation_frequence","pas_de_version_HMTL","sup","sup2","sup3","sortieHtml","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","nbFaces","randint","nbLancers","tabcoul","tabEff","Array","tabEffModif","S1","S2","tabRes","tabProba","tabValeur","titreligne","tabtitrecolonne","face","N","nombre_avec_espace","parseInt","calcul","texteEnCouleurEtGras","reduce","a","b","map","x","length","repeat","arrondiVirgule","indexOf","push","listeQuestionsToContenu","besoinFormulaire2Texte","besoinFormulaire3CaseACocher"],"mappings":"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","file":"js/8003.d7865c27720220d2b030.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,combinaisonListes, randint, calcul, arrondiVirgule, nombre_avec_espace, texteEnCouleurEtGras} from '../../modules/outils.js'\n\nexport const titre = 'Stabilisation des fréquences'\n\n/**\n * Reconnaître une fonction affine\n* @auteur Erwan Duplessy\n* 3S21\n* D'après le document \"Attendus en fin de 3eme\"\n* On donne les fréquences d’apparition de chaque face d’un dé pour 10000 lancers. \n* L’élève interprète les résultats en les comparant aux probabilités théoriques.\n*/\n\nexport default function Stabilisation_frequence() {\n    \"use strict\"\n    Exercice.call(this)\n    this.titre = titre;\n    this.nbQuestions = 4; // Ici le nombre de questions\n    this.nbQuestionsModifiable=true // Active le formulaire nombre de questions\n    this.nbCols = 1; // Le nombre de colonnes dans l'énoncé LaTeX\n    this.nbColsCorr = 1;// Le nombre de colonne pour la correction LaTeX\n    this.pasDeVersionLatex=false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n    this.pas_de_version_HMTL=false // mettre à true si on ne veut pas de l'exercice en ligne\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n  \n   this.sup = 1; // situation 1=dés\n   this.sup2 = 10000; // nbLancers\n   this.sup3 = false; // true = équiprobable, false = jeu truqué\n  \n  if (sortieHtml) {\n    this.consigne = `<center><a title=\"Diacritica, CC BY-SA 3.0 &lt;https://creativecommons.org/licenses/by-sa/3.0&gt;, via Wikimedia Commons\" href=\"https://commons.wikimedia.org/wiki/File:Dice_(typical_role_playing_game_dice).jpg\"><img width=\"128\" alt=\"Dice (typical role playing game dice)\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Dice_%28typical_role_playing_game_dice%29.jpg/128px-Dice_%28typical_role_playing_game_dice%29.jpg\"></a></center>`\n  }\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n    this.nouvelleVersion = function () {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n  \n    this.listeQuestions = [] // tableau contenant la liste des questions \n    this.listeCorrections = []\n    let type_de_questions_disponibles=[1,2,3,4] // tableau à compléter par valeurs possibles des types de questions\n    let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions)\n  \n      for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\n        texte = `` // Nous utilisons souvent cette variable pour construire le texte de la question.\n        texteCorr = `` // Idem pour le texte de la correction.\n        let nbFaces = 2*randint(1,4)+2; // nombre de faces du dé : 4, 6, 8, ou 10. Avec 12, le tableau devient trop grand....\n        let nbLancers = 10000; // nombre de lancers \n        let tabcoul = [\"rouges\", \"vertes\", \"bleues\", \"noires\"];\n        let tabEff = new Array();// tableau d'effectifs temporaires - une dimension [eff]        \n        let tabEffModif = new Array();// tableau d'effectifs temporaires après modification - une dimension [eff]        \n        let S1 = 0, S2 = 0; // effectif total\n        let tabRes = new Array(); // tableau des fréquences observées - deux dimensions [val, freq]\n        let tabProba = new Array(); // tableau des proba théoriques, à comparer à tabRes\n        let tabValeur = []; // numéro de la face du dé\n        let titreligne = \"Numéro de la face\"; // ou \"couleur de la boule\"\n        let tabtitrecolonne = tabValeur; // ou tabcoul\n        let face = 0;\n        let N = 0; // largeur du tableau\n\n        switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n          case 1:\n            // avec un dé\n            // Cas où les fréquesnces rejoignent les proba\n            texte += `On lance un dé équilibré à ${nbFaces} faces ${nombre_avec_espace(nbLancers)} fois. On étudie les fréquences d'apparition de chaque face. On obtient les résultats suivants : <br>`;\n            for (let i = 0; i<nbFaces ; i++) {\n              tabValeur[i]=i+1;\n              tabEff[i] = [randint(90,110)];\n              S1 += parseInt(tabEff[i]);\n            }             \n            for (let i =0; i<nbFaces ; i++) {\n              tabRes[i] = [i, calcul(tabEff[i]/S1)];\n            } \n            texteCorr += `Le dé est équilibré, donc c'est une situation d'équiprobabilité. Chaque face du dé a une probabilité égale à ` ;\n            switch (nbFaces){\n              case 4:\n                texteCorr += ` $\\\\dfrac{1}{4} = 25\\\\%$ `;\n                break\n              case 6:\n                texteCorr += ` $\\\\dfrac{1}{6} \\\\approx  16.7\\\\%$ `;\n                break\n              case 8:\n                texteCorr += ` $\\\\dfrac{1}{8} = 12.5\\\\%$ `;\n                break\n              case 10:\n                texteCorr += ` $\\\\dfrac{1}{10} = 10\\\\%$ `;\n                break\n              case 12:\n                texteCorr += ` $\\\\dfrac{1}{12} \\\\approx 8.3\\\\%$ `;\n                break\n            }\n            texteCorr += `d'apparaitre. <br>`\n            texteCorr += `Comme le dé a été lancé ${nombre_avec_espace(nbLancers)} fois, les fréquences doivent se stabiliser autour de la probabilité. `;\n            texteCorr += `Les valeurs du tableau de fréquences sont toutes proches de cette probabilité. <br>`;\n            texteCorr += texteEnCouleurEtGras(`Conclusion : les résultats semblent respecter le principe de stabilisation des fréquences ; le tableau est bien compatible avec un lancer aléatoire de dé. `);\n          break;\n  \n          case 2:\n          // avec un dé  \n          // Cas où les fréquences ne rejoignent pas les proba\n            texte += `On lance un dé équilibré à ${nbFaces} faces ${nombre_avec_espace(nbLancers)} fois. On étudie les fréquences d'apparition de chaque face. On obtient les résultats suivants : <br>`;\n            face = randint(1, nbFaces); // on choisit une face au hasard. Elle aura une fréquence déséquilibrée.\n            for (let i = 0; i<nbFaces ; i++) {\n              tabValeur[i]=i+1;\n              if (i == face) {\n                tabEff[i] = [2*randint(90,110)];\n              }\n              else {\n                tabEff[i] = [randint(90,110)];\n              }\n              S1 += parseInt(tabEff[i]);\n            }             \n            for (let i =0; i<nbFaces ; i++) {\n              tabRes[i] = [i, calcul(tabEff[i]/S1)];\n            }  \n            texteCorr += `Le dé est équilibré, donc c'est une situation d'équiprobabilité. Chaque face du dé a une probabilité égale à ` ;\n            switch (nbFaces){\n              case 4:\n                texteCorr += ` $\\\\dfrac{1}{4} = 25\\\\%$ `;\n                break\n              case 6:\n                texteCorr += ` $\\\\dfrac{1}{6} \\\\approx  16.7\\\\%$ `;\n                break\n              case 8:\n                texteCorr += ` $\\\\dfrac{1}{8} = 12.5\\\\%$ `;\n                break\n              case 10:\n                texteCorr += ` $\\\\dfrac{1}{10} = 10\\\\%$ `;\n                break\n              case 12:\n                texteCorr += ` $\\\\dfrac{1}{12} \\\\approx 8.3\\\\%$ `;\n                break\n            }\n            texteCorr += `d'apparaitre. <br>`;\n            texteCorr += `Comme le dé a été lancé ${nombre_avec_espace(nbLancers)} fois, les fréquences devraient se stabiliser autour de la probabilité. `\n            texteCorr += `Cependant, une valeur du tableau de fréquences est éloignée de cette probabilité. <br>`;\n            texteCorr += `Il s'agit de la fréquence d'apparition du ${tabValeur[face]}. <br>`;\n            texteCorr += texteEnCouleurEtGras(`Conclusion : les résultats ne semblent pas respecter le principe de stabilisation des fréquences ; le tableau n'est pas compatible avec un lancer aléatoire de dé.`);\n          break; \n\n          case 3:\n          // avec une urne et des boules  \n          // Cas où les fréquences rejoignent les proba\n          texte += `CAS 3 *********************** <br>`;\n            tabEff = [randint(2,9), randint(2,9), randint(2,9), randint(2,9)];\n            S1 = tabEff.reduce((a, b)=> a + b,0);\n            for (let i =0; i<4 ; i++) {\n              tabProba[i] = [tabcoul[i], calcul(tabEff[i]/S1)];\n            }   \n\n            texte += `Dans une urne opaque, il y a `;  \n            for (let i=0 ; i<3; i++) {\n              texte += `${tabEff[i]} boules ${tabcoul[i]}, `;\n            }\n            texte += `et ${tabEff[3]} boules ${tabcoul[3]}. <br>`;\n            texte += `On prend une boule, on note sa couleur, et on remet la boule dans l'urne. On répète ce processus ${nombre_avec_espace(nbLancers)} fois. `\n            texte += `On étudie les fréquences d'apparition de chaque couleur. On obtient les résultats suivants : <br>`;\n            tabEffModif = tabEff.map(x=>x*(1+randint(-50,50)/1000)); // on modifie très légèrement le tirage max 5%\n            S2 = tabEff.reduce((a, b)=> a + b,0);\n            for (let i =0; i<4 ; i++) {\n              tabRes[i] = [tabcoul[i], calcul(tabEffModif[i]/S2)];\n            }   \n            titreligne = \"Couleur des boules\"; // pour remplir le tableau\n            tabtitrecolonne = tabcoul; \n            texteCorr += `Chaque boule a la même probabilité d'être choisie. Par exemple, la probabilité de tirer une boule ${tabcoul[0]} est : $\\\\dfrac{${tabEff[0]}}{${S1}}$. `\n            texteCorr += `Les probabilités théoriques sont : <br>`;\n            N = tabtitrecolonne.length;\n            texteCorr += `$\\\\begin{array}{|l|` + `c|`.repeat(N) + `}\\n`;\n            texteCorr += `\\\\hline\\n`;\n            texteCorr += `\\\\text{${titreligne}}`\n            for (let i = 0; i<N ; i++) {\n              texteCorr += ` & \\\\textbf{\\\\text{${tabtitrecolonne[i]}}}`;\n            }\n            texteCorr += `\\\\\\\\\\\\hline\\n`;\n            texteCorr += `\\\\text{Fréquence d'apparition (en fraction)}`;\n            for (let i = 0; i<N ; i++) {\n              texteCorr += ` & \\\\dfrac{${tabEff[i]}}{${S1}} `; // probleme d'espace\n            }\n            texteCorr += `\\\\\\\\\\\\hline\\n`;\n            texteCorr += `\\\\text{Fréquence d'apparition (en pourcentage)}`;\n            for (let i = 0; i<N ; i++) {\n              texteCorr += ` & \\\\text{${arrondiVirgule(100*tabEff[i]/S1, 1)}} \\\\% `;\n            }\n            texteCorr += `\\\\\\\\\\\\hline\\n`;\n            texteCorr += `\\\\end{array}\\n$ <br>`;\n            texteCorr += `Les probabilités semblent très proches des fréquences observées. <br>`;\n            texteCorr += texteEnCouleurEtGras(`Conclusion : les résultats semblent respecter le principe de stabilisation des fréquences; le tableau est bien compatible avec un tirage aléatoire dans une urne.`);\n\n          break;  \n\n          case 4:\n            // avec une urne et des boules  \n            // Cas où les fréquences rejoignent les proba\n            texte += `CAS 4 *********************** <br>`;\n              face = randint(1, nbFaces); // on choisit une couleur au hasard. Elle aura une fréquence déséquilibrée.\n              tabEff = [randint(2,9), randint(2,9), randint(2,9), randint(2,9)];\n              S1 = tabEff.reduce((a, b)=> a + b,0);\n              for (let i =0; i<4 ; i++) {\n                tabProba[i] = [tabcoul[i], calcul(tabEff[i]/S1)];\n              }    \n              texte += `Dans une urne opaque, il y a `;  \n              for (let i=0 ; i<3; i++) {\n                texte += `${tabEff[i]} boules ${tabcoul[i]}, `;\n              }\n              texte += `et ${tabEff[3]} boules ${tabcoul[3]}. <br>`;\n              texte += `On prend une boule, on note sa couleur, et on remet la boule dans l'urne. On répète ce processus ${nombre_avec_espace(nbLancers)} fois. `\n              texte += `On étudie les fréquences d'apparition de chaque couleur. On obtient les résultats suivants : `;\n              tabEffModif = tabEff.map(x=>x*(1+randint(-50,50)/1000)); // on modifie très légèrement le tirage de max 5%\n              tabEffModif[face] = 1.75*tabEff[face]; // on augmente de 75% l'effectif d'une couleur\n              S2 = tabEffModif.reduce((a, b)=> a + b,0);\n              for (let i =0; i<4 ; i++) {\n                tabRes[i] = [tabcoul[i], calcul(tabEffModif[i]/S2)];\n              }   \n              // CORRECTION : \n              titreligne = \"Couleur des boules\"; // pour remplir le tableau\n              tabtitrecolonne = tabcoul; \n              texteCorr += `Chaque boule a la même probabilité d'être choisie. Par exemple, la probabilité de tirer une boule ${tabcoul[0]} est : $\\\\dfrac{${tabEff[0]}}{${S1}}$. `\n              texteCorr += `Les probabilités théoriques sont : <br>`;\n              N = tabtitrecolonne.length;\n              texteCorr += `$\\\\begin{array}{|l|` + `c|`.repeat(N) + `}\\n`;\n              texteCorr += `\\\\hline\\n`;\n              texteCorr += `\\\\text{${titreligne}}`\n              for (let i = 0; i<N ; i++) {\n                texteCorr += ` & \\\\textbf{\\\\text{${tabtitrecolonne[i]}}}`;\n              }\n              texteCorr += `\\\\\\\\\\\\hline\\n`;\n              texteCorr += `\\\\text{Fréquence d'apparition (en fraction)}`;\n              for (let i = 0; i<N ; i++) {\n                texteCorr += ` & \\\\dfrac{${tabEff[i]}}{${S1}} `; // probleme d'espace\n              }\n              texteCorr += `\\\\\\\\\\\\hline\\n`;\n              texteCorr += `\\\\text{Fréquence d'apparition (en pourcentage)}`;\n              for (let i = 0; i<N ; i++) {\n                texteCorr += ` & \\\\text{${arrondiVirgule(100*tabEff[i]/S1, 1)}} \\\\% `;\n              }\n              texteCorr += `\\\\\\\\\\\\hline\\n`;\n              texteCorr += `\\\\end{array}\\n$ <br>`;\n              texteCorr += `Les valeurs de fréquence et de probabilité pour les boules ${tabcoul[face]} ne correspondent pas. Il y a trop de différence. <br>`\n              texteCorr += texteEnCouleurEtGras(`Conclusion : les résultats ne semblent pas respecter le principe de stabilisation des fréquences ; le tableau n'est pas compatible avec un tirage aléatoire dans une urne.`);\n\n            break;  \n  \n        }\n        N = tabtitrecolonne.length;\n\n        sortieHtml ? texte +=`<br><center>` : texte +=`\\\\begin{center}` ;\n\n        texte += `$\\\\begin{array}{|l|` + `c|`.repeat(N) + `}\\n`;\n        texte += `\\\\hline\\n`;\n        texte += `\\\\text{${titreligne}}`\n        for (let i = 0; i<N ; i++) {\n          texte += ` & \\\\textbf{\\\\text{${tabtitrecolonne[i]}}}`;\n        }\n        texte += `\\\\\\\\\\\\hline\\n`;\n        texte += `\\\\text{Fréquence d'apparition}`;\n        for (let i = 0; i<N ; i++) {\n          texte += ` & \\\\text{${arrondiVirgule(100*tabRes[i][1], 1)}} \\\\% `;\n        }\n        texte += `\\\\\\\\\\\\hline\\n`;\n        texte += `\\\\end{array}\\n$`;\n        sortieHtml ? texte +=`</center>` : texte +=`\\\\end{center}` ;\n\n        texte += `<br>`;\n        texte += `Ces résultats vous semblent-ils respecter les principes des probabilités ? Détailler votre réponse en vous basant sur des calculs.<br>`;\n\n        if (this.listeQuestions.indexOf(texte) == -1) {\n          // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n          this.listeQuestions.push(texte);\n          this.listeCorrections.push(texteCorr);\n          i++;\n        }\n        cpt++;\n      }\n      listeQuestionsToContenu(this); // On envoie l'exercice à la fonction de mise en page\n    };\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  \n  this.besoinFormulaireNumerique = ['Type d\\'expérience', 2, `1 : Tirage de dés\\n 2 : Tirage dans une urne`]\n  this.besoinFormulaire2Texte = [\"Nombre de tirages\"];\n  this.besoinFormulaire3CaseACocher =['équiprobabilité',true]\n  \n  } // Fin de l'exercice.\n  "],"sourceRoot":""}