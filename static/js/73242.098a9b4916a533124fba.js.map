{"version":3,"file":"js/73242.098a9b4916a533124fba.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5L12-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListesSansChangerOrdre,texteEnCouleur} from '../../modules/outils.js'\nexport const titre = 'Réduire un produit et une somme à partir des mêmes éléments algébriques pour distinguer la différence'\n\n/**\n * 5L12-1\n * Distinction entre la réduction d'un produit et la réduction d'une somme, on garde les même coeffs\n * @author Sébastien Lozano \n */\nexport default function Reduire_dinstinction_somme_produit() {\n\t'use strict'\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.debug = false;\n\tif (this.debug) {\n\t\tthis.nbQuestions = 4;\n\t} else {\n\t\tthis.nbQuestions = 2;\n\t};\n\tthis.consigne = \"\";\n\t//this.nbQuestions = 4;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\t//this.sup2=false; // si false alors utilisation de nombres entiers, si true alors utilisation de nombres à un chiffre après la virgule.\n\tthis.titre = titre;\n\tlet typesDeQuestionsDisponibles\n\tthis.nouvelleVersion = function () {\n\t\t//let typesDeQuestionsDisponibles\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tif (this.debug) {\n\t\t\ttypesDeQuestionsDisponibles = [0, 1, 2, 3];\n\t\t} else {\n\t\t\ttypesDeQuestionsDisponibles = [choice([0, 2]), choice([1, 3])];\n\t\t}\n\n\t\t//let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) \n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions)\n\n\t\t//if (this.sup2) decimal=10;\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\t// deux fonctions pour gérer la chaine de sortie et supprimer le coeff 1 !\n\t\t\tfunction isUn(n) {\n\t\t\t\tif (n == 1) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t};\n\t\t\tfunction sliceUn(n) {\n\t\t\t\tif (n == 1) {\n\t\t\t\t\treturn ``;\n\t\t\t\t} else {\n\t\t\t\t\treturn `${n}`;\n\t\t\t\t};\n\t\t\t};\n\t\t\tlet variables = ['x', 'y', 'z', 't'];\n\t\t\tlet enonces = [];\n\t\t\tlet n = randint(1, 6);\n\t\t\tlet p = randint(1, 6);\n\t\t\tlet inc = variables[randint(0, variables.length - 1)];\n\t\t\t//===== 0 le produit puis la somme\n\t\t\tenonces.push({\n\t\t\t\tenonce: `Simplifier le plus possible le produit puis la somme de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$`,\n\t\t\t\tquesttion: ``,\n\t\t\t\tcorrection_produit: `Le produit de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$ vaut : $${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc} = ${n}\\\\times ${inc}\\\\times ${p}\\\\times ${inc} = ${n}\\\\times ${p}\\\\times ${inc}\\\\times ${inc}=$ `,\n\t\t\t\tcorrection_somme: `La somme de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$ vaut : $${sliceUn(n)}${inc}+${sliceUn(p)}${inc} = ${n}\\\\times ${inc}+${p}\\\\times ${inc} = (${n}+${p})\\\\times ${inc}=$ `\n\t\t\t});\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[0].correction_produit += `${texteEnCouleur(`$${n * p}${inc}^2=${inc}^2$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[0].correction_produit += `${texteEnCouleur(` $${n * p}${inc}^2$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[0].correction_somme += `${texteEnCouleur(` $${n + p}${inc}=${inc}$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[0].correction_somme += `${texteEnCouleur(` $${n + p}${inc}$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n) && isUn(p)) {\n\t\t\t\tenonces[0].correction_produit = `$${inc}\\\\times ${inc} =$ ${texteEnCouleur(` $${inc}^2$`)} `;\n\t\t\t}\n\t\t\t//===== 1 le produit puis la somme\n\t\t\tenonces.push({\n\t\t\t\tenonce: `Simplifier le plus possible l'expression $${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc}$ puis l'expression $${sliceUn(n)}${inc}+${sliceUn(p)}${inc}$`,\n\t\t\t\tquesttion: ``,\n\t\t\t\tcorrection_produit: `$${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc} = ${n}\\\\times ${inc}\\\\times ${p}\\\\times ${inc} = ${n}\\\\times ${p}\\\\times ${inc}\\\\times ${inc}=$ `,\n\t\t\t\tcorrection_somme: `$${sliceUn(n)}${inc}+${sliceUn(p)}${inc} = ${n}\\\\times ${inc}+${p}\\\\times ${inc} = (${n}+${p})\\\\times ${inc}=$ `\n\t\t\t});\n\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[1].correction_produit += `${texteEnCouleur(`$${n * p}${inc}^2=${inc}^2$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[1].correction_produit += `${texteEnCouleur(` $${n * p}${inc}^2$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[1].correction_somme += `${texteEnCouleur(` $${n + p}${inc}=${inc}$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[1].correction_somme += `${texteEnCouleur(` $${n + p}${inc}$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n) && isUn(p)) {\n\t\t\t\tenonces[1].correction_produit = `$${inc}\\\\times ${inc} =$ ${texteEnCouleur(` $${inc}^2$`)} `;\n\t\t\t}\n\t\t\t//===== 2 la somme puis le produit \n\t\t\tenonces.push({\n\t\t\t\tenonce: `Simplifier le plus possible la somme puis le produit de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$`,\n\t\t\t\tquesttion: ``,\n\t\t\t\tcorrection_produit: `Le produit de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$ vaut : $${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc} = ${n}\\\\times ${inc}\\\\times ${p}\\\\times ${inc} = ${n}\\\\times ${p}\\\\times ${inc}\\\\times ${inc}=$ `,\n\t\t\t\tcorrection_somme: `La somme de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$ vaut : $${sliceUn(n)}${inc}+${sliceUn(p)}${inc} = ${n}\\\\times ${inc}+${p}\\\\times ${inc} = (${n}+${p})\\\\times ${inc}=$ `\n\t\t\t});\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[2].correction_produit += `${texteEnCouleur(`$${n * p}${inc}^2=${inc}^2$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[2].correction_produit += `${texteEnCouleur(` $${n * p}${inc}^2$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[2].correction_somme += `${texteEnCouleur(` $${inc}$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[2].correction_somme += `${texteEnCouleur(` $${n + p}${inc}$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n) && isUn(p)) {\n\t\t\t\tenonces[2].correction_produit = `$${inc}\\\\times ${inc} =$ ${texteEnCouleur(` $${inc}^2$`)} `;\n\t\t\t}\n\t\t\t//===== 3 la somme puis le produit \n\t\t\tenonces.push({\n\t\t\t\tenonce: `Simplifier le plus possible l'expression $${sliceUn(n)}${inc}+${sliceUn(p)}${inc}$ puis l'expression $${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc}$`,\n\t\t\t\tquesttion: ``,\n\t\t\t\tcorrection_produit: `$${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc} = ${n}\\\\times ${inc}\\\\times ${p}\\\\times ${inc} = ${n}\\\\times ${p}\\\\times ${inc}\\\\times ${inc}=$ `,\n\t\t\t\tcorrection_somme: `$${sliceUn(n)}${inc}+${sliceUn(p)}${inc} = ${n}\\\\times ${inc}+${p}\\\\times ${inc} = (${n}+${p})\\\\times ${inc}=$ `\n\t\t\t});\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[3].correction_produit += `${texteEnCouleur(`$${inc}^2$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[3].correction_produit += `${texteEnCouleur(` $${n * p}${inc}^2$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[3].correction_somme += `${texteEnCouleur(` $${inc}$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[3].correction_somme += `${texteEnCouleur(` $${n + p}${inc}$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n) && isUn(p)) {\n\t\t\t\tenonces[3].correction_produit = `$${inc}\\\\times ${inc} =$ ${texteEnCouleur(` $${inc}^2$`)} `;\n\t\t\t};\n\n\t\t\tswitch (listeTypeDeQuestions[i]) {\n\t\t\t\tcase 0:\t// produit puis somme \t\t\t\t\n\t\t\t\t\ttexte = `${enonces[0].enonce}.`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br><br>=====CORRECTION======<br>`;\n\t\t\t\t\t\ttexte += enonces[0].correction_produit;\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += enonces[0].correction_somme;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = enonces[0].correction_produit;\n\t\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\t\ttexteCorr += enonces[0].correction_somme;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\t// x puis +\t\t\t\t\n\t\t\t\t\ttexte = `${enonces[1].enonce}.`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br><br>=====CORRECTION======<br>`;\n\t\t\t\t\t\ttexte += enonces[1].correction_produit;\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += enonces[1].correction_somme;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = enonces[1].correction_produit;\n\t\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\t\ttexteCorr += enonces[1].correction_somme;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\t// somme puis produit\t\t\t\t\n\t\t\t\t\ttexte = `${enonces[2].enonce}.`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br><br>=====CORRECTION======<br>`;\n\t\t\t\t\t\ttexte += enonces[2].correction_somme;\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += enonces[2].correction_produit;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = enonces[2].correction_somme;\n\t\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\t\ttexteCorr += enonces[2].correction_produit;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\t// + puis x\t\t\t\t\n\t\t\t\t\ttexte = `${enonces[3].enonce}.`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br><br>=====CORRECTION======<br>`;\n\t\t\t\t\t\ttexte += enonces[3].correction_somme;\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += enonces[3].correction_produit;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = enonces[3].correction_somme;\n\t\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\t\ttexteCorr += enonces[3].correction_produit;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\n\t\t\t}\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\tlisteQuestionsToContenu(this);\n\t}\n\t//this.besoinFormulaire2CaseACocher = [\"Avec décimaux.\",false]\n\n}\n\n\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Reduire_dinstinction_somme_produit","typesDeQuestionsDisponibles","Exercice","this","debug","nbQuestions","consigne","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","choice","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","isUn","n","sliceUn","variables","enonces","randint","p","inc","length","push","enonce","questtion","correction_produit","correction_somme","texteEnCouleur","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}