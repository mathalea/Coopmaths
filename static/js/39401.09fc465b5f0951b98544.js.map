{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C30-5.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","amcType","interactifReady","interactifType","titre","MultiplierPar001","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","consigne","sup","sup2","nouvelleVersion","typeDeQuestionsDisponibles","parseInt","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","rang","texte","texteCorr","coef","nombre","nombreentier","resultat","exposant","i","cpt","randint","calcul","choice","texNombre2","texFraction","miseEnEvidence","autoCorrection","enonce","propositions","statut","options","ordered","lastChoice","interactif","propositionsQcm","indexOf","push","listeQuestionsToContenu","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/39401.09fc465b5f0951b98544.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { calcul, listeQuestionsToContenu, combinaisonListes, randint, texNombre2, texFraction, choice, miseEnEvidence } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 1 // QCM\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\nexport const titre = 'Multiplication par 0,1 ; 0,01 ; 0,001 (compléter avec le nombre qui convient)'\n\n/**\n * @author Jean-claude Lhote\n * Publié le 20/02/2021\n * Référence 6C30-5\n */\nexport default function MultiplierPar001 () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.consigne = 'Compléter les pointillés.'\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n\n  this.sup = false\n  this.sup2 = 4\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.modeQcm = false; // A décommenter : valeur par défaut d'un troisième paramètre\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function () {\n    this.sup2 = parseInt(this.sup2)\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    let typeDeQuestionsDisponibles\n    if (this.sup2 === 4) {\n      typeDeQuestionsDisponibles = [1, 2, 3]\n    } else {\n      typeDeQuestionsDisponibles = [parseInt(this.sup2)]\n    }\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n    const rang = ['millièmes', 'centièmes', 'dixièmes']\n\n    for (let i = 0, texte, texteCorr, coef, nombre, nombreentier, resultat, exposant, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n      coef = -randint(1, 3)\n      if (!this.sup) {\n        exposant = -randint(1, 3)\n      } else {\n        exposant = 0\n      }\n      nombreentier = calcul(randint(10, 1000) + randint(10, 999) * choice([0, 1000]))\n      nombre = calcul(nombreentier * 10 ** exposant)\n      resultat = calcul(nombre * 10 ** coef)\n      switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n        case 1:\n          texte = `$${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10 ** coef))}~~ = ~~\\\\ldots\\\\ldots\\\\ldots\\\\ldots$`\n          texteCorr = `Quand on multiplie par $${texNombre2(calcul(10 ** coef))}=${texFraction(1, calcul(10 ** (-coef)))}$ chaque chiffre prend une valeur $${texNombre2(calcul(10 ** (-coef)))}$ fois plus petite.<br>`\n          texteCorr += `Le chiffre des unités se positionne donc dans les ${rang[3 + coef]} :<br>`\n          texteCorr = `$${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10 ** coef))}~~ =~~ ${miseEnEvidence(texNombre2(resultat), 'blue')}$`\n\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(resultat)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre * 10 ** (-coef)))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre * 10 ** (coef - 1)))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre * 10 ** (-coef + 1)))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n\n        case 2:\n          texte = `$${texNombre2(nombre)} \\\\times \\\\ldots\\\\ldots\\\\ldots~~ = ~~${texNombre2(resultat)}$`\n          texteCorr = `Quand on multiplie par $${texNombre2(10 ** coef)}=${texFraction(1, 10 ** (-coef))}$ chaque chiffre prend une valeur $${texNombre2(10 ** (-coef))}$ fois plus petite.<br>`\n          texteCorr += `Le chiffre des unités se positionne donc dans les ${rang[3 + coef]} :<br>`\n          texteCorr = `$${texNombre2(nombre)} \\\\times ${miseEnEvidence(texNombre2(10 ** coef), 'blue')} ~~=~~ ${texNombre2(resultat)}$`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(calcul(10 ** coef))}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul(10 ** (coef - 1)))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(10 ** (coef - 1)))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(10 ** (-coef)))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n\n        case 3:\n          texte = `$\\\\ldots\\\\ldots\\\\ldots\\\\ldots \\\\times ${texNombre2(10 ** coef)}~~ = ~~${texNombre2(resultat)}$`\n          texteCorr = `Quand on multiplie par $${texNombre2(10 ** coef)}=${texFraction(1, 10 ** (-coef))}$ chaque chiffre prend une valeur $${texNombre2(10 ** (-coef))}$ fois plus petite.<br>`\n          texteCorr += `Le chiffre des unités se positionne donc dans les ${rang[3 + coef]} :<br>`\n          texteCorr = `$${miseEnEvidence(texNombre2(nombre), 'blue')} \\\\times ${texNombre2(10 ** coef)} = ${texNombre2(resultat)}$`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(nombre)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre / 10))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre * 10))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(nombre * 10 ** (-coef + 1)))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  this.besoinFormulaireCaseACocher = ['Nombres entiers', true]\n  this.besoinFormulaire2Numerique = ['Type de question', 4, '1 : Résultat à calculer\\n 2 : Nombre à retrouver\\n 3 : Fraction décimale à retrouver\\n 4 : Alternance des 3 types de question']\n  // this.besoinFormulaire3CaseACocher =['Mode QCM',false]\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}