{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C32.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","ProblemeCourse","Exercice","this","consigne","spacing","spacingCorr","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","prenom","choice","masseEnKgDeAliment1","randint","calcul","prixAliment1","aliment1","masseEnGdeAliment2","prixAliment2","aliment2","texte","texNombre","texPrix","texteCorr","Number","isInteger","arrondiVirgule","context","push","listeQuestionsToContenuSansNumero","besoinFormulaireCaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/18926.0d4a66c2992f8e4c4da7.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, calcul, choice, arrondiVirgule, texNombre, texPrix } from '../../modules/outils.js'\n\nexport const titre = 'Problème - Les courses'\n\n/**\n * On achète 2 aliments dont on connait la masse (un en grammes et l'autre en kilogrammes) et le prix au kilogramme. Il faut calculer le prix total.\n * @author Rémi Angot\n * Référence 6C32\n */\nexport default function ProblemeCourse () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const prenom = choice([\n      'Benjamin',\n      'Léa',\n      'Aude',\n      'Julie',\n      'Corinne',\n      'Mehdi',\n      'Joaquim'\n    ])\n    let masseEnKgDeAliment1\n    if (this.sup) {\n      masseEnKgDeAliment1 = randint(2, 5)\n    } else {\n      masseEnKgDeAliment1 = calcul(\n        randint(2, 5) + randint(1, 9) / 10\n      )\n    }\n    const prixAliment1 = calcul(randint(2, 4) + randint(1, 9) / 10)\n    const aliment1 = choice(['courgettes', 'carottes', 'pommes'])\n    let masseEnGdeAliment2\n\n    let prixAliment2\n    if (this.sup) {\n      prixAliment2 = randint(15, 25)\n      masseEnGdeAliment2 = randint(2, 7) * 500\n    } else {\n      prixAliment2 = calcul(randint(12, 23) + randint(1, 9) / 10)\n      masseEnGdeAliment2 = randint(21, 97) * 10\n    }\n    const aliment2 = choice(['boeuf', 'veau', 'poulet'])\n\n    let texte = `${prenom} achète ${texNombre(\n      masseEnKgDeAliment1\n    )} kg de ${aliment1} à ${texPrix(prixAliment1)} €/kg `\n    texte += `et ${masseEnGdeAliment2} g de ${aliment2} à ${texPrix(\n      prixAliment2\n    )} €/kg. Quel est le prix total à payer ?`\n    let texteCorr =\n      `Prix des ${aliment1} : ${texNombre(\n        masseEnKgDeAliment1\n      )} kg × ${texPrix(prixAliment1)} €/kg = ${texPrix(\n        calcul(masseEnKgDeAliment1 * prixAliment1)\n      )} €` + '<br>'\n    texteCorr +=\n      `Prix du ${aliment2} : ${texNombre(calcul(masseEnGdeAliment2 / 1000))} kg × ${texPrix(prixAliment2)} €/kg = ${texNombre(calcul((masseEnGdeAliment2 * prixAliment2) / 1000))} € ` + '<br>'\n    texteCorr += `Prix total à payer : ${texNombre(calcul(masseEnKgDeAliment1 * prixAliment1))} € + ${texNombre(calcul(masseEnGdeAliment2 * prixAliment2 / 1000))} €`\n    if (Number.isInteger(calcul((masseEnKgDeAliment1 * prixAliment1 + (masseEnGdeAliment2 * prixAliment2) / 1000)) * 100)) {\n      texteCorr += ' = '\n    } else {\n      texteCorr += ' ≈ '\n    }\n    texteCorr += `${arrondiVirgule(calcul(masseEnKgDeAliment1 * prixAliment1 + (masseEnGdeAliment2 * prixAliment2) / 1000))} €<br>`\n    texteCorr += `<br><i>Le prix total aurait aussi pu être trouvé en un seul calcul</i> : ${texNombre(masseEnKgDeAliment1)} kg × ${texPrix(prixAliment1)} €/kg + ${texNombre(calcul(masseEnGdeAliment2 / 1000))} kg × ${texPrix(prixAliment2)} €/kg `\n    if (Number.isInteger(calcul((masseEnKgDeAliment1 * prixAliment1 + (masseEnGdeAliment2 * prixAliment2) / 1000)) * 100)) {\n      texteCorr += ' = '\n    } else {\n      texteCorr += ' ≈ '\n    }\n    texteCorr += `${arrondiVirgule(calcul(\n        masseEnKgDeAliment1 * prixAliment1 +\n        (masseEnGdeAliment2 * prixAliment2) / 1000\n      )\n    )} €<br>`\n\n    if (!context.isHtml) {\n      texteCorr =\n        `Prix des ${aliment1} : $${texNombre(\n          masseEnKgDeAliment1\n        )}~\\\\text{kg}\\\\times${texPrix(\n          prixAliment1\n        )}~\\\\text{\\\\euro{}/kg} = ${texPrix(\n          calcul(masseEnKgDeAliment1 * prixAliment1)\n        )}~\\\\text{\\\\euro}$` + '<br>'\n      texteCorr +=\n        `Prix du ${aliment2} : $${texNombre(\n          calcul(masseEnGdeAliment2 / 1000)\n        )}~\\\\text{kg}\\\\times${texPrix(\n          prixAliment2\n        )}~\\\\text{\\\\euro{}/kg} = ${texNombre(\n          calcul((masseEnGdeAliment2 * prixAliment2) / 1000)\n        )}~\\\\text{\\\\euro}$` + '<br>'\n      texteCorr += `Prix total à payer : $${texNombre(\n        calcul(masseEnKgDeAliment1 * prixAliment1)\n      )}~\\\\text{\\\\euro} + ${texNombre(\n        calcul((masseEnGdeAliment2 * prixAliment2) / 1000)\n      )}~\\\\text{\\\\euro}`\n      if (Number.isInteger(calcul((masseEnKgDeAliment1 * prixAliment1 + (masseEnGdeAliment2 * prixAliment2) / 1000)) * 100)) {\n        texteCorr += '='\n      } else {\n        texteCorr += '\\\\approx'\n      }\n      texteCorr += ` ${arrondiVirgule(\n        calcul(\n          masseEnKgDeAliment1 * prixAliment1 +\n          (masseEnGdeAliment2 * prixAliment2) / 1000\n        )\n      )}~\\\\text{\\\\euro}$<br>`\n    }\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Calculs faciles']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}