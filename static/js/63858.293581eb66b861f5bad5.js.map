{"version":3,"file":"js/63858.293581eb66b861f5bad5.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C12.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/c3/c3C13.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, range, texteEnCouleurEtGras, sp, numAlpha, contraindreValeur, choice, arrondi, prenomF, rangeMinMax, texNombre3, troncature, estentier, compteOccurences, enleveDoublonNum2, combinaisonListes, enleveElementNo } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Résoudre des problèmes de prix'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n// Gestion de la date de publication initiale\nexport const dateDePublication = '02/11/2021'\n\n/**\n * Description didactique de l'exercice\n * A partir d'un prix, proposer différentes questions qui permettent de répondre, selon les questions,\n * soit de tête (*10), soit après un calcul posé (multiplication, addition ou soustraction),\n * soit après un calcul avec calculatrice (division)\n * Chacune de ces questions indépendantes trouve de l'intérêt par le choix de l'opération à effectuer\n * et donc à donner du sens à chacune des opérations.\n * @author Eric Elter\n * Référence 6C12 - Exercice aisément adaptable pour les CM.\n * Date octobre 2021\n*/\n\nexport default function QuestionsPrix () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Répondre aux questions suivantes.' // Consigne modifiée, plus bas, à l'intérieur de la fonction\n  this.nbQuestionsModifiable = true\n  this.nbQuestions = 1\n  this.sup = 9\n  this.sup2 = false\n  this.sup3 = false\n  this.sup4 = 3\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.interactifType = 'mathLive'\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      let QuestionsDisponibles = []\n\n      if (!this.sup) { // Si aucune liste n'est saisie\n        QuestionsDisponibles = rangeMinMax(1, 8)\n      } else {\n        if (typeof (this.sup) === 'number') { // Si c'est un nombre c'est que le nombre a été saisi dans la barre d'adresses\n          QuestionsDisponibles[0] = contraindreValeur(1, 9, this.sup, 9)\n        } else {\n          QuestionsDisponibles = this.sup.split('-')// Sinon on créé un tableau à partir des valeurs séparées par des -\n          for (let i = 0; i < QuestionsDisponibles.length; i++) { // on a un tableau avec des strings : ['1', '1', '2']\n            QuestionsDisponibles[i] = contraindreValeur(1, 9, parseInt(QuestionsDisponibles[i]), 9) // parseInt en fait un tableau d'entiers\n          }\n        }\n      }\n      if (compteOccurences(QuestionsDisponibles, 9) > 0) QuestionsDisponibles = rangeMinMax(1, 8) // Teste si l'utilisateur a choisi tout\n      enleveDoublonNum2(QuestionsDisponibles)\n\n      if (this.sup2) QuestionsDisponibles = combinaisonListes(QuestionsDisponibles, QuestionsDisponibles.length)\n      const Chiffres = range(9, [0])\n      const TabPrixUnitaire = []\n      const TabAutrePrix = []\n      for (let kk = 0; kk < 3; kk++) {\n        TabPrixUnitaire[kk] = choice(Chiffres, TabPrixUnitaire)\n        TabAutrePrix[kk] = choice(Chiffres, TabAutrePrix)\n      }\n      (QuestionsDisponibles.length === 1 & this.nbQuestions === 1) ? this.consigne = 'Répondre à la question suivante.' : this.consigne = 'Répondre aux questions suivantes.'\n      let PrixUnitaire\n      let AutrePrix\n      let PrixReduction\n      if (this.sup3) {\n        PrixUnitaire = arrondi(10 * choice([1, 2]) + TabPrixUnitaire[0], 0)\n        AutrePrix = arrondi(10 * TabAutrePrix[0] + TabAutrePrix[1], 0)\n        PrixReduction = arrondi(choice(rangeMinMax(5, arrondi(PrixUnitaire / 2, 0)), 0))\n      } else {\n        PrixUnitaire = arrondi(10 * choice([1, 2]) + TabPrixUnitaire[0] + 0.1 * TabPrixUnitaire[1] + 0.01 * TabPrixUnitaire[2])\n        AutrePrix = arrondi(10 * choice([1, 2]) + TabAutrePrix[0] + 0.1 * TabAutrePrix[1] + 0.01 * TabAutrePrix[2])\n        PrixReduction = arrondi(choice(rangeMinMax(101, arrondi(50 * PrixUnitaire, 0))) / 100, 2)\n      }\n      const quidame = prenomF()\n      const FamilleH = ['père', 'frère', 'cousin', 'grand-père', 'oncle', 'voisin']\n      const Personnage1 = choice(FamilleH)\n      const FamilleF = ['mère', 'sœur', 'cousine', 'grand-mère', 'tante', 'voisine']\n      const Personnage2 = choice(FamilleF)\n      const Objets = [\n        'un', 'jeu vidéo', 'jeux vidéo', 'ce',\n        'un', 'pantalon', 'pantalons', 'ce',\n        'une', 'casquette', 'casquettes', 'cette',\n        'une', 'carte de collection', 'cartes de collection', 'cette',\n        'un', 'jouet', 'jouets', 'ce',\n        'un', 'livre', 'livres', 'ce',\n        'une', 'serviette', 'serviettes', 'cette'\n      ]\n      const NumArticle = choice(range(6))\n      const ArticleIndef = Objets[4 * NumArticle]\n      const ArticleSingulier = Objets[4 * NumArticle + 1]\n      const ArticlePluriel = Objets[4 * NumArticle + 2]\n      const ArticleDemonst = Objets[4 * NumArticle + 3]\n      const NbArticles = choice(rangeMinMax(3, 9))\n      const NbArticles2 = choice(rangeMinMax(3, 9), [NbArticles])\n      const NbArticles3 = choice(rangeMinMax(11, 19), [NbArticles + NbArticles2, NbArticles2 + NbArticles2]) - NbArticles2\n      const NbArticles4 = choice(rangeMinMax(3, 9), [NbArticles, NbArticles2, NbArticles3])\n      const NbArticles5 = choice(rangeMinMax(2, 9), [NbArticles, NbArticles2, NbArticles3, NbArticles4, NbArticles + NbArticles4, NbArticles2 + NbArticles4, NbArticles3 + NbArticles4, NbArticles4 + NbArticles4]) + NbArticles4\n      const DixOuCent = choice([10, 100])\n      const Nbpartage = choice(rangeMinMax(2, 8))\n      const propositionsAMC = [] // Ce tableau contiendra tous les propositions d'AMC hybride\n      let enonceAMC\n      let correctionAMC\n      let reponseAMC\n      let digitAMC\n      let decimalesAMC\n      let lignesAMC\n      let alignementAMC\n      let sanscadreAMC\n      const enonceAMCInit = `${quidame} repère des ${ArticlePluriel} dans un magazine de publicité à $${texNombre3(PrixUnitaire)}$${sp()}€ l'unité.<br>`\n      texte = enonceAMCInit + '<br>'\n      texteCorr = ''\n      correctionAMC = ''\n      for (let kk = 0; kk < QuestionsDisponibles.length; kk++) {\n        if (QuestionsDisponibles.length > 1) { // Si une seule question, pas besoin de puces numerotees\n          enonceAMC = numAlpha(kk)\n          correctionAMC = numAlpha(kk)\n        } else {\n          enonceAMC = ''\n          correctionAMC += ''\n        }\n        lignesAMC = 3\n        digitAMC = this.sup3 ? 3 : 5\n        switch (QuestionsDisponibles[kk]) {\n          case 1:\n            enonceAMC += `Quel serait le prix de $${DixOuCent}$ ${ArticlePluriel}${sp()}?<br><br>`\n            reponseAMC = arrondi(DixOuCent * PrixUnitaire)\n            correctionAMC += ` $${DixOuCent} \\\\times ${texNombre3(PrixUnitaire)} = ${texNombre3(reponseAMC)}$<br>`\n            correctionAMC += `Le prix de $${DixOuCent}$ ${ArticlePluriel} serait de ` + texteEnCouleurEtGras(`$${texNombre3(reponseAMC)}$`) + `${sp()}€.<br><br>`\n            lignesAMC = 1\n            if (DixOuCent === 100) digitAMC++\n            break\n          case 2:\n            enonceAMC += `Quel serait le prix de $${NbArticles}$ ${ArticlePluriel}${sp()}?<br><br>`\n            reponseAMC = arrondi(NbArticles * PrixUnitaire)\n            correctionAMC += ` $${NbArticles} \\\\times ${texNombre3(PrixUnitaire)} = ${texNombre3(arrondi(NbArticles * PrixUnitaire))}$<br>`\n            correctionAMC += `Le prix de $${NbArticles}$ ${ArticlePluriel} serait de ` + texteEnCouleurEtGras(`$${texNombre3(reponseAMC)}$`) + `${sp()}€.<br><br>`\n            break\n          case 3:\n            enonceAMC += `Si ${quidame} achetait ${ArticleIndef} ${ArticleSingulier} à $${texNombre3(PrixUnitaire)}$${sp()}€ l'unité puis d'autres articles pour $${texNombre3(AutrePrix)}$${sp()}€, quel serait le prix final${sp()}?<br><br>`\n            reponseAMC = arrondi(PrixUnitaire + AutrePrix)\n            correctionAMC += ` $${texNombre3(PrixUnitaire)} + ${texNombre3(AutrePrix)} = ${texNombre3(reponseAMC)}$<br>`\n            correctionAMC += `Si ${quidame} achetait ${ArticleIndef} ${ArticleSingulier} ainsi que d'autres articles pour $${texNombre3(AutrePrix)}$${sp()}€, `\n            correctionAMC += 'le prix final serait de ' + texteEnCouleurEtGras(`$${texNombre3(reponseAMC)}$`) + `${sp()}€.<br><br>`\n            break\n          case 4:\n            enonceAMC += `${quidame} dispose d'un bon de réduction de $${texNombre3(PrixReduction)}$${sp()}€. Si ${quidame} achetait ${ArticleIndef} ${ArticleSingulier}, quelle somme d'argent paierait ${quidame} au final${sp()}?<br><br>`\n            reponseAMC = arrondi(PrixUnitaire - PrixReduction)\n            correctionAMC += ` $${texNombre3(PrixUnitaire)} - ${texNombre3(PrixReduction)} = ${texNombre3(reponseAMC)}$<br>`\n            correctionAMC += `Grâce à son bon de réduction, ${quidame} ne paierait que ` + texteEnCouleurEtGras(`$${texNombre3(reponseAMC)}$`) + `${sp()}€.<br><br>`\n            break\n          case 5:\n            enonceAMC += `Si ${quidame} achetait $${NbArticles2}$ ${ArticlePluriel} et son ${Personnage1} en achetait également $${NbArticles3}$, quelle somme d'argent paieraient-ils à eux deux${sp()}?<br><br>`\n            reponseAMC = arrondi((NbArticles2 + NbArticles3) * PrixUnitaire)\n            correctionAMC += ` $${NbArticles2} + ${NbArticles3} = ${NbArticles2 + NbArticles3}$<br>`\n            correctionAMC += `${quidame} et son ${Personnage1} achèteraient $${NbArticles2 + NbArticles3}$ ${ArticlePluriel}.<br>`\n            correctionAMC += `$${NbArticles2 + NbArticles3} \\\\times ${texNombre3(PrixUnitaire)} = ${texNombre3(reponseAMC)}$<br>`\n            correctionAMC += `Si ${quidame} et son ${Personnage1} achetaient $${NbArticles2 + NbArticles3}$ ${ArticlePluriel}, `\n            correctionAMC += 'le prix final serait de ' + texteEnCouleurEtGras(`$${texNombre3(reponseAMC)}$`) + `${sp()}€.<br><br>`\n            break\n          case 6:\n            enonceAMC += `Si ${quidame} achetait $${NbArticles5}$ ${ArticlePluriel} mais que sa ${Personnage2} lui propose de lui en rembourser $${NbArticles4}$, quelle somme d'argent ${quidame} dépenserait-elle${sp()}?<br><br>`\n            reponseAMC = arrondi((NbArticles5 - NbArticles4) * PrixUnitaire)\n            correctionAMC += `$${NbArticles5} - ${NbArticles4} = ${NbArticles5 - NbArticles4}$<br>`\n            correctionAMC += `${quidame} ne payerait que $${NbArticles5 - NbArticles4}$ ${ArticlePluriel}.<br>`\n            correctionAMC += `$${NbArticles5 - NbArticles4} \\\\times ${texNombre3(PrixUnitaire)} = ${texNombre3(reponseAMC)}$<br>`\n            correctionAMC += `Si ${quidame} achetait $${NbArticles5}$ ${ArticlePluriel} mais que sa ${Personnage2} lui propose de lui en rembourser $${NbArticles4}$, `\n            correctionAMC += `${quidame} dépenserait ` + texteEnCouleurEtGras(`$${texNombre3(reponseAMC)}$`) + `${sp()}€.<br><br>`\n            break\n          case 7 :\n            enonceAMC += `Si ${quidame} décidait d'acheter ${ArticleDemonst} ${ArticleSingulier} avec $9$ amis, quelle somme équitable minimale devraient-ils, chacun, donner${sp()}?<br><br>`\n            correctionAMC += '$1 + 9 = 10$<br>'\n            correctionAMC += 'Le partage se ferait entre $10$ personnes.<br>'\n            if (this.sup3) {\n              reponseAMC = arrondi(PrixUnitaire / 10, 3)\n              correctionAMC += `$${texNombre3(PrixUnitaire)} \\\\div 10 = ${texNombre3(reponseAMC)}$<br>`\n              correctionAMC += `Si ${quidame} partageait ${ArticleDemonst} ${ArticleSingulier} avec $9$ amis, chacun donnerait équitablement ` + texteEnCouleurEtGras(`$${texNombre3(reponseAMC)}$`) + `${sp()}€.<br><br>`\n            } else {\n              reponseAMC = troncature(arrondi(PrixUnitaire / 10, 3) + 0.01, 2)\n              correctionAMC += `$${texNombre3(PrixUnitaire)} \\\\div 10 \\\\approx ${texNombre3(arrondi(PrixUnitaire / 10, 3))}$ et $${texNombre3(troncature(arrondi(PrixUnitaire / 10, 3), 2))} < ${texNombre3(arrondi(PrixUnitaire / 10, 3))} < ${texNombre3(reponseAMC)}$<br>`\n              correctionAMC += `Si ${quidame} partageait ${ArticleDemonst} ${ArticleSingulier} avec $9$ amis, chacun donnerait équitablement au moins ` + texteEnCouleurEtGras(`$${texNombre3(reponseAMC)}$`) + `${sp()}€.<br><br>`\n            } break\n          case 8 :\n            enonceAMC += `Si ${quidame} décidait d'acheter ${ArticleDemonst} ${ArticleSingulier} avec $${Nbpartage}$ camarades, quelle somme équitable minimale devraient-ils, chacun, donner${sp()}?<br><br>`\n            correctionAMC += `$1 + ${Nbpartage} = ${Nbpartage + 1}$<br>`\n            correctionAMC += `Le partage se ferait entre ${Nbpartage + 1} personnes.<br>`\n            if (estentier(arrondi(PrixUnitaire * 100, 0) / (Nbpartage + 1))) {\n              reponseAMC = arrondi(PrixUnitaire / (Nbpartage + 1), 3)\n              correctionAMC += `$${texNombre3(PrixUnitaire)} \\\\div ${Nbpartage + 1} = ${texNombre3(reponseAMC)}$<br>`\n              correctionAMC += `Si ${quidame} partageait ${ArticleDemonst} ${ArticleSingulier} avec $${Nbpartage}$ camarades, chacun donnerait équitablement ` + texteEnCouleurEtGras(`$${texNombre3(reponseAMC)}$`) + `${sp()}€.<br><br>`\n            } else {\n              reponseAMC = troncature(arrondi(PrixUnitaire / (Nbpartage + 1), 3) + 0.01, 2)\n              if (estentier(arrondi(PrixUnitaire * 1000, 0) / (Nbpartage + 1))) {\n                correctionAMC += `$${texNombre3(PrixUnitaire)} \\\\div ${Nbpartage + 1} = ${texNombre3(arrondi(PrixUnitaire / (Nbpartage + 1), 3))}$ et $${texNombre3(troncature(arrondi(PrixUnitaire / (Nbpartage + 1), 3), 2))} < ${texNombre3(arrondi(PrixUnitaire / (Nbpartage + 1), 3))} < ${texNombre3(reponseAMC)}$<br>`\n              } else {\n                correctionAMC += `$${texNombre3(PrixUnitaire)} \\\\div ${Nbpartage + 1} \\\\approx ${texNombre3(arrondi(PrixUnitaire / (Nbpartage + 1), 3))}$ et $${texNombre3(troncature(arrondi(PrixUnitaire / (Nbpartage + 1), 3), 2))} < ${texNombre3(arrondi(PrixUnitaire / (Nbpartage + 1), 3))} < ${texNombre3(reponseAMC)}$<br>`\n              }\n              correctionAMC += `Si ${quidame} partageait ${ArticleDemonst} ${ArticleSingulier} avec $${Nbpartage}$ camarades, chacun donnerait équitablement au moins ` + texteEnCouleurEtGras(`$${texNombre3(reponseAMC)}$`) + `${sp()}€.<br><br>`\n            }\n            break\n        } // fin du switch\n        if (!context.isAmc) {\n          texte += enonceAMC\n          texteCorr += correctionAMC\n        }\n        if (this.interactif && !context.isAmc) {\n          texte += ajouteChampTexteMathLive(this, 8 * i + kk, 'inline largeur25') + '<br><br>'\n          setReponse(this, 8 * i + kk, reponseAMC)\n        }\n        if (context.isAmc) {\n          if (kk === 0) enonceAMC = enonceAMCInit + enonceAMC\n          enonceAMC += this.sup4 === 1 ? 'Code la réponse en noircissant les bonnes cases.' : this.sup4 === 2 ? 'Indique, tout d\\'abord, le calcul et effectue-le de tête ou bien posé dans le cadre ci-dessous.' : 'Indique tout d\\'abord, ci-dessous, le calcul et effectue-le de tête ou bien posé sur cette feuille. Puis code la réponse en noircissant les bonnes cases.'\n          decimalesAMC = this.sup3 ? 0 : 2\n          alignementAMC = this.sup4 === 1 ? 'center' : 'flushright'\n          sanscadreAMC = !(this.sup4 === 2)\n          propositionsAMC[2 * kk] = {\n            type: 'AMCOpen',\n            propositions:\n            [\n              {\n                texte: correctionAMC,\n                statut: lignesAMC,\n                enonce: enonceAMC,\n                sanscadre: sanscadreAMC\n              }\n            ]\n          }\n          propositionsAMC[2 * kk + 1] = {\n            type: 'AMCNum',\n            propositions:\n             [\n               {\n                 texte: (this.sup4 === 1) ? correctionAMC : '',\n                 statut: '',\n                 alignement: alignementAMC,\n                 reponse:\n                   {\n                     texte: (this.sup4 === 1) ? enonceAMC : '',\n                     valeur: [reponseAMC],\n                     param:\n                       {\n                         digits: digitAMC,\n                         decimals: decimalesAMC,\n                         signe: false\n                       }\n                   }\n               }\n             ]\n          }\n        }\n      }\n      if (this.sup4 === 1) {\n        for (let kk = arrondi(propositionsAMC.length / 2); kk >= 0; kk--) {\n          enleveElementNo(propositionsAMC, 2 * kk)\n        }\n      } else if (this.sup4 === 2) {\n        for (let kk = arrondi(propositionsAMC.length / 2); kk >= 0; kk--) {\n          enleveElementNo(propositionsAMC, 2 * kk + 1)\n        }\n      }\n      if (this.questionJamaisPosee(i, PrixUnitaire)) {\n        if (context.isAmc) {\n          this.autoCorrection[i] = {\n            propositions: propositionsAMC,\n            enonceAvant: false\n          }\n        }\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    } // fin du for\n\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = ['Choix des questions', 'Nombres séparés par des tirets\\n1 : Multiplication du prix par 10 ou 100\\n2 : Multiplication du prix par un entier entre 3 et 9\\n3 : Somme du prix avec un autre prix\\n4 : Différence du prix avec un autre prix\\n5 : Prix de la somme de deux quantités différentes du même article\\n6 : Prix de la différence de deux quantités différentes du même article\\n7 : Division du prix par 10\\n8 : Division du prix par un entier entre 3 et 9\\n9 : Toutes les questions\\n']\n  this.besoinFormulaire2CaseACocher = ['Ordre aléatoire des questions']\n  this.besoinFormulaire3CaseACocher = ['Prix unitaire entier']\n  if (context.isAmc) {\n    this.besoinFormulaire4Numerique = ['Choix AMC', 3, '1 : Des cases à cocher pour noter chaque question\\n2 : Un texte libre de réponses pour chaque question\\n3 : Les deux en même temps\\n']\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import QuestionsPrix from '../6e/6C12.js'\nexport const titre = 'Résoudre des problèmes de prix'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n// Gestion de la date de publication initiale\nexport const dateDePublication = '02/11/2021'\n\n/**\n * @author Eric Elter\n * Référence c3C13\n * Date octobre 2021\n */\nexport default function QuestionsPrixCM () {\n  QuestionsPrix.call(this)\n  this.titre = titre\n  this.sup = '1-2-3-4-5-6' // Par défaut, pas de divisions\n  this.sup3 = false // Par défaut, que des entiers\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","dateDePublication","QuestionsPrix","Exercice","this","consigne","nbQuestionsModifiable","nbQuestions","sup","sup2","sup3","sup4","nbCols","nbColsCorr","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","texte","texteCorr","i","cpt","QuestionsDisponibles","contraindreValeur","split","length","parseInt","rangeMinMax","compteOccurences","enleveDoublonNum2","combinaisonListes","Chiffres","range","TabPrixUnitaire","TabAutrePrix","kk","choice","PrixUnitaire","AutrePrix","PrixReduction","arrondi","quidame","prenomF","FamilleH","Personnage1","FamilleF","Personnage2","Objets","NumArticle","ArticleIndef","ArticleSingulier","ArticlePluriel","ArticleDemonst","NbArticles","NbArticles2","NbArticles3","NbArticles4","NbArticles5","DixOuCent","Nbpartage","propositionsAMC","enonceAMC","correctionAMC","reponseAMC","digitAMC","decimalesAMC","lignesAMC","alignementAMC","sanscadreAMC","enonceAMCInit","texNombre3","sp","numAlpha","texteEnCouleurEtGras","troncature","estentier","context","interactif","ajouteChampTexteMathLive","setReponse","type","propositions","statut","enonce","sanscadre","alignement","reponse","valeur","param","digits","decimals","signe","enleveElementNo","questionJamaisPosee","enonceAvant","push","listeQuestionsToContenu","besoinFormulaireTexte","besoinFormulaire2CaseACocher","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf","QuestionsPrixCM"],"sourceRoot":""}