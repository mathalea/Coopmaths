{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5P11-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","NomQuelconqueDeLaFonctionQuiCreeExercice","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","consigneCorrection","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","d","v","t","pronomgenre","prenom","destination","texte","texteCorr","i","cpt","randint","calcul","choice","prenomM","prenomF","minToHour","nombreAvecEspace","context","texNombre","setReponse","interactif","charAt","toUpperCase","slice","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/80136.f993440328c236d4bff0.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, choice, prenomF, prenomM, texNombre, nombreAvecEspace, calcul, minToHour } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Problème de vitesse'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n\n/**\n * Recherche de la vitesse, du temps ou de la distance en utilisant un tableau de proportionnalité et le produit en croix\n * @author Rémi Angot\n * Référence 5P11-1\n*/\nexport default function NomQuelconqueDeLaFonctionQuiCreeExercice () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = ''\n  this.nbQuestions = 3\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.consigneCorrection = ' À vitesse constante, la distance et le temps du trajet sont proportionnels. On peut donc utiliser la technique du produit en croix.'\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = ['vitesse', 'temps', 'distance']\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, d, v, t, pronomgenre, prenom, destination, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      v = randint(8, 26, [12]) * 5 // On évite le 60 km/h trop trivial\n      if (v % 2 === 0) {\n        t = randint(5, 39) * 3\n      } else {\n        t = randint(2, 19) * 6\n      } // On s'assure que le produit v*t est divisible par 6\n      d = calcul(v * t / 60)\n      pronomgenre = choice(['il', 'elle'])\n      if (pronomgenre === 'il') {\n        prenom = prenomM()\n      } else {\n        prenom = prenomF()\n      }\n      if (d < 60) {\n        destination = choice(['à son travail', \"à l'école de ses enfants\", 'au cinéma', 'au centre de loisirs'])\n      } else {\n        destination = choice([\"jusqu'à sa location de vacances\", 'dans la maison de ses parents', 'à une conférence'])\n      }\n      switch (listeTypeDeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'vitesse':\n          texte = `${prenom} met ${minToHour(t)} pour aller ${destination} qui est à une distance de ${nombreAvecEspace(d)} km. Déterminer sa vitesse moyenne.`\n          if (context.isHtml) {\n            texteCorr = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|}\\n'\n          } else {\n            texteCorr = '$\\\\begin{array}{|l|c|c|}\\n'\n          }\n          texteCorr += '\\\\hline\\n'\n          texteCorr += `\\\\text{Distance (en km)} & ${texNombre(d)} & v\\\\\\\\ \\n`\n          texteCorr += '\\\\hline\\n'\n          texteCorr += `\\\\text{Temps (en min)} & ${t} & 60 \\\\\\\\ \\n`\n          texteCorr += '\\\\hline\\n'\n          texteCorr += '\\\\end{array}$'\n          texteCorr += '<br><br>'\n          texteCorr += `$v=\\\\dfrac{${texNombre(d)}\\\\times 60}{${t}}=${v}$ \\n`\n          texteCorr += '<br><br>'\n          texteCorr += `Sa vitesse moyenne est de ${v} km/h.`\n          setReponse(this, i, v)\n          break\n        case 'temps':\n          texte = `Si ${prenom} roule à ${v} km/h. Combien de temps lui faudra-t-il  pour aller ${destination} qui est à une distance de ${nombreAvecEspace(d)} km ?`\n          if (this.interactif && context.isHtml) texte += '<br><em>Donner le nombre de minutes.</em>'\n          if (context.isHtml) {\n            texteCorr = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|}\\n'\n          } else {\n            texteCorr = '$\\\\begin{array}{|l|c|c|}\\n'\n          }\n          texteCorr += '\\\\hline\\n'\n          texteCorr += `\\\\text{Distance (en km)} & ${texNombre(d)} & ${v}\\\\\\\\ \\n`\n          texteCorr += '\\\\hline\\n'\n          texteCorr += '\\\\text{Temps (en min)} & t & 60 \\\\\\\\ \\n'\n          texteCorr += '\\\\hline\\n'\n          texteCorr += '\\\\end{array}$'\n          texteCorr += '<br><br>'\n          texteCorr += `$t=\\\\dfrac{${texNombre(d)}\\\\times 60}{${v}}=${t}$ \\n`\n          texteCorr += '<br><br>'\n          texteCorr += `${pronomgenre.charAt(0).toUpperCase() + pronomgenre.slice(1)} mettra ${minToHour(t)} minutes pour aller ${destination}.`\n          setReponse(this, i, t)\n          break\n        case 'distance':\n          texte = `${prenom} roule à ${v} km/h de moyenne pendant ${minToHour(t)}. Calculer la distance parcourue.`\n          if (context.isHtml) {\n            texteCorr = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|}\\n'\n          } else {\n            texteCorr = '$\\\\begin{array}{|l|c|c|}\\n'\n          }\n          texteCorr += '\\\\hline\\n'\n          texteCorr += `\\\\text{Distance (en km)} & d & ${v}\\\\\\\\ \\n`\n          texteCorr += '\\\\hline\\n'\n          texteCorr += `\\\\text{Temps (en min)} & ${t} & 60 \\\\\\\\ \\n`\n          texteCorr += '\\\\hline\\n'\n          texteCorr += '\\\\end{array}$'\n          texteCorr += '<br><br>'\n          texteCorr += `$d=\\\\dfrac{${texNombre(t)}\\\\times ${v}}{60}=${texNombre(d)}$ \\n`\n          texteCorr += '<br><br>'\n          texteCorr += `${pronomgenre.charAt(0).toUpperCase() + pronomgenre.slice(1)} a donc parcouru ${texNombre(d)} km.`\n          setReponse(this, i, d)\n          break\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 3]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}