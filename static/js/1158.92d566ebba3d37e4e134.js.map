{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G24-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Construire_symetrique_point_6e","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","nontrouve","assezloin","cible","result","texteCorr","nbpoints","parseInt","a","randint","b","d","droite","A","translation","point","homothetie","directeur","B","marks","noms","choisitLettresDifferentes","i","xMin","yMin","xMax","yMax","cibles","M","N","objetsEnonce","objetsCorrection","cellules","push","calcul","distancePointDroite","x","y","j","longueur","tracePoint","rang","lettreDepuisChiffre","Number","toString","dansLaCibleCarree","cibleCarree","num","taille","color","opacite","symetrieAxiale","labelPoint","segment","arcenciel","codageMediatrice","traceCompas","Math","min","max","context","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1158.92d566ebba3d37e4e134.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,calcul,choisitLettresDifferentes,lettreDepuisChiffre,arcenciel} from '../../modules/outils.js'\nimport {point,tracePoint,labelPoint,droite,codageMediatrice,segment,traceCompas,dansLaCibleCarree,cibleCarree,translation,homothetie,symetrieAxiale,distancePointDroite,longueur,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Construire le symétrique d’un point avec cible auto-corrective'\n\n/**\n * Construction de symétrique avec dispositif d'auto-correction aléatoire\n * Ref 6G24-3 \n * @author Jean-Claude Lhote\n * Publié le 30/11/2020\n */\nexport default function Construire_symetrique_point_6e() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 1;\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 3;\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let result = [0, 0], texteCorr = \"\", nbpoints = parseInt(this.sup),nontrouve,assezloin,cible\n    let celluleAlea = function (rang) {\n      let lettre = lettreDepuisChiffre(randint(1, rang))\n      let chiffre = Number(randint(1, rang)).toString()\n      return lettre + chiffre\n    }\n    // On prépare la figure...\n    let a = randint(-10, 10), b = randint(-10, 10, a)\n    let d = droite(a, b, 0, '(d)')\n    let A = translation(point(0, 0), homothetie(d.directeur, point(0, 0), -0.5))\n    let B = translation(point(0, 0), homothetie(d.directeur, point(0, 0), 0.5))\n    let marks = ['/', '//', '///', 'x', 'o', 'S', 'V']\n    let noms = choisitLettresDifferentes(nbpoints, 'Q',  true)\n    this.consigne = `Construire le symétrique des points $${noms[0]}$`\n    for (let i = 1; i < nbpoints - 1; i++) {\n      this.consigne += `, $${noms[i]}$`\n    }\n    this.consigne += ` et $${noms[nbpoints - 1]}$ par rapport à $(d)$.`;\n    let cibles = [], M = [], N = [], objetsEnonce = [], objetsCorrection = []  //cibles, M point marqués, N symétrique de M\n    let cellules = []\n    let xMin, yMin, xMax, yMax\n    [xMin, yMin, xMax, yMax] = [0, 0, 0, 0]\n    for (let i = 0; i < nbpoints; i++) { //On place les cibles.\n      N.push(point(calcul(randint(-80, 80, 0) / 10), calcul(randint(-80, 80, 0) / 10), noms[i] + \"\\'\"))\n      nontrouve = true\n      while (distancePointDroite(N[i], d) < 3 || nontrouve) {\n        nontrouve = true\n        if (distancePointDroite(N[i], d) < 3) {\n          N[i].x = calcul(randint(-80, 80, 0) / 10)\n          N[i].y = calcul(randint(-80, 80, 0) / 10)\n        }\n        else {\n          assezloin = true\n          for (let j = 0; j < i; j++) {\n            if (longueur(N[i], N[j]) < 4.5) assezloin = false\n          }\n          if (assezloin == false) {//éloigner les points donc les grilles\n            N[i].x = calcul(randint(-80, 80, 0) / 10)\n            N[i].y = calcul(randint(-80, 80, 0) / 10)\n          }\n          else nontrouve = false\n        }\n      }\n    }\n\n    objetsEnonce.push(d)\n    objetsCorrection.push(d, tracePoint(A, B))\n\n    for (let i = 0; i < nbpoints; i++) {\n      cellules.push(celluleAlea(4))\n      result = dansLaCibleCarree(N[i].x, N[i].y, 4, 0.6, cellules[i])\n      cible = cibleCarree({ x: result[0], y: result[1], rang: 4, num: i + 1, taille: 0.6 })\n      cible.taille = 0.6\n      cible.color = 'orange'\n      cible.opacite = 0.7\n      cibles.push(cible)\n    }\n    for (let i = 0; i < nbpoints; i++) {\n      M.push(symetrieAxiale(N[i], d, noms[i]))\n      objetsEnonce.push(tracePoint(M[i]), labelPoint(M[i]), cibles[i])\n      objetsCorrection.push(tracePoint(M[i], N[i]), labelPoint(M[i], N[i]), cibles[i])\n      objetsCorrection.push(segment(M[i], N[i], arcenciel(i)), codageMediatrice(M[i], N[i], arcenciel(i + 5), marks[i]))\n      objetsCorrection.push(traceCompas(A, N[i], 20), traceCompas(B, N[i], 20))\n      texteCorr += `$${noms[i]}\\'$, le symétrique du point $${noms[i]}$ est dans la case ${cellules[i]} de la grille ${i + 1}.<br>`\n    }\n\n    for (let i = 0; i < nbpoints; i++) {\n      xMin = Math.min(xMin, N[i].x - 3, M[i].x - 3)\n      yMin = Math.min(yMin, N[i].y - 3, M[i].y - 3)\n      xMax = Math.max(xMax, N[i].x + 3, M[i].x + 3)\n      yMax = Math.max(yMax, N[i].y + 3, M[i].y + 3)\n    }\n\n    context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n\n    this.listeQuestions.push(mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsEnonce))\n    this.listeCorrections.push(texteCorr + mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection))\n    listeQuestionsToContenu(this)\n\n    //  let nonchoisi,coords=[],x,y,objetsEnonce=[],objetsCorrection=[],nomd,label_pos\n\n  }\n  this.besoinFormulaireNumerique = ['Nombre de points (1 à 5)', 5, \"1\\n2\\n3\\n4\\n5\"];\n  // this.besoinFormulaire2CaseACocher = [\"Avec des points de part et d'autre\"];\t\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}