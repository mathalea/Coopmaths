{"version":3,"file":"js/63657.eda10ad97fed8f978b40.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C30-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombrec, texNombre, miseEnEvidence, texFraction, nombreDeChiffresDansLaPartieEntiere, nombreDeChiffresDansLaPartieDecimale } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const amcType = 'AMCNum' // Question numérique\nexport const interactifReady = true\nexport const interactifType = 'numerique'\n\nexport const titre = 'Multiplier un nombre décimal par 10, 100 ou 1 000'\nexport const dateDeModifImportante = '12/12/2021'\n\n/**\n * Multiplication d'un nombre décimal dans différentes écritures par 10, 100, 1000\n *\n *  * Type 1 : écriture décimale\n *  * Type 2 : écriture fractionnaire\n *  * Type 3 : écritures fractionnaires et décimales\n *\n *  * Sup2 : avec ou sans calculs à trous\n * @author Rémi Angot (Ajout 3 décimales maxi et que des entiers par Eric Elter)\n * Référence 6C30-1\n * Relecture : Décembre 2021 par EE\n *\n */\nexport default function MultiplierDecimauxPar101001000 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Calculer.'\n  this.sup = 3\n  this.sup2 = false\n  this.sup3 = true\n  this.sup4 = false\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 8\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let typesDeQuestionsDisponibles = []; let typesDeQuestions\n    if (this.sup === 1 && !this.sup2) typesDeQuestionsDisponibles = [1, 2]\n    if (this.sup === 1 && this.sup2) { typesDeQuestionsDisponibles = [1, 2, 5, 6] }\n    if (this.sup === 2 && !this.sup2) typesDeQuestionsDisponibles = [3, 4]\n    if (this.sup === 2 && this.sup2) { typesDeQuestionsDisponibles = [3, 4, 3, 4, 7, 8, 9, 10] }\n    if (this.sup === 3 && !this.sup2) { typesDeQuestionsDisponibles = [1, 2, 3, 4] }\n    if (this.sup === 3 && this.sup2) { typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] }\n    if (this.sup2) this.consigne = 'Calculer et compléter.'\n    let reponse\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const facteurs = combinaisonListes(\n      [10, 100, 1000],\n      this.nbQuestions\n    )\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0, a, b, den;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        case 1: // a,abcd × 10\n          a = choice([randint(11, 99), randint(100, 999)])\n          if (!this.sup4) {\n            if (this.sup3) {\n              a = calcul(a / choice([10, 100, 1000]))\n            } else {\n              a = calcul(a / choice([10, 100, 1000, 10000]))\n            }\n          }\n          b = facteurs[i]\n          texte = `$${texNombre(a)}\\\\times${texNombre(b)}=\\\\ldots$`\n          texteCorr = `$${texNombre(a)} \\\\times ${texNombre(\n            b\n          )} = ${miseEnEvidence(texNombrec(a * b))}$`\n          reponse = calcul(a * b)\n          break\n        case 2: // 10 × a,abcd\n          a = choice([randint(11, 99), randint(100, 999)])\n          if (!this.sup4) {\n            if (this.sup3) {\n              a = calcul(a / choice([10, 100, 1000]))\n            } else {\n              a = calcul(a / choice([10, 100, 1000, 10000]))\n            }\n          }\n          b = facteurs[i]\n          texte = `$${texNombre(b)}\\\\times${texNombre(a)}=\\\\ldots$`\n          texteCorr = `$${texNombre(b)} \\\\times ${texNombre(\n            a\n          )} = ${miseEnEvidence(texNombrec(a * b))}$`\n          reponse = calcul(a * b)\n          break\n        case 3: // abcd/10 × 10\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          b = facteurs[i]\n          if (this.sup4) {\n            den = choice([10, 100, 1000])\n            while (den > b) {\n              den = choice([10, 100, 1000])\n            }\n          } else {\n            den = choice([10, 100, 1000])\n          }\n          texte = `$${texFraction(a, den)}\\\\times${texNombre(b)}=\\\\ldots$`\n          texteCorr = `$${texFraction(a, den)} \\\\times ${texNombre(\n            b\n          )} = ${texFraction(a * b, den)} = ${miseEnEvidence(texNombrec((a / den) * b))}$`\n          reponse = calcul(a * b / den)\n          break\n        case 4: // 10 × abcd/10\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          b = facteurs[i]\n          if (this.sup4) {\n            den = choice([10, 100, 1000])\n            while (den > b) {\n              den = choice([10, 100, 1000])\n            }\n          } else {\n            den = choice([10, 100, 1000])\n          }\n          texte = `$${texNombre(b)}\\\\times${texFraction(a, den)}=\\\\ldots$`\n          texteCorr = `$${texNombre(b)} \\\\times ${texFraction(\n            a,\n            den\n          )} = ${texFraction(a * b, den)} = ${miseEnEvidence(texNombrec((a / den) * b))}$`\n          reponse = calcul(a * b / den)\n          break\n        case 5: // .... × 10 = a,abcd\n          a = choice([randint(11, 99), randint(100, 999)])\n          if (!this.sup4) {\n            if (this.sup3) {\n              a = calcul(a / choice([10, 100, 1000]))\n            } else {\n              a = calcul(a / choice([10, 100, 1000, 10000]))\n            }\n          }\n          b = facteurs[i]\n          texte = `$\\\\ldots \\\\times${texNombre(b)} = ${texNombrec(a * b)}$`\n          texteCorr = `$${miseEnEvidence(\n            texNombre(a)\n          )} \\\\times ${texNombre(b)} = ${texNombrec(a * b)}$`\n          reponse = a\n          break\n        case 6: // 10 × .... = a,abcd\n          a = choice([randint(11, 99), randint(100, 999)])\n          if (!this.sup4) {\n            if (this.sup3) {\n              a = calcul(a / choice([10, 100, 1000]))\n            } else {\n              a = calcul(a / choice([10, 100, 1000, 10000]))\n            }\n          }\n          b = facteurs[i]\n          texte = `$${texNombre(b)} \\\\times \\\\ldots = ${texNombrec(a * b)}$`\n          texteCorr = `$${texNombre(b)} \\\\times ${miseEnEvidence(\n            texNombre(a)\n          )}  = ${texNombrec(a * b)}$`\n          reponse = b\n          break\n        case 7: // case 3 avec un trou sur l'entier\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          b = facteurs[i]\n          if (this.sup4) {\n            den = choice([10, 100, 1000])\n            while (den > b) {\n              den = choice([10, 100, 1000])\n            }\n          } else {\n            den = choice([10, 100, 1000])\n          }\n          texte = `$${texFraction(a, den)}\\\\times \\\\ldots = ${texNombrec(\n            (a / den) * b\n          )}$`\n          texteCorr = `$${texFraction(a, den)} \\\\times ${miseEnEvidence(\n            texNombre(b)\n          )} = ${texFraction(a * b, den)} = ${texNombrec((a / den) * b)}$`\n          reponse = b\n          break\n        case 8: // case 4 avec un trou sur l'entier\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          b = facteurs[i]\n          if (this.sup4) {\n            den = choice([10, 100, 1000])\n            while (den > b) {\n              den = choice([10, 100, 1000])\n            }\n          } else {\n            den = choice([10, 100, 1000])\n          }\n          texte = `$ \\\\ldots \\\\times${texFraction(a, den)}= ${texNombrec(\n            (a / den) * b\n          )}$`\n          texteCorr = `$${miseEnEvidence(\n            texNombre(b)\n          )} \\\\times ${texFraction(a, den)} = ${texFraction(\n            a * b,\n            den\n          )} = ${texNombrec((a / den) * b)}$`\n          reponse = b\n          break\n        case 9: // case 3 avec trou sur la fraction\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          b = facteurs[i]\n          if (this.sup4) {\n            den = choice([10, 100, 1000])\n            while (den > b) {\n              den = choice([10, 100, 1000])\n            }\n          } else {\n            den = choice([10, 100, 1000])\n          }\n          texte = `$${texFraction(a, '\\\\ldots')}\\\\times${texNombre(\n            b\n          )} = ${texNombrec((a / den) * b)}$`\n          texteCorr = `$${texFraction(\n            a,\n            miseEnEvidence(texNombre(den))\n          )} \\\\times ${texNombre(b)} = ${texFraction(\n            a * b,\n            den\n          )} = ${texNombrec((a / den) * b)}$`\n          reponse = den\n          break\n        case 10: // case 4 avec trou sur la fraction\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          b = facteurs[i]\n          if (this.sup4) {\n            den = choice([10, 100, 1000])\n            while (den > b) {\n              den = choice([10, 100, 1000])\n            }\n          } else {\n            den = choice([10, 100, 1000])\n          }\n          texte = `$${texNombre(b)}\\\\times${texFraction(\n            a,\n            '\\\\ldots'\n          )} = ${texNombrec((a / den) * b)}$`\n          texteCorr = `$${texNombre(b)} \\\\times ${texFraction(\n            a,\n            miseEnEvidence(texNombre(den))\n          )} = ${texFraction(a * b, den)} = ${texNombrec((a / den) * b)}$`\n          reponse = den\n          break\n      }\n      if (context.isHtml && this.interactif) texte += '$~=$' + ajouteChampTexte(this, i)\n      setReponse(this, i, reponse)\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte\n        this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: '' }]\n        this.autoCorrection[i].reponse.param = { digits: nombreDeChiffresDansLaPartieEntiere(reponse) + nombreDeChiffresDansLaPartieDecimale(reponse) + 2, decimals: nombreDeChiffresDansLaPartieDecimale(reponse) + 1, signe: false, exposantNbChiffres: 0 }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Type de calculs',\n    3,\n    '1 : Écriture décimale\\n2 : Écriture fractionnaire\\n3 : Mélange'\n  ]\n  this.besoinFormulaire2CaseACocher = ['Avec des calculs à trous']\n  this.besoinFormulaire3CaseACocher = ['Trois décimales maximum', true]\n  this.besoinFormulaire4CaseACocher = ['Que des nombres entiers', true]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","dateDeModifImportante","MultiplierDecimauxPar101001000","Exercice","this","consigne","sup","sup2","sup3","sup4","spacing","spacingCorr","nbQuestions","nouvelleVersion","parseInt","listeQuestions","listeCorrections","autoCorrection","typesDeQuestions","reponse","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","facteurs","texte","texteCorr","a","b","den","i","cpt","choice","randint","calcul","texNombre","miseEnEvidence","texNombrec","texFraction","context","interactif","ajouteChampTexte","setReponse","enonce","propositions","statut","param","digits","nombreDeChiffresDansLaPartieEntiere","nombreDeChiffresDansLaPartieDecimale","decimals","signe","exposantNbChiffres","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","besoinFormulaire3CaseACocher","besoinFormulaire4CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire4Numerique","besoinFormulaire4Texte","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}