{"version":3,"file":"js/16828.76a6054511ec77196be0.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta4G20-4.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, troncature, calcul, texNombre, texNombrec, texPrix, carreParfait } from '../../modules/outils.js'\nexport const titre = 'Calculer la racine carrée de (x² +/- y²)'\n\n/**\n * Description didactique de l'exercice : Calculer_une_expression_litterale_type_pythagore\n * @author Mireille Gain\n * Référence : 4G20-4\n*/\nexport default function CalculerUneExpressionLitteralePythagore () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Dans chaque cas, calculer a² + b² et a² - b²; puis donner la racine carrée de chaque résultat en valeur arrondie au centième.'\n  this.nbQuestions = 2\n  this.nbCols = 3\n  this.nbColsCorr = 2\n  this.tailleDiaporama = 50\n  this.video = ''\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let a, b, n, s, d, racs, racd, miracs, miracd\n    const typesDeQuestionsDisponibles = ['type1', 'type2']\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case 'type1':\n          a = randint(3, 12)\n          n = randint(5, 9)\n          b = calcul(n * 0.1)\n          break\n\n        case 'type2':\n          a = randint(3, 12)\n          n = randint(1, 5)\n          b = calcul(1 + n * 0.1)\n          break\n      }\n\n      s = calcul(a * a + b * b)\n      d = calcul(a * a - b * b)\n      racs = Math.sqrt(s)\n      racd = Math.sqrt(d)\n      miracs = troncature(racs - troncature(racs, 2), 3)\n      miracd = troncature(racd - troncature(racd, 2), 3)\n\n      texte = `$\\\\phantom{12}a = ${a} \\\\phantom{12}et \\\\phantom{12}b = ${texNombre(b)}$`\n\n      texteCorr = `$\\\\begin{aligned}a^2 + b^2&\n   = ${texNombre(a)} \\\\times ${texNombre(a)} + ${texNombre(b)} \\\\times ${texNombre(b)} \n   \\\\\\\\&= ${texNombrec(a * a)} + ${texNombrec(b * b)} \n   \\\\\\\\&= ${texNombrec((a * a + b * b))}\\\\end{aligned}$`\n      texteCorr += `<br>$\\\\phantom{123456}\\\\sqrt{${texNombrec(a * a + b * b)}}$`\n\n      if (carreParfait(calcul(100 * s))) {\n        texteCorr += `$\\\\phantom{1}=\\\\phantom{1}${texNombre(racs)}$  (qui est la valeur exacte de $\\\\sqrt{${texNombrec(a * a + b * b)}}$)`\n      } else {\n        if (1000 * miracs < 5) {\n          texteCorr += `$\\\\phantom{1}≈\\\\phantom{1}${texPrix(troncature(racs, 2))}$`\n        } else {\n          texteCorr += `$\\\\phantom{1}≈\\\\phantom{1}${texPrix(troncature(racs + 0.01, 2))}$`\n        }\n      }\n\n      texteCorr += `<br><br>$\\\\begin{aligned}a^2 - b^2& \n  = ${texNombre(a)} \\\\times ${texNombre(a)} - ${texNombre(b)} \\\\times ${texNombre(b)} \n  \\\\\\\\&= ${texNombrec(a * a)} - ${texNombrec(b * b)} \n  \\\\\\\\&= ${texNombrec(a * a - b * b)}\\\\end{aligned}$`\n      texteCorr += `<br>$\\\\phantom{123456}\\\\sqrt{${texNombrec(a * a - b * b)}}$`\n\n      if (carreParfait(calcul(100 * d))) {\n        texteCorr += `$\\\\phantom{1}=\\\\phantom{1}${texNombre(racd)}$  (qui est la valeur exacte de $\\\\sqrt{${texNombrec(a * a - b * b)}}$)`\n      } else {\n        if (1000 * miracd < 5) {\n          texteCorr += `$\\\\phantom{1}≈\\\\phantom{1}${texPrix(troncature(racd, 2))}$`\n        } else {\n          texteCorr += `$\\\\phantom{1}≈\\\\phantom{1}${texPrix(troncature((racd + 0.01), 2))}$`\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","CalculerUneExpressionLitteralePythagore","a","b","n","s","d","racs","racd","miracs","miracd","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","cpt","randint","calcul","Math","sqrt","troncature","texNombre","texNombrec","carreParfait","texPrix","listeQuestionsToContenu"],"sourceRoot":""}