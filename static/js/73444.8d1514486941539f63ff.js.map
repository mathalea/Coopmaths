{"version":3,"file":"js/73444.8d1514486941539f63ff.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G20-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, arrondi, calcul, texNombrec, creerNomDePolygone, texNombre, nombreAvecEspace, texFraction } from '../../modules/outils.js'\nimport { point, milieu, pointSurSegment, labelPoint, segment, polygone, codageAngleDroit, texteSurSegment, texteParPoint, longueur, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Problèmes avec le théorème de Thalès'\n\n/**\n* Banque de problèmes utilisant le théorème de Thalès et différentes propriétés de géométrie\n* @author Rémi Angot\n* 3G20-1\n*/\nexport default function ProblemesThales () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let texte = ''\n    let texteCorr = ''\n    const typesDeQuestions = randint(1, 2)\n    let A, B, C, D, E, M, N, x, k, y, p, codage1, codage2, codage3, codage4, sMN, sBD, sCote, texte1, texte2, texte3, texte4, labels, BC, BD, MN\n    const [nomA, nomB, nomC, nomD] = creerNomDePolygone(4, ['M', 'N'])\n\n    switch (typesDeQuestions) {\n      case 1:\n        x = randint(6, 10)\n        k = calcul(randint(12, 19) / 10)\n        y = calcul(randint(30, 50) / 10);\n        [A, B, C, D, E] = creerNomDePolygone(5)\n        texte = `On sait que $${A}${E}=${texNombre(x)}$ cm ; $${A}${D}=${texNombrec(k * x)}$ cm et $${E}${B}=${texNombre(y)}$ cm.<br>`\n        texte += `Calculer la valeur exacte de $${D}${C}$.`\n        if (context.isHtml) {\n          // Pour le svg toutes les longueurs sont multipliées par 20\n          const fig1 = `<div><svg width=\"450\" height=\"300\" viewBox=\"-40 -40 450 300\" xmlns=\"http://www.w3.org/2000/svg\">\n <polygon points=\"0,0 ${calcul(k * x * 20)},0 ${calcul(k * x * 20)},${calcul(k * y * 20)}  \" fill=\"none\" stroke=\"black\" />\n <line x1=\"${calcul(x * 20)}\" y1=\"0\" x2=\"${calcul(x * 20)}\" y2=\"${calcul(y * 20)}\" stroke=\"black\" /> //[BE]\n <polyline points=\"${calcul(x * 20 - 10)},0 ${calcul(x * 20 - 10)},10 ${calcul(x * 20)},10\" fill=\"none\" stroke=\"black\" />  //Angle droit en E\n <polyline points=\"${calcul(k * x * 20 - 10)},0 ${calcul(k * x * 20 - 10)},10 ${calcul(k * x * 20)},10\" fill=\"none\" stroke=\"black\" />  //Angle droit en D\n <text x=\"-10\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${A}</text> \n <text x=\"${calcul(x * 20)}\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${E}</text> \n <text x=\"${calcul(x * 20)}\" y=\"${calcul(y * 20 + 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${B}</text> \n <text x=\"${calcul(k * x * 20 + 10)}\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${D}</text>\n<text x=\"${calcul(k * x * 20 + 10)}\" y=\"${calcul(k * y * 20 + 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${C}</text>\n</svg></div>`\n\n          const fig2 = `<div><svg width=\"450\" height=\"300\" viewBox=\"-40 -260 450 300\" xmlns=\"http://www.w3.org/2000/svg\">\n <polygon points=\"0,0 ${calcul(k * x * 20)},0 ${calcul(k * x * 20)},${calcul(-k * y * 20)}  \" fill=\"none\" stroke=\"black\" />\n <line x1=\"${calcul(x * 20)}\" y1=\"0\" x2=\"${calcul(x * 20)}\" y2=\"${calcul(-y * 20)}\" stroke=\"black\" /> //[BE]\n <polyline points=\"${calcul(x * 20 - 10)},0 ${calcul(x * 20 - 10)},-10 ${calcul(x * 20)},-10\" fill=\"none\" stroke=\"black\" />  //Angle droit en E\n <polyline points=\"${calcul(k * x * 20 - 10)},0 ${calcul(k * x * 20 - 10)},-10 ${calcul(k * x * 20)},-10\" fill=\"none\" stroke=\"black\" />  //Angle droit en D\n <text x=\"-10\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${A}</text> \n <text x=\"${calcul(x * 20)}\" y=\"10\" text-anchor=\"middle\" alignment-baseline=\"central\">${E}</text> \n <text x=\"${calcul(x * 20)}\" y=\"${calcul(-y * 20 - 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${B}</text> \n <text x=\"${calcul(k * x * 20 + 10)}\" y=\"10\" text-anchor=\"middle\" alignment-baseline=\"central\">${D}</text>\n <text x=\"${calcul(k * x * 20 + 10)}\" y=\"${calcul(-k * y * 20 - 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${C}</text>\n</svg></div>`\n\n          texte += choice([fig1, fig2])\n        } else {\n          const fig1 = `\\\\begin{tikzpicture}[scale=.6]\n\\\\draw (0,0)--(${calcul(k * x)},0)--(${calcul(k * x)},${-k * y})--cycle;\n\\\\draw (${x},0)--(${x},${-y});\n\\\\draw (${x},0) rectangle ++(-.5,-.5);\n\\\\draw (${calcul(k * x)},0) rectangle ++(-.5,-.5);\n\\\\node [above left] at (0,0) {${A}};\n\\\\node [above] at (${x},0) {${E}};\n\\\\node [above right] at (${k * x},0) {${D}};\n\\\\node [below right] at (${k * x},${-k * y}) {${C}};\n\\\\node [below] at (${x},${-y}) {${B}};\n\\\\end{tikzpicture}`\n\n          const fig2 = `\\\\begin{tikzpicture}[scale=.6]\n\\\\draw (0,0)--(${calcul(k * x)},0)--(${calcul(k * x)},${k * y})--cycle;\n\\\\draw (${x},0)--(${x},${y});\n\\\\draw (${x},0) rectangle ++(.5,.5);\n\\\\draw (${calcul(k * x)},0) rectangle ++(.5,.5);\n\\\\node [below left] at (0,0) {${A}};\n\\\\node [below] at (${x},0) {${E}};\n\\\\node [below right] at (${k * x},0) {${D}};\n\\\\node [above right] at (${k * x},${k * y}) {${C}};\n\\\\node [above] at (${x},${y}) {${B}};\n\\\\end{tikzpicture}`\n\n          texte += '<br>' + choice([fig1, fig2])\n        }\n\n        texteCorr = `Les droites $(${E}${B})$ et $(${D}${C})$ sont perpendiculaires à la même droite $(${A}${D})$, elles sont donc parallèles entre elles.`\n        texteCorr += `<br>De plus les points $${A}$, $${E}$, $${D}$  et $${A}$, $${B}$, $${C}$ sont alignés dans cet ordre donc d'après le théorème de Thalès on a :`\n        texteCorr += `<br><br>$\\\\dfrac{${A}${E}}{${A}${D}}=\\\\dfrac{${E}${B}}{${D}${C}}=\\\\dfrac{${A}${B}}{${A}${C}}$`\n        texteCorr += `<br><br>$\\\\dfrac{${texNombre(x)}}{${texNombrec(k * x)}}=\\\\dfrac{${texNombre(y)}}{${D}${C}}$`\n        texteCorr += `<br><br>$${D}${C}=\\\\dfrac{${texNombrec(k * x)}\\\\times${texNombre(y)}}{${texNombre(x)}}=${texNombrec(k * y)}$`\n        break\n\n      case 2:\n        BC = randint(2, 6)\n        BD = 2 * BC\n        MN = calcul(BD * choice([0.2, 0.3, 0.4]))\n        A = point(0, 4, nomA, 'above')\n        B = point(7, 4, nomB, 'above')\n        C = point(7, 0, nomC, 'below')\n        D = point(0, 0, nomD, 'below')\n        p = polygone(A, B, C, D)\n        codage1 = codageAngleDroit(D, A, B)\n        codage2 = codageAngleDroit(A, B, C)\n        codage3 = codageAngleDroit(B, C, D)\n        codage4 = codageAngleDroit(C, D, A)\n        M = pointSurSegment(A, B, longueur(A, B) / 3, 'M', 'above')\n        N = pointSurSegment(A, D, longueur(A, D) / 3, 'N', 'left')\n        sMN = segment(M, N)\n        sBD = segment(B, D)\n        sCote = segment(point(N.x - 1.3, N.y), point(D.x - 1.3, D.y))\n        sCote.styleExtremites = '<->'\n        texte1 = texteParPoint('?', milieu(point(N.x - 1.5, N.y), point(D.x - 1.5, D.y)), 'gauche')\n        texte2 = texteSurSegment(nombreAvecEspace(BD) + ' cm', B, D)\n        texte3 = texteSurSegment(nombreAvecEspace(MN) + ' cm', M, N)\n        texte4 = texteSurSegment(nombreAvecEspace(BC) + ' cm', B, C)\n\n        labels = labelPoint(M, N, A, B, C, D)\n\n        texte = `Sur la figure ci-dessous $${nomA + nomB + nomC + nomD}$ est un rectangle et $(MN)$ est parallèle à la diagonale $(${nomB + nomD})$.`\n        texte += `<br>Calculer la longueur $${nomD + 'N'}$ au millimètre près.<br><br>`\n        texte += mathalea2d({\n          xmin: -2,\n          xmax: 9,\n          ymin: -1.5,\n          ymax: 5,\n          scale: 0.8\n        }, p, codage1, codage2, codage3, codage4, sMN, sBD, sCote, texte1, texte2, texte3, texte4, labels)\n\n        texteCorr = `Dans le triangle $${nomA + nomB + nomD}$, $M$ est un point de $[${nomA + nomB}]$, $N$ est un point de $[${nomA + nomD}]$ et $(MN)$ est parallèle à $(${nomB + nomD})$ donc d'après le théorème de Thalès on a : `\n        texteCorr += `<br><br> $${texFraction(nomA + 'M', nomA + nomB)}=${texFraction(nomA + 'N', nomA + nomD)}=${texFraction('MN', nomB + nomD)}$`\n        texteCorr += `<br><br> $${texFraction(nomA + 'M', nomA + nomB)}=${texFraction(nomA + 'N', BC)}=${texFraction(texNombre(MN), texNombre(BD))}$`\n        texteCorr += `<br><br> $${nomA}N = ${texFraction(BC + '\\\\times' + texNombre(MN), BD)}=${texNombre(arrondi(calcul(BC * MN / BD), 1))}$ cm`\n        texteCorr += `<br><br> Les points $${nomA}$, $N$ et $${nomD}$ sont alignés dans cet ordre donc $N${nomD}=${nomA + nomD}-${nomA}N= ${BC}-${texNombre(arrondi(calcul(BC * MN / BD), 1))}=${texNombre(arrondi(calcul(BC - BC * MN / BD), 1))}$ cm.`\n        break\n    }\n\n    this.listeQuestions[0] = texte\n    this.listeCorrections[0] = texteCorr\n    listeQuestionsToContenu(this)\n    // this.besoinFormulaireNumerique = ['Type de questions',2,\"1 : Donner l'égalité\\n2 : Compléter une égalité avec une addition ou une soustraction\"];\n    // this.besoinFormulaire2CaseACocher = ['Sans figures']\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ProblemesThales","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","typesDeQuestions","randint","A","B","C","D","E","M","N","x","k","y","p","codage1","codage2","codage3","codage4","sMN","sBD","sCote","texte1","texte2","texte3","texte4","labels","BC","BD","MN","nomA","nomB","nomC","nomD","creerNomDePolygone","calcul","texNombre","texNombrec","context","fig1","fig2","choice","point","polygone","codageAngleDroit","pointSurSegment","longueur","segment","styleExtremites","texteParPoint","milieu","texteSurSegment","nombreAvecEspace","labelPoint","mathalea2d","xmin","xmax","ymin","ymax","scale","texFraction","arrondi","listeQuestionsToContenu","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push"],"sourceRoot":""}