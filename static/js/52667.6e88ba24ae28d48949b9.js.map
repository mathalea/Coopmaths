{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G14.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","ProprietesParallelesPerpendiculaires","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","typesDeQuestionsDisponibles","questionsParNiveau","push","range","rangeMinMax","parseInt","concat","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","droites","code","raisonnement","numDroites","phrases","textetemp","d","P","objets","couleurd","droiteP","PP","Inter","droitecolor","num","couleurs","context","texte","texteCorr","i","cpt","length","shuffle","randint","j","point","droiteParPointEtPente","epaisseur","droite","x","droiteParPointEtParallele","pointilles","droiteParPointEtPerpendiculaire","pointIntersectionDD","rotation","codageAngleDroit","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","mainlevee","amplitude","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/52667.6e88ba24ae28d48949b9.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, range, rangeMinMax, shuffle, combinaisonListes } from '../../modules/outils.js'\nimport { point, pointIntersectionDD, droite, droiteParPointEtParallele, droiteParPointEtPerpendiculaire, droiteParPointEtPente, rotation, codageAngleDroit, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Utiliser les propriétés des droites perpendiculaires'\n\n/**\n * Ref 6G14\n * @author Jean-Claude Lhote\n * publié le 22/11/2020\n */\nexport default function ProprietesParallelesPerpendiculaires () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 4\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false\n  this.nouvelleVersion = function () {\n    let typesDeQuestionsDisponibles; const questionsParNiveau = []\n    questionsParNiveau.push(range(3))\n    questionsParNiveau.push(rangeMinMax(9, 15))\n    questionsParNiveau.push(rangeMinMax(19, 31, 20))\n\n    if (this.sup < 4) typesDeQuestionsDisponibles = questionsParNiveau[parseInt(this.sup) - 1]\n    else typesDeQuestionsDisponibles = questionsParNiveau[0].concat(questionsParNiveau[1].concat(questionsParNiveau[2]))\n\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    )\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const droites = []; let code; let raisonnement; let numDroites = []; const phrases = []; let textetemp\n    const d = []; const P = []; const objets = []; const couleurd = []; let droiteP; let PP; let Inter\n    const droitecolor = function (num) {\n      let couleurs\n      context.isHtml ? couleurs = ['red', 'blue', 'green', 'black', 'magenta', 'orange'] : couleurs = ['black', 'black', 'black', 'black', 'black', 'black']\n      return couleurs[num]\n    }\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      texte = ''\n      texteCorr = ''\n      phrases.length = 0\n      droites.length = 0\n      objets.length = 0\n      d.length = 0\n      P.length = 0\n      couleurd.length = 0\n      numDroites = shuffle([1, 2, 3, 4, 5])\n      raisonnement = listeTypeDeQuestions[i]\n\n      switch (raisonnement) {\n        case 0: // si 1//2 et 2//3 alors 1//3\n          code = [[1, 2, 1], [2, 3, 1]]\n          break\n        case 1: // si 1//2 et 2T3 alors 1T3\n          code = [[1, 2, 1], [2, 3, -1]]\n          break\n        case 2: // si 1T2 et 2T3 alors 1//3\n          code = [[1, 2, -1], [2, 3, -1]]\n          break\n        case 3: // si 1T2 et 2//3 alors 1T3\n          code = [[1, 2, -1], [2, 3, 1]]\n          break\n        case 8: // Si 1//2 et 2//3 et 3//4 alors 1//4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1]]\n          break\n        case 9: // Si 1//2 et 2//3 et 3T4 alors 1T4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1]]\n          break\n        case 10: // Si 1//2 et 2T3 et 3//4 alors 1T4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1]]\n          break\n        case 11: // Si 1//2 et 2T3 et 3T4 alors 1//4\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1]]\n          break\n        case 12: // Si 1T2 et 2//3 et 3//4 alors 1T4\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1]]\n          break\n        case 13: // Si 1T2 et 2//3 et 3T4 alors 1//4\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1]]\n          break\n        case 14: // Si 1T2 et 2T3 et 3//4 alors 1//4\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1]]\n          break\n        case 15: // Si 1T2 et 2T3 et 3T4 alors 1T4\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1]]\n          break\n        case 16: // Si 1//2 et 2//3 et 3//4 et 4//5 alors 1//5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, 1]]\n          break\n        case 17: // Si 1//2 et 2//3 et 3T4 et 4//5 alors 1T5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1], [4, 5, 1]]\n          break\n        case 18: // Si 1//2 et 2T3 et 3//4 et 4//5 alors 1T5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, 1], [4, 5, 1]]\n          break\n        case 19: // Si 1//2 et 2T3 et 3T4 et 4//5 alors 1//5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1], [4, 5, 1]]\n          break\n        case 20: // Si 1T2 et 2//3 et 3//4 et 4//5 alors 1T5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1], [4, 5, 1]]\n          break\n        case 21: // Si 1T2 et 2//3 et 3T4 et 4//5 alors 1//5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1], [4, 5, 1]]\n          break\n        case 22: // Si 1T2 et 2T3 et 3//4 et 4//5 alors 1//5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1], [4, 5, 1]]\n          break\n        case 23: // Si 1T2 et 2T3 et 3T4 et 4//5 alors 1T5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1], [4, 5, 1]]\n          break\n        case 24: // Si 1//2 et 2//3 et 3//4 et 4T5 alors 1T5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, -1]]\n          break\n        case 25: // Si 1//2 et 2//3 et 3T4 et 4T5 alors 1//5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1], [4, 5, -1]]\n          break\n        case 26: // Si 1//2 et 2T3 et 3//4 et 4T5 alors 1//5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, 1], [4, 5, -1]]\n          break\n        case 27: // Si 1//2 et 2T3 et 3T4 et 4T5 alors 1T5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1], [4, 5, -1]]\n          break\n        case 28: // Si 1T2 et 2//3 et 3//4 et 4T5 alors 1//5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1], [4, 5, -1]]\n          break\n        case 29: // Si 1T2 et 2//3 et 3T4 et 4T5 alors 1T5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1], [4, 5, -1]]\n          break\n        case 30: // Si 1T2 et 2T3 et 3//4 et 4T5 alors 1T5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1], [4, 5, -1]]\n          break\n        case 31: // Si 1T2 et 2T3 et 3T4 et 4T5 alors 1//5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1], [4, 5, -1]]\n          break\n      }\n\n      // enoncé mélangé\n      texte += 'On sait que '\n      couleurd.push(randint(0, 5))\n      for (let j = 0; j < code.length; j++) {\n        textetemp = `$(d_${numDroites[code[j][0] - 1]})`\n        if (code[j][2] === 1) {\n          textetemp += '//'\n          couleurd.push(couleurd[j])\n        } else {\n          textetemp += '\\\\perp'\n          couleurd.push((couleurd[j] + 1) % 6)\n        }\n        textetemp += `(d_${numDroites[code[j][1] - 1]})$`\n        phrases.push(textetemp)\n      }\n      // phrases=shuffle(phrases)\n      for (let j = 0; j < code.length - 1; j++) {\n        texte += phrases[j]\n        if (j !== code.length - 2) texte += ', '\n        else texte += ' et '\n      }\n      texte += phrases[code.length - 1]\n      texte += `.<br>Que peut-on dire de $(d_${numDroites[code[0][0] - 1]})$ et $(d_${numDroites[code[code.length - 1][1] - 1]})$ ?`\n\n      // construction de la figure\n\n      P.push(point(0, 0))\n      droiteP = droiteParPointEtPente(P[0], randint(-1, 1, 0) / 10, `(d_${numDroites[code[0][0] - 1]})`, droitecolor(couleurd[0]))\n      droiteP.epaisseur = 2\n      droite.pointilles = false\n      d.push(droiteP)\n      objets.push(d[0])\n      for (let x = 0; x < code.length; x++) {\n        if (code[x][2] === 1) {\n          P.push(point((x + 1) * 2, (x + 1) * 2))\n          droiteP = droiteParPointEtParallele(P[x + 1], d[x], `(d_${numDroites[code[x][1] - 1]})`, droitecolor(couleurd[x + 1]))\n          droiteP.epaisseur = 2\n          droiteP.pointilles = d[x].pointilles\n          d.push(droiteP)\n        } else {\n          P.push(point((x + 1) * 2, (x + 1) * 2))\n          droiteP = droiteParPointEtPerpendiculaire(P[x + 1], d[x], `(d_${numDroites[code[x][1] - 1]})`, droitecolor(couleurd[x + 1]))\n          droiteP.epaisseur = 2\n          droiteP.pointilles = x % 3 + 1\n          Inter = pointIntersectionDD(d[x], droiteP)\n          PP = rotation(P[x + 1], Inter, 90)\n          d.push(droiteP)\n          objets.push(codageAngleDroit(PP, Inter, P[x + 1], 'black', 0.6))\n        }\n        objets.push(d[x + 1])\n      }\n      for (let i = 0; i < code.length; i++) { // on ajoute les angles droits\n\n      }\n      // correction raisonnement ordonné\n      context.fenetreMathalea2d = [-2, -2, 15, 10]\n      texteCorr = 'À partir de l\\'énoncé, on peut réaliser le schéma suivant (il en existe une infinité)<br> Les droites données parallèles dans l\\'énoncé sont de même couleur/style.<br>'\n      texteCorr += mathalea2d({ xmin: -2, xmax: 15, ymin: -2, ymax: 10, pixelsParCm: 20, scale: 0.3, mainlevee: false, amplitude: 0.3 }, objets) + '<br>'\n      for (let j = 0; j < code.length - 1; j++) {\n        if (this.correctionDetaillee) texteCorr += 'On sait que : '\n        else texteCorr += 'Comme '\n        texteCorr += `$(d_${numDroites[code[j][0] - 1]})`\n        if (code[j][2] === 1) texteCorr += '//'\n        else texteCorr += '\\\\perp'\n        texteCorr += `(d_${numDroites[code[j][1] - 1]})$ et `\n        texteCorr += `$(d_${numDroites[code[j + 1][0] - 1]})`\n        if (code[j + 1][2] === 1) texteCorr += '//'\n        else texteCorr += '\\\\perp'\n        texteCorr += `(d_${numDroites[code[j + 1][1] - 1]})$`\n        // quelle propriété ?\n        if (code[j][2] * code[j + 1][2] === -1) { // Une parallèle et une perpendiculaire\n          if (this.correctionDetaillee) texteCorr += '.<br> Or «Si deux droites sont parallèles alors toute droite perpendiculaire à l\\'une est aussi perpendiculaire à l\\'autre».<br>Donc'\n          else texteCorr += ', on en déduit que '\n          texteCorr += ` $(d_${numDroites[code[0][0] - 1]})\\\\perp(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = -1\n        } else if (code[j][2] > 0) { // deux parallèles\n          if (this.correctionDetaillee) texteCorr += '.<br> Or «Si deux droites sont parallèles à une même droite alors elles sont parallèles entre elles».<br>Donc'\n          else texteCorr += ', on en déduit que '\n          texteCorr += ` $(d_${numDroites[code[0][0] - 1]})//(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = 1\n        } else { // deux perpendiculaires\n          if (this.correctionDetaillee) texteCorr += '.<br> Or «Si deux droites sont perpendiculaires à une même droite alors elles sont parallèles entre elles».<br>Donc'\n          else texteCorr += ', on en déduit que '\n          texteCorr += ` $(d_${numDroites[code[0][0] - 1]})//(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = 1\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte + '<br>')\n        this.listeCorrections.push(texteCorr + '<br>')\n        i++\n      }\n      cpt++\n    }\n\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Nombre d\\'étapes de raisonnement :', 4, '1 : 1 étape\\n 2 : 2 étapes\\n 3 : 3 étapes\\n4 : Mélange aléatoire']\n  // this.besoinFormulaire2CaseACocher = [\n  //  \"Avec figure ? \",false];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}