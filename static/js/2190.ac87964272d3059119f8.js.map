{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C20.js"],"names":["amcReady","amcType","interactifReady","titre","AdditionnerSoustrairesDecimaux","Exercice","this","consigne","spacing","context","spacingCorr","nbQuestions","sup","tailleDiaporama","nouvelleVersion","typesDeQuestions","reponse","parseInt","listeQuestions","listeCorrections","typesAdditions","combinaisonListes","typesSoustractions","listeTypeDeQuestions","i","push","texte","texteCorr","a","b","cpt","randint","calcul","texNombre","Operation","operande1","operande2","type","setReponse","interactif","ajouteChampTexte","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique"],"mappings":"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","file":"js/2190.ac87964272d3059119f8.js","sourcesContent":["import Operation from '../../modules/operations.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, texNombre } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const amcReady = false // jusqu'à ce qu'il soit adapté à la version 2.6\nexport const amcType = 4 // Question numérique\nexport const interactifReady = true\n\nexport const titre = 'Additions et soustractions de nombres décimaux'\n\n/**\n * Additions et soustractions de nombres décimaux\n * * xxx-xx,x\n * * xxx-xx,xx\n * * xxx,x-xxx\n * * x0x-xx9,x\n * * xxx+xx,x\n * * xxx+xx,xx\n * * xxx,x+xxx\n * * x0x+xx9,x\n * @author Rémi Angot\n * Référence 6C20\n */\nexport default function AdditionnerSoustrairesDecimaux () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.consigne = 'Poser et effectuer les calculs suivants.'\n  this.spacing = 2\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1) // Important sinon les opérations posées ne sont pas jolies\n  this.nbQuestions = 4\n  this.sup = 3\n  this.tailleDiaporama = 100\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestions, reponse\n    const typesAdditions = combinaisonListes(\n      [5, 6, 7, 8],\n      this.nbQuestions\n    )\n    const typesSoustractions = combinaisonListes(\n      [1, 2, 3, 4],\n      this.nbQuestions\n    )\n    let listeTypeDeQuestions = []\n    if (this.sup === 1) {\n      listeTypeDeQuestions = combinaisonListes([5, 6, 7, 8], this.nbQuestions)\n    } else if (this.sup === 2) {\n      listeTypeDeQuestions = combinaisonListes([1, 2, 3, 4], this.nbQuestions)\n    } else {\n      for (let i = 0; i < this.nbQuestions; i++) {\n        if (i + 1 <= this.nbQuestions / 2) {\n          // première moitié sont des additions mais si c'est impair on prendra plus de soustractions\n          listeTypeDeQuestions.push(typesAdditions[i])\n        } else {\n          listeTypeDeQuestions.push(typesSoustractions[i])\n        }\n      }\n    }\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0, a, b;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        case 1: // xxx-xx,x\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9)\n          b = calcul(randint(5, 9) * 10 + randint(6, 9) + randint(1, 9) / 10)\n          texte = `$${texNombre(a)}-${texNombre(b)}$`\n          reponse = calcul(a - b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break\n        case 2: // xxx-xx,xx\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9)\n          b = calcul(\n            randint(5, 9) * 10 +\n            randint(6, 9) +\n            randint(1, 9) / 10 +\n            randint(1, 9) / 100\n          )\n          texte = `$${texNombre(a)}-${texNombre(b)}$`\n          reponse = calcul(a - b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break\n        case 3: // xxx,x-xxx\n          a = calcul(\n            randint(5, 9) * 100 +\n            randint(2, 5) * 10 +\n            randint(1, 9) +\n            randint(1, 9) / 10\n          )\n          b = randint(1, 4) * 100 + randint(6, 9) * 10 + randint(1, 9)\n          texte = `$${texNombre(a)}-${texNombre(b)}$`\n          reponse = calcul(a - b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break\n        case 4: // x0x-xx9,x\n          a = calcul(randint(5, 9) * 100 + randint(1, 5))\n          b = calcul(\n            randint(1, 4) * 100 + randint(1, 9) * 10 + 9 + randint(1, 9) / 10\n          )\n          texte = `$${texNombre(a)}-${texNombre(b)}$`\n          reponse = calcul(a - b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break\n        case 5: // xxx+xx,x\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9)\n          b = calcul(randint(5, 9) * 10 + randint(6, 9) + randint(1, 9) / 10)\n          texte = `$${texNombre(a)}+${texNombre(b)}$`\n          reponse = calcul(a + b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n        case 6: // xxx+xx,xx\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9)\n          b = calcul(\n            randint(5, 9) * 10 +\n            randint(6, 9) +\n            randint(1, 9) / 10 +\n            randint(1, 9) / 100\n          )\n          texte = `$${texNombre(a)}+${texNombre(b)}$`\n          reponse = calcul(a + b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n        case 7: // xxx,x+xxx\n          a = calcul(\n            randint(5, 9) * 100 +\n            randint(2, 5) * 10 +\n            randint(1, 9) +\n            randint(1, 9) / 10\n          )\n          b = randint(1, 4) * 100 + randint(6, 9) * 10 + randint(1, 9)\n          texte = `$${texNombre(a)}+${texNombre(b)}$`\n          reponse = calcul(a + b)\n\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n        case 8: // x0x+xx9,x\n          a = calcul(randint(5, 9) * 100 + randint(1, 5))\n          b = calcul(\n            randint(1, 4) * 100 + randint(1, 9) * 10 + 9 + randint(1, 9) / 10\n          )\n          texte = `$${texNombre(a)}+${texNombre(b)}$`\n          reponse = calcul(a + b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n      }\n      setReponse(this, i, reponse)\n      if (this.interactif && context.isHtml) texte += '$~=$' + ajouteChampTexte(this, i)\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        // this.qcm[1].push([texte, [texteCorr, reponse], { digits: 0, decimals: 0, signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 }])\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Additions de décimaux\\n2: Soustraction de décimaux\\n3 : Additions et soustraction de décimaux']\n}\n"],"sourceRoot":""}