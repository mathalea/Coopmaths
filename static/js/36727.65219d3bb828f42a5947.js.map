{"version":3,"file":"js/36727.65219d3bb828f42a5947.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4G15.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint } from '../../modules/outils.js'\nimport { symetrieAnimee, rotationAnimee, translationAnimee, polygone, mathalea2d, point, milieu, pointSurSegment, droite, mediatrice, translation, similitude, rotation, pointAdistance, longueur, symetrieAxiale, vecteur, latexParPoint, tracePoint, labelPoint, polygoneAvecNom, renommePolygone, nommePolygone } from '../../modules/2d.js'\nimport Alea2iep from '../../modules/Alea2iep.js'\n\nexport const titre = 'Tranformations de triangle'\nexport default function LeNomDeLaFonctionExercice () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = 'Tranformations de triangle'\n  this.nbQuestions = 1 // Ici le nombre de questions (une seule pour cet exercice non modifiable)\n  this.nbQuestionsModifiable = false // désactive le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.typeExercice = 'IEP'\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n\n  //  this.sup = false; // A décommenter : valeur par défaut d'un premier paramètre\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.sup3 = false; // A décommenter : valeur par défaut d'un troisième paramètre\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function (numeroExercice) {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    // Ci-dessus On crée une liste aléatoire comprenant nbQuestions parmi les types disponibles.\n    /* Un exemple ci-dessous : si la classe est 6, alors les types dispo sont 1 et 2 sinon , 1,2,3 et 4.\n  if (this.classe == 6) typesDeQuestionsDisponibles = [1, 2]\n      else typesDeQuestionsDisponibles = [1, 2, 3,4]\n  listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n  */\n    // boucle pour fabriquer les nbQuestions questions en s'assurant que si il n'y a pas nbQuestions différentes\n    // La boucle s'arrête après 50 tentatives.\n\n    const objetsEnonce = [] // on initialise le tableau des objets Mathalea2d de l'enoncé\n    const objetsCorrection = [] // Idem pour la correction\n\n    let texteCorr = '' // Idem pour le texte de la correction.\n    let largeur = 20; let hauteur = 20\n    let A, B, C, triangle, triangle0, O, M, X, Y, triangle1, A1, B1, C1, d1, triangle2, med, D, F, triangle3, triangle4, triangle5, traces, labels\n    let xMin, xMax, yMin, yMax\n    let alpha, beta\n    const anim = new Alea2iep()\n    /***************************************/\n    /** ******Ici on définit les objets 2d */\n    /*************************************/\n    while (largeur > 16 && hauteur > 16) {\n      xMin = 0\n      xMax = 0\n      yMin = 0\n      yMax = 0\n      A = point(0, 0, 'A')\n      B = pointAdistance(A, randint(40, 60) / 10, randint(70, 100), 'B')\n      C = similitude(B, A, randint(20, 50), randint(8, 12) / 10, 'C')\n      triangle0 = polygone(A, B, C)\n      triangle = polygoneAvecNom(A, B, C)\n      // d0=droite(A,B)\n      O = pointSurSegment(B, A, 2 + longueur(A, B))\n      // d0.isVisible=false\n      beta = randint(-45, -20)\n      A1 = rotation(A, O, beta, 'A')\n      B1 = rotation(B, O, beta, 'B')\n      C1 = rotation(C, O, beta, 'C')\n      triangle1 = polygone(A1, B1, C1)\n      renommePolygone(triangle1, ['$A_1$', '$B_1$', '$C_1$'])\n      M = milieu(A, A1)\n      d1 = droite(A1, B1)\n      triangle2 = symetrieAxiale(triangle1, d1)\n      renommePolygone(triangle2, ['$A_1$', '$B_1$', '$C_1$'])\n      med = mediatrice(A, A1)\n      X = pointSurSegment(M, O, 5)\n      Y = pointSurSegment(O, M, 10)\n      D = similitude(B1, A1, randint(-40, -10), 1.5, 'D')\n      triangle3 = rotation(triangle2, D, 180)\n      renommePolygone(triangle3, ['$A_2$', '$B_2$', '$C_2$'])\n      F = translation(D, vecteur(B, A), 'F')\n      traces = tracePoint(D, F)\n      labels = labelPoint(D, F)\n      triangle4 = translation(triangle3, vecteur(D, F))\n      renommePolygone(triangle4, ['$A_3$', '$B_3$', '$C_3$'])\n      alpha = -randint(80, 110)\n      triangle5 = rotation(triangle4, F, alpha)\n      renommePolygone(triangle5, ['$A_4$', '$B_4$', '$C_4$'])\n\n      for (let i = 0; i < 3; i++) {\n        xMin = Math.min(xMin, triangle0.listePoints[i].x, triangle1.listePoints[i].x, triangle2.listePoints[i].x, triangle3.listePoints[i].x, triangle4.listePoints[i].x, triangle5.listePoints[i].x)\n        xMax = Math.max(xMax, triangle0.listePoints[i].x, triangle1.listePoints[i].x, triangle2.listePoints[i].x, triangle3.listePoints[i].x, triangle4.listePoints[i].x, triangle5.listePoints[i].x)\n        yMin = Math.min(yMin, triangle0.listePoints[i].y, triangle1.listePoints[i].y, triangle2.listePoints[i].y, triangle3.listePoints[i].y, triangle4.listePoints[i].y, triangle5.listePoints[i].y)\n        yMax = Math.max(yMax, triangle0.listePoints[i].y, triangle1.listePoints[i].y, triangle2.listePoints[i].y, triangle3.listePoints[i].y, triangle4.listePoints[i].y, triangle5.listePoints[i].y)\n      }\n      xMax += 4\n      xMin--\n      yMin--\n      yMax++\n      largeur = xMax - xMin\n      hauteur = yMax - yMin\n    }\n\n    let texte = 'Construire<br>$A_1B_1C_1$ le triangle symétrique de $ABC$ par rapport à la droite $(d)$;<br>' // Nous utilisons souvent cette variable pour construire le texte de la question.\n    texte += '$A_2B_2C_2$ le triangle symétrique de $A_1B_1C_1$ par rapport au point $D$;<br>'\n    texte += '$A_3B_3C_3$ le triangle translaté de $A_2B_2C_2$ tel que $D$ soit transformé en $F$;<br>'\n    texte += `$A_4B_4C_4$ le triangle obtenu par la rotation de $A_3B_3C_3$ de centre $F$ et d'angle $${Math.abs(alpha)}\\\\degree$ dans le sens des aiguilles d'une montre.<br>`\n\n    const nomd = latexParPoint('(d)', translation(milieu(B, B1), vecteur(1, 0)), 'black', 30, 12, '')\n    const triangle2a = symetrieAnimee(triangle0, med, `id='anim${numeroExercice}A' begin=\"0s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\n    const triangle3a = rotationAnimee(triangle2, D, 180, `id='anim${numeroExercice}B' begin=\"2s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\n    const triangle4a = translationAnimee(triangle3, vecteur(D, F), `id='anim${numeroExercice}C' begin=\"4s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\n    const triangle5a = rotationAnimee(triangle4, F, alpha, `id='anim${numeroExercice}D' begin=\"6s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\n    anim.vitesse = 15\n    anim.tempo = 0.5\n    anim.recadre(xMin, yMax)\n    anim.polygoneRapide(...triangle0.listePoints)\n    anim.pointsCreer(A, B, C, F, D)\n    anim.couleur = 'black'\n    anim.traitRapide(X, Y)\n    anim.textePoint('(d)', milieu(B, B1))\n    anim.symetrieAxialePolygone(triangle0, med, ['A_1', 'B_1', 'C_1'], { couleur: 'blue', couleurCodage: 'lightblue' })\n    anim.demiTourPolygone(triangle2, D, ['A_2', 'B_2', 'C_2'], { couleur: 'red', couleurCodage: 'pink' })\n    anim.translationPolygone(triangle3, D, F, ['A_3', 'B_3', 'C_3'], { couleur: 'brown', couleurCodage: 'orange' })\n    anim.rotationPolygone(triangle4, F, alpha, ['A_4', 'B_4', 'C_4'], { couleur: 'green', couleurCodage: 'lightgreen' })\n    anim.crayonMasquer()\n\n    context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n    objetsEnonce.push(triangle0, triangle[1], traces, labels, med, nomd) // On rempli les tableaux d'objets Mathalea2d\n    objetsCorrection.push(triangle0, triangle[1], traces, labels, med, nomd, triangle2, nommePolygone(triangle2), triangle3, nommePolygone(triangle3), triangle4, nommePolygone(triangle4), triangle5, nommePolygone(triangle5), triangle2a, triangle3a, triangle4a, triangle5a)\n\n    // paramètres de la fenêtre Mathalea2d pour l'énoncé main levée\n    //    paramsEnonceml = { xmin: Math.min(objetsEnonceml.x), ymin: Math.min(objetsEnonceml.y), xmax: Math.max(objetsEnonceml.x), ymax: Math.max(objetsEnonceml.y), pixelsParCm: 20, scale: 1, mainlevee: true, amplitude: 1 }\n    // paramètres de la fenêtre Mathalea2d pour l'énoncé normal\n    const paramsEnonce = { xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 1, mainlevee: false }\n    // paramètres de la fenêtre Mathalea2d pour la correction\n    const paramsCorrection = { xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 1 }\n    // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n    texte += mathalea2d(paramsEnonce, objetsEnonce)\n    // On ajoute au texte de la correction, la figure de la correction\n    texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n    texteCorr += '<br>'\n    texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}A').beginElement()\"><i class=\"redo circle icon\"></i>symétrie axiale</button>`\n    texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}B').beginElement()\"><i class=\"redo circle icon\"></i>symétrie centrale</button>`\n    texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}C').beginElement()\"><i class=\"redo circle icon\"></i>translation</button>`\n    texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}D').beginElement()\"><i class=\"redo circle icon\"></i>rotation</button>`\n\n    texteCorr += anim.html(numeroExercice)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n\n  // this.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","LeNomDeLaFonctionExercice","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","typeExercice","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","objetsEnonce","objetsCorrection","A","B","C","triangle","triangle0","O","M","X","Y","triangle1","A1","B1","C1","d1","triangle2","med","D","F","triangle3","triangle4","triangle5","traces","labels","xMin","xMax","yMin","yMax","alpha","beta","texteCorr","largeur","hauteur","anim","Alea2iep","point","pointAdistance","randint","similitude","polygone","polygoneAvecNom","pointSurSegment","longueur","rotation","renommePolygone","milieu","droite","symetrieAxiale","mediatrice","translation","vecteur","tracePoint","labelPoint","i","Math","min","listePoints","x","max","y","texte","abs","nomd","latexParPoint","triangle2a","symetrieAnimee","triangle3a","rotationAnimee","triangle4a","translationAnimee","triangle5a","vitesse","tempo","recadre","polygoneRapide","pointsCreer","couleur","traitRapide","textePoint","symetrieAxialePolygone","couleurCodage","demiTourPolygone","translationPolygone","rotationPolygone","crayonMasquer","context","push","nommePolygone","paramsEnonce","xmin","ymin","xmax","ymax","pixelsParCm","scale","mainlevee","paramsCorrection","mathalea2d","html","listeQuestionsToContenu","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}