{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta4C31.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","Comparer_puissance10","context","sup","typesDeQuestionsDisponibles","i","texte","texteCorr","cpt","a1","a2","n1","n2","nbA1","nbA2","combinaisonListes","randint","choice","rangeMinMax","numAlpha","ecriturePuissance","texNombre","texteEnCouleurEtGras","indexOf","push","listeQuestionsToContenu"],"mappings":"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","file":"js/30847.d02815880a864bbacd9f.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,combinaisonListes,randint,choice,rangeMinMax,ecriturePuissance,numAlpha,texteEnCouleurEtGras,texNombre} from '../../modules/outils.js'\n\nexport const titre = 'Puissances de 10'\n\n/**\n * * Comparer des puissances de 10.\n *\n * Paramétrages possibles :\n * 1 : Puissances de 10 seules\n * 2 : mantisses différentes et même exposant\n * 3 : mêmes mantisses et exposants différents\n * 4 : mantisses et exposants différents\n * 5 : mantisses (négatives) et exposants différents\n * 6 : Tous types\n * Programmes : p130 : \"Comparer, ranger, encadrer des nombres rationnels en écriture décimale, fractionnaire ou scientifique\n * @author Erwan Duplessy\n * date : 15/11/2020\n * 4C30-4\n */\nexport default function Comparer_puissance10() {\n  'use strict';\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"Dans chaque cas, comparer les deux nombres. Les deux nombres sont écrits en écriture scientifique.\";\n  this.nbQuestions = 5; // Ici le nombre de questions\n  this.nbQuestionsModifiable=true // Active le formulaire nombre de questions\n  this.correctionDetailleeDisponible = true;\n  context.isHtml ? this.correctionDetaillee = true : this.correctionDetaillee = false;\n  this.spacing = 2;\n  this.spacingCorr = 2;\n  this.nbQuestions = 5;\n  this.nbCols = 2;\n  this.nbColsCorr = 2;\n  this.sup = 1;\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let typesDeQuestionsDisponibles = [];       \n    typesDeQuestionsDisponibles = [1,2,3,4,5]; \n\n    for (let i = 0, texte=``, texteCorr=``, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      let a1 = 0; // mantisse 1\n      let a2 = 0; // mantisse 2\n      let n1 = 0; // puissance 1\n      let n2 = 0; // puissance 2\n      let nbA1 = 0; // valeur numérique du nombre 1\n      let nbA2 = 0; // valeur numérique du nombre 2\n      this.listeQuestions = [] // tableau contenant la liste des questions \n      this.listeCorrections = []\n      let typesDeQuestionsDisponibles=[1,2,3,4,5] // tableau à compléter par valeurs possibles des types de questions\n      let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          a1 = 1;\n          n1 = randint(-9, 9);\n          a2 = 1;\n          n2 = choice(rangeMinMax(-9, 9), [n1]);\n          nbA1 = a1 * 10 ** n1;\n          nbA2 = a2 * 10 ** n2;\n          break;\n        case 2:\n          a1 = randint(1, 9) + 0.1 * randint(1, 9) * randint(0, 1);\n          n1 = randint(-9, 9);\n          a2 = choice([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [a1]) + 0.1 * randint(1, 9) * randint(0, 1);\n          n2 = n1;\n          nbA1 = a1 * 10 ** n1;\n          nbA2 = a2 * 10 ** n2;\n          break;\n        case 3:\n          a1 = randint(1, 9) + 0.1 * randint(0, 9) + 0.01 * randint(0, 9);\n          n1 = randint(-9, 9);\n          a2 = a1;\n          n2 = randint(-9, 9);\n          break;\n        case 4:\n          a1 = randint(1, 9) + 0.1 * randint(0, 9);\n          n1 = randint(-9, 9);\n          a2 = choice(rangeMinMax(1, 99)) / 10;\n          n2 = randint(-9, 9);\n          break;\n        case 5:\n          a1 = choice(rangeMinMax(-99, 99, [0])) / 10;\n          n1 = randint(-9, 9);\n          a2 = choice(rangeMinMax(-99, 99, [0])) / 10;\n          n2 = randint(-9, 9);\n          break;\n        }\n      nbA1 = a1 * 10 ** n1;\n      nbA2 = a2 * 10 ** n2;\n      texte += numAlpha(i) + ` ` + ecriturePuissance(a1, 10, n1) + \" et \" + ecriturePuissance(a2, 10, n2) + \"<br>\";\n      // début correction détaillée\n      texteCorr += numAlpha(i) + ` `;\n      if (this.correctionDetaillee) {\n        if (nbA1==nbA2) {\n          texteCorr += `Les deux nombres ont la même écriture, ils sont donc égaux. <br>`;\n        } else {\n          if (a1*a2==0){\n            texteCorr += `L'un des deux nombres est nul. Il suffit de regarder le signe de l'autre. <br>`;\n          }\n          else {\n            if (a1*a2<0) { // a1 et a2 de signes opposés\n              texteCorr += `Les deux nombres sont de signes opposés. Le plus petit nombre est donc le nombre négatif. <br>`;\n            } else {\n              if (a1>0 && a2>0) { // a1 et a2 strictement positifs\n                texteCorr += `Les deux nombres sont positifs. On compare les exposants de l'écriture scientifique : `;\n                if (n1>n2) {\n                  texteCorr += `$${n1} > ${n2}$. <br>`;\n                }\n                if (n1==n2) {\n                  texteCorr += `Les exposants sont égaux. On compare ${texNombre(a1)} et ${texNombre(a2)} : `;\n                  if (a1<a2) {\n                    texteCorr += `$${texNombre(a1)} < ${texNombre(a2)}$. <br>`;\n                  } else {\n                    texteCorr += `$${texNombre(a1)} > ${texNombre(a2)}$. <br>`;\n                  }\n                }\n                if (n1<n2) {\n                  texteCorr += `$${n1} < ${n2}$.<br>`;\n                }  \n              }\n              if (a1<0 && a2<0) { // a1 et a2 strictement négatifs\n                texteCorr += `Les deux nombres sont négatifs. Ils sont rangés dans l'ordre contraire de leur opposé : ${ecriturePuissance(-a1, 10, n1)} et ${ecriturePuissance(-a2, 10, n2)}. <br>`;\n                texteCorr += `On compare les exposants de l'écriture scientifique : `; \n                if (n1>n2) {\n                  texteCorr += `$${n1} > ${n2}$. Donc ${ecriturePuissance(-a1, 10, n1)} $>$ ${ecriturePuissance(-a2, 10, n2)}. <br>`;\n                }\n                if (n1==n2) {\n                  texteCorr += `les exposants sont égaux. On compare ${texNombre(a1)} et ${texNombre(a2)} : `;\n                  if (a1<a2) {\n                    texteCorr += `$${texNombre(a1)} < ${texNombre(a2)}$. Donc ${ecriturePuissance(-a1, 10, n1)} $<$ ${ecriturePuissance(-a2, 10, n2)}. <br><br>`;\n                  } else {\n                    texteCorr += `$${texNombre(a1)} > ${texNombre(a2)}$. Donc ${ecriturePuissance(-a1, 10, n1)} $>$ ${ecriturePuissance(-a2, 10, n2)}. <br><br>`;\n                  }\n                }\n                if (n1<n2) {\n                  texteCorr += `$${n1} < ${n2}$. Donc ${ecriturePuissance(-a1, 10, n1)} $<$ ${ecriturePuissance(-a2, 10, n2)}. <br>`;\n                }             \n              }  \n            }\n          }\n\n        }\n      texteCorr += texteEnCouleurEtGras(`Conclusion : `);\n      } // fin de la correction détaillée\n      // correction courte :\n      if (nbA1 > nbA2) {\n        texteCorr += texteEnCouleurEtGras(` ${ecriturePuissance(a1, 10, n1)} $>$ ${ecriturePuissance(a2, 10, n2)} <br>`);\n       } else {\n         if (nbA1 == nbA2) {\n          texteCorr += texteEnCouleurEtGras(` ${ecriturePuissance(a1, 10, n1)} $=$ ${ecriturePuissance(a2, 10, n2)} <br>`);\n           } else {\n           texteCorr += texteEnCouleurEtGras(` ${ecriturePuissance(a1, 10, n1)} $<$ ${ecriturePuissance(a2, 10, n2)} <br>`);\n         }\n     }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n      i++;\n    }\n    cpt++\n  }\n  listeQuestionsToContenu(this); //Espacement de 2 em entre chaque questions.\n  };\n}\n"],"sourceRoot":""}