{"version":3,"file":"js/97643.08ff136aa23f5c4b413a.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { randint, combinaisonListes, calcul, lettreDepuisChiffre, texNombre, listeQuestionsToContenu } from '../../modules/outils.js'\nimport { droiteGraduee2, mathalea2d } from '../../modules/2d.js'\nimport { context } from '../../modules/context.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Lire l’abscisse entière d’un point (grands nombres)'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCOpen'\n\n/**\n * Lire l'abscisse entière d'un point\n * @author Jean-Claude Lhote et Rémi Angot\n * référence 6N11\n * Relecture : Novembre 2021 par EE\n */\nexport default function LireAbscisseEntiere2d () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Lire l'abscisse de chacun des points suivants.\"\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 4\n  this.interactif = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    // numeroExercice est 0 pour l'exercice 1\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (parseInt(this.sup) === 4) { typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else {\n      typesDeQuestions = combinaisonListes(\n        [parseInt(this.sup)],\n        this.nbQuestions\n      )\n    }\n    const d = []\n    for (let i = 0, abs0, l1, l2, l3, x1, x2, x3, pas1, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // La ligne suivante ne doit pas être mise après les setReponses car sinon elle les efface\n      this.autoCorrection[3 * i] = { propositions: [{ statut: 4, feedback: '' }] }\n      this.autoCorrection[3 * i + 1] = { propositions: [{ statut: 4, feedback: '' }] }\n      this.autoCorrection[3 * i + 2] = { propositions: [{ statut: 4, feedback: '' }] }\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n      switch (typesDeQuestions[i]) {\n        case 1: // Placer des entiers sur un axe (milliers)\n          abs0 = randint(1, 9) * 1000\n          pas1 = 0.001\n          break\n\n        case 2: // Placer des entiers sur un axe (dizaines de mille)\n          abs0 = randint(5, 15) * 10000\n          pas1 = 0.0001\n          break\n\n        case 3: // Placer des entiers sur un axe (centaines de mille)\n          abs0 = randint(35, 85) * 100000\n          pas1 = 0.00001\n          break\n      }\n      x1 = calcul(randint(0, 27) / 10)\n      x2 = calcul(randint(33, 47) / 10)\n      x3 = calcul(randint(53, 67) / 10)\n\n      d[2 * i] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        step1: 10,\n        labelListe: [[0, `${texNombre(abs0)}`], [1, `${texNombre(calcul(abs0 + 1 / pas1))}`]],\n        pointListe: [[x1, l1], [x2, l2], [x3, l3]]\n      })\n      d[2 * i + 1] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        step1: 10,\n        labelListe: [\n          [x1, texNombre(calcul(x1 / pas1 + abs0))],\n          [x2, texNombre(calcul(x2 / pas1 + abs0))],\n          [x3, texNombre(calcul(x3 / pas1 + abs0))]\n        ],\n        pointListe: [[x1, l1], [x2, l2], [x3, l3]]\n\n      })\n\n      texte = mathalea2d({ xmin: -2, ymin: -1, xmax: 30, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i])\n      texteCorr = mathalea2d({ xmin: -2, ymin: -2, xmax: 30, ymax: 2, pixelsParCm: 20, scale: 0.5 }, d[2 * i + 1])\n\n      if (this.interactif && context.isHtml) {\n        setReponse(this, 3 * i, calcul(x1 / pas1 + abs0))\n        setReponse(this, 3 * i + 1, calcul(x2 / pas1 + abs0))\n        setReponse(this, 3 * i + 2, calcul(x3 / pas1 + abs0))\n        texte += '<br>' + ajouteChampTexteMathLive(this, 3 * i, 'inline largeur75', { texte: l1 })\n        texte += '<br>' + ajouteChampTexteMathLive(this, 3 * i + 1, 'inline largeur75', { texte: l2 })\n        texte += '<br>' + ajouteChampTexteMathLive(this, 3 * i + 2, 'inline largeur75', { texte: l3 })\n      } else {\n        if (context.isAmc) {\n          this.autoCorrection[i].enonce = texte\n          this.autoCorrection[i].propositions[0].texte = texteCorr\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    '1 : Milliers\\n2 : Dizaines de mille\\n3 : Centaines de mille\\n4 : Mélange'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","LireAbscisseEntiere2d","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","interactif","nouvelleVersion","numeroExercice","typesDeQuestions","listeQuestions","listeCorrections","autoCorrection","contenu","contenuCorrection","parseInt","combinaisonListes","d","abs0","l1","l2","l3","x1","x2","x3","pas1","i","texte","texteCorr","cpt","propositions","statut","feedback","lettreDepuisChiffre","randint","calcul","droiteGraduee2","Unite","Min","Max","axeStyle","pointTaille","pointStyle","labelsPrincipaux","thickSec","step1","labelListe","texNombre","pointListe","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","context","setReponse","ajouteChampTexteMathLive","enonce","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}