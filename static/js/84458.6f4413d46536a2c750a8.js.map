{"version":3,"file":"js/84458.6f4413d46536a2c750a8.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4L20-0.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/can4L01.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, rienSi1, ecritureAlgebrique, ecritureParentheseSiNegatif, signe, abs, miseEnEvidence, texFraction, sp } from '../../modules/outils.js'\nimport { setReponse, ajouteChampTexteMathLive } from '../../modules/gestionInteractif.js'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\nexport const titre = 'Équation du premier degré à solutions entières'\n\n/**\n * Équation du premier degré\n * * Type 1 : x+a=b ou ax=b\n * * Type 2 : ax+b=c\n * * Type 3 : ax+b=cx+d\n * * Tous les types\n * @author Rémi Angot\n * Modifications de 4L20 pour n'avoir que des solutions entières : Jean-Claude Lhote\n * 4L20-0\n */\nexport default function ExerciceEquationASolutionEntiere () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre les équations suivantes'\n  this.spacing = 2\n  context.isHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 2)\n  this.correctionDetailleeDisponible = true\n  if (!context.isHtml) {\n    this.correctionDetaillee = false\n  } else {\n    this.correctionDetaillee = true\n  }\n  this.sup = true // Avec des nombres relatifs\n  this.sup2 = 4 // Choix du type d'équation\n  this.nbQuestions = 6\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    switch (this.sup2.toString()) {\n      case '1':\n        listeTypeDeQuestions = ['ax=b', 'x+b=c']\n        break\n      case '2':\n        listeTypeDeQuestions = ['ax+b=c']\n        break\n      case '3':\n        listeTypeDeQuestions = ['ax+b=cx+d']\n        break\n      default:\n        listeTypeDeQuestions = [\n          'ax+b=0',\n          'ax+b=c',\n          'ax=b',\n          'x+b=c',\n          'ax+b=cx+d'\n        ]\n        break\n    }\n    listeTypeDeQuestions = combinaisonListes(\n      listeTypeDeQuestions,\n      this.nbQuestions\n    )\n    for (let i = 0, a, b, c, d, reponse, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      switch (listeTypeDeQuestions[i]) {\n        case 'ax+b=0':\n        case 'ax+b=c':\n          if (listeTypeDeQuestions[i] === 'ax+b=0') {\n            c = 0\n          } else {\n            c = randint(-9, 9, [0])\n          }\n          reponse = randint(-5, 5, [0, -1, 1])\n          a = randint(-5, 5, [-1, 0, 1])\n          if (!this.sup) {\n            reponse = Math.abs(reponse)\n            a = Math.abs(a)\n            c = Math.abs(c)\n          }\n          b = c - a * reponse // b peut être négatif, ça sera une équation du type x-b=c\n          texte = `$${a}x${ecritureAlgebrique(b)}=${c}$`\n          texteCorr = texte + '<br>'\n          if (this.correctionDetaillee) {\n            if (b > 0) {\n              texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n            } else {\n              texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n            }\n          }\n          texteCorr += `$${a}x${ecritureAlgebrique(b)}${miseEnEvidence(\n          ecritureAlgebrique(-1 * b)\n        )}=${c}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n          texteCorr += `$${a}x=${c - b}$<br>`\n          if (this.correctionDetaillee) {\n            texteCorr += `On divise les deux membres par $${a}$.<br>`\n          }\n          texteCorr += `$${a}x${miseEnEvidence(\n          '\\\\div' + ecritureParentheseSiNegatif(a)\n        )}=${c - b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a))}$<br>`\n          texteCorr += `$x=${texFraction(c - b, a)}=${reponse}$`\n          texteCorr += `<br> La solution est $${reponse}$.`\n          break\n        case 'x+b=c':\n          b = randint(-9, 9, [0]) // b peut être négatif, ça sera une équation du type x-b=c\n          c = randint(-16, 15, 0)\n          if (!this.sup) {\n            c = Math.abs(c)\n          }\n          reponse = c - b\n          texte = `$x${ecritureAlgebrique(b)}=${c}$`\n          texteCorr = texte + '<br>'\n          if (this.correctionDetaillee) {\n            if (b > 0) {\n              texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n            } else {\n              texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n            }\n          }\n          texteCorr += `$x${ecritureAlgebrique(b)}${miseEnEvidence(\n          ecritureAlgebrique(-1 * b)\n        )}=${c}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n          texteCorr += `$x=${reponse}$`\n          texteCorr += `<br> La solution est $${reponse}$.`\n          break\n        case 'ax=b':\n          if (this.sup) {\n            a = randint(-9, 9, [0, -1, 1]) // b peut être négatif, ça sera une équation du type x-b=c\n            reponse = randint(-9, 9, [-1, 0, 1])\n          } else {\n            a = randint(2, 15)\n            reponse = randint(2, 9)\n          }\n          b = a * reponse\n          texte = `$${a}x=${b}$`\n          texteCorr = texte + '<br>'\n          if (this.correctionDetaillee) {\n            texteCorr += `On divise les deux membres par $${a}$.<br>`\n          }\n          texteCorr += `$${a}x${miseEnEvidence(\n          '\\\\div' + ecritureParentheseSiNegatif(a)\n        )}=${b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a))}$<br>`\n          texteCorr += `$x=${texFraction(b, a)}=${reponse}$`\n          texteCorr += `<br> La solution est $${reponse}$.`\n          break\n        case 'ax+b=cx+d':\n          reponse = randint(-9, 9, [0, -1, 1])\n          d = randint(-15, 15)\n          c = randint(-5, 5, [-1, 0, 1])\n          if (!this.sup) {\n            reponse = Math.abs(reponse)\n            c = Math.abs(c)\n            a = randint(2, 5) + c\n          } else {\n            a = randint(-5, 5, [-c, -c + 1, -c - 1, 0]) + c\n          }\n          b = (c - a) * reponse + d\n          texte = `$${rienSi1(a)}x${ecritureAlgebrique(b)}=${rienSi1(\n          c\n        )}x${ecritureAlgebrique(d)}$`\n          texteCorr = texte + '<br>'\n          if (this.correctionDetaillee) {\n            if (c > 0) {\n              texteCorr += `On soustrait $${rienSi1(\n              c\n            )}x$ aux deux membres.<br>`\n            } else {\n              texteCorr += `On ajoute $${rienSi1(\n              -1 * c\n            )}x$ aux deux membres.<br>`\n            }\n          }\n          texteCorr += `$${rienSi1(a)}x${ecritureAlgebrique(\n          b\n        )}${miseEnEvidence(\n          signe(-1 * c) + rienSi1(abs(c)) + 'x'\n        )}=${c}x${ecritureAlgebrique(d)}${miseEnEvidence(\n          signe(-1 * c) + rienSi1(abs(c)) + 'x'\n        )}$<br>`\n          texteCorr += `$${rienSi1(a - c)}x${ecritureAlgebrique(\n          b\n        )}=${d}$<br>`\n          if (this.correctionDetaillee) {\n            if (b > 0) {\n              texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n            } else {\n              texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n            }\n          }\n          texteCorr += `$${rienSi1(a - c)}x${ecritureAlgebrique(\n          b\n        )}${miseEnEvidence(\n          ecritureAlgebrique(-1 * b)\n        )}=${d}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n          texteCorr += `$${rienSi1(a - c)}x=${d - b}$<br>`\n\n          if (this.correctionDetaillee) {\n            texteCorr += `On divise les deux membres par $${a - c}$.<br>`\n          }\n          texteCorr += `$${rienSi1(a - c)}x${miseEnEvidence(\n          '\\\\div' + ecritureParentheseSiNegatif(a - c)\n        )}=${d -\n        b +\n        miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a - c))}$<br>`\n          texteCorr += `$x=${texFraction(d - b, a - c)}=${reponse}$`\n          texteCorr += `<br> La solution est $${reponse}$.`\n          break\n      }\n      texte += ajouteChampTexteMathLive(this, i, 'largeur10 inline', { texte: sp(10) + 'La solution est : $x=$' })\n      this.sup ? setReponse(this, i, reponse, { signe: true }) : setReponse(this, i, reponse, { signe: false })\n      if (this.questionJamaisPosee(i, a, b, c)) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte) // replace(/1x/g,'x')); //remplace 1x par x\n        this.listeCorrections.push(texteCorr) // .replace(/1x/g,'x')); //remplace 1x par x\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Avec des nombres relatifs']\n  this.besoinFormulaire2Numerique = [\n    \"Type d'équations\",\n    4,\n    \"1 : ax=b ou x+a=b ou x-a=b\\n2: ax+b=c\\n3: ax+b=cx+d\\n4: Tous les types d'équations\"\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import ExerciceEquationASolutionEntiere from '../4e/4L20-0.js'\nexport { interactifReady, interactifType, amcReady, amcType } from '../4e/4L20-0.js'\nexport const titre = 'Résoudre une équation niveau 1'\n\n/*!\n * @author Jean-Claude Lhote\n */\nexport default function UneEquationSimple () {\n  ExerciceEquationASolutionEntiere.call(this)\n  this.nbQuestions = 1\n  this.interactif = true\n  this.sup = false\n  this.sup2 = 1\n}\n"],"names":["interactifReady","interactifType","amcReady","amcType","titre","ExerciceEquationASolutionEntiere","Exercice","this","consigne","spacing","context","spacingCorr","correctionDetailleeDisponible","correctionDetaillee","sup","sup2","nbQuestions","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","toString","combinaisonListes","a","b","c","d","reponse","texte","texteCorr","i","cpt","randint","Math","abs","ecritureAlgebrique","miseEnEvidence","ecritureParentheseSiNegatif","texFraction","rienSi1","signe","ajouteChampTexteMathLive","sp","setReponse","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","indexOf","UneEquationSimple"],"sourceRoot":""}