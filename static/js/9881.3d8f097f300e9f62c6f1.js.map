{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/_Pavages_et_transformations.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["Pavages_et_transformations","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sortieHtml","spacingCorr","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","quadInitial","quad1","quad2","quad3","mediatrice1","mediatrice2","mediatrice3","centre1","centre2","centre3","arc1","arc2","arc3","rayon11","rayon12","rayon21","rayon22","rayon31","rayon32","vecteur1","vecteur2","vecteur3","vector1","vector2","vector3","origine1","origine2","origine3","B","C","D","choixPave","objets_enonce","objets_correction","paves","Math","sin","PI","quad","texte","texteCorr","tabfigA","tabfigB","tabfigC","tabfigD","pave","parseInt","sup","randint","nx","ny","xB","yB","xC","yC","xD","yD","Zoom","Angle","A","point","similitude","x","y","polygone","xAxy","yAxy","numAxy","indexA","numA","indexcentre1","indexD","numD","indexcentre2","indexC","numC","indexcentre3","num1","num2","num3","xAI","yAI","I","milieu","J","xAJ","yAJ","punto","trouver","xmil1","ymil1","xmil2","ymil2","xmil3","ymil3","xc","yc","xb","yb","xa","ya","xV1","yV1","xV2","yV2","xV3","yV3","s0","choice","s1","s2","Xmin","min","Xmax","max","Ymin","Ymax","push","translation","vecteur","rotation","i","length","texteParPoint","barycentre","mathalea","fenetreMathalea2d","indexsym1","imagePointParTransformation","j","mediatrice","color","epaisseur","isVisible","couleurDeRemplissage","opaciteDeRemplissage","numAlpha","texte_en_couleur_et_gras","indexsym2","tracePoint","indexsym3","floor","symetrieAnimee","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","optionsTikz","mainlevee","labelPoint","rotationAnimee","arc","segment","pointilles","iB1","iB2","iB3","iC1","iA1","iD1","representant","translationAnimee","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","titre","consigneCorrection","introduction","contenu","contenuCorrection","spacing","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/9881.3d8f097f300e9f62c6f1.js","sourcesContent":["import { translation, mathalea2d, polygone, point, segment, rotation, similitude, arc, vecteur, milieu, barycentre, texteParPoint, labelPoint, mediatrice, tracePoint, symetrieAnimee, rotationAnimee, translationAnimee } from '../../modules/2d.js';\nimport Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenuSansNumero,randint,choice,imagePointParTransformation,texte_en_couleur_et_gras,numAlpha} from '../../modules/outils.js'\n\n/**\n * Trouver l'image d'une figure par une symétrie centrale dans un pavage (7 motifs différents)\n * @Auteur Jean-Claude Lhote\n * fonction servant à tous les niveaux\n * Pas de version Latex !\n * Références 5G12-1, 6G25-2, 4G11-1, 3G12-1\n */\nexport default function Pavages_et_transformations() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\n\t//\tthis.titre = \"Trouver l'image d'une figure par une symétrie centrale\";\n\tthis.consigne = \"\";\n\tthis.nbQuestions = 1;\n\tthis.nbQuestionsModifiable = false;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\t//\tthis.sup = 1; // 1 pour symétrie axiale, 2 pour symétrie centrale, 3 pour translations, et 4 pour rotations ; paramètre fixé par les variantes respectives.\n\tsortieHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5;\n\tthis.nouvelleVersion = function (numeroExercice) {\n\t\tthis.listeQuestions = [];\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n        let objets_enonce=[];\n        let objets_correction=[];\n\n\t\t//listes de pavages [nx,ny,xB,yB,xC,yC,xD,yD,zoom,anngle]  : 0=carrés, 1=cerf-volant 2=quadri concave 3=quadri quelconque 4=parallélogrammes 5=triangles rectangles isocèles 6=triangles équilatéraux 7=losanges\n\t\tlet paves = [[5, 5, 4, 0, 4, 4, 0, 4, 30, 0], [5, 5, 6, 0, 8, 8, 0, 6, 60, -9], [5, 5, 8, 0, 4, 4, 2, 8, 50, 0], [5, 5, 4, 0, 6, 4, 0, 6, 50, 5], [4, 6, 8, 0, 7, 4, -1, 4, 50, 10], [5, 5, 8, 0, 4, 4, 0, 8, 50, 0], [5, 5, 4, 0, 3, 2 * Math.sin(Math.PI / 3), 2, 4 * Math.sin(Math.PI / 3), 20, 0], [4, 4, 3, 1, 4, 4, 1, 3, 20, 0]];\n        let quad=[],quadInitial,quad1,quad2,quad3\n\t\tlet mediatrice1,mediatrice2,mediatrice3,centre1,centre2,centre3,arc1,arc2,arc3,rayon11,rayon12,rayon21,rayon22,rayon31,rayon32\n\t\tlet vecteur1,vecteur2,vecteur3,vector1,vector2,vector3,origine1,origine2,origine3\n\t\tlet B,C,D\n\t\tlet texte=\"\", texteCorr=\"\";\n\t\tlet tabfigA = [], tabfigB = [], tabfigC = [], tabfigD = [];\n\t\tlet pave = [];\n\t\tlet choixPave;\n\t\tswitch (parseInt(this.sup)) {\n\t\t\tcase 1:\n\t\t\t \n\t\t\t\tchoixPave=0 // pavages adaptés à symétrie axiale (carrés)\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tchoixPave=randint(0,7)// pavages adaptés à symétrie centrale (tous)\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tchoixPave=randint(0,7); //pavages adaptés à translation (tous)\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tchoixPave=0 ; // pavages adaptés à rotation (carrés  )\n\t\t\t\tbreak;\n\t\t}\n\t\tpave=paves[choixPave]\n\n\t\tlet nx = pave[0], ny = pave[1], xB = pave[2], yB = pave[3], xC = pave[4], yC = pave[5], xD = pave[6], yD = pave[7], Zoom = pave[8], Angle = pave[9];\n\t\tlet A=point(0,0)\n\t\tif (choixPave!=0&&choixPave!=6&&choixPave!=7){\n        \tB=similitude(point(xB,yB),A,Angle,22/Zoom)\n        \tC=similitude(point(xC,yC),A,Angle,22/Zoom)\n        \tD=similitude(point(xD,yD),A,Angle,22/Zoom)\n\t\txB=B.x\n\t\tyB=B.y\n\t\txC=C.x\n\t\tyC=C.y\n\t\txD=D.x\n\t\tyD=D.y\n\t\t}\n\t\telse {\n\t\t\tB=point(xB,yB)\n\t\t\tC=point(xC,yC)\n\t\t\tD=point(xD,yD)\n\t\t}\n        quadInitial=polygone(A,B,C,D)\n        let xAI = xB + xC - xD;\n\t\tlet yAI = yB + yC - yD;\n        let I=milieu(B,C)\n        let J=milieu(D,C)\n\t\tlet xAJ = xC + xD - xB;\n\t\tlet yAJ = yC + yD - yB;\n\t\tlet xAxy, yAxy, numAxy;\n\t\tlet punto = [0, 0, 0];\n\t\tlet trouver = false, indexA, numA, indexcentre1, xmil1 = 0, ymil1 = 0, indexD, numD, indexcentre2, xmil2 = 0, ymil2 = 0, indexC, numC, indexcentre3, xmil3 = 0, ymil3 = 0, num1, num2, num3;\n\t\tlet xc = 0, yc = 0, xb = 0, yb = 0, xa = 0, ya = 0, xV1 = 0, yV1 = 0, xV2 = 0, yV2 = 0, xV3 = 0, yV3 = 0;\n\t\tlet s0 = choice([`S`, `T`, `L`, `W`, `R`, `G`, `E`, `F`, `G`, `K`]);\n\t\tlet s1 = choice([`S`, `T`, `L`, `W`, `R`, `G`, `E`, `F`, `G`, `K`], [s0]);\n\t\tlet s2 = choice([`S`, `T`, `L`, `W`, `R`, `G`, `E`, `F`, `G`, `K`], [s0, s1]);\n\t\tlet Xmin=Math.min(-1,ny*xAJ)\n\t\tlet Xmax=Math.max(nx*xAI+1,nx*xAI+ny*xAJ+1)\n\t\tlet Ymin=Math.min(-1,nx*yAI)\n\t\tlet Ymax=Math.max(nx*yAI+ny*yAJ+1,ny*yAJ+1)\n\n\n\n\t\tfor (let y = 0; y < ny; y++) { // On initialise les tableaux avec les coordonnées des puntos de référence (A,B,C et D) de chaque translaté et son numéro dans le pavage.\n\t\t\tfor (let x = 0; x < nx; x++) {\n\t\t\t\txAxy = x * xAI + y * xAJ;\n\t\t\t\tyAxy = x * yAI + y * yAJ;\n\t\t\t\tnumAxy = 2 * x + 4 * y * nx;\n\t\t\t\ttabfigA.push([xAxy, yAxy, numAxy]);\n                quad[numAxy]=translation(polygone(A,B,C,D),vecteur(xAxy,yAxy))\n\t\t\t\ttabfigB.push([xAxy + xB, yAxy + yB, numAxy + 1]);\n                quad[numAxy+1]=translation(rotation(polygone(A,B,C,D),I,180),vecteur(xAxy,yAxy))\n\t\t\t\ttabfigD.push([xAxy + xD, yAxy + yD, numAxy + 2 * nx]);\n                quad[numAxy+2*nx]=translation(rotation(polygone(A,B,C,D),J,180),vecteur(xAxy,yAxy))\n\t\t\t\ttabfigC.push([xAxy + xC, yAxy + yC, numAxy + 2 * nx + 1]);\n                quad[numAxy+2*nx+1]=translation(translation(polygone(A,B,C,D),vecteur(A,C)),vecteur(xAxy,yAxy))\n\t\t\t}\n\t\t}\n        for (let i=0;i<quad.length;i++){\n            objets_enonce.push(quad[i],texteParPoint(i,barycentre(quad[i],\"\",'center'),'milieu','black',1,'middle',true))\n\t\t\tobjets_correction.push(quad[i],texteParPoint(i,barycentre(quad[i],\"\",'center'),'milieu','black',1,'middle',true))\n        }\n\n\t\tmathalea.fenetreMathalea2d=[Xmin,Ymin,Xmax,Ymax]\n\t\tswitch (parseInt(this.sup)) {\n\t\t\tcase 1: //symétrie axiale\n\t\t\t\t// Première question : une figure type A par symétrie d'axe // à [BD] est une figure type A. le symétrique du sommet A est le sommet C\n\t\t\t\tindexA = randint(0, nx * ny - 1);\n\t\t\t\tnumA = tabfigA[indexA][2];\n\t\t\t\tlet indexsym1 = randint(0, nx * ny - 1, [indexA]); // sert à choisir un axe [BD]. \n\t\t\t\txmil1 = tabfigD[indexsym1][0]; // sert pour faire passer l'axe de symétrie.\n\t\t\t\tymil1 = tabfigD[indexsym1][1];\n\t\t\t\tpunto = imagePointParTransformation(2, [tabfigA[indexA][0], tabfigA[indexA][1]], [xmil1, ymil1]);\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigC[j][0] && punto[1] == tabfigC[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum1 = tabfigA[j][2];\n\t\t\t\t\t\t\txa = tabfigA[indexA][0];\n\t\t\t\t\t\t\tya = tabfigA[indexA][1];\n\t\t\t\t\t\t\tmediatrice1=mediatrice(point(xa,ya),point(punto[0],punto[1]),'(d_1)')\n\t\t\t\t\t\t\tmediatrice1.color='green'\n\t\t\t\t\t\t\tmediatrice1.epaisseur=2\n\t\t\t\t\t\t\tmediatrice1.isVisible=true\n\t\t\t\t\t\t\tquad[numA].couleurDeRemplissage='green'\n\t\t\t\t\t\t\tquad[numA].opaciteDeRemplissage=0.6\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexA = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumA = tabfigA[indexA][2];\n\t\t\t\t\t\tindexsym1 = randint(0, nx * ny - 1, [indexA]);\n\t\t\t\t\t\txmil1 = tabfigD[indexsym1][0];\n\t\t\t\t\t\tymil1 = tabfigD[indexsym1][1];\n\t\t\t\t\t\tpunto = imagePointParTransformation(2, [tabfigA[indexA][0], tabfigA[indexA][1]], [xmil1, ymil1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte = numAlpha(0) + texte_en_couleur_et_gras(` Quel est le numéro de la figure symétrique de la figure ${numA} dans la symétrie par rapport à $(d_1)$ ?<br>`, `green`);\n\t\t\t\ttexteCorr = numAlpha(0) + texte_en_couleur_et_gras(` La figure symétrique de la figure ${numA} dans la symétrie par rapport à $(d_1)$ porte le numéro ${num1}.<br>`, `green`);\n\t\t\t\t// Deuxième question : une figure type D par symétrie d'axe // à [AC] est une figure type B. le symétrique du sommet B est le sommet D\n\t\t\t\tindexD = randint(0, nx * ny - 1);\n\t\t\t\tnumD = tabfigD[indexD][2];\n\t\t\t\tlet indexsym2 = randint(0, nx * ny - 1, [indexD]); // sert à choisir un axe [AC]. \n\t\t\t\txmil2 = tabfigA[indexsym2][0]; // sert pour faire passer l'axe de symétrie.\n\t\t\t\tymil2 = tabfigA[indexsym2][1];\n\t\t\t\tpunto = imagePointParTransformation(1, [tabfigD[indexD][0], tabfigD[indexD][1]], [xmil2, ymil2]);\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigB[j][0] && punto[1] == tabfigB[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum2 = tabfigB[j][2];\n\t\t\t\t\t\t\txb = tabfigD[indexD][0];\n\t\t\t\t\t\t\tyb = tabfigD[indexD][1] - 4;\n\t\t\t\t\t\t\tobjets_enonce.push(tracePoint(point(xb,yb),point(punto[0],punto[1])))\n\t\t\t\t\t\t\tmediatrice2=mediatrice(point(xb,yb+4),point(punto[0],punto[1]),'(d_2)')\n\t\t\t\t\t\t\tmediatrice2.color='red'\n\t\t\t\t\t\t\tmediatrice2.epaisseur=2\n\t\t\t\t\t\t\tmediatrice2.isVisible=true\n\t\t\t\t\t\t\tquad[numD].couleurDeRemplissage='red'\n\t\t\t\t\t\t\tquad[numD].opaciteDeRemplissage=0.6\n\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexD = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumD = tabfigD[indexD][2];\n\t\t\t\t\t\tindexsym2 = randint(0, nx * ny - 1, [indexD]); // sert à choisir un axe [AC]. \n\t\t\t\t\t\txmil2 = tabfigA[indexsym2][0]; // sert pour faire passer l'axe de symétrie.\n\t\t\t\t\t\tymil2 = tabfigA[indexsym2][1];\n\t\t\t\t\t\tpunto = imagePointParTransformation(1, [tabfigD[indexD][0], tabfigD[indexD][1]], [xmil2, ymil2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte += numAlpha(1) + texte_en_couleur_et_gras(` Quel est le numéro de la figure symétrique de la figure ${numD} dans la symétrie par rapport à $(d_2)$ ?<br>`, `red`);\n\t\t\t\ttexteCorr += numAlpha(1) + texte_en_couleur_et_gras(` La figure symétrique de la figure ${numD} dans la symétrie par rapport à $(d_2)$ porte le numéro ${num2}.<br>`, `red`);\n\t\t\t\t// troisième question : une figure type D par symétrie d'axe // à [DC] est une figure type A. le symétrique du sommet D est le sommet A'\n\t\t\t\tindexC = randint(0, nx * ny - 1);\n\t\t\t\tnumC = tabfigC[indexC][2];\n\t\t\t\tlet indexsym3 = randint(0, 4,Math.floor(indexC/5))*5; // sert à choisir un axe [AC]. \n\t\t\t\txmil3 = tabfigC[indexsym3][0]; // sert pour faire passer l'axe de symétrie.\n\t\t\t\tymil3 = tabfigC[indexsym3][1];\n\t\t\t\tpunto = imagePointParTransformation(3, [tabfigC[indexC][0], tabfigC[indexC][1]], [xmil3, ymil3]);\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigC[j][0] && punto[1] == tabfigC[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum3 = tabfigB[j][2];\n\t\t\t\t\t\t\txc = tabfigC[indexC][0];\n\t\t\t\t\t\t\tyc = tabfigC[indexC][1];\n\t\t\t\t\t\t\tmediatrice3=mediatrice(point(xc,yc),point(punto[0],punto[1]),'(d_3)')\n\t\t\t\t\t\t\tmediatrice3.color='blue'\n\t\t\t\t\t\t\tmediatrice3.epaisseur=2\n\t\t\t\t\t\t\tmediatrice3.isVisible=true\n\t\t\t\t\t\t\tquad[numC].couleurDeRemplissage='blue'\n\t\t\t\t\t\t\tquad[numC].opaciteDeRemplissage=0.6\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexC = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumC = tabfigC[indexC][2];\n\t\t\t\t\t\tlet indexsym3 = randint(0, 4,Math.floor(indexC/5))*5; // sert à choisir un axe [AC]. \n\t\t\t\t\t\txmil3 = tabfigC[indexsym3][0]; // sert pour faire passer l'axe de symétrie.\n\t\t\t\t\t\tymil3 = tabfigC[indexsym3][1];\n\t\t\t\t\t\tpunto = imagePointParTransformation(3, [tabfigC[indexC][0], tabfigC[indexC][1]], [xmil3, ymil3]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte += numAlpha(2) + texte_en_couleur_et_gras(` Quel est le numéro de la figure symétrique de la figure ${numC} dans la symétrie par rapport à $(d_3)$ ?<br>`, `blue`);\n\t\t\t\ttexteCorr += numAlpha(2) + texte_en_couleur_et_gras(` La figure symétrique de la figure ${numC} dans la symétrie par rapport à $(d_3)$ porte le numéro ${num3}.<br>`, `blue`);\n\t\t\t\tobjets_enonce.push(mediatrice1,mediatrice2,mediatrice3)\n\t\t\t\tobjets_correction.push(mediatrice1,mediatrice2,mediatrice3,symetrieAnimee(quad[numA],mediatrice1,`id=\"anim${numeroExercice}A\" dur =\"2s\" repeatcount=\"1\"`),symetrieAnimee(quad[numD],mediatrice2,`id=\"anim${numeroExercice}B\" dur=\"2s\" repeatcount=\"1\"`),symetrieAnimee(quad[numC],mediatrice3,`id=\"anim${numeroExercice}C\" dur=\"2s\" repeatcount=\"1\"`))\n\n\t\t\t\ttexte += mathalea2d({\n\t\t\t\t\txmin:Xmin,\n\t\t\t\t\txmax:Xmax,\n\t\t\t\t\tymin:Ymin,\n\t\t\t\t\tymax:Ymax,\n\t\t\t\t\tpixelsParCm:15,\n\t\t\t\t\tscale:0.3,\t\n\t\t\t\t\toptionsTikz:['every node/.style={scale=0.6}'],\n\t\t\t\t\tmainlevee:false\n\t\t\t\t},objets_enonce\n\t\t\t\t); \n\t\t\t\tquad1=translation(quad[num1],vecteur(0,0))\n\t\t\t\tquad1.couleurDeRemplissage='green'\n\t\t\t\tquad1.opaciteDeRemplissage=0.3\n\t\t\t\tquad2=translation(quad[num2],vecteur(0,0))\n\t\t\t\tquad2.couleurDeRemplissage='red'\n\t\t\t\tquad2.opaciteDeRemplissage=0.3\n\t\t\t\tquad3=translation(quad[num3],vecteur(0,0))\n\t\t\t\tquad3.couleurDeRemplissage='blue'\n\t\t\t\tquad3.opaciteDeRemplissage=0.3\n\t\t\t\tobjets_correction.push(quad1,quad2,quad3)\n\t\t\t\ttexteCorr += mathalea2d({\n\t\t\t\t\txmin:Xmin,\n\t\t\t\t\txmax:Xmax,\n\t\t\t\t\tymin:Ymin,\n\t\t\t\t\tymax:Ymax,\n\t\t\t\t\tpixelsParCm:15,\n\t\t\t\t\tscale:0.3,\t\n\t\t\t\t\toptionsTikz:['every node/.style={scale=0.6}'],\n\t\t\t\t\tmainlevee:false\n\t\t\t\t},objets_correction\n\t\t\t\t); \n\n\t\t\t\tbreak;\n\t\t\tcase 2: // symétrie centrale\n\t\t\t\t// Première question : une figure dans tabfigA, une symétrie par rapport au milieu d'un [B'C'], logiquement : l'image est dans tabfigB et B' est l'image de C !\n\t\t\t\tindexA = randint(0, nx * ny - 1);\n\t\t\t\tnumA = tabfigA[indexA][2];\n\t\t\t\tindexcentre1 = randint(0, nx * ny - 1, [indexA]); // indexcentre1 est l'index du bloc de 4 figures A,B,C et D, il sert dans les 4 tableaux.\n\n\t\t\t\t//on calcule les coordonnées du milieu de [BC] on ajoute aux coordonnées du milieu de [BC] celles du vecteur BB'. (j'aurais pu réduire mais cela aurait rendu le calcul plus opaque)\n\t\t\t\txmil1 = (xB + xC) / 2 + tabfigB[indexcentre1][0] - xB;\n\t\t\t\tymil1 = (yB + yC) / 2 + tabfigB[indexcentre1][1] - yB;\n\t\t\t\tpunto = imagePointParTransformation(7, [tabfigC[indexA][0], tabfigC[indexA][1]], [xmil1, ymil1]);\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigB[j][0] && punto[1] == tabfigB[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum1 = tabfigB[j][2];\n\t\t\t\t\t\t\txa = tabfigA[indexA][0];\n\t\t\t\t\t\t\tya = tabfigA[indexA][1];\n\t\t\t\t\t\t\tcentre1=point(xmil1,ymil1,s0,'left')\n\t\t\t\t\t\t\tquad[numA].couleurDeRemplissage='green'\n\t\t\t\t\t\t\tquad[numA].opaciteDeRemplissage=0.6\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexA = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumA = tabfigA[indexA][2];\n\t\t\t\t\t\tindexcentre1 = randint(0, nx * ny - 1);\n\t\t\t\t\t\txmil1 = (xB + xC) / 2 + tabfigB[indexcentre1][0] - xB;\n\t\t\t\t\t\tymil1 = (yB + yC) / 2 + tabfigB[indexcentre1][1] - yB;\n\t\t\t\t\t\tpunto = imagePointParTransformation(7, [tabfigC[indexA][0], tabfigC[indexA][1]], [xmil1, ymil1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte += numAlpha(0) + texte_en_couleur_et_gras(` Quel est le numéro de la figure symétrique de la figure ${numA} dans la symétrie par rapport à ${s0} ?<br>`, `green`);\n\t\t\t\ttexteCorr = numAlpha(0) + texte_en_couleur_et_gras(` La figure symétrique de la figure ${numA} dans la symétrie par rapport à ${s0} porte le numéro ${num1}.<br>`, `green`);\n\t\t\t\t// Deuxième question : une figure dans tabfigD, une symétrie par rapport au milieu d'un [C'D'], le résultat est une figure dans tabfigA et C' est l'image de D !\n\t\t\t\tindexD = randint(0, nx * ny - 1);\n\t\t\t\tnumD = tabfigD[indexD][2];\n\t\t\t\tindexcentre2 = randint(0, nx * ny - 1, [indexD]); // indexcentre2 est l'index du bloc de 4 figures A,B,C et D, il sert dans les 4 tableaux.\n\n\t\t\t\t//on calcule les coordonnées du milieu de [DC] on ajoute aux coordonnées du milieu de [DC] celles du vecteur DD'.\n\t\t\t\txmil2 = (xD + xC) / 2 + tabfigD[indexcentre2][0] - xD;\n\t\t\t\tymil2 = (yD + yC) / 2 + tabfigD[indexcentre2][1] - yD;\n\t\t\t\tpunto = imagePointParTransformation(7, [tabfigD[indexD][0], tabfigD[indexD][1]], [xmil2, ymil2]);\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigC[j][0] && punto[1] == tabfigC[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum2 = tabfigA[j][2];\n\t\t\t\t\t\t\txb = tabfigA[indexD][0];\n\t\t\t\t\t\t\tyb = tabfigA[indexD][1];\n\t\t\t\t\t\t\tcentre2=point(xmil2,ymil2,s1,'left')\n\t\t\t\t\t\t\tquad[numD].couleurDeRemplissage='red'\n\t\t\t\t\t\t\tquad[numD].opaciteDeRemplissage=0.6\n\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexD = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumD = tabfigD[indexD][2];\n\t\t\t\t\t\tindexcentre2 = randint(0, nx * ny - 1, [indexD]);\n\t\t\t\t\t\txmil2 = (xD + xC) / 2 + tabfigD[indexcentre2][0] - xD;\n\t\t\t\t\t\tymil2 = (yD + yC) / 2 + tabfigD[indexcentre2][1] - yD;\n\t\t\t\t\t\tpunto = imagePointParTransformation(7, [tabfigD[indexD][0], tabfigD[indexD][1]], [xmil2, ymil2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttexte += numAlpha(1) + texte_en_couleur_et_gras(` Quel est le numéro de la figure symétrique de la figure ${numD} dans la symétrie par rapport à ${s1} ?<br>`, `red`);\n\t\t\t\ttexteCorr += numAlpha(1) + texte_en_couleur_et_gras(` La figure symétrique de la figure ${numD} dans la symétrie par rapport à ${s1} porte le numéro ${num2}.<br>`, `red`);\n\t\t\t\t// troisième question : une figure dans tabfigC, une symétrie par rapport au symétrique du milieu de [A'D'] par rapport au milieu de [C'D']... pas très clair\n\t\t\t\t// le résultat est une figure dans tabfigD et le point (C'+ vecteur AC) a pour image D' !\n\t\t\t\tindexC = randint(0, nx * ny - 1);\n\t\t\t\tnumC = tabfigC[indexC][2];\n\t\t\t\tindexcentre3 = randint(0, nx * ny - 1, [indexC]); // indexcentre2 est l'index du bloc de 4 figures A,B,C et D, il sert dans les 4 tableaux.\n\n\t\t\t\t//on calcule les coordonnées du milieu du centre de symétrie : (C' + D + AC)/2=AC+AD/2 que l'on translate de CC' donc ça fait AC' + AD/2\n\t\t\t\txmil3 = xD / 2 + tabfigC[indexcentre3][0];\n\t\t\t\tymil3 = yD / 2 + tabfigC[indexcentre3][1];\n\t\t\t\tpunto = imagePointParTransformation(7, [tabfigC[indexC][0] + xC, tabfigC[indexC][1] + yC], [xmil3, ymil3]); // c'est le sommet C + AC qui a pour image D.\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigD[j][0] && punto[1] == tabfigD[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum3 = tabfigD[j][2];\n\t\t\t\t\t\t\txc = tabfigA[indexC][0];\n\t\t\t\t\t\t\tyc = tabfigA[indexC][1];\n\t\t\t\t\t\t\tcentre3=point(xmil3,ymil3,s2,'left')\n\t\t\t\t\t\t\tquad[numC].couleurDeRemplissage='blue'\n\t\t\t\t\t\t\tquad[numC].opaciteDeRemplissage=0.6\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexC = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumC = tabfigC[indexC][2];\n\t\t\t\t\t\tindexcentre3 = randint(0, nx * ny - 1, [indexC]);\n\t\t\t\t\t\txmil3 = xD / 2 + tabfigC[indexcentre3][0];\n\t\t\t\t\t\tymil3 = yD / 2 + tabfigC[indexcentre3][1];\n\t\t\t\t\t\tpunto = imagePointParTransformation(7, [tabfigC[indexC][0] + xC, tabfigC[indexC][1] + yC], [xmil3, ymil3]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte += numAlpha(2) + texte_en_couleur_et_gras(` Quel est le numéro de la figure symétrique de la figure ${numC} dans la symétrie par rapport à ${s2} ?<br>`, `blue`);\n\t\t\t\ttexteCorr += numAlpha(2) + texte_en_couleur_et_gras(` La figure symétrique de la figure ${numC} dans la symétrie par rapport à ${s2} porte le numéro ${num3}.<br>`, `blue`);\n\n\t\t\t\tobjets_enonce.push(tracePoint(centre1),tracePoint(centre2),tracePoint(centre3),labelPoint(centre1),labelPoint(centre2),labelPoint(centre3));\n\t\t\t\tobjets_correction.push(tracePoint(centre1),tracePoint(centre2),tracePoint(centre3),labelPoint(centre1),labelPoint(centre2),labelPoint(centre3)\n\t\t\t\t,rotationAnimee(quad[numA],centre1,180,`id=\"anim${numeroExercice}A\" dur =\"2s\" repeatcount=\"1\"`),rotationAnimee(quad[numD],centre2,180,`id=\"anim${numeroExercice}B\" dur=\"2s\" repeatcount=\"1\"`),rotationAnimee(quad[numC],centre3,180,`id=\"anim${numeroExercice}C\" dur=\"2s\" repeatcount=\"1\"`))\n\n\t\t\t\ttexte += mathalea2d({\n\t\t\t\t\txmin:Xmin,\n\t\t\t\t\txmax:Xmax,\n\t\t\t\t\tymin:Ymin,\n\t\t\t\t\tymax:Ymax,\n\t\t\t\t\tpixelsParCm:15,\n\t\t\t\t\tscale:0.3,\t\n\t\t\t\t\toptionsTikz:['every node/.style={scale=0.6}'],\n\t\t\t\t\tmainlevee:false\n\t\t\t\t},objets_enonce\n\t\t\t\t); \n\t\t\t\tquad1=translation(quad[num1],vecteur(0,0))\n\t\t\t\tquad1.couleurDeRemplissage='green'\n\t\t\t\tquad1.opaciteDeRemplissage=0.3\n\t\t\t\tquad2=translation(quad[num2],vecteur(0,0))\n\t\t\t\tquad2.couleurDeRemplissage='red'\n\t\t\t\tquad2.opaciteDeRemplissage=0.3\n\t\t\t\tquad3=translation(quad[num3],vecteur(0,0))\n\t\t\t\tquad3.couleurDeRemplissage='blue'\n\t\t\t\tquad3.opaciteDeRemplissage=0.3\n\t\t\t\tarc1=arc(point(tabfigA[indexA][0],tabfigA[indexA][1]),centre1,180)\n\t\t\t\trayon11=segment(point(tabfigA[indexA][0],tabfigA[indexA][1]),centre1)\n\t\t\t\trayon12=rotation(rayon11,centre1,180)\n\t\t\t\trayon11.pointilles=2\n\t\t\t\trayon12.pointilles=2\n\t\t\t\tarc1.pointilles=2\n\t\t\t\tarc2=arc(point(tabfigD[indexD][0],tabfigD[indexD][1]),centre2,180)\n\t\t\t\trayon21=segment(point(tabfigD[indexD][0],tabfigD[indexD][1]),centre2)\n\t\t\t\trayon22=rotation(rayon21,centre2,180)\n\t\t\t\trayon21.pointilles=2\n\t\t\t\trayon22.pointilles=2\n\t\t\t\tarc2.pointilles=2\n\t\t\t\tarc3=arc(point(tabfigC[indexC][0],tabfigC[indexC][1]),centre3,180)\n\t\t\t\trayon31=segment(point(tabfigC[indexC][0],tabfigC[indexC][1]),centre3)\n\t\t\t\trayon32=rotation(rayon31,centre3,180)\n\t\t\t\trayon31.pointilles=2\n\t\t\t\trayon32.pointilles=2\n\t\t\t\tarc3.pointilles=2\n\t\t\t\tobjets_correction.push(quad1,quad2,quad3,arc1,arc2,arc3,rayon11,rayon12,rayon21,rayon22,rayon31,rayon32)\n\t\t\t\ttexteCorr += mathalea2d({\n\t\t\t\t\txmin:Xmin,\n\t\t\t\t\txmax:Xmax,\n\t\t\t\t\tymin:Ymin,\n\t\t\t\t\tymax:Ymax,\n\t\t\t\t\tpixelsParCm:15,\n\t\t\t\t\tscale:0.3,\t\n\t\t\t\t\toptionsTikz:['every node/.style={scale=0.6}'],\n\t\t\t\t\tmainlevee:false\n\t\t\t\t},objets_correction\n\t\t\t\t); \n\n\t\t\t\tbreak;\n\n\t\t\tcase 3: //translations\n\t\t\t\tlet iB1, iB2, iB3, iC1, iA1, iD1;\n\t\t\t\t\n\t\t\t\t// Première question : une figure dans tabfigA, l'image dans tabfigA... \n\t\t\t\t// On choisit deux figures de type B pour définir le vecteur de translation.\n\t\t\t\tindexA = randint(0, nx * ny - 1);\n\t\t\t\tnumA = tabfigA[indexA][2];\n\t\t\t\tiB1 = randint(0, nx * ny - 1);\n\t\t\t\tiB2 = randint(0, nx * ny - 1, [iB1]);\n\t\t\t\txV1 = tabfigB[iB2][0] - tabfigB[iB1][0];\n\t\t\t\tyV1 = tabfigB[iB2][1] - tabfigB[iB1][1];\n\t\t\t\tpunto = imagePointParTransformation(8, [tabfigA[indexA][0], tabfigA[indexA][1]], [0, 0], [xV1, yV1]);\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigA[j][0] && punto[1] == tabfigA[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum1 = tabfigA[j][2];\n\t\t\t\t\t\t\txa = tabfigA[indexA][0];\n\t\t\t\t\t\t\tya = tabfigA[indexA][1];\n\t\t\t\t\t\t\torigine1=point(tabfigB[iB1][0],tabfigB[iB1][1])\n\t\t\t\t\t\t\tvector1=vecteur(origine1,point(tabfigB[iB2][0],tabfigB[iB2][1]))\n\t\t\t\t\t\t\tvecteur1=vector1.representant(origine1)\n\t\t\t\t\t\t\tvecteur1.color='green'\n\t\t\t\t\t\t\tvecteur1.epaisseur=2\n\t\t\t\t\t\t\tvecteur1.pointilles=2\n\t\t\t\t\t\t\tquad[numA].couleurDeRemplissage='green'\n\t\t\t\t\t\t\tquad[numA].opaciteDeRemplissage=0.6\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexA = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumA = tabfigA[indexA][2];\n\t\t\t\t\t\tiB1 = randint(0, nx * ny - 1);\n\t\t\t\t\t\tiB2 = randint(0, nx * ny - 1, [iB1]);\n\t\t\t\t\t\txV1 = tabfigB[iB2][0] - tabfigB[iB1][0];\n\t\t\t\t\t\tyV1 = tabfigB[iB2][1] - tabfigB[iB1][1];\n\t\t\t\t\t\tpunto = imagePointParTransformation(8, [tabfigA[indexA][0], tabfigA[indexA][1]], [0, 0], [xV1, yV1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte += numAlpha(0) + texte_en_couleur_et_gras(` Dans la translation qui transforme la figure ${tabfigB[iB1][2]} en la figure ${tabfigB[iB2][2]} quelle est le numéro de l'image de la figure ${numA} ?<br>`, `green`);\n\t\t\t\ttexteCorr = numAlpha(0) + texte_en_couleur_et_gras(` La figure image de la figure ${numA}  dans la translation qui transforme la figure ${tabfigB[iB1][2]} en la figure ${tabfigB[iB2][2]} porte le numéro ${num1}.<br>`, `green`);\n\t\t\t\t// Deuxième question : une figure dans tabfigD, l'image dans tabfigB... \n\t\t\t\t// On choisit une figure C et une figure A pour définir le vecteur de translation.\n\t\t\t\tindexD = randint(0, nx * ny - 1);\n\t\t\t\tnumD = tabfigD[indexD][2];\n\t\t\t\tiC1 = randint(0, nx * ny - 1);\n\t\t\t\tiA1 = randint(0, nx * ny - 1, [iC1]);\n\t\t\t\txV2 = tabfigA[iA1][0] - tabfigC[iC1][0];\n\t\t\t\tyV2 = tabfigA[iA1][1] - tabfigC[iC1][1];\n\t\t\t\tpunto = imagePointParTransformation(8, [tabfigD[indexD][0], tabfigD[indexD][1]], [0, 0], [xV2, yV2]);\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigB[j][0] && punto[1] == tabfigB[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum2 = tabfigB[j][2];\n\t\t\t\t\t\t\txb = tabfigD[indexD][0];\n\t\t\t\t\t\t\tyb = tabfigD[indexD][1];\n\t\t\t\t\t\t\torigine2=point(tabfigC[iC1][0],tabfigC[iC1][1])\n\t\t\t\t\t\t\tvector2=vecteur(origine2,point(tabfigA[iA1][0],tabfigA[iA1][1]))\n\t\t\t\t\t\t\tvecteur2=vector2.representant(origine2)\n\t\t\t\t\t\t\tvecteur2.color='red'\n\t\t\t\t\t\t\tvecteur2.epaisseur=2\n\t\t\t\t\t\t\tvecteur2.pointilles=2\n\t\t\t\t\t\t\tquad[numD].couleurDeRemplissage='red'\n\t\t\t\t\t\t\tquad[numD].opaciteDeRemplissage=0.6\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexD = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumD = tabfigD[indexD][2];\n\t\t\t\t\t\tiC1 = randint(0, nx * ny - 1);\n\t\t\t\t\t\tiA1 = randint(0, nx * ny - 1, [iC1]);\n\t\t\t\t\t\txV2 = tabfigA[iA1][0] - tabfigC[iC1][0];\n\t\t\t\t\t\tyV2 = tabfigA[iA1][1] - tabfigC[iC1][1];\n\t\t\t\t\t\tpunto = imagePointParTransformation(8, [tabfigD[indexD][0], tabfigD[indexD][1]], [0, 0], [xV2, yV2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte += numAlpha(1) + texte_en_couleur_et_gras(` Dans la translation qui transforme la figure ${tabfigC[iC1][2]} en la figure ${tabfigA[iA1][2]} quelle est le numéro de l'image de la figure ${numD} ?<br>`, `red`);\n\t\t\t\ttexteCorr += numAlpha(1) + texte_en_couleur_et_gras(` La figure image de la figure ${numD}  dans la translation qui transforme la figure ${tabfigC[iC1][2]} en la figure ${tabfigA[iA1][2]} porte le numéro ${num2}.<br>`, `red`);\n\n\n\t\t\t\t// troisième question : une figure dans tabfigC, l'image dans tabfigA... \n\t\t\t\t// On choisit une figure D et une figure B pour définir le vecteur de translation.\n\t\t\t\tindexC = randint(0, nx * ny - 1);\n\t\t\t\tnumC = tabfigC[indexC][2];\n\t\t\t\tiD1 = randint(0, nx * ny - 1);\n\t\t\t\tiB3 = randint(0, nx * ny - 1, [iD1]);\n\t\t\t\txV3 = tabfigA[iB3][0] - tabfigC[iD1][0];\n\t\t\t\tyV3 = tabfigA[iB3][1] - tabfigC[iD1][1];\n\t\t\t\tpunto = imagePointParTransformation(8, [tabfigC[indexC][0], tabfigC[indexC][1]], [0, 0], [xV3, yV3]);\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigA[j][0] && punto[1] == tabfigA[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum3 = tabfigA[j][2];\n\t\t\t\t\t\t\txc = tabfigC[indexC][0];\n\t\t\t\t\t\t\tyc = tabfigC[indexC][1];\n\t\t\t\t\t\t\torigine3=point(tabfigC[iD1][0],tabfigC[iD1][1])\n\t\t\t\t\t\t\tvector3=vecteur(origine3,point(tabfigA[iB3][0],tabfigA[iB3][1]))\n\t\t\t\t\t\t\tvecteur3=vector3.representant(origine3)\n\t\t\t\t\t\t\tvecteur3.color='blue'\n\t\t\t\t\t\t\tvecteur3.epaisseur=2\n\t\t\t\t\t\t\tvecteur3.pointilles=2\n\t\t\t\t\t\t\tquad[numC].couleurDeRemplissage='blue'\n\t\t\t\t\t\t\tquad[numC].opaciteDeRemplissage=0.6\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexC = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumC = tabfigC[indexC][2];\n\t\t\t\t\t\tiD1 = randint(0, nx * ny - 1);\n\t\t\t\t\t\tiB3 = randint(0, nx * ny - 1, [iD1]);\n\t\t\t\t\t\txV3 = tabfigA[iB3][0] - tabfigC[iD1][0];\n\t\t\t\t\t\tyV3 = tabfigA[iB3][1] - tabfigC[iD1][1];\n\t\t\t\t\t\tpunto = imagePointParTransformation(8, [tabfigC[indexC][0], tabfigC[indexC][1]], [0, 0], [xV3, yV3]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte += numAlpha(2) + texte_en_couleur_et_gras(` Dans la translation qui transforme la figure ${tabfigC[iD1][2]} en la figure ${tabfigA[iB3][2]} quelle est le numéro de l'image de la figure ${numC} ?<br>`, `blue`);\n\t\t\t\ttexteCorr += numAlpha(2) + texte_en_couleur_et_gras(` La figure image de la figure ${numC}  dans la translation qui transforme la figure ${tabfigC[iD1][2]} en la figure ${tabfigA[iB3][2]} porte le numéro ${num3}.<br>`, `blue`);\n\n\t\t\t\tobjets_enonce.push(vecteur1,vecteur2,vecteur3);\n\t\t\t\tobjets_correction.push(vecteur1,vecteur2,vecteur3\n\t\t\t\t,translationAnimee(quad[numA],vector1,`id=\"anim${numeroExercice}A\" dur=\"2s\" repeatcount=\"1\"`),translationAnimee(quad[numD],vector2,`id=\"anim${numeroExercice}B\" dur=\"2s\" repeatcount=\"1\"`),translationAnimee(quad[numC],vector3,`id=\"anim${numeroExercice}C\" dur=\"2s\" repeatcount=\"1\"`))\n\n\t\t\t\ttexte += mathalea2d({\n\t\t\t\t\txmin:Xmin,\n\t\t\t\t\txmax:Xmax,\n\t\t\t\t\tymin:Ymin,\n\t\t\t\t\tymax:Ymax,\n\t\t\t\t\tpixelsParCm:15,\n\t\t\t\t\tscale:0.3,\t\n\t\t\t\t\toptionsTikz:['every node/.style={scale=0.6}'],\n\t\t\t\t\tmainlevee:false\n\t\t\t\t},objets_enonce\n\t\t\t\t); \n\t\t\t\tquad1=translation(quad[num1],vecteur(0,0))\n\t\t\t\tquad1.couleurDeRemplissage='green'\n\t\t\t\tquad1.opaciteDeRemplissage=0.3\n\t\t\t\tquad2=translation(quad[num2],vecteur(0,0))\n\t\t\t\tquad2.couleurDeRemplissage='red'\n\t\t\t\tquad2.opaciteDeRemplissage=0.3\n\t\t\t\tquad3=translation(quad[num3],vecteur(0,0))\n\t\t\t\tquad3.couleurDeRemplissage='blue'\n\t\t\t\tquad3.opaciteDeRemplissage=0.3\n\t\t\t\trayon11=vector1.representant(point(xa,ya))\n\t\t\t\trayon11.color='green'\n\t\t\t\trayon11.epaisseur=2\n\t\t\t\trayon21=vector2.representant(point(xb,yb))\n\t\t\t\trayon21.color='red'\n\t\t\t\trayon21.epaisseur=2\n\t\t\t\trayon31=vector3.representant(point(xc,yc))\n\t\t\t\trayon31.color='blue'\n\t\t\t\trayon31.epaisseur=2\n\t\t\t\tobjets_correction.push(quad1,quad2,quad3,rayon11,rayon21,rayon31)\n\t\t\t\ttexteCorr += mathalea2d({\n\t\t\t\t\txmin:Xmin,\n\t\t\t\t\txmax:Xmax,\n\t\t\t\t\tymin:Ymin,\n\t\t\t\t\tymax:Ymax,\n\t\t\t\t\tpixelsParCm:15,\n\t\t\t\t\tscale:0.3,\n\t\t\t\t\toptionsTikz:['every node/.style={scale=0.6}'],\n\t\t\t\t\tmainlevee:false\n\t\t\t\t},objets_correction\n\t\t\t\t); \n\n\n\t\t\t\tbreak;\n\n\t\t\tcase 4: //rotations\n\n\t\t\t\t//première question : centre A, rotation de 90° sens anti-horaire, une figure de tabfigA donne une figure de tabfigD, le point B donne le point D.\n\t\t\t\tindexA = randint(0, nx * ny - 1);\n\t\t\t\tnumA = tabfigA[indexA][2];\n\t\t\t\tindexcentre1 = randint(0, nx * ny - 1, [indexA]);\n\t\t\t\txmil1 = tabfigA[indexcentre1][0];\n\t\t\t\tymil1 = tabfigA[indexcentre1][1];\n\t\t\t\tpunto = imagePointParTransformation(6, [tabfigB[indexA][0], tabfigB[indexA][1]], [xmil1, ymil1]); // le repère est direct, donc le sens de rotation est inversé...\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigD[j][0] && punto[1] == tabfigD[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum1 = tabfigD[j][2];\n\t\t\t\t\t\t\txa = tabfigA[indexA][0];\n\t\t\t\t\t\t\tya = tabfigA[indexA][1];\n\t\t\t\t\t\t\tcentre1=point(xmil1,ymil1,s0,'left')\n\t\t\t\t\t\t\tquad[numA].couleurDeRemplissage='green'\n\t\t\t\t\t\t\tquad[numA].opaciteDeRemplissage=0.6\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexA = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumA = tabfigA[indexA][2];\n\t\t\t\t\t\tindexcentre1 = randint(0, nx * ny - 1, [indexA]);\n\t\t\t\t\t\txmil1 = tabfigA[indexcentre1][0];\n\t\t\t\t\t\tymil1 = tabfigA[indexcentre1][1];\n\t\t\t\t\t\tpunto = imagePointParTransformation(6, [tabfigB[indexA][0], tabfigB[indexA][1]], [xmil1, ymil1]); // le repère est direct, donc le sens de rotation est inversé...\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte += numAlpha(0) + texte_en_couleur_et_gras(` Quel est le numéro de la figure image de la figure ${numA} dans la rotation de centre ${s0} et d'angle 90° dans le sens des aiguilles d'une montre ?<br>`, `green`);\n\t\t\t\ttexteCorr = numAlpha(0) + texte_en_couleur_et_gras(` La figure image de la figure ${numA} dans la rotation de centre ${s0} et d'angle 90° dans le sens des aiguilles d'une montre porte le numéro ${num1}.<br>`, `green`);\n\n\t\t\t\t//deuxième question : centre B, rotation 90° sens horaire, une figure de tabfigD donne une figure de tabfigC\n\t\t\t\tindexD = randint(0, nx * ny - 1);\n\t\t\t\tnumD = tabfigD[indexD][2];\n\t\t\t\tindexcentre2 = randint(0, nx * ny - 1, [indexD]);\n\t\t\t\txmil2 = tabfigB[indexcentre2][0];\n\t\t\t\tymil2 = tabfigB[indexcentre2][1];\n\t\t\t\tpunto = imagePointParTransformation(5, [tabfigD[indexD][0], tabfigD[indexD][1]], [xmil2, ymil2]); // le repère est direct, donc le sens de rotation est inversé...\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == 4 + tabfigC[j][0] && punto[1] == tabfigC[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum2 = tabfigC[j][2];\n\t\t\t\t\t\t\txb = tabfigA[indexD][0];\n\t\t\t\t\t\t\tyb = tabfigA[indexD][1];\n\t\t\t\t\t\t\tcentre2=point(xmil2,ymil2,s1,'left')\n\t\t\t\t\t\t\tquad[numD].couleurDeRemplissage='red'\n\t\t\t\t\t\t\tquad[numD].opaciteDeRemplissage=0.6\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexD = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumD = tabfigD[indexD][2];\n\t\t\t\t\t\tindexcentre2 = randint(0, nx * ny - 1, [indexD]);\n\t\t\t\t\t\txmil2 = tabfigB[indexcentre2][0];\n\t\t\t\t\t\tymil2 = tabfigB[indexcentre2][1];\n\t\t\t\t\t\tpunto = imagePointParTransformation(5, [tabfigD[indexD][0], tabfigD[indexD][1]], [xmil2, ymil2]); // le repère est direct, donc le sens de rotation est inversé...\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte += numAlpha(1) + texte_en_couleur_et_gras(` Quel est le numéro de la figure image de la figure ${numD} dans la rotation de centre ${s1} et d'angle 90° dans le sens inverse des aiguilles d'une montre ?<br>`, `red`);\n\t\t\t\ttexteCorr += numAlpha(1) + texte_en_couleur_et_gras(` La figure image de la figure ${numD} dans la rotation de centre ${s1} et d'angle 90° dans le sens inverse des aiguilles d'une montre porte le numéro ${num2}.<br>`, `red`);\n\n\t\t\t\t//troisième question : centre B, rotation 90° sens anti-horaire, une figure de tabfigC donne une figure de tabfigD\n\t\t\t\tindexC = randint(0, nx * ny - 1);\n\t\t\t\tnumC = tabfigC[indexC][2];\n\t\t\t\tindexcentre3 = randint(0, nx * ny - 1, [indexC]);\n\t\t\t\txmil3 = tabfigB[indexcentre3][0];\n\t\t\t\tymil3 = tabfigB[indexcentre3][1];\n\t\t\t\tpunto = imagePointParTransformation(6, [tabfigC[indexC][0], tabfigC[indexC][1]], [xmil3, ymil3]); // le repère est direct, donc le sens de rotation est inversé...\n\t\t\t\ttrouver = false;\n\t\t\t\twhile (trouver == false) {\n\t\t\t\t\tfor (let j = 0; j < nx * ny; j++) {\n\t\t\t\t\t\tif (punto[0] == tabfigD[j][0] && punto[1] == 4 + tabfigD[j][1]) {\n\t\t\t\t\t\t\ttrouver = true;\n\t\t\t\t\t\t\tnum3 = tabfigD[j][2];\n\t\t\t\t\t\t\txc = tabfigA[indexC][0];\n\t\t\t\t\t\t\tyc = tabfigA[indexC][1];\n\t\t\t\t\t\t\tcentre3=point(xmil3,ymil3,s2,'left')\n\t\t\t\t\t\t\tquad[numC].couleurDeRemplissage='blue'\n\t\t\t\t\t\t\tquad[numC].opaciteDeRemplissage=0.6\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (trouver == false) {\n\t\t\t\t\t\tindexC = randint(0, nx * ny - 1);\n\t\t\t\t\t\tnumC = tabfigC[indexC][2];\n\t\t\t\t\t\tindexcentre3 = randint(0, nx * ny - 1, [indexC]);\n\t\t\t\t\t\txmil3 = tabfigB[indexcentre3][0];\n\t\t\t\t\t\tymil3 = tabfigB[indexcentre3][1];\n\t\t\t\t\t\tpunto = imagePointParTransformation(6, [tabfigC[indexC][0], tabfigC[indexC][1]], [xmil3, ymil3]); // le repère est direct, donc le sens de rotation est inversé...\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttexte += numAlpha(2) + texte_en_couleur_et_gras(` Quel est le numéro de la figure image de la figure ${numC} dans la rotation de centre ${s2} et d'angle 90° dans le sens des aiguilles d'une montre ?<br>`, `blue`);\n\t\t\t\ttexteCorr += numAlpha(2) + texte_en_couleur_et_gras(` La figure image de la figure ${numC} dans la rotation de centre ${s2} et d'angle 90° dans le sens des aiguilles d'une montre porte le numéro ${num3}.<br>`, `blue`);\n\n\t\t\t\tobjets_enonce.push(tracePoint(centre1),tracePoint(centre2),tracePoint(centre3),labelPoint(centre1),labelPoint(centre2),labelPoint(centre3));\n\t\t\t\tobjets_correction.push(tracePoint(centre1),tracePoint(centre2),tracePoint(centre3),labelPoint(centre1),labelPoint(centre2),labelPoint(centre3)\n\t\t\t\t,rotationAnimee(quad[numA],centre1,-90,`id=\"anim${numeroExercice}A\" dur =\"2s\" repeatcount=\"1\"`),rotationAnimee(quad[numD],centre2,90,`id=\"anim${numeroExercice}B\" dur=\"2s\" repeatcount=\"1\"`),rotationAnimee(quad[numC],centre3,-90,`id=\"anim${numeroExercice}C\" dur=\"2s\" repeatcount=\"1\"`))\n\n\t\t\t\ttexte += mathalea2d({\n\t\t\t\t\txmin:Xmin,\n\t\t\t\t\txmax:Xmax,\n\t\t\t\t\tymin:Ymin,\n\t\t\t\t\tymax:Ymax,\n\t\t\t\t\tpixelsParCm:15,\n\t\t\t\t\tscale:0.3,\t\n\t\t\t\t\toptionsTikz:['every node/.style={scale=0.6}'],\n\t\t\t\t\tmainlevee:false\n\t\t\t\t},objets_enonce\n\t\t\t\t); \n\t\t\t\tquad1=translation(quad[num1],vecteur(0,0))\n\t\t\t\tquad1.couleurDeRemplissage='green'\n\t\t\t\tquad1.opaciteDeRemplissage=0.3\n\t\t\t\tquad2=translation(quad[num2],vecteur(0,0))\n\t\t\t\tquad2.couleurDeRemplissage='red'\n\t\t\t\tquad2.opaciteDeRemplissage=0.3\n\t\t\t\tquad3=translation(quad[num3],vecteur(0,0))\n\t\t\t\tquad3.couleurDeRemplissage='blue'\n\t\t\t\tquad3.opaciteDeRemplissage=0.3\n\t\t\t\tarc1=arc(point(tabfigA[indexA][0],tabfigA[indexA][1]),centre1,-90)\n\t\t\t\trayon11=segment(point(tabfigA[indexA][0],tabfigA[indexA][1]),centre1)\n\t\t\t\trayon12=rotation(rayon11,centre1,-90)\n\t\t\t\trayon11.pointilles=2\n\t\t\t\trayon12.pointilles=2\n\t\t\t\tarc1.pointilles=2\n\t\t\t\tarc1.epaisseur=2\n\t\t\t\tarc1.color='green'\n\t\t\t\tarc2=arc(point(tabfigD[indexD][0],tabfigD[indexD][1]),centre2,90)\n\t\t\t\trayon21=segment(point(tabfigD[indexD][0],tabfigD[indexD][1]),centre2)\n\t\t\t\trayon22=rotation(rayon21,centre2,90)\n\t\t\t\trayon21.pointilles=2\n\t\t\t\trayon22.pointilles=2\n\t\t\t\tarc2.pointilles=2\n\t\t\t\tarc2.epaisseur=2\n\t\t\t\tarc2.color='red'\n\t\t\t\tarc3=arc(point(tabfigC[indexC][0],tabfigC[indexC][1]),centre3,-90)\n\t\t\t\trayon31=segment(point(tabfigC[indexC][0],tabfigC[indexC][1]),centre3)\n\t\t\t\trayon32=rotation(rayon31,centre3,-90)\n\t\t\t\trayon31.pointilles=2\n\t\t\t\trayon32.pointilles=2\n\t\t\t\tarc3.pointilles=2\n\t\t\t\tarc3.epaisseur=2\n\t\t\t\tarc3.color='blue'\n\t\t\t\tobjets_correction.push(quad1,quad2,quad3,arc1,arc2,arc3,rayon11,rayon12,rayon21,rayon22,rayon31,rayon32)\n\t\t\t\ttexteCorr += mathalea2d({\n\t\t\t\t\txmin:Xmin,\n\t\t\t\t\txmax:Xmax,\n\t\t\t\t\tymin:Ymin,\n\t\t\t\t\tymax:Ymax,\n\t\t\t\t\tpixelsParCm:15,\n\t\t\t\t\tscale:0.3,\n\t\t\t\t\toptionsTikz:['every node/.style={scale=0.6}'],\n\t\t\t\t\tmainlevee:false\n\t\t\t\t},objets_correction\n\t\t\t\t); \n\t\t\t\t\n\n\t\t\t\tbreak;\n\n\t\t}\n\t\t\n\t\t\ttexteCorr += '<br>'\n\t\t\ttexteCorr += `<button class=\"btn ui labeled icon button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}A').beginElement()\"><i class=\"redo circle icon\"></i>Relancer l'animation verte</button>`\n\t\t\ttexteCorr += `<button class=\"btn ui labeled icon button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}B').beginElement()\"><i class=\"redo circle icon\"></i>Relancer l'animation rouge</button>`\n\t\t\ttexteCorr += `<button class=\"btn ui labeled icon button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}C').beginElement()\"><i class=\"redo circle icon\"></i>Relancer l'animation bleue</button>`\n\t\t\tthis.listeQuestions.push(texte);\n\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\tlisteQuestionsToContenuSansNumero(this);\n\n\t};\n\tthis.besoinFormulaireNumerique = ['Transformations', 4, '1 : Symétries axiales\\n 2 : Symétries centrales\\n 3 : Translations\\n 4 : Rotations\\n 5 : Homothéties\\n'];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}