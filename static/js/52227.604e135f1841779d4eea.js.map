{"version":3,"file":"js/52227.604e135f1841779d4eea.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N24-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, texNombre, texFraction, calcul } from '../../modules/outils.js'\n\nexport const titre = 'Multiplier ou diviser un nombre entier par 10, 100 ou 1 000'\n\n/**\n * Multiplier ou diviser un nombre entier par 10, 100 ou 1 000\n *\n * Le nombre entier est de la forme X, XX, X0X, X00X ou XXX\n * @author Rémi Angot\n * 6N24-1\n */\nexport default function ExerciceMultiplierOuDiviserUnNombreEntierPar101001000 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Donner l'écriture décimale\"\n  this.spacing = 2\n  this.spacingCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    for (\n      let i = 0, a, b, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      a = choice(\n        [\n          randint(2, 9),\n          randint(11, 99),\n          randint(1, 9) * 100 + randint(1, 9),\n          randint(1, 9) * 1000 + randint(1, 9)\n        ],\n        randint(101, 999)\n      )\n      // X, XX, X0X, X00X,XXX\n      b = choice([10, 100, 1000])\n      if (choice([true, false])) {\n        texte =\n          '$ ' + texFraction(texNombre(a), texNombre(b)) + ' = \\\\dotfill $'\n        texteCorr =\n          '$ ' +\n          texFraction(texNombre(a), texNombre(b)) +\n          ' = ' +\n          texNombre(calcul(a / b)) +\n          ' $'\n      } else {\n        texte =\n          '$ ' + texNombre(a) + '\\\\times' + texNombre(b) + ' = \\\\dotfill $'\n        texteCorr =\n          '$ ' +\n          texNombre(a) +\n          '\\\\times' +\n          texNombre(b) +\n          ' = ' +\n          texNombre(calcul(a * b)) +\n          ' $'\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ExerciceMultiplierOuDiviserUnNombreEntierPar101001000","Exercice","this","consigne","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","a","b","texte","texteCorr","i","cpt","nbQuestions","choice","randint","texFraction","texNombre","calcul","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}