{"version":3,"file":"js/45725.0cfd07056b151c46cd20.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N41-7.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, reduireAxPlusB, ecritureAlgebrique } from '../../modules/outils.js'\n\nexport const titre = 'Factoriser avec les identités remarquables (niveau II)'\n\n/**\n * Factoriser avec a²-b² avec a ou b expression algébrique 1er degré\n* @author Stéphane Guyon\n* 2L11-1\n*/\nexport default function FactoriserIdentitesremarquables2 () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Factoriser les expressions suivantes.'\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.nbQuestions = 3\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = [1] // (ax+b)²-c²\n    }\n    if (this.sup === 2) {\n      typesDeQuestionsDisponibles = [2] // c²-(ax+b)²\n    }\n    if (this.sup === 3) {\n      typesDeQuestionsDisponibles = [3] // (ax+b)²-(cx+d)²\n    }\n    if (this.sup === 4) {\n      typesDeQuestionsDisponibles = [1, 2, 3] // Mélange des cas précédents\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0, a, b, c, d, k, typesDeQuestions; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      k = choice([-1, 1])\n      a = randint(2, 9)\n      a = a * k\n      b = randint(1, 9)\n      k = choice([-1, 1])\n      b = b * k\n      c = randint(1, 9)\n      d = randint(1, 9)\n      k = choice([-1, 1])\n      d = d * k\n      if (a === c && b === d) {\n        a = a + 1\n        b = b - 2\n      }\n      switch (typesDeQuestions) {\n        case 1:\n          texte = `$(${a}x${ecritureAlgebrique(b)})^2-${c * c}$` // (ax+b)²-c²\n          texteCorr = `$(${a}x${ecritureAlgebrique(b)})^2-${c * c}=(${a}x${ecritureAlgebrique(b)})^2-${c}^2$<br>\n                    On reconnaît l'identité remarquable $a^2-b^2=(\\\\color{red}a\\\\color{black}-\\\\color{blue}b)(\\\\color{red}a\\\\color{black}+\\\\color{blue}b)$, avec $a=\\\\color{red}${a}x${ecritureAlgebrique(b)}$ et $b=\\\\color{blue}${c}$<br>\n                    $(${a}x${ecritureAlgebrique(b)})^2-${c * c}=\\\\left(\\\\color{red} (${a}x${ecritureAlgebrique(b)})\\\\color{black}-\\\\color{blue} ${c}\\\\right) \\\\left(\\\\color{red}(${a}x${ecritureAlgebrique(b)})\\\\color{black}+\\\\color{blue}${c}\\\\right)$<br>\n                    d'où, après réduction : $(${a}x${ecritureAlgebrique(b)})^2-${c * c}=(${reduireAxPlusB(a, b - c)}) (${reduireAxPlusB(a, b + c)})$`\n\n          break\n        case 2:\n          texte = `$${c * c}-(${a}x${ecritureAlgebrique(b)})^2$` // c²-(ax+b)²\n          texteCorr = `$${c * c}-(${a}x${ecritureAlgebrique(b)})^2=${c}^2-(${a}x${ecritureAlgebrique(b)})^2$<br>\n                    On reconnaît l'identité remarquable $a^2-b^2=(\\\\color{red}a\\\\color{black}-\\\\color{blue}b)(\\\\color{red}a\\\\color{black}+\\\\color{blue}b)$, avec $a=\\\\color{blue}${c}$ et $b=\\\\color{red}${a}x${ecritureAlgebrique(b)}$. <br>\n                    $${c * c}-(${a}x${ecritureAlgebrique(b)})^2=\\\\left(\\\\color{blue}${c}\\\\color{black}-(\\\\color{red}${a}x${ecritureAlgebrique(b)}\\\\color{black})\\\\right) \\\\left(\\\\color{blue}${c}\\\\color{black}+(\\\\color{red}${a}x${ecritureAlgebrique(b)}\\\\color{black})\\\\right)$<br>\n                    $\\\\phantom{${c * c}-(${a}x${ecritureAlgebrique(b)})^2}=(${c}${ecritureAlgebrique(-a)}x${ecritureAlgebrique(-b)}) (${c}${ecritureAlgebrique(a)}x${ecritureAlgebrique(b)})$<br>\n                    d'où, après réduction : $${c * c}-(${a}x${ecritureAlgebrique(b)})^2=(${reduireAxPlusB(-a, c - b)}) (${reduireAxPlusB(a, b + c)})$`\n          break\n        case 3:\n          texte = `$(${a}x${ecritureAlgebrique(b)})^2-(${c}x${ecritureAlgebrique(d)})^2$` // (ax+b)²-(cx+d)²\n          texteCorr = `On reconnaît l'identité remarquable $a^2-b^2$ :<br>\n                    $(${a}x${ecritureAlgebrique(b)})^2-(${c}x${ecritureAlgebrique(d)})^2=a^2-b^2$<br> \n                    avec $a=\\\\color{red}${a}x${ecritureAlgebrique(b)}$ et $b=\\\\color{blue}${c}x${ecritureAlgebrique(d)}$ . <br>\n                    On applique $a^2-b^2=(\\\\color{red}a\\\\color{black}-\\\\color{blue}b\\\\color{black})(\\\\color{red}a\\\\color{black}+\\\\color{blue}b\\\\color{black})$, <br>\n                    $(${a}x${ecritureAlgebrique(b)})^2-(${c}x${ecritureAlgebrique(d)})^2=\n                    (\\\\color{red}${a}x${ecritureAlgebrique(b)}\\\\color{black})-\n                    (\\\\color{blue}${c}x${ecritureAlgebrique(d)}\\\\color{black})\n                    (\\\\color{red}${a}x${ecritureAlgebrique(b)}\\\\color{black})+\n                    (\\\\color{blue}${c}x${ecritureAlgebrique(d)}\\\\color{black})$<br>\n                    $\\\\phantom{(${a}x${ecritureAlgebrique(b)})^2-(${c}x${ecritureAlgebrique(d)})^2}=\n                    (${a}x${ecritureAlgebrique(b)}${ecritureAlgebrique(-c)}x${ecritureAlgebrique(-d)})\n                    (${a}x${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}x${ecritureAlgebrique(d)})$<br>`\n          if (a !== c && b !== d && a !== -c && b !== -d) {\n            texteCorr += `$\\\\phantom{(${a}x${ecritureAlgebrique(b)})^2-(${c}x${ecritureAlgebrique(d)})^2}=\n                        (${reduireAxPlusB(a - c, b - d)})(${reduireAxPlusB(a + c, b + d)})$  `\n          } else {\n            if (a !== c && a !== -c && b === d && a !== c + 1) {\n              texteCorr += `$\\\\phantom{(${a}x${ecritureAlgebrique(b)})^2-(${c}x${ecritureAlgebrique(d)})^2}=\n                                ${a - c}x(${reduireAxPlusB(a + c, b + d)})$    `\n            }\n            if (a !== c && a !== -c && b === d && a === c + 1) {\n              texteCorr += `$\\\\phantom{(${a}x${ecritureAlgebrique(b)})^2-(${c}x${ecritureAlgebrique(d)})^2}=\n                                x(${reduireAxPlusB(a + c, b + d)})$    `\n            }\n            if (a !== c && a !== -c && b === -d) {\n              texteCorr += `$\\\\phantom{(${a}x${ecritureAlgebrique(b)})^2-(${c}x${ecritureAlgebrique(d)})^2}=\n                                    ${a + c}x(${reduireAxPlusB(a - c, b - d)})$  `\n            }\n            if (a === c && b !== d && b !== -d) {\n              texteCorr += `$\\\\phantom{(${a}x${ecritureAlgebrique(b)})^2-(${c}x${ecritureAlgebrique(d)})^2}=\n                                    ${b - d}(${reduireAxPlusB(a + c, b + d)})$  `\n            }\n            if (a === -c && b !== d && b !== -d) {\n              texteCorr += `$\\\\phantom{(${a}x${ecritureAlgebrique(b)})^2-(${c}x${ecritureAlgebrique(d)})^2}=\n                                    ${b + d}(${reduireAxPlusB(a - c, b - d)})$  `\n            }\n          } ;\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, '1 :forme (ax+b)²-c²\\n 2 : forme c²-(ax+b)²\\n 3 : (ax+b)²-(cx+d)²\\n 4 : Mélange des cas précédents']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","FactoriserIdentitesremarquables2","Exercice","this","consigne","nbCols","nbColsCorr","spacing","spacingCorr","nbQuestions","sup","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","d","k","typesDeQuestions","i","cpt","choice","randint","ecritureAlgebrique","reduireAxPlusB","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}