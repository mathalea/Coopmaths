{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C30-3.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","amcType","interactifReady","titre","MultiplicationMentalDecimaux","Exercice","this","interactifObligatoire","consigne","nbQuestions","video","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","qcmDisponible","modeQcm","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","a","b","randint","texNombre2","calcul","autoCorrection","enonce","propositions","statut","options","ordered","lastChoice","interactif","propositionsQcm","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","tailleDiaporama","qcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","length","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","id","feedback","type","querySelectorAll","uicheck","classList","add","espace","context","undefined","shuffleJusqua","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","reponse","valeur","exerciceInteractif","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"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","file":"js/441.bc85689db7b21177776e.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, texNombre2, calcul } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType =1 // QCM \nexport const interactifReady = true\nexport const titre = 'Opérations avec les nombres décimaux'\n\n/**\n * Reconnaître une fonction affine\n* @auteur Erwan Duplessy\n* 6C30-1\n* Trouver la réposne exacte. 4 cas :\n* - somme de deux entiers\n* - produit de deux entiers\n* - somme de deux décimaux\n* - produit de deux décimaux\n* date : 2021/02/15\n*/\n\nexport default function MultiplicationMentalDecimaux () {\n  Exercice.call(this)\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactifObligatoire = true // Il n'existe pas de version non QCM\n  this.consigne = 'Trouver la réponse exacte du calcul parmi les réponses proposées.'\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.video = ''\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    const typeDeQuestionsDisponibles = ['add', 'mul', 'add_deci', 'mul_deci'] // tableau à compléter par valeurs possibles des types de questions\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n      let a = 0\n      let b = 0 // les deux opérandes\n\n      switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n        case 'add':\n          a = 10 * randint(1, 9) + randint(1, 9)\n          b = 10 * randint(1, 9) + randint(1, 9)\n          texte += `Calcul : $${a} + ${b}$.`\n          texteCorr += `$${a} + ${b}=${texNombre2(calcul(a + b))}$`\n\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(calcul(a + b))}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul(a * b))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a + b) / 10))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(10 * (a + b)))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(a + b + 1))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n\n        case 'mul':\n          a = 10 * randint(1, 9) + randint(1, 9)\n          b = 10 * randint(1, 9) + randint(1, 9)\n          texte += `Calcul : $${a} \\\\times ${b}$.`\n          texteCorr += `$${a} \\\\times ${b}=${texNombre2(calcul(a * b))}$`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(a * b)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(10 * a * b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(a * b / 10)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(a + b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(a * b + 1)}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n\n        case 'add_deci':\n          a = 1000 * randint(1, 9) + 100 * randint(0, 9, [3, 4, 5, 6, 7]) + 10 * randint(0, 9) + randint(0, 9)\n          b = 1000 * randint(1, 9) + 100 * randint(0, 9, [3, 4, 5, 6, 7]) + 10 * randint(0, 9) + randint(0, 9)\n          texte += `Calcul : $${texNombre2(a / 100)} + ${texNombre2(b / 100)}$.`\n          texteCorr += ` $${texNombre2(a / 100)} + ${texNombre2(b / 100)}=${texNombre2(calcul(a / 100 + b / 100))}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(calcul((a + b) / 100))}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul((a * b) / 100))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a + b) / 1000))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul(10 * (a + b) / 100))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a + b + 1) / 100))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n\n        case 'mul_deci':\n          // a et b sont des nombres à 4 chiffres, dont 2 avant la virgule\n          // on multiplie par 100 pour travailler avec des nombres entiers. Par ex : 6547 plutôt que 65.47\n          a = 1000 * randint(1, 9) + 100 * randint(1, 9, [3, 4, 5, 6, 7]) + 10 * randint(1, 9) + randint(0, 9, [2, 5]) // on évite le 2*5 avec les derniers chiffres\n          b = 1000 * randint(1, 9) + 100 * randint(1, 9, [3, 4, 5, 6, 7]) + 10 * randint(1, 9) + randint(0, 9)\n          texte += `Calcul : $${texNombre2(a / 100)} \\\\times ${texNombre2(b / 100)}$.`\n          texteCorr += `$${texNombre2(a / 100)} \\\\times ${texNombre2(b / 100)}=${texNombre2(calcul(a * b / 10000))}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texNombre2(calcul((a * b) / 10000))}$`,\n              statut: true\n            },\n            {\n              texte: `$${texNombre2(calcul((10 * a * b) / 10000))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a * b) / 100000))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a + b) / 100))}$`,\n              statut: false\n            },\n            {\n              texte: `$${texNombre2(calcul((a * b + 1) / 10000))}$`,\n              statut: false\n            }\n          ]\n          this.autoCorrection[i].options = {\n            ordered: false,\n            lastChoice: 5\n          }\n          if (this.interactif) {\n            texte += '<br>' + propositionsQcm(this, i).texte\n          }\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n\n  // this.besoinFormulaireCaseACocher = ['Mode QCM',true]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}