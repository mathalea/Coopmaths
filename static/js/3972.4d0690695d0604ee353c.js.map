{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3A11.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Premier_ou_pas","Exercice","this","consigne","sortieHtml","spacing","spacingCorr","nbCols","nbColsCorr","sup","nbQuestionsModifiable","listePackages","nouvelleVersion","numeroExercice","type_de_questions","type_de_questions_disponibles","boutonAide","modalPdf","modalVideo","listeQuestions","listeCorrections","contenu","contenuCorrection","Number","nbQuestions","shuffle","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","string_rappel","cribleEratostheneN","k","length","introduction","warnMessage","texte","texteCorr","i","cpt","N","r","tab_premiers_a_tester","randint","nombre_avec_espace","texte_en_couleur_et_gras","sum","toString","charAt","N_longueur","N1","N1_longueur","sum1","substring","even_sum","odd_sum","m","Math","abs","r1","r2","prime1","prime2","trunc","sqrt","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable"],"mappings":"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","file":"js/3972.4d0690695d0604ee353c.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,shuffle,combinaisonListesSansChangerOrdre,nombre_avec_espace,texte_en_couleur_et_gras,modalPdf,modalVideo,cribleEratostheneN,warnMessage} from '../../modules/outils.js'\nexport const titre = 'Primalité ou pas'\n\n/**\n * 3A11 justifier la non primalité réinvestissement des critères de divisibilité\n * Nombres à 3 ou 4 chiffres, un multiple de 2, de 3, de 5, de 7, de 11, sous forme d'un produit de deux nombres premiers inférieurs à 100\n * et un nombre premier inferieur à 529\n * dans cet exo on n'utilise pas les critères par 7 et 11\n * @author Sébastien Lozano\n */\nexport default function Premier_ou_pas() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `Justifier que les nombres suivants sont premiers ou pas. Penser aux critères de divisibilité.`;\n\t//sortieHtml ? this.spacing = 3 : this.spacing = 2;\n\tsortieHtml ? this.spacing = 1 : this.spacing = 2;\n\tsortieHtml ? this.spacingCorr = 2 : this.spacingCorr = 1;\n\n\n\t//this.correctionDetailleeDisponible = true;\n\tthis.nbCols = 2;\n\tthis.nbColsCorr = 1;\n\tthis.sup = 1;\n\tthis.nbQuestionsModifiable = false;\n\t// console.log(Number(this.sup)==1);\n\t// if (Number(this.sup)==1) {\n\t// \tthis.nbQuestions = 4;\n\t// } else {\n\t// \tthis.nbQuestions = 5;\n\t// }\n\tthis.listePackages = `bclogo`;\n\n\tthis.nouvelleVersion = function (numeroExercice) {\n\t\tlet type_de_questions;\n\t\tif (sortieHtml) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.boutonAide = '';\n\t\t\tthis.boutonAide = modalPdf(numeroExercice, \"assets/pdf/FicheArithmetique-3A11.pdf\", \"Aide mémoire sur les nombres premiers (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\tthis.boutonAide += modalVideo('conteMathsNombresPremiers', 'assets/videos/LesNombresPremiers.mp4', 'Petit conte mathématique - Les Nombres Premiers', 'Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenuCorrection = ''; // Liste de questions corrigées\n\n\t\tlet type_de_questions_disponibles; // = [1, 2, 3, 6, 7];\n\t\tif (Number(this.sup) == 1) {\n\t\t\tthis.nbQuestions = 4;\n\t\t\ttype_de_questions_disponibles = [1, 2, 3, 8];\n\t\t} else {\n\t\t\tthis.nbQuestions = 5;\n\t\t\ttype_de_questions_disponibles = [1, 2, 3, 6, 7];\n\t\t}\n\t\ttype_de_questions_disponibles = shuffle(type_de_questions_disponibles); // on mélange l'ordre des questions\n\n\t\t//let type_de_questions_disponibles = [1];\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(type_de_questions_disponibles, this.nbQuestions);\n\n\t\tlet string_rappel = `Cette liste des nombres premiers inférieurs à 100 pourra être utile : <br>` + cribleEratostheneN(100)[0];\n\t\tfor (let k = 1; k < cribleEratostheneN(100).length; k++) {\n\t\t\tstring_rappel += `, ` + cribleEratostheneN(100)[k];\n\t\t};\n\t\tstring_rappel += `.`;\n\n\t\tthis.introduction = warnMessage(string_rappel, `nombres`, `Coup de pouce`);\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\n\t\t\ttype_de_questions = listeTypeDeQuestions[i];\n\n\t\t\tvar N; // le nombre de la question\n\t\t\tlet r;\n\t\t\tlet tab_premiers_a_tester;\n\n\t\t\tswitch (type_de_questions) {\n\t\t\t\tcase 1: // nombre pair\n\t\t\t\t\tN = 2 * randint(51, 4999);\n\t\t\t\t\ttexte = nombre_avec_espace(N);\n\t\t\t\t\ttexteCorr = `Comme ${nombre_avec_espace(N)} est pair, il admet donc au moins trois diviseurs qui sont 1, 2 et lui-même, `;\n\t\t\t\t\ttexteCorr += texte_en_couleur_et_gras(nombre_avec_espace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // Multiple de 3\n\t\t\t\t\tlet sum = 0; // pour la valeur de la somme;\n\t\t\t\t\tN = 3 * randint(34, 3333); // on initialise avant la boucle car on a peut être de la chance\n\t\t\t\t\twhile ((N % 2 == 0) || (N % 5 == 0)) {\n\t\t\t\t\t\tN = 3 * randint(34, 3333);\n\t\t\t\t\t};\n\t\t\t\t\ttexte = nombre_avec_espace(N);\n\t\t\t\t\ttexteCorr = `Comme ` + N.toString().charAt(0);\n\t\t\t\t\tsum = Number(N.toString().charAt(0));\n\t\t\t\t\tfor (let k = 1; k < N.toString().length; k++) {\n\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\tsum += Number(N.toString().charAt(k));\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += ` = ${sum} est un multiple de 3 donc ${nombre_avec_espace(N)} aussi, il admet donc au moins trois diviseurs qui sont 1, 3 et lui-même, `;\n\t\t\t\t\ttexteCorr += texte_en_couleur_et_gras(nombre_avec_espace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // Multiple de 5\n\t\t\t\t\tN = 5 * randint(20, 1999);\n\t\t\t\t\ttexte = nombre_avec_espace(N);\n\t\t\t\t\ttexteCorr = `Comme le dernier chiffre de ${nombre_avec_espace(N)} est un ${N.toString().charAt(N.toString().length - 1)} alors ${nombre_avec_espace(N)} est divisible par 5, `;\n\t\t\t\t\ttexteCorr += `il admet donc au moins trois diviseurs qui sont 1, 5 et lui-même, `;\n\t\t\t\t\ttexteCorr += texte_en_couleur_et_gras(nombre_avec_espace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4: // Multiple de 7\n\t\t\t\t\tlet N_longueur; // pour la taille du string N\n\t\t\t\t\tlet N1; // pour la repetiton du critère\n\t\t\t\t\tlet N1_longueur; // pour la taille du string N1\n\t\t\t\t\tlet sum1; // pour la somme de la répétition du critère\n\t\t\t\t\tN = 7 * randint(15, 1428);\n\t\t\t\t\ttexte = nombre_avec_espace(N);\n\t\t\t\t\tN_longueur = N.toString().length;\n\t\t\t\t\ttexteCorr = ` 7 divise ${nombre_avec_espace(N)}, en effet : `;\n\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\tN1 = N;\n\t\t\t\t\tN1_longueur = N_longueur;\n\t\t\t\t\tsum1 = Number(N1.toString().substring(0, N1_longueur - 1)) + 5 * Number(N1.toString().charAt(N1_longueur - 1));\n\t\t\t\t\twhile (sum1 >= 56) {\n\t\t\t\t\t\ttexteCorr += `${N1.toString().substring(0, N1_longueur - 1)} + 5$\\\\times$${N1.toString().charAt(N1_longueur - 1)}`;\n\t\t\t\t\t\ttexteCorr += ` = ${Number(N1.toString().substring(0, N1_longueur - 1)) + 5 * Number(N1.toString().charAt(N1_longueur - 1))}`;\n\t\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\t\tN1 = sum1;\n\t\t\t\t\t\tN1_longueur = N1.toString().length;\n\t\t\t\t\t\tsum1 = Number(N1.toString().substring(0, N1_longueur - 1)) + 5 * Number(N1.toString().charAt(N1_longueur - 1));\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `Comme ${N1.toString().substring(0, N1_longueur - 1)} + 5$\\\\times$${N1.toString().charAt(N1_longueur - 1)} = ${sum1} est un multiple de 7 alors 7 divise ${N} aussi `;\n\t\t\t\t\ttexteCorr += `qui admet donc au moins trois diviseurs : 1, 7 et lui-même, `;\n\t\t\t\t\ttexteCorr += texte_en_couleur_et_gras(nombre_avec_espace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5: // multiple de 11\n\t\t\t\t\tlet even_sum; // pour la somme des chiffres de rang impair\n\t\t\t\t\tlet odd_sum; // pour la somme des chiffres de rang pair\n\t\t\t\t\tN = 11 * randint(10, 909);\n\t\t\t\t\ttexte = nombre_avec_espace(N);\n\t\t\t\t\ttexteCorr = `D'une part, la somme des chiffres de rang impair de ${nombre_avec_espace(N)} vaut `;\n\t\t\t\t\tif (Number(N.toString().length) % 2 == 0) { // si N a un nombre pair de chiffres\n\t\t\t\t\t\teven_sum = Number(N.toString().charAt(1));\n\t\t\t\t\t\ttexteCorr += N.toString().charAt(1);\n\t\t\t\t\t\tfor (let k = 3; k < N.toString().length; k++) {\n\t\t\t\t\t\t\tif (k % 2 == 1) {\n\t\t\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\t\t\teven_sum += Number(N.toString().charAt(k));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexteCorr += ` = ` + even_sum + ` <br> `;\n\t\t\t\t\t} else { // sinon N a un nombre impair de chiffres\n\t\t\t\t\t\teven_sum = Number(N.toString().charAt(0));\n\t\t\t\t\t\ttexteCorr += N.toString().charAt(0);\n\t\t\t\t\t\tfor (let m = 1; m < N.toString().length; m++) {\n\t\t\t\t\t\t\tif (m % 2 == 0) {\n\t\t\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(m);\n\t\t\t\t\t\t\t\teven_sum += Number(N.toString().charAt(m));\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexteCorr += ` = ` + even_sum + `<br> `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `d'autre part, la somme des chiffres de rang pair de ${nombre_avec_espace(N)} vaut `;\n\t\t\t\t\tif (Number(N.toString().length) % 2 == 0) { // si N a un nombre pair de chiffres\n\t\t\t\t\t\todd_sum = Number(N.toString().charAt(0));\n\t\t\t\t\t\ttexteCorr += N.toString().charAt(0);\n\t\t\t\t\t\tfor (let k = 1; k < N.toString().length; k++) {\n\t\t\t\t\t\t\tif (k % 2 == 0) {\n\t\t\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\t\t\todd_sum += Number(N.toString().charAt(k));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexteCorr += ` = ` + odd_sum + ` <br> `;\n\t\t\t\t\t} else { // sinon N a un nombre impair de chiffres\n\t\t\t\t\t\todd_sum = Number(N.toString().charAt(1));\n\t\t\t\t\t\ttexteCorr += N.toString().charAt(1);\n\t\t\t\t\t\tfor (let m = 3; m < N.toString().length; m++) {\n\t\t\t\t\t\t\tif (m % 2 == 1) {\n\t\t\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(m);\n\t\t\t\t\t\t\t\todd_sum += Number(N.toString().charAt(m));\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexteCorr += ` = ` + odd_sum + `<br> `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `la différence entre la somme des chiffres de rangs pairs et celle des chiffres de rangs impairs vaut `;\n\t\t\t\t\tif ((odd_sum - even_sum) == 0) {\n\t\t\t\t\t\ttexteCorr += `${odd_sum - even_sum}, `;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += `${Math.abs(odd_sum - even_sum)} qui est un multiple de 11, `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\ttexteCorr += ` cela signifie que ${nombre_avec_espace(N)} est divisible par 11, il admet donc au moins trois diviseurs qui sont 1, 11 et lui-même,`;\n\t\t\t\t\ttexteCorr += texte_en_couleur_et_gras(nombre_avec_espace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6: // produit de deux nombres premiers inférieurs à 100\n\t\t\t\t\t// rang du premier facteur premier\n\t\t\t\t\tlet r1 = randint(0, cribleEratostheneN(100).length - 1);\n\t\t\t\t\t// rang du second facteur premier\n\t\t\t\t\tlet r2 = randint(0, cribleEratostheneN(100).length - 1);\n\t\t\t\t\tlet prime1 = cribleEratostheneN(100)[r1]; // on tire un nombre premier inférieur à 100, il n'y en a que 25!\n\t\t\t\t\tlet prime2 = cribleEratostheneN(100)[r2]; // on tire un autre nombre premier inférieur à 100, ça peut être le même qu'avant!\n\t\t\t\t\tN = prime1 + `$\\\\times$` + prime2;\n\t\t\t\t\ttexte = N;\n\t\t\t\t\ttexteCorr = `${N} est le produit de ${prime1} et de ${prime2}, il admet donc au moins `;\n\t\t\t\t\tif (prime1 == prime2) {\n\t\t\t\t\t\ttexteCorr += `trois divisieurs qui sont 1, ${prime1} et lui-même ${N}=${nombre_avec_espace(prime1 * prime2)}, `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += `quatre diviseurs qui sont 1, ${prime1}, ${prime2} et lui-même ${N}=${nombre_avec_espace(prime1 * prime2)}, `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += texte_en_couleur_et_gras(`${N} = ` + nombre_avec_espace(prime1 * prime2) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7: // nombre premier inférieur à 529\n\t\t\t\t\t// rang du nombre premier choisi\n\t\t\t\t\tr = randint(0, cribleEratostheneN(529).length - 1);\n\t\t\t\t\tN = cribleEratostheneN(529)[r]; //on choisit un nombre premier inférieur à 529\n\t\t\t\t\ttexte = N + ``;\n\t\t\t\t\ttab_premiers_a_tester = cribleEratostheneN(Math.trunc(Math.sqrt(N)));\n\t\t\t\t\t//texteCorr = `Testons la divisibilité de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexteCorr = `En effectuant la division euclidienne de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexteCorr += tab_premiers_a_tester[0];\n\t\t\t\t\tfor (let k = 1; k < tab_premiers_a_tester.length; k++) {\n\t\t\t\t\t\ttexteCorr += `, ` + tab_premiers_a_tester[k];\n\t\t\t\t\t};\n\t\t\t\t\t//texteCorr += `.`;\n\t\t\t\t\t// texteCorr += `<br> Aucun de ces nombres premiers ne divise ${N}, `;\n\t\t\t\t\ttexteCorr += `, le reste n'est jamais nul.`;\n\t\t\t\t\t// texteCorr += texte_en_couleur_et_gras(nombre_avec_espace(N) + ` est donc un nombre premier.`);\n\t\t\t\t\ttexteCorr += `<br>` + texte_en_couleur_et_gras(nombre_avec_espace(N) + ` est donc un nombre premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8: // nombre premier inférieur à 100 pour permettre les tests de divisibilité sans calculatrice\n\t\t\t\t\t// rang du nombre premier choisi\n\t\t\t\t\tr = randint(0, cribleEratostheneN(100).length - 1);\n\t\t\t\t\tN = cribleEratostheneN(100)[r]; //on choisit un nombre premier inférieur à 529\n\t\t\t\t\ttexte = N + ``;\n\t\t\t\t\ttab_premiers_a_tester = cribleEratostheneN(Math.trunc(Math.sqrt(N)));\n\t\t\t\t\t//texteCorr = `Testons la divisibilité de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexteCorr = `En effectuant la division euclidienne de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexteCorr += tab_premiers_a_tester[0];\n\t\t\t\t\tfor (let k = 1; k < tab_premiers_a_tester.length; k++) {\n\t\t\t\t\t\ttexteCorr += `, ` + tab_premiers_a_tester[k];\n\t\t\t\t\t};\n\t\t\t\t\t//texteCorr += `.`;\n\t\t\t\t\t// texteCorr += `<br> Aucun de ces nombres premiers ne divise ${N}, `;\n\t\t\t\t\ttexteCorr += `, le reste n'est jamais nul.`;\n\t\t\t\t\t// texteCorr += texte_en_couleur_et_gras(nombre_avec_espace(N) + ` est donc un nombre premier.`);\n\t\t\t\t\ttexteCorr += `<br>` + texte_en_couleur_et_gras(nombre_avec_espace(N) + ` est donc un nombre premier.`);\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\tlisteQuestionsToContenu(this);\n\t};\n\tthis.besoinFormulaireNumerique = ['Difficulté', 2, \"1 : Sans Calculatrice\\n2 : Avec calculatrice\"];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}