{"version":3,"file":"js/14729.c02d325eaf2c08c682a6.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C30.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes,lettreDepuisChiffre,simpExp,simpNotPuissance,eclatePuissance,modalPdf} from '../../modules/outils.js'\nexport const titre = 'Puissances de 10 : Le sens des règles de calculs'\n\n/**\n * 4C30 -- Puissances de 10\n * * Travailler des résultats automatisés\n * @author Sébastien Lozano\n */\nexport default function Puissances_de_dix() {\n  \"use strict\";\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.sup = 1;\n  this.titre = titre;\n  context.isHtml\n    ? (this.consigne = \"Écrire sous la forme $\\\\mathbf{10^n}$.\")\n    : (this.consigne = \"Écrire sous la forme $10^n$.\");\n  context.isHtml ? (this.spacing = 3) : (this.spacing = 2);\n  context.isHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 2);\n  this.nbQuestions = 5;\n  this.correctionDetailleeDisponible = true;\n  this.nbColsCorr = 1;\n  this.sup = 1;\n  this.nouvelleVersion = function (numeroExercice) {\n    let typesDeQuestions;\n    this.boutonAide = modalPdf(\n      numeroExercice,\n      \"assets/pdf/FichePuissances-4N21.pdf\",\n      \"Aide mémoire sur les puissances (Sébastien Lozano)\",\n      \"Aide mémoire\"\n    );\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    let typesDeQuestionsDisponibles = [];\n    if (this.sup == 1) {\n      typesDeQuestionsDisponibles = [1, 2, 3]; // produit, quotient et exponentiation de puissances de 10\n    } else if (this.sup == 2) {\n      typesDeQuestionsDisponibles = [4, 5, 6, 7, 8, 9, 10, 11]; // calculs première série\n    } else if (this.sup == 3) {\n      typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]; // calculs deuxième série\n    }\n    let listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    );\n\n    // pour pouvoir adapter les couleurs en cas de besoin\n    let coul0 = \"red\";\n    let coul1 = \"blue\";\n\n    for (\n      let i = 0,\n      exp0,\n      exp1,\n      exp,\n      coul_exp0,\n      coul_exp1,\n      lettre,\n      texte,\n      texteCorr,\n      cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i];\n\n      exp0 = randint(1, 9);\n      exp1 = randint(1, 9, [exp0]);\n      exp = [exp0, exp1]; // on choisit deux exposants différents c'est mieux\n      lettre = lettreDepuisChiffre(i + 1); // on utilise des lettres pour les calculs\n\n      switch (typesDeQuestions) {\n        case 1: // produit de puissances de même base\n          texte = `$${lettre}=10^${exp[0]}\\\\times 10^${exp[1]}$`;\n\n          texteCorr = `$${lettre}=10^${exp[0]}\\\\times 10^${exp[1]}$`;\n          if (this.correctionDetaillee) {\n            texteCorr += `<br>`;\n            texteCorr += `$${lettre}=${eclatePuissance(\n              10,\n              exp[0],\n              coul0\n            )} \\\\times ${eclatePuissance(10, exp[1], coul1)}$`;\n          }\n          texteCorr += `<br>`;\n          texteCorr += `Il y a donc $\\\\mathbf{\\\\color{${coul0}}{${exp[0]}}~\\\\color{black}{+}~\\\\color{${coul1}}{${exp[1]}}}$ facteurs tous égaux à $10$`;\n          texteCorr += `<br>`;\n          texteCorr += `$${lettre}=10^{${exp[0]}+${exp[1]}} = 10^{${exp[0] + exp[1]\n            }}`;\n          // attention la base est de type str alors que la fonction switch sur un type number\n          //if (simpNotPuissance(10, exp[0] + exp[1]) != ` `) {\n          if ((exp[1] + exp[0]) % 2 == 0) {\n            texteCorr += `=${simpNotPuissance(10, exp[0] + exp[1])}`;\n          }\n          texteCorr += `$`;\n          texteCorr += `<br>`;\n          break;\n        case 2: // quotient de puissances de même base\n          // Pour que la couleur de la 10 associée à l'exposant max soit toujours rouge.\n          if (Math.max(exp[0], exp[1]) == exp[0]) {\n            coul_exp0 = coul0;\n            coul_exp1 = coul1;\n          } else {\n            coul_exp0 = coul1;\n            coul_exp1 = coul0;\n          }\n\n          texte = `$${lettre}=\\\\dfrac{10^${exp[0]}}{10^${exp[1]}}$`;\n\n          texteCorr = `$${lettre}=\\\\dfrac{10^${exp[0]}}{10^${exp[1]}}$`;\n          if (this.correctionDetaillee) {\n            texteCorr += `<br><br>`;\n            texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n              10,\n              exp[0],\n              coul_exp0\n            )}}{${eclatePuissance(10, exp[1], coul_exp1)}}$`;\n          }\n          texteCorr += `<br><br>`;\n          texteCorr += `Il y a donc $\\\\mathbf{\\\\color{${coul1}}{${Math.min(\n            exp[0],\n            exp[1]\n          )}}}$ simplifications par $10$ possibles.`;\n          if (this.correctionDetaillee) {\n            texteCorr += `<br><br>`;\n          }\n          if (exp[0] - exp[1] == 0) {\n            if (this.correctionDetaillee) {\n              texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n                `\\\\cancel{10}`,\n                exp[0],\n                coul_exp0\n              )}}{${eclatePuissance(`\\\\cancel{10}`, exp[0], coul_exp1)}}$`;\n            }\n            texteCorr += `<br><br>`;\n            texteCorr += `$${lettre}=1`;\n          } else if (exp[0] - exp[1] < 0) {\n            if (this.correctionDetaillee) {\n              texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n                `\\\\cancel{10}`,\n                exp[0],\n                coul_exp0\n              )}}{${eclatePuissance(\n                `\\\\cancel{10}`,\n                exp[0],\n                coul_exp1\n              )}\\\\times${eclatePuissance(10, exp[1] - exp[0], coul_exp1)}}$`;\n            }\n            texteCorr += `<br><br>`;\n            texteCorr += `$${lettre}=\\\\dfrac{1}{10^{${exp[1]}-${exp[0]\n              }}}=\\\\dfrac{1}{10^{${exp[1] - exp[0]}}}`;\n            //if (simpNotPuissance(10, exp[1] - exp[0]) != ` `) {\n            if ((exp[1] - exp[0]) % 2 == 0) {\n              texteCorr += `=\\\\dfrac{1}{${simpNotPuissance(\n                10,\n                exp[1] - exp[0]\n              )}}=${simpNotPuissance(10, exp[0] - exp[1])}`;\n            } else {\n              texteCorr += `=10^{${exp[0] - exp[1]}}`;\n            }\n          } else {\n            if (this.correctionDetaillee) {\n              texteCorr += `$${lettre}=\\\\dfrac{${eclatePuissance(\n                `\\\\cancel{10}`,\n                exp[1],\n                coul_exp0\n              )}\\\\times${eclatePuissance(\n                10,\n                exp[0] - exp[1],\n                coul_exp0\n              )}}{${eclatePuissance(`\\\\cancel{10}`, exp[1], coul_exp1)}}$`;\n            }\n            texteCorr += `<br><br>`;\n            texteCorr += `$${lettre}=10^{${exp[0]}-${exp[1]}}=10^{${exp[0] - exp[1]\n              }}`;\n            //if (simpNotPuissance(10, exp[0] - exp[1]) != ` `) {\n            // if ((exp[0] - exp[1])%2==0) { \n            //   texteCorr += `=${simpNotPuissance(10, exp[0] - exp[1])}`;\n            // }\n          }\n          texteCorr += `$`;\n          texteCorr += `<br>`;\n          break;\n        case 3: // exponentiation\n          exp = [randint(2, 4), randint(2, 4)]; // on redéfinit les deux exposants pour ne pas avoir d'écritures trop longues et pour éviter 1\n          texte = `$${lettre}=(10^${exp[0]})^{${exp[1]}}$`;\n\n          texteCorr = `$${lettre}=(10^${exp[0]})^{${exp[1]}}$`;\n          if (this.correctionDetaillee) {\n            texteCorr += `<br>`;\n            texteCorr += `$${lettre}=\\\\color{${coul0}}{\\\\underbrace{${eclatePuissance(\n              `(10^${exp[0]})`,\n              exp[1],\n              coul0\n            )}}_{${exp[1]}\\\\thickspace\\\\text{facteurs}}}$`;\n            texteCorr += `<br>`;\n            texteCorr += `$${lettre}=\\\\color{${coul0}}{\\\\underbrace{${eclatePuissance(\n              `(\\\\color{${coul1}}{\\\\underbrace{${eclatePuissance(\n                10,\n                exp[0],\n                coul1\n              )}}_{${exp[0]}\\\\thickspace\\\\text{facteurs}}}\\\\color{${coul0}})`,\n              exp[1],\n              coul0\n            )}}_{${exp[1]}\\\\times\\\\color{${coul1}}{${exp[0]\n              }}\\\\thickspace\\\\color{black}{\\\\text{facteurs}}}}$`;\n          }\n          texteCorr += `<br>`;\n          texteCorr += `Il y a donc $\\\\mathbf{\\\\color{${coul0}}{${exp[1]}}~\\\\color{black}{\\\\times}~\\\\color{${coul1}}{${exp[0]}}}$ facteurs tous égaux à $10$`;\n          texteCorr += `<br>`;\n          texteCorr += `$${lettre}=10^{${exp[0]}\\\\times${exp[1]}} = 10^{${exp[0] * exp[1]\n            }}`;\n          //if (simpNotPuissance(10, exp[0] * exp[1]) != ` `) {\n          // if ((exp[1] * exp[0])%2==0) {             \n          //   texteCorr += `= ${simpNotPuissance(10, exp[0] * exp[1])}`;\n          // }\n          texteCorr += `$`;\n          texteCorr += `<br>`;\n          break;\n        case 4:\n          exp = [randint(1, 7, [1]), randint(1, 7, [1]), randint(1, 7, [1])]; // on a besoin de 3 exposants distincts\n          texte = `$\\\\dfrac{10^${exp[0]}\\\\times 100}{10^${exp[1]} \\\\times 10^${exp[2]}}$`;\n          texteCorr = `$\\\\dfrac{10^${exp[0]}\\\\times 100}{10^${exp[1]} \\\\times 10^${exp[2]}}`;\n          texteCorr += ` = \\\\dfrac{10^${exp[0]}\\\\times 10^{2}}{10^${exp[1]} \\\\times 10^${exp[2]}}`;\n          texteCorr += ` = \\\\dfrac{10^{${exp[0]}+2}}{10^{${exp[1]}+${exp[2]}}}`;\n          texteCorr += ` = \\\\dfrac{10^{${exp[0] + 2}}}{10^{${exp[1] + exp[2]\n            }}}`;\n          texteCorr += ` = 10^{${exp[0] + 2}-${exp[1] + exp[2]}}`;\n          texteCorr += ` = 10^{${exp[0] + 2 - exp[1] - exp[2]}}`;\n          if (\n            exp[0] + 2 - exp[1] - exp[2] == 0 ||\n            exp[0] + 2 - exp[1] - exp[2] == 1\n          ) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant 1 est évincé\n            texteCorr += `=` + simpExp(10, exp[0] + 2 - exp[1] - exp[2]);\n          }\n          texteCorr += `$`;\n          break;\n        case 5:\n          exp = [randint(1, 7, [1]), randint(1, 7, [1])]; // on a besoin de 2 exposants distincts\n          texte = `$\\\\dfrac{10^${exp[0]}\\\\times 1000}{10^${exp[1]}}$`;\n          texteCorr = `$\\\\dfrac{10^${exp[0]}\\\\times 1000}{10^${exp[1]}}`;\n          texteCorr += ` = \\\\dfrac{10^${exp[0]}\\\\times 10^3}{10^${exp[1]}}`;\n          texteCorr += ` = \\\\dfrac{10^{${exp[0]}+3}}{10^${exp[1]}}`;\n          texteCorr += ` = \\\\dfrac{10^{${exp[0] + 3}}}{10^${exp[1]}}`;\n          texteCorr += ` = 10^{${exp[0] + 3}-${exp[1]}}`;\n          texteCorr += ` = 10^{${exp[0] + 3 - exp[1]}}`;\n          if (exp[0] + 3 - exp[1] == 0 || exp[0] + 3 - exp[1] == 1) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant 1 est évincé\n            texteCorr += `=` + simpExp(10, exp[0] + 3 - exp[1]);\n          }\n          texteCorr += `$`;\n          break;\n        case 6:\n          exp = [randint(1, 7, [1]), randint(1, 2)]; // on a besoin de 2 exposants distincts\n          // le second exposant ne peut valoir que 1 ou 2 la fonction testExp ne convient pas à l'affichage ici\n          if (exp[1] == 2) {\n            texte = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100^${exp[1]}}$`;\n            texteCorr = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100^${exp[1]}}`;\n            texteCorr += `=\\\\dfrac{10^{1+${exp[0]}}}{(10^2)^${exp[1]}}`;\n            texteCorr += `=\\\\dfrac{10^{1+${exp[0]}}}{10^{2 \\\\times ${exp[1]}}}`;\n            texteCorr += `=\\\\dfrac{10^{${1 + exp[0]}}}{10^{${2 * exp[1]}}}`;\n          } else {\n            texte = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100}$`;\n            texteCorr = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100}`;\n            texteCorr += `=\\\\dfrac{10^{1+${exp[0]}}}{10^2}`;\n          }\n          texteCorr += `=10^{${1 + exp[0]}-${2 * exp[1]}}`;\n          texteCorr += `=10^{${1 + exp[0] - 2 * exp[1]}}`;\n          if (1 + exp[0] - 2 * exp[1] == 0 || 1 + exp[0] - 2 * exp[1] == 1) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant 1 est évincé\n            texteCorr += `=` + simpExp(10, 1 + exp[0] - 2 * exp[1]);\n          }\n          texteCorr += `$`;\n          break;\n        case 7:\n          exp = [randint(1, 7, [1])]; // on a besoin de 1 exposant\n          texte = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100\\\\times 100}$`;\n          texteCorr = `$\\\\dfrac{10\\\\times 10^${exp[0]}}{100\\\\times 100}`;\n          texteCorr += `=\\\\dfrac{10^{1+${exp[0]}}}{10^2\\\\times 10^2}`;\n          texteCorr += `=\\\\dfrac{10^{${1 + exp[0]}}}{10^{2+2}}`;\n          texteCorr += `=\\\\dfrac{10^{${1 + exp[0]}}}{10^{${2 + 2}}}`;\n          texteCorr += `=10^{${1 + exp[0]}-${2 + 2}}`;\n          texteCorr += `=10^{${1 + exp[0] - 2 - 2}}`;\n          if (1 + exp[0] - 2 - 2 == 0 || 1 + exp[0] - 2 - 2 == 1) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant 1 est évincé\n            texteCorr += `=` + simpExp(10, 1 + exp[0] - 2 - 2);\n          }\n          texteCorr += `$`;\n          break;\n        case 8:\n          exp = [randint(1, 7, [1])]; // on a besoin de 1 exposant\n          texte = `$\\\\dfrac{100^${exp[0]}}{10}$`;\n          texteCorr = `$\\\\dfrac{100^${exp[0]}}{10}`;\n          texteCorr += `=\\\\dfrac{(10^2)^${exp[0]}}{10}`;\n          texteCorr += `=\\\\dfrac{10^{2\\\\times ${exp[0]}}}{10}`;\n          texteCorr += `=\\\\dfrac{10^{${2 * exp[0]}}}{10}`;\n          texteCorr += `=10^{${2 * exp[0]}-1}`;\n          texteCorr += `=10^{${2 * exp[0] - 1}}$`;\n          // Inutile de tester l'exposant final car il vaut au minimum 3\n          break;\n        case 9:\n          exp = [randint(1, 3, [1])]; // on a besoin de 1 exposant\n          texte = `$\\\\dfrac{1000^${exp[0]}}{10}$`;\n          texteCorr = `$\\\\dfrac{1000^${exp[0]}}{10}`;\n          texteCorr += `=\\\\dfrac{(10^3)^${exp[0]}}{10}`;\n          texteCorr += `=\\\\dfrac{10^{3\\\\times ${exp[0]}}}{10}`;\n          texteCorr += `=\\\\dfrac{10^{${3 * exp[0]}}}{10}`;\n          texteCorr += `=10^{${3 * exp[0]}-1}`;\n          texteCorr += `=10^{${3 * exp[0] - 1}}$`;\n          // inutile de tester l'exposant final car il vaut au minimum 5\n          break;\n        case 10:\n          exp = [randint(1, 7, [1]), randint(1, 7, [1]), randint(1, 4, [1])]; // on a besoin de 3 exposants distincts\n          texte = `$\\\\dfrac{10^${exp[0]}\\\\times 10^${exp[1]}}{100^${exp[2]}}\\\\times 10$`;\n          texteCorr = `$\\\\dfrac{10^${exp[0]}\\\\times 10^${exp[1]}}{100^${exp[2]}}\\\\times 10`;\n          texteCorr += `=\\\\dfrac{10^{${exp[0]}+${exp[1]}}}{(10^2)^${exp[2]}}\\\\times 10`;\n          texteCorr += `=\\\\dfrac{10^{${exp[0] + exp[1]}}}{10^{2\\\\times ${exp[2]\n            }}}\\\\times 10`;\n          texteCorr += `=\\\\dfrac{10^{${exp[0] + exp[1]}}}{10^{${2 * exp[2]\n            }}}\\\\times 10`;\n          texteCorr += `=\\\\dfrac{10^{${exp[0] + exp[1]}}\\\\times 10}{10^{${2 * exp[2]\n            }}}`;\n          texteCorr += `=\\\\dfrac{10^{${exp[0] + exp[1]}+1}}{10^{${2 * exp[2]\n            }}}`;\n          texteCorr += `=\\\\dfrac{10^{${exp[0] + exp[1] + 1}}}{10^{${2 * exp[2]\n            }}}`;\n          texteCorr += `=10^{${exp[0] + exp[1] + 1}-${2 * exp[2]}}`;\n          texteCorr += `=10^{${exp[0] + exp[1] + 1 - 2 * exp[2]}}`;\n          if (\n            exp[0] + exp[1] + 1 - 2 * exp[2] == 0 ||\n            exp[0] + exp[1] + 1 - 2 * exp[2] == 1\n          ) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant est évincé\n            texteCorr += `=` + simpExp(10, exp[0] + exp[1] + 1 - 2 * exp[2]);\n          }\n          texteCorr += `$`;\n          break;\n        case 11:\n          exp = [randint(1, 7, [1])]; // on a besoin de 1 exposant\n          texte = `$\\\\dfrac{1000\\\\times 10}{100^${exp[0]}}$`;\n          texteCorr = `$\\\\dfrac{1000\\\\times 10}{100^${exp[0]}}`;\n          texteCorr += `=\\\\dfrac{10^3\\\\times 10}{(10^2)^${exp[0]}}`;\n          texteCorr += `=\\\\dfrac{10^{3+1}}{10^{2\\\\times${exp[0]}}}`;\n          texteCorr += `=\\\\dfrac{10^{4}}{10^{${2 * exp[0]}}}`;\n          texteCorr += `=10^{4-${2 * exp[0]}}`;\n          texteCorr += `=10^{${3 + 1 - 2 * exp[0]}}`;\n          if (3 + 1 - 2 * exp[0] == 0 || 3 + 1 - 2 * exp[0] == 1) {\n            // on ne teste l'exposant que pour la sortie puisque l'exposant est évincé\n            texteCorr += `=` + simpExp(10, 3 + 1 - 2 * exp[0]);\n          }\n          texteCorr += `$`;\n          break;\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\n    \"Règle à travailler\",\n    3,\n    \"1 : Calculs de base\\n2 : Calculs plus complexes\\n3 : Mélange\",\n  ];\n}\n\n\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Puissances_de_dix","Exercice","this","sup","context","consigne","spacing","spacingCorr","nbQuestions","correctionDetailleeDisponible","nbColsCorr","nouvelleVersion","numeroExercice","typesDeQuestions","boutonAide","modalPdf","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","coul0","coul1","exp0","exp1","exp","coul_exp0","coul_exp1","lettre","texte","texteCorr","i","cpt","randint","lettreDepuisChiffre","correctionDetaillee","eclatePuissance","simpNotPuissance","Math","max","min","simpExp","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}