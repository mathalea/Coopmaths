{"version":3,"file":"js/29233.17e339005e6abb5d5ea7.js","mappings":"wMAMO,MAAMA,EAAQ,8EACRC,EAAoB,aAOlB,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKC,IAAM,EACXD,KAAKE,KAAO,EACZF,KAAKG,SAAW,GAChBH,KAAKI,+BAAgC,EACrCJ,KAAKK,qBAAsB,EAC3BL,KAAKM,QAAU,EACfN,KAAKO,YAAc,EACnBP,KAAKQ,uBAAwB,EAC7BR,KAAKS,gBAAkB,WAKrB,IAAIC,EACJ,OALAV,KAAKW,eAAiB,GACtBX,KAAKC,IAAMW,SAASZ,KAAKC,KACzBD,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GAEhBd,KAAKC,KACX,KAAK,EACHS,EAA8B,CAAC,SAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,aAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,SAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,SAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,QAAS,YAAa,QAAS,SAIlE,SAASK,EAA6BC,EAAGC,EAAwB,IAC/D,MAAMC,EAASC,KAAKC,aAAa,QAAS,CAAEH,sBAAuBA,IAAyBI,OAAOL,GAAGM,QAAQ,IAAK,OACnH,OAAON,EAAI,EAAK,IAAGE,KAAYA,EAEjC,MAAMK,GAAuBC,EAAAA,EAAAA,KAAkBd,EAA6BV,KAAKO,aAEjF,IAAIkB,EADJC,QAAQC,IAAIJ,GAGVE,EAD0B,IAAxBb,SAASZ,KAAKE,OACJsB,EAAAA,EAAAA,KAAkB,CAAC,GAAIxB,KAAKO,aACP,IAAxBK,SAASZ,KAAKE,OACXsB,EAAAA,EAAAA,KAAkB,CAAC,EAAG,EAAG,GAAIxB,KAAKO,cAElCiB,EAAAA,EAAAA,KAAkB,CAAC,EAAG,EAAG,EAAG,GAAIxB,KAAKO,aAEnD,IAAK,IAAWqB,EAAOC,EAAWC,EAAGC,EAAGf,EAAGgB,EAAGC,EAAGC,EAAGC,EAAIC,EAAQC,EAAvDC,EAAI,EAA+DC,EAAM,EAAGD,EAAItC,KAAKO,aAAegC,EAAM,IAAK,CAKtH,OAHAT,GAAIU,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,EAAG,GAAI,IAC3BT,GAAIS,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAACV,EAAG,IAEfP,EAAqBe,IAC3B,IAAK,QACH,OAAQb,EAAUa,IAChB,KAAK,EACHtB,GAAIyB,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,KAAQ,EAAG,KAAO,GAC7BN,GAAIQ,EAAAA,EAAAA,KAAO,EAACF,EAAAA,EAAAA,MAAS,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,MAAMA,EAAAA,EAAAA,MAAS,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,MAAMA,EAAAA,EAAAA,MAAS,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,KAAMxB,IACnJoB,EAAU,qDACRO,EAAAA,EAAAA,IAAG,YAAYT,KACjBG,EAAa,GACTrC,KAAKK,sBACPgC,GAAe,iSAMbH,EAAI,GACNG,GAAe,8CAA6CH,eAAeA,yDAAyDA,kBAAkBA,8BAElJU,EAAAA,EAAAA,KAAqBV,GAAG,KAAOA,EAE/BG,GADQ,IAANH,EACa,kBAAiBA,OAAOW,KAAKC,KAAKZ,kBAAkBA,MAAMW,KAAKC,KAAKZ,gGACpBW,KAAKC,KAAKZ,WAAWW,KAAKC,KAAKZ,4CACjFW,KAAKC,KAAKZ,MAAKS,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,KAAKE,KAAKC,KAAKZ,UAExC,wBAAuBA,MAAKS,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,YAAYT,UAInEG,GADEH,IAAMlB,EACO,kBAAiBkB,OAAOW,KAAKC,KAAKZ,kBAAkBA,MAAMW,KAAKC,KAAKZ,gGACpBW,KAAKC,KAAKZ,WAAWW,KAAKC,KAAKZ,4CACjFW,KAAKC,KAAKZ,MAAKS,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,KAAKE,KAAKC,KAAKZ,UAExC,kBAAiBA,QAAOU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,mBAAmBA,OAAMU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,sGACrHU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,kDACtLU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,OAAMS,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,MAAKC,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,YAKlKG,GADQ,IAANH,EACa,8CAA6CA,gBAAgBA,gGAG7D,gDAA+CA,UAAUA,gGAK5E,MACF,KAAK,EACHF,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBP,GAAIO,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBN,GAAIO,EAAAA,EAAAA,KAAOR,EAAID,GACfI,EAAU,qDACRO,EAAAA,EAAAA,IAAG,YAAWI,EAAAA,EAAAA,KAAmBf,MAAMC,KACzCI,EAAa,0FAEXA,GADEL,EAAI,EACS,uCACbe,EAAAA,EAAAA,KAAmBf,OAAOC,2BAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,IAAehB,OAAOC,MAAKe,EAAAA,EAAAA,IAAehB,6BACjEC,EAAID,kCAGO,uCACbe,EAAAA,EAAAA,KAAmBf,OAAOC,2BAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,KAAgBhB,OAAOC,MAAKe,EAAAA,EAAAA,KAAgBhB,6BACnEC,EAAID,kCAGNE,EAAI,IACI,IAANA,GAAiB,IAANA,GAAiB,IAANA,GAAiB,KAANA,GAAkB,KAANA,EAC/CG,GAAe,mDAAiDY,EAAAA,EAAAA,KAAWf,uDAAsDe,EAAAA,EAAAA,KAAWf,oBAAmBe,EAAAA,EAAAA,KAAWf,gDACtJe,EAAAA,EAAAA,KAAWf,SAAQU,EAAAA,EAAAA,KAAqBV,GAAG,kBAAkBA,OAAMU,EAAAA,EAAAA,KAAqBV,GAAG,iGAC9CU,EAAAA,EAAAA,KAAqBV,GAAG,YAAWU,EAAAA,EAAAA,KAAqBV,GAAG,6CAC7GU,EAAAA,EAAAA,KAAqBV,GAAG,MAAKS,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,MAAKC,EAAAA,EAAAA,KAAqBV,GAAG,WAEjFU,EAAAA,EAAAA,KAAqBV,GAAG,KAAOA,EACjCG,GAAe,mDAAiDY,EAAAA,EAAAA,KAAWf,uDAAsDe,EAAAA,EAAAA,KAAWf,oBAAmBe,EAAAA,EAAAA,KAAWf,kDACzJA,QAAOU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,mBAAmBA,OAAMU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,sGACtGU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,kDACtLU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,OAAMS,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,MAAKC,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,WAEhKG,GAAe,kDAAiDJ,EAAID,2EACtBC,EAAID,kBAAkBC,EAAID,wDAChDC,EAAID,MAAKW,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,YAAYV,EAAID,WAIzD,IAANE,IACFG,GAAe,mDAAiDY,EAAAA,EAAAA,KAAWf,uFAGzEA,EAAI,IACNG,GAAe,mDAAiDY,EAAAA,EAAAA,KAAWhB,EAAID,2FAGjF,MACF,KAAK,EACHA,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBP,GAAIO,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBN,GAAIO,EAAAA,EAAAA,KAAOT,EAAIC,GACfG,EAAU,qDACRO,EAAAA,EAAAA,IAAG,aAAYI,EAAAA,EAAAA,KAAmBf,MAAMC,KAC1CI,EAAa,0FAEXA,GADEL,EAAI,EACS,wCACXA,MAAMC,4BACPc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,IAAehB,OAAOC,MAAKe,EAAAA,EAAAA,IAAehB,8BACjEC,EAAID,4BACLA,EAAIC,kCAGO,wCACZc,EAAAA,EAAAA,KAAmBf,OAAOC,4BAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,KAAgBhB,OAAOC,MAAKe,EAAAA,EAAAA,KAAgBhB,8BACnEC,EAAID,4BACLA,EAAIC,kCAINC,EAAI,IACI,IAANA,GAAiB,IAANA,GAAiB,IAANA,GAAiB,KAANA,GAAkB,KAANA,EAC/CG,GAAe,mDAAiDY,EAAAA,EAAAA,KAAWf,uDAAsDe,EAAAA,EAAAA,KAAWf,oBAAmBe,EAAAA,EAAAA,KAAWf,iDACrJe,EAAAA,EAAAA,KAAWf,SAAQU,EAAAA,EAAAA,KAAqBV,GAAG,kBAAkBA,OAAMU,EAAAA,EAAAA,KAAqBV,GAAG,iGAC/CU,EAAAA,EAAAA,KAAqBV,GAAG,YAAWU,EAAAA,EAAAA,KAAqBV,GAAG,6CAC7GU,EAAAA,EAAAA,KAAqBV,GAAG,MAAKS,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,MAAKC,EAAAA,EAAAA,KAAqBV,GAAG,WAEjFU,EAAAA,EAAAA,KAAqBV,GAAG,KAAOA,EACjCG,GAAe,mDAAiDY,EAAAA,EAAAA,KAAWf,uDAAsDe,EAAAA,EAAAA,KAAWf,oBAAmBe,EAAAA,EAAAA,KAAWf,2BAA2BA,QAAOU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,mBAAmBA,OAAMU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,sGAC1RU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,kDACtLU,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,OAAMS,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,MAAKC,EAAAA,EAAAA,KAAqBV,GAAG,aAAYU,EAAAA,EAAAA,KAAqBV,GAAG,WAEhKG,GAAe,mDAAiDY,EAAAA,EAAAA,KAAWf,uDAAsDe,EAAAA,EAAAA,KAAWf,oBAAmBe,EAAAA,EAAAA,KAAWf,wDAClJA,MAAKS,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,YAAYT,WAIjD,IAANA,IACFG,GAAe,mDAAiDY,EAAAA,EAAAA,KAAWf,wFAGzEA,EAAI,IACNG,GAAe,mDAAiDY,EAAAA,EAAAA,KAAWjB,EAAIC,4FAGjF,MAEF,KAAK,EACHjB,GAAIwB,EAAAA,EAAAA,MAAS,GAAI,GAAI,EAAE,EAAG,EAAG,IAC7BR,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBP,GAAIO,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBN,GAAIO,EAAAA,EAAAA,MAAQR,EAAID,GAAKhB,GACrBoB,EAAU,qDACRO,EAAAA,EAAAA,IAAG,QAAQ3B,QAAO+B,EAAAA,EAAAA,KAAmBf,MAAMC,KAC7CI,EAAa,0FAEXA,GADEL,EAAI,EACS,oCACfhB,QAAO+B,EAAAA,EAAAA,KAAmBf,OAAOC,wBACjCjB,QAAO+B,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,IAAehB,OAAOC,MAAKe,EAAAA,EAAAA,IAAehB,yBAC1EhB,SAASiB,EAAID,yCACGkB,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,mCAG3B,mCAChBA,QAAO+B,EAAAA,EAAAA,KAAmBf,OAAOC,uBACjCjB,QAAO+B,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,KAAgBhB,OAAOC,MAAKe,EAAAA,EAAAA,KAAgBhB,wBAC5EhB,SAASiB,EAAID,wCACGkB,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,kCAGvCkB,EAAI,IAEJG,GADQ,IAANH,GAAiB,IAANA,GAAiB,IAANA,GAAiB,KAANA,GAAkB,KAANA,EAChC,SAAOe,EAAAA,EAAAA,KAAWf,uDAAsDe,EAAAA,EAAAA,KAAWf,oBAAmBe,EAAAA,EAAAA,KAAWf,iDAC3Ge,EAAAA,EAAAA,KAAWf,SAAQU,EAAAA,EAAAA,KAAqBV,GAAG,kBAAkBA,OAAMU,EAAAA,EAAAA,KAAqBV,GAAG,iGAC/CU,EAAAA,EAAAA,KAAqBV,GAAG,YAAWU,EAAAA,EAAAA,KAAqBV,GAAG,mDACnGU,EAAAA,EAAAA,KAAqBV,GAAG,MAAKS,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,MAAKC,EAAAA,EAAAA,KAAqBV,GAAG,iBAEzFD,EAAID,GAAM,GAAY,IAANhB,GAAciB,EAAID,GAAM,GAAY,IAANhB,GAAciB,EAAID,GAAM,IAAa,IAANhB,GAAciB,EAAID,GAAM,GAAY,KAANhB,EAChG,SAAOkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,uDAAsDkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,oBAAmBkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,mDACxJkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,iBAAgB4B,EAAAA,EAAAA,KAAqBX,EAAID,GAAG,QAAOY,EAAAA,EAAAA,KAAqB5B,GAAG,oBAAmBkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,gBAAe4B,EAAAA,EAAAA,KAAqBX,EAAID,GAAG,QAAOY,EAAAA,EAAAA,KAAqB5B,GAAG,4GACxK4B,EAAAA,EAAAA,KAAqBX,EAAID,GAAG,QAAOY,EAAAA,EAAAA,KAAqB5B,GAAG,qBAAoB4B,EAAAA,EAAAA,KAAqBX,EAAID,GAAG,QAAOY,EAAAA,EAAAA,KAAqB5B,GAAG,6DACvL4B,EAAAA,EAAAA,KAAqBX,EAAID,GAAG,QAAOY,EAAAA,EAAAA,KAAqB5B,GAAG,OAAM2B,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,cAAaC,EAAAA,EAAAA,KAAqBX,EAAID,GAAG,QAAOY,EAAAA,EAAAA,KAAqB5B,GAAG,iBAElK,SAAOkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,2EACvCkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,oBAAmBkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,6DACrDkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,OAAM2B,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,aAAYO,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,mBAK9GiB,EAAID,GAAKhB,GAAM,IAClBqB,GAAe,6EAGZJ,EAAID,GAAKhB,EAAI,IAChBqB,GAAe,SAAOa,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,2FAMtD,MACF,IAAK,YACH,OAAQS,EAAUa,IAChB,KAAK,EACHJ,GAAIM,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBJ,EAAU,qBAAmBO,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,oDACzBA,EAAAA,EAAAA,IAAG,kBAAkBT,KACrCG,EAAa,GACTrC,KAAKK,sBACPgC,GAAe,oOAKbH,EAAI,IACNG,GAAe,sDAAqDH,UAAUA,+GAI5EA,EAAI,GAAW,IAANA,KACXG,GAAe,MAAKH,UAAUA,8CAA8CA,OAAOA,GAAK,uCAC3EA,GAAK,0BAGpB,MAEF,KAAK,EACHF,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBP,GAAIO,EAAAA,EAAAA,MAAS,GAAI,IACjBN,EAAID,EAAID,EACRI,EAAU,qBAAmBO,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,wCACrCA,EAAAA,EAAAA,IAAG,kBAAiBI,EAAAA,EAAAA,KAAmBf,MAAMC,KAG/CI,EADEL,EAAI,EACQ,oKAEHe,EAAAA,EAAAA,KAAmBf,OAAOC,oCAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,IAAehB,OAAOC,MAAKe,EAAAA,EAAAA,IAAehB,sCACjEC,EAAID,wDAGH,kMAEYe,EAAAA,EAAAA,KAAmBf,OAAOC,mDAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,KAAgBhB,OAAOC,MAAKe,EAAAA,EAAAA,KAAgBhB,qDACnEC,EAAID,uEAG9BC,EAAID,EAAI,IACVK,GAAe,oDAAmDH,cAAcA,wFAI9ED,EAAID,EAAI,GAAKC,EAAID,GAAM,KACzBK,GAAe,oDAAmDJ,EAAID,cAAcC,EAAID,yDAAyDE,OAAOA,GAAK,2BAC5JA,GAAK,cAIR,MACF,KAAK,EACHF,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBP,GAAIO,EAAAA,EAAAA,MAAS,GAAI,IACjBN,EAAIF,EAAIC,EACRG,EAAU,qBAAmBO,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,wCACrCA,EAAAA,EAAAA,IAAG,mBAAkBI,EAAAA,EAAAA,KAAmBf,MAAMC,KAEhDI,EADEL,EAAI,EACQ,qKAEFe,EAAAA,EAAAA,KAAmBf,OAAOC,qCAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,IAAehB,OAAOC,MAAKe,EAAAA,EAAAA,IAAehB,uCACjEC,EAAID,qCACLA,EAAIC,wDAGH,mMAEac,EAAAA,EAAAA,KAAmBf,OAAOC,oDAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,KAAgBhB,OAAOC,MAAKe,EAAAA,EAAAA,KAAgBhB,sDACnEC,EAAID,oDACLA,EAAIC,uEAG9BC,EAAI,IACNG,GAAe,oDAAmDH,cAAcA,wFAI9EA,EAAI,GAAW,IAANA,KACXG,GAAe,oDAAmDL,EAAIC,cAAcD,EAAIC,wDAAwDC,OAAOA,GAAK,2BAC3JA,GAAK,cAIR,MACF,KAAK,EACHlB,GAAIwB,EAAAA,EAAAA,MAAS,GAAI,GAAI,CAAC,GAAI,EAAG,IAC7BR,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBP,GAAIO,EAAAA,EAAAA,MAAS,GAAI,IACjBN,GAAKD,EAAID,GAAKhB,EACdoB,EAAU,qBAAmBO,EAAAA,EAAAA,IAAG,OAAMA,EAAAA,EAAAA,IAAG,wCACrCA,EAAAA,EAAAA,IAAG,QAAQ3B,cAAa+B,EAAAA,EAAAA,KAAmBf,MAAMC,KAEnDI,EADEL,EAAI,EACQ,0JAEZhB,cAAa+B,EAAAA,EAAAA,KAAmBf,OAAOC,0BACvCjB,cAAa+B,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,IAAehB,OAAOC,MAAKe,EAAAA,EAAAA,IAAehB,2BAChFhB,eAAeiB,EAAID,sCACRkB,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,yDAGzB,wLAEGA,cAAa+B,EAAAA,EAAAA,KAAmBf,OAAOC,yCACvCjB,cAAa+B,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,KAAgBhB,OAAOC,MAAKe,EAAAA,EAAAA,KAAgBhB,0CAClFhB,eAAeiB,EAAID,qDACRkB,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,wEAGpDkB,EAAI,IACNG,GAAe,qDAAmDa,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,gBAAekC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,yFAInIkB,EAAI,GAAW,IAANA,KACXG,GAAe,qDAAmDa,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,gBAAekC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,iEAAgEkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,iBAAgBkC,EAAAA,EAAAA,MAAoBjB,EAAID,IAAM,EAAGhB,GAAK,mCAC9QkC,EAAAA,EAAAA,MAAoBjB,EAAID,IAAM,EAAGhB,GAAK,sBAMnD,MACF,IAAK,QAEH,OAAQS,EAAUa,IAChB,KAAK,EACHJ,GAAIM,EAAAA,EAAAA,MAAS,GAAI,IAEjBJ,EAAU,yDACNO,EAAAA,EAAAA,IAAG,sBAAsBT,KAC7BG,EAAa,GACTrC,KAAKK,sBACPgC,GAAe,iOAIjBA,GAAc,GACJ,IAANH,IACFG,GAAe,wDAAuDH,gBAAgBA,6GAI9E,IAANA,IACFG,GAAe,wDAAuDH,cAAcA,uEACjFgB,EAAAA,EAAAA,KAAmB,EAAGhB,+CACNgB,EAAAA,EAAAA,KAAmB,EAAGhB,kCAI3C,MAEF,KAAK,EACHF,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBP,GAAIO,EAAAA,EAAAA,MAAS,GAAI,IACjBN,EAAID,EAAID,EACRI,EAAU,4DACHO,EAAAA,EAAAA,IAAG,sBAAqBI,EAAAA,EAAAA,KAAmBf,MAAMC,KACxDI,EAAa,GAEXA,GADEL,EAAI,EACS,wLAEIe,EAAAA,EAAAA,KAAmBf,OAAOC,4CAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,IAAehB,OAAOC,MAAKe,EAAAA,EAAAA,IAAehB,8CACjEC,EAAID,2FAGV,gPAEgCe,EAAAA,EAAAA,KAAmBf,OAAOC,wEAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,KAAgBhB,OAAOC,MAAKe,EAAAA,EAAAA,KAAgBhB,0EACnEC,EAAID,uHAG7C,IAANE,IACFG,GAAe,wDAAuDH,kHAI9D,IAANA,IACFG,GAAe,MAAKH,UAAUA,wEAAwEA,mEAChGgB,EAAAA,EAAAA,KAAmB,EAAGhB,kDACNgB,EAAAA,EAAAA,KAAmB,EAAGhB,qCAG9C,MACF,KAAK,EACHlB,GAAIwB,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBR,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBN,EAAIF,EAAIhB,EACRoB,EAAU,4DACHO,EAAAA,EAAAA,IAAG,gBAAgB3B,SAASgB,KACnCK,EAAa,GACbA,GAAe,kLAECrB,UAAUgB,8CACHkB,EAAAA,EAAAA,KAAmBlB,EAAGhB,MAAK2B,EAAAA,EAAAA,IAAG,+BAA+B3B,sHAE1E,IAANkB,IACFG,GAAe,wDAAuDH,kHAI9D,IAANA,IAEAG,GADEH,EAAI,GAAM,EACG,yDAAuDgB,EAAAA,EAAAA,KAAmBlB,EAAGhB,+EAC7EkC,EAAAA,EAAAA,KAAmBlB,EAAGhB,mDACjBkC,EAAAA,EAAAA,KAAmBlC,EAAGgB,oCAG3B,yDAAuDkB,EAAAA,EAAAA,KAAmBlB,EAAGhB,6EAC/EkC,EAAAA,EAAAA,KAAmBlB,EAAGhB,QAAOkC,EAAAA,EAAAA,KAAmBlC,EAAGgB,gDAC9CkB,EAAAA,EAAAA,KAAmBlC,EAAGgB,mCAI5C,MACF,KAAK,EACHhB,GAAIwB,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBR,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBP,GAAIO,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBN,GAAKD,EAAID,GAAKhB,EACdoB,EAAU,4DACHO,EAAAA,EAAAA,IAAG,gBAAgB3B,SAAQ+B,EAAAA,EAAAA,KAAmBf,MAAMC,KAC3DI,EAAa,GAEXA,GADEL,EAAI,EACS,kLAEDhB,SAAQ+B,EAAAA,EAAAA,KAAmBf,OAAOC,sCAClCjB,SAAQ+B,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,IAAehB,OAAOC,MAAKe,EAAAA,EAAAA,IAAehB,uCAC3EhB,UAAUiB,EAAID,8CACPkB,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,MAAK2B,EAAAA,EAAAA,IAAG,+BAA+B3B,gIAGvE,0OAE2BA,SAAQ+B,EAAAA,EAAAA,KAAmBf,OAAOC,kEAClCjB,SAAQ+B,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,KAAgBhB,OAAOC,MAAKe,EAAAA,EAAAA,KAAgBhB,mEAC7EhB,UAAUiB,EAAID,8CACnCkB,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,MAAK2B,EAAAA,EAAAA,IAAG,+BAA+B3B,uJAG9E,IAANkB,IACFG,GAAe,yDAAuDa,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,mHAIxF,IAANkB,IAEAG,GADEH,EAAI,GAAM,EACG,yDAAuDgB,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,gFACjFkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,mDACrBkC,EAAAA,EAAAA,KAAmBlC,EAAGiB,EAAID,oCAG/B,yDAAuDkB,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,8EACnFkC,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,QAAOkC,EAAAA,EAAAA,KAAmBlC,EAAGiB,EAAID,gDACtDkB,EAAAA,EAAAA,KAAmBlC,EAAGiB,EAAID,mCAMpD,MAEF,IAAK,QAEH,OAAQP,EAAUa,IAChB,KAAK,EACHH,GAAKO,EAAAA,EAAAA,KAAO,EAAE,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACxDR,GAAIO,EAAAA,EAAAA,KAAON,GAAM,GAEjBC,EAAU,uDACNO,EAAAA,EAAAA,IAAG,YAAYT,KACnBG,EAAa,GACTrC,KAAKK,sBACPgC,GAAe,iLAGjBA,GAAe,8CAA6CH,uDAC9BA,WAAWC,WAAYpB,EAA4BoB,QAASD,yCACzEC,yBAGjB,MAEF,KAAK,EACHH,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,GACrBL,GAAKO,EAAAA,EAAAA,KAAO,EAAE,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACxDR,GAAIO,EAAAA,EAAAA,KAAON,GAAM,GACjBF,GAAIQ,EAAAA,EAAAA,KAAOP,EAAIF,GACfI,EAAU,0DACHO,EAAAA,EAAAA,IAAG,YAAWI,EAAAA,EAAAA,KAAmBf,MAAMC,KAC9CI,EAAa,GAEXA,GADEL,EAAI,EACS,0JAENe,EAAAA,EAAAA,KAAmBf,OAAOC,kCAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,IAAehB,OAAOC,MAAKe,EAAAA,EAAAA,IAAehB,oCACjEC,EAAID,2FAGA,kNAEsBe,EAAAA,EAAAA,KAAmBf,OAAOC,8DAC1Bc,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,KAAgBhB,OAAOC,MAAKe,EAAAA,EAAAA,KAAgBhB,gEACnEC,EAAID,uHAG7CK,GAAe,8CAA6CH,uDAC9BA,WAAWC,WAAYpB,EAA4BoB,QAASD,yCACzEC,yBAGjB,MACF,KAAK,EACHnB,GAAIwB,EAAAA,EAAAA,MAAS,GAAI,GAAI,CAAC,GAAI,EAAG,IAC7BL,GAAKO,EAAAA,EAAAA,KAAO,EAAE,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACxDR,GAAIO,EAAAA,EAAAA,KAAON,GAAM,GACjBF,GAAIQ,EAAAA,EAAAA,KAAOP,EAAIlB,GACfoB,EAAU,4DACDO,EAAAA,EAAAA,IAAG,QAAQ3B,QAAQiB,KAC5BI,EAAa,GAEbA,GAAe,0JAELrB,SAASiB,sCACJiB,EAAAA,EAAAA,KAAmBjB,EAAGjB,8FAGrCqB,GAAe,8CAA6CH,uDAC9BA,WAAWC,WAAYpB,EAA4BoB,QAASD,yCACzEC,yBAEjB,MACF,KAAK,EACHnB,GAAIwB,EAAAA,EAAAA,MAAS,GAAI,GAAI,CAAC,GAAI,EAAG,IAC7BR,GAAIQ,EAAAA,EAAAA,MAAS,GAAI,GAAI,CAAC,GAAI,EAAG,IAC7BL,GAAKO,EAAAA,EAAAA,KAAO,EAAE,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACxDR,GAAIO,EAAAA,EAAAA,KAAON,GAAM,GACjBF,GAAIQ,EAAAA,EAAAA,KAAOP,EAAIlB,EAAIgB,GACnBI,EAAU,4DACDO,EAAAA,EAAAA,IAAG,QAAQ3B,QAAO+B,EAAAA,EAAAA,KAAmBf,MAAMC,KACpDI,EAAa,GAGXA,GADEL,EAAI,EACS,0JAEPhB,QAAO+B,EAAAA,EAAAA,KAAmBf,OAAOC,gCACjCjB,QAAO+B,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,IAAehB,OAAOC,MAAKe,EAAAA,EAAAA,IAAehB,iCAC1EhB,UAASiC,EAAAA,EAAAA,KAAWhB,EAAID,yCACnBkB,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,6FAGxB,0JAEPA,QAAO+B,EAAAA,EAAAA,KAAmBf,OAAOC,gCACjCjB,QAAO+B,EAAAA,EAAAA,KAAmBf,OAAMgB,EAAAA,EAAAA,KAAgBhB,OAAOC,MAAKe,EAAAA,EAAAA,KAAgBhB,iCAC5EhB,UAASiC,EAAAA,EAAAA,KAAWhB,EAAID,yCACnBkB,EAAAA,EAAAA,KAAmBjB,EAAID,EAAGhB,6FAIzCqB,GAAe,8CAA6CH,uDAC9BA,WAAWC,WAAYpB,EAA4BoB,QAASD,yCACzEC,0BAOzBP,EAAQQ,EACRP,EAAYQ,EAERrC,KAAKmD,oBAAoBb,EAAGf,EAAqBe,GAAIR,EAAGC,EAAGN,EAAUa,MAEvEtC,KAAKa,eAAeuC,KAAKxB,GACzB5B,KAAKc,iBAAiBsC,KAAKvB,GAC3BS,KAEFC,KAEFc,EAAAA,EAAAA,KAAwBrD,OAE1BA,KAAKsD,0BAA4B,CAC/B,sBACA,EACA,kEAEFtD,KAAKuD,2BAA6B,CAAC,sBAAuB,EAAG,+D,gBCrpBhD,SAASxD,IAItBC,KAAKJ,MAAQ,GACbI,KAAKwD,YAAa,EAclBxD,KAAKG,SAAW,GAChBH,KAAKyD,mBAAqB,GAC1BzD,KAAK0D,aAAe,GACpB1D,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GACxBd,KAAK2D,QAAU,GACf3D,KAAK4D,kBAAoB,GACzB5D,KAAKW,eAAiB,GACtBX,KAAK6D,sBAAwB,GAK7B7D,KAAKM,QAAU,EACfN,KAAK8D,YAAc,EAKnB9D,KAAK+D,mBAAoB,EACzB/D,KAAKgE,cAAgB,GACrBhE,KAAKiE,oBAAqB,EAC1BjE,KAAKQ,uBAAwB,EAC7BR,KAAKkE,OAAS,EACdlE,KAAKmE,WAAa,EAClBnE,KAAKoE,kBAAmB,EACxBpE,KAAKqE,sBAAuB,EAC5BrE,KAAKsE,mBAAoB,EACzBtE,KAAKuE,uBAAwB,EAM7BvE,KAAKwE,QAAS,EACdxE,KAAKyE,gBAAkB,EAKvBzE,KAAKO,YAAc,GACnBP,KAAK0E,mBAAqB,EAC1B1E,KAAKI,+BAAgC,EACrCJ,KAAKK,qBAAsB,EAC3BL,KAAK2E,oBAAqB,EAC1B3E,KAAK4E,MAAQ,GAEb5E,KAAK6E,YAAa,EAClB7E,KAAK8E,uBAAwB,EAE7B9E,KAAKsD,2BAA4B,EACjCtD,KAAK+E,uBAAwB,EAC7B/E,KAAKgF,6BAA8B,EAEnChF,KAAKuD,4BAA6B,EAClCvD,KAAKiF,wBAAyB,EAC9BjF,KAAKkF,8BAA+B,EAEpClF,KAAKmF,4BAA6B,EAClCnF,KAAKoF,wBAAyB,EAC9BpF,KAAKqF,8BAA+B,EAEpCrF,KAAKsF,4BAA6B,EAClCtF,KAAKuF,wBAAyB,EAC9BvF,KAAKwF,8BAA+B,EAMpCxF,KAAKyF,cAAe,EASpBzF,KAAK0F,eAAiB,GAMtB1F,KAAKS,gBAAkB,SAAUkF,KAQjC3F,KAAKmD,oBAAsB,SAAUb,KAAMsD,GAC/B,IAANtD,IAAStC,KAAK0F,eAAiB,IACnC,IAAIG,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIhG,KAAK0F,eAAeO,QAAQJ,IAAmB,KAGjD7F,KAAK0F,eAAetC,KAAKyC,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/2e/2F12-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport {\n  listeQuestionsToContenu, texFractionReduite, texNombrec,\n  randint, combinaisonListes, ecritureAlgebrique, choice, calcul, sp, extraireRacineCarree,\n  miseEnEvidence\n} from '../../modules/outils.js'\nexport const titre = 'Résoudre algébriquement une équation f(x)=k avec une fonction de référence.'\nexport const dateDePublication = '07/01/2022'\n/**\n*\n*\n* @author Gilles Mora\n*\n*/\nexport default function EquationsFonctionsRef () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 1\n  this.sup2 = 1\n  this.consigne = ''\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false\n  this.spacing = 1\n  this.nbQuestions = 2\n  this.nbQuestionsModifiable = true\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles\n    switch (this.sup) {\n      case 1:\n        typesDeQuestionsDisponibles = ['x^2=k']\n        break\n      case 2:\n        typesDeQuestionsDisponibles = ['sqrt(x)=k']\n        break\n      case 3:\n        typesDeQuestionsDisponibles = ['1/x=k']\n        break\n      case 4:\n        typesDeQuestionsDisponibles = ['x^3=k']\n        break\n      case 5:\n        typesDeQuestionsDisponibles = ['x^2=k', 'sqrt(x)=k', '1/x=k', 'x^3=k']\n        break\n       //\n    }\n    function ecritureParentheseSiNegatif (a, maximumFractionDigits = 15) {\n      const result = Intl.NumberFormat('fr-FR', { maximumFractionDigits: maximumFractionDigits }).format(a).replace(',', '{,}')\n      return a < 0 ? `(${result})` : result\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    console.log(listeTypeDeQuestions)\n    let sousChoix\n    if (parseInt(this.sup2) === 1) {\n      sousChoix = combinaisonListes([0], this.nbQuestions) // pour choisir aléatoirement des questions dans chaque catégorie\n    } else if (parseInt(this.sup2) === 2) {\n      sousChoix = combinaisonListes([1, 2, 3], this.nbQuestions)\n    } else {\n      sousChoix = combinaisonListes([0, 1, 2, 3], this.nbQuestions)\n    }\n    for (let i = 0, texte, texteCorr, x, y, a, b, c, k, k1, enonce, correction, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // on ne choisit que des nombres compris entre 1 et 20\n      x = randint(-9, 9, [0, 1, -1])\n      y = randint(-9, 9, [x, 0])\n\n      switch (listeTypeDeQuestions[i]) {\n        case 'x^2=k':\n          switch (sousChoix[i]) { //\n            case 0:\n              a = calcul(randint(0, 15) ** 2)\n              k = choice([randint(-20, 50, [1, 4, 9, 16, 25, 36, 49]), randint(-20, 50, [1, 4, 9, 16, 25, 36, 49]), randint(-20, 50, [1, 4, 9, 16, 25, 36, 49]), a])\n              enonce = `Résoudre dans $\\\\mathbb{R}$ :<br>\n              ${sp(50)} $x^2=${k}$`\n              correction = ''\n              if (this.correctionDetaillee) {\n                correction += `L'équation $x^2=k$ admet :<br>\n                $\\\\bullet~$ deux solutions lorsque $k>0$ : $-\\\\sqrt{k}$ et $\\\\sqrt{k}$  ;<br>\n                $\\\\bullet~$ une unique solution égale à $0$ lorsque $k=0$ ; <br>\n                $\\\\bullet~$ aucune solution lorsque $k<0$.<br><br>\n        `\n              }\n              if (k > 0) {\n                correction += `L'équation est de la forme $x^2=k$ avec $k=${k}$. Comme  $${k}>0$ alors l'équation admet deux solutions : $-\\\\sqrt{${k}}$ et $\\\\sqrt{${k}}$.<br>\n                `\n                if (extraireRacineCarree(k)[1] === k) {\n                  if (k === 1) {\n                    correction += `Comme $-\\\\sqrt{${k}}=-${Math.sqrt(k)}$ et $\\\\sqrt{${k}}=${Math.sqrt(k)}$ alors \n                les solutions de l'équation peuvent s'écrire plus simplement : $-${Math.sqrt(k)}$ et $${Math.sqrt(k)}$.<br>\n                Ainsi,  $S=\\\\{-${Math.sqrt(k)}${sp(1)};${sp(1)}${Math.sqrt(k)}\\\\}$.`\n                  } else {\n                    correction += `Ainsi, $S=\\\\{-\\\\sqrt{${k}}${sp(1)};${sp(1)}\\\\sqrt{${k}}\\\\}$.`\n                  }\n                } else {\n                  if (k === a) {\n                    correction += `Comme $-\\\\sqrt{${k}}=-${Math.sqrt(k)}$ et $\\\\sqrt{${k}}=${Math.sqrt(k)}$ alors \n                les solutions de l'équation peuvent s'écrire plus simplement : $-${Math.sqrt(k)}$ et $${Math.sqrt(k)}$.<br>\n                Ainsi,  $S=\\\\{-${Math.sqrt(k)}${sp(1)};${sp(1)}${Math.sqrt(k)}\\\\}$.`\n                  } else {\n                    correction += `Comme $-\\\\sqrt{${k}}=-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ alors \n                    les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$.<br>\n                    Ainsi,  $S=\\\\{-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}\\\\}$.`\n                  }\n                }\n              } else {\n                if (k === 0) {\n                  correction += `L'équation est de la forme $x^2=k$ avec $k=${k}$. Comme $k=${k}$ alors L'équation admet une unique solution : $0$.<br>\n                Ainsi, $S=\\\\{0\\\\}$.`\n                } else {\n                  correction += `L'équation est de la forme $x^2=k$. Comme $k=${k}$ et $${k}<0$, alors l'équation n'admet aucune solution.<br>\n                  Ainsi, $S=\\\\emptyset$.`\n                }\n              }\n\n              break\n            case 1:// x^2+b=c\n              b = randint(-15, 15, 0)\n              c = randint(-15, 15, 0)\n              k = calcul(c - b)\n              enonce = `Résoudre dans $\\\\mathbb{R}$ :<br>\n              ${sp(50)} $x^2${ecritureAlgebrique(b)}=${c}$`\n              correction = 'On isole $x^2$ dans le membre de gauche pour obtenir une équation du type $x^2=k$.<br> '\n              if (b > 0) {\n                correction += `$\\\\begin{aligned}\n             x^2${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n             x^2${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n             x^2&=${c - b}\n             \\\\end{aligned}$`\n              } else {\n                correction += `$\\\\begin{aligned}\n             x^2${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n             x^2${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n             x^2&=${c - b}\n             \\\\end{aligned}$`\n              }\n              if (k > 0) {\n                if (k === 1 || k === 4 || k === 9 || k === 16 || k === 25) {\n                  correction += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texNombrec(k)}}$ et $\\\\sqrt{${texNombrec(k)}}$. \n                <br> Comme $-\\\\sqrt{${texNombrec(k)}}=-${extraireRacineCarree(k)[0]}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}$ alors \n                les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}$ et $${extraireRacineCarree(k)[0]}$.<br>\n                Ainsi,  $S=\\\\{-${extraireRacineCarree(k)[0]}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\}$.`\n                } else {\n                  if (extraireRacineCarree(k)[1] !== k) {\n                    correction += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texNombrec(k)}}$ et $\\\\sqrt{${texNombrec(k)}}$. <br>\n                    Comme $-\\\\sqrt{${k}}=-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ alors \n                    les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$.<br>\n                    Ainsi,  $S=\\\\{-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}\\\\}$.`\n                  } else {\n                    correction += `<br>L'équation est de la forme $x^2=k$ avec $k=${c - b}>0$, \n                    donc l'équation a deux solutions : $-\\\\sqrt{${c - b}}$ et $\\\\sqrt{${c - b}}$.<br> \n                    Ainsi,  $S=\\\\{-\\\\sqrt{${c - b}}${sp(1)};${sp(1)}\\\\sqrt{${c - b}}\\\\}$.`\n                  }\n                }\n              }\n              if (k === 0) {\n                correction += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}$, alors l'équation a une solution : $0$.<br>\n              Ainsi, $S=\\\\{0\\\\}$. `\n              }\n              if (k < 0) {\n                correction += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(c - b)}$, alors l'équation n'a pas de solution.\n                <br>Ainsi, $S=\\\\emptyset$. `\n              }\n              break\n            case 2:// -x^2+b=c\n              b = randint(-10, 10, 0)\n              c = randint(-10, 10, 0)\n              k = calcul(b - c)\n              enonce = `Résoudre dans $\\\\mathbb{R}$ :<br>\n              ${sp(50)} $-x^2${ecritureAlgebrique(b)}=${c}$`\n              correction = 'On isole $x^2$ dans le membre de gauche pour obtenir une équation du type $x^2=k$.<br> '\n              if (b > 0) {\n                correction += `$\\\\begin{aligned}\n             -x^2+${b}&=${c}\\\\\\\\\n             -x^2${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n             -x^2&=${c - b}\\\\\\\\\n             x^2&=${b - c}\n             \\\\end{aligned}$`\n              } else {\n                correction += `$\\\\begin{aligned}\n             -x^2${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n             -x^2${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n             -x^2&=${c - b}\\\\\\\\\n             x^2&=${b - c}\n             \\\\end{aligned}$`\n              }\n\n              if (k > 0) {\n                if (k === 1 || k === 4 || k === 9 || k === 16 || k === 25) {\n                  correction += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texNombrec(k)}}$ et $\\\\sqrt{${texNombrec(k)}}$. \n                <br>  Comme $-\\\\sqrt{${texNombrec(k)}}=-${extraireRacineCarree(k)[0]}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}$ alors \n                les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}$ et $${extraireRacineCarree(k)[0]}$.<br>\n                Ainsi,  $S=\\\\{-${extraireRacineCarree(k)[0]}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\}$.`\n                } else {\n                  if (extraireRacineCarree(k)[1] !== k) {\n                    correction += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texNombrec(k)}}$ et $\\\\sqrt{${texNombrec(k)}}$.<br>Comme $-\\\\sqrt{${k}}=-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ alors \n                    les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$.<br>\n                    Ainsi,  $S=\\\\{-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}\\\\}$.`\n                  } else {\n                    correction += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texNombrec(k)}}$ et $\\\\sqrt{${texNombrec(k)}}$.<br>\n                    Ainsi,  $S=\\\\{-\\\\sqrt{${k}}${sp(1)};${sp(1)}\\\\sqrt{${k}}\\\\}$.`\n                  }\n                }\n              }\n              if (k === 0) {\n                correction += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}=0$, donc l'équation a une solution : $0$.<br>\n              Ainsi, $S=\\\\{0\\\\}$. `\n              }\n              if (k < 0) {\n                correction += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(b - c)}$, alors l'équation n'a pas de solution.\n                <br> Ainsi, $S=\\\\emptyset$. `\n              }\n              break\n\n            case 3:// ax^2+b=c\n              a = randint(-10, 10, [-1, 0, 1])\n              b = randint(-10, 10, 0)\n              c = randint(-10, 10, 0)\n              k = calcul((c - b) / a)\n              enonce = `Résoudre dans $\\\\mathbb{R}$ :<br>\n              ${sp(50)} $${a}x^2${ecritureAlgebrique(b)}=${c}$`\n              correction = 'On isole $x^2$ dans le membre de gauche pour obtenir une équation du type $x^2=k$.<br> '\n              if (b > 0) {\n                correction += `$\\\\begin{aligned}\n              ${a}x^2${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n              ${a}x^2${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n              ${a}x^2&=${c - b}\\\\\\\\\n                         x^2&=${texFractionReduite(c - b, a)}\n             \\\\end{aligned}$`\n              } else {\n                correction += `$\\\\begin{aligned}\n             ${a}x^2${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n             ${a}x^2${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n             ${a}x^2&=${c - b}\\\\\\\\\n                        x^2&=${texFractionReduite(c - b, a)}\n            \\\\end{aligned}$`\n              }\n              if (k > 0) {\n                if (k === 1 || k === 4 || k === 9 || k === 16 || k === 25) {\n                  correction += `<br>$${texNombrec(k)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texNombrec(k)}}$ et $\\\\sqrt{${texNombrec(k)}}$. \n                <br>  Comme $-\\\\sqrt{${texNombrec(k)}}=-${extraireRacineCarree(k)[0]}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}$ alors \n                les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}$ et $${extraireRacineCarree(k)[0]}$.\n                <br> Ainsi, $S=\\\\left\\\\{-${extraireRacineCarree(k)[0]}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\right\\\\}$.`\n                } else {\n                  if (((c - b === 4) && a === 9) || ((c - b === 9) && a === 4) || ((c - b === 16) && a === 9) || ((c - b === 9) && a === 16)) {\n                    correction += `<br>$${texFractionReduite(c - b, a)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texFractionReduite(c - b, a)}}$ et $\\\\sqrt{${texFractionReduite(c - b, a)}}$. \n                  <br>  Comme $-\\\\sqrt{${texFractionReduite(c - b, a)}}=-\\\\dfrac{${extraireRacineCarree(c - b)[0]}}{${extraireRacineCarree(a)[0]}}$ et $\\\\sqrt{${texFractionReduite(c - b, a)}}=\\\\dfrac{${extraireRacineCarree(c - b)[0]}}{${extraireRacineCarree(a)[0]}}$ alors \n                  les solutions de l'équation peuvent s'écrire plus simplement : $-\\\\dfrac{${extraireRacineCarree(c - b)[0]}}{${extraireRacineCarree(a)[0]}}$ et $\\\\dfrac{${extraireRacineCarree(c - b)[0]}}{${extraireRacineCarree(a)[0]}}$.<br>\n                  Ainsi, $S=\\\\left\\\\{-\\\\dfrac{${extraireRacineCarree(c - b)[0]}}{${extraireRacineCarree(a)[0]}}${sp(1)};${sp(1)}\\\\dfrac{${extraireRacineCarree(c - b)[0]}}{${extraireRacineCarree(a)[0]}}\\\\right\\\\}$`\n                  } else {\n                    correction += `<br>$${texFractionReduite(c - b, a)}>0$, donc l'équation a deux solutions : \n                  $-\\\\sqrt{${texFractionReduite(c - b, a)}}$ et $\\\\sqrt{${texFractionReduite(c - b, a)}}$. <br>\n                  Ainsi, $S=\\\\left\\\\{-\\\\sqrt{${texFractionReduite(c - b, a)}}${sp(1)};${sp(1)}\\\\sqrt{${texFractionReduite(c - b, a)}}\\\\right\\\\}$`\n                  }\n                }\n              }\n\n              if ((c - b) / a === 0) {\n                correction += `L'équation a une solution : $0$.<br>\n              Ainsi, $S=\\\\{0\\\\}$. `\n              }\n              if ((c - b) / a < 0) {\n                correction += `<br>$${texFractionReduite(c - b, a)}<0$, donc l'équation n'a pas de solution. <br>\n              Ainsi, $S=\\\\emptyset$. `\n              }\n\n              break\n          }\n          break\n        case 'sqrt(x)=k':\n          switch (sousChoix[i]) {\n            case 0:// sqrt(x)=k\n              k = randint(-25, 25, 0)\n              enonce = `Résoudre dans $[0${sp(1)};${sp(1)}+\\\\infty[$ :<br>\n                            ${sp(50)} $\\\\sqrt{x}=${k}$`\n              correction = ''\n              if (this.correctionDetaillee) {\n                correction += `Pour tout réel $x$ positif ou nul, l'équation $\\\\sqrt{x}=k$ admet :<br>\n                $\\\\bullet~$ une solution  si $k\\\\geqslant 0$ : $k^2$ ;<br>\n                $\\\\bullet~$  aucune solution si $k<0$.<br>\n               `\n              }\n              if (k < 0) {\n                correction += `L'équation est de la forme $\\\\sqrt{x}=k$. Comme $k=${k}$ et $${k}<0$ alors l'équation n'admet pas de solution.<br>\n              Ainsi,   $S=\\\\emptyset$.\n              `\n              }\n              if (k > 0 || k === 0) {\n                correction += `$k=${k}$ et $${k}>0$ donc l'équation admet une solution : $${k}^2=${k ** 2}$.<br>\n               Ainsi $S=\\\\{${k ** 2}\\\\}$.\n              `\n              }\n              break\n\n            case 1:// sqrt(x)+b=c\n              b = randint(-10, 10, 0)\n              c = randint(-10, 10)\n              k = c - b\n              enonce = `Résoudre dans $[0${sp(1)};${sp(1)}+\\\\infty[$ :<br>\n                ${sp(50)} $\\\\sqrt{x}${ecritureAlgebrique(b)}=${c}$`\n\n              if (b > 0) {\n                correction = `On isole $\\\\sqrt{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\sqrt{x}=k$.<br>\n                $\\\\begin{aligned}\n                \\\\sqrt{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                \\\\sqrt{x}${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n                \\\\sqrt{x}&=${c - b}\n                               \\\\end{aligned}$<br>`\n              } else {\n                correction = `On isole $\\\\sqrt{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\sqrt{x}=k$.<br>\n                               $\\\\begin{aligned}\n                               \\\\sqrt{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                               \\\\sqrt{x}${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n                               \\\\sqrt{x}&=${c - b}\n                                              \\\\end{aligned}$<br>`\n              }\n              if (c - b < 0) {\n                correction += `L'équation est de la forme $\\\\sqrt{x}=k$ avec $k=${k}$. Comme $${k}<0$ alors l'équation n'admet pas de solution. <br>\nAinsi,   $S=\\\\emptyset$.<br>\n`\n              }\n              if (c - b > 0 || c - b === 0) {\n                correction += `L'équation est de la forme $\\\\sqrt{x}=k$ avec $k=${c - b}$. Comme $${c - b}\\\\geqslant 0$ alors l'équation admet une solution : $${k}^2=${k ** 2}$.<br>\n   Ainsi $S=\\\\{${k ** 2}\\\\}$.\n  `\n              }\n\n              break\n            case 2:// -sqrt(x)+b=c\n              b = randint(-10, 10, 0)\n              c = randint(-10, 10)\n              k = b - c\n              enonce = `Résoudre dans $[0${sp(1)};${sp(1)}+\\\\infty[$ :<br>\n                ${sp(50)} $-\\\\sqrt{x}${ecritureAlgebrique(b)}=${c}$`\n              if (b > 0) {\n                correction = `On isole $\\\\sqrt{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\sqrt{x}=k$.<br>\n                $\\\\begin{aligned}\n                -\\\\sqrt{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                -\\\\sqrt{x}${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n                -\\\\sqrt{x}&=${c - b}\\\\\\\\\n                \\\\sqrt{x}&=${b - c}\n                               \\\\end{aligned}$<br>`\n              } else {\n                correction = `On isole $\\\\sqrt{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\sqrt{x}=k$.<br>\n                               $\\\\begin{aligned}\n                               -\\\\sqrt{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                               -\\\\sqrt{x}${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n                               -\\\\sqrt{x}&=${c - b}\\\\\\\\\n                               \\\\sqrt{x}&=${b - c}\n                                              \\\\end{aligned}$<br>`\n              }\n              if (k < 0) {\n                correction += `L'équation est de la forme $\\\\sqrt{x}=k$ avec $k=${k}$. Comme $${k}<0$ alors l'équation n'admet pas de solution. <br>\nAinsi,   $S=\\\\emptyset$.<br>\n`\n              }\n              if (k > 0 || k === 0) {\n                correction += `L'équation est de la forme $\\\\sqrt{x}=k$ avec $k=${b - c}$. Comme $${b - c}\\\\geqslant0$ alors l'équation admet une solution : $${k}^2=${k ** 2}$.<br>\n   Ainsi $S=\\\\{${k ** 2}\\\\}$.\n  `\n              }\n\n              break\n            case 3:// a*sqrt(x)+b=c\n              a = randint(-10, 10, [0, -1, 1])\n              b = randint(-10, 10, 0)\n              c = randint(-10, 10)\n              k = (c - b) / a\n              enonce = `Résoudre dans $[0${sp(1)};${sp(1)}+\\\\infty[$ :<br>\n                ${sp(50)} $${a}\\\\sqrt{x}${ecritureAlgebrique(b)}=${c}$`\n              if (b > 0) {\n                correction = `On isole $\\\\sqrt{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\sqrt{x}=k$.<br>\n                $\\\\begin{aligned}\n                ${a}\\\\sqrt{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                ${a}\\\\sqrt{x}${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n                ${a}\\\\sqrt{x}&=${c - b}\\\\\\\\\n                \\\\sqrt{x}&=${texFractionReduite(c - b, a)}\n                               \\\\end{aligned}$<br>`\n              } else {\n                correction = `On isole $\\\\sqrt{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\sqrt{x}=k$.<br>\n                               $\\\\begin{aligned}\n                               ${a}\\\\sqrt{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                               ${a}\\\\sqrt{x}${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n                               ${a}\\\\sqrt{x}&=${c - b}\\\\\\\\\n                               \\\\sqrt{x}&=${texFractionReduite(c - b, a)}\n                                              \\\\end{aligned}$<br>`\n              }\n              if (k < 0) {\n                correction += `L'équation est de la forme $\\\\sqrt{x}=k$ avec $k=${texFractionReduite(c - b, a)}$. Comme $${texFractionReduite(c - b, a)}<0$ alors l'équation n'admet pas de solution. <br>\nAinsi,   $S=\\\\emptyset$.<br>\n`\n              }\n              if (k > 0 || k === 0) {\n                correction += `L'équation est de la forme $\\\\sqrt{x}=k$ avec $k=${texFractionReduite(c - b, a)}$. Comme $${texFractionReduite(c - b, a)}\\\\geqslant0$ alors l'équation admet une solution : $\\\\left(${texFractionReduite(c - b, a)}\\\\right)^2=${texFractionReduite((c - b) ** 2, a ** 2)}$.<br>\n   Ainsi $S=\\\\left\\\\{${texFractionReduite((c - b) ** 2, a ** 2)}\\\\right\\\\}$.\n  `\n              }\n\n              break\n          }\n          break\n        case '1/x=k':\n\n          switch (sousChoix[i]) { // sousChoix[i] = randint(0, 5)\n            case 0:\n              k = randint(-10, 10)\n\n              enonce = `Résoudre dans $\\\\mathbb{R}^*$ :<br>\n                ${sp(50)} $\\\\dfrac{1}{x}=${k}$`\n              correction = ''\n              if (this.correctionDetaillee) {\n                correction += `L'équation $\\\\dfrac{1}{x}=k$ admet :<br>\n                $\\\\bullet~$ si $k\\\\neq 0$, l'équation a une unique solution  : $\\\\dfrac{1}{k}$.<br>\n                $\\\\bullet~$ si $k= 0$, l'équation n'admet pas de solution.<br>`\n              }\n              correction += ''\n              if (k === 0) {\n                correction += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Comme $k=${k}$, alors l'équation n'admet pas de solution.<br>\n              Ainsi,   $S=\\\\emptyset$.\n              `\n              }\n              if (k !== 0) {\n                correction += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Comme $${k}\\\\neq 0$ alors l'équation admet une solution : \n                $${texFractionReduite(1, k)}$.<br>\n               Ainsi $S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$.\n              `\n              }\n\n              break\n\n            case 1:\n              b = randint(-10, 10, 0)\n              c = randint(-10, 10)\n              k = c - b\n              enonce = `Résoudre dans $\\\\mathbb{R}^*$ :<br>\n                   ${sp(50)} $\\\\dfrac{1}{x}${ecritureAlgebrique(b)}=${c}$`\n              correction = ''\n              if (b > 0) {\n                correction += `On isole $\\\\dfrac{1}{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\dfrac{1}{x}=k$.<br>\n                    $\\\\begin{aligned}\n                    \\\\dfrac{1}{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                    \\\\dfrac{1}{x}${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n                    \\\\dfrac{1}{x}&=${c - b}                  \n                                                \\\\end{aligned}$<br>`\n              } else {\n                correction += `On isole $\\\\dfrac{1}{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\dfrac{1}{x}=k$.<br>\n                                                $\\\\begin{aligned}\n                                                \\\\dfrac{1}{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                                                \\\\dfrac{1}{x}${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n                                                \\\\dfrac{1}{x}&=${c - b}                  \n                                                                            \\\\end{aligned}$<br>`\n              }\n              if (k === 0) {\n                correction += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Donc l'équation n'admet pas de solution.<br>\n                 Ainsi,   $S=\\\\emptyset$.\n                 `\n              }\n              if (k !== 0) {\n                correction += `$k=${k}$ et $${k}\\\\neq 0$, donc l'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Donc l'équation admet une solution : \n                   $${texFractionReduite(1, k)}$.<br>\n                  Ainsi $S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$.\n                 `\n              }\n              break\n            case 2:\n              a = randint(-10, 10, 0)\n              b = randint(-10, 10, 0)\n              k = b / a\n              enonce = `Résoudre dans $\\\\mathbb{R}^*$ :<br>\n                   ${sp(50)} $\\\\dfrac{${a}}{x}=${b}$`\n              correction = ''\n              correction += `On isole $\\\\dfrac{1}{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\dfrac{1}{x}=k$.<br>\n                    $\\\\begin{aligned}\n                    \\\\dfrac{${a}}{x}&=${b}\\\\\\\\\n                    \\\\dfrac{1}{x}&=${texFractionReduite(b, a)}${sp(20)}\\\\text{En divisant par } ${a} \\\\text{ dans chaque membre}\\\\\\\\             \n                                                \\\\end{aligned}$<br>`\n              if (k === 0) {\n                correction += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Donc l'équation n'admet pas de solution.<br>\n                 Ainsi,   $S=\\\\emptyset$.\n                 `\n              }\n              if (k !== 0) {\n                if (k % 1 === 0) {\n                  correction += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${texFractionReduite(b, a)}$. Donc l'équation admet une solution : \n                   $\\\\dfrac{1}{${texFractionReduite(b, a)}}$.<br>\n                  Ainsi $S=\\\\left\\\\{${texFractionReduite(a, b)}\\\\right\\\\}$.\n                 `\n                } else {\n                  correction += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${texFractionReduite(b, a)}$. Donc l'équation admet une solution : \n                 $\\\\dfrac{1}{${texFractionReduite(b, a)}}=${texFractionReduite(a, b)}$.<br>\n                Ainsi $S=\\\\left\\\\{${texFractionReduite(a, b)}\\\\right\\\\}$.\n               `\n                }\n              }\n              break\n            case 3:\n              a = randint(-10, 10, 0)\n              b = randint(-10, 10, 0)\n              c = randint(-10, 10, 0)\n              k = (c - b) / a\n              enonce = `Résoudre dans $\\\\mathbb{R}^*$ :<br>\n                   ${sp(50)} $\\\\dfrac{${a}}{x}${ecritureAlgebrique(b)}=${c}$`\n              correction = ''\n              if (b > 0) {\n                correction += `On isole $\\\\dfrac{1}{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\dfrac{1}{x}=k$.<br>\n                    $\\\\begin{aligned}\n                    \\\\dfrac{${a}}{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                    \\\\dfrac{${a}}{x}${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n                    \\\\dfrac{${a}}{x}&=${c - b}\\\\\\\\\n                    \\\\dfrac{1}{x}&=${texFractionReduite(c - b, a)}${sp(20)}\\\\text{En divisant par } ${a} \\\\text{ dans chaque membre}                           \n                                                \\\\end{aligned}$<br>`\n              } else {\n                correction += `On isole $\\\\dfrac{1}{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\dfrac{1}{x}=k$.<br>\n                                                $\\\\begin{aligned}\n                                                \\\\dfrac{${a}}{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                                                \\\\dfrac{${a}}{x}${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n                                                \\\\dfrac{${a}}{x}&=${c - b}\\\\\\\\\n                    \\\\dfrac{1}{x}&=${texFractionReduite(c - b, a)}${sp(20)}\\\\text{En divisant par } ${a} \\\\text{ dans chaque membre}\\\\\\\\                  \n                                                                            \\\\end{aligned}$<br>`\n              }\n              if (k === 0) {\n                correction += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${texFractionReduite(c - b, a)}$. Donc l'équation n'admet pas de solution.<br>\n                 Ainsi,   $S=\\\\emptyset$.\n                 `\n              }\n              if (k !== 0) {\n                if (k % 1 === 0) {\n                  correction += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${texFractionReduite(c - b, a)}$. Donc l'équation  admet une solution : \n                   $\\\\dfrac{1}{${texFractionReduite(c - b, a)}}$.<br>\n                  Ainsi $S=\\\\left\\\\{${texFractionReduite(a, c - b)}\\\\right\\\\}$.\n                 `\n                } else {\n                  correction += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${texFractionReduite(c - b, a)}$. Donc l'équation  admet une solution : \n                 $\\\\dfrac{1}{${texFractionReduite(c - b, a)}}=${texFractionReduite(a, c - b)}$.<br>\n                Ainsi $S=\\\\left\\\\{${texFractionReduite(a, c - b)}\\\\right\\\\}$.\n               `\n                }\n              }\n              break\n          }\n          break\n\n        case 'x^3=k':\n\n          switch (sousChoix[i]) { // sousChoix[i] = randint(0, 5)\n            case 0:\n              k1 = choice([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10])\n              k = calcul(k1 ** 3)\n\n              enonce = `Résoudre dans $\\\\mathbb{R}$ :<br>\n                ${sp(50)} $x^3=${k}$`\n              correction = ''\n              if (this.correctionDetaillee) {\n                correction += `Pour tout réel $k$, l'équation $x^3=k$ admet pour unique solution le nombre dont le cube est égal à $k$. <br>\n                On peut noter ce nombre : $\\\\sqrt[3]{k}$. <br>`\n              }\n              correction += `L'équation est de la forme $x^3=k$ avec $k=${k}$. <br>\n              Le nombre dont le cube est $${k}$ est $${k1}$ car $${ecritureParentheseSiNegatif(k1)}^3=${k}$.<br>\n              Ainsi,   $S=\\\\{${k1}\\\\}$.\n              `\n\n              break\n\n            case 1:\n              b = randint(-10, 10, 0)\n              k1 = choice([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10])\n              k = calcul(k1 ** 3)\n              c = calcul(k + b)\n              enonce = `Résoudre dans $\\\\mathbb{R}$ :<br>\n                   ${sp(50)} $x^3${ecritureAlgebrique(b)}=${c}$`\n              correction = ''\n              if (b > 0) {\n                correction += `On isole $x^3$ dans le membre de gauche pour obtenir une équation du type $x^3=k$.<br>\n                    $\\\\begin{aligned}\n                    x^3${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                    x^3${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n                    x^3&=${c - b}                  \n                                                \\\\end{aligned}$<br>`\n              } else {\n                correction += `On isole $x^3$ dans le membre de gauche pour obtenir une équation du type $x^3=k$.<br>\n                                                $\\\\begin{aligned}\n                                                x^3${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                                                x^3${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n                                                x^3&=${c - b}                  \n                                                                            \\\\end{aligned}$<br>`\n              }\n              correction += `L'équation est de la forme $x^3=k$ avec $k=${k}$. <br>\n              Le nombre dont le cube est $${k}$ est $${k1}$ car $${ecritureParentheseSiNegatif(k1)}^3=${k}$.<br>\n              Ainsi,   $S=\\\\{${k1}\\\\}$.\n              `\n\n              break\n            case 2:\n              a = randint(-10, 10, [0, -1, 1])\n              k1 = choice([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10])\n              k = calcul(k1 ** 3)\n              c = calcul(k * a)\n              enonce = `Résoudre dans $\\\\mathbb{R}$ :<br>\n                     ${sp(50)} $${a}x^3=${c}$`\n              correction = ''\n\n              correction += `On isole $x^3$ dans le membre de gauche pour obtenir une équation du type $x^3=k$.<br>\n                      $\\\\begin{aligned}\n                      ${a}x^3&=${c}\\\\\\\\\n                      x^3&=${texFractionReduite(c, a)}\\\\\\\\              \n                                                  \\\\end{aligned}$<br>`\n\n              correction += `L'équation est de la forme $x^3=k$ avec $k=${k}$. <br>\n              Le nombre dont le cube est $${k}$ est $${k1}$ car $${ecritureParentheseSiNegatif(k1)}^3=${k}$.<br>\n              Ainsi,   $S=\\\\{${k1}\\\\}$.\n              `\n              break\n            case 3:\n              a = randint(-10, 10, [0, -1, 1])\n              b = randint(-10, 10, [0, -1, 1])\n              k1 = choice([-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 10])\n              k = calcul(k1 ** 3)\n              c = calcul(k * a + b)\n              enonce = `Résoudre dans $\\\\mathbb{R}$ :<br>\n                     ${sp(50)} $${a}x^3${ecritureAlgebrique(b)}=${c}$`\n              correction = ''\n\n              if (b > 0) {\n                correction += `On isole $x^3$ dans le membre de gauche pour obtenir une équation du type $x^3=k$.<br>\n                      $\\\\begin{aligned}\n                      ${a}x^3${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                      ${a}x^3${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n                      ${a}x^3&=${texNombrec(c - b)}\\\\\\\\  \n                      x^3&=${texFractionReduite(c - b, a)}\\\\\\\\             \n                                                  \\\\end{aligned}$<br>`\n              } else {\n                correction += `On isole $x^3$ dans le membre de gauche pour obtenir une équation du type $x^3=k$.<br>\n                      $\\\\begin{aligned}\n                      ${a}x^3${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                      ${a}x^3${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n                      ${a}x^3&=${texNombrec(c - b)}\\\\\\\\  \n                      x^3&=${texFractionReduite(c - b, a)}\\\\\\\\             \n                                                  \\\\end{aligned}$<br>`\n              }\n\n              correction += `L'équation est de la forme $x^3=k$ avec $k=${k}$. <br>\n              Le nombre dont le cube est $${k}$ est $${k1}$ car $${ecritureParentheseSiNegatif(k1)}^3=${k}$.<br>\n              Ainsi,   $S=\\\\{${k1}\\\\}$.\n              `\n              break\n          }\n          break\n      }\n\n      texte = enonce\n      texteCorr = correction\n\n      if (this.questionJamaisPosee(i, listeTypeDeQuestions[i], x, y, sousChoix[i])) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Choix des questions',\n    5,\n    '1 : x^2=k\\n2 : sqrt{x}=k \\n3 : 1/x=k \\n4 : x^3=k \\n5 : Mélange'\n  ]\n  this.besoinFormulaire2Numerique = ['Choix des questions', 2, '1 : Equation directe\\n2 : Equation indirecte\\n3 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","dateDePublication","EquationsFonctionsRef","Exercice","this","sup","sup2","consigne","correctionDetailleeDisponible","correctionDetaillee","spacing","nbQuestions","nbQuestionsModifiable","nouvelleVersion","typesDeQuestionsDisponibles","autoCorrection","parseInt","listeQuestions","listeCorrections","ecritureParentheseSiNegatif","a","maximumFractionDigits","result","Intl","NumberFormat","format","replace","listeTypeDeQuestions","combinaisonListes","sousChoix","console","log","texte","texteCorr","x","y","b","c","k","k1","enonce","correction","i","cpt","randint","calcul","choice","sp","extraireRacineCarree","Math","sqrt","ecritureAlgebrique","miseEnEvidence","texNombrec","texFractionReduite","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}