{"version":3,"file":"js/68068.3fdafd74534349d3a17c.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenuSansNumero, randint, combinaisonListes, numAlpha, rangeMinMax, contraindreValeur, compteOccurences } from '../../modules/outils.js'\nimport choisirExpressionNumerique from '../5e/_choisirExpressionNumerique.js'\nexport const titre = 'Traduire des phrases en calculs et réciproquement'\n\n/**\n * Mettre en relation un calcul, une traduction en français, une expression, un résultat, pour les décliner dans différents exercices.\n * Exercice sur le vocabulaire : somme,différence, produit, quotient...\n * @author Jean-Claude Lhote\n * Référence 6C13\n * Relecture : Novembre 2021 par EE\n */\nexport default function VocabulaireEtOperations () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 4\n  this.sup2 = false\n  this.spacing = 2\n\n  this.nouvelleVersion = function () {\n    let decimal\n    let expf, expn, expc, resultats\n    let typesDeQuestionsDisponibles = []\n    if (!this.sup) { // Si aucune liste n'est saisie\n      typesDeQuestionsDisponibles = rangeMinMax(1, 3)\n    } else {\n      if (typeof (this.sup) === 'number') { // Si c'est un nombre, c'est que le nombre a été saisi dans la barre d'adresses\n        typesDeQuestionsDisponibles[0] = contraindreValeur(1, 4, this.sup, 4)\n      } else {\n        typesDeQuestionsDisponibles = this.sup.split('-')// Sinon on créé un tableau à partir des valeurs séparées par des -\n        for (let i = 0; i < typesDeQuestionsDisponibles.length; i++) { // on a un tableau avec des strings : ['1', '5', '2','toto','45']\n          typesDeQuestionsDisponibles[i] = contraindreValeur(1, 4, parseInt(typesDeQuestionsDisponibles[i]), 4) // parseInt en fait un tableau d'entiers\n        }\n      }\n    }\n    if (compteOccurences(typesDeQuestionsDisponibles, 4) > 0) typesDeQuestionsDisponibles = rangeMinMax(1, 3) // Teste si l'utilisateur a choisi tout\n\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    )\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (this.sup2) decimal = 10 ** randint(1, 2)\n    else decimal = 1\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      resultats = choisirExpressionNumerique(1, decimal)\n      expf = resultats[0]\n      expn = resultats[1]\n      expc = resultats[2]\n      texte = ''\n      texteCorr = ''\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte +=\n            numAlpha(i) +\n            'Traduire la phrase par un calcul (il n’est pas demandé d’effectuer ce calcul) : '\n          expf = 'l' + expf.substring(1)\n          texte += `${expf}.`\n          expf = 'L' + expf.substring(1)\n          texteCorr += numAlpha(i) + `${expf} s'écrit ${expn}.`\n          break\n        case 2:\n          if (expn.indexOf('ou') > 0) { expn = expn.substring(0, expn.indexOf('ou')) } // on supprime la deuxième expression fractionnaire\n          texte +=\n            numAlpha(i) + 'Traduire le calcul par une phrase en français : '\n          texte += `${expn}.`\n          expf = 'l' + expf.substring(1)\n          texteCorr += numAlpha(i) + `${expn} est ${expf}.`\n          break\n        case 3:\n          texte +=\n            numAlpha(i) +\n            'Traduire la phrase par un calcul et effectuer ce calcul : '\n          expf = 'l' + expf.substring(1)\n          texte += `${expf}.`\n          expf = 'L' + expf.substring(1)\n          texteCorr += numAlpha(i) + `${expf} s'écrit ${expn}.<br>`\n          texteCorr += `${expc}`\n          break\n      }\n      texte += this.nbQuestions - 1 === i ? '<br>' : ''\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Type de questions',\n    4,\n    ' 1 : Phrase -> Calcul\\n 2 : Calcul -> Phrase\\n 3 : Phrase -> Calcul + résultat\\n 4 : Mélange'\n  ]\n  this.besoinFormulaire2CaseACocher = ['Décimaux', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","VocabulaireEtOperations","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","sup2","spacing","nouvelleVersion","decimal","expf","expn","expc","resultats","typesDeQuestionsDisponibles","contraindreValeur","split","i","length","parseInt","rangeMinMax","compteOccurences","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","randint","texte","texteCorr","cpt","choisirExpressionNumerique","numAlpha","substring","indexOf","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}