{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C30-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","interactifReady","interactifType","amcType","titre","ProduitDeDecimauxAPartirProduitConnu","typesDeQuestionsDisponibles","Exercice","this","beta","sup","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","reponse","shuffle","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","autoCorrection","situations","d1","randint","u1","d2","u2","p1","p2","enonces","push","enonce","calcul","texNombre","question","correction","texNombrec","interactif","ajouteChampTexte","inline","setReponse","propositions","statut","valeur","param","digits","nombreDeChiffresDansLaPartieEntiere","nombreDeChiffresDansLaPartieDecimale","decimals","signe","exposantNbChiffres","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"4QAIO,MAAMA,GAAW,EACXC,GAAkB,EAClBC,EAAiB,YAEjBC,EAAU,SACVC,EAAQ,8EAQN,SAASC,IAkBtB,IAAIC,EAjBJC,eAAcC,MACdA,KAAKC,MAAO,EACZD,KAAKE,IAAM,EACPF,KAAKC,KACPD,KAAKG,YAAc,EAKrBH,KAAKJ,MAAQA,EACbI,KAAKI,SAAW,GAEhBJ,KAAKK,OAAS,EACdL,KAAKM,WAAa,EAClBC,YAAiBP,KAAKQ,QAAU,EAAIR,KAAKQ,QAAU,EACnDD,YAAiBP,KAAKS,YAAc,IAAMT,KAAKS,YAAc,IAI7DT,KAAKU,gBAAkB,WAUrB,IAAIC,EARFb,EADEE,KAAKC,KACuB,CAAC,EAAG,EAAG,IAGPW,SAAQ,CAAC,EAAG,EAAG,IAG/CZ,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GAGxB,MAAMC,GAAuBC,SAAkClB,EAA6BE,KAAKG,aAEjG,IAAK,IAAWc,EAAOC,EAAdC,EAAI,EAAqBC,EAAM,EAAGD,EAAInB,KAAKG,aAAeiB,EAAM,IAAK,CAE5EpB,KAAKqB,eAAeF,GAAK,GACzB,MAAMG,EAAa,CACjB,CACEC,IAAIC,SAAQ,EAAG,GACfC,IAAID,SAAQ,EAAG,GACfE,IAAIF,SAAQ,EAAG,GACfG,IAAIH,SAAQ,EAAG,GACfI,IAAIJ,UAAS,EAAG,EAAG,CAAC,IACpBK,IAAIL,UAAS,EAAG,EAAG,CAAC,MAGlBM,EAAU,GAuChB,OArCAA,EAAQC,KAAK,CACXC,OAAS,+BACUC,SAA0B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,eAAcQ,SAA0B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,UAASO,UAAUD,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,mCACzNO,UAAUD,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,IAAO,IAAMH,EAAW,GAAGM,gBAAgBK,SAA0B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,sBAEhKQ,SAAU,GACVC,WAAa,iBACRF,UAAUD,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,IAAO,IAAMH,EAAW,GAAGM,gBAAgBK,SAA0B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,UAASM,SAA0B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,eAAcY,SAAW,IAAMf,EAAW,GAAGM,gBAAeK,SAA0B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,UAASM,SAA0B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,eAAcQ,SAA0B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,eAAcU,SAAW,IAAMf,EAAW,GAAGM,WAAUM,UAAUD,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,iBAAgBU,SAAW,IAAMf,EAAW,GAAGM,UAASS,UAAWJ,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,MAAOM,SAAO,IAAMX,EAAW,GAAGM,oBAEjwBjB,SAASsB,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,IAAM,IAAML,EAAW,GAAGM,MAEhIE,EAAQC,KAAK,CACXC,OAAS,6BACQC,SAA0B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,eAAcQ,SAA0B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,UAASO,UAAUD,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,iCACzNO,UAAUD,SAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,gBAAgBS,UAAUD,UAA2B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,IAAO,IAAML,EAAW,GAAGO,uBAEzKM,SAAU,GACVC,WAAa,iBACRF,UAAUD,SAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,gBAAgBS,UAAUD,UAA2B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,IAAO,IAAML,EAAW,GAAGO,WAAWI,SAA0B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,eAAcQ,SAA0B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,eAAcU,SAAW,IAAMf,EAAW,GAAGO,UAASK,UAAUD,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,iBAAgBU,SAAW,IAAMf,EAAW,GAAGO,UAASQ,UAAWJ,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,MAAOM,SAAO,IAAMX,EAAW,GAAGO,oBAE9mBlB,SAASsB,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,IAAM,IAAML,EAAW,GAAGO,MAEhIC,EAAQC,KAAK,CACXC,OAAS,6BACQC,SAA0B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,eAAcQ,SAA0B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,UAASO,UAAUD,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,iCACzNO,UAAUD,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,IAAO,IAAMH,EAAW,GAAGM,gBAAgBM,UAAUD,UAA2B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,IAAO,IAAML,EAAW,GAAGO,qBAEpMM,SAAU,GACVC,WAAa,iBACRF,UAAUD,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,IAAO,IAAMH,EAAW,GAAGM,gBAAgBM,UAAUD,UAA2B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,IAAO,IAAML,EAAW,GAAGO,WAAWI,SAA0B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,eAAcY,SAAW,IAAMf,EAAW,GAAGM,gBAAeK,SAA0B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,eAAcU,SAAW,IAAMf,EAAW,GAAGO,UAASI,SAA0B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,eAAcQ,SAA0B,GAAnBX,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,eAAcU,SAAW,IAAMf,EAAW,GAAGM,eAAcS,SAAW,IAAMf,EAAW,GAAGO,UAASK,UAAUD,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,iBAAgBU,SAAW,IAAMf,EAAW,GAAGM,eAAcS,SAAW,IAAMf,EAAW,GAAGO,UAASQ,UAAWJ,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,MAAOM,SAAO,IAAMX,EAAW,GAAGM,KAAMK,SAAO,IAAMX,EAAW,GAAGO,oBAEh9BlB,SAASsB,UAA2B,GAAnBX,EAAW,GAAGC,GAAUD,EAAW,GAAGG,KAA0B,GAAnBH,EAAW,GAAGI,GAAUJ,EAAW,GAAGK,IAAM,IAAML,EAAW,GAAGM,GAAK,IAAMN,EAAW,GAAGO,MAMjJd,EAAqBI,IAC3B,KAAK,EACHF,EAAS,GAAEa,EAAQ,GAAGE,SAClBhC,KAAKC,MACPgB,GAAS,OACTA,GAAU,iCAAgCa,EAAQ,GAAGM,aACrDnB,GAAS,gBACTC,EAAY,IAEZA,EAAa,GAAEY,EAAQ,GAAGM,aAE5BzB,EAAUmB,EAAQ,GAAGnB,QACrB,MACF,KAAK,EACHM,EAAS,GAAEa,EAAQ,GAAGE,SAClBhC,KAAKC,MACPgB,GAAS,OACTA,GAAU,iCAAgCa,EAAQ,GAAGM,aACrDlB,EAAY,IAEZA,EAAa,GAAEY,EAAQ,GAAGM,aAE5BzB,EAAUmB,EAAQ,GAAGnB,QACrB,MACF,KAAK,EACHM,EAAS,GAAEa,EAAQ,GAAGE,SAClBhC,KAAKC,MACPgB,GAAS,OACTA,GAAU,iCAAgCa,EAAQ,GAAGM,aACrDlB,EAAY,IAEZA,EAAa,GAAEY,EAAQ,GAAGM,aAE5BzB,EAAUmB,EAAQ,GAAGnB,QAGrBJ,aAAkBP,KAAKsC,aAAYrB,IAASsB,QAAiBvC,KAAMmB,EAAG,CAAEqB,QAAQ,MACpFC,QAAWzC,KAAMmB,EAAGR,GAChBJ,aACFP,KAAKqB,eAAeF,GAAGa,OAASf,EAChCjB,KAAKqB,eAAeF,GAAGuB,aAAe,CAAC,CAAEzB,MAAOC,EAAWyB,OAAQ,KACnE3C,KAAKqB,eAAeF,GAAGR,QAAU,CAAEiC,OAAQjC,EAASkC,MAAO,CAAEC,QAAQC,SAAoCpC,IAAWqC,SAAqCrC,GAAW,EAAGsC,UAAUD,SAAqCrC,GAAW,EAAGuC,OAAO,EAAOC,mBAAoB,MAE5N,IAAxCnD,KAAKa,eAAeuC,QAAQnC,KAC9BjB,KAAKa,eAAekB,KAAKd,GACzBjB,KAAKc,iBAAiBiB,KAAKb,GAC3BC,KAEFC,KAEFiC,SAAwBrD,S,6BCnJb,SAASD,IAEtBC,KAAKJ,MAAQ,GACbI,KAAKI,SAAW,GAChBJ,KAAKsD,mBAAqB,GAC1BtD,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GACxBd,KAAKuD,aAAe,GACpBvD,KAAKwD,QAAU,GACfxD,KAAKyD,kBAAoB,GACzBzD,KAAKG,YAAc,GACnBH,KAAKK,OAAS,EACdL,KAAKM,WAAa,EAClBN,KAAKQ,QAAU,EACfR,KAAKS,YAAc,EACnBT,KAAK0D,QAAS,EAEd1D,KAAK2D,2BAA4B,EACjC3D,KAAK4D,uBAAwB,EAC7B5D,KAAK6D,6BAA8B,EACnC7D,KAAK8D,4BAA6B,EAClC9D,KAAK+D,wBAAyB,EAC9B/D,KAAKgE,8BAA+B,EACpChE,KAAKiE,4BAA6B,EAClCjE,KAAKkE,wBAAyB,EAC9BlE,KAAKmE,8BAA+B,EACpCnE,KAAKoE,oBAAqB,EAC1BpE,KAAKqE,uBAAwB,EAC7BrE,KAAKsE,kBAAmB,EACxBtE,KAAKuE,sBAAuB,EAC5BvE,KAAKwE,mBAAoB,EACzBxE,KAAKyE,uBAAwB,EAC7BzE,KAAK0E,+BAAgC,EACrC1E,KAAK2E,qBAAsB,EAC3B3E,KAAK4E,MAAQ,GACb5E,KAAK6E,YAAa,EAClB7E,KAAK8E,gBAAkB,GAMvB9E,KAAK+E,mBAAoB,EACzB/E,KAAKsC,YAAa,EAClBtC,KAAKgF,uBAAwB,EAC7BhF,KAAKiF,KAAM,EACXjF,KAAKkF,eAAgB,EACrBlF,KAAKmF,SAAU,EACfnF,KAAKqB,eAAiB,GACtBrB,KAAKoF,sBAAwB,GAC7BpF,KAAKqF,cAAe,EACpBrF,KAAKU,gBAAkB,SAAU4E,KACjCtF,KAAKuF,cAAgB,G","file":"js/3922.2cf68979c9c4d5b78130.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, shuffle, combinaisonListesSansChangerOrdre, calcul, texNombrec, texNombre, nombreDeChiffresDansLaPartieEntiere, nombreDeChiffresDansLaPartieDecimale } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const interactifReady = true\nexport const interactifType = 'numerique'\n\nexport const amcType = 'AMCNum' // Question numérique\nexport const titre = 'Calculer le produit de deux décimaux connaissant le produit de deux entiers'\n\n/**\n * * Calculer le produit de deux décimaux à partir d'un produit de deux entiers\n * * 6C30-2\n * @author Sébastien Lozano\n */\n\nexport default function ProduitDeDecimauxAPartirProduitConnu () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.beta = false\n  this.sup = 1\n  if (this.beta) {\n    this.nbQuestions = 3\n  } else {\n    this.nbQuestions = 3\n  };\n\n  this.titre = titre\n  this.consigne = ''\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  context.isHtml ? this.spacing = 3 : this.spacing = 2\n  context.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    if (this.beta) {\n      typesDeQuestionsDisponibles = [0, 1, 2]\n    } else {\n      // typesDeQuestionsDisponibles = shuffle([choice([1,3]),choice([2,4]),0]);\n      typesDeQuestionsDisponibles = shuffle([0, 1, 2])\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let reponse\n    // let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // pour les situations, autant de situations que de cas dans le switch !\n      this.autoCorrection[i] = {}\n      const situations = [\n        { // case 0 --> (d1u1xp1)xd2u2\n          d1: randint(1, 9),\n          u1: randint(1, 9),\n          d2: randint(1, 9),\n          u2: randint(1, 9),\n          p1: randint(-3, 3, [0]),\n          p2: randint(-3, 3, [0])\n        }\n      ]\n      const enonces = []\n      // for (let k=0;k<3;k++) {\n      enonces.push({\n        enonce: `\n            Sachant que $${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)} = ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}$,\n            calculer $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (10 ** situations[0].p1)))}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)}$.\n            `,\n        question: '',\n        correction: `\n          $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (10 ** situations[0].p1)))}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)} = ${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${texNombrec(10 ** situations[0].p1)} \\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)} = ${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)}\\\\times ${texNombrec(10 ** situations[0].p1)} =  ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}\\\\times ${texNombrec(10 ** situations[0].p1)} = ${texNombrec(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)) * calcul(10 ** situations[0].p1))}$\n          `,\n        reponse: calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2) * 10 ** situations[0].p1)\n      })\n      enonces.push({\n        enonce: `\n          Sachant que $${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)} = ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}$,\n          calculer $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1)))}\\\\times ${texNombre(calcul((situations[0].d2 * 10 + situations[0].u2) * (10 ** situations[0].p2)))}$.\n            `,\n        question: '',\n        correction: `\n          $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1)))}\\\\times ${texNombre(calcul((situations[0].d2 * 10 + situations[0].u2) * (10 ** situations[0].p2)))} = ${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)}\\\\times ${texNombrec(10 ** situations[0].p2)} = ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}\\\\times ${texNombrec(10 ** situations[0].p2)} = ${texNombrec(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)) * calcul(10 ** situations[0].p2))}$\n          `,\n        reponse: calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2) * 10 ** situations[0].p2)\n      })\n      enonces.push({\n        enonce: `\n          Sachant que $${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)} = ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}$,\n          calculer $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (10 ** situations[0].p1)))}\\\\times ${texNombre(calcul((situations[0].d2 * 10 + situations[0].u2) * (10 ** situations[0].p2)))}$.\n          `,\n        question: '',\n        correction: `\n          $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (10 ** situations[0].p1)))}\\\\times ${texNombre(calcul((situations[0].d2 * 10 + situations[0].u2) * (10 ** situations[0].p2)))} = ${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${texNombrec(10 ** situations[0].p1)} \\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)}\\\\times ${texNombrec(10 ** situations[0].p2)} = ${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)}\\\\times ${texNombrec(10 ** situations[0].p1)}\\\\times ${texNombrec(10 ** situations[0].p2)} = ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}\\\\times ${texNombrec(10 ** situations[0].p1)}\\\\times ${texNombrec(10 ** situations[0].p2)} = ${texNombrec(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)) * calcul(10 ** situations[0].p1) * calcul(10 ** situations[0].p2))}$\n          `,\n        reponse: calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2) * 10 ** situations[0].p1 * 10 ** situations[0].p2)\n      })\n\n      // };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          reponse = enonces[0].reponse\n          break\n        case 1:\n          texte = `${enonces[1].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[1].correction}`\n          };\n          reponse = enonces[1].reponse\n          break\n        case 2:\n          texte = `${enonces[2].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[2].correction}`\n          };\n          reponse = enonces[2].reponse\n          break\n      };\n      if (context.isHtml && this.interactif) texte += ajouteChampTexte(this, i, { inline: false })\n      setReponse(this, i, reponse)\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte\n        this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: '' }]\n        this.autoCorrection[i].reponse = { valeur: reponse, param: { digits: nombreDeChiffresDansLaPartieEntiere(reponse) + nombreDeChiffresDansLaPartieDecimale(reponse) + 2, decimals: nombreDeChiffresDansLaPartieDecimale(reponse) + 1, signe: false, exposantNbChiffres: 0 } }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n};\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}