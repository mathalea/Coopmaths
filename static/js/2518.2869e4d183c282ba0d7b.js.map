{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C22-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Exercice_trouver_l_inverse","Exercice","this","sup","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","nouvelleVersion","type_de_questions_disponibles","listeQuestions","listeCorrections","couples_d_inverses","liste_entiers","liste_decimaux","liste_fractions","parseInt","listeTypeDeQuestions","combinaisonListes","nombre_choisi","nombre_inverse","nombre_inverse_num","nombre_inverse_den","texte","texteCorr","type_de_questions","i","cpt","choice","texNombrec","texFraction","pgcd","texFractionReduite","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/2518.2869e4d183c282ba0d7b.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,choice,combinaisonListes,pgcd,texFractionReduite,texNombrec,texFraction} from '../../modules/outils.js'\nexport const titre = 'Trouver l’inverse d’un nombre'\n\n/**\n * * Calcul de l'inverse d'un nombre.\n *\n * Paramétrages possibles :\n * * 1 : inverse d'un nombre entier\n * * 2 : inverse d'une fraction\n * * 3 : inverse d'un nombre décimal\n * * 4 : mélange des trois autres niveaux\n * @auteur Jean-Claude Lhote\n * 4C22-1\n */\nexport default function Exercice_trouver_l_inverse() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.sup = 1; // Avec ou sans relatifs\n  this.titre = titre;\n  this.consigne =\n    \"Calculer l'inverse et donner la réponse sous forme décimale ou de fraction simplifiée quand c'est impossible\";\n  this.spacing = 2;\n  this.spacingCorr = 2;\n  this.nbQuestions = 5;\n  this.nbColsCorr = 1;\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let type_de_questions_disponibles;\n    let liste_entiers = [\n      [1, 1],\n      [2, 0.5],\n      [3, 0],\n      [4, 0.25],\n      [5, 0.2],\n      [6, 0],\n      [7, 0],\n      [8, 0.125],\n      [9, 0],\n      [10, 0.1],\n      [11, 0],\n      [12, 0],\n      [13, 0],\n      [14, 0],\n      [15, 0],\n      [20, 0.05],\n      [50, 0.02],\n      [100, 0.01],\n    ];\n    // [n,0] si l'inverse de n n'est pas décimal [n,1/n] si il est décimal.\n    let liste_decimaux = [\n      [0.1, 10, 1],\n      [0.2, 5, 1],\n      [0.3, 10, 3],\n      [0.4, 10, 4],\n      [0.5, 2, 1],\n      [0.6, 10, 6],\n      [0.75, 100, 75],\n      [0.8, 10, 8],\n      [1.2, 10, 12],\n      [1.5, 10, 15],\n      [2.5, 10, 25],\n      [3.5, 10, 35],\n      [4.8, 10, 48],\n      [7.5, 10, 75],\n    ];\n    // [x,n,d] n/d = inverse de x fraction à réduire si besoin ... d=1 si l'inverse de x est entier.\n    let liste_fractions = [\n      [3, 4, false],\n      [5, 2, true],\n      [4, 5, true],\n      [5, 7, true],\n      [7, 3, false],\n      [16, 6, true],\n      [12, 18, true],\n      [9, 4, false],\n      [4, 6, true],\n      [8, 7, true],\n      [5, 9, true],\n      [9, 7, false],\n      [13, 6, false],\n      [7, 2, false],\n    ];\n    // [n,d,bol] inverse d/n à simplifier si besoin. si bol = true, alors d/n est décimal.\n    let couples_d_inverses;\n    if (this.sup == 4) {\n      type_de_questions_disponibles = [1, 1, 2, 2, 3];\n    } // nombre entier,fraction,décimal]\n    else {\n      type_de_questions_disponibles = [parseInt(this.sup)];\n    }\n    let listeTypeDeQuestions = combinaisonListes(\n      type_de_questions_disponibles,\n      this.nbQuestions\n    );\n    for (let i = 0,\n      nombre_choisi,\n      nombre_inverse,\n      nombre_inverse_num,\n      nombre_inverse_den,\n      texte,\n      texteCorr,\n      type_de_questions,\n      cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      type_de_questions = listeTypeDeQuestions[i];\n      switch (type_de_questions) {\n        case 1: //inverse d'entier\n          couples_d_inverses = choice(liste_entiers);\n          nombre_choisi = couples_d_inverses[0];\n          nombre_inverse = couples_d_inverses[1];\n          if (choice([true, false])) {\n            // nombre entier positif\n            if (nombre_inverse != 0) {\n              //inverse décimal\n              texteCorr = `L\\'inverse de $${nombre_choisi}$ est $${texNombrec(\n                nombre_inverse\n              )} \\\\:$ car $\\\\: ${nombre_choisi}   \\\\times   ${texNombrec(\n                nombre_inverse\n              )} =  1$.`;\n            } else {\n              //inverse non décimal\n              texteCorr = `L\\'inverse de $${nombre_choisi}$ est $${texFraction(\n                1,\n                nombre_choisi\n              )} \\\\:$ car $\\\\: ${nombre_choisi}   \\\\times   ${texFraction(\n                1,\n                nombre_choisi\n              )} =  1$.`;\n            }\n          } else {\n            //nombre entier négatif\n            nombre_choisi = -nombre_choisi;\n            if (nombre_inverse != 0) {\n              //inverse décimal\n              texteCorr = `L'inverse de $${nombre_choisi}$ est $${texNombrec(\n                -nombre_inverse\n              )} \\\\:$`;\n              texteCorr += ` car $\\\\: ${nombre_choisi}  \\\\times  \\\\left(-${texNombrec(\n                nombre_inverse\n              )}\\\\right)  =  1$.`;\n            } else {\n              //inverse non décimal\n              texteCorr = `L\\'inverse de $${nombre_choisi}$ est $-${texFraction(\n                1,\n                -nombre_choisi\n              )} \\\\:$ car $\\\\: ${nombre_choisi}   \\\\times   \\\\left(-${texFraction(\n                1,\n                -nombre_choisi\n              )}\\\\right) =  1$.`;\n            }\n          }\n          texte = `Quel est l'inverse de $${texNombrec(nombre_choisi)}$ ?`;\n          break;\n        case 2:\n          couples_d_inverses = choice(liste_decimaux);\n          nombre_choisi = couples_d_inverses[0];\n          nombre_inverse_num = couples_d_inverses[1];\n          nombre_inverse_den = couples_d_inverses[2];\n          if (choice([true, false])) {\n            // nombre positif\n            if (pgcd(nombre_inverse_num, nombre_inverse_den) == 1) {\n              //non simplifiable après inversion\n              texteCorr = `Comme $${texNombrec(nombre_choisi)}=${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}$, l'inverse de $${texNombrec(\n                nombre_choisi\n              )}$ est $${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )} \\\\:$ car $\\\\: ${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}   \\\\times   ${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )} =  1$.`;\n            } else {\n              // à simplifier après inversion\n              texteCorr = `Comme $${texNombrec(nombre_choisi)}=${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}=${texFractionReduite(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}$, l'inverse de $${texNombrec(\n                nombre_choisi\n              )}$ est $${texFractionReduite(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )} \\\\:$ car $\\\\: ${texFractionReduite(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}  \\\\times   ${texFractionReduite(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )} =  1$.`;\n            }\n          } else {\n            // nombre négatif\n            nombre_choisi = -nombre_choisi;\n            if (pgcd(nombre_inverse_num, nombre_inverse_den) == 1) {\n              //non simplifiable après inversion\n              texteCorr = `L'inverse de $${texNombrec(\n                nombre_choisi\n              )}$ est $-${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )} \\\\:$ car $\\\\: ${texNombrec(\n                nombre_choisi\n              )}   \\\\times   \\\\left(-${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )}\\\\right) =  1$.`;\n              texteCorr = `Comme $${texNombrec(\n                nombre_choisi\n              )}=-${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}$, l'inverse de $${texNombrec(\n                nombre_choisi\n              )}$ est $-${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )} \\\\:$ car $\\\\: -${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}   \\\\times  \\\\left(- ${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )}\\\\right) =  1$.`;\n            } else {\n              // à simplifier après inversion\n              texteCorr = `Comme $${texNombrec(\n                nombre_choisi\n              )}=-${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}=-${texFractionReduite(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}$, l'inverse de $${texNombrec(\n                nombre_choisi\n              )}$ est $-${texFractionReduite(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )} \\\\:$ car $\\\\: -${texFractionReduite(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}  \\\\times  \\\\left(- ${texFractionReduite(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )} \\\\right)=  1$.`;\n            }\n          }\n          texte = `Quel est l'inverse de $${texNombrec(nombre_choisi)}$ ?`;\n          break;\n        case 3:\n          couples_d_inverses = choice(liste_fractions);\n          nombre_inverse_num = couples_d_inverses[0];\n          nombre_inverse_den = couples_d_inverses[1];\n          if (choice([true, false])) {\n            // fraction positive\n            if (couples_d_inverses[2] == true) {\n              // inverse décimal\n              texteCorr = `L'inverse de $${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )}$ est $${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}=${texNombrec(\n                nombre_inverse_den / nombre_inverse_num\n              )} \\\\:$ car $\\\\: ${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )}   \\\\times   ${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )} =  1$.`;\n            } else {\n              // inverse non décimal\n              texteCorr = `L'inverse de $${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )}$ est $${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )} \\\\:$ car $\\\\: ${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )}   \\\\times   ${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )} =  1$.`;\n            }\n            texte = `Quel est l'inverse de $${texFraction(\n              nombre_inverse_num,\n              nombre_inverse_den\n            )}$ ?`;\n          } else {\n            // fraction négative\n            if (couples_d_inverses[2] == true) {\n              // inverse décimal\n              texteCorr = `L'inverse de $-${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )}$ est $-${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}=-${texNombrec(\n                nombre_inverse_den / nombre_inverse_num\n              )} \\\\:$ car $\\\\: -${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )}   \\\\times  \\\\left(- ${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )}\\\\right) =  1$.`;\n            } else {\n              // inverse non décimal\n              texteCorr = `L'inverse de $-${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )}$ est $-${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )} \\\\:$ car $\\\\: -${texFraction(\n                nombre_inverse_num,\n                nombre_inverse_den\n              )}   \\\\times  \\\\left(- ${texFraction(\n                nombre_inverse_den,\n                nombre_inverse_num\n              )} \\\\right)=  1$.`;\n            }\n            texte = `Quel est l'inverse de $-${texFraction(\n              nombre_inverse_num,\n              nombre_inverse_den\n            )}$ ?`;\n          }\n\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this); //Espacement de 2 em entre chaque questions.\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    4,\n    \"1 : Nombres entiers\\n 2 : Fractions\\n 3 : Nombres décimaux\\n 4 : Mélange des 3 niveaux\",\n  ];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}