/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_3e_3A11-3_js"],{

/***/ "./src/js/exercices/3e/3A11-3.js":
/*!***************************************!*\
  !*** ./src/js/exercices/3e/3A11-3.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Lister_Diviseurs_Par_Decomposition_facteurs_premiers)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst titre = 'Compter/lister les diviseurs d’un entier à partir de sa décomposition en facteurs premiers.'\n\n/**\n * 3A11-3 - Lister/Compter les diviseurs d'un entier à partir de sa decomposition en facteurs premiers\n * @author Sébastien Lozano\n */\nfunction Lister_Diviseurs_Par_Decomposition_facteurs_premiers() {\n\t'use strict';\n\t_ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\tthis.sup = 1;\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `Sans la calculatrice, compter/lister les diviseurs d'un entier à partir de sa décomposition en facteurs premiers.`;\n\t//this.consigne += `<br>`;\n\tsortie_html ? this.spacing = 2 : this.spacing = 1;\n\tsortie_html ? this.spacing_corr = 2 : this.spacing_corr = 1;\n\tthis.nb_questions = 2;\n\t//this.correction_detaillee_disponible = true;\n\tthis.nb_cols = 1;\n\tthis.nb_cols_corr = 1;\n\tthis.sup = 1;\n\n\tthis.nouvelle_version = function (numero_de_l_exercice) {\n\t\tlet type_de_questions;\n\t\tif (sortie_html) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.bouton_aide = '';\n\t\t\tthis.bouton_aide = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.modal_pdf)(numero_de_l_exercice, \"assets/pdf/FicheArithmetique-3A11.pdf\", \"Aide mémoire sur les nombres premiers (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\tthis.bouton_aide += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.modal_video)('conteMathsNombresPremiers', '/videos/LesNombresPremiers.mp4', 'Petit conte mathématique - Les Nombres Premiers', 'Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.liste_questions = []; // Liste de questions\n\t\tthis.liste_corrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenu_correction = ''; // Liste de questions corrigées\n\n\t\tlet type_de_questions_disponibles = [1];\n\t\t//let type_de_questions_disponibles = [1];\n\t\tlet liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(type_de_questions_disponibles, this.nb_questions);\n\n\t\tfor (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n\t\t\ttype_de_questions = liste_type_de_questions[i];\n\n\n\t\t\tswitch (type_de_questions) {\n\t\t\t\tcase 1: // lister/compter les diviseurs d'un entier à partir de sa décomposition en facteurs premiers\t\t\t\n\t\t\t\t\ttexte = `Lister/compter les diviseurs d'un entier à partir de sa décomposition en facteurs premiers`;\n\t\t\t\t\t//let premiers_dispos = premiers_entre_bornes(2,11);\n\t\t\t\t\t// on fixe le nombre de facteurs premier à 3\n\t\t\t\t\tlet nb_de_premiers_b = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 3);\n\t\t\t\t\t// on fixe la limite pour le choix des premiers\n\t\t\t\t\tlet max_premier_b = 11;\n\t\t\t\t\t// on fixe le rang max pour le choix des premiers\n\t\t\t\t\tlet rg_max_b = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(max_premier_b).length - 1;\n\t\t\t\t\t// on choisit les rangs pour les nombres premiers\n\t\t\t\t\tlet tab_rangs_b = [];\n\t\t\t\t\tlet tab_rangs_exclus_b = [];\n\t\t\t\t\tfor (let k = 0; k < (nb_de_premiers_b); k++) {\n\t\t\t\t\t\tfor (let m = 0; m < k; m++) {\n\t\t\t\t\t\t\ttab_rangs_exclus_b.push(tab_rangs_b[m]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttab_rangs_b[k] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, rg_max_b, tab_rangs_exclus_b);\n\t\t\t\t\t};\n\t\t\t\t\t// on choisit les premiers\n\t\t\t\t\tlet tab_premiers_b = [];\n\t\t\t\t\tfor (let k = 0; k < tab_rangs_b.length; k++) {\n\t\t\t\t\t\ttab_premiers_b[k] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(max_premier_b)[tab_rangs_b[k]];\n\t\t\t\t\t};\n\t\t\t\t\t// on range les facteurs premiers dans l'ordre croissant\n\t\t\t\t\ttab_premiers_b.sort(function (a, b) {\n\t\t\t\t\t\treturn a - b;\n\t\t\t\t\t});\n\t\t\t\t\t// on choisit les multiplicités\n\t\t\t\t\tlet tab_multiplicites_b = [];\n\t\t\t\t\tfor (let k = 0; k < tab_rangs_b.length; k++) {\n\t\t\t\t\t\ttab_multiplicites_b[k] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 2);\n\t\t\t\t\t};\n\t\t\t\t\ttexte = ``;\n\t\t\t\t\tlet nombre_a_decomposer_b = 1;\n\t\t\t\t\tfor (let k = 0; k < tab_rangs_b.length; k++) {\n\t\t\t\t\t\tfor (let m = 0; m < tab_multiplicites_b[k]; m++) {\n\t\t\t\t\t\t\tnombre_a_decomposer_b = nombre_a_decomposer_b * tab_premiers_b[k];\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `La décomposition en facteurs premiers de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer_b)}$ est : $`;\n\t\t\t\t\tif (tab_multiplicites_b[0] == 1) {\n\t\t\t\t\t\ttexte += `${tab_premiers_b[0]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte += `${tab_premiers_b[0]}^{${tab_multiplicites_b[0]}}`;\n\t\t\t\t\t};\n\t\t\t\t\tfor (let k = 1; k < tab_premiers_b.length; k++) {\n\t\t\t\t\t\tif (tab_multiplicites_b[k] == 1) {\n\t\t\t\t\t\t\ttexte += `\\\\times ${tab_premiers_b[k]}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexte += `\\\\times ${tab_premiers_b[k]}^{${tab_multiplicites_b[k]}}`;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `$, <br>`;\n\t\t\t\t\ttexte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(0) + ` Compléter le tableau ci-dessous.`;\n\t\t\t\t\tif (!sortie_html) {\n\t\t\t\t\t\ttexte += `$\\\\medskip$`;\n\t\t\t\t\t};\n\t\t\t\t\t// on crée le tableau des entetes de lignes et des colonnes\n\t\t\t\t\tlet ent_lignes = [];\n\t\t\t\t\tlet contenu_lignes = [];\n\t\t\t\t\tlet ent_colonnes = [`\\\\times`];\n\t\t\t\t\t// les entetes des lignes\n\t\t\t\t\tfor (let k = 0; k < tab_multiplicites_b[0] + 1; k++) {\n\t\t\t\t\t\tent_lignes.push(`\\\\phantom{plusLarge}` + tab_premiers_b[0] + `^{` + k + `}\\\\phantom{plusLarge}`);\n\t\t\t\t\t};\n\t\t\t\t\t// les entetes des colonnes \n\t\t\t\t\tfor (let m = 0; m < tab_multiplicites_b[1] + 1; m++) {\n\t\t\t\t\t\tfor (let l = 0; l < tab_multiplicites_b[2] + 1; l++) {\n\t\t\t\t\t\t\tent_colonnes.push(tab_premiers_b[1] + `^{` + m + `}\\\\times` + tab_premiers_b[2] + `^{` + l + `}`);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\t// tableau pour la permutation circulaire\n\t\t\t\t\tlet tab_temp;\n\t\t\t\t\t// on y affecte les lignes\n\t\t\t\t\ttab_temp = ent_lignes;\n\t\t\t\t\t// on supprime le x de l'entete des colonnes\n\t\t\t\t\tent_colonnes.shift();\n\t\t\t\t\t// on affecte ça aux lignes;\n\t\t\t\t\tent_lignes = ent_colonnes;\n\t\t\t\t\t// on remet le x en colonnes et on ajoute le reste\n\t\t\t\t\tent_colonnes = [`\\\\times`].concat(tab_temp);\n\t\t\t\t\t// le contenu des lignes\n\t\t\t\t\tfor (let l = 0; l < (tab_multiplicites_b[0] + 1); l++) {\n\t\t\t\t\t\tfor (let c = 1; c < (tab_multiplicites_b[1] + 1) * (tab_multiplicites_b[2] + 1) + 1; c++) {\n\t\t\t\t\t\t\t//contenu_lignes.push(`l : `+l+`, c : `+Number(c));\n\t\t\t\t\t\t\tcontenu_lignes.push(``);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\ttexte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tab_C_L)(ent_colonnes, ent_lignes, contenu_lignes);\n\t\t\t\t\tif (!sortie_html) {\n\t\t\t\t\t\ttexte += `$\\\\medskip$`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\ttexte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(1) + ` En déduire le nombre de diviseurs de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer_b)}$.<br>`;\n\t\t\t\t\ttexte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(2) + ` Enfin, dresser la liste des diviseurs de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer_b)}$.<br>`;\n\n\t\t\t\t\t// correction\n\t\t\t\t\ttexte_corr = `Avec la décomposition en facteurs premiers de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer_b)}$ qui est : $`;\n\t\t\t\t\tif (tab_multiplicites_b[0] == 1) {\n\t\t\t\t\t\ttexte_corr += `${tab_premiers_b[0]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr += `${tab_premiers_b[0]}^{${tab_multiplicites_b[0]}}`;\n\t\t\t\t\t};\n\t\t\t\t\tfor (let k = 1; k < tab_premiers_b.length; k++) {\n\t\t\t\t\t\tif (tab_multiplicites_b[k] == 1) {\n\t\t\t\t\t\t\ttexte_corr += `\\\\times ${tab_premiers_b[k]}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexte_corr += `\\\\times ${tab_premiers_b[k]}^{${tab_multiplicites_b[k]}}`;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `$, <br>`;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(0) + ` Le tableau donne :`;\n\t\t\t\t\t// on crée le tableau des entetes de lignes et des colonnes\n\t\t\t\t\tlet ent_lignes_corr = [];\n\t\t\t\t\tlet ent_lignes_corr_res = [];\n\t\t\t\t\tlet contenu_lignes_corr = [];\n\t\t\t\t\t//let contenu_lignes_corr_res = [];\n\t\t\t\t\tlet ent_colonnes_corr = [`\\\\times`];\n\t\t\t\t\tlet ent_colonnes_corr_res = [1];\n\t\t\t\t\t// les entetes des lignes\n\t\t\t\t\tfor (let k = 0; k < tab_multiplicites_b[0] + 1; k++) {\n\t\t\t\t\t\tent_lignes_corr.push(tab_premiers_b[0] + `^{` + k + `}`);\n\t\t\t\t\t\tent_lignes_corr_res.push(tab_premiers_b[0] ** k);\n\t\t\t\t\t};\n\t\t\t\t\t// les entetes des colonnes \n\t\t\t\t\tfor (let m = 0; m < tab_multiplicites_b[1] + 1; m++) {\n\t\t\t\t\t\tfor (let l = 0; l < tab_multiplicites_b[2] + 1; l++) {\n\t\t\t\t\t\t\tent_colonnes_corr.push(tab_premiers_b[1] + `^{` + m + `}\\\\times` + tab_premiers_b[2] + `^{` + l + `}`);\n\t\t\t\t\t\t\tent_colonnes_corr_res.push(tab_premiers_b[1] ** m * tab_premiers_b[2] ** l);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\t// tableaux pour les permutations circulaires\n\t\t\t\t\tlet tab_temp_corr;\n\t\t\t\t\tlet tab1_temp_corr;\n\t\t\t\t\t// on y affecte les lignes\n\t\t\t\t\ttab_temp_corr = ent_lignes_corr;\n\t\t\t\t\ttab1_temp_corr = ent_lignes_corr_res;\n\t\t\t\t\t// on supprime le x de l'entete des colonnes\n\t\t\t\t\tent_colonnes_corr.shift();\n\t\t\t\t\tent_colonnes_corr_res.shift();\n\t\t\t\t\t// on affecte ça aux lignes;\n\t\t\t\t\tent_lignes_corr = ent_colonnes_corr;\n\t\t\t\t\tent_lignes_corr_res = ent_colonnes_corr_res;\n\t\t\t\t\t// on remet le x en colonnes et on ajoute le reste\n\t\t\t\t\tent_colonnes_corr = [`\\\\times`].concat(tab_temp_corr);\n\t\t\t\t\tent_colonnes_corr_res = [1].concat(tab1_temp_corr);\n\t\t\t\t\t// le contenu des lignes\n\t\t\t\t\tfor (let l = 0; l < (tab_multiplicites_b[1] + 1) * (tab_multiplicites_b[2] + 1) + 1; l++) {\n\t\t\t\t\t\tfor (let c = 1; c < (tab_multiplicites_b[0] + 2); c++) {\n\t\t\t\t\t\t\t//contenu_lignes_corr.push(`l : `+l+`, c : `+Number(c));\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontenu_lignes_corr.push(ent_lignes_corr[l] + `\\\\times` + ent_colonnes_corr[c] + `=` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.mise_en_evidence)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(ent_lignes_corr_res[l] * ent_colonnes_corr_res[c])));\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tab_C_L)(ent_colonnes_corr, ent_lignes_corr, contenu_lignes_corr);\n\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(1) + ` $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer_b)}$ a donc `;\n\t\t\t\t\ttexte_corr += `$(${tab_multiplicites_b[0]}+1)\\\\times(${tab_multiplicites_b[1]}+1)\\\\times(${tab_multiplicites_b[2]}+1) = `;\n\t\t\t\t\ttexte_corr += `${tab_multiplicites_b[0] + 1}\\\\times${tab_multiplicites_b[1] + 1}\\\\times${tab_multiplicites_b[2] + 1} = `;\n\t\t\t\t\ttexte_corr += `${(tab_multiplicites_b[0] + 1) * (tab_multiplicites_b[1] + 1) * (tab_multiplicites_b[2] + 1)}$ diviseurs.<br>`;\n\t\t\t\t\ttexte_corr += `En effet, dans la décomposition apparait : `;\n\t\t\t\t\ttexte_corr += ` <br> - Le facteur premier $${tab_premiers_b[0]}$ avec la multiplicité $${tab_multiplicites_b[0]}$`;\n\t\t\t\t\ttexte_corr += `, le facteur $${tab_premiers_b[0]}$ apparait donc sous les formes : `;\n\t\t\t\t\tfor (let k = 0; k < tab_multiplicites_b[0]; k++) {\n\t\t\t\t\t\ttexte_corr += `$${tab_premiers_b[0]}^{` + k + `}$ ou `;\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `$${tab_premiers_b[0]}^{` + tab_multiplicites_b[0] + `}$ d'où le facteur $(${tab_multiplicites_b[0]}+1)$.`;\n\n\t\t\t\t\ttexte_corr += ` <br> - Le facteur premier $${tab_premiers_b[1]}$ avec la multiplicité $${tab_multiplicites_b[1]}$`;\n\t\t\t\t\ttexte_corr += `, le facteur $${tab_premiers_b[1]}$ apparait donc sous les formes : `;\n\t\t\t\t\tfor (let k = 0; k < tab_multiplicites_b[1]; k++) {\n\t\t\t\t\t\ttexte_corr += `$${tab_premiers_b[1]}^{` + k + `}$ ou `;\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `$${tab_premiers_b[1]}^{` + tab_multiplicites_b[1] + `}$ d'où le facteur $(${tab_multiplicites_b[1]}+1)$.`;\n\n\t\t\t\t\ttexte_corr += ` <br> - Le facteur premier $${tab_premiers_b[2]}$ avec la multiplicité $${tab_multiplicites_b[2]}$`;\n\t\t\t\t\ttexte_corr += `, le facteur $${tab_premiers_b[2]}$ apparait donc sous les formes : `;\n\t\t\t\t\tfor (let k = 0; k < tab_multiplicites_b[2]; k++) {\n\t\t\t\t\t\ttexte_corr += `$${tab_premiers_b[2]}^{` + k + `}$ ou `;\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `$${tab_premiers_b[2]}^{` + tab_multiplicites_b[2] + `}$ d'où le facteur $(${tab_multiplicites_b[2]}+1)$.`;\n\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(2) + ` Enfin, voici la liste des $${(tab_multiplicites_b[0] + 1) * (tab_multiplicites_b[1] + 1) * (tab_multiplicites_b[2] + 1)}$ diviseurs de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer_b)}$ issus du tableau ci-dessus : `;\n\t\t\t\t\ttexte_corr += `$1`;\n\t\t\t\t\tfor (let w = 1; w < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(nombre_a_decomposer_b).length; w++) {\n\t\t\t\t\t\ttexte_corr += `\\\\text{ ; }` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(nombre_a_decomposer_b)[w]);\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `.$`;\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.liste_questions.push(texte);\n\t\t\t\tthis.liste_corrections.push(texte_corr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\t};\n\t//this.besoin_formulaire_numerique = ['Règle à travailler',5,\"1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissance\\n4 : Produit de puissances de même exposant\\n5 : Mélange\"]; \n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/3e/3A11-3.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);