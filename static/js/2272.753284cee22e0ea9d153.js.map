{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4G20-5.js","webpack://mathalea/./src/js/exercices/6e/6N31-3.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Arrondir_une_valeur_4e","Arrondir_une_valeur","this","sup","sup2","besoinFormulaireNumerique","amcReady","Exercice","nbQuestions","nbCols","nbColsCorr","qcmDisponible","modeQcm","sortieHtml","spacingCorr","nouvelleVersion","consigne","qcm","ordered","vertical","m","c","d","u","di","ci","mi","me","ce","de","n","den","num","nb","rac","tabrep","tabicone","pre_tabrep","pre_tabicone","espace","space","listeQuestions","listeCorrections","i","texte","texteCorr","cpt","length","randint","calcul","texNombre","choice","texFraction","troncature","listeNombresPremiersStrictJusqua","Math","sqrt","miseEnEvidence","shuffle2tableaux","push","mathalea","sortieAMC","indexOf","slice","listeQuestionsToContenu","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","spacing","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/2272.753284cee22e0ea9d153.js","sourcesContent":["import Arrondir_une_valeur from '../6e/6N31-3.js'\nexport const titre = 'Trouver la valeur arrondie d’une racine carrée'\n\n/**\n * Arrondir une racine carrée\n * @Auteur Mireille Gain, 13 avril 2021\n * référence 4G20-5\n */\n\nexport default function Arrondir_une_valeur_4e() {\n  Arrondir_une_valeur.call(this);\n  this.titre = titre;\n  this.sup = 3;\n  this.sup2 = true;\n  this.besoinFormulaireNumerique = ['Type de nombre', 3, `1 : Nombre décimal\\n 2 : Fraction\\n 3 : Racine carrée`];\n}\n","import Exercice from '../ClasseExercice.js'\nimport { listeNombresPremiersStrictJusqua, shuffle2tableaux, choice, listeQuestionsToContenu, randint, troncature, calcul, texNombre, miseEnEvidence, texFraction } from '../../modules/outils.js';\nexport const amcReady = true\n\nexport const titre = 'Arrondir une valeur'\n\n/**\n * * Encadrer_puis_arrondir_une_valeur\n * * 6N31-3\n * @author Mireille Gain, s'inspirant de 6N31-1 de Sébastien Lozano\n */\n\nexport default function Arrondir_une_valeur () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre;\n\n  this.nbQuestions = 3\n  this.nbCols = 3\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.sup2 = false\n\tthis.qcmDisponible = true\n\tthis.modeQcm = false\n  sortieHtml ? (this.spacingCorr = 2.5) : (this.spacingCorr = 3.5)\n\n  this.nouvelleVersion = function () {\n    if (!this.modeQcm) {\n      this.consigne = \"Encadrer chaque nombre à l'unité, puis au dixième, puis au centième.<br>Dans chaque cas, mettre ensuite en évidence son arrondi.\"\n    } else {\n      this.consigne = \"Quelles sont les encadrements où la valeur orange est la valeur arrondie du nombre à l'unité, au dixième et au centième\"\n    }\n    this.qcm = ['6N31-3', [], \"Valeur arrondie du nombre à l'unité, au dixième et au centième\", 2, { ordered: true, vertical: true }]\n    let tabrep = []; let tabicone=[]; let pre_tabrep=[]; let  pre_tabicone = []\n\t\tlet espace = '';\n    if (sortieHtml) {\n\t\t if (this.qcm[4].vertical === true) {\n        espace = '<br>';\n      }\n      else {\n        espace = '&emsp;';\n      }\n    } else {\n      if (this.qcm[4].vertical === true) {\n        space = '\\\\\\\\';\n      } else {\n\t\t  espace = '\\\\qquad';\n      }\n    }\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let m, c, d, u, di, ci, mi, me, ce, de, n, den, num, nb, rac\n\n    for (let i = 0, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      tabrep.length = 0, tabicone.length = 0, pre_tabrep.length = 0, pre_tabicone.length = 0\n      if (this.sup == 1) {\n        m = randint(0, 9)\n        c = randint(0, 9)\n        d = randint(0, 9)\n        u = randint(0, 9)\n        di = randint(1, 9)\n        ci = randint(1, 9)\n        mi = randint(1, 9, 5)\n        me = randint(0, 1)\n        ce = randint(0, 1)\n        de = randint(0, 1)\n        n = me * m * 1000 + ce * c * 100 + de * d * 10 + u * 1 + calcul(di * 0.1 + ci * 0.01 + mi * 0.001)\n        nb = texNombre(n)\n      } else if (this.sup == 2) {\n        den = choice([7, 9, 11, 13])\n        num = randint(1, 50, [7, 9, 11, 13, 14, 18, 21, 22, 26, 27, 28, 33, 35, 36, 39, 42, 44, 45, 49])\n        n = num / den\n        nb = texFraction(num, den)\n        di = 10 * (troncature(n - troncature(n, 0), 1))\n        ci = 100 * (troncature(n - troncature(n, 1), 2))\n        mi = 1000 * (troncature(n - troncature(n, 2), 3))\n      } else if (this.sup == 3) {\n        rac = randint(2, 300, [listeNombresPremiersStrictJusqua(300)])\n        n = Math.sqrt(rac)\n        nb = `\\\\sqrt{${rac}}`\n        di = 10 * (troncature(n - troncature(n, 0), 1))\n        ci = 100 * (troncature(n - troncature(n, 1), 2))\n        mi = 1000 * (troncature(n - troncature(n, 2), 3))\n      }\n\n      texte = `$${nb}$`\n      \n        if (this.sup == 1) texte += '';\n      else if (this.sup == 2) texte += `$\\\\phantom{1234567}Quand~on~écrit~sur~la~calculatrice~ ${num}\\\\div ${den}, ~elle~renvoie : ${texNombre(n)}$`\n        else if (this.sup == 3) texte += `$\\\\phantom{1234567}Quand~on~écrit~sur~la~calculatrice~ ${nb}, ~elle~renvoie : ${texNombre(n)}$`\n      \n      texteCorr = \"Encadrement et arrondi à l'unité : \"\n      if (di < 5) {\n        texteCorr += `$\\\\phantom{1234567}${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n      pre_tabrep[0] = `$${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n      pre_tabrep[1] = `$${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n      pre_tabicone = [1, 0]\n      if (choice([false, true])) {\n          shuffle2tableaux(pre_tabrep, pre_tabicone)\n      }\n        tabrep.push(pre_tabrep[0], pre_tabrep[1])\n      tabicone.push(pre_tabicone[0], pre_tabicone[1])\n      } else {\n        texteCorr += `$\\\\phantom{1234567}${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        pre_tabrep[0] = `$${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        pre_tabrep[1] = `$${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n        pre_tabicone = [1, 0]\n        if (choice([false, true])) {\n          shuffle2tableaux(pre_tabrep, pre_tabicone)\n        }\n        tabrep.push(pre_tabrep[0], pre_tabrep[1])\n        tabicone.push(pre_tabicone[0], pre_tabicone[1])\n      }\n\n      texteCorr += '<br>Encadrement et arrondi au dixième : ';\n      if (ci < 5) {\n        texteCorr += `$\\\\phantom{123}${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        pre_tabrep[0] = `$${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        pre_tabrep[1] = `$${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        pre_tabicone = [1, 0]\n        if (choice([false, true])) {\n          shuffle2tableaux(pre_tabrep, pre_tabicone)\n        }\n        tabrep.push(pre_tabrep[0], pre_tabrep[1])\n        tabicone.push(pre_tabicone[0], pre_tabicone[1])\n      } else {\n        texteCorr += `$\\\\phantom{123}${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        pre_tabrep[0] = `$${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        pre_tabrep[1] = `$${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        pre_tabicone = [1, 0]\n        if (choice([false, true])) {\n          shuffle2tableaux(pre_tabrep, pre_tabicone)\n        }\n        tabrep.push(pre_tabrep[0], pre_tabrep[1])\n        tabicone.push(pre_tabicone[0], pre_tabicone[1])\n      }\n\n      texteCorr += '<br>Encadrement et arrondi au centième : $~$';\n      if (mi < 5) {\n        texteCorr += `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        pre_tabrep[0] = `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        pre_tabrep[1] = `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        pre_tabicone = [1, 0]\n        if (choice([false, true])) {\n          shuffle2tableaux(pre_tabrep, pre_tabicone)\n        }\n        tabrep.push(pre_tabrep[0], pre_tabrep[1])\n        tabicone.push(pre_tabicone[0], pre_tabicone[1])\n      } else {\n        texteCorr += `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        pre_tabrep[0] = `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        pre_tabrep[1] = `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        pre_tabicone = [1, 0]\n        if (choice([false, true])) {\n          shuffle2tableaux(pre_tabrep, pre_tabicone)\n        }\n        tabrep.push(pre_tabrep[0], pre_tabrep[1])\n        tabicone.push(pre_tabicone[0], pre_tabicone[1])\n      }\n      if (this.modeQcm && !mathalea.sortieAMC) {\n        texte += '<br><br>Réponses possibles : <br>  ';\n        texteCorr = ''\n        // shuffle2tableaux(tabrep, tabicone);\n        for (let i = 0; i < 6; i++) {\n          texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace  \n         if (tabicone[i] == 1) {\n            texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace\n         } else {\n            texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n         }\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte) // Sinon on enregistre la question dans listeQuestions\n        this.listeCorrections.push(texteCorr) // On fait pareil pour la correction\n        this.qcm[1].push([`Quels sont les encadrements où la valeur orange est l'arrondi de ${texte} ?\\\\\\\\ \\n Réponses possibles`,\n          tabrep.slice(),\n          tabicone.slice()])\n        tabrep.length = 0\n        tabicone.length = 0\n        i++ // On passe à la question suivante\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  };\n  this.besoinFormulaireNumerique = ['Type de nombre', 2, '1 : Nombre décimal\\n 2 : Fraction']\n  this.besoinFormulaire2CaseACocher = ['Affichage de la valeur donnée à la calculatrice', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}