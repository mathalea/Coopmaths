{"version":3,"file":"js/84979.146834a7c7490dce54b0.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6G23.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, lettreDepuisChiffre, texNombre } from '../../modules/outils.js'\nimport { point, labelPoint, rotation, mathalea2d, afficheMesureAngle, sensDeRotation, homothetie, demiDroiteAvecExtremite, cibleCouronne, texteParPoint, similitude } from '../../modules/2d.js'\n\nexport const titre = 'Construire un angle de mesure donnée'\n\n/**\n * Construire un angle\n * @author Jean-Claude Lhote\n * Référence 6G23\n */\nexport default function ConstruireUnAngle () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbQuestionsModifiable = true\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1\n  this.video = 'cU80v1p6mMI'\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    this.sup = parseInt(this.sup)\n    let angle; let anglerot; let Apos; let Bpos; let Cpos; let fleche; const signe = []; let p; let texte; let texteCorr; let A; let B; let s; let C; let s2\n    let labels, labels2, secteur, cible, xMin, xMax, yMin, yMax, objetsEnonce, objetsCorrection\n    for (let i = 0; i < this.nbQuestions; i++) {\n      signe.push((-1) ** i)\n    }\n    for (let i = 0; i < this.nbQuestions; i++) {\n      if (this.sup === 1) {\n        angle = randint(1, 17, 9) * 10\n      } else if (this.sup === 2) {\n        angle = randint(3, 34, 18) * 5\n      } else {\n        angle = randint(12, 168, 90)\n      }\n      angle = angle * signe[i]\n      anglerot = randint(-50, 50)\n      p = ['x', lettreDepuisChiffre(randint(1, 16)), 'y']\n      texte = `Construire l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$ de mesure $${texNombre(Math.abs(angle))}\\\\degree$ en tournant dans le sens `\n      if (angle < 0) {\n        texte += 'des aiguilles d\\'une montre.<br>'\n      } else {\n        texte += 'inverse des aiguilles d\\'une montre.<br>'\n      }\n      A = point(0, 0)\n      B = point(5, 0)\n      B = rotation(B, A, anglerot)\n      Apos = texteParPoint(p[1], similitude(B, A, -90, 0.1), 'milieu')\n      Bpos = texteParPoint(p[0], similitude(A, homothetie(B, A, 0.9), signe[i] * 90, 0.1), 'milieu')\n\n      s = demiDroiteAvecExtremite(A, B)\n      s.epaisseur = 2\n      C = rotation(B, A, angle)\n      Cpos = texteParPoint(p[2], similitude(A, homothetie(C, A, 0.9), -signe[i] * 90, 0.1), 'milieu')\n      fleche = sensDeRotation(B, A, signe[i])\n      s2 = demiDroiteAvecExtremite(A, C)\n      labels = labelPoint(A, B)\n      labels2 = labelPoint(A, B, C)\n      secteur = afficheMesureAngle(B, A, C)\n      texteCorr = ''\n      cible = cibleCouronne({ x: 0, y: 0, taille: 3 })\n      xMin = Math.min(A.x - 4, C.x)\n      xMax = Math.max(B.x, C.x) + 0.5\n      yMin = Math.min(A.y - 4, C.y) - 0.5\n      yMax = Math.max(A.y + 4, C.y) + 0.5\n      context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n      objetsEnonce = [s, labels, cible, Apos, Bpos, fleche]\n      objetsCorrection = [s, labels2, secteur, cible, s2, Apos, Bpos, Cpos, fleche]\n      texte += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.8 }, objetsEnonce)\n      if ((!context.isHtml) && ((i + 1) % 2 === 0 && !(i + 1) % 4 === 0)) texte += '\\\\columnbreak '\n      if ((!context.isHtml) && ((i + 1) % 4 === 0)) texte += '\\\\newpage '\n      texteCorr = mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection)\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Précision de l\\'angle', 3, '1 : Angle à 10°\\n2 : Angle à 5°\\n3 : Angle à 1°']\n  // this.besoinFormulaire2Numerique = ['Niveau de difficulté',2,'1 : Construire un angle\\n2 : Construire 2 anles'];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ConstruireUnAngle","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","video","nouvelleVersion","angle","anglerot","Apos","Bpos","Cpos","fleche","listeQuestions","listeCorrections","autoCorrection","parseInt","signe","p","texte","texteCorr","A","B","s","C","s2","labels","labels2","secteur","cible","xMin","xMax","yMin","yMax","objetsEnonce","objetsCorrection","i","push","randint","lettreDepuisChiffre","texNombre","Math","abs","point","rotation","texteParPoint","similitude","homothetie","demiDroiteAvecExtremite","epaisseur","sensDeRotation","labelPoint","afficheMesureAngle","cibleCouronne","x","y","taille","min","max","context","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}