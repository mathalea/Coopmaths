{"version":3,"file":"js/88003.a3c5e20bd188a313c6a2.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N22.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/2dinteractif.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, choice, randint, quotientier, rangeMinMax } from '../../modules/outils.js'\nimport FractionEtendue from '../../modules/FractionEtendue.js'\nimport { mathalea2d } from '../../modules/2d.js'\nimport { fractionCliquable } from '../../modules/2dinteractif.js'\nimport { context } from '../../modules/context.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Effectuer des calculs simples avec des fractions'\nexport const dateDePublication = '20/11/21'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Calculs avec des fractions que l'on peut faire à partir de schémas\n * @author Rémi Angot\n * Référence 6N22\n*/\nexport default function FractionsCalculsSimples () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Calculer.'\n  this.sup = context.isHtml\n  this.nbQuestions = 6 // Nombre de questions par défaut\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 4 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.correctionDetaillee = true\n  this.correctionDetailleeDisponible = true\n\n  this.nouvelleVersion = function (numeroExercice) {\n    if (this.correctionDetaillee) this.nbColsCorr = 1\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    const typeQuestionsDisponibles = ['a/b+c/b', 'n+a/b', 'n+a/b', 'n*a/b', 'n-a/b']//, 'a/b+c/nb']\n\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, schema, schemaCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // Boucle principale où i+1 correspond au numéro de la question\n      let c, n, f1, f2, f3\n      const b = choice([2, 3, 4, 5])\n      const a = randint(1, b - 1)\n      const xmax = 19.2\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'a/b+c/b':\n          c = randint(1, b + 4, [b, 2 * b, 3 * b, 4 * b])\n          f1 = new FractionEtendue(a, b)\n          f2 = new FractionEtendue(c, b)\n          f3 = new FractionEtendue(a + c, b)\n          texte = `$${f1.texFraction} + ${f2.texFraction}$`\n          texteCorr = `$${f1.texFraction} + ${f2.texFraction} = ${f3.texFraction} ${(f3.estEntiere) ? `=${f3.texFractionSimplifiee}` : ''}$`\n          schema = fractionCliquable(0, 0, 4, b)\n          if (this.sup && context.isHtml) texte += '<br`>' + mathalea2d({ scale: 0.5, xmin: -0.2, xmax, ymin: -1, ymax: 2 }, schema)\n          schemaCorr = fractionCliquable(0, 0, quotientier(a + c, b) + 1, b, { cliquable: false, liste1: rangeMinMax(1, a), liste2: rangeMinMax(a + 1, a + c) })\n          if (this.correctionDetaillee) texteCorr += '<br>' + mathalea2d({ scale: 0.5, xmin: -0.2, xmax, ymin: -1, ymax: 2 }, schemaCorr)\n          setReponse(this, i, new FractionEtendue(a + c, b), { formatInteractif: 'fractionEgale' })\n          texte += ajouteChampTexteMathLive(this, i)\n          break\n        case 'n+a/b':\n          n = randint(1, 3)\n          f1 = new FractionEtendue(a, b)\n          f2 = new FractionEtendue(n * b, b)\n          f3 = new FractionEtendue(n * b + a, b)\n          texte = `$${n} + ${f1.texFraction}$`\n          texteCorr = `$${n} + ${f1.texFraction} = ${f2.texFraction} + ${f1.texFraction} = ${f3.texFraction} ${(f3.estEntiere) ? `=${f3.texFractionSimplifiee}` : ''}$`\n          schema = fractionCliquable(0, 0, 4, b)\n          schemaCorr = fractionCliquable(0, 0, quotientier(n * b + a, b) + 1, b, { cliquable: false, liste1: rangeMinMax(1, n * b), liste2: rangeMinMax(n * b + 1, n * b + a) })\n          if (this.sup && context.isHtml) texte += '<br`>' + mathalea2d({ scale: 0.5, xmin: -0.2, xmax, ymin: -1, ymax: 2 }, schema)\n          if (this.correctionDetaillee) texteCorr += '<br>' + mathalea2d({ scale: 0.5, xmin: -0.2, xmax, ymin: -1, ymax: 2 }, schemaCorr)\n          setReponse(this, i, new FractionEtendue(n * b + a, b), { formatInteractif: 'fractionEgale' })\n          texte += ajouteChampTexteMathLive(this, i)\n          break\n        case 'n*a/b':\n          n = randint(2, 5, b)\n          f1 = new FractionEtendue(a, b)\n          f3 = new FractionEtendue(n * a, b)\n          texte = `$${n} \\\\times ${f1.texFraction}$`\n          texteCorr = `$${n} \\\\times ${f1.texFraction} = ${f3.texFraction} ${(f3.estEntiere) ? `=${f3.texFractionSimplifiee}` : ''}$`\n          texteCorr += '<br>'\n          if (this.correctionDetaillee) {\n            // Liste pour alterner les couleurs\n            const liste1 = []\n            const liste2 = []\n            for (let k = 0; k < n; k++) {\n              if (k % 2 === 0) liste1.push(...rangeMinMax(k * a + 1, (k + 1) * a))\n              else liste2.push(...rangeMinMax(k * a + 1, (k + 1) * a))\n            }\n            schemaCorr = fractionCliquable(0, 0, quotientier(n * a, b) + 1, b, { cliquable: false, liste1, liste2 })\n            texteCorr += mathalea2d({ scale: 0.5, xmin: -0.2, xmax: (quotientier(n * a, b) + 1) * 5, ymin: -1, ymax: 2, style: 'display: inline' }, schemaCorr)\n          }\n          schema = fractionCliquable(0, 0, 4, b)\n          if (this.sup && context.isHtml) texte += '<br>' + mathalea2d({ scale: 0.5, xmin: -0.2, xmax, ymin: -1, ymax: 2, style: 'display: inline' }, schema)\n          setReponse(this, i, new FractionEtendue(n * a, b), { formatInteractif: 'fractionEgale' })\n          texte += ajouteChampTexteMathLive(this, i)\n          break\n        case 'n-a/b':\n          n = randint(1, 3)\n          f1 = new FractionEtendue(a, b)\n          f2 = new FractionEtendue(n * b, b)\n          f3 = new FractionEtendue(n * b - a, b)\n          texte = `$${n} - ${f1.texFraction}$`\n          texteCorr = `$${n} - ${f1.texFraction} = ${f2.texFraction} - ${f1.texFraction} = ${f3.texFraction} ${(f3.estEntiere) ? `=${f3.texFractionSimplifiee}` : ''}$`\n          schemaCorr = fractionCliquable(0, 0, quotientier(n * b + a, b) + 1, b, { cliquable: false, liste2: rangeMinMax(1, n * b), hachures1: true, liste1: rangeMinMax(n * b - a + 1, n * b), couleur2: context.isHtml ? '#f15929' : 'gray' })\n          schema = fractionCliquable(0, 0, 4, b)\n          if (this.correctionDetaillee) texteCorr += '<br>' + mathalea2d({ scale: 0.5, xmin: -0.2, xmax, ymin: -1, ymax: 2 }, schemaCorr)\n          if (this.sup && context.isHtml) texte += '<br>' + mathalea2d({ scale: 0.5, xmin: -0.2, xmax, ymin: -1, ymax: 2 }, schema)\n          setReponse(this, i, new FractionEtendue(n * b - a, b), { formatInteractif: 'fractionEgale' })\n          texte += ajouteChampTexteMathLive(this, i)\n          break\n      }\n      // Si la question n'a jamais été posée, on l'enregistre\n      if (this.questionJamaisPosee(i, a, b, listeTypeQuestions[i])) { // <- laisser le i et ajouter toutes les variables qui rendent les exercices différents (par exemple a, b, c et d)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  this.besoinFormulaireCaseACocher = ['Avec un schéma interactif']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { ObjetMathalea2D, point, polygone, tracePoint } from './2d.js'\nimport { context } from './context.js'\n\n/**\n * @author Rémi ANGOT\n * @param {number} x abscisse du point\n * @param {number} y ordonnée du point\n * @param {object} options over, out et click sont des ojets pour le style css des évènements de la souris, radius, width, color, opacite, size, style sont les paramètres possibles pour la trace du point\n */\nfunction PointCliquable (x, y, options) {\n  ObjetMathalea2D.call(this)\n  const A = point(x, y)\n  this.point = A\n  if (!options) options = {}\n  const out = options.out || { opacity: 0 }\n  const over = options.over || { opacity: 0.5 }\n  const click = options.click || { opacity: options.opacite || 1 }\n  this.etat = false // Pour récupérer si le point est affiché ou pas\n  this.svg = function (coeff) {\n    let code\n    const trace = tracePoint(A)\n    trace.color = options.color || options.couleur || 'black'\n    trace.epaisseur = options.width || options.epaisseur || 1\n    trace.taille = options.size || options.taille || 3\n    trace.isVisible = false\n    trace.style = options.style || 'x'\n    code = `<g id=\"${this.id}\">\\n`\n    code += trace.svg(coeff) + '\\n'\n    // Le cercle est la zone d'effet pour les évènements\n    // Comme fill est à none, il faut ajouter pointer-events=\"visible\" cf https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/\n    code += `<circle cx=\"${A.xSVG(coeff)}\" cy=\"${A.ySVG(coeff)}\" r=\"${(options.radius || options.rayon || 1) * coeff}\" fill=\"none\" pointer-events=\"visible\" />\\n`\n    code += '</g>'\n    return code\n  }\n  const moi = this // Pour utiliser this dans les fonctions\n  const gestionDeLaSouris = () => {\n    document.removeEventListener('exercicesAffiches', gestionDeLaSouris)\n    const groupe = document.getElementById(`${this.id}`)\n    const changeEtatPoint = (etat) => {\n      this.etat = etat\n    }\n    // On initialise avec le style de out\n    if (groupe) {\n      for (const key in out) {\n        groupe.style[key] = out[key]\n      }\n      groupe.addEventListener('mouseover', mouseOverEffect)\n      groupe.addEventListener('mouseout', mouseOutEffect)\n      groupe.addEventListener('click', mouseClick)\n      function mouseOverEffect () {\n        for (const key in over) {\n          this.style[key] = over[key]\n        }\n      }\n      function mouseOutEffect () {\n        for (const key in out) {\n          this.style[key] = out[key]\n        }\n      }\n      function mouseClick () {\n        if (moi.etat) {\n          // On désactive le point\n          groupe.addEventListener('mouseover', mouseOverEffect)\n          groupe.addEventListener('mouseout', mouseOutEffect)\n          // On lui remet le style de out\n          for (const key in out) {\n            this.style[key] = out[key]\n          }\n          moi.etat = false\n          changeEtatPoint(false)\n        } else {\n          // On désactive les listeners\n          groupe.removeEventListener('mouseover', mouseOverEffect)\n          groupe.removeEventListener('mouseout', mouseOutEffect)\n          // On applique le style de click\n          for (const key in click) {\n            this.style[key] = click[key]\n          }\n          moi.etat = true\n        }\n      }\n    }\n  }\n  document.addEventListener('exercicesAffiches', gestionDeLaSouris)\n  this.stopCliquable = () => {\n    const groupe = document.getElementById(`${this.id}`)\n    // On retire tous les listener en le remplaçant par un clone\n    groupe.replaceWith(groupe.cloneNode(true))\n  }\n}\n\nexport function pointCliquable (...args) {\n  return new PointCliquable(...args)\n}\n\n/**\n * @author Rémi ANGOT\n * @param {number} x abscisse du point\n * @param {number} y ordonnée du point\n * @param {object} options over, out et click sont des ojets pour le style css des évènements de la souris, radius, width, color, size, style sont les paramètres possibles pour la trace du point\n */\nfunction RectangleCliquable (x1, y1, x2, y2, options) {\n  ObjetMathalea2D.call(this)\n  const A = point(x1, y1)\n  const B = point(x2, y1)\n  const C = point(x2, y2)\n  const D = point(x1, y2)\n  const rectangle = polygone(A, B, C, D)\n  const bordure = polygone(A, B, C, D)\n  if (!options) options = {}\n  const out = options.out || { opacity: 0 }\n  const over = options.over || { opacity: 0.2 }\n  const click = options.click || { opacity: 1 }\n  const couleur = options.couleur || '#f15929'\n  const cliquable = (options.cliquable !== undefined) ? options.cliquable : true\n  rectangle.hachures = options.hachures || false\n  rectangle.epaisseurDesHachures = options.epaisseurDesHachures || 4\n  bordure.epaisseur = options.epaisseur || 1\n  this.etat = options.etat || false // Pour récupérer si le rectangle est cliqué ou pas\n  this.svg = function (coeff) {\n    let code\n    rectangle.couleurDeRemplissage = options.color || options.couleur || options.couleurDeRemplissage || '#f15929'\n    rectangle.epaisseur = 0\n    rectangle.isVisible = false\n    code = `<g id=\"rectangle${this.id}\">\\n`\n    code += rectangle.svg(coeff) + '\\n'\n    code += '</g>'\n    code += bordure.svg(coeff)\n    return code\n  }\n  this.tikz = (coeff) => {\n    if (this.etat) bordure.couleurDeRemplissage = couleur\n    bordure.hachures = rectangle.hachures\n    return bordure.tikz(coeff)\n  }\n  const moi = this // Pour utiliser this dans les fonctions\n  const gestionDeLaSouris = () => {\n    document.removeEventListener('exercicesAffiches', gestionDeLaSouris)\n    const groupe = document.getElementById('rectangle' + this.id)\n    const changeEtatPoint = (etat) => {\n      this.etat = etat\n    }\n    if (groupe) {\n      // On initialise avec le style de out ou de click suivant l'état\n      for (const key in out) {\n        groupe.style[key] = (this.etat) ? click[key] : out[key]\n      }\n    }\n    if (groupe && cliquable) {\n      groupe.addEventListener('mouseover', mouseOverEffect)\n      groupe.addEventListener('mouseout', mouseOutEffect)\n      groupe.addEventListener('click', mouseClick)\n      function mouseOverEffect () {\n        for (const key in over) {\n          this.style[key] = over[key]\n        }\n      }\n      function mouseOutEffect () {\n        for (const key in out) {\n          this.style[key] = out[key]\n        }\n      }\n      function mouseClick () {\n        if (moi.etat) {\n          // On désactive le point\n          groupe.addEventListener('mouseover', mouseOverEffect)\n          groupe.addEventListener('mouseout', mouseOutEffect)\n          // On lui remet le style de out\n          for (const key in out) {\n            this.style[key] = out[key]\n          }\n          moi.etat = false\n          changeEtatPoint(false)\n        } else {\n          // On désactive les listeners\n          groupe.removeEventListener('mouseover', mouseOverEffect)\n          groupe.removeEventListener('mouseout', mouseOutEffect)\n          // On applique le style de click\n          for (const key in click) {\n            this.style[key] = click[key]\n          }\n          moi.etat = true\n        }\n      }\n    }\n  }\n  document.addEventListener('exercicesAffiches', gestionDeLaSouris)\n  this.stopCliquable = () => {\n    const groupe = document.getElementById(`${this.id}`)\n    // On retire tous les listener en le remplaçant par un clone\n    groupe.replaceWith(groupe.cloneNode(true))\n  }\n}\n\nexport function rectangleCliquable (...args) {\n  return new RectangleCliquable(...args)\n}\n\nexport function fractionCliquable (x, y, unites, denominateur, options) {\n  const objets = []\n  if (!options) options = {}\n  const longueur = options.longueur || 4\n  const ecart = options.ecart || 1\n  const hauteur = options.hauteur || 1\n  const liste1 = options.liste1 || []\n  const liste2 = options.liste2 || []\n  let couleur1 = options.couleur1 || '#f15929'\n  let couleur2 = options.couleur2 || '#1DA962'\n  if (!context.isHtml) {\n    couleur1 = options.couleur1 || 'gray'\n    couleur2 = options.couleur2 || 'lightgray'\n  }\n  const hachures1 = options.hachures1 || false\n  const hachures2 = options.hachures2 || false\n  const couleur = options.couleur || couleur1\n  const cliquable = (options.cliquable !== undefined) ? options.cliquable : true\n  let O\n  for (let i = 0; i < unites; i++) {\n    O = point(x + i * (longueur + ecart), y)\n    for (let j = 0; j < denominateur; j++) {\n      if (liste1.includes(i * denominateur + j + 1)) {\n        objets.push(rectangleCliquable(O.x + j * longueur / denominateur, y, O.x + (j + 1) * longueur / denominateur, y + hauteur,\n          { cliquable, etat: true, couleur: couleur1, hachures: hachures1 }))\n      } else if (liste2.includes(i * denominateur + j + 1)) {\n        objets.push(rectangleCliquable(O.x + j * longueur / denominateur, y, O.x + (j + 1) * longueur / denominateur, y + hauteur,\n          { cliquable, etat: true, couleur: couleur2, hachures: hachures2 }))\n      } else {\n        objets.push(rectangleCliquable(O.x + j * longueur / denominateur, y, O.x + (j + 1) * longueur / denominateur, y + hauteur, { cliquable, couleur, etat: false }))\n      }\n    }\n  }\n  return objets\n}\n"],"names":["titre","dateDePublication","interactifReady","interactifType","FractionsCalculsSimples","Exercice","this","consigne","sup","context","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","correctionDetaillee","correctionDetailleeDisponible","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","autoCorrection","listeTypeQuestions","combinaisonListes","texte","texteCorr","schema","schemaCorr","i","cpt","c","n","f1","f2","f3","b","choice","a","randint","xmax","FractionEtendue","texFraction","estEntiere","texFractionSimplifiee","fractionCliquable","mathalea2d","scale","xmin","ymin","ymax","quotientier","cliquable","liste1","rangeMinMax","liste2","setReponse","formatInteractif","ajouteChampTexteMathLive","k","push","style","hachures1","couleur2","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","args","argsConcatenes","arg","undefined","toString","indexOf","PointCliquable","x","y","options","ObjetMathalea2D","A","point","out","opacity","over","click","opacite","etat","svg","coeff","code","trace","tracePoint","color","couleur","epaisseur","width","taille","size","isVisible","id","xSVG","ySVG","radius","rayon","moi","gestionDeLaSouris","document","removeEventListener","groupe","getElementById","changeEtatPoint","key","mouseOverEffect","mouseOutEffect","mouseClick","addEventListener","stopCliquable","replaceWith","cloneNode","pointCliquable","RectangleCliquable","x1","y1","x2","y2","B","C","D","rectangle","polygone","bordure","hachures","epaisseurDesHachures","couleurDeRemplissage","tikz","rectangleCliquable","unites","denominateur","objets","longueur","ecart","hauteur","couleur1","hachures2","O","j","includes"],"sourceRoot":""}