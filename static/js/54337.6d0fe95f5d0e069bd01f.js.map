{"version":3,"file":"js/54337.6d0fe95f5d0e069bd01f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C30-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, texNombrec, texNombre2, calcul, choice, texFraction } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 'qcmMono' // QCM\nexport const interactifType = 'qcm'\nexport const interactifReady = true\n\nexport const titre = 'Multiplier par 0,1 ; 0,01 ; 0,001 (placer la virgule)'\n\n/**\n * @author Jean-claude Lhote\n * Publié le 20/02/2021\n * Référence 6C30-4\n * Relecture : Décembre 2021 par EE\n */\nexport default function PlacerLaVirgule () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.consigne = 'Les calculs suivants sont faux. Placer la virgule correctement dans le résultat pour que le calcul soit juste.'\n  this.sup = false\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function () {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n\n    if (this.nbQuestions > 1) {\n      if (this.interactif) {\n        this.consigne = 'Déterminer le résultat de ces multiplications.'\n      } else {\n        this.consigne = 'Les calculs suivants sont faux. Placer la virgule correctement dans le résultat pour que le calcul soit juste.'\n      }\n    } else {\n      if (this.interactif) {\n        this.consigne = 'Déterminer le résultat de cette multiplication.'\n      } else {\n        this.consigne = 'Le calcul suivant est faux. Placer la virgule correctement dans le résultat pour que le calcul soit juste.'\n      }\n    }\n\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    this.autoCorrection = []\n    const rang = ['millièmes', 'centièmes', 'dixièmes']\n\n    // Indispensable d'exporter les solutions pour rendre le QCM interactif\n    this.tableauSolutionsDuQcm = []\n    for (let i = 0, texte, texteCorr, coef, nombre, nombreentier, resultat, exposant, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n      coef = -randint(1, 3)\n      if (!this.sup) {\n        exposant = -randint(1, 3)\n      } else {\n        exposant = 0\n      }\n      nombreentier = calcul(randint(10, 1000) + randint(10, 999) * choice([0, 1000]))\n      nombre = calcul(nombreentier * 10 ** exposant)\n      resultat = calcul(nombre * 10 ** coef)\n      texte = `$${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10 ** coef))}$`\n      if (!this.interactif) {\n        texte += `$~~ = ~~\\\\phantom{......}${texNombre2(nombreentier)}$<br>`\n      }\n      texteCorr = `Quand on multiplie par $${texNombre2(calcul(10 ** coef))}=${texFraction(1, calcul(10 ** (-coef)))}$, chaque chiffre prend une valeur $${texNombrec(10 ** (-coef))}$ fois plus petite.<br>`\n      texteCorr += `Le chiffre des unités se positionne donc dans les ${rang[3 + coef]} :<br>`\n      texteCorr += `$${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10 ** coef))} = ${texNombre2(resultat)}$`// ${texNombrec(Math.floor(resultat))}${miseEnEvidence(',')}${texNombrec(resultat-Math.floor(resultat)).replace('0,','')}$`\n\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${texNombre2(resultat)}$`,\n          statut: true\n        },\n        {\n          texte: `$${texNombre2(calcul(resultat / 10))}$`,\n          statut: false\n        },\n        {\n          texte: `$${texNombre2(calcul(resultat * 10))}$`,\n          statut: false\n        },\n        {\n          texte: `$${texNombre2(calcul(resultat / 100))}$`,\n          statut: false\n        }\n      ]\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 4\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n\n  this.besoinFormulaireCaseACocher = ['Nombres entiers', true]\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifType","interactifReady","titre","PlacerLaVirgule","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","consigne","sup","nouvelleVersion","interactif","listeQuestions","listeCorrections","autoCorrection","rang","tableauSolutionsDuQcm","texte","texteCorr","coef","nombre","nombreentier","resultat","exposant","i","cpt","randint","calcul","choice","texNombre2","texFraction","texNombrec","enonce","propositions","statut","options","ordered","lastChoice","propositionsQcm","indexOf","push","listeQuestionsToContenu","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}