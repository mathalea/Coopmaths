{"version":3,"file":"js/51886.0d5c74e8ea41df18e522.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N43-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, listeQuestionsToContenu, choice, combinaisonListes, texNombre2 } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const amcType = 'qcmMult' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\nexport const titre = 'Utiliser les critères de divisibilité (plusieurs possibles)'\n\n/**\n * Un nombre est-il divisible par 2, 3, 5, 9 ?\n *\n *\n * @author Rémi Angot\n * 6N43-2\n */\nexport default function TableauCriteresDeDivisibilite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.nbCols = 1\n  this.sup = false\n\n  this.nouvelleVersion = function () {\n    this.modeQcm = this.interactif\n    this.autoCorrection = []\n    if (!this.modeQcm) {\n      this.consigne =\n        'Compléter le tableau en mettant oui ou non dans chaque case.'\n    } else {\n      this.consigne =\n        'Mettre une croix dans la ou les cases qui conviennent.'\n    }\n    let espace = ''\n    if (context.isHtml) {\n      espace = '&emsp;'\n    } else {\n      espace = '\\\\qquad'\n    }\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    const listeDesNombresPossibles = [\n      'div2',\n      'div3',\n      'div39',\n      'div5',\n      'div25',\n      'div23',\n      'div239',\n      'div35',\n      'div2359',\n      'divrien'\n    ]\n    // divisible par 2, divisible par 3, divisible par 3 et 9...\n\n    const listeDesTypesDeNombres = combinaisonListes(\n      listeDesNombresPossibles,\n      this.nbQuestions\n    )\n    const tableauDeNombres = []; let texte; let texteCorr\n    const tableauDeNombresAvecCorrection = []\n    const listeDeFacteurs = [\n      7,\n      11,\n      13,\n      17,\n      19,\n      23,\n      29,\n      31,\n      37,\n      41,\n      43,\n      47,\n      53,\n      59,\n      61,\n      67,\n      71,\n      73,\n      79,\n      83,\n      89,\n      97,\n      101,\n      103,\n      107,\n      109,\n      113,\n      127,\n      131,\n      137,\n      139,\n      149,\n      151,\n      157,\n      163,\n      167,\n      173,\n      179,\n      181,\n      191,\n      193,\n      197,\n      199,\n      211,\n      223,\n      227,\n      229,\n      233,\n      239,\n      241,\n      251,\n      257,\n      263,\n      269,\n      271,\n      277,\n      281,\n      283,\n      293\n    ]\n    texteCorr = ''\n    texte = ''\n    for (let i = 0; i < this.nbQuestions; i++) {\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].options = {}\n      switch (listeDesTypesDeNombres[i]) {\n        case 'div2':\n          tableauDeNombres[i] = 2 * (this.sup ? choice(listeDeFacteurs.slice(50)) : choice(listeDeFacteurs)) * (this.sup ? choice(listeDeFacteurs.slice(50)) : 1)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par 2',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 3',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 3.\"\n            },\n            {\n              texte: 'par 5',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni 0 ni 5.\"\n            },\n            {\n              texte: 'par 9',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 9.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Le chiffre des unités est 0, 2, 4, 6 ou 8, il est donc divisible par 2.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n\n          break\n        case 'div3':\n          tableauDeNombres[i] = 3 * (this.sup ? choice(listeDeFacteurs.slice(50)) : choice(listeDeFacteurs)) * (this.sup ? choice(listeDeFacteurs.slice(50)) : 1)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par 2',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni 0, ni 2, ni 4, ni 6, ni 8. Il n'est pas divisible par 2.\"\n            },\n            {\n              texte: 'par 3',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 5',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni 0 ni 5.\"\n            },\n            {\n              texte: 'par 9',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 9.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est divisible par 3 car la somme de ses chiffres est divisible par 3.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div39':\n          tableauDeNombres[i] = 9 * (this.sup ? choice(listeDeFacteurs.slice(50)) : choice(listeDeFacteurs)) * (this.sup ? choice(listeDeFacteurs.slice(50)) : 1)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\color{blue} \\\\text{oui} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par 2',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni 0, ni 2, ni 4, ni 6, ni 8. Il n'est pas divisible par 2.\"\n            },\n            {\n              texte: 'par 3',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 5',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni 0 ni 5.\"\n            },\n            {\n              texte: 'par 9',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est divisible par 9 et par 3 car la somme de ses chiffres est divisible par 9.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div5':\n          tableauDeNombres[i] = 5 * (this.sup ? choice(listeDeFacteurs.slice(50)) : choice(listeDeFacteurs)) * (this.sup ? choice(listeDeFacteurs.slice(50)) : 1)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par 2',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni 0, ni 2, ni 4, ni 6, ni 8. Il n'est pas divisible par 2.\"\n            },\n            {\n              texte: 'par 3',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 3.\"\n            },\n            {\n              texte: 'par 5',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 9',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 9.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: `Ce nombre est divisible par 5 car son chiffre des unités est $${tableauDeNombres[i].toString().charAt(tableauDeNombres[i].toString().length - 1)}$.`\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div25':\n          tableauDeNombres[i] = 10 * (this.sup ? choice(listeDeFacteurs.slice(50)) : choice(listeDeFacteurs)) * (this.sup ? choice(listeDeFacteurs.slice(50)) : 1)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par 2',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 3',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 3.\"\n            },\n            {\n              texte: 'par 5',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 9',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 9.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un multiple de 10. Il est donc divisible par 2 et par 5.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div23':\n          tableauDeNombres[i] = 6 * (this.sup ? choice(listeDeFacteurs.slice(50)) : choice(listeDeFacteurs)) * (this.sup ? choice(listeDeFacteurs.slice(50)) : 1)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par 2',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 3',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 5',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni 0 ni 5.\"\n            },\n            {\n              texte: 'par 9',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 9.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par 2.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div239':\n          tableauDeNombres[i] = 18 * (this.sup ? choice(listeDeFacteurs.slice(50)) : choice(listeDeFacteurs)) * (this.sup ? choice(listeDeFacteurs.slice(50)) : 1)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\color{blue} \\\\text{oui} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par 2',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 3',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 5',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni 0 ni 5.\"\n            },\n            {\n              texte: 'par 9',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par 2.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div35':\n          tableauDeNombres[i] = 15 * (this.sup ? choice(listeDeFacteurs.slice(50)) : choice(listeDeFacteurs)) * (this.sup ? choice(listeDeFacteurs.slice(50)) : 1)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\color{blue} \\\\text{oui} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par 2',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni 0, ni 2, ni 4, ni 6, ni 8. Il n'est pas divisible par 2.\"\n            },\n            {\n              texte: 'par 3',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 5',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 9',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 9.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par 2.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div2359':\n          tableauDeNombres[i] = 90 * (this.sup ? choice(listeDeFacteurs.slice(50)) : choice(listeDeFacteurs)) * (this.sup ? choice(listeDeFacteurs.slice(50)) : 1)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\text{oui} & \\\\text{oui} & \\\\text{oui} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par 2',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 3',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 5',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par 9',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par 2.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'divrien':\n          tableauDeNombres[i] = choice(listeDeFacteurs) * (this.sup ? choice(listeDeFacteurs.slice(50)) : 1)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\text{non} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par 2',\n              statut: false,\n              feedback: \"Ce nombre est un nombre impair. Il ,'est pas divisible par 2.\"\n            },\n            {\n              texte: 'par 3',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 3.\"\n            },\n            {\n              texte: 'par 5',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni 0 ni 5.\"\n            },\n            {\n              texte: 'par 9',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par 9.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: true,\n              feedback: 'Correct !'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n      }\n      this.autoCorrection[i].options = {\n        ordered: true,\n        lastChoice: 4\n      }\n      if (!context.isAmc && this.modeQcm) {\n        texte += `$${texNombre2(tableauDeNombres[i])}$ est divisible ${espace}  `\n        texte += propositionsQcm(this, i).texte\n        texte += '<br>'\n      }\n    } // fin de boucle de préparation des question\n    // mise en forme selon les cas de figures\n    // l'enoncé\n    if (context.isHtml && !this.modeQcm) {\n      texte = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n    if (!context.isHtml && !this.modeQcm) {\n      texte = '$\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n    if (!context.isAmc && !this.modeQcm) {\n      texte += '\\\\hline\\n'\n      texte += '\\\\text{... est divisible} & \\\\text{par }2 & \\\\text{par }3 & \\\\text{par }5 & \\\\text{par }9\\\\\\\\\\n'\n      texte += '\\\\hline\\n'\n      for (let k = 0; k < this.nbQuestions; k++) {\n        texte += `${texNombre2(tableauDeNombres[k])} & & & & \\\\\\\\\\n`\n        texte += '\\\\hline\\n'\n      }\n      texte += '\\\\end{array}\\n$'\n    }\n\n    // la correction\n    if (context.isHtml) {\n      texteCorr = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n    if (!context.isHtml && !context.isAmc) {\n      texteCorr = '$\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n\n    if (!context.isAmc) {\n      texteCorr += '\\\\hline\\n'\n      texteCorr += '\\\\text{... est divisible} & \\\\text{par }2 & \\\\text{par }3 & \\\\text{par }5 & \\\\text{par }9\\\\\\\\\\n'\n      texteCorr += '\\\\hline\\n'\n      for (let l = 0; l < this.nbQuestions; l++) {\n        texteCorr += tableauDeNombresAvecCorrection[l]\n        texteCorr += '\\\\hline\\n'\n      }\n      texteCorr += '\\\\end{array}$\\n'\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    if (!context.isAmc) {\n      if (this.interactif) {\n        listeQuestionsToContenu(this)\n      } else {\n        listeQuestionsToContenuSansNumero(this)\n      }\n    }\n  }\n  this.besoinFormulaireCaseACocher = ['Gros nombres', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","TableauCriteresDeDivisibilite","Exercice","this","spacing","spacingCorr","nbQuestions","nbColsCorr","nbCols","sup","nouvelleVersion","modeQcm","interactif","autoCorrection","consigne","espace","context","listeQuestions","listeCorrections","listeDesTypesDeNombres","combinaisonListes","tableauDeNombres","texte","texteCorr","tableauDeNombresAvecCorrection","listeDeFacteurs","i","options","choice","slice","texNombre2","propositions","statut","feedback","enonce","toString","charAt","length","ordered","lastChoice","propositionsQcm","k","l","push","listeQuestionsToContenu","listeQuestionsToContenuSansNumero","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}