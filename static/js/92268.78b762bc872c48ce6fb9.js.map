{"version":3,"file":"js/92268.78b762bc872c48ce6fb9.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N30.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import { combinaisonListes, listeQuestionsToContenu, randint, calcul, htmlConsigne, lettreDepuisChiffre, texNombre } from '../../modules/outils.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { droiteGraduee2, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Lire l’abscisse décimale d’un point'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCOpen'\n\n/**\n * Lire l'abscisse décimale d'un point\n * @author Jean-Claude Lhote et Rémi Angot\n * référence 6N30\n */\nexport default function LireAbscisseDecimale () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Lire l'abscisse de chacun des points suivants.\"\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n  this.listePackages = 'tkz-euclide'\n  this.interactif = false\n  this.nouvelleVersion = function (numeroExercice) {\n    this.autoCorrection = []\n    // numeroExercice est 0 pour l'exercice 1\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (parseInt(this.sup) === 4) { typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else {\n      typesDeQuestions = combinaisonListes(\n        [parseInt(this.sup)],\n        this.nbQuestions\n      )\n    }\n\n    this.contenu = htmlConsigne(this.consigne)\n    for (let i = 0, d = [], abs0, l1, l2, l3, x1, x2, x3, x11, x22, x33, xA, xB, xC, pas1, pas2, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n      if (context.isAmc) {\n        this.autoCorrection[i] = { propositions: [{ statut: 4, feedback: '' }] }\n      }\n      switch (typesDeQuestions[i]) {\n        case 1: // Placer des décimaux sur un axe (1 décimale)\n          abs0 = randint(0, 9)\n          pas1 = 1\n          pas2 = 10\n          break\n\n        case 2: // Placer des décimaux sur un axe (2 décimales)\n          abs0 = randint(0, 90) / 10\n          pas1 = 10\n          pas2 = 10\n          break\n\n        case 3: // Placer des décimaux sur un axe (3 décimales)\n          abs0 = randint(0, 990) / 100\n          pas1 = 100\n          pas2 = 10\n          break\n      }\n      x1 = randint(0, 2)\n      x2 = randint(3, 4)\n      x3 = randint(5, 6)\n      x11 = randint(1, 9)\n      x22 = randint(1, 9)\n      x33 = randint(1, 3)\n      xA = calcul(x1 + x11 / pas2)\n      xB = calcul(x2 + x22 / pas2)\n      xC = calcul(x3 + x33 / pas2)\n      d[2 * i] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        thickSecDist: 1 / pas2,\n        labelListe: [[0, `${texNombre(abs0)}`], [1, `${texNombre(calcul(abs0 + 1 / pas1))}`]],\n        pointListe: [[xA, l1], [xB, l2], [xC, l3]]\n      })\n      d[2 * i + 1] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        thickSecDist: 1 / pas2,\n        labelListe: [\n          [0, `${texNombre(abs0)}`],\n          [xA, texNombre(calcul(xA / pas1 + abs0))],\n          [xB, texNombre(calcul(xB / pas1 + abs0))],\n          [xC, texNombre(calcul(xC / pas1 + abs0))]\n        ],\n        pointListe: [[xA, l1], [xB, l2], [xC, l3]]\n\n      })\n\n      texte = mathalea2d({ xmin: -2, ymin: -1, xmax: 30, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i])\n      texteCorr = mathalea2d({ xmin: -2, ymin: -2, xmax: 30, ymax: 2, pixelsParCm: 20, scale: 0.5 }, d[2 * i + 1])\n\n      if (this.interactif && context.isHtml) {\n        setReponse(this, 3 * i, calcul(xA / pas1 + abs0))\n        setReponse(this, 3 * i + 1, calcul(xB / pas1 + abs0))\n        setReponse(this, 3 * i + 2, calcul(xC / pas1 + abs0))\n        texte += l1 + ajouteChampTexteMathLive(this, 3 * i)\n        texte += l2 + ajouteChampTexteMathLive(this, 3 * i + 1)\n        texte += l3 + ajouteChampTexteMathLive(this, 3 * i + 2)\n      } else {\n        if (context.isAmc) {\n          this.autoCorrection[i].enonce = texte\n          this.autoCorrection[i].propositions[0].texte = texteCorr\n          this.autoCorrection[i].propositions[0].statut = 1\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    '1 : Un chiffre après la virgule\\n2 : Deux chiffres après la virgule \\n3 : Trois chiffres après la virgule\\n4 : Mélange'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","LireAbscisseDecimale","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","listePackages","interactif","nouvelleVersion","numeroExercice","typesDeQuestions","autoCorrection","listeQuestions","listeCorrections","contenu","contenuCorrection","parseInt","combinaisonListes","htmlConsigne","abs0","l1","l2","l3","x1","x2","x3","x11","x22","x33","xA","xB","xC","pas1","pas2","i","d","texte","texteCorr","cpt","lettreDepuisChiffre","context","propositions","statut","feedback","randint","calcul","droiteGraduee2","Unite","Min","Max","axeStyle","pointTaille","pointStyle","labelsPrincipaux","thickSec","thickSecDist","labelListe","texNombre","pointListe","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","setReponse","ajouteChampTexteMathLive","enonce","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}