{"version":3,"file":"js/82568.5993150a9d4693508739.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/6e/can6S01.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { mathalea2d, repere2, traceBarreHorizontale } from '../../../modules/2d'\nimport { prenom, randint } from '../../../modules/outils'\nimport Exercice from '../../Exercice'\nexport const titre = 'Lecture de diagramme en barres'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\n/*!\n * @author Jean-Claude Lhote\n */\nexport default function LectureDiagrammeBarre () {\n  Exercice.call(this)\n  this.typeExercice = 'simple'\n  this.nbQuestions = 1\n  this.interactif = true\n  const valeurs = [['fruits', 'une corbeille', ['bananes', 'oranges', 'pommes']],\n    ['voitures', 'un garage', ['berline', 'utilitaire', 'cross over']],\n    ['vêtements', 'une armoire', ['chemises', 'T-shirts', 'pulls']]]\n  const quidam = prenom()\n  this.nouvelleVersion = function () {\n    const objets = []\n\n    const n = randint(0, 2)\n    const a = randint(2, 10)\n    const b = randint(2, 10, a)\n    const c = randint(2, 10, [a, b])\n    const r = repere2({\n      grilleX: 'pointilles',\n      grilleY: false,\n      yThickListe: [],\n      yLabelListe: [],\n      xUnite: 1,\n      xThickDistance: 1,\n      yMax: 5,\n      xMin: 0,\n      xMax: 11,\n      yMin: 0,\n      axeYSyle: '',\n      axeXStyle: '->',\n      xLegende: `Nombre de ${valeurs[n][0]}`\n    })\n    objets.push(r)\n    objets.push(traceBarreHorizontale(a, 1, valeurs[n][2][0], { epaisseur: 1, couleurDeRemplissage: 'blue', hachures: true }),\n      traceBarreHorizontale(b, 2.5, valeurs[n][2][1], { epaisseur: 1, couleurDeRemplissage: 'red', hachures: true }),\n      traceBarreHorizontale(c, 4, valeurs[n][2][2], { epaisseur: 1, couleurDeRemplissage: 'green', hachures: true }))\n    this.reponse = a + b + c\n    this.question = `${quidam} a compté les ${valeurs[n][0]} dans ${valeurs[n][1]}. Les effectifs sont représentés sur le diagramme ci-dessous.<br>`\n    this.question += mathalea2d({ xmin: -3, xmax: 17, ymin: -2, ymax: 6, scale: 0.5 }, objets)\n    this.question += `<br> Combien y a-t-il de ${valeurs[n][0]} en tout ?`\n    this.correction = `Il y a $${a}+${b}+${c} = ${this.reponse}$ ${valeurs[n][0]} en tout.`\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","LectureDiagrammeBarre","typeExercice","valeurs","quidam","prenom","objets","n","randint","a","b","c","r","repere2","grilleX","grilleY","yThickListe","yLabelListe","xUnite","xThickDistance","yMax","xMin","xMax","yMin","axeYSyle","axeXStyle","xLegende","traceBarreHorizontale","epaisseur","couleurDeRemplissage","hachures","reponse","question","mathalea2d","xmin","xmax","ymin","ymax","scale","correction"],"sourceRoot":""}