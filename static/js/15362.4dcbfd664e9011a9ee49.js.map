{"version":3,"file":"js/15362.4dcbfd664e9011a9ee49.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N31-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, texNombre, infoMessage } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Intercaler un nombre décimal entre deux nombres décimaux'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const dateDeModifImportante = '29/10/2021'\n\n/**\n * Intercaler un nombre décimal entre deux décimaux\n * @author Rémi Angot\n * Référence 6N31-4\n*/\nexport default function IntercalerDecimalEntre2Decimaux () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Compléter avec un nombre décimal.'\n  this.nbQuestions = 6\n  this.nbCols = 2 // Nombre de colonnes pour la sortie LaTeX\n  this.nbColsCorr = 2 // Nombre de colonnes dans la correction pour la sortie LaTeX\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    const listeTypeDeQuestionsDisponibles = ['a,b1', 'a,b2', 'a,9', 'a,bc', 'a,b9', 'a,99', 'a,b0c', 'a,1', 'a,01', 'a']\n    const listeTypeDeQuestions = combinaisonListes(listeTypeDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, a, b, r, u, d1, c1, c2, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case 'a,b1':\n          d1 = randint(1, 6)\n          u = randint(1, 39)\n          a = calcul(u + d1 / 10)\n          b = calcul(u + randint(d1 + 2, 9) / 10)\n          r = calcul(a + 1 / 10)\n          break\n        case 'a,b2':\n          d1 = randint(1, 8)\n          u = randint(1, 39)\n          a = calcul(u + d1 / 10)\n          b = calcul(u + (d1 + 1) / 10)\n          r = calcul(a + 5 / 100)\n          break\n        case 'a,9':\n          a = calcul(randint(1, 39) + 9 / 10)\n          b = calcul(a + 1 / 10)\n          r = calcul(a + 5 / 100)\n          break\n        case 'a,bc':\n          u = randint(1, 39)\n          d1 = randint(1, 9)\n          c1 = randint(1, 8)\n          c2 = c1 + 1\n          a = calcul(u + d1 / 10 + c1 / 100)\n          b = calcul(u + d1 / 10 + c2 / 100)\n          r = calcul(a + 5 / 1000)\n          break\n        case 'a,b9':\n          u = randint(1, 39)\n          d1 = randint(1, 9)\n          c1 = 9\n          a = calcul(u + d1 / 10 + c1 / 100)\n          b = calcul(u + (d1 + 1) / 10)\n          r = calcul(a + 5 / 1000)\n          break\n        case 'a,99':\n          u = randint(1, 39)\n          a = calcul(u + 99 / 100)\n          b = u + 1\n          r = calcul(a + 5 / 1000)\n          break\n        case 'a,b0c':\n          u = randint(1, 39)\n          d1 = randint(1, 6)\n          c1 = randint(1, 8)\n          c2 = c1 + 1\n          a = calcul(u + d1 / 10 + c1 / 1000)\n          b = calcul(u + randint(d1 + 1, 9) / 10)\n          if (calcul(b - a) > 0.1) {\n            r = calcul(u + (d1 + 1) / 10)\n          } else {\n            r = calcul(u + (d1) / 10 + 1 / 100)\n          }\n          break\n        case 'a,1':\n          u = randint(1, 39)\n          d1 = 1\n          a = calcul(u)\n          b = calcul(u + d1 / 10)\n          r = calcul(u + 5 / 100)\n          break\n\n        case 'a,01':\n          u = randint(1, 39)\n          c1 = 1\n          a = calcul(u)\n          b = calcul(u + c1 / 100)\n          r = calcul(u + 5 / 1000)\n          break\n\n        case 'a':\n          a = randint(1, 39)\n          b = a + 1\n          r = calcul(a + 1 / 10)\n          break\n      }\n      if (this.interactif) {\n        texte = `$${texNombre(a)}<$` + ajouteChampTexteMathLive(this, i, 'inline') + `$\\\\quad<${texNombre(b)}$`\n        setReponse(this, i, [a, b], { formatInteractif: 'intervalleStrict' })\n      } else {\n        texte = `$${texNombre(a)}<\\\\ldots\\\\ldots<${texNombre(b)}$`\n      }\n      texteCorr = `$${texNombre(a)}<${texNombre(r)}<${texNombre(b)}$`\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n    if (context.isHtml) {\n      this.contenuCorrection = infoMessage({ titre: 'Remarque', texte: \"Il y a une infinité de solutions. La correction ne montre qu'une possibilité.\", couleur: 'black' }) + this.contenuCorrection\n    }\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","dateDeModifImportante","IntercalerDecimalEntre2Decimaux","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","r","u","d1","c1","c2","i","cpt","randint","calcul","interactif","texNombre","ajouteChampTexteMathLive","setReponse","formatInteractif","indexOf","push","listeQuestionsToContenu","context","contenuCorrection","infoMessage","couleur","boutonAide","consigneCorrection","introduction","contenu","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}