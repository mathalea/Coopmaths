{"version":3,"file":"js/38307.778a0cd712c0827a8126.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["/* eslint-disable no-sequences */\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, calcul, resolutionSystemeLineaire2x2 } from '../../modules/outils.js'\nimport { courbe2, mathalea2d, repere2 } from '../../modules/2d.js'\nexport const titre = 'Lire les antécédents d’un nombre à partir d’un graphique'\n\n/**\n* Un graphique étant tracé, déterminer les antécédents de nombres donnés.\n* La fonction est un polynôme de degré 1, 2 ou 3 et les nombres des questions ne sont que des entiers.\n*\n* @author Rémi Angot\n* 3F13\n*/\nexport default function AntecedentGraphique () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.sup = 2\n  this.spacing = 1\n  context.isHtml ? this.spacingCorr = 3 : this.spacingCorr = 1\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.dimensionsDivMg32 = [800, 600]\n  this.pasDeVersionLatex = false\n  this.nbCols = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    let a, b, c, x1, x2, x3, fx1, fx2, fx3, numa, dena, numb, denb, texte, texteCorr, f\n    this.sup = Number(this.sup)\n\n    function initialiseVariables () {\n      if (context.isHtml) { // repère -10 || 10\n        x1 = randint(-6, -3)\n        x2 = randint(x1 + 3, 2)\n        x3 = randint(x2 + 2, 8)\n        fx1 = randint(-5, 5)\n        fx2 = randint(-6, 6, fx1)\n        fx3 = randint(-5, 5)\n        c = randint(-5, 5)\n      } else { // repère -5 || 5\n        x1 = randint(-4, -2)\n        x2 = randint(-1, 2, [0])\n        x3 = randint(3, 4)\n        fx1 = randint(-4, 4)\n        fx2 = randint(-4, 4, fx1)\n        fx3 = randint(-4, 4)\n        c = randint(-3, 3)\n      }\n    };\n\n    initialiseVariables()\n\n    texte = 'On a tracé ci-dessous la courbe représentative de la fonction $f$.<br>'\n\n    if (this.sup === 1) {\n      a = calcul((fx2 - fx1) / (x2 - x1))\n      b = calcul(fx1 - a * x1)\n      f = x => a * x + b\n      if (fx2 !== fx1) {\n        texte += `Déterminer par lecture graphique les antécédents de $${fx1}$ et de $${fx2}$ par cette fonction $f$.<br><br>`\n        texteCorr = `L'antécédent de $${fx1}$ est $${x1}$, on note $f(${x1})=${fx1}$.<br>`\n        texteCorr += `L'antécédent de $${fx2}$ est $${x2}$, on note $f(${x2})=${fx2}$.`\n      } else {\n        texte += `Déterminer par lecture graphique les antécédents de $${fx1}$ par cette fonction $f$.<br><br>`\n        texteCorr = `$${fx1}$ possède une infinité d'antécédents : on note $f(x)=${fx1}$ quel que soit $x$.<br>`\n      }\n    }\n\n    if (this.sup === 2) {\n      if (randint(1, 4) < 2) { // une fois sur 4 il n'y a qu'un seul antécédent\n        const x0 = randint(-2, 2)\n        let fx0 = randint(-4, 4)\n        if (!context.isHtml) {\n          fx0 = randint(-2, 2)\n        }\n        a = randint(-3, 3, 0)\n        texte += `Déterminer par lecture graphique le (ou les) antécédent(s) de $${fx0}$ par cette fonction $f$.<br><br>`\n        texteCorr = `$${fx0}$ a un unique antécédent $${x0}$, on note $f(${x0})=${fx0}$.<br>`\n        f = x => a * (x - x0) ** 2 + fx0\n      } else {\n        fx3 = fx1;\n        [[numa, dena], [numb, denb]] = resolutionSystemeLineaire2x2(x1, x3, fx1, fx3, c)\n        while (dena === 0 || denb === 0 || numa === 0) {\n          x1 = randint(-4, -1)\n          x3 = randint(1, 4)\n          fx1 = randint(-7, 7)\n          fx3 = fx1\n          c = randint(-6, 6);\n          [[numa, dena], [numb, denb]] = resolutionSystemeLineaire2x2(x1, x3, fx1, fx3, c)\n        }\n        a = numa / dena\n        b = numb / denb\n        x2 = 0\n        fx2 = c\n        f = x => a * x ** 2 + b * x + c\n        texte += `Déterminer par lecture graphique le (ou les) antécédent(s) de $${fx1}$ par cette fonction $f$.<br><br>`\n        texteCorr = `$${fx1}$ a deux antécédents $${x1}$ et $${x3}$, on note $f(${x1})=f(${x3})=${fx1}$.<br>`\n      }\n    }\n    const r = repere2({ xMin: -10, xMax: 10, yMin: -10, yMax: 10 })\n    const Cf = courbe2(f, { repere: r, step: 0.2, color: 'purple' })\n    texte += mathalea2d({ xmin: -10, xmax: 10, ymin: -10, ymax: 10, scale: 0.5 }, r, Cf)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n\n  this.besoinFormulaireNumerique = ['Type de fonctions', 2, '1 : Affine\\n2 : Polynôme du 2nd degré']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","AntecedentGraphique","Exercice","this","consigne","sup","spacing","context","spacingCorr","nbQuestions","nbQuestionsModifiable","dimensionsDivMg32","pasDeVersionLatex","nbCols","nouvelleVersion","a","b","c","x1","x2","x3","fx1","fx2","fx3","numa","dena","numb","denb","texte","texteCorr","f","listeQuestions","listeCorrections","contenu","contenuCorrection","Number","randint","calcul","x","x0","fx0","resolutionSystemeLineaire2x2","r","repere2","xMin","xMax","yMin","yMax","Cf","courbe2","repere","step","color","mathalea2d","xmin","xmax","ymin","ymax","scale","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","autoCorrection","tableauSolutionsDuQcm","listePackages","consigneModifiable","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}