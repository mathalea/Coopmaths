{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5L14-2.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","interactifReady","amcType","titre","ExerciceSubstituer","difficulte","Exercice","this","sup","interactif","consigne","spacing","consigneModifiable","nouvelleVersion","reponse","autoCorrection","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","nbQuestions","k","randint","k2","k3","choice","valeursPossibles","range","x","enleveElement","y","z","context","texte","texteCorr","i","cpt","lettreDepuisChiffre","ecritureParentheseSiNegatif","ajouteChampTexte","enonce","propositions","statut","feedback","valeur","param","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","exerciceInteractif","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exercice","document","addEventListener","button","querySelector","event","spanReponseLigne","champTexte","getElementById","value","replaceAll","toString","innerHTML","readOnly","style","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","length","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","messageFeedback","id","message","type","querySelectorAll","uicheck","exerciceQcm","propositionsQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","texteApres","inline","numeric","setReponse","a","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","includes","div","cssIcon","remove","divTitre","test","messageUtilisateur","code","width"],"mappings":"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","file":"js/2900.936b44e073ed65558886.js","sourcesContent":["\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, range, combinaisonListes, ecritureParentheseSiNegatif, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { ajouteChampTexte, exerciceInteractif } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const interactifReady = true\nexport const amcType =4 //type de question AMC NumeriqueChoice \n\nexport const titre = 'Substitution'\n\n/**\n* x, y, z étant 3 entiers compris entre 2 et 9, calculer :\n* * kx\n* * kx-y\n* * xy\n* * x+y\n* * x+y+z\n* * x(y+z)\n* * x^2\n* * x^2+ky\n* * x^2+y^2\n* * ax^2+y^2\n* * ax^2+bx+c\n* @Auteur Rémi Angot\n* 5L14-2\n*/\nexport default function ExerciceSubstituer (difficulte = 1) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = difficulte\n  this.titre = titre\n  this.amcType = amcType\n  this.interactif = true\n  this.interactifReady = interactifReady\n  this.consigne = 'Calculer'\n  this.spacing = 1\n  this.consigneModifiable = false\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let reponse\n    const typeDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let k = randint(2, 9)\n    let k2 = randint(2, 9)\n    let k3 = randint(2, 9)\n    if (this.sup > 1) { // si difficulté 2, k, k2 et k3 peuvent être négatifs !!! La correction est à faire. Exercice non fini\n      k = k * choice([-1, 1])\n      k2 = k2 * choice([-1, 1])\n      k3 = k3 * choice([-1, 1])\n    }\n    const valeursPossibles = range(9, [0, 1]) // Toutes les valeurs de 2 à 9\n    const x = choice(valeursPossibles)\n    enleveElement(valeursPossibles, x)\n    const y = choice(valeursPossibles)\n    enleveElement(valeursPossibles, y)\n    const z = choice(valeursPossibles)\n    // x, y et z sont différents\n    if (context.isHtml) {\n      this.consigne = `Calculer pour $\\\\boldsymbol{x=${x}}$, $\\\\boldsymbol{y=${y}}$ et $\\\\boldsymbol{z=${z}}$.`\n    } else {\n      this.consigne = `Calculer pour $x=${x}$, $y=${y}$ et $z=${z}$.`\n    }\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte = `$${lettreDepuisChiffre(i + 1)}=${k}x$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${k}x=${k}\\\\times  ${x}=${k * x}$`\n          reponse = k * x\n          break\n        case 2:\n          texte = `$${lettreDepuisChiffre(i + 1)}=${k}x-y$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${k}x-y=${k}\\\\times  ${x}-${y}=${k * x - y}$`\n          reponse = k * x - y\n          break\n        case 3:\n          texte = `$${lettreDepuisChiffre(i + 1)}=xy$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=xy=${x}\\\\times  ${y}=${x * y}$`\n          reponse = x * y\n          break\n        case 4:\n          texte = `$${lettreDepuisChiffre(i + 1)}=x+y$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=x+y=${x}+${y}=${x + y}$`\n          reponse = x + y\n          break\n        case 5:\n          texte = `$${lettreDepuisChiffre(i + 1)}=xy+z$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=xy+z=${x}\\\\times  ${y}+${z}=${x * y + z}$`\n          reponse = x * y + z\n          break\n        case 6:\n          texte = `$${lettreDepuisChiffre(i + 1)}=x(y+z)$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=x(y+z)=${x}\\\\times (${y}+${z})=${x * (y + z)}$`\n          reponse = x * (y + z)\n          break\n        case 7:\n          texte = `$${lettreDepuisChiffre(i + 1)}=x^2+${ecritureParentheseSiNegatif(k)}y$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=x^2+${ecritureParentheseSiNegatif(k)}y=${x}^2+${ecritureParentheseSiNegatif(k)}\\\\times  ${y}=${x * x}+${ecritureParentheseSiNegatif(k)}\\\\times  ${y}=${x * x + k * y}$`\n          reponse = x * x + k * y\n          break\n        case 8:\n          texte = `$${lettreDepuisChiffre(i + 1)}=x^2+y^2$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=x^2+y^2=${x}^2+${y}^2=${x * x}+${y * y}=${x * x + y * y}$`\n          reponse = x * x + y * y\n          break\n        case 9:\n          texte = `$${lettreDepuisChiffre(i + 1)}=${k}x^2+y^2$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${k}x^2+y^2=${k}\\\\times  ${x}^2+${y}^2=${k}\\\\times  ${x * x}+${y * y}=${k * x * x + y * y}$`\n          reponse = k * x * x + y * y\n          break\n        case 10:\n          texte = `$${lettreDepuisChiffre(i + 1)}=${k}x^2+${ecritureParentheseSiNegatif(k2)}x+${ecritureParentheseSiNegatif(k3)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${k}x^2+${ecritureParentheseSiNegatif(k2)}x+${ecritureParentheseSiNegatif(k3)}=${k}\\\\times  ${x}^2+${ecritureParentheseSiNegatif(k2)}\\\\times  ${ecritureParentheseSiNegatif(x)}+${ecritureParentheseSiNegatif(k3)}=${k}\\\\times  ${x * x}+${ecritureParentheseSiNegatif(k2)}\\\\times  ${x}+${ecritureParentheseSiNegatif(k3)}=${k * x * x + k2 * x + k3}$`\n          reponse = k * x * x + k2 * x + k3\n          break\n      }\n      if (this.interactif) {\n        texte += ajouteChampTexte(this, i, {\n          texte: '$~=$'\n        })\n      }\n      this.autoCorrection[i] = {\n        enonce: texte + '\\\\\\\\' + this.consigne,\n        propositions: [\n          {\n            texte: texteCorr,\n            statut: 'emplacement à louer',\n            feedback: ''\n          }\n        ],\n        reponse: {\n          texte: 'résultat',\n          valeur: reponse,\n          param: {\n            digits: 3,\n            decimals: 0,\n            signe: false,\n            exposantNbChiffres: 0,\n            exposantSigne: false,\n            approx: 0\n          }\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n\n        i++\n      }\n      cpt++\n    }\n    if (context.isAmc) {\n      \n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Multiplication par un facteur positif\\n2: Multiplication par un facteur relatif']\n  exerciceInteractif(this)\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              message: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.',',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n\n\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (var prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n// Module regroupant les fonctions de gestions des erreurs.\n\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} feedback\n * @param {string} [feedback.message]\n * @param {string} [feedback.type]\n * @param {string} [feedback.titre]\n */\nexport function addFeedback (container, { message = 'Une erreur est survenue', type = 'erreur', titre } = {}) {\n  if (!types.includes(type)) {\n    console.error(Error(`type de message inconnu : ${type}`))\n    type = 'error'\n  }\n  const cssDiv = type === 'info' ? '' : type\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = type === 'error'\n    ? 'frown outline'\n    : (type === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  if (/<[a-zA-Z0-9_ \"']+/.test(message)) div.innerHTML += message\n  else addText(div, message)\n  return div\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        type: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} feedback\n * @param {string} feedback.id id du div conteneur à utiliser\n * @param {string} feedback.message Le message à afficher\n * @param {string} feedback.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, message = '', type = 'error' } = {}) {\n  if (!id || !message) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message, type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}