{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N23-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","LireAbscisseDecimaleTroisFormes","Exercice","this","niveau","consigne","context","spacing","spacingCorr","vspace","nbCols","nbColsCorr","sup","nbQuestions","nbQuestionsModifiable","nouvelleVersion","d1","listeQuestions","listeCorrections","extremite","texte","texteCorr","noms","choisitLettresDifferentes","thickOff","xmin","xmax","x1","x2","x3","tableau","parseInt","randint","calcul","shuffle","droiteGraduee2","x","y","Min","axePosition","Max","thickSec","thickTer","Unite","thickOffset","thickCouleur","axeCouleur","axeHauteur","pointListe","pointTaille","pointOpacite","pointCouleur","pointStyle","pointEpaisseur","axeStyle","numAlpha","texNombre","Math","floor","texFraction","thickDistance","thickSecDist","thickTerDist","labelListe","mathalea2d","ymin","ymax","pixelsParCm","scale","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"sMAIO,MAAMA,EAAQ,iDAKN,SAASC,IACtBC,eAAcC,MACdA,KAAKC,OAAS,UACdD,KAAKE,SAAW,GACZC,aACFH,KAAKI,QAAU,EACfJ,KAAKK,YAAc,IAEnBL,KAAKI,QAAU,EACfJ,KAAKK,YAAc,GAErBL,KAAKM,QAAU,EACfN,KAAKO,OAAS,EACdP,KAAKQ,WAAa,EAClBR,KAAKS,IAAM,EACXT,KAAKU,YAAc,EACnBV,KAAKW,uBAAwB,EAE7BX,KAAKY,gBAAkB,WAIrB,IAAIC,EAHJb,KAAKc,eAAiB,GACtBd,KAAKe,iBAAmB,GAEhB,IAAwCC,EAApCC,EAAQ,GAAQC,EAAY,GAAmB,MAAMC,GAAOC,SAA0B,EAAG,KACrG,IAAwCC,EAAgCC,EAAUC,EAA9EC,EAAK,EAAOC,EAAK,EAAOC,EAAK,EAAqBC,EAAU,GACrC,IAAvBC,SAAS5B,KAAKS,MACI,OAAhBT,KAAKC,QACPqB,EAAO,EACPD,EAAW,IAEXC,GAAOO,SAAQ,EAAG,IAClBR,GAAWS,SAAO,EAAK,IAAOF,SAAS5B,KAAKS,OAE9BO,EAAH,IAATM,EAAwB,MACX,KACjBC,EAAOD,EAAO,EACdE,EAAY,GAAPF,EAA4B,IAAhBO,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GACjDJ,EAAY,GAAPH,EAA4B,IAAhBO,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GACjDH,EAAY,GAAPJ,EAA4B,IAAhBO,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GACjDL,GAAKM,SAAON,EAAK,IACjBC,GAAKK,SAAOL,EAAK,IACjBC,GAAKI,SAAOJ,EAAK,IAEjBC,GAAUI,SAAQ,CAACP,EAAIC,EAAIC,IAC3BF,EAAKG,EAAQ,GACbF,EAAKE,EAAQ,GACbD,EAAKC,EAAQ,GAEbd,GAAKmB,SAAe,CAClBC,EAAG,EACHC,EAAG,EACHC,IAAKb,EACLc,YAAa,IACbC,IAAKd,EACLe,UAAU,EACVC,UAAU,EACVC,MAAO,EACPC,YAAapB,EACbqB,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,WAAY,CAAC,CAACrB,EAAK,GAAEL,EAAK,MAAO,CAACM,EAAK,GAAEN,EAAK,MAAO,CAACO,EAAK,GAAEP,EAAK,OAClE2B,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAUnC,IAEZC,EAAS,IAAEmC,SAAS,2BAA2BjC,EAAK,+BACpDF,GAAU,IAAEmC,SAAS,2BAA2BjC,EAAK,uEACrDF,GAAU,IAAEmC,SAAS,2BAA2BjC,EAAK,gDACrDD,EAAa,IAAEkC,SAAS,oBAAoBjC,EAAK,cAAakC,SAAU7B,WACxEN,GAAc,IAAEkC,SAAS,oBAAoBjC,EAAK,cAAakC,SAAUC,KAAKC,MAAM9B,UAAU+B,UAAY1B,SAAO,IAAML,EAAK6B,KAAKC,MAAM9B,KAAO,YAC9IP,GAAc,IAAEkC,SAAS,oBAAoBjC,EAAK,cAAaqC,UAAY1B,SAAY,GAALJ,GAAU,SAC5D,IAAvBE,SAAS5B,KAAKS,MACH,OAAhBT,KAAKC,QACPqB,EAAO,EACPD,EAAW,IAEXC,GAAOO,SAAQ,EAAG,IAAM,GACxBR,GAAWS,SAAO,EAAK,IAAOF,SAAS5B,KAAKS,OAE9BO,EAAH,IAATM,EAAwB,MACX,KACjBC,GAAOO,SAAOR,EAAO,KACrBE,EAAK,GAAY,IAAPF,EAA6B,IAAhBO,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GACvDJ,EAAK,GAAY,IAAPH,EAA6B,IAAhBO,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GACvDH,EAAK,GAAY,IAAPJ,EAA6B,IAAhBO,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GAEvDL,GAAKM,SAAON,EAAK,KACjBC,GAAKK,SAAOL,EAAK,KACjBC,GAAKI,SAAOJ,EAAK,KACjBC,GAAUI,SAAQ,CAACP,EAAIC,EAAIC,IAC3BF,EAAKG,EAAQ,GACbF,EAAKE,EAAQ,GACbD,EAAKC,EAAQ,GAEbd,GAAKmB,SAAe,CAClBC,EAAG,EACHC,EAAG,EACHC,IAAKb,EACLc,YAAa,IACbC,IAAKd,EACLe,UAAU,EACVC,UAAU,EACVC,MAAO,GACPC,YAAapB,EACbqB,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,WAAY,CAAC,CAACrB,EAAK,GAAEL,EAAK,MAAO,CAACM,EAAK,GAAEN,EAAK,MAAO,CAACO,EAAK,GAAEP,EAAK,OAClE2B,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAUnC,IAEZC,EAAS,IAAEmC,SAAS,2BAA2BjC,EAAK,+BACpDF,GAAU,IAAEmC,SAAS,2BAA2BjC,EAAK,gEACrDF,GAAU,IAAEmC,SAAS,2BAA2BjC,EAAK,gDACrDD,EAAa,IAAEkC,SAAS,oBAAoBjC,EAAK,cAAakC,SAAU7B,WACxEN,GAAc,IAAEkC,SAAS,oBAAoBjC,EAAK,cAAakC,SAAUC,KAAKC,MAAM9B,UAAU+B,UAAY1B,SAAO,KAAOL,EAAK6B,KAAKC,MAAM9B,KAAO,aAC/IP,GAAc,IAAEkC,SAAS,oBAAoBjC,EAAK,cAAaqC,UAAY1B,SAAY,IAALJ,GAAW,UAC7D,IAAvBE,SAAS5B,KAAKS,OACH,OAAhBT,KAAKC,QACPqB,EAAO,EACPD,EAAW,IAEXC,GAAOQ,UAAOD,SAAQ,EAAG,IAAsB,IAAhBA,SAAQ,EAAG,IAC1CR,GAAWS,SAAO,EAAK,IAAOF,SAAS5B,KAAKS,OAE9BO,EAAH,IAATM,EAAwB,MACX,KACjBC,GAAOO,SAAOR,EAAO,KAErBE,EAAY,IAAPF,EAA8B,IAAhBO,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GACnDJ,EAAY,IAAPH,EAA8B,IAAhBO,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GACnDH,EAAY,IAAPJ,EAAgC,IAAlBO,SAAQ,GAAI,KAAWA,SAAQ,EAAG,GACrDL,GAAKM,SAAON,EAAK,KACjBC,GAAKK,SAAOL,EAAK,KACjBC,GAAKI,SAAOJ,EAAK,KAEjBC,GAAUI,SAAQ,CAACP,EAAIC,EAAIC,IAC3BF,EAAKG,EAAQ,GACbF,EAAKE,EAAQ,GACbD,EAAKC,EAAQ,GACbd,GAAKmB,SAAe,CAClBC,EAAG,EACHC,EAAG,EACHC,IAAKb,EACLc,YAAa,IACbC,IAAKd,EACLe,UAAU,EACVC,UAAU,EACVC,MAAO,IACPC,YAAapB,EACboC,cAAe,GACfC,aAAc,IACdC,aAAc,KACdjB,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,WAAY,CAAC,CAACrB,EAAK,GAAEL,EAAK,MAAO,CAACM,EAAK,GAAEN,EAAK,MAAO,CAACO,EAAK,GAAEP,EAAK,OAClEyC,WAAY,CAAC,CAACtC,EAAO,KAAM+B,UAAUvB,SAAOR,EAAO,OAAS,CAACA,EAAO,IAAK+B,UAAUvB,SAAOR,EAAO,OACjGwB,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAUnC,IAGZC,EAAS,IAAEmC,SAAS,2BAA2BjC,EAAK,+BACpDF,GAAU,IAAEmC,SAAS,2BAA2BjC,EAAK,gEACrDF,GAAU,IAAEmC,SAAS,2BAA2BjC,EAAK,gDACrDD,EAAa,IAAEkC,SAAS,oBAAoBjC,EAAK,cAAakC,SAAU7B,WACxEN,GAAc,IAAEkC,SAAS,oBAAoBjC,EAAK,cAAakC,SAAUC,KAAKC,MAAM9B,UAAU+B,UAAY1B,SAAO,KAAQL,EAAK6B,KAAKC,MAAM9B,KAAO,aAChJP,GAAc,IAAEkC,SAAS,oBAAoBjC,EAAK,cAAaqC,UAAY1B,SAAY,IAALJ,GAAY,UAEhGT,IAAS4C,SAAW,CAAEvC,MAAO,IAAKC,KAAM,GAAIuC,MAAO,IAAKC,KAAM,IAAKC,YAAa,GAAIC,MAAO,IAAOpD,GAClGb,KAAKc,eAAeoD,KAAKjD,GACzBjB,KAAKe,iBAAiBmD,KAAKhD,IAC3BiD,SAAkCnE,OAEpCA,KAAKoE,0BAA4B,CAAC,uBAAwB,EAAG,sD,6BC5LhD,SAASrE,IAEtBC,KAAKH,MAAQ,GACbG,KAAKE,SAAW,GAChBF,KAAKqE,mBAAqB,GAC1BrE,KAAKc,eAAiB,GACtBd,KAAKe,iBAAmB,GACxBf,KAAKsE,aAAe,GACpBtE,KAAKuE,QAAU,GACfvE,KAAKwE,kBAAoB,GACzBxE,KAAKU,YAAc,GACnBV,KAAKO,OAAS,EACdP,KAAKQ,WAAa,EAClBR,KAAKI,QAAU,EACfJ,KAAKK,YAAc,EACnBL,KAAKyE,QAAS,EAEdzE,KAAKoE,2BAA4B,EACjCpE,KAAK0E,uBAAwB,EAC7B1E,KAAK2E,6BAA8B,EACnC3E,KAAK4E,4BAA6B,EAClC5E,KAAK6E,wBAAyB,EAC9B7E,KAAK8E,8BAA+B,EACpC9E,KAAK+E,4BAA6B,EAClC/E,KAAKgF,wBAAyB,EAC9BhF,KAAKiF,8BAA+B,EACpCjF,KAAKkF,oBAAqB,EAC1BlF,KAAKW,uBAAwB,EAC7BX,KAAKmF,kBAAmB,EACxBnF,KAAKoF,sBAAuB,EAC5BpF,KAAKqF,mBAAoB,EACzBrF,KAAKsF,uBAAwB,EAC7BtF,KAAKuF,+BAAgC,EACrCvF,KAAKwF,qBAAsB,EAC3BxF,KAAKyF,MAAQ,GACbzF,KAAK0F,YAAa,EAClB1F,KAAK2F,gBAAkB,GAMvB3F,KAAK4F,mBAAoB,EACzB5F,KAAK6F,YAAa,EAClB7F,KAAK8F,uBAAwB,EAC7B9F,KAAK+F,KAAM,EACX/F,KAAKgG,eAAgB,EACrBhG,KAAKiG,SAAU,EACfjG,KAAKkG,eAAiB,GACtBlG,KAAKmG,sBAAwB,GAC7BnG,KAAKoG,cAAe,EACpBpG,KAAKY,gBAAkB,SAAUyF,KACjCrG,KAAKsG,cAAgB,G","file":"js/43667.ae3dc521679c48a3d4fe.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, shuffle, calcul, choisitLettresDifferentes, texNombre, texFraction, numAlpha } from '../../modules/outils.js'\nimport { droiteGraduee2, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Lire des abscisses décimales sous trois formes'\n\n/**\n * 6N23-2\n */\nexport default function LireAbscisseDecimaleTroisFormes () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.niveau = 'sixième'\n  this.consigne = ''\n  if (context.isHtml) {\n    this.spacing = 2\n    this.spacingCorr = 3\n  } else {\n    this.spacing = 1\n    this.spacingCorr = 1\n  }\n  this.vspace = -1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let d1; let texte = ''; let texteCorr = ''; let extremite; const noms = choisitLettresDifferentes(3, 'Q')\n    let x1 = 0; let x2 = 0; let x3 = 0; let thickOff; let tableau = []; let xmin; let xmax\n    if (parseInt(this.sup) === 1) {\n      if (this.niveau === 'CM') {\n        xmin = 0\n        thickOff = 0\n      } else {\n        xmin = randint(1, 15)\n        thickOff = calcul(2 / (10 ** (parseInt(this.sup))))\n      }\n      if (xmin === 0) extremite = '|->'\n      else extremite = '->'\n      xmax = xmin + 9\n      x1 = xmin * 10 + randint(0, 2) * 10 + randint(2, 8)\n      x2 = xmin * 10 + randint(3, 5) * 10 + randint(2, 8)\n      x3 = xmin * 10 + randint(6, 8) * 10 + randint(2, 8)\n      x1 = calcul(x1 / 10)\n      x2 = calcul(x2 / 10)\n      x3 = calcul(x3 / 10)\n\n      tableau = shuffle([x1, x2, x3])\n      x1 = tableau[0]\n      x2 = tableau[1]\n      x3 = tableau[2]\n\n      d1 = droiteGraduee2({\n        x: 0,\n        y: 0,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: false,\n        Unite: 3,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        pointListe: [[x1, `${noms[0]}`], [x2, `${noms[1]}`], [x3, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      texte = `${numAlpha(0)} Donner l'abscisse de ${noms[0]} en écriture décimale.<br>`\n      texte += `${numAlpha(1)} Donner l'abscisse de ${noms[1]} comme la somme d'un nombre entier et d'une fraction décimale.<br>`\n      texte += `${numAlpha(2)} Donner l'abscisse de ${noms[2]} sous la forme d'une fraction décimale.<br>`\n      texteCorr = `${numAlpha(0)} L'abscisse de ${noms[0]} est : $${texNombre(x1)}$.<br>`\n      texteCorr += `${numAlpha(1)} L'abscisse de ${noms[1]} est : $${texNombre(Math.floor(x2))} + ${texFraction(calcul(10 * (x2 - Math.floor(x2))), 10)}$.<br>`\n      texteCorr += `${numAlpha(2)} L'abscisse de ${noms[2]} est : $${texFraction(calcul(x3 * 10), 10)}$.`\n    } else if (parseInt(this.sup) === 2) {\n      if (this.niveau === 'CM') {\n        xmin = 0\n        thickOff = 0\n      } else {\n        xmin = randint(1, 15) - 0.1\n        thickOff = calcul(2 / (10 ** (parseInt(this.sup))))\n      }\n      if (xmin === 0) extremite = '|->'\n      else extremite = '->'\n      xmax = calcul(xmin + 1.5)\n      x1 = 10 + xmin * 100 + randint(1, 3) * 10 + randint(2, 8)\n      x2 = 10 + xmin * 100 + randint(4, 6) * 10 + randint(2, 8)\n      x3 = 10 + xmin * 100 + randint(7, 9) * 10 + randint(2, 8)\n\n      x1 = calcul(x1 / 100)\n      x2 = calcul(x2 / 100)\n      x3 = calcul(x3 / 100)\n      tableau = shuffle([x1, x2, x3])\n      x1 = tableau[0]\n      x2 = tableau[1]\n      x3 = tableau[2]\n\n      d1 = droiteGraduee2({\n        x: 0,\n        y: 0,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: true,\n        Unite: 20,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        pointListe: [[x1, `${noms[0]}`], [x2, `${noms[1]}`], [x3, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      texte = `${numAlpha(0)} Donner l'abscisse de ${noms[0]} en écriture décimale.<br>`\n      texte += `${numAlpha(1)} Donner l'abscisse de ${noms[1]} comme la somme d'un entier et d'une fraction décimale.<br>`\n      texte += `${numAlpha(2)} Donner l'abscisse de ${noms[2]} sous la forme d'une fraction décimale.<br>`\n      texteCorr = `${numAlpha(0)} L'abscisse de ${noms[0]} est : $${texNombre(x1)}$.<br>`\n      texteCorr += `${numAlpha(1)} L'abscisse de ${noms[1]} est : $${texNombre(Math.floor(x2))} + ${texFraction(calcul(100 * (x2 - Math.floor(x2))), 100)}$.<br>`\n      texteCorr += `${numAlpha(2)} L'abscisse de ${noms[2]} est : $${texFraction(calcul(x3 * 100), 100)}$.`\n    } else if (parseInt(this.sup) === 3) {\n      if (this.niveau === 'CM') {\n        xmin = 0\n        thickOff = 0\n      } else {\n        xmin = calcul(randint(0, 15) + randint(0, 9) * 0.1)\n        thickOff = calcul(2 / (10 ** (parseInt(this.sup))))\n      }\n      if (xmin === 0) extremite = '|->'\n      else extremite = '->'\n      xmax = calcul(xmin + 0.15)\n\n      x1 = xmin * 1000 + randint(1, 5) * 10 + randint(2, 8)\n      x2 = xmin * 1000 + randint(6, 9) * 10 + randint(2, 8)\n      x3 = xmin * 1000 + randint(11, 14) * 10 + randint(2, 8)\n      x1 = calcul(x1 / 1000)\n      x2 = calcul(x2 / 1000)\n      x3 = calcul(x3 / 1000)\n\n      tableau = shuffle([x1, x2, x3])\n      x1 = tableau[0]\n      x2 = tableau[1]\n      x3 = tableau[2]\n      d1 = droiteGraduee2({\n        x: 0,\n        y: 0,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: true,\n        Unite: 200,\n        thickOffset: thickOff,\n        thickDistance: 0.1,\n        thickSecDist: 0.01,\n        thickTerDist: 0.001,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        pointListe: [[x1, `${noms[0]}`], [x2, `${noms[1]}`], [x3, `${noms[2]}`]],\n        labelListe: [[xmin + 0.09, texNombre(calcul(xmin + 0.09))], [xmin + 0.1, texNombre(calcul(xmin + 0.1))]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n\n      texte = `${numAlpha(0)} Donner l'abscisse de ${noms[0]} en écriture décimale.<br>`\n      texte += `${numAlpha(1)} Donner l'abscisse de ${noms[1]} comme la somme d'un entier et d'une fraction décimale.<br>`\n      texte += `${numAlpha(2)} Donner l'abscisse de ${noms[2]} sous la forme d'une fraction décimale.<br>`\n      texteCorr = `${numAlpha(0)} L'abscisse de ${noms[0]} est : $${texNombre(x1)}$.<br>`\n      texteCorr += `${numAlpha(1)} L'abscisse de ${noms[1]} est : $${texNombre(Math.floor(x2))} + ${texFraction(calcul(1000 * (x2 - Math.floor(x2))), 1000)}$.<br>`\n      texteCorr += `${numAlpha(2)} L'abscisse de ${noms[2]} est : $${texFraction(calcul(x3 * 1000), 1000)}$.`\n    }\n    texte += mathalea2d({ xmin: -1.5, xmax: 35, ymin: -1.5, ymax: 1.5, pixelsParCm: 25, scale: 0.5 }, d1)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Au dixième\\n2 : Au centième\\n3 : Au millième']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}