{"version":3,"file":"js/82030.b1a0e62bc1a6a79ac24c.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/6e/canPredef6-3.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { listeQuestionsToContenu, randint, calcul, pgcd, texNombrec, choice, texNombre, sp, shuffle, texPrix, combinaisonListesSansChangerOrdre, range1 } from '../../../modules/outils.js'\nimport { ajouteChampTexte, ajouteChampTexteMathLive, setReponse } from '../../../modules/gestionInteractif.js'\nimport Fraction from '../../../modules/Fraction.js'\nimport Grandeur from '../../../modules/Grandeur.js'\nimport { droiteGraduee2, mathalea2d } from '../../../modules/2d.js'\nexport const titre = 'Course aux nombres fin de 6e'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\n/**\n * Course aux nombres avec 30 questions pour fin de 6e\n * @author Jean-Claude Lhote\n * Référence can Predef6-3\n*/\nexport default function CourseAuxNombres6e (numeroExercice) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.interactif = true\n  this.nbQuestions = 30\n  if (this.interactif) {\n    this.consigne = \"Saisir la réponse numérique uniquement sauf si l'unité est explicitement demandée.\"\n  } else {\n    this.consigne = ''\n  }\n\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let a, b, c, d, resultat, propositions\n    let questions = []\n    if (!this.sup) {\n      // Si aucune question n'est sélectionnée\n      questions = combinaisonListesSansChangerOrdre(range1(30), this.nbQuestions)\n    } else {\n      if (typeof this.sup === 'number') {\n        // Si c'est un nombre c'est qu'il y a qu'une seule question\n        questions[0] = this.sup\n        this.nbQuestions = 1\n      } else {\n        questions = this.sup.split('-') // Sinon on créé un tableau à partir des valeurs séparées par des -\n        this.nbQuestions = questions.length\n      }\n    }\n    for (let i = 0; i < questions.length; i++) {\n      questions[i] = parseInt(questions[i]) - 1\n    }\n    const listeIndex = combinaisonListesSansChangerOrdre(questions, this.nbQuestions)\n    const fruits = [\n      ['pêches', 4, 10, 30],\n      ['Noix', 5, 4, 13],\n      ['cerises', 6, 11, 20],\n      ['pommes', 2, 20, 40],\n      ['framboises', 15, 1, 5],\n      ['fraises', 7, 5, 10],\n      ['citrons', 1.5, 15, 30],\n      ['bananes', 1.5, 15, 25]\n    ]\n    const hauteurs = [\n      ['chaise', 75, 115, 'cm'],\n      ['grue', 120, 250, 'dm'],\n      ['tour', 50, 180, 'm'],\n      ['girafe', 40, 50, 'dm'],\n      ['coline', 75, 150, 'm']\n    ]\n    const typeQuestionsDisponibles = [\n      'q1', // On donne le double d'un nombre et on demande sa moitié\n      'q2', // On demande le nombre qui, multiplié par a donne b (3 type de réponses acceptés : décimale, fractionnaire ou a+b/c)\n      'q3', // Somme astucieuse de 4 nombres entiers\n      'q4', // Somme de deux décimaux avec retenue\n      'q5', // Double ou triple d'un nombre entier de 2 chiffres\n      'q6', // Double ou triple d'un nombre décimal\n      'q7', // Recomposition d'un entier\n      'q8', // tables de multiplication\n      'q9', // soustraire un nombre se finissant par 9\n      'q10', // Le quart ou le tiers d'un nombre.\n      'q11', // Recomposer un nombre à partir d'un nombre de centaines et d'un nombre d'unités\n      'q12', // Recomposer une nombre avec chevauchement.\n      'q13', // conversion heures et minutes\n      'q14', // Reste de la division par 3\n      'q15', // Une division par 9 qui tombe juste\n      'q16', // ajouter un nombre de la forme 10n+9\n      'q17', // 4 × #,## × 25 ou 2 × #,## × 50\n      'q18', // addition à trou\n      'q19', // Nombre pair de 2 chiffres × 2\n      'q20', // Proportionnalité simple\n      'q21', // Ordre de grandeur\n      'q22', // Conversion cm -> m\n      'q23', // Fraction 1/n d'une quantité de L\n      'q24', // Reste de la division euclidienne\n      'q25', // Ordre de grandeur : hauteurs\n      'q26', // Appliquer un pourcentage\n      'q27', // Calcul de distance à vitesse constante\n      'q28', // Comparaison de périmètre\n      'q29', // Repérage fraction\n      'q30' // Proportionnalité par linéarité\n\n    ] // On créé 3 types de questions\n    for (let i = 0, q = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (typeQuestionsDisponibles[listeIndex[i]]) { // Suivant le type de question, le contenu sera différent\n        case 'q1':\n          a = randint(1, 25)\n          texte = `Le double d'un nombre vaut ${2 * a}, combien vaut sa moitié ?`\n          texteCorr = `Le nombre est ${a}, sa moitié est ${texNombrec(a / 2)}.`\n          setReponse(this, q, calcul(a / 2), { formatInteractif: 'calcul' })\n          break\n        case 'q2':\n          a = randint(2, 25)\n          b = randint(2, 25, a)\n          a = calcul(a / pgcd(a, b))\n          b = calcul(b / pgcd(a, b))\n          c = new Fraction(a, b)\n          resultat = calcul(a / b)\n          texte = `Quel est le nombre qui, multiplié par ${b} donne ${a} ?`\n          texteCorr = `c'est $${c.texFraction}$ car $${c.texFraction}\\\\times ${b} = ${a}$`\n          if (!c.valeurDecimale) {\n            setReponse(this, q, [c.texFraction, `${Math.floor(a / b)}+\\\\dfrac{${a % b}}{${b}}`], { formatInteractif: 'calcul' })\n          } else {\n            setReponse(this, q, [c.texFraction, resultat, `${Math.floor(a / b)}+\\\\dfrac{${a % b}}{${b}}`], { formatInteractif: 'calcul' })\n          }\n          break\n        case 'q3':\n          a = randint(1, 9)\n          b = randint(1, 9, a)\n          c = randint(3, 7) * 10\n          d = randint(10, 15) * 10 - c\n          resultat = calcul(2 * (c + d))\n          texte = `$${c - a} + ${d + b} + ${c + a} + ${d - b}$`\n          texteCorr = `$${c - a} + ${c + a} + ${d + b}  + ${d - b} = ${2 * c} + ${2 * d}= ${2 * (c + d)}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q4':\n          a = randint(1, 9)\n          b = randint(1, 9, a)\n          c = randint(1, 9, [a, b])\n          d = randint(1, 9, [a, b, c])\n          resultat = calcul(10 + (b + d) * 0.1 + c * 0.01)\n          texte = `$${texNombrec(a + b * 0.1 + c * 0.01)}+${texNombrec(10 - a + d * 0.1)}$`\n          texteCorr = `$${texNombrec(a + b * 0.1 + c * 0.01)}+${texNombrec(10 - a + d * 0.1)}=${texNombrec(10 + (b + d) * 0.1 + c * 0.01)}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q5':\n          a = randint(1, 3)\n          b = randint(1, 9, a)\n          c = calcul(a * 10 + b)\n          if (choice([true, false])) {\n            resultat = calcul(3 * c)\n            texte = `Quel est le triple de $${texNombre(c)}$ ?`\n            texteCorr = `Le triple de $${texNombre(c)}$ est $3 \\\\times ${texNombre(c)}=${texNombrec(3 * c)}$.`\n          } else {\n            resultat = calcul(2 * c)\n            texte = `Quel est le double de $${texNombre(c)}$ ?`\n            texteCorr = `Le double de $${texNombre(c)}$ est $2 \\\\times ${texNombre(c)}=${texNombrec(2 * c)}$.`\n          }\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q6':\n          a = randint(1, 3)\n          b = randint(1, 9, a)\n          d = randint(1, 9)\n          c = calcul(a * 10 + b + d * 0.1)\n          if (choice([true, false])) {\n            resultat = calcul(3 * c)\n            texte = `Quel est le triple de $${texNombre(c)}$ ?`\n            texteCorr = `Le triple de $${texNombre(c)}$ est $3 \\\\times ${texNombre(c)}=${texNombrec(3 * c)}$.`\n            setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          } else {\n            resultat = calcul(2 * c)\n            texte = `Quel est le double de $${texNombre(c)}$ ?`\n            texteCorr = `Le double de $${texNombre(c)}$ est $2 \\\\times ${texNombre(c)}=${texNombrec(2 * c)}$.`\n            setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          }\n          break\n        case 'q7':\n          a = randint(1, 3)\n          b = randint(1, 9, a)\n          c = randint(1, 9, [a, b])\n          resultat = calcul(a * 1000 + b * 10 + c * 100)\n          texte = `$${texNombre(a)}\\\\times 1000 + ${texNombre(b)}\\\\times 10 + ${texNombre(c)}\\\\times 100$`\n          texteCorr = `$${texNombre(a)}\\\\times 1000 + ${texNombre(b)}\\\\times 10 + ${texNombre(c)}\\\\times 100 =${texNombre(resultat)}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q8':\n          a = randint(5, 9)\n          b = randint(5, 9)\n          resultat = a * b\n          texte = `$${a} \\\\times ${b}$`\n          texteCorr = `$${a} \\\\times ${b}=${a * b}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q9':\n          a = randint(5, 9)\n          b = randint(2, 8)\n          c = randint(1, 3)\n          resultat = calcul(a * 10 + b - c * 10 - 9)\n          texte = `$${a * 10 + b} - ${c * 10 + 9}$`\n          texteCorr = `$${a * 10 + b} - ${c * 10 + 9}=${a * 10 + b}-${(c + 1) * 10} + 1 = ${resultat}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q10':\n          a = randint(5, 15)\n\n          if (choice([true, false])) {\n            b = a * 8\n            resultat = a * 2\n            texte = `Quel est le quart de $${b}$ ?`\n            texteCorr = `Le quart de $${b}$ est $${a * 2}.$`\n            setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          } else {\n            b = a * 6\n            resultat = a * 2\n            texte = `Quel est le tiers de $${b}$ ?`\n            texteCorr = `Le tiers de $${b}$ est $${a * 2}.$`\n            setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          }\n          break\n        case 'q11':\n          a = randint(20, 70)\n          b = randint(20, 70, a)\n          resultat = a * 100 + b\n          texte = `$${a}$ centaines et $${b}$ unités = ?`\n          texteCorr = `$${a} \\\\times 100 + ${b} = ${a * 100 + b}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q12':\n          a = randint(20, 70)\n          b = randint(20, 70, a)\n          resultat = a * 100 + b * 10\n          texte = `$${a}$ centaines et $${b}$ dizaines = ?`\n          texteCorr = `$${a} \\\\times 100 + ${b} \\\\times 10 = ${a * 100 + b * 10}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q13':\n          a = randint(2, 4)\n          b = randint(10, 59)\n          d = calcul(a * 60 + b)\n          texte = `Convertir $${d}$ minutes en heures et minutes (format : ...h...min)`\n          texteCorr = `$${d} = ${a} \\\\times 60 + ${b}$ donc $${d}$ minutes = ${a}h ${b}min`\n          setReponse(this, q, `${a}h${b}min`, { formatInteractif: 'texte' })\n          break\n        case 'q14':\n          b = randint(1, 9)\n          c = randint(0, 9)\n          d = randint(0, 9, [b, c])\n          a = calcul(b * 100 + c * 10 + d)\n          resultat = a % 3\n          texte = `Quel est le reste de la division de $${a}$ par $3$ ?`\n          texteCorr = `Le reste de la division de $${a}$ par $3$ est ${a % 3}`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q15':\n          b = randint(5, 9)\n          a = calcul(b * 90 + 9)\n          resultat = b * 10 + 1\n          texte = `$${a}\\\\div 9$`\n          texteCorr = `$${a}\\\\div 9 = ${resultat}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q16':\n          a = randint(5, 9)\n          b = randint(2, 8)\n          c = randint(1, 3)\n          resultat = calcul(a * 10 + b + c * 10 + 9)\n          texte = `$${a * 10 + b} + ${c * 10 + 9}$`\n          texteCorr = `$${a * 10 + b} + ${c * 10 + 9}=${a * 10 + b}+${(c + 1) * 10} - 1 = ${resultat}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q17':\n          a = randint(1, 9)\n          b = randint(1, 9, a)\n          c = randint(1, 9, [a, b])\n          d = calcul(a + b * 0.1 + c * 0.01)\n          resultat = calcul(100 * d)\n          switch (choice([1, 2, 3, 4])) {\n            case 1:\n              texte = `$4 \\\\times ${texNombre(d)}\\\\times 25$`\n              texteCorr = `$4 \\\\times ${texNombre(d)}\\\\times 25 = 100 \\\\times ${texNombre(d)} = ${calcul(100 * d)}$`\n              break\n            case 2:\n              texte = `$2 \\\\times ${texNombre(d)}\\\\times 50$`\n              texteCorr = `$2 \\\\times ${texNombre(d)}\\\\times 50 = 100 \\\\times ${texNombre(d)} = ${calcul(100 * d)}$`\n              break\n            case 3:\n              texte = `$25 \\\\times ${texNombre(d)}\\\\times 4$`\n              texteCorr = `$25 \\\\times ${texNombre(d)}\\\\times 4 = 100 \\\\times ${texNombre(d)} = ${calcul(100 * d)}$`\n              break\n            case 4:\n              texte = `$50 \\\\times ${texNombre(d)}\\\\times 2$`\n              texteCorr = `$50 \\\\times ${texNombre(d)}\\\\times 2 = 100 \\\\times ${texNombre(d)} = ${calcul(100 * d)}$`\n              break\n          }\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q18':\n          a = randint(5, 9)\n          b = randint(6, 9)\n          c = randint(1, 5)\n          d = randint(1, 4)\n          resultat = d * 10 + b\n          texte = `$${c * 10 + a} + \\\\dots = ${calcul((c + d) * 10 + b + a)}$`\n          texteCorr = `$${calcul((c + d) * 10 + b + a)} - ${c * 10 + a} = ${resultat}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q19':\n          a = randint(11, 24) * 2\n          resultat = calcul(a * 5)\n          texte = `$${a}\\\\times 5$`\n          texteCorr = `$${a}\\\\times 5 = ${a} \\\\div 2 \\\\times 10 = ${calcul(a / 2)}\\\\times 10 =${resultat}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q20':\n          a = randint(0, 7)\n          b = fruits[a][1]\n          c = randint(fruits[a][2], fruits[a][3])\n          resultat = calcul(c / 5 * b)\n          texte = `$${texNombrec(c / 10)}$ kg de ${fruits[a][0]} coûtent $${texNombrec(c / 10 * b)}$ €, combien coûtent $${texNombrec(c / 5)}$ kg de ${fruits[a][0]} ?`\n          texteCorr = `$${texNombrec(c / 10 * b)} \\\\times 2 = ${texNombre(resultat)}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q21':\n          a = randint(3, 7)\n          b = randint(2, 9)\n          c = randint(1, 9)\n          d = randint(5, 9)\n          resultat = calcul((a * 100 + b * 10 + c) * d)\n          texte = `$${texNombrec(a * 100 + b * 10 + c)}\\\\times ${d}$<br> Choisis la bonne réponse sans effectuer précisément le calcul<br>`\n          propositions = shuffle([`$${texNombre(resultat)}$`, `$${texNombrec(d * 1000 + a * 100 + b * 10 + c)}$`, `$${texNombrec((a * 1000 + b * 100 + c) * d)}$`])\n          texte += `${propositions[0]} ${sp(4)} ${propositions[1]} ${sp(4)} ${propositions[2]}`\n          texteCorr = `$${texNombrec(a * 100 + b * 10 + c)} \\\\times ${d} = ${texNombre(resultat)}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q22':\n          a = randint(11, 24) * 10 + randint(0, 9)\n          resultat = calcul(a / 100)\n          texte = `$${a}$ cm font combien de mètres ?`\n          texteCorr = `$${a} cm = ${texNombre(resultat)} m$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q23':\n          a = randint(3, 5)\n          resultat = calcul(randint(2, 9) * 10)\n          b = calcul(resultat * a)\n          texte = `$\\\\dfrac{1}{${a}} \\\\text{ de } ${b} \\\\text{ L} = \\\\dots \\\\text{ L}$`\n          texteCorr = `$\\\\dfrac{1}{${a}}$ de $${b}$ L = ${resultat} L`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q24':\n          a = randint(7, 9)\n          b = randint(1, a - 1)\n          d = randint(5, 9)\n          c = d * a + b\n          resultat = c % a\n          texte = `Je possède ${c} bonbons et je fabrique des sacs de ${a} bonbons. Une fois mes sacs complétés, combien me restera-t-il de bonbons ?`\n          texteCorr = `$${c}=${d}\\\\times ${a} + ${b}$ , donc il me restera ${b} bonbons.`\n          setReponse(this, q, b, { formatInteractif: 'calcul' })\n          break\n        case 'q25':\n          a = randint(0, 4)\n          b = randint(hauteurs[a][1], hauteurs[a][2])\n          propositions = shuffle([`$${b}$ m`, `$${b}$ dm`, `$${b}$ cm`])\n          texte = `Choisis parmi les propositions suivantes la hauteur d'une ${hauteurs[a][0]} (nombre et unité)<br>`\n          texte += `${propositions[0]} ${sp(4)} ${propositions[1]} ${sp(4)} ${propositions[2]}`\n          texteCorr = `La hauteur d'une ${hauteurs[a][0]} est ${b} ${hauteurs[a][3]}`\n          setReponse(this, q, new Grandeur(b, hauteurs[a][3]), { formatInteractif: 'longueur' })\n          break\n        case 'q26':\n          a = randint(2, 9) * 10\n          b = randint(2, 9, a) * 10\n          resultat = calcul(a * b / 100)\n          texte = `$${a}\\\\%$ de $${b}$`\n          texteCorr = `$${a}\\\\%$ de $${b} = ${resultat}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q27':\n          a = randint(3, 6) * 20\n          b = randint(1, 3)\n          resultat = calcul(a * (b + 0.5))\n          texte = `Une voiture roule à une vitesse constante de ${a} km/h. Combien de kilomètres parcourt-elle en ${b} h et 30 min ?`\n          texteCorr = `$${a}\\\\times ${texNombrec(b + 0.5)} = ${resultat}$`\n          setReponse(this, q, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q28':\n          a = randint(3, 9)\n          b = randint(0, 1)\n          texte = `Est-il vrai qu'un carré de côté ${a} cm a le même périmètre qu'un rectangle de largeur ${a - b} cm et de longueur ${a + 1} cm ? (V ou F)`\n          if (b === 0) {\n            texteCorr = `Faux car $4\\\\times ${a}$ cm $\\\\neq 2\\\\times ${a}$ cm $+ 2\\\\times ${a + 1}$ cm.`\n            setReponse(this, q, 'F')\n          } else {\n            texteCorr = `Vrai car $4\\\\times ${a}$ cm $= 2\\\\times ${a - 1}$ cm $+ 2\\\\times ${a + 1}$ cm $= ${4 * a}$ cm.`\n            setReponse(this, q, 'V')\n          }\n          break\n        case 'q29':\n          a = randint(3, 5) // dénominateur\n          b = randint(2, a * 4 - 1) // numérateur\n          c = new Fraction(b, a)\n          resultat = calcul(b / a)\n\n          texte = 'Determiner l\\'abscisse du point A situé ci-dessous :<br>' + mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 1.5 }, droiteGraduee2({\n            Unite: 3,\n            Min: 0,\n            Max: 4.2,\n            x: 0,\n            y: 0,\n            thickSecDist: 1 / a,\n            thickSec: true,\n            thickoffset: 0,\n            axeStyle: '|->',\n            pointListe: [[b / a, 'A']],\n            pointCouleur: 'blue',\n            pointStyle: 'x',\n            labelsPrincipaux: true,\n            step1: 1,\n            step2: 1\n          }))\n          texteCorr = `L'abscisse du point A est $\\\\dfrac{${b}}{${a}}$`\n          if (a === 3) {\n            setReponse(this, q, [c.texFraction, `${Math.floor(a / b)}+\\\\dfrac{${a % b}}{${b}}`], { formatInteractif: 'calcul' })\n          } else {\n            setReponse(this, q, [c.texFraction, resultat, `${Math.floor(a / b)}+\\\\dfrac{${a % b}}{${b}}`], { formatInteractif: 'calcul' })\n          }\n          break\n        case 'q30':\n          a = randint(0, 7) // index du fruit\n          b = calcul(fruits[a][1] * (1 + choice([-1, 1]) * randint(1, 3) * 0.1)) // prix au kg\n          c = Math.round(randint(fruits[a][2], fruits[a][3] / 10)) // nombre de kg première valeur\n          d = randint(3, 6) // nombre de kg supplémentaires\n          resultat = calcul(d * b)\n          texte = `$${c}$ kg de ${fruits[a][0]} coûtent $${texPrix(c * b)}$ €.<br> $${c + d}$ kg de ces mêmes ${fruits[a][0]} coûtent $${texPrix((c + d) * b)}$ €.<br>Combien coûtent ${d} kg de ces ${fruits[a][0]} ?`\n          texteCorr = `$${texPrix((c + d) * b)} € - ${texPrix(c * b)} € =${texPrix(resultat)} €$`\n          setReponse(this, q, texPrix(resultat) + '€')\n          break\n      }\n      if (typeQuestionsDisponibles[listeIndex[i]] === 'q25') {\n        texte += ajouteChampTexteMathLive(this, q, 'longueur')\n      } else if (typeQuestionsDisponibles[listeIndex[i]] === 'q13') {\n        texte += ajouteChampTexte(this, q)\n      } else {\n        texte += ajouteChampTexteMathLive(this, q)\n      }\n\n      if (this.questionJamaisPosee(i, a, b, c, listeIndex[i])) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        q++\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = ['Choix des questions (nombres séparés par des tirets)',\n  `1 : Moitié et double\\n\n  2 : quotient de a par b\\n\n  3 : Somme astucieuse de 4 nombres entiers\\n\n  4 : Somme de deux décimaux avec retenue\\n\n  5 : Double ou triple d'un nombre entier\\n\n  6 : Double ou triple d'un nombre décimal\\n\n  7 : Recomposition d'un entier\\n\n  8 : tables de multiplication\\n\n  9 : soustraire un nombre se finissant par 9\\n\n  10 :  Le quart ou le tiers d'un nombre.\\n\n  11 :  Recomposer un nombre à partir d'un nombre de centaines et d'un nombre d'unités\\n\n  12 :  Recomposer une nombre avec chevauchement.\\n\n  13 :  conversion heures et minutes\\n\n  14 :  Reste de la division par 3\\n\n  15 :  Une division par 9 qui tombe juste\\n\n  16 :  ajouter un nombre de la forme 10n+9\\n\n  17 :  4 × #,## × 25 ou 2 × #,## × 50\\n\n  18 :  addition à trou\\n\n  19 :  Nombre pair de 2 chiffres × 2\\n\n  20 :  Proportionnalité simple\\n\n  21 :  Ordre de grandeur\\n\n  22 :  Conversion cm -> m\\n\n  23 :  Fraction 1/n d'une quantité de L\\n\n  24 :  Reste de la division euclidienne\\n\n  25 :  Ordre de grandeur : hauteurs\\n\n  26 :  Appliquer un pourcentage\\n\n  27 :  Calcul de distance à vitesse constante\\n\n  28 :  Comparaison de périmètre\\n\n  29 :  Repérage fraction\\n\n  30 : Proportionnalité par linéarité\\n`]\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","CourseAuxNombres6e","a","b","c","d","resultat","propositions","questions","sup","split","length","combinaisonListesSansChangerOrdre","range1","parseInt","listeIndex","fruits","hauteurs","typeQuestionsDisponibles","texte","texteCorr","q","cpt","randint","texNombrec","setReponse","calcul","formatInteractif","pgcd","Fraction","texFraction","valeurDecimale","Math","floor","choice","texNombre","shuffle","sp","Grandeur","mathalea2d","xmin","ymin","xmax","ymax","droiteGraduee2","Unite","Min","Max","x","y","thickSecDist","thickSec","thickoffset","axeStyle","pointListe","pointCouleur","pointStyle","labelsPrincipaux","step1","step2","round","texPrix","ajouteChampTexteMathLive","ajouteChampTexte","listeQuestionsToContenu"],"sourceRoot":""}