{"version":3,"file":"js/50919.27b31c0b337ce653069a.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N32-5.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif } from '../../modules/outils.js'\n\nexport const titre = 'Appliquer la double distributivité avec les racines carrées'\n\n/**\n * 2N32-5, ex 2N12\n * @author Stéphane Guyon\n */\nexport default function DoubleDistributiviteAvecRacineCarree () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ' Effectuer les calculs suivants :'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2]; let typesDeQuestions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, a1, a2, a, b1, b2, aa1, bb, aa2, aaa, c1, c2, d1, d2, c, dd, cc1, cc2, dd1, dd2, dd3, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        // Cas par cas, on définit le type de nombres que l'on souhaite\n        // Combien de chiffres ? Quelles valeurs ?\n        case 1:\n          a1 = randint(2, 9) * choice([-1, 1])\n          a = randint(2, 11, [4, 8, 9])\n          b1 = randint(2, 9) * choice([-1, 1])\n          a2 = randint(2, 9)\n          b2 = randint(2, 9) * choice([-1, 1])\n          aa1 = a1 * a2 * a\n          bb = b1 * b2\n          aa2 = a1 * b2 + b1 * a2\n          aaa = aa1 + bb\n          if (aa2 === 0) {\n            b2 = -b2\n            bb = b1 * b2\n            aa2 = a1 * b2 + b1 * a2\n            aaa = aa1 + bb\n          }\n          texte = `$\\\\left(${a1}\\\\sqrt{${a}}${ecritureAlgebrique(b1)}\\\\right)\\\\left(${a2}\\\\sqrt{${a}}${ecritureAlgebrique(b2)}\\\\right)$`\n          texteCorr = `$\\\\left(${a1}\\\\sqrt{${a}}${ecritureAlgebrique(b1)}\\\\right)\\\\left(${a2}\\\\sqrt{${a}}${ecritureAlgebrique(b2)}\\\\right)$<br>\n                    \n                    $=${a1}\\\\sqrt{${a}}\\\\times ${a2}\\\\sqrt{${a}}${ecritureAlgebrique(a1)}\\\\sqrt{${a}} \\\\times ${ecritureParentheseSiNegatif(b2)}\n                    ${ecritureAlgebrique(b1)} \\\\times ${a2}\\\\sqrt{${a}}${ecritureAlgebrique(b1)} \\\\times ${ecritureParentheseSiNegatif(b2)}$<br>\n                    $=${a1}\\\\times ${a}\\\\times ${a2}+ \\\\left( ${a1} \\\\times ${ecritureParentheseSiNegatif(b2)}${ecritureAlgebrique(b1)} \\\\times ${a2}\\\\right)\\\\sqrt{${a}} ${ecritureAlgebrique(bb)}$<br>\n                    $= ${aa1}${ecritureAlgebrique(aa2)} \\\\sqrt{${a}}${ecritureAlgebrique(bb)}$<br>\n                    $=${aa2} \\\\sqrt{${a}}${ecritureAlgebrique(aaa)}$`\n\n          break\n        case 2:\n          c1 = randint(2, 9) * choice([-1, 1])\n          c = randint(2, 11, [4, 8, 9])\n          d1 = randint(2, 9) * choice([-1, 1])\n          d2 = randint(2, 9)\n          c2 = randint(2, 9)\n          cc1 = c1 * d2\n          cc2 = c1 * c2\n          dd = d1 * d2\n          dd1 = d1 * c2\n          dd2 = dd + cc2 * c\n          dd3 = cc1 + dd1\n          texte = `$\\\\left(${c1}\\\\sqrt{${c}}${ecritureAlgebrique(d1)}\\\\right)\\\\left(${d2} ${ecritureAlgebrique(c2)}\\\\sqrt{${c}}\\\\right)$`\n          texteCorr = `$\\\\left(${c1}\\\\sqrt{${c}}${ecritureAlgebrique(d1)}\\\\right)\\\\left(${d2}${ecritureAlgebrique(c2)}\\\\sqrt{${c}}\\\\right)$<br>\n                    $=${c1}\\\\sqrt{${c}}\\\\times ${d2}${ecritureAlgebrique(c1)}\\\\sqrt{${c}} \\\\times ${ecritureParentheseSiNegatif(c2)}\\\\sqrt{${c}}${ecritureAlgebrique(d1)} \\\\times ${d2}  ${ecritureAlgebrique(d1)}  \\\\times ${c2}\\\\sqrt{${c}}$<br>\n                    $= ${cc1}\\\\sqrt{${c}} ${ecritureAlgebrique(cc2)}\\\\times ${c} ${ecritureAlgebrique(dd)} ${ecritureAlgebrique(dd1)} \\\\sqrt{${c}}   $<br>\n                    $=${dd3}\\\\sqrt{${c}}${ecritureAlgebrique(dd2)}$`\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","DoubleDistributiviteAvecRacineCarree","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a1","a2","a","b1","b2","aa1","bb","aa2","aaa","c1","c2","d1","d2","c","dd","cc1","cc2","dd1","dd2","dd3","i","cpt","randint","choice","ecritureAlgebrique","ecritureParentheseSiNegatif","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}