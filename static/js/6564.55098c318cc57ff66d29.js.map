{"version":3,"file":"js/6564.55098c318cc57ff66d29.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G12-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, abs, ecritureParentheseSiNegatif, fractionSimplifiee, texNombre } from '../../modules/outils.js'\nimport { point, tracePoint, codeSegments, labelPoint, segment, axes, grille, mathalea2d } from '../../modules/2d.js'\n\nexport const titre = 'Démontrer qu\\'un quadrilatère est ou non un parallélogramme'\n\n/**\n * 2G12-3\n * @author Stéphane Guyon\n */\nexport default function Parallélogramme () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.sup = parseInt(this.sup)\n  this.nbQuestions = 2\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1 //\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2]; let typesDeQuestions\n\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, a, ux, uy, g, test, s1, s2, s3, s4, s5, s6, xA, yA, xB, yB, xC, yC, xD, yD, xI0, xI1, yI0, yI1, xJ0, xJ1, yJ0, yJ1, A, B, C, D, T, L, M, N, I, J, O, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n      // Cas par cas, on définit le type de nombres que l'on souhaite\n      // Combien de chiffres ? Quelles valeurs ?\n        case 1: xA = randint(0, 4) * choice([-1, 1])\n          yA = randint(0, 4) * choice([-1, 1])\n          xC = randint(0, 4) * choice([-1, 1])\n          yC = randint(0, 4) * choice([-1, 1])\n          while (abs(xC - xA) < 4) {\n            xA = randint(0, 4) * choice([-1, 1])\n            xC = randint(0, 4) * choice([-1, 1])\n          }\n          while (abs(yC - yA) < 4) {\n            yA = randint(0, 4) * choice([-1, 1])\n            yC = randint(0, 4) * choice([-1, 1])\n          }\n          uy = randint(3, 5) * choice([-1, 1])\n          ux = randint(3, 5) * choice([-1, 1])\n\n          if (abs(yC - yA) / (xC - xA) === abs((uy) / (ux))) {\n            uy = uy + 2\n          }\n          yB = yA + uy\n          xB = xA + ux\n          xD = xC + ux\n          yD = yC + uy\n\n          xI0 = fractionSimplifiee(xA + xD, 2)[0]\n          xI1 = fractionSimplifiee(xA + xD, 2)[1]\n          yI0 = fractionSimplifiee(yA + yD, 2)[0]\n          yI1 = fractionSimplifiee(yA + yD, 2)[1]\n          xJ0 = fractionSimplifiee(xB + xC, 2)[0]\n          xJ1 = fractionSimplifiee(xB + xC, 2)[1]\n          yJ0 = fractionSimplifiee(yB + yC, 2)[0]\n          yJ1 = fractionSimplifiee(yB + yC, 2)[1]\n          g = grille(-9, -9, 9, 9)\n          A = point(xA, yA, 'A', 'red')\n          B = point(xB, yB, 'B', 'red')\n          C = point(xC, yC, 'C', 'red')\n          D = point(xD, yD, 'D', 'red')\n          I = point(1, 0, 'I')\n          J = point(0, 1, 'J')\n          O = point(0, 0, 'O')\n          M = point((xA + xD) / 2, (yA + yD) / 2, 'M')\n\n          a = axes(-9, -9, 9, 9)\n          s1 = segment(A, B, 'blue')\n          s2 = segment(D, B, 'blue')\n          s3 = segment(C, D, 'blue')\n          s4 = segment(A, C, 'blue')\n          s5 = segment(A, D, 'red')\n          s6 = segment(B, C, 'red')\n          s1.epaisseur = 2\n          s2.epaisseur = 2\n          s3.epaisseur = 2\n          s4.epaisseur = 2\n          s5.epaisseur = 2\n          s6.epaisseur = 2\n          codeSegments('X', 'red', s5, s6) // Code les segments s5 et s6\n          T = tracePoint(A, B, C, D, M, I, J, O) // Repère les points avec une croix\n          L = labelPoint(A, B, C, D, M, I, J, O)\n\n          texte = 'Dans un repère orthonormé $(O,I,J)$, on donne les 4 points suivants :<br>'\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`\n          texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`\n          texte += '<br>Déterminer si le quadrilatère $ABDC$ est un parallélogramme.'\n\n          texteCorr = mathalea2d({\n            xmin: -9,\n            ymin: -9,\n            xmax: 9,\n            ymax: 9\n          }, T, L, g, a, s1, s2, s3, s4, s5, s6)\n\n          texteCorr += '<br>On sait que $ABDC$ est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.'\n          texteCorr += '<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère.'\n          texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d\\'un repère ,'\n          texteCorr += '<br> alors les coordonnées du point $M$ milieu de $[AD]$ sont '\n          texteCorr += '$M\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>'\n          texteCorr += 'On applique la relation à l\\'énoncé : '\n          texteCorr += `$\\\\begin{cases}x_M=\\\\dfrac{${xA}+${ecritureParentheseSiNegatif(xD)}}{2} \\\\\\\\ y_M=\\\\dfrac{${yA}+${ecritureParentheseSiNegatif(yD)}}{2}\\\\end{cases}$`\n          texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_M=\\\\dfrac{${texNombre(xA + xD)}}{2}\\\\\\\\y_M=\\\\dfrac{${texNombre(yA + yD)}}{2}\\\\end{cases}$`\n          if (xI1 !== 1 && yI1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ M\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$` }\n          if (xI1 === 1 && yI1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ M\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$` }\n          if (xI1 !== 1 && yI1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ M\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$` }\n          if (xI1 === 1 && yI1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ M\\\\left(${xI0};${yI0}\\\\right)$` }\n          texteCorr += '<br> Les coordonnées du point $N$ milieu de $[BC]$ sont '\n          texteCorr += '$N\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>'\n          texteCorr += 'On applique la relation à l\\'énoncé : '\n          texteCorr += `$\\\\begin{cases}x_N=\\\\dfrac{${xB}+${ecritureParentheseSiNegatif(xC)}}{2} \\\\\\\\ y_N=\\\\dfrac{${yB}+${ecritureParentheseSiNegatif(yC)}}{2}\\\\end{cases}$`\n          texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_N=\\\\dfrac{${texNombre(xB + xC)}}{2}\\\\\\\\y_N=\\\\dfrac{${texNombre(yB + yC)}}{2}\\\\end{cases}$`\n          if (xJ1 !== 1 && yJ1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ N\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$` }\n          if (xJ1 === 1 && yJ1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ N\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$` }\n          if (xJ1 !== 1 && yJ1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ N\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$` }\n          if (xJ1 === 1 && yJ1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ N\\\\left(${xJ0};${yJ0}\\\\right)$` }\n          texteCorr += '<br>On observe que $M$ et $N$ ont les mêmes coordonnées, donc les deux diagonales du quadrilatère se coupent en leur milieu.'\n          texteCorr += '<br>$ABDC$ est donc un parallélogramme.'\n          break\n        case 2:\n          xA = randint(0, 4) * choice([-1, 1])\n          yA = randint(0, 4) * choice([-1, 1])\n          xC = randint(0, 4) * choice([-1, 1])\n          yC = randint(0, 4) * choice([-1, 1])\n\n          while (abs(xC - xA) < 3) {\n            xA = randint(0, 4) * choice([-1, 1])\n            xC = randint(0, 4) * choice([-1, 1])\n          }\n          while (abs(yC - yA) < 3) {\n            yA = randint(0, 4) * choice([-1, 1])\n            yC = randint(0, 4) * choice([-1, 1])\n          }\n          ux = randint(2, 4) * choice([-1, 1])\n          uy = randint(2, 4) * choice([-1, 1])\n          xB = xA + ux\n          yB = yA + uy\n          test = choice([-1, 1])\n\n          if (test === -1) {\n            xD = xC + ux + randint(1, 2) * choice([-1, 1])\n            yD = yC + uy\n          }\n          if (test === 1) {\n            xD = xC + ux\n            yD = yC + uy + randint(1, 2) * choice([-1, 1])\n          }\n          xI0 = fractionSimplifiee(xA + xD, 2)[0]\n          xI1 = fractionSimplifiee(xA + xD, 2)[1]\n          yI0 = fractionSimplifiee(yA + yD, 2)[0]\n          yI1 = fractionSimplifiee(yA + yD, 2)[1]\n          xJ0 = fractionSimplifiee(xB + xC, 2)[0]\n          xJ1 = fractionSimplifiee(xB + xC, 2)[1]\n          yJ0 = fractionSimplifiee(yB + yC, 2)[0]\n          yJ1 = fractionSimplifiee(yB + yC, 2)[1]\n          g = grille(-9, -9, 9, 9)\n          A = point(xA, yA, 'A', 'blue')\n          B = point(xB, yB, 'B', 'blue')\n          C = point(xC, yC, 'C', 'blue')\n          D = point(xD, yD, 'D', 'blue')\n          I = point(1, 0, 'I')\n          J = point(0, 1, 'J')\n          O = point(0, 0, 'O')\n          M = point((xA + xD) / 2, (yA + yD) / 2, 'M', 'red')\n          N = point((xB + xC) / 2, (yB + yC) / 2, 'N', 'red')\n          a = axes(-9, -9, 9, 9)\n          s1 = segment(A, B, 'blue')\n          s2 = segment(D, B, 'blue')\n          s3 = segment(C, D, 'blue')\n          s4 = segment(A, C, 'blue')\n          s5 = segment(A, D, 'red')\n          s6 = segment(B, C, 'red')\n\n          s1.epaisseur = 2\n          s2.epaisseur = 2\n          s3.epaisseur = 2\n          s4.epaisseur = 2\n          s5.epaisseur = 2\n          s6.epaisseur = 2\n          // codeSegments('X', 'red', s1, s2, s3, s4, s5, s6) // Code les segments s5 et s6\n\n          T = tracePoint(A, B, C, D, I, J, M, N, O) // Repère les points avec une croix\n          L = labelPoint(A, B, C, D, I, J, M, N, O)\n\n          texte = 'Dans un repère orthonormé $(O,I,J)$, on donne les 4 points suivants :<br>'\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`\n          texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`\n          texte += '<br>Déterminer si le quadrilatère $ABDC$ est un parallélogramme.'\n\n          texteCorr = mathalea2d({\n            xmin: -9,\n            ymin: -9,\n            xmax: 9,\n            ymax: 9\n          }, T, L, g, a, s1, s2, s3, s4, s5, s6)\n\n          texteCorr += '<br>On sait que $ABDC$ est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.'\n          texteCorr += '<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère.'\n          texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d\\'un repère,'\n          texteCorr += '<br> alors les coordonnées du point $M$ milieu de $[AD]$ sont '\n          texteCorr += '$M\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>'\n          texteCorr += 'On applique la relation à l\\'énoncé : '\n          texteCorr += `$\\\\begin{cases}x_M=\\\\dfrac{${xA}+${ecritureParentheseSiNegatif(xD)}}{2} \\\\\\\\ y_M=\\\\dfrac{${yA}+${ecritureParentheseSiNegatif(yD)}}{2}\\\\end{cases}$`\n          texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_M=\\\\dfrac{${texNombre(xA + xD)}}{2}\\\\\\\\y_M=\\\\dfrac{${texNombre(yA + yD)}}{2}\\\\end{cases}$`\n          if (xI1 !== 1 && yI1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ M\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$` }\n          if (xI1 === 1 && yI1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ M\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$` }\n          if (xI1 !== 1 && yI1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ M\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$` }\n          if (xI1 === 1 && yI1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ M\\\\left(${xI0};${yI0}\\\\right)$` }\n          texteCorr += '<br> Les coordonnées du point $N$ milieu de $[BC]$ sont '\n          texteCorr += '$N\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>'\n          texteCorr += 'On applique la relation à l\\'énoncé : '\n          texteCorr += `$\\\\begin{cases}x_N=\\\\dfrac{${xB}+${ecritureParentheseSiNegatif(xC)}}{2} \\\\\\\\ y_N=\\\\dfrac{${yB}+${ecritureParentheseSiNegatif(yC)}}{2}\\\\end{cases}$`\n          texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_N=\\\\dfrac{${texNombre(xB + xC)}}{2}\\\\\\\\y_N=\\\\dfrac{${texNombre(yB + yC)}}{2}\\\\end{cases}$`\n          if (xJ1 !== 1 && yJ1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ N\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$` }\n          if (xJ1 === 1 && yJ1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ N\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$` }\n          if (xJ1 !== 1 && yJ1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ N\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$` }\n          if (xJ1 === 1 && yJ1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ N\\\\left(${xJ0};${yJ0}\\\\right)$` }\n          texteCorr += '<br>On observe que $M$ et $N$ n\\'ont pas les mêmes coordonnées, donc les deux diagonales du quadrilatère ne se coupent pas en leur milieu.'\n          texteCorr += '<br>$ABDC$ n\\'est donc pas un parallélogramme.'\n          break\n      }\n      if (this.questionJamaisPosee(i, xA, yA, xB, yB, typesDeQuestions)) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Parallélogramme","Exercice","this","sup","parseInt","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","a","ux","uy","g","test","s1","s2","s3","s4","s5","s6","xA","yA","xB","yB","xC","yC","xD","yD","xI0","xI1","yI0","yI1","xJ0","xJ1","yJ0","yJ1","A","B","C","D","T","L","M","N","I","J","O","texte","texteCorr","i","cpt","randint","choice","abs","fractionSimplifiee","grille","point","axes","segment","epaisseur","codeSegments","tracePoint","labelPoint","mathalea2d","xmin","ymin","xmax","ymax","ecritureParentheseSiNegatif","texNombre","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}