/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_ClasseExercice_js-src_js_modules_macroSvgJs_js"],{

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice() {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigneCorrection = '';\n  this.listeQuestions = [];\n  this.listeCorrections = [];\n  this.introduction = '';\n  this.contenu = '';\n  this.contenuCorrection = '';\n  this.nbQuestions = 10;\n  this.nbCols = 2;\n  this.nbColsCorr = 2;\n  this.spacing = 1;\n  this.spacingCorr = 1;\n  this.beamer = false;\n  this.besoinFormulaireNumerique = false; // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n\n  this.besoinFormulaireTexte = false; // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n\n  this.besoinFormulaireCaseACocher = false; // Sinon this.besoinFormulaireCaseACocher = [texte];\n\n  this.consigneModifiable = true;\n  this.nbQuestionsModifiable = true;\n  this.nbColsModifiable = true;\n  this.nbColsCorrModifiable = true;\n  this.spacingModifiable = true;\n  this.spacingCorrModifiable = true;\n  this.correctionDetailleeDisponible = false;\n  this.correctionDetaillee = true;\n  this.video = '';\n  this.boutonAide = false;\n  this.tailleDiaporama = 50; // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  this.pasDeVersionLatex = false;\n  this.qcm = false; // Pour les exercices de type QCM : contient un tableau.\n\n  this.qcmDisponible = false; // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n\n  this.modeQcm = false; // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false; // pas d'interface par défaut pour les figures MG32\n\n  this.nouvelleVersion = function (numeroExercice) {};\n\n  this.listePackages = []; // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWF0aGFsZWEvLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzP2RiNDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogIENsYXNzZSBwYXJlbnRlIGRlIHRvdXMgbGVzIGV4ZXJjaWNlc1xuICpcbiAqIEBBdXRldXIgUsOpbWkgQW5nb3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRXhlcmNpY2UgKCkge1xuICAvLyBDbGFzc2UgcGFyZW50ZSBkZSB0b3VzIGxlcyBleGVyY2ljZXMgcXVpIHNlcm9udCBjcsOpw6lzXG4gIHRoaXMudGl0cmUgPSAnJ1xuICB0aGlzLmNvbnNpZ25lID0gJydcbiAgdGhpcy5jb25zaWduZUNvcnJlY3Rpb24gPSAnJ1xuICB0aGlzLmxpc3RlUXVlc3Rpb25zID0gW11cbiAgdGhpcy5saXN0ZUNvcnJlY3Rpb25zID0gW11cbiAgdGhpcy5pbnRyb2R1Y3Rpb24gPSAnJ1xuICB0aGlzLmNvbnRlbnUgPSAnJ1xuICB0aGlzLmNvbnRlbnVDb3JyZWN0aW9uID0gJydcbiAgdGhpcy5uYlF1ZXN0aW9ucyA9IDEwXG4gIHRoaXMubmJDb2xzID0gMlxuICB0aGlzLm5iQ29sc0NvcnIgPSAyXG4gIHRoaXMuc3BhY2luZyA9IDFcbiAgdGhpcy5zcGFjaW5nQ29yciA9IDFcbiAgdGhpcy5iZWFtZXIgPSBmYWxzZVxuXG4gIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IGZhbHNlIC8vIFNpbm9uIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IFt0ZXh0ZSxtYXgsdG9vbHRpcCBmYWN1bHRhdGlmXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlVGV4dGUgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVUZXh0ZSA9IFt0ZXh0ZSx0b29sdGlwXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlQ2FzZUFDb2NoZXIgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVDYXNlQUNvY2hlciA9IFt0ZXh0ZV07XG4gIHRoaXMuY29uc2lnbmVNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iUXVlc3Rpb25zTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5uYkNvbHNNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iQ29sc0NvcnJNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdDb3JyTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5jb3JyZWN0aW9uRGV0YWlsbGVlRGlzcG9uaWJsZSA9IGZhbHNlXG4gIHRoaXMuY29ycmVjdGlvbkRldGFpbGxlZSA9IHRydWVcbiAgdGhpcy52aWRlbyA9ICcnXG4gIHRoaXMuYm91dG9uQWlkZSA9IGZhbHNlXG4gIHRoaXMudGFpbGxlRGlhcG9yYW1hID0gNTAgLy8gVGFpbGxlIGVuIHBpeGVscyBwb3VyIGxlIGNhbGN1bCBjaHJvbm9tw6l0csOpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsVGV4dGVDb3VydChudW1lcm9FeGVyY2ljZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFRleHRlTG9uZyhudW1lcm9FeGVyY2ljZSx0aXRyZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFlvdXR1YmUobnVtZXJvRXhlcmNpY2UsaWRfeW91dHViZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlIC0gVmlkw6lvXCIsaWNvbmU9XCJ5b3V0dWJlXCIpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsUGRmKG51bWVyb0V4ZXJjaWNlLHVybF9wZGYsdGV4dGU9XCJBaWRlXCIsbGFiZWxfYm91dG9uPVwiQWlkZSAtIFBERlwiLGljb25lPVwiZmlsZSBwZGZcIilcbiAgLy8gdGhpcy52c3BhY2UgPSAtMSAvL0Fqb3V0ZSB1biBcXHZzcGFjZXstMWNtfSBhdmFudCBsJ8Opbm9uY8OpIGNlIHF1aSBwZXV0IMOqdHJlIHByYXRpcXVlIHBvdXIgZGVzIGV4ZXJjaWNlcyBhdmVjIGRlcyBmaWd1cmVzLlxuICB0aGlzLnBhc0RlVmVyc2lvbkxhdGV4ID0gZmFsc2VcbiAgdGhpcy5xY20gPSBmYWxzZSAvLyBQb3VyIGxlcyBleGVyY2ljZXMgZGUgdHlwZSBRQ00gOiBjb250aWVudCB1biB0YWJsZWF1LlxuICB0aGlzLnFjbURpc3BvbmlibGUgPSBmYWxzZSAvLyBQb3VyIGFqb3V0ZXIgdW5lIGNhc2Ugw6AgY29jaGVyIE1vZGUgUUNNIHF1aSBwZXJtZXQgZGUgY2hhbmdlciBsZSBzdGF0dXQgZGUgdGhpcy5tb2RlUWNtXG4gIHRoaXMubW9kZVFjbSA9IGZhbHNlIC8vIFBvdXIgY2hvaXNpciBsYSB2ZXJzaW9uIFFDTSBvdSBsYSB2ZXJzaW9uIGNsYXNzaXF1ZSAoZmFsc2UgPSB2ZXJzaW9uIGNsYXNzaXF1ZSlcblxuICB0aGlzLm1nMzJFZGl0YWJsZSA9IGZhbHNlIC8vIHBhcyBkJ2ludGVyZmFjZSBwYXIgZMOpZmF1dCBwb3VyIGxlcyBmaWd1cmVzIE1HMzJcbiAgdGhpcy5ub3V2ZWxsZVZlcnNpb24gPSBmdW5jdGlvbiAobnVtZXJvRXhlcmNpY2UpIHt9XG4gIHRoaXMubGlzdGVQYWNrYWdlcyA9IFtdIC8vIHN0cmluZyBvdSBsaXN0ZSBkZSBzdHJpbmcgYXZlYyBsZSBub20gZGVzIHBhY2thZ2VzIHNww6ljaWZpcXVlcyDDoCBham91dGVyIGRhbnMgbGUgcHLDqWFtYnVsZVxuICAvLyB0aGlzLnR5cGVFeGVyY2ljZSA9IFwiTUczMlwiO1xuICAvLyB0aGlzLmRpbWVuc2lvbnNEaXZNZzMyID0gWzUwMCwgNDUwXTtcbiAgLy8gdGhpcy50eXBlRXhlcmNpY2UgPSBcIlNjcmF0Y2hcIlxuICAvLyB0aGlzLnFjbT1bXCJRdWVscyBzb250IGxlcyBub21icmVzIHBhaXJzID9cIixbNywxMiwzNCwyNSwxOF0sWzAsMSwxLDAsMV1dID0+W1wiTGEgcXVlc3Rpb25cIixbbGVzIHLDqXBvbnNlc10sW2Jvbm5lPTEgZXQgbWF1dmFpc2U9MF1dXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/exercices/ClasseExercice.js\n");

/***/ }),

/***/ "./src/js/modules/macroSvgJs.js":
/*!**************************************!*\
  !*** ./src/js/modules/macroSvgJs.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SVG_Axe_vertical\": () => (/* binding */ SVG_Axe_vertical),\n/* harmony export */   \"SVG_Axe_horizontal\": () => (/* binding */ SVG_Axe_horizontal),\n/* harmony export */   \"SVG_grille\": () => (/* binding */ SVG_grille),\n/* harmony export */   \"SVG_graduation\": () => (/* binding */ SVG_graduation),\n/* harmony export */   \"SVG_label\": () => (/* binding */ SVG_label),\n/* harmony export */   \"SVG_fraction\": () => (/* binding */ SVG_fraction),\n/* harmony export */   \"SVG_tracer_point\": () => (/* binding */ SVG_tracer_point),\n/* harmony export */   \"SVG_tracer_flecheV\": () => (/* binding */ SVG_tracer_flecheV),\n/* harmony export */   \"SVG_tracer_droite_flecheV\": () => (/* binding */ SVG_tracer_droite_flecheV),\n/* harmony export */   \"SVG_tracer_droite_flecheH\": () => (/* binding */ SVG_tracer_droite_flecheH),\n/* harmony export */   \"SVG_Tracer_droite\": () => (/* binding */ SVG_Tracer_droite),\n/* harmony export */   \"Latex_Tracer_droite\": () => (/* binding */ Latex_Tracer_droite),\n/* harmony export */   \"SVG_repere\": () => (/* binding */ SVG_repere),\n/* harmony export */   \"Latex_repere\": () => (/* binding */ Latex_repere),\n/* harmony export */   \"SVG_reperage_sur_un_axe\": () => (/* binding */ SVG_reperage_sur_un_axe),\n/* harmony export */   \"Latex_reperage_sur_un_axe\": () => (/* binding */ Latex_reperage_sur_un_axe),\n/* harmony export */   \"SVG_engrenages\": () => (/* binding */ SVG_engrenages),\n/* harmony export */   \"SVG_machine_diag_3F12\": () => (/* binding */ SVG_machine_diag_3F12),\n/* harmony export */   \"SVG_fleche_machine_maths\": () => (/* binding */ SVG_fleche_machine_maths),\n/* harmony export */   \"SVG_chemin\": () => (/* binding */ SVG_chemin),\n/* harmony export */   \"SVG_machine_diag_3F1_act_mono\": () => (/* binding */ SVG_machine_diag_3F1_act_mono),\n/* harmony export */   \"my_svg_font\": () => (/* binding */ my_svg_font),\n/* harmony export */   \"SVG_machine_maths\": () => (/* binding */ SVG_machine_maths)\n/* harmony export */ });\n/* harmony import */ var _outils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var katex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! katex */ \"./node_modules/.pnpm/katex@0.13.9/node_modules/katex/dist/katex.js\");\n/* harmony import */ var katex__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(katex__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _svgdotjs_svg_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @svgdotjs/svg.js */ \"./node_modules/.pnpm/@svgdotjs+svg.js@3.0.16/node_modules/@svgdotjs/svg.js/dist/svg.esm.js\");\n/* global $ */\n\n/* eslint-disable camelcase */\n\n\n\n/**\n * Trace un axe vertical gradué\n * @param {string} mon_svg l'id du svg\n * @param {number} start ordonnée du début de l'axe en pixels (end-start=longueur del'axe)\n * @param {number} end ordonnée de fin del'axe en pixels\n * @param {number} absO position en abscisse de l'axe en pixels\n * @param {number} DeltaY Nombre entier de graduations à faire sur la longueur de l'axe.\n * @Auteur Jean-Claude Lhote\n */\n\nfunction SVG_Axe_vertical(mon_svg, start, end, absO, DeltaY, subY) {\n  const droite = mon_svg.line(absO, start + 2, absO, end);\n  droite.stroke({\n    color: 'black',\n    width: 2,\n    linecap: 'round'\n  });\n\n  for (let i = 0; i < DeltaY; i++) {\n    const line = mon_svg.line(absO - 2, (DeltaY - i) * ((end - start) / DeltaY), absO + 2, (DeltaY - i) * ((end - start) / DeltaY));\n    line.stroke({\n      color: 'black',\n      width: 2,\n      linecap: 'round'\n    });\n\n    if (subY != 1) {\n      for (let k = 1; k < subY; k++) {\n        const _line = mon_svg.line(absO - 2, (end - start) / DeltaY * (DeltaY - i - k / subY), absO + 2, (end - start) / DeltaY * (DeltaY - i - k / subY));\n\n        _line.stroke({\n          color: 'black',\n          width: 1,\n          linecap: 'round'\n        });\n      }\n    }\n  }\n}\n/**\n   * Trace un axe horizontal gradué\n   * @param {string} mon_svg l'id du svg\n   * @param {number} start abscisse du début de l'axe en pixels (end-start=longueur del'axe)\n   * @param {number} end abscisse de fin del'axe en pixels\n   * @param {number} absO position en ordonnée de l'axe en pixels\n   * @param {number} DeltaX Nombre entier de graduations à faire sur la longueur de l'axe.\n   * @Auteur Jean-Claude Lhote\n   */\n\nfunction SVG_Axe_horizontal(mon_svg, start, end, ordO, DeltaX, subX) {\n  const droite = mon_svg.line(start, ordO, end - 2, ordO);\n  droite.stroke({\n    color: 'black',\n    width: 2,\n    linecap: 'round'\n  });\n\n  for (let i = 1; i <= DeltaX; i++) {\n    const line = mon_svg.line(start + (DeltaX - i) * ((end - start) / DeltaX), ordO - 2, start + (DeltaX - i) * ((end - start) / DeltaX), ordO + 2);\n    line.stroke({\n      color: 'black',\n      width: 2,\n      linecap: 'round'\n    });\n\n    if (subX != 1) {\n      for (let k = 1; k < subX; k++) {\n        const _line2 = mon_svg.line(start + (DeltaX - i + k / subX) * ((end - start) / DeltaX), ordO - 2, start + (DeltaX - i + k / subX) * ((end - start) / DeltaX), ordO + 2);\n\n        _line2.stroke({\n          color: 'black',\n          width: 1,\n          linecap: 'round'\n        });\n      }\n    }\n  }\n}\n/**\n   * Place une grille de points dans un repère au sein d'un SVG\n   * @param {string} mon_svg  l'id du svg\n   * @param {number} absO abscisse du point de départ de la grille (normalement 0)\n   * @param {number} ordO ordonnée du point de départ de la grille (normalement 0)\n   * @param {number} tailleX largeur totale de la grille en pixels\n   * @param {number} tailleY hauteur totale de la grille en pixels\n   * @param {number} DeltaX nombre de graduations horizontales\n   * @param {number} DeltaY nombre de graduations verticales\n   * @param {number} subX coefficient de fractionnement de la grille en abscisse\n   * @param {number} subY coefficient de fractionnement de la grille en ordonéée\n   * @Auteur Jean-Claude Lhote\n   */\n\nfunction SVG_grille(mon_svg, absO, ordO, tailleX, tailleY, DeltaX, DeltaY, subX, subY) {\n  let line_grille;\n\n  for (let i = 0; i <= DeltaX; i++) {\n    line_grille = mon_svg.line(absO + i * (tailleX / DeltaX), 0, absO + i * (tailleX / DeltaX), tailleY);\n    line_grille.stroke({\n      color: 'lightgray',\n      width: 1\n    });\n  }\n\n  for (let i = 0; i < DeltaX; i++) {\n    if (subX != 1) {\n      for (let k = 0; k < subX; k++) {\n        line_grille = mon_svg.line(absO + i * (tailleX / DeltaX) + k * (tailleX / DeltaX / subX), 0, absO + i * (tailleX / DeltaX) + k * (tailleX / DeltaX / subX), tailleY);\n        line_grille.stroke({\n          color: 'lightgray',\n          width: 0.5,\n          linecap: 'round'\n        });\n      }\n    }\n  }\n\n  for (let j = 0; j <= DeltaY; j++) {\n    line_grille = mon_svg.line(20, ordO + j * (tailleY / DeltaY), 20 + tailleX, ordO + j * (tailleY / DeltaY));\n    line_grille.stroke({\n      color: 'lightgray',\n      width: 1\n    });\n  }\n\n  for (let j = 0; j < DeltaY; j++) {\n    if (subY != 1) {\n      for (let l = 0; l < subY; l++) {\n        line_grille = mon_svg.line(20, ordO + j * (tailleY / DeltaY) + l * (tailleY / DeltaY / subY), 20 + tailleX, ordO + j * (tailleY / DeltaY) + l * (tailleY / DeltaY / subY));\n        line_grille.stroke({\n          color: 'lightgray',\n          width: 0.5,\n          linecap: 'round'\n        });\n      }\n    }\n  }\n}\n/** Trace une graduation sur le SVG\n  * @param mon_svg Objet SVG\n  * @param origine abscisse en pixel de la première graduation\n  * @param pas distance en pixels entre deux graduations\n  * @param derniere_graduation abscisse limite en pixel\n  * @param taille taille verticale\n  * @param y ordonnée de la droite\n  * @param couleur couleur de la graduation\n  * @param width largeur de la graduation\n  * @Auteur Rémi Angot\n  */\n\nfunction SVG_graduation(mon_svg, origine, pas, derniere_graduation, taille = 10, y = 50, couleur = 'black', width = 5) {\n  for (let i = origine; i < derniere_graduation; i += pas) {\n    const line = mon_svg.line(i, y - taille / 2, i, y + taille / 2);\n    line.stroke({\n      color: couleur,\n      width: width,\n      linecap: 'round'\n    });\n  }\n}\n/**\n   * Ecris des nombres ou des textes à une position donnée dans un SVG\n   * @param {array} liste_d_abscisses [[nombre à écrire,abscisse,ordonnée]]\n   * @param {number} y leading pour position du texte sur la ligne\n   * @param {string} couleur couleur du nombre\n   * @param {number} opacite valeur d'opacité entre 0 et 1\n   * @Auteur Rémi Angot\n   */\n\nfunction SVG_label(mon_svg, liste_d_abscisses, y, couleur, opacite) {\n  'use strict';\n\n  for (let i = 0; i < liste_d_abscisses.length; i++) {\n    let text;\n    if (typeof liste_d_abscisses[i][0] === 'number') text = mon_svg.text(liste_d_abscisses[i][0].toString());else text = mon_svg.text(liste_d_abscisses[i][0]);\n    y = parseInt(y);\n    text.move(liste_d_abscisses[i][1], liste_d_abscisses[i][2]).font({\n      fill: couleur,\n      family: 'Helvetica',\n      size: 14,\n      anchor: 'middle',\n      leading: y,\n      opacity: opacite\n    });\n  }\n}\n/**\n   * Ecris une fraction dans un SVG\n   * @param {any} mon_svg l'Id du SVG\n   * @param {number} num le numérateur de la fraction\n   * @param {number} den le dénominateur de la fraction\n   * @param {number} x l'abscisse de sa position\n   * @param {number} y l'ordonnée de sa position\n   * @param {string} couleur la couleur de la fraction\n   * @Auteur Rémi Angot\n   */\n\nfunction SVG_fraction(mon_svg, num, den, x, y, couleur) {\n  'use strict';\n\n  const longueur = num.toString().length;\n  const line = mon_svg.line(x - longueur * 5, y - 7, x + longueur * 5, y - 7);\n  line.stroke({\n    color: couleur,\n    width: 2,\n    linecap: 'round'\n  });\n  const num_text = mon_svg.text(num.toString()).attr({\n    x: x,\n    y: y - 10\n  });\n  num_text.font({\n    fill: couleur,\n    family: 'Helvetica',\n    size: 20,\n    anchor: 'middle',\n    leading: 0\n  });\n  const den_text = mon_svg.text(den.toString()).attr({\n    x: x,\n    y: y + 10\n  });\n  den_text.font({\n    fill: couleur,\n    family: 'Helvetica',\n    size: 20,\n    anchor: 'middle',\n    leading: 0\n  });\n}\n/**\n   *\n   * @param {any} mon_svg L'id du SVG\n   * @param {number} x l'abscisse du point\n   * @param {number} y l'ordonnée du point\n   * @param {string} nom le nom du point\n   * @param {string} couleur la couleur du point\n   * @param {number} shiftxnom décallage en abscisse pour le nom du point\n   * @param {number} shiftynom décallage en ordonnée pour le nom du point\n   * @param {array} montrer_coord cas 1 : [false] rien n'est ajouté, cas 2 : [true, absAxeX, ordAxeY] trace des flèches jusqu'aux axes\n   * @Auteur Rémi Angot et Jean-Claude Lhote\n   */\n\nfunction SVG_tracer_point(mon_svg, x, y, nom, couleur, shiftxnom, shiftynom, montrer_coord) {\n  // creer un groupe pour la croix\n  const point = mon_svg.group();\n  const c1 = point.line(-3, 3, 3, -3);\n  c1.stroke({\n    color: couleur,\n    width: 2,\n    linecap: 'round',\n    opacity: 1\n  });\n  const c2 = point.line(-3, -3, 3, 3);\n  c2.stroke({\n    color: couleur,\n    width: 2,\n    linecap: 'round',\n    opacity: 1\n  }); // déplace la croix\n\n  point.move(x - 3, y - 3); // point.dmove(-3,-3)\n\n  const text = mon_svg.text(nom).attr({\n    x: x + shiftxnom,\n    y: y + shiftynom,\n    fill: couleur,\n    opacity: 0.7\n  }); // ecrit le nom\n\n  text.font({\n    color: couleur,\n    'font-weight': 'bolder',\n    family: 'Helvetica',\n    size: 14,\n    anchor: 'middle',\n    leading: -1\n  });\n\n  if (montrer_coord[0]) {\n    // montrer_coord=[true,abs_axe,ord_axe] ou [false]\n    if (y != montrer_coord[2] && x != montrer_coord[1]) SVG_tracer_droite_flecheV(mon_svg, x, y, x, montrer_coord[2], couleur, 3);\n    if (x != montrer_coord[1] && y != montrer_coord[2]) SVG_tracer_droite_flecheH(mon_svg, x, y, montrer_coord[1], y, couleur, 3);\n  }\n}\n/**\n   * Trace une flèche dans le SVG pour une demi-droite graduée\n   * @param {any} mon_svg l'identifiant du SVG\n   * @param {number} x l'abscisse de la pointe\n   * @param {number} y l'ordonnée de la pointe\n   * @Auteur Rémi Angot\n   */\n\nfunction SVG_tracer_flecheH(mon_svg, x, y) {\n  // creer un groupe pour la fleche\n  const fleche = mon_svg.group();\n  const c1 = fleche.line(x - 5, y - 5, x, y);\n  c1.stroke({\n    color: 'black',\n    width: 3,\n    linecap: 'round'\n  });\n  const c2 = fleche.line(x - 5, y + 5, x, y);\n  c2.stroke({\n    color: 'black',\n    width: 3,\n    linecap: 'round'\n  });\n}\n/**\n   *\n   * @param {string} mon_svg l'identifiant du SVG\n   * @param {number} x l'abscisse de la pointe de la flèche\n   * @param {number} y l'ordonnée de la pointe de la flèche\n   * @Auteur Jean-Claude Lhote\n   */\n\n\nfunction SVG_tracer_flecheV(mon_svg, x, y) {\n  // creer un groupe pour la fleche\n  const fleche = mon_svg.group();\n  const c1 = fleche.line(-5, 5, 0, 0);\n  c1.stroke({\n    color: 'black',\n    width: 3,\n    linecap: 'round'\n  });\n  const c2 = fleche.line(5, 5, 0, 0);\n  c2.stroke({\n    color: 'black',\n    width: 3,\n    linecap: 'round'\n  }); // déplace la croix\n\n  fleche.move(x, y);\n  fleche.dmove(-5, 5);\n}\n/**\n   *\n   * @param {string} mon_svg l'identifiant du SVG\n   * @param {number} x1 (x1,y1)=point de départ de la flèche verticale (x1=x2 en général)\n   * @param {number} y1\n   * @param {number} x2 (x2,y2)=point d'arrivée de la flèche\n   * @param {number} y2\n   * @param {string} couleur couleur de la flèche\n   * @param {number} pointilles longueur des pointillés et des espaces entre les pointillés\n   * @Auteur Jean-Claude Lhote\n   */\n\nfunction SVG_tracer_droite_flecheV(mon_svg, x1, y1, x2, y2, couleur, pointilles) {\n  const fleche = mon_svg.group();\n  const c1 = fleche.line(x1, y1, x2, y2);\n  c1.stroke({\n    color: couleur,\n    width: 1,\n    linecap: 'round',\n    dasharray: pointilles,\n    opacity: 0.5\n  });\n\n  if (y2 < y1) {\n    const c2 = fleche.line(x2 - 3, y2 + 5, x2, y2);\n    c2.stroke({\n      color: couleur,\n      width: 1,\n      linecap: 'round',\n      opacity: 0.5\n    });\n    const c3 = fleche.line(x2 + 3, y2 + 5, x2, y2);\n    c3.stroke({\n      color: couleur,\n      width: 1,\n      linecap: 'round',\n      opacity: 0.5\n    });\n  } else {\n    const c2 = fleche.line(x2 - 3, y2 - 5, x2, y2);\n    c2.stroke({\n      color: couleur,\n      width: 1,\n      linecap: 'round',\n      opacity: 0.5\n    });\n    const c3 = fleche.line(x2 + 3, y2 - 5, x2, y2);\n    c3.stroke({\n      color: couleur,\n      width: 1,\n      linecap: 'round',\n      opacity: 0.5\n    });\n  }\n}\n/**\n   *\n   * @param {string} mon_svg l'identifiant du SVG\n   * @param {number} x1 (x1,y1)=point de départ de la flèche horizontale (y1=y2 en général)\n   * @param {number} y1\n   * @param {number} x2 (x2,y2)=point d'arrivée de la flèche\n   * @param {number} y2\n   * @param {string} couleur couleur de la flèche\n   * @param {number} pointilles longueur des pointillés et des espaces entre les pointillés\n   * @Auteur Jean-Claude Lhote\n   */\n\nfunction SVG_tracer_droite_flecheH(mon_svg, x1, y1, x2, y2, couleur, pointilles) {\n  const fleche = mon_svg.group();\n  const c1 = fleche.line(x1, y1, x2, y2);\n  c1.stroke({\n    color: couleur,\n    width: 1,\n    linecap: 'round',\n    dasharray: pointilles,\n    opacity: 0.5\n  });\n\n  if (x2 < x1) {\n    const c2 = fleche.line(x2 + 5, y2 + 3, x2, y2);\n    c2.stroke({\n      color: couleur,\n      width: 1,\n      linecap: 'round',\n      opacity: 0.5\n    });\n    const c3 = fleche.line(x2 + 5, y2 - 3, x2, y2);\n    c3.stroke({\n      color: couleur,\n      width: 1,\n      linecap: 'round',\n      opacity: 0.5\n    });\n  } else {\n    const c2 = fleche.line(x2 - 5, y2 + 3, x2, y2);\n    c2.stroke({\n      color: couleur,\n      width: 1,\n      linecap: 'round',\n      opacity: 0.5\n    });\n    const c3 = fleche.line(x2 - 5, y2 - 3, x2, y2);\n    c3.stroke({\n      color: couleur,\n      width: 1,\n      linecap: 'round',\n      opacity: 0.5\n    });\n  }\n}\n/**\n   *\n   * @param {string} mon_svg l'identifiant du SVG\n   * @param {number} tailleX largeur en pixels du SVG\n   * @param {number} tailleY hauteur en pixels du SVG\n   * @param {number} Xmin l'abscisse minimale du repère\n   * @param {number} Xmax l'abscisse maximale du repère\n   * @param {number} Ymin l'ordonnée minimale du repère\n   * @param {number} Ymax l'ordonnée maximale du repère\n   * @param {number} OrdX0 l'ordonnée à l'origine de la droite à tracer\n   * @param {number} Pente la Pente de la droite à tracer.\n   * @param {string} couleur la couleur de la droite à tracer\n   * @param {string} nom le nom de la droite à tracer\n   * @Auteur Jean-Claude Lhote\n   */\n\nfunction SVG_Tracer_droite(mon_svg, tailleX, tailleY, Xmin, Xmax, Ymin, Ymax, OrdX0, Pente, couleur, nom) {\n  'use strict';\n\n  let k = 0;\n  const Pente_r = Pente * (Xmax - Xmin) / (Ymax - Ymin); // Pente adaptée au ratio d'échelle des axes.\n\n  while (k > Xmin & OrdX0 + Pente * k < Ymax & OrdX0 + Pente * k > Ymin) k--;\n\n  const X1 = k;\n  const Y1 = OrdX0 + Pente * k;\n  const DeltaX = Xmax - Xmin;\n  const DeltaY = Ymax - Ymin;\n  const Dx = (tailleX - 20) / DeltaX;\n  const Dy = (tailleY - 20) / DeltaY;\n  const X0 = 20 + Dx * (X1 - Xmin);\n  const Y0 = tailleY - 20 - Dy * (Y1 - Ymin);\n  const droite = mon_svg.line(X0, Y0, X0 + tailleX, Y0 - tailleX * Pente_r);\n  droite.stroke({\n    color: couleur,\n    width: 2,\n    linecap: 'round'\n  });\n  let Ynom;\n  if (Y0 > tailleY / 2) Ynom = -Math.round(Pente);else Ynom = -Math.round(Pente);\n  const text = mon_svg.text(nom).attr({\n    x: X0 + 20,\n    y: Y0 - 20 * Pente_r\n  }); // ecrit le nom\n\n  text.font({\n    fill: couleur,\n    family: 'Helvetica',\n    size: 15,\n    anchor: 'middle',\n    leading: Ynom\n  });\n}\n/**\n   *\n   * @param {number} Xmin l'abscisse minimum du repère\n   * @param {number} Xmax  l'abscisse maximum du repère\n   * @param {number} Ymin l'ordonnée minimum du repère\n   * @param {number} Ymax l'ordonnée maximum du repère\n   * @param {number} OrdX0 l'ordonnée à l'origine de la droite à tracer\n   * @param {number} Pente le coefficient directeur de la droite à tracer\n   * @param {string} couleur la couleur de la droite à tracer\n   * @param {string} nom le nom de la droite\n   * @returns {string} Le code Latex à intégrer dans un environnement {tikzpicture}\n   * @Auteur Jean-Claude Lhote et Rémi Angot\n   */\n\nfunction Latex_Tracer_droite(Xmin, Xmax, Ymin, Ymax, OrdX0, Pente, couleur, nom) {\n  'use strict';\n\n  let k = 0; // let Pente_r=Pente*(Xmax-Xmin)/(Ymax-Ymin); // Pente adaptée au ratio d'échelle des axes.\n\n  while (k > Xmin & OrdX0 + Pente * k < Ymax & OrdX0 + Pente * k > Ymin) k--;\n\n  const X1 = k;\n  const Y1 = OrdX0 + Pente * k;\n  const DeltaX = Xmax - Xmin; // let DeltaY=Ymax-Ymin;\n\n  const X2 = X1 + DeltaX;\n  const Y2 = Y1 + DeltaX * Pente;\n  return `\\n\\t \\\\draw[color=${couleur},thick](${X1},${Y1})--(${X2},${Y2}) node[pos=.1,above] {$${nom}$};`;\n}\n/**\n   *\n   * @param {string} mon_svg l'Identifiant du SVG\n   * @param {number} Xmin l'abscisse minimum (doit être entier. Si positif, on prendra 0 comme minimum)\n   * @param {number} Xmax l'abscisse maximum (doit être entier > Xmin)\n   * @param {number} Ymin l'ordonnée minimum (doit être entier. Si positif, on prendra 0 comme minimum)\n   * @param {number} Ymax l'ordonnée maximum (doit être entier > Ymin)\n   * @param {number} subX coefficient de fractionnement de l'unité en X\n   * @param {number} subY coefficient de fractionnement de l'unité en Y\n   * @param {number} tailleX Nombre de pixels de largeur pour le SVG (>100 !)\n   * @param {number} tailleY Nombre de pixels de hauteur pour le SVG  (>100 !)\n   * @param {boolean} grille Faut-il dessiner une grille ? true si Oui false si Non.\n   * @returns Les coordonnées des axes dans le SVG\n   * @Auteur Jean-Claude Lhote\n   */\n\nfunction SVG_repere(mon_svg, Xmin, Xmax, Ymin, Ymax, subX, subY, tailleX, tailleY, grille) {\n  'use strict';\n\n  if (Xmin > 0) Xmin = 0;\n  if (Ymin > 0) Ymin = 0;\n  const DeltaX = Xmax - Xmin;\n  const DeltaY = Ymax - Ymin;\n  const Dx = (tailleX - 20) / DeltaX;\n  const Dy = (tailleY - 20) / DeltaY;\n  if (grille) SVG_grille(mon_svg, 20, 0, tailleX - 20, tailleY - 20, DeltaX, DeltaY, subX, subY);\n  SVG_Axe_horizontal(mon_svg, 20, tailleX, tailleY - 20 + Ymin * Dy, DeltaX, subX);\n  SVG_tracer_flecheH(mon_svg, tailleX - 2, tailleY - 20 + Ymin * Dy);\n  SVG_Axe_vertical(mon_svg, 0, tailleY - 20, 20 - Xmin * Dx, DeltaY, subY);\n  SVG_tracer_flecheV(mon_svg, 20 - Xmin * Dx, -3);\n\n  for (let i = 0; i < DeltaX; i++) {\n    if (i + Xmin == 0) SVG_label(mon_svg, [[(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.stringNombre)(i + Xmin), i * Dx + 15, tailleY + 2 + Ymin * Dy]], 0, 'black', 0.5);else SVG_label(mon_svg, [[(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.stringNombre)(i + Xmin), i * Dx + 20, tailleY + 2 + Ymin * Dy]], 0, 'black', 0.5);\n  }\n\n  for (let i = 0; i < DeltaY; i++) {\n    if (i + Ymin == 0) SVG_label(mon_svg, [[(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.stringNombre)(i + Ymin), 10 - Xmin * Dx, tailleY - 15 - i * Dy]], 0, 'black', 0.5);else SVG_label(mon_svg, [[(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.stringNombre)(i + Ymin), 10 - Xmin * Dx, tailleY - 25 - i * Dy]], 1, 'black', 0.5);\n  }\n\n  return [20 - Xmin * Dx, tailleY - 20 + Ymin * Dy];\n}\n/**\n   * Trace un repère en Latex avec une grille\n   * @param {number} Xmin l'abscisse minimum (doit être entier. Si positif, on prendra 0 comme minimum)\n   * @param {number} Xmax l'abscisse maximum (doit être entier > Xmin)\n   * @param {number} Ymin l'ordonnée minimum (doit être entier. Si positif, on prendra 0 comme minimum)\n   * @param {number} Ymax l'ordonnée maximum (doit être entier > Ymin)\n   * @param {number} subX coefficient de fractionnement de l'unité en X\n   * @param {number} subY coefficient de fractionnement de l'unité en Y\n   * @param {boolean} grille Faut-il dessiner une grille ? true si Oui false si Non.\n   * @returns {string} Renvoie le code Latex correspondant\n   * @Auteur Jean-Claude Lhote\n   */\n\nfunction Latex_repere(Xmin, Xmax, Ymin, Ymax, subX, subY, grille) {\n  'use strict';\n\n  let result = '';\n  result += `\\n\\t \\\\tkzInit [xmin=${Xmin},xmax=${Xmax},xstep=1,ymin=${Ymin},ymax=${Ymax},ystep=1]`;\n  if (grille) result += `\\n\\t \\\\tkzGrid[sub,subxstep=${1 / subX},subystep=${1 / subY},color=lightgray,line width=0.3pt](${Xmin},${Ymin})(${Xmax},${Ymax})`;\n  result += '\\n\\t \\\\tkzAxeXY';\n  result += '\\n\\t \\\\tkzClip[space=1]';\n  return result;\n}\n/**\n  * Trace une graduation sur le SVG\n  * @param origine la première abscisse de la droite ou demi-droite\n  * @param longueur le nombre d'intervalles entre l'origine et la dernière graduation\n  * @param pas1 le fractionnement de l'unité utilisé : 10 pour 0,1 ; 2 pour 0,5 ...\n  * @param pas2 Idem pas1 pour la petite graduation\n  * @param points_inconnus tableau tableau [Nom,nb_pas1,nb_pas2,affiche_ou_pas]\n  * @param points_connus tableau [valeur,nb_pas1,nb_pas2]\n  * @param fraction booléen : true pour fractions, false pour décimaux\n  * @Auteur Jean-Claude Lhote\n  */\n\nfunction SVG_reperage_sur_un_axe(id_du_div, origine, longueur, pas1, pas2, points_inconnus, points_connus, fraction) {\n  let arrondir = 1 + Math.round(Math.log10(pas1));\n  if (arrondir < 1) arrondir = 1;\n  const longueur_pas1 = 600 / longueur;\n  const longueur_pas2 = 600 / longueur / pas2;\n  let distance, valeur, nom;\n\n  if (!window.SVGExist) {\n    window.SVGExist = {};\n  } // Si SVGExist n'existe pas on le créé\n  // SVGExist est un dictionnaire dans lequel on stocke les listenner sur la création des div\n\n\n  window.SVGExist[id_du_div] = setInterval(function () {\n    if ($(`#${id_du_div}`).length) {\n      $(`#${id_du_div}`).html(''); // Vide le div pour éviter les SVG en doublon\n\n      const mon_svg = (0,_svgdotjs_svg_js__WEBPACK_IMPORTED_MODULE_2__.SVG)().addTo(`#${id_du_div}`).viewbox(0, 0, 800, 150).size('100%', '100%'); // Droite\n\n      const droite = mon_svg.line(100, 50, 750, 50);\n      droite.stroke({\n        color: 'black',\n        width: 2,\n        linecap: 'round'\n      }); // Graduation secondaire\n\n      SVG_graduation(mon_svg, 100, longueur_pas2, 750, 5, 50, 'black', 2); // Graduation principale\n\n      SVG_graduation(mon_svg, 100, longueur_pas1, 750, 10, 50, 'black', 5);\n      SVG_tracer_flecheH(mon_svg, 750, 50); // Nombres visibles\n\n      SVG_label(mon_svg, [[(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.stringNombre)(origine), 100, 50]], 2, 'black', 1);\n\n      for (let i = 0; i < points_connus.length; i++) {\n        valeur = (0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.stringNombre)(points_connus[i][0]);\n        distance = (0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.calcul)(longueur_pas1 * points_connus[i][1] + longueur_pas2 * points_connus[i][2]);\n        SVG_label(mon_svg, [[valeur, 100 + distance, 50]], 2, 'black', 1);\n      } // Points inconnus\n\n\n      let position = 1;\n\n      for (let i = 0; i < points_inconnus.length; i++) {\n        distance = longueur_pas1 * points_inconnus[i][1] + longueur_pas2 * points_inconnus[i][2];\n        nom = points_inconnus[i][0];\n        SVG_tracer_point(mon_svg, 100 + distance, 50, nom, '#f15929', 0, 0, [false]);\n\n        if (points_inconnus[i][3] == true) {\n          if (!fraction) {\n            // affichage décimal\n            valeur = (0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.stringNombre)((0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.calcul)(origine + points_inconnus[i][1] / pas1 + points_inconnus[i][2] / pas1 / pas2));\n            SVG_label(mon_svg, [[valeur, 100 + distance, 50]], 3 + position, '#f15929', 1);\n            SVG_tracer_droite_flecheV(mon_svg, 100 + distance, 75 + 15 * position, 100 + distance, 55, '#f15929', 3);\n          } else {\n            // affichage fractionnaire\n            SVG_fraction(mon_svg, (origine + points_inconnus[i][1]) * pas2 + points_inconnus[i][2], pas2, 100 + distance, 115 + 15 * position, '#f15929');\n            SVG_tracer_droite_flecheV(mon_svg, 100 + distance, 80 + 15 * position, 100 + distance, 55, '#f15929', 3);\n          }\n\n          position = 1 - position;\n        }\n      }\n\n      clearInterval(window.SVGExist[id_du_div]); // Arrête le timer\n    }\n  }, 100); // Vérifie toutes les 100ms\n}\n/**\n  * Trace un axe gradué horizontal avec des points placés dessus en Latex\n  * @param origine la première abscisse de la droite ou demi-droite\n  * @param pas1 le fractionnement de l'unité utilisé : 10 pour 0,1 ; 2 pour 0,5 ...\n  * @param pas2 Idem pas1 pour la petite graduation\n  * @param points_inconnus tableau tableau [Nom,nb_pas1,nb_pas2,affiche_ou_pas]\n  * @param points_connus tableau [valeur,nb_pas1,nb_pas2]\n  * @param fraction booléen : true pour fraction, false pour décimaux\n  * @Auteur Jean-Claude Lhote\n  */\n\nfunction Latex_reperage_sur_un_axe(zoom, origine, pas1, pas2, points_inconnus, points_connus, fraction) {\n  'use strict';\n\n  let result = `\\\\begin{tikzpicture}[scale=${zoom}]`;\n  let valeur;\n  let decalage;\n  result += `\\n\\t \\\\tkzInit[xmin=${origine},xmax=${(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.calcul)(origine + 7 / pas1)},ymin=-0.5,ymax=0.5,xstep=${(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.calcul)(1 / pas1)}]`;\n  if (origine == 0) result += '\\n\\t \\\\tkzDrawX[tickwd=2pt,label={}];';else result += '\\n\\t \\\\tkzDrawX[left space=0.2,tickwd=2pt,label={}];';\n  result += '\\n\\t \\\\tikzset{arr/.style={postaction=decorate,\tdecoration={markings,mark=at position 1 with {\\\\arrow[thick]{#1}}}}}';\n  if (origine < 0) decalage = origine * pas1;else decalage = 0;\n  result += `\\n\\t \\\\foreach \\\\x in {0,${(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.calcul)(1 / pas2)},...,7}`;\n  result += `\\n\\t {\\\\draw (${decalage}+\\\\x,-0.05)--(${decalage}+\\\\x,0.05);}`; // result+=`\\n\\t {\\\\draw (${origine*pas1}+\\\\x,-0.05)--(${origine*pas1}+\\\\x,0.05);}`\n\n  for (let i = 0; i < points_connus.length; i++) {\n    valeur = (0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.calcul)(origine + points_connus[i][1] / pas1 + (0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.calcul)(points_connus[i][2] / pas1 / pas2));\n    result += `\\n\\t \\\\tkzDefPoint(${valeur},0){A}`;\n    result += `\\n\\t \\\\tkzLabelPoint[color = black,below,inner sep = 5pt,font=\\\\scriptsize](A){$${(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.texNombrec)(valeur)}$}`;\n  } // Points inconnus\n\n\n  let position = 6;\n\n  for (let i = 0; i < points_inconnus.length; i++) {\n    valeur = (0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.calcul)(origine + points_inconnus[i][1] / pas1 + (0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.calcul)(points_inconnus[i][2] / pas1 / pas2));\n    result += `\\n\\t \\\\tkzDefPoint(${valeur},0){A}`;\n    result += `\\n\\t \\\\tkzDefPoint(${valeur},-0.3-${position * 0.02}){B}`;\n    result += '\\n\\t \\\\tkzDrawPoint[shape=cross out,color=blue,size=8](A)';\n    result += `\\n\\t \\\\tkzLabelPoint[above](A){$${points_inconnus[i][0]}$}`;\n\n    if (points_inconnus[i][3]) {\n      if (!fraction) {\n        // affichage décimal\n        result += `\\n\\t \\\\tkzLabelPoint[color = blue,below=${15 + position}pt,inner sep = 5pt,font=\\\\scriptsize](A){$${(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.texNombrec)(valeur)}$}`;\n        result += '\\n\\t \\\\tkzDrawSegment[color=blue,arr=stealth](B,A)';\n      } else {\n        // affichage fractionnaire\n        result += `\\n\\t \\\\tkzLabelPoint[color = blue,below=${15 + position}pt,inner sep = 5pt,font=\\\\scriptsize](A){$${(0,_outils_js__WEBPACK_IMPORTED_MODULE_0__.texFractionSigne)((origine + points_inconnus[i][1]) * pas2 + points_inconnus[i][2], pas2)}$}`;\n        result += '\\n\\t \\\\tkzDrawSegment[color=blue,arr=stealth](B,A)';\n      }\n    }\n\n    position = 6 - position;\n  }\n\n  result += '\\n\\t \\\\end{tikzpicture}';\n  return result;\n}\n/**\n * Renvoie deux engrenages en HTML pour le moment\n * @param {string} id_du_div id unique pour éviter les doublons, généré dans l'exo; à revoir?\n * @param {number} w largeur du conteneur\n * @param {number} h hauteur du conteneur\n * @author Sébastien Lozano\n */\n\nfunction SVG_engrenages(id_du_div, w, h) {\n  'use strict';\n\n  if (sortieHtml) {\n    if (!window.SVGExist) {\n      window.SVGExist = {};\n    } // Si SVGExist n'existe pas on le créé\n    // SVGExist est un dictionnaire dans lequel on stocke les listenner sur la création des div\n\n\n    window.SVGExist[id_du_div] = setInterval(function () {\n      if ($(`#${id_du_div}`).length) {\n        $(`#${id_du_div}`).html(''); // Vide le div pour éviter les SVG en doublon\n\n        document.getElementById(id_du_div).innerHTML = `\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 ` + w + ' ' + h + '\" width=\"' + w + `\">\n                      <g id=\"surface1\">\n                      <path style=\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\" d=\"M 106.5625 0.125 C 106.289062 0.175781 105.386719 0.289062 104.5625 0.363281 C 103.738281 0.449219 103.023438 0.550781 102.960938 0.613281 C 102.761719 0.8125 102 8.164062 102 9.988281 C 102 10.476562 101.9375 10.914062 101.851562 11.023438 C 101.761719 11.136719 101.238281 11.324219 100.6875 11.4375 C 100.136719 11.5625 99.300781 11.800781 98.8125 11.960938 C 97.664062 12.386719 94.125 14.039062 93.226562 14.585938 C 92.800781 14.835938 92.4375 14.976562 92.351562 14.925781 C 92.261719 14.875 90.375 13.351562 88.148438 11.523438 C 85.9375 9.710938 84.074219 8.25 84.011719 8.273438 C 83.949219 8.300781 83.226562 8.863281 82.414062 9.523438 C 80.75 10.886719 78.3125 13.414062 76.699219 15.425781 C 75.75 16.613281 75.636719 16.8125 75.789062 16.988281 C 75.886719 17.101562 76.425781 17.773438 77.011719 18.5 C 77.585938 19.226562 79.023438 20.976562 80.210938 22.414062 C 81.398438 23.835938 82.375 25.039062 82.375 25.085938 C 82.375 25.125 82.148438 25.523438 81.863281 25.976562 C 81.199219 27.011719 80.113281 29.238281 79.773438 30.1875 C 79.574219 30.789062 78.75 33.425781 78.5625 34.074219 C 78.539062 34.148438 77.351562 34.3125 75.601562 34.488281 C 71.3125 34.886719 68.273438 35.273438 68.0625 35.425781 C 67.613281 35.761719 67.351562 40.875 67.625 43.8125 C 67.800781 45.699219 68.023438 47.113281 68.175781 47.300781 C 68.261719 47.414062 69.050781 47.539062 70.5625 47.675781 C 76.101562 48.164062 78.324219 48.386719 78.449219 48.425781 C 78.523438 48.449219 78.625 48.710938 78.675781 49.011719 C 78.726562 49.300781 78.863281 49.800781 78.988281 50.113281 C 79.113281 50.425781 79.425781 51.335938 79.675781 52.136719 C 80.164062 53.648438 81.175781 55.800781 82.011719 57.050781 C 82.273438 57.449219 82.5 57.824219 82.5 57.886719 C 82.5 57.949219 81.363281 59.363281 79.976562 61.023438 C 77.148438 64.425781 76.6875 64.988281 76.210938 65.636719 L 75.875 66.085938 L 76.636719 67.074219 C 78.5625 69.574219 81.164062 72.175781 83.613281 74.050781 C 84.324219 74.601562 84.4375 74.648438 84.664062 74.5 C 85 74.289062 88.789062 71.164062 90.835938 69.414062 C 91.738281 68.636719 92.585938 68 92.726562 68 C 92.863281 68 93.550781 68.324219 94.261719 68.738281 C 95.851562 69.625 97.960938 70.488281 99.863281 71 C 101.125 71.335938 101.75 71.5625 101.75 71.664062 C 101.75 72.476562 102.824219 81.9375 102.9375 82.113281 C 102.960938 82.175781 103.8125 82.289062 104.8125 82.375 C 106.960938 82.5625 112.511719 82.476562 114.0625 82.226562 L 115.050781 82.0625 L 115.148438 81.625 C 115.199219 81.386719 115.414062 79.210938 115.625 76.8125 C 115.835938 74.398438 116.050781 72.210938 116.101562 71.9375 C 116.210938 71.335938 116.273438 71.300781 118.363281 70.6875 C 120.226562 70.148438 122.625 69.085938 124.113281 68.164062 C 125.023438 67.585938 125.226562 67.5 125.425781 67.625 C 125.550781 67.699219 126.363281 68.375 127.238281 69.125 C 129.101562 70.710938 133.5 74.25 133.625 74.25 C 133.664062 74.25 134.148438 73.925781 134.699219 73.523438 C 136.113281 72.488281 141.414062 66.851562 141.988281 65.761719 C 142.101562 65.5625 141.75 65.074219 139.476562 62.351562 C 138.023438 60.613281 136.511719 58.8125 136.113281 58.363281 C 135.699219 57.898438 135.375 57.4375 135.375 57.324219 C 135.375 57.199219 135.710938 56.449219 136.113281 55.648438 C 137.113281 53.6875 138.074219 51.238281 138.398438 49.851562 C 138.613281 48.960938 138.710938 48.699219 138.925781 48.625 C 139.074219 48.5625 139.886719 48.460938 140.75 48.386719 C 145.675781 47.976562 149.324219 47.574219 149.398438 47.460938 C 149.476562 47.324219 149.523438 47 149.773438 44.6875 C 149.976562 42.699219 150.039062 40.136719 149.886719 39.25 C 149.8125 38.800781 149.699219 37.761719 149.625 36.9375 C 149.550781 36.101562 149.425781 35.375 149.335938 35.300781 C 149.25 35.210938 147.074219 34.960938 144.0625 34.6875 C 140.039062 34.324219 138.898438 34.1875 138.789062 34.039062 C 138.699219 33.925781 138.550781 33.449219 138.4375 32.976562 C 138.011719 31.113281 136.5625 27.601562 135.5 25.851562 C 135.363281 25.625 135.25 25.3125 135.25 25.164062 C 135.25 24.988281 136.460938 23.414062 138.550781 20.863281 C 141.074219 17.789062 141.835938 16.789062 141.75 16.636719 C 141.488281 16.148438 139.851562 14.300781 138.335938 12.773438 C 136.960938 11.375 133.886719 8.664062 133.324219 8.351562 C 133.175781 8.261719 129.636719 11.023438 126.699219 13.539062 C 125.8125 14.289062 125.023438 14.914062 124.949219 14.925781 C 124.875 14.925781 123.601562 14.335938 122.125 13.601562 C 119.664062 12.363281 118.039062 11.75 116.476562 11.4375 C 116.085938 11.363281 116.164062 11.800781 115.6875 6.875 C 115.261719 2.523438 115.011719 0.710938 114.851562 0.613281 C 114.699219 0.511719 114.335938 0.476562 112.0625 0.238281 C 110.375 0.0625 107.175781 -0.0117188 106.5625 0.125 Z M 113.1875 26.425781 C 116.261719 27.335938 119.238281 29.460938 121.261719 32.175781 C 126.011719 38.523438 124.863281 47.886719 118.75 52.914062 C 115.613281 55.488281 112.164062 56.648438 108.210938 56.460938 C 103.449219 56.25 99.5 54.125 96.625 50.25 C 93.289062 45.75 92.710938 39.4375 95.199219 34.460938 C 95.925781 33.011719 96.710938 31.914062 97.976562 30.613281 C 100.335938 28.148438 102.5 26.875 105.375 26.238281 C 106.273438 26.039062 106.863281 26.011719 109.25 26.050781 C 111.875 26.085938 112.136719 26.113281 113.1875 26.425781 Z M 113.1875 26.425781 \"/>\n                      <path style=\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\" d=\"M 106.386719 28.5625 C 103.1875 29.261719 100.199219 31.261719 98.460938 33.863281 C 96.726562 36.460938 96.050781 39.050781 96.261719 42.261719 C 96.613281 47.523438 100.648438 52.363281 105.875 53.773438 C 106.800781 54.011719 107.226562 54.050781 109.0625 54.050781 C 111.5 54.039062 112.449219 53.851562 114.210938 53.011719 C 115.613281 52.335938 116.613281 51.636719 117.835938 50.460938 C 119.175781 49.175781 119.988281 48.074219 120.675781 46.613281 C 122.335938 43.074219 122.238281 38.5625 120.4375 35.136719 C 118.738281 31.898438 115.148438 29.25 111.523438 28.550781 C 110.363281 28.324219 107.449219 28.335938 106.386719 28.5625 Z M 110.960938 31.574219 C 112.3125 31.851562 113.386719 32.3125 114.648438 33.148438 C 116.4375 34.351562 117.699219 36 118.335938 37.960938 C 118.585938 38.738281 118.675781 39.289062 118.726562 40.613281 C 118.851562 44.0625 118.074219 46.085938 115.789062 48.25 C 114.023438 49.925781 112.386719 50.726562 110.164062 51.011719 C 107.539062 51.351562 104.898438 50.550781 102.789062 48.761719 C 100.550781 46.886719 99.4375 44.625 99.289062 41.675781 C 99.175781 39.398438 99.6875 37.511719 100.925781 35.636719 C 101.675781 34.511719 102.386719 33.800781 103.511719 33.050781 C 105.738281 31.574219 108.414062 31.050781 110.960938 31.574219 Z M 110.960938 31.574219 \"/>\n                      <path style=\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\" d=\"M 58.5 55.886719 C 58.011719 57.148438 57.023438 59.835938 56.300781 61.875 C 55.585938 63.898438 54.925781 65.761719 54.835938 66 L 54.675781 66.4375 L 52.4375 66.511719 C 48.898438 66.636719 45.476562 67.125 43.164062 67.824219 C 42.386719 68.0625 41.699219 68.25 41.648438 68.25 C 41.585938 68.25 41.011719 67.5 40.375 66.585938 C 38.375 63.75 33.585938 57.1875 33.449219 57.101562 C 33.300781 57 32.289062 57.375 30.789062 58.074219 C 30.148438 58.375 29.585938 58.625 29.539062 58.625 C 29.476562 58.625 28.789062 59 28 59.449219 C 27.210938 59.914062 25.976562 60.625 25.25 61.039062 C 22.886719 62.386719 19.875 64.636719 19.875 65.0625 C 19.875 65.226562 20.550781 66.699219 24.085938 74.289062 L 25.523438 77.375 L 24.449219 78.5 C 23.863281 79.125 23.0625 80.011719 22.6875 80.476562 C 22.3125 80.9375 21.6875 81.675781 21.300781 82.125 C 20.476562 83.085938 18.699219 85.738281 18.136719 86.835938 C 17.925781 87.273438 17.699219 87.625 17.648438 87.625 C 17.601562 87.625 15.8125 87.324219 13.6875 86.949219 C 7.726562 85.898438 4.101562 85.351562 4 85.460938 C 3.863281 85.613281 2.726562 88.476562 2.210938 89.949219 C 1.699219 91.425781 0.914062 95.199219 0.386719 98.75 C 0.25 99.613281 0.113281 100.398438 0.0742188 100.5 C 0.0117188 100.664062 0.9375 101.0625 4.835938 102.550781 C 7.511719 103.574219 10.398438 104.6875 11.289062 105.039062 L 12.875 105.648438 L 12.875 107.300781 C 12.886719 110.324219 13.226562 112.851562 14.136719 116.5625 C 14.414062 117.664062 14.625 118.613281 14.625 118.6875 C 14.625 118.75 14.414062 118.960938 14.148438 119.136719 C 11.625 120.875 3.949219 126.449219 3.75 126.6875 C 3.449219 127.039062 5.761719 131.738281 7.925781 135.1875 C 8.851562 136.675781 10.585938 139.175781 11.273438 140.039062 L 11.5625 140.386719 L 13.75 139.375 C 19.039062 136.914062 23.851562 134.75 24.050781 134.75 C 24.175781 134.75 25 135.4375 25.898438 136.289062 C 27.9375 138.210938 29.011719 139.011719 31.8125 140.726562 C 33.398438 141.6875 34.074219 142.175781 34.101562 142.351562 C 34.125 142.488281 33.886719 144.136719 33.574219 146.023438 C 33.261719 147.898438 32.800781 150.863281 32.550781 152.601562 C 32.164062 155.273438 32.113281 155.789062 32.261719 155.886719 C 33.136719 156.449219 37.523438 157.835938 41.0625 158.675781 C 43.199219 159.1875 47.238281 159.9375 47.3125 159.851562 C 47.488281 159.625 50.574219 151.5 51.6875 148.3125 C 51.960938 147.550781 52.238281 146.898438 52.300781 146.851562 C 52.375 146.800781 53.3125 146.75 54.375 146.75 C 57.539062 146.75 59.710938 146.4375 63.085938 145.488281 L 64.925781 144.976562 L 65.25 145.335938 C 65.425781 145.539062 67.261719 148.101562 69.335938 151.023438 L 73.125 156.351562 L 75.25 155.375 C 78.074219 154.074219 79.726562 153.1875 81.675781 151.914062 C 83.386719 150.800781 86 148.851562 86.460938 148.351562 L 86.726562 148.0625 L 85.75 145.875 C 85.226562 144.675781 84.011719 142.023438 83.0625 140 C 82.125 137.976562 81.289062 136.136719 81.210938 135.914062 C 81.085938 135.511719 81.113281 135.488281 82.199219 134.3125 C 84.363281 132 86.238281 129.488281 87.386719 127.351562 C 87.738281 126.710938 88.101562 126.101562 88.199219 126 C 88.398438 125.789062 88.101562 125.75 95.6875 127 C 98.648438 127.5 101.300781 127.925781 101.574219 127.960938 L 102.085938 128.023438 L 102.5 126.988281 C 103.039062 125.574219 104.386719 121.386719 104.851562 119.6875 C 105.164062 118.539062 105.761719 115.386719 106.050781 113.289062 C 106.125 112.773438 106.113281 112.75 105.664062 112.523438 C 105.0625 112.210938 102.585938 111.273438 97.625 109.4375 C 95.460938 108.636719 93.5625 107.898438 93.414062 107.800781 C 93.136719 107.625 93.125 107.550781 93.125 105.648438 C 93.125 102.824219 92.75 100.074219 91.925781 96.835938 C 91.75 96.175781 91.625 95.5 91.648438 95.351562 C 91.675781 95.164062 92.550781 94.460938 94.550781 93.039062 C 96.925781 91.335938 102.273438 87.351562 102.664062 87 C 102.875 86.8125 101.039062 82.886719 99.550781 80.300781 C 98.125 77.8125 95.011719 73.5 94.664062 73.5 C 94.414062 73.5 90.75 75.136719 86.625 77.085938 C 84.523438 78.085938 82.664062 78.9375 82.476562 78.960938 C 82.175781 79.023438 81.9375 78.835938 80.523438 77.476562 C 78.898438 75.886719 76.761719 74.199219 75.1875 73.273438 C 74.363281 72.789062 73.25 72.039062 72.738281 71.625 C 72.476562 71.414062 72.375 72.125 73.875 62.6875 C 74.210938 60.488281 74.539062 58.488281 74.574219 58.226562 L 74.636719 57.773438 L 72.726562 57.023438 C 70.449219 56.136719 67.761719 55.25 67.335938 55.25 C 67.164062 55.25 66.8125 55.164062 66.550781 55.050781 C 66.050781 54.835938 61.3125 53.835938 60.113281 53.6875 L 59.398438 53.601562 Z M 55.664062 86.9375 C 61.8125 87.738281 66.976562 90.976562 69.988281 95.914062 C 71.335938 98.113281 72.460938 100.914062 72.886719 103.0625 C 73 103.636719 73.0625 104.800781 73.0625 106.4375 C 73.050781 108.710938 73.023438 109.074219 72.699219 110.4375 C 71.710938 114.699219 70.175781 117.664062 67.625 120.238281 C 64.648438 123.25 60.539062 125.351562 56.261719 126.0625 C 52.601562 126.675781 47.773438 125.8125 43.988281 123.863281 C 38.3125 120.925781 34.289062 114.898438 33.625 108.3125 C 33.273438 104.863281 34.300781 100.125 36.125 96.8125 C 38.800781 91.949219 44.085938 88.1875 49.726562 87.136719 C 51.976562 86.710938 53.550781 86.664062 55.664062 86.9375 Z M 55.664062 86.9375 \"/>\n                      <path style=\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\" d=\"M 51.875 89.835938 C 49.851562 90.050781 47.925781 90.648438 45.875 91.699219 C 41.324219 94.011719 38.789062 97.289062 37.4375 102.5625 C 36.523438 106.125 36.5625 108.800781 37.585938 111.851562 C 38.625 114.949219 41.324219 118.449219 44.136719 120.324219 C 49.289062 123.75 55.664062 124.1875 61.0625 121.460938 C 65.613281 119.1875 68.851562 115.023438 69.898438 110.113281 C 70.125 109.050781 70.175781 108.414062 70.175781 106.5625 C 70.175781 104.523438 70.148438 104.1875 69.835938 102.960938 C 68.6875 98.386719 65.761719 94.335938 62 92.125 C 59.238281 90.488281 54.898438 89.511719 51.875 89.835938 Z M 54.898438 93.9375 C 56.726562 94.136719 59.136719 95.039062 60.761719 96.125 C 63.050781 97.664062 65.113281 100.636719 65.898438 103.511719 C 66.148438 104.425781 66.1875 104.835938 66.175781 106.625 C 66.164062 108.324219 66.113281 108.863281 65.898438 109.675781 C 65.300781 111.863281 63.675781 114.539062 62.164062 115.851562 C 59.539062 118.113281 57.210938 119.101562 54.175781 119.210938 C 52.386719 119.289062 51.351562 119.136719 49.449219 118.539062 C 45.824219 117.398438 43.164062 114.789062 41.636719 110.914062 C 40.761719 108.664062 40.585938 105.726562 41.1875 103.335938 C 41.449219 102.351562 42.3125 100.511719 43.011719 99.488281 C 44.976562 96.574219 48.710938 94.300781 52.261719 93.886719 C 53.164062 93.789062 53.449219 93.789062 54.898438 93.9375 Z M 54.898438 93.9375 \"/>\n                      </g>\n                      </svg>\n                      `;\n        clearInterval(window.SVGExist[id_du_div]); // Arrête le timer\n      }\n    }, 100); // Vérifie toutes les 100ms\n  }\n}\n/**\n * Crée un diagramme pour une fonction arithmétique à deux étapes produit puis somme\n * @param {string} id_du_div id du div contenant le SVG\n * @param {number} w largeur du div du svg\n * @param {numer} h hauteur du div du svg\n * @param {string} nom nom de la fonction\n * @param {string} x_ant antécédent de départ\n * @param {array} etapes_expressions tableau contenant les opérations et les expressions algébriques des étapes\n * @author Sébastien Lozano\n */\n\nfunction SVG_machine_diag_3F12(id_du_div, w, h, nom, x_ant, etapes_expressions) {\n  'use strict';\n\n  const interligne = 10; // w/80; //h/10; // unité d'espacement\n\n  if (!window.SVGExist) {\n    window.SVGExist = {};\n  } // Si SVGExist n'existe pas on le créé\n  // SVGExist est un dictionnaire dans lequel on stocke les listenner sur la création des div\n\n\n  window.SVGExist[id_du_div] = setInterval(function () {\n    if ($(`#${id_du_div}`).length) {\n      $(`#${id_du_div}`).html(''); // Vide le div pour éviter les SVG en doublon\n      // on crée un rectangle dont la taille est adaptée au texte\n      // let path_cadre_rect_ant = 'M0,0L0,-'+interligne+',L'+(w_x_ant + 2*interligne)+',-'+interligne+',L'+(w_x_ant + 2*interligne)+','+interligne+'L0,'+interligne+'Z';\n\n      document.getElementById(id_du_div).innerHTML = `\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 ` + w + ' ' + h + '\" width=\"' + w + `\">\n                      <g>\n                          <path d=\"M0 ` + 5 * interligne + 'L0 ' + 3 * interligne + 'L' + 5 * interligne + ' ' + 3 * interligne + 'L' + 5 * interligne + ' ' + 7 * interligne + 'L0 ' + 7 * interligne + `Z \" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </path>\n                          <foreignObject width=\"` + interligne + '\" height=\"' + h / 2 + '\" x=\"' + 2.5 * interligne + '\" y=\"' + h / 4 + `\">\n                              <div style=\"position: fixed\">\n                                  <span class=\"katex-display\">\n                                      <span class=\"katex\">\n                                          <span class=\"katex-html\" aria-hidden=\"true\">\n                                              <span class=\"base\">\n                                                  <span class=\"mord mathdefault\">` + x_ant + `</span>\n                                              </span>\n                                          </span>\n                                      </span>\n                                  </span>\n                              </div>\n                          </foreignObject>\n                      </g>\n                      <g>\n                          <line x1=\"` + 5 * interligne + '\" y1=\"' + 5 * interligne + '\" x2=\"' + 7 * interligne + '\" y2=\"' + 5 * interligne + `\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </line>\n                          <circle r=\"` + 2 * interligne + '\" cx=\"' + 9 * interligne + '\" cy=\"' + 5 * interligne + `\" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </circle>\n                          <path d=\"M` + 11 * interligne + ' ' + 5 * interligne + 'L' + 13 * interligne + ' ' + 5 * interligne + 'L' + (13 * interligne - interligne / 2) + ' ' + (5 * interligne - interligne / 2) + 'M' + 13 * interligne + ' ' + 5 * interligne + 'L' + (13 * interligne - interligne / 2) + ' ' + (5 * interligne + interligne / 2) + ` \" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </path>\n                          <foreignObject width=\"` + 4 * interligne + '\" height=\"' + h / 2 + '\" x=\"' + 7.5 * interligne + '\" y=\"' + h / 4 + `\">\n                              <div style=\"position: fixed\">\n                                  <span class=\"katex-display\">\n                                      <span class=\"katex\">\n                                          <span class=\"katex-html\" aria-hidden=\"true\">\n                                              <span class=\"base\">\n                                                  <span class=\"mord mathdefault\">×` + etapes_expressions[0][0] + `</span>\n                                              </span>\n                                          </span>\n                                      </span>\n                                  </span>\n                              </div>\n                          </foreignObject>\n                      </g>\n                      <g>\n                          <path d=\"M` + 13 * interligne + ' ' + 5 * interligne + 'L' + 13 * interligne + ' ' + 3 * interligne + 'L' + 21 * interligne + ' ' + 3 * interligne + 'L' + 21 * interligne + ' ' + 7 * interligne + 'L' + 13 * interligne + ' ' + 7 * interligne + `Z \" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </path>\n                          <foreignObject width=\"` + 2.5 * interligne + '\" height=\"' + h / 2 + '\" x=\"' + 16 * interligne + '\" y=\"' + h / 4 + `\">\n                              <div style=\"position: fixed\">\n                                  <span class=\"katex-display\">\n                                      <span class=\"katex\">\n                                          <span class=\"katex-html\" aria-hidden=\"true\">\n                                              <span class=\"base\">\n                                                  <span class=\"mord mathdefault\">` + etapes_expressions[0][1] + `</span>\n                                              </span>\n                                          </span>\n                                      </span>\n                                  </span>\n                              </div>\n                          </foreignObject>\n                      </g>\n                      <g>\n                          <line x1=\"` + 21 * interligne + '\" y1=\"' + 5 * interligne + '\" x2=\"' + 23 * interligne + '\" y2=\"' + 5 * interligne + `\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </line>\n                          <circle r=\"` + 2 * interligne + '\" cx=\"' + 25 * interligne + '\" cy=\"' + 5 * interligne + `\" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </circle>\n                          <path d=\"M` + 27 * interligne + ' ' + 5 * interligne + 'L' + 29 * interligne + ' ' + 5 * interligne + 'L' + (29 * interligne - interligne / 2) + ' ' + (5 * interligne - interligne / 2) + 'M' + 29 * interligne + ' ' + 5 * interligne + 'L' + (29 * interligne - interligne / 2) + ' ' + (5 * interligne + interligne / 2) + ` \" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </path>\n                          <foreignObject width=\"` + 4 * interligne + '\" height=\"' + h / 2 + '\" x=\"' + 23.5 * interligne + '\" y=\"' + h / 4 + `\">\n                          <body xmlns=\"http://www.w3.org/1999/xhtml\">\n                              <div style=\"position: fixed\">\n                                  <span class=\"katex-display\">\n                                      <span class=\"katex\">\n                                          <span class=\"katex-html\" aria-hidden=\"true\">\n                                              <span class=\"base\">\n                                                  <span class=\"mord mathdefault\">+` + etapes_expressions[1][0] + `</span>\n                                              </span>\n                                          </span>\n                                      </span>\n                                  </span>\n                              </div>\n                              </body>\n                          </foreignObject>\n                      </g>\n                      <g>\n                          <path d=\"M` + 29 * interligne + ' ' + 5 * interligne + 'L' + 29 * interligne + ' ' + 3 * interligne + 'L' + 44 * interligne + ' ' + 3 * interligne + 'L' + 44 * interligne + ' ' + 7 * interligne + 'L' + 29 * interligne + ' ' + 7 * interligne + `Z \" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </path>\n                          <foreignObject width=\"` + 12 * interligne + '\" height=\"' + h / 2 + '\" x=\"' + 31 * interligne + '\" y=\"' + h / 4 + `\">\n                              <div style=\"position: fixed\">\n                                  <span class=\"katex-display\">\n                                      <span class=\"katex\">\n                                          <span class=\"katex-html\" aria-hidden=\"true\">\n                                              <span class=\"base\">\n                                                  <span class=\"mord mathdefault\">` + nom + '<span class=\"mopen\">(</span>' + x_ant + '<span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right: 0.408889em;\"></span>=<span class=\"mspace\" style=\"margin-right: 0.408889em;\"></span>' + etapes_expressions[1][1] + `</span>\n                                              </span>\n                                          </span>\n                                      </span>\n                                  </span>\n                              </div>\n                          </foreignObject>\n                      </g>\n                  </svg>\t\n                  `;\n      clearInterval(window.SVGExist[id_du_div]); // Arrête le timer\n    }\n  }, 100); // Vérifie toutes les 100ms\n}\n/**\n* Crée une flèche orange pour la fonction machine\n* @param {object} groupe groupe svg\n* @param {string} chemin path pour la ligne\n* @param {string} couleur couleur\n* @Auteur Sébastien Lozano\n*/\n\nfunction SVG_fleche_machine_maths(groupe, chemin, couleur) {\n  'use strict';\n\n  return groupe.path(chemin).fill(couleur).stroke({\n    color: couleur,\n    width: 1,\n    linecap: 'round',\n    linejoin: 'null'\n  });\n}\n/** Trace un chemin pour un groupe donné avec une couleur donnée\n  * @param {object} groupe groupe\n  * @param {string} chemin path\n  * @param {string} couleur couleur\n  * @Auteur Sébastien Lozano\n  */\n\nfunction SVG_chemin(groupe, chemin, couleur) {\n  'use strict';\n\n  return groupe.path(chemin).fill('none').stroke({\n    color: couleur,\n    width: 1,\n    linecap: 'round',\n    linejoin: 'null'\n  });\n}\n/**\n   * Crée un diagramme pour une fonction arithmétique à une étape produit\n   * @param {string} id_du_div id du div contenant le SVG\n   * @param {number} w largeur du div du svg\n   * @param {numer} h hauteur du div du svg\n   * @param {string} nom nom de la fonction\n   * @param {string} x_ant antécédent de départ\n   * @param {array} etapes_expressions tableau contenant les opérations et les expressions algébriques des étapes\n   * @Auteur Sébastien Lozano\n   */\n\nfunction SVG_machine_diag_3F1_act_mono(id_du_div, w, h, nom, x_ant, etapes_expressions) {\n  'use strict';\n\n  const interligne = 10; // w/80; //h/10; // unité d'espacement\n\n  if (!window.SVGExist) {\n    window.SVGExist = {};\n  } // Si SVGExist n'existe pas on le créé\n  // SVGExist est un dictionnaire dans lequel on stocke les listenner sur la création des div\n\n\n  window.SVGExist[id_du_div] = setInterval(function () {\n    if ($(`#${id_du_div}`).length) {\n      $(`#${id_du_div}`).html(''); // Vide le div pour éviter les SVG en doublon\n      // on crée un rectangle dont la taille est adaptée au texte\n      // let path_cadre_rect_ant = 'M0,0L0,-'+interligne+',L'+(w_x_ant + 2*interligne)+',-'+interligne+',L'+(w_x_ant + 2*interligne)+','+interligne+'L0,'+interligne+'Z';\n\n      document.getElementById(id_du_div).innerHTML = `\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 ` + w + ' ' + h + '\" width=\"' + w + `\">\n                      <g>\n                          <path d=\"M0 ` + 5 * interligne + 'L0 ' + 3 * interligne + 'L' + 5 * interligne + ' ' + 3 * interligne + 'L' + 5 * interligne + ' ' + 7 * interligne + 'L0 ' + 7 * interligne + `Z \" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </path>\n                          <foreignObject width=\"` + interligne + '\" height=\"' + h / 2 + '\" x=\"' + 2.5 * interligne + '\" y=\"' + h / 4 + `\">\n                              <div style=\"position: fixed\">\n                                  <span class=\"katex-display\">\n                                      <span class=\"katex\">\n                                          <span class=\"katex-html\" aria-hidden=\"true\">\n                                              <span class=\"base\">\n                                                  <span class=\"mord mathdefault\">` + x_ant + `</span>\n                                              </span>\n                                          </span>\n                                      </span>\n                                  </span>\n                              </div>\n                          </foreignObject>\n                      </g>\n                      <g>\n                          <line x1=\"` + 5 * interligne + '\" y1=\"' + 5 * interligne + '\" x2=\"' + 7 * interligne + '\" y2=\"' + 5 * interligne + `\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </line>\n                          <circle r=\"` + 2 * interligne + '\" cx=\"' + 9 * interligne + '\" cy=\"' + 5 * interligne + `\" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </circle>\n                          <path d=\"M` + 11 * interligne + ' ' + 5 * interligne + 'L' + 13 * interligne + ' ' + 5 * interligne + 'L' + (13 * interligne - interligne / 2) + ' ' + (5 * interligne - interligne / 2) + 'M' + 13 * interligne + ' ' + 5 * interligne + 'L' + (13 * interligne - interligne / 2) + ' ' + (5 * interligne + interligne / 2) + ` \" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </path>\n                          <foreignObject width=\"` + 4 * interligne + '\" height=\"' + h / 2 + '\" x=\"' + 7.5 * interligne + '\" y=\"' + h / 4 + `\">\n                              <div style=\"position: fixed\">\n                                  <span class=\"katex-display\">\n                                      <span class=\"katex\">\n                                          <span class=\"katex-html\" aria-hidden=\"true\">\n                                              <span class=\"base\">\n                                                  <span class=\"mord mathdefault\">×` + etapes_expressions[0][0] + `</span>\n                                              </span>\n                                          </span>\n                                      </span>\n                                  </span>\n                              </div>\n                          </foreignObject>\n                      </g>\n                      <g>\n                          <path d=\"M` + 13 * interligne + ' ' + 5 * interligne + 'L' + 13 * interligne + ' ' + 3 * interligne + 'L' + 27 * interligne + ' ' + 3 * interligne + 'L' + 27 * interligne + ' ' + 7 * interligne + 'L' + 13 * interligne + ' ' + 7 * interligne + `Z \" fill=\"none\" stroke-linejoin=\"null\" stroke-linecap=\"round\" stroke-width=\"3\" stroke=\"#f15929\">\n                          </path>\n                          <foreignObject width=\"` + 12 * interligne + '\" height=\"' + h / 2 + '\" x=\"' + 16 * interligne + '\" y=\"' + h / 4 + `\">\n                              <div style=\"position: fixed\">\n                                  <span class=\"katex-display\">\n                                      <span class=\"katex\">\n                                          <span class=\"katex-html\" aria-hidden=\"true\">\n                                              <span class=\"base\">\n                                                  \n                                                  <span class=\"mord mathdefault\">` + nom + '<span class=\"mopen\">(</span>' + x_ant + '<span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right: 0.408889em;\"></span>=<span class=\"mspace\" style=\"margin-right: 0.408889em;\"></span>' + etapes_expressions[0][1] + `</span>\n                                              </span>\n                                          </span>\n                                      </span>\n                                  </span>\n                              </div>\n                          </foreignObject>\n                      </g>\n                  </svg>\t\n                  `;\n      clearInterval(window.SVGExist[id_du_div]); // Arrête le timer\n    }\n  }, 100); // Vérifie toutes les 100ms\n}\n/**\n   * Fonction pour particulariser une police svg et ses paramètres\n   * @param {string} font\n   * @param {string} interligne\n   * @param {string} ancre\n   * @param {string} f_style\n   * @param {string} f_weight\n   * @author Sébastien Lozano\n   */\n\nfunction my_svg_font(font, interligne, ancre, f_style, f_weight) {\n  'use strict';\n\n  return {\n    family: font,\n    size: interligne,\n    anchor: ancre,\n    style: f_style,\n    //, leading : 0.5\n    weight: f_weight\n  };\n}\n/**\n   * Fonction pour créer une machine mathématique SVG, une fonction!\n   * gestion du rendu KaTeX temporaire avec insertion manuelle de balises foreignObject pour les textes\n   * ATTENTION BUG SVG DONC LES ANIMATIONS SONT FILMEES A PARTIR DE CELLES GENEREES PAR LA FONCTION SVG_machine_maths() SOUS FIREFOX\n   * DE FACON A AVOIR UN RENDU UNIFORME QUEL QUE SOIT LE NAVIGATEUR ON REND LES ANIMATIONS PAR DES VIDEOS\n   * ON LAISSE LA PIROUETTE DE DETECTION DU USERAGENT EN COMMENTAIRE EN ATTENDANT DE TROUVER UNE SOLUTION DE RENDU LATEX DANS SVG UNIVERSELLE\n   * @param {string} id_du_div id_du_div\n   * @param {number} w width du svg\n   * @param {number} h height du svg\n   * @param {string} nom nom de la fonction\n   * @param {string} etape1 etape 1 du procédé de calcul\n   * @param {string} etape2 etape 2 du procédé de calcul\n   * @param {string} etape3 etape 3 du procédé de calcul\n   * @param {string} x_ligne1 antécédent ligne1\n   * @param {string} x_ligne2 antécédent ligne2\n   * @param {string} y_ligne1 image ligne1\n   * @param {string} y_ligne2 image ligne2\n   * @author Sébastien Lozano\n   */\n\nfunction SVG_machine_maths(id_du_div, w, h, nom, etape1, etape2, etape3, x_ligne1, x_ligne2, y_ligne1, y_ligne2) {\n  'use strict';\n\n  const interligne = 15; // pour un interligne uniforme\n\n  const prop_font = my_svg_font('Helvetica', interligne, 'start', 'normal', 'normal');\n  const prop_font_nom = my_svg_font('Helvetica', interligne, 'start', 'normal', 'bold');\n  const prop_font_etape = my_svg_font('Helvetica', 4 * interligne / 5, 'start', 'normal', 'normal');\n\n  if (!window.SVGExist) {\n    window.SVGExist = {};\n  } // Si SVGExist n'existe pas on le créé\n  // SVGExist est un dictionnaire dans lequel on stocke les listenner sur la création des div\n\n\n  window.SVGExist[id_du_div] = setInterval(function () {\n    if ($(`#${id_du_div}`).length) {\n      $(`#${id_du_div}`).html(''); // Vide le div pour éviter les SVG en doublon\n      // const mon_svg = SVG().addTo(`#${id_du_div}`).viewbox(0, 0, w, h).size('100%','100%');\n\n      const mon_svg = (0,_svgdotjs_svg_js__WEBPACK_IMPORTED_MODULE_2__.SVG)().addTo(`#${id_du_div}`).viewbox(0, 0, w, h); // on trace un cadre pour le debug\n      // mon_svg.path('M0,0 L'+w+',0L'+w+','+h+'L0,'+h+'Z').fill('none').stroke({ color: '#f15929', width: 1, linecap: 'round', linejoin:'null'});\n      // path pour créer des fleches\n\n      const path_fleche = 'm0,0 l-' + interligne / 2 + ',-' + interligne + ' l' + interligne + ',' + interligne + ' l-' + interligne + ',' + interligne + ' l' + interligne / 2 + ',-' + interligne + 'z'; // On crée une timeline\n\n      const timeline = new _svgdotjs_svg_js__WEBPACK_IMPORTED_MODULE_2__.SVG.Timeline(); // ------------CREATION DES GROUPES----------------------\n      // ------------Antécédent--------------------------------\n\n      const ant = mon_svg.group(); // ------------Image-------------------------------------\n\n      const im = mon_svg.group(); // ------------PREPARATION DES DIMENSIONS NECESSAIRES----\n      // ------------Dimension Antécédent----------------------\n\n      const ant_ligne1 = ant.text(x_ligne1).font(prop_font);\n      const ant_ligne2 = ant.text(x_ligne2).font(prop_font);\n      const w_ant = Math.max(ant_ligne1.length(), ant_ligne2.length()) + interligne;\n      ant_ligne1.clear();\n      ant_ligne2.clear(); // ------------Dimension Image---------------------------\n\n      const im_ligne1 = im.text(y_ligne1).font(prop_font);\n      const im_ligne2 = im.text(y_ligne2).font(prop_font);\n      const w_im = Math.max(im_ligne1.length(), im_ligne2.length()) + interligne;\n      im_ligne1.clear();\n      im_ligne2.clear(); // ------------Dimension Machine-------------------------\n      // on crée des variables pour le texte à afficher sur la machine afin de récupérer leur taille\n      // pour ajuster celle de la machine.\n\n      let W_machine_nom, machine_nom, machine_etape1, w_machine_etape1, machine_etape2, w_machine_etape2, machine_etape3, w_machine_etape3;\n\n      if (nom != '') {\n        machine_nom = mon_svg.text(nom).font(prop_font_nom);\n        w_machine_nom = machine_nom.length();\n        machine_nom.clear();\n      } else {\n        w_machine_nom = 0;\n      }\n\n      if (etape1 != '') {\n        machine_etape1 = mon_svg.text(etape1).font(prop_font_etape);\n        w_machine_etape1 = machine_etape1.length();\n        machine_etape1.clear();\n      } else {\n        w_machine_etape1 = 0;\n      }\n\n      if (etape2 != '') {\n        machine_etape2 = mon_svg.text(etape2).font(prop_font_etape);\n        w_machine_etape2 = machine_etape2.length();\n        machine_etape2.clear();\n      } else {\n        w_machine_etape2 = 0;\n      }\n\n      if (etape3 != '') {\n        machine_etape3 = mon_svg.text(etape3).font(prop_font_etape);\n        w_machine_etape3 = machine_etape3.length();\n        machine_etape3.clear();\n      } else {\n        w_machine_etape3 = 0;\n      }\n\n      const w_etape_max = Math.max(w_machine_nom, w_machine_etape1, w_machine_etape2, w_machine_etape3, w_ant + interligne, w_im + interligne) + 1.5 * interligne; // ------------GROUPE ANTECEDENT-------------------------\n\n      const ant_ligne = ant.foreignObject(w_ant, h).attr({\n        x: '0',\n        y: '0'\n      });\n      const antDiv = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      katex__WEBPACK_IMPORTED_MODULE_1___default().render(x_ligne1 + '\\\\newline ' + x_ligne2, antDiv, {\n        displayMode: true,\n        throwOnError: true,\n        errorColor: '#CC0000',\n        strict: 'ignore',\n        trust: false\n      });\n      ant_ligne.add(antDiv);\n      ant_ligne.dmove(0, -antDiv.offsetHeight / 2);\n      const fleche_ant = SVG_fleche_machine_maths(ant, path_fleche, '#f15929');\n      fleche_ant.dmove(antDiv.offsetWidth + interligne / 2, interligne); // on positionne le groupe antécédent\n\n      ant.dmove(0, h / 2 - interligne); // ------------GROUPE IMAGE-------------------------\n\n      const im_ligne = im.foreignObject(w_im, h).attr({\n        x: '0',\n        y: '0'\n      });\n      const imDiv = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      katex__WEBPACK_IMPORTED_MODULE_1___default().render(y_ligne1 + '\\\\newline ' + y_ligne2, imDiv, {\n        displayMode: true,\n        throwOnError: true,\n        errorColor: '#CC0000',\n        strict: 'ignore',\n        trust: false\n      });\n      im_ligne.add(imDiv);\n      im_ligne.dmove(0, -imDiv.offsetHeight / 2);\n      const fleche_im = SVG_fleche_machine_maths(im, path_fleche, '#f15929');\n      fleche_im.dmove(-interligne / 2, interligne); // on positionne le groupe image\n\n      im.dmove(w / 2 - imDiv.offsetWidth / 2, h / 2 - interligne); // ------------GROUPE MACHINE-------------------------\n      // const path_machine = 'M-5,0 L-5,-5 L-5,5 M-5,0 L10,0 L10,-40 L100,-40 L100,0 L120,0 L115,-5 L120,0 L115,5 L120,0 L100,0 L100,40 L10,40 L10,0';\n\n      const path_machine = 'M-10,0 L-10,-5 L-10,5 M-10,0 L10,0 L10,-' + (h / 2 - 5) + ' L' + (w_etape_max + 20) + ',-' + (h / 2 - 5) + ' L' + (w_etape_max + 20) + ',0 L' + (w_etape_max + 40) + ',0 L' + (w_etape_max + 35) + ',-5 L' + (w_etape_max + 40) + ',0 L' + (w_etape_max + 35) + ',5 L' + (w_etape_max + 40) + ',0 L' + (w_etape_max + 20) + ',0 L' + (w_etape_max + 20) + ',' + (h / 2 - 5) + ' L10,' + (h / 2 - 5) + ' L10,0';\n      const machine = mon_svg.path(path_machine).fill('#fff').stroke({\n        color: '#f15929',\n        width: 3,\n        linecap: 'round',\n        linejoin: 'round'\n      });\n      machine.dmove(w / 2 - w_etape_max / 2 - 20 + interligne / 2, h / 2); // w/2;  60 est la moitié de la taille de la machine en largeur\n\n      const fobj_machine = mon_svg.foreignObject(w_etape_max, h).attr({\n        x: w / 2 - w_etape_max / 2,\n        y: '0'\n      });\n      const machineDiv = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      katex__WEBPACK_IMPORTED_MODULE_1___default().render('\\\\mathbf{' + nom + '}\\\\newline ' + etape1 + '\\\\newline ' + etape2 + '\\\\newline ' + etape3, machineDiv, {\n        displayMode: true,\n        throwOnError: true,\n        errorColor: '#CC0000',\n        strict: 'ignore',\n        trust: false\n      });\n      fobj_machine.add(machineDiv);\n      fobj_machine.dmove(0, h / 2 - interligne - machineDiv.offsetHeight / 2); // ------------ANIMATION-------------------------\n\n      ant.timeline(timeline);\n      im.timeline(timeline);\n      const runner1 = ant.animate(8000, 0, 'absolute').dmove(w / 2 - w_ant / 2, 0);\n      const runner2 = im.animate(8000, 0, 'after').dmove(w - w_im / 2, 0);\n      runner1.loop(true, false, 8000);\n      runner2.loop(true, false, 8000);\n      clearInterval(window.SVGExist[id_du_div]); // Arrête le timer\n    }\n  }, 100); // Vérifie toutes les 100ms\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbW9kdWxlcy9tYWNyb1N2Z0pzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWF0aGFsZWEvLi9zcmMvanMvbW9kdWxlcy9tYWNyb1N2Z0pzLmpzPzY2YzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsICQgKi9cbi8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xuaW1wb3J0IHsgY2FsY3VsLCB0ZXhOb21icmVjLCB0ZXhGcmFjdGlvblNpZ25lLCBzdHJpbmdOb21icmUgfSBmcm9tICcuL291dGlscy5qcydcbmltcG9ydCBrYXRleCBmcm9tICdrYXRleCdcbmltcG9ydCB7IFNWRyB9IGZyb20gJ0Bzdmdkb3Rqcy9zdmcuanMnXG5cbi8qKlxuICogVHJhY2UgdW4gYXhlIHZlcnRpY2FsIGdyYWR1w6lcbiAqIEBwYXJhbSB7c3RyaW5nfSBtb25fc3ZnIGwnaWQgZHUgc3ZnXG4gKiBAcGFyYW0ge251bWJlcn0gc3RhcnQgb3Jkb25uw6llIGR1IGTDqWJ1dCBkZSBsJ2F4ZSBlbiBwaXhlbHMgKGVuZC1zdGFydD1sb25ndWV1ciBkZWwnYXhlKVxuICogQHBhcmFtIHtudW1iZXJ9IGVuZCBvcmRvbm7DqWUgZGUgZmluIGRlbCdheGUgZW4gcGl4ZWxzXG4gKiBAcGFyYW0ge251bWJlcn0gYWJzTyBwb3NpdGlvbiBlbiBhYnNjaXNzZSBkZSBsJ2F4ZSBlbiBwaXhlbHNcbiAqIEBwYXJhbSB7bnVtYmVyfSBEZWx0YVkgTm9tYnJlIGVudGllciBkZSBncmFkdWF0aW9ucyDDoCBmYWlyZSBzdXIgbGEgbG9uZ3VldXIgZGUgbCdheGUuXG4gKiBAQXV0ZXVyIEplYW4tQ2xhdWRlIExob3RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBTVkdfQXhlX3ZlcnRpY2FsIChtb25fc3ZnLCBzdGFydCwgZW5kLCBhYnNPLCBEZWx0YVksIHN1YlkpIHtcbiAgY29uc3QgZHJvaXRlID0gbW9uX3N2Zy5saW5lKGFic08sIHN0YXJ0ICsgMiwgYWJzTywgZW5kKVxuICBkcm9pdGUuc3Ryb2tlKHsgY29sb3I6ICdibGFjaycsIHdpZHRoOiAyLCBsaW5lY2FwOiAncm91bmQnIH0pXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgRGVsdGFZOyBpKyspIHtcbiAgICBjb25zdCBsaW5lID0gbW9uX3N2Zy5saW5lKGFic08gLSAyLCAoRGVsdGFZIC0gaSkgKiAoKGVuZCAtIHN0YXJ0KSAvIERlbHRhWSksIGFic08gKyAyLCAoRGVsdGFZIC0gaSkgKiAoKGVuZCAtIHN0YXJ0KSAvIERlbHRhWSkpXG4gICAgbGluZS5zdHJva2UoeyBjb2xvcjogJ2JsYWNrJywgd2lkdGg6IDIsIGxpbmVjYXA6ICdyb3VuZCcgfSlcbiAgICBpZiAoc3ViWSAhPSAxKSB7XG4gICAgICBmb3IgKGxldCBrID0gMTsgayA8IHN1Ylk7IGsrKykge1xuICAgICAgICBjb25zdCBsaW5lID0gbW9uX3N2Zy5saW5lKGFic08gLSAyLCAoKGVuZCAtIHN0YXJ0KSAvIERlbHRhWSkgKiAoRGVsdGFZIC0gaSAtIGsgLyBzdWJZKSwgYWJzTyArIDIsICgoZW5kIC0gc3RhcnQpIC8gRGVsdGFZKSAqIChEZWx0YVkgLSBpIC0gayAvIHN1YlkpKVxuICAgICAgICBsaW5lLnN0cm9rZSh7IGNvbG9yOiAnYmxhY2snLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJyB9KVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuLyoqXG4gICAqIFRyYWNlIHVuIGF4ZSBob3Jpem9udGFsIGdyYWR1w6lcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1vbl9zdmcgbCdpZCBkdSBzdmdcbiAgICogQHBhcmFtIHtudW1iZXJ9IHN0YXJ0IGFic2Npc3NlIGR1IGTDqWJ1dCBkZSBsJ2F4ZSBlbiBwaXhlbHMgKGVuZC1zdGFydD1sb25ndWV1ciBkZWwnYXhlKVxuICAgKiBAcGFyYW0ge251bWJlcn0gZW5kIGFic2Npc3NlIGRlIGZpbiBkZWwnYXhlIGVuIHBpeGVsc1xuICAgKiBAcGFyYW0ge251bWJlcn0gYWJzTyBwb3NpdGlvbiBlbiBvcmRvbm7DqWUgZGUgbCdheGUgZW4gcGl4ZWxzXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBEZWx0YVggTm9tYnJlIGVudGllciBkZSBncmFkdWF0aW9ucyDDoCBmYWlyZSBzdXIgbGEgbG9uZ3VldXIgZGUgbCdheGUuXG4gICAqIEBBdXRldXIgSmVhbi1DbGF1ZGUgTGhvdGVcbiAgICovXG5leHBvcnQgZnVuY3Rpb24gU1ZHX0F4ZV9ob3Jpem9udGFsIChtb25fc3ZnLCBzdGFydCwgZW5kLCBvcmRPLCBEZWx0YVgsIHN1YlgpIHtcbiAgY29uc3QgZHJvaXRlID0gbW9uX3N2Zy5saW5lKHN0YXJ0LCBvcmRPLCBlbmQgLSAyLCBvcmRPKVxuICBkcm9pdGUuc3Ryb2tlKHsgY29sb3I6ICdibGFjaycsIHdpZHRoOiAyLCBsaW5lY2FwOiAncm91bmQnIH0pXG4gIGZvciAobGV0IGkgPSAxOyBpIDw9IERlbHRhWDsgaSsrKSB7XG4gICAgY29uc3QgbGluZSA9IG1vbl9zdmcubGluZShzdGFydCArIChEZWx0YVggLSBpKSAqICgoZW5kIC0gc3RhcnQpIC8gRGVsdGFYKSwgb3JkTyAtIDIsIHN0YXJ0ICsgKERlbHRhWCAtIGkpICogKChlbmQgLSBzdGFydCkgLyBEZWx0YVgpLCBvcmRPICsgMilcbiAgICBsaW5lLnN0cm9rZSh7IGNvbG9yOiAnYmxhY2snLCB3aWR0aDogMiwgbGluZWNhcDogJ3JvdW5kJyB9KVxuICAgIGlmIChzdWJYICE9IDEpIHtcbiAgICAgIGZvciAobGV0IGsgPSAxOyBrIDwgc3ViWDsgaysrKSB7XG4gICAgICAgIGNvbnN0IGxpbmUgPSBtb25fc3ZnLmxpbmUoc3RhcnQgKyAoRGVsdGFYIC0gaSArIGsgLyBzdWJYKSAqICgoZW5kIC0gc3RhcnQpIC8gRGVsdGFYKSwgb3JkTyAtIDIsIHN0YXJ0ICsgKERlbHRhWCAtIGkgKyBrIC8gc3ViWCkgKiAoKGVuZCAtIHN0YXJ0KSAvIERlbHRhWCksIG9yZE8gKyAyKVxuICAgICAgICBsaW5lLnN0cm9rZSh7IGNvbG9yOiAnYmxhY2snLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJyB9KVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAgICogUGxhY2UgdW5lIGdyaWxsZSBkZSBwb2ludHMgZGFucyB1biByZXDDqHJlIGF1IHNlaW4gZCd1biBTVkdcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1vbl9zdmcgIGwnaWQgZHUgc3ZnXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhYnNPIGFic2Npc3NlIGR1IHBvaW50IGRlIGTDqXBhcnQgZGUgbGEgZ3JpbGxlIChub3JtYWxlbWVudCAwKVxuICAgKiBAcGFyYW0ge251bWJlcn0gb3JkTyBvcmRvbm7DqWUgZHUgcG9pbnQgZGUgZMOpcGFydCBkZSBsYSBncmlsbGUgKG5vcm1hbGVtZW50IDApXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB0YWlsbGVYIGxhcmdldXIgdG90YWxlIGRlIGxhIGdyaWxsZSBlbiBwaXhlbHNcbiAgICogQHBhcmFtIHtudW1iZXJ9IHRhaWxsZVkgaGF1dGV1ciB0b3RhbGUgZGUgbGEgZ3JpbGxlIGVuIHBpeGVsc1xuICAgKiBAcGFyYW0ge251bWJlcn0gRGVsdGFYIG5vbWJyZSBkZSBncmFkdWF0aW9ucyBob3Jpem9udGFsZXNcbiAgICogQHBhcmFtIHtudW1iZXJ9IERlbHRhWSBub21icmUgZGUgZ3JhZHVhdGlvbnMgdmVydGljYWxlc1xuICAgKiBAcGFyYW0ge251bWJlcn0gc3ViWCBjb2VmZmljaWVudCBkZSBmcmFjdGlvbm5lbWVudCBkZSBsYSBncmlsbGUgZW4gYWJzY2lzc2VcbiAgICogQHBhcmFtIHtudW1iZXJ9IHN1YlkgY29lZmZpY2llbnQgZGUgZnJhY3Rpb25uZW1lbnQgZGUgbGEgZ3JpbGxlIGVuIG9yZG9uw6nDqWVcbiAgICogQEF1dGV1ciBKZWFuLUNsYXVkZSBMaG90ZVxuICAgKi9cbmV4cG9ydCBmdW5jdGlvbiBTVkdfZ3JpbGxlIChtb25fc3ZnLCBhYnNPLCBvcmRPLCB0YWlsbGVYLCB0YWlsbGVZLCBEZWx0YVgsIERlbHRhWSwgc3ViWCwgc3ViWSkge1xuICBsZXQgbGluZV9ncmlsbGVcbiAgZm9yIChsZXQgaSA9IDA7IGkgPD0gRGVsdGFYOyBpKyspIHtcbiAgICBsaW5lX2dyaWxsZSA9IG1vbl9zdmcubGluZShhYnNPICsgaSAqICh0YWlsbGVYIC8gRGVsdGFYKSwgMCwgYWJzTyArIGkgKiAodGFpbGxlWCAvIERlbHRhWCksIHRhaWxsZVkpXG4gICAgbGluZV9ncmlsbGUuc3Ryb2tlKHsgY29sb3I6ICdsaWdodGdyYXknLCB3aWR0aDogMSB9KVxuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgRGVsdGFYOyBpKyspIHtcbiAgICBpZiAoc3ViWCAhPSAxKSB7XG4gICAgICBmb3IgKGxldCBrID0gMDsgayA8IHN1Ylg7IGsrKykge1xuICAgICAgICBsaW5lX2dyaWxsZSA9IG1vbl9zdmcubGluZShhYnNPICsgaSAqICh0YWlsbGVYIC8gRGVsdGFYKSArIGsgKiAodGFpbGxlWCAvIERlbHRhWCAvIHN1YlgpLCAwLCBhYnNPICsgaSAqICh0YWlsbGVYIC8gRGVsdGFYKSArIGsgKiAodGFpbGxlWCAvIERlbHRhWCAvIHN1YlgpLCB0YWlsbGVZKVxuICAgICAgICBsaW5lX2dyaWxsZS5zdHJva2UoeyBjb2xvcjogJ2xpZ2h0Z3JheScsIHdpZHRoOiAwLjUsIGxpbmVjYXA6ICdyb3VuZCcgfSlcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZm9yIChsZXQgaiA9IDA7IGogPD0gRGVsdGFZOyBqKyspIHtcbiAgICBsaW5lX2dyaWxsZSA9IG1vbl9zdmcubGluZSgyMCwgb3JkTyArIGogKiAodGFpbGxlWSAvIERlbHRhWSksIDIwICsgdGFpbGxlWCwgb3JkTyArIGogKiAodGFpbGxlWSAvIERlbHRhWSkpXG4gICAgbGluZV9ncmlsbGUuc3Ryb2tlKHsgY29sb3I6ICdsaWdodGdyYXknLCB3aWR0aDogMSB9KVxuICB9XG4gIGZvciAobGV0IGogPSAwOyBqIDwgRGVsdGFZOyBqKyspIHtcbiAgICBpZiAoc3ViWSAhPSAxKSB7XG4gICAgICBmb3IgKGxldCBsID0gMDsgbCA8IHN1Ylk7IGwrKykge1xuICAgICAgICBsaW5lX2dyaWxsZSA9IG1vbl9zdmcubGluZSgyMCwgb3JkTyArIGogKiAodGFpbGxlWSAvIERlbHRhWSkgKyBsICogKHRhaWxsZVkgLyBEZWx0YVkgLyBzdWJZKSwgMjAgKyB0YWlsbGVYLCBvcmRPICsgaiAqICh0YWlsbGVZIC8gRGVsdGFZKSArIGwgKiAodGFpbGxlWSAvIERlbHRhWSAvIHN1YlkpKVxuICAgICAgICBsaW5lX2dyaWxsZS5zdHJva2UoeyBjb2xvcjogJ2xpZ2h0Z3JheScsIHdpZHRoOiAwLjUsIGxpbmVjYXA6ICdyb3VuZCcgfSlcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqIFRyYWNlIHVuZSBncmFkdWF0aW9uIHN1ciBsZSBTVkdcbiAgKiBAcGFyYW0gbW9uX3N2ZyBPYmpldCBTVkdcbiAgKiBAcGFyYW0gb3JpZ2luZSBhYnNjaXNzZSBlbiBwaXhlbCBkZSBsYSBwcmVtacOocmUgZ3JhZHVhdGlvblxuICAqIEBwYXJhbSBwYXMgZGlzdGFuY2UgZW4gcGl4ZWxzIGVudHJlIGRldXggZ3JhZHVhdGlvbnNcbiAgKiBAcGFyYW0gZGVybmllcmVfZ3JhZHVhdGlvbiBhYnNjaXNzZSBsaW1pdGUgZW4gcGl4ZWxcbiAgKiBAcGFyYW0gdGFpbGxlIHRhaWxsZSB2ZXJ0aWNhbGVcbiAgKiBAcGFyYW0geSBvcmRvbm7DqWUgZGUgbGEgZHJvaXRlXG4gICogQHBhcmFtIGNvdWxldXIgY291bGV1ciBkZSBsYSBncmFkdWF0aW9uXG4gICogQHBhcmFtIHdpZHRoIGxhcmdldXIgZGUgbGEgZ3JhZHVhdGlvblxuICAqIEBBdXRldXIgUsOpbWkgQW5nb3RcbiAgKi9cbmV4cG9ydCBmdW5jdGlvbiBTVkdfZ3JhZHVhdGlvbiAobW9uX3N2Zywgb3JpZ2luZSwgcGFzLCBkZXJuaWVyZV9ncmFkdWF0aW9uLCB0YWlsbGUgPSAxMCwgeSA9IDUwLCBjb3VsZXVyID0gJ2JsYWNrJywgd2lkdGggPSA1KSB7XG4gIGZvciAobGV0IGkgPSBvcmlnaW5lOyBpIDwgZGVybmllcmVfZ3JhZHVhdGlvbjsgaSArPSBwYXMpIHtcbiAgICBjb25zdCBsaW5lID0gbW9uX3N2Zy5saW5lKGksIHkgLSB0YWlsbGUgLyAyLCBpLCB5ICsgdGFpbGxlIC8gMilcbiAgICBsaW5lLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogd2lkdGgsIGxpbmVjYXA6ICdyb3VuZCcgfSlcbiAgfVxufVxuXG4vKipcbiAgICogRWNyaXMgZGVzIG5vbWJyZXMgb3UgZGVzIHRleHRlcyDDoCB1bmUgcG9zaXRpb24gZG9ubsOpZSBkYW5zIHVuIFNWR1xuICAgKiBAcGFyYW0ge2FycmF5fSBsaXN0ZV9kX2Fic2Npc3NlcyBbW25vbWJyZSDDoCDDqWNyaXJlLGFic2Npc3NlLG9yZG9ubsOpZV1dXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB5IGxlYWRpbmcgcG91ciBwb3NpdGlvbiBkdSB0ZXh0ZSBzdXIgbGEgbGlnbmVcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvdWxldXIgY291bGV1ciBkdSBub21icmVcbiAgICogQHBhcmFtIHtudW1iZXJ9IG9wYWNpdGUgdmFsZXVyIGQnb3BhY2l0w6kgZW50cmUgMCBldCAxXG4gICAqIEBBdXRldXIgUsOpbWkgQW5nb3RcbiAgICovXG5leHBvcnQgZnVuY3Rpb24gU1ZHX2xhYmVsIChtb25fc3ZnLCBsaXN0ZV9kX2Fic2Npc3NlcywgeSwgY291bGV1ciwgb3BhY2l0ZSkge1xuICAndXNlIHN0cmljdCdcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0ZV9kX2Fic2Npc3Nlcy5sZW5ndGg7IGkrKykge1xuICAgIGxldCB0ZXh0XG4gICAgaWYgKHR5cGVvZiBsaXN0ZV9kX2Fic2Npc3Nlc1tpXVswXSA9PT0gJ251bWJlcicpIHRleHQgPSBtb25fc3ZnLnRleHQoKGxpc3RlX2RfYWJzY2lzc2VzW2ldWzBdKS50b1N0cmluZygpKVxuICAgIGVsc2UgdGV4dCA9IG1vbl9zdmcudGV4dChsaXN0ZV9kX2Fic2Npc3Nlc1tpXVswXSlcbiAgICB5ID0gcGFyc2VJbnQoeSlcbiAgICB0ZXh0Lm1vdmUobGlzdGVfZF9hYnNjaXNzZXNbaV1bMV0sIGxpc3RlX2RfYWJzY2lzc2VzW2ldWzJdKS5mb250KHtcbiAgICAgIGZpbGw6IGNvdWxldXIsXG4gICAgICBmYW1pbHk6ICdIZWx2ZXRpY2EnLFxuICAgICAgc2l6ZTogMTQsXG4gICAgICBhbmNob3I6ICdtaWRkbGUnLFxuICAgICAgbGVhZGluZzogeSxcbiAgICAgIG9wYWNpdHk6IG9wYWNpdGVcbiAgICB9KVxuICB9XG59XG4vKipcbiAgICogRWNyaXMgdW5lIGZyYWN0aW9uIGRhbnMgdW4gU1ZHXG4gICAqIEBwYXJhbSB7YW55fSBtb25fc3ZnIGwnSWQgZHUgU1ZHXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBudW0gbGUgbnVtw6lyYXRldXIgZGUgbGEgZnJhY3Rpb25cbiAgICogQHBhcmFtIHtudW1iZXJ9IGRlbiBsZSBkw6lub21pbmF0ZXVyIGRlIGxhIGZyYWN0aW9uXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IGwnYWJzY2lzc2UgZGUgc2EgcG9zaXRpb25cbiAgICogQHBhcmFtIHtudW1iZXJ9IHkgbCdvcmRvbm7DqWUgZGUgc2EgcG9zaXRpb25cbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvdWxldXIgbGEgY291bGV1ciBkZSBsYSBmcmFjdGlvblxuICAgKiBAQXV0ZXVyIFLDqW1pIEFuZ290XG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIFNWR19mcmFjdGlvbiAobW9uX3N2ZywgbnVtLCBkZW4sIHgsIHksIGNvdWxldXIpIHtcbiAgJ3VzZSBzdHJpY3QnXG4gIGNvbnN0IGxvbmd1ZXVyID0gbnVtLnRvU3RyaW5nKCkubGVuZ3RoXG4gIGNvbnN0IGxpbmUgPSBtb25fc3ZnLmxpbmUoeCAtIGxvbmd1ZXVyICogNSwgeSAtIDcsIHggKyBsb25ndWV1ciAqIDUsIHkgLSA3KVxuICBsaW5lLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMiwgbGluZWNhcDogJ3JvdW5kJyB9KVxuICBjb25zdCBudW1fdGV4dCA9IG1vbl9zdmcudGV4dChudW0udG9TdHJpbmcoKSkuYXR0cih7IHg6IHgsIHk6IHkgLSAxMCB9KVxuICBudW1fdGV4dC5mb250KHtcbiAgICBmaWxsOiBjb3VsZXVyLFxuICAgIGZhbWlseTogJ0hlbHZldGljYScsXG4gICAgc2l6ZTogMjAsXG4gICAgYW5jaG9yOiAnbWlkZGxlJyxcbiAgICBsZWFkaW5nOiAwXG4gIH0pXG4gIGNvbnN0IGRlbl90ZXh0ID0gbW9uX3N2Zy50ZXh0KGRlbi50b1N0cmluZygpKS5hdHRyKHsgeDogeCwgeTogeSArIDEwIH0pXG4gIGRlbl90ZXh0LmZvbnQoe1xuICAgIGZpbGw6IGNvdWxldXIsXG4gICAgZmFtaWx5OiAnSGVsdmV0aWNhJyxcbiAgICBzaXplOiAyMCxcbiAgICBhbmNob3I6ICdtaWRkbGUnLFxuICAgIGxlYWRpbmc6IDBcbiAgfSlcbn1cblxuLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7YW55fSBtb25fc3ZnIEwnaWQgZHUgU1ZHXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IGwnYWJzY2lzc2UgZHUgcG9pbnRcbiAgICogQHBhcmFtIHtudW1iZXJ9IHkgbCdvcmRvbm7DqWUgZHUgcG9pbnRcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5vbSBsZSBub20gZHUgcG9pbnRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvdWxldXIgbGEgY291bGV1ciBkdSBwb2ludFxuICAgKiBAcGFyYW0ge251bWJlcn0gc2hpZnR4bm9tIGTDqWNhbGxhZ2UgZW4gYWJzY2lzc2UgcG91ciBsZSBub20gZHUgcG9pbnRcbiAgICogQHBhcmFtIHtudW1iZXJ9IHNoaWZ0eW5vbSBkw6ljYWxsYWdlIGVuIG9yZG9ubsOpZSBwb3VyIGxlIG5vbSBkdSBwb2ludFxuICAgKiBAcGFyYW0ge2FycmF5fSBtb250cmVyX2Nvb3JkIGNhcyAxIDogW2ZhbHNlXSByaWVuIG4nZXN0IGFqb3V0w6ksIGNhcyAyIDogW3RydWUsIGFic0F4ZVgsIG9yZEF4ZVldIHRyYWNlIGRlcyBmbMOoY2hlcyBqdXNxdSdhdXggYXhlc1xuICAgKiBAQXV0ZXVyIFLDqW1pIEFuZ290IGV0IEplYW4tQ2xhdWRlIExob3RlXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIFNWR190cmFjZXJfcG9pbnQgKG1vbl9zdmcsIHgsIHksIG5vbSwgY291bGV1ciwgc2hpZnR4bm9tLCBzaGlmdHlub20sIG1vbnRyZXJfY29vcmQpIHtcbiAgLy8gY3JlZXIgdW4gZ3JvdXBlIHBvdXIgbGEgY3JvaXhcbiAgY29uc3QgcG9pbnQgPSBtb25fc3ZnLmdyb3VwKClcbiAgY29uc3QgYzEgPSBwb2ludC5saW5lKC0zLCAzLCAzLCAtMylcbiAgYzEuc3Ryb2tlKHsgY29sb3I6IGNvdWxldXIsIHdpZHRoOiAyLCBsaW5lY2FwOiAncm91bmQnLCBvcGFjaXR5OiAxIH0pXG4gIGNvbnN0IGMyID0gcG9pbnQubGluZSgtMywgLTMsIDMsIDMpXG4gIGMyLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMiwgbGluZWNhcDogJ3JvdW5kJywgb3BhY2l0eTogMSB9KVxuICAvLyBkw6lwbGFjZSBsYSBjcm9peFxuICBwb2ludC5tb3ZlKHggLSAzLCB5IC0gMylcbiAgLy8gcG9pbnQuZG1vdmUoLTMsLTMpXG4gIGNvbnN0IHRleHQgPSBtb25fc3ZnLnRleHQobm9tKS5hdHRyKHsgeDogeCArIHNoaWZ0eG5vbSwgeTogeSArIHNoaWZ0eW5vbSwgZmlsbDogY291bGV1ciwgb3BhY2l0eTogMC43IH0pXG4gIC8vIGVjcml0IGxlIG5vbVxuICB0ZXh0LmZvbnQoe1xuICAgIGNvbG9yOiBjb3VsZXVyLFxuICAgICdmb250LXdlaWdodCc6ICdib2xkZXInLFxuICAgIGZhbWlseTogJ0hlbHZldGljYScsXG4gICAgc2l6ZTogMTQsXG4gICAgYW5jaG9yOiAnbWlkZGxlJyxcbiAgICBsZWFkaW5nOiAtMVxuICB9KVxuICBpZiAobW9udHJlcl9jb29yZFswXSkgeyAvLyBtb250cmVyX2Nvb3JkPVt0cnVlLGFic19heGUsb3JkX2F4ZV0gb3UgW2ZhbHNlXVxuICAgIGlmICgoeSAhPSBtb250cmVyX2Nvb3JkWzJdKSAmJiAoeCAhPSBtb250cmVyX2Nvb3JkWzFdKSkgU1ZHX3RyYWNlcl9kcm9pdGVfZmxlY2hlVihtb25fc3ZnLCB4LCB5LCB4LCBtb250cmVyX2Nvb3JkWzJdLCBjb3VsZXVyLCAzKVxuICAgIGlmICgoeCAhPSBtb250cmVyX2Nvb3JkWzFdKSAmJiAoeSAhPSBtb250cmVyX2Nvb3JkWzJdKSkgU1ZHX3RyYWNlcl9kcm9pdGVfZmxlY2hlSChtb25fc3ZnLCB4LCB5LCBtb250cmVyX2Nvb3JkWzFdLCB5LCBjb3VsZXVyLCAzKVxuICB9XG59XG5cbi8qKlxuICAgKiBUcmFjZSB1bmUgZmzDqGNoZSBkYW5zIGxlIFNWRyBwb3VyIHVuZSBkZW1pLWRyb2l0ZSBncmFkdcOpZVxuICAgKiBAcGFyYW0ge2FueX0gbW9uX3N2ZyBsJ2lkZW50aWZpYW50IGR1IFNWR1xuICAgKiBAcGFyYW0ge251bWJlcn0geCBsJ2Fic2Npc3NlIGRlIGxhIHBvaW50ZVxuICAgKiBAcGFyYW0ge251bWJlcn0geSBsJ29yZG9ubsOpZSBkZSBsYSBwb2ludGVcbiAgICogQEF1dGV1ciBSw6ltaSBBbmdvdFxuICAgKi9cbmZ1bmN0aW9uIFNWR190cmFjZXJfZmxlY2hlSCAobW9uX3N2ZywgeCwgeSkge1xuICAvLyBjcmVlciB1biBncm91cGUgcG91ciBsYSBmbGVjaGVcbiAgY29uc3QgZmxlY2hlID0gbW9uX3N2Zy5ncm91cCgpXG4gIGNvbnN0IGMxID0gZmxlY2hlLmxpbmUoeCAtIDUsIHkgLSA1LCB4LCB5KVxuICBjMS5zdHJva2UoeyBjb2xvcjogJ2JsYWNrJywgd2lkdGg6IDMsIGxpbmVjYXA6ICdyb3VuZCcgfSlcbiAgY29uc3QgYzIgPSBmbGVjaGUubGluZSh4IC0gNSwgeSArIDUsIHgsIHkpXG4gIGMyLnN0cm9rZSh7IGNvbG9yOiAnYmxhY2snLCB3aWR0aDogMywgbGluZWNhcDogJ3JvdW5kJyB9KVxufVxuLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtb25fc3ZnIGwnaWRlbnRpZmlhbnQgZHUgU1ZHXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4IGwnYWJzY2lzc2UgZGUgbGEgcG9pbnRlIGRlIGxhIGZsw6hjaGVcbiAgICogQHBhcmFtIHtudW1iZXJ9IHkgbCdvcmRvbm7DqWUgZGUgbGEgcG9pbnRlIGRlIGxhIGZsw6hjaGVcbiAgICogQEF1dGV1ciBKZWFuLUNsYXVkZSBMaG90ZVxuICAgKi9cbmV4cG9ydCBmdW5jdGlvbiBTVkdfdHJhY2VyX2ZsZWNoZVYgKG1vbl9zdmcsIHgsIHkpIHtcbiAgLy8gY3JlZXIgdW4gZ3JvdXBlIHBvdXIgbGEgZmxlY2hlXG4gIGNvbnN0IGZsZWNoZSA9IG1vbl9zdmcuZ3JvdXAoKVxuICBjb25zdCBjMSA9IGZsZWNoZS5saW5lKC01LCA1LCAwLCAwKVxuICBjMS5zdHJva2UoeyBjb2xvcjogJ2JsYWNrJywgd2lkdGg6IDMsIGxpbmVjYXA6ICdyb3VuZCcgfSlcbiAgY29uc3QgYzIgPSBmbGVjaGUubGluZSg1LCA1LCAwLCAwKVxuICBjMi5zdHJva2UoeyBjb2xvcjogJ2JsYWNrJywgd2lkdGg6IDMsIGxpbmVjYXA6ICdyb3VuZCcgfSlcbiAgLy8gZMOpcGxhY2UgbGEgY3JvaXhcbiAgZmxlY2hlLm1vdmUoeCwgeSlcbiAgZmxlY2hlLmRtb3ZlKC01LCA1KVxufVxuXG4vKipcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1vbl9zdmcgbCdpZGVudGlmaWFudCBkdSBTVkdcbiAgICogQHBhcmFtIHtudW1iZXJ9IHgxICh4MSx5MSk9cG9pbnQgZGUgZMOpcGFydCBkZSBsYSBmbMOoY2hlIHZlcnRpY2FsZSAoeDE9eDIgZW4gZ8OpbsOpcmFsKVxuICAgKiBAcGFyYW0ge251bWJlcn0geTFcbiAgICogQHBhcmFtIHtudW1iZXJ9IHgyICh4Mix5Mik9cG9pbnQgZCdhcnJpdsOpZSBkZSBsYSBmbMOoY2hlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB5MlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY291bGV1ciBjb3VsZXVyIGRlIGxhIGZsw6hjaGVcbiAgICogQHBhcmFtIHtudW1iZXJ9IHBvaW50aWxsZXMgbG9uZ3VldXIgZGVzIHBvaW50aWxsw6lzIGV0IGRlcyBlc3BhY2VzIGVudHJlIGxlcyBwb2ludGlsbMOpc1xuICAgKiBAQXV0ZXVyIEplYW4tQ2xhdWRlIExob3RlXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIFNWR190cmFjZXJfZHJvaXRlX2ZsZWNoZVYgKG1vbl9zdmcsIHgxLCB5MSwgeDIsIHkyLCBjb3VsZXVyLCBwb2ludGlsbGVzKSB7XG4gIGNvbnN0IGZsZWNoZSA9IG1vbl9zdmcuZ3JvdXAoKVxuICBjb25zdCBjMSA9IGZsZWNoZS5saW5lKHgxLCB5MSwgeDIsIHkyKVxuICBjMS5zdHJva2UoeyBjb2xvcjogY291bGV1ciwgd2lkdGg6IDEsIGxpbmVjYXA6ICdyb3VuZCcsIGRhc2hhcnJheTogcG9pbnRpbGxlcywgb3BhY2l0eTogMC41IH0pXG4gIGlmICh5MiA8IHkxKSB7XG4gICAgY29uc3QgYzIgPSBmbGVjaGUubGluZSh4MiAtIDMsIHkyICsgNSwgeDIsIHkyKVxuICAgIGMyLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJywgb3BhY2l0eTogMC41IH0pXG4gICAgY29uc3QgYzMgPSBmbGVjaGUubGluZSh4MiArIDMsIHkyICsgNSwgeDIsIHkyKVxuICAgIGMzLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJywgb3BhY2l0eTogMC41IH0pXG4gIH0gZWxzZSB7XG4gICAgY29uc3QgYzIgPSBmbGVjaGUubGluZSh4MiAtIDMsIHkyIC0gNSwgeDIsIHkyKVxuICAgIGMyLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJywgb3BhY2l0eTogMC41IH0pXG4gICAgY29uc3QgYzMgPSBmbGVjaGUubGluZSh4MiArIDMsIHkyIC0gNSwgeDIsIHkyKVxuICAgIGMzLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJywgb3BhY2l0eTogMC41IH0pXG4gIH1cbn1cblxuLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtb25fc3ZnIGwnaWRlbnRpZmlhbnQgZHUgU1ZHXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB4MSAoeDEseTEpPXBvaW50IGRlIGTDqXBhcnQgZGUgbGEgZmzDqGNoZSBob3Jpem9udGFsZSAoeTE9eTIgZW4gZ8OpbsOpcmFsKVxuICAgKiBAcGFyYW0ge251bWJlcn0geTFcbiAgICogQHBhcmFtIHtudW1iZXJ9IHgyICh4Mix5Mik9cG9pbnQgZCdhcnJpdsOpZSBkZSBsYSBmbMOoY2hlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB5MlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY291bGV1ciBjb3VsZXVyIGRlIGxhIGZsw6hjaGVcbiAgICogQHBhcmFtIHtudW1iZXJ9IHBvaW50aWxsZXMgbG9uZ3VldXIgZGVzIHBvaW50aWxsw6lzIGV0IGRlcyBlc3BhY2VzIGVudHJlIGxlcyBwb2ludGlsbMOpc1xuICAgKiBAQXV0ZXVyIEplYW4tQ2xhdWRlIExob3RlXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIFNWR190cmFjZXJfZHJvaXRlX2ZsZWNoZUggKG1vbl9zdmcsIHgxLCB5MSwgeDIsIHkyLCBjb3VsZXVyLCBwb2ludGlsbGVzKSB7XG4gIGNvbnN0IGZsZWNoZSA9IG1vbl9zdmcuZ3JvdXAoKVxuICBjb25zdCBjMSA9IGZsZWNoZS5saW5lKHgxLCB5MSwgeDIsIHkyKVxuICBjMS5zdHJva2UoeyBjb2xvcjogY291bGV1ciwgd2lkdGg6IDEsIGxpbmVjYXA6ICdyb3VuZCcsIGRhc2hhcnJheTogcG9pbnRpbGxlcywgb3BhY2l0eTogMC41IH0pXG4gIGlmICh4MiA8IHgxKSB7XG4gICAgY29uc3QgYzIgPSBmbGVjaGUubGluZSh4MiArIDUsIHkyICsgMywgeDIsIHkyKVxuICAgIGMyLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJywgb3BhY2l0eTogMC41IH0pXG4gICAgY29uc3QgYzMgPSBmbGVjaGUubGluZSh4MiArIDUsIHkyIC0gMywgeDIsIHkyKVxuICAgIGMzLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJywgb3BhY2l0eTogMC41IH0pXG4gIH0gZWxzZSB7XG4gICAgY29uc3QgYzIgPSBmbGVjaGUubGluZSh4MiAtIDUsIHkyICsgMywgeDIsIHkyKVxuICAgIGMyLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJywgb3BhY2l0eTogMC41IH0pXG4gICAgY29uc3QgYzMgPSBmbGVjaGUubGluZSh4MiAtIDUsIHkyIC0gMywgeDIsIHkyKVxuICAgIGMzLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJywgb3BhY2l0eTogMC41IH0pXG4gIH1cbn1cbi8qKlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbW9uX3N2ZyBsJ2lkZW50aWZpYW50IGR1IFNWR1xuICAgKiBAcGFyYW0ge251bWJlcn0gdGFpbGxlWCBsYXJnZXVyIGVuIHBpeGVscyBkdSBTVkdcbiAgICogQHBhcmFtIHtudW1iZXJ9IHRhaWxsZVkgaGF1dGV1ciBlbiBwaXhlbHMgZHUgU1ZHXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBYbWluIGwnYWJzY2lzc2UgbWluaW1hbGUgZHUgcmVww6hyZVxuICAgKiBAcGFyYW0ge251bWJlcn0gWG1heCBsJ2Fic2Npc3NlIG1heGltYWxlIGR1IHJlcMOocmVcbiAgICogQHBhcmFtIHtudW1iZXJ9IFltaW4gbCdvcmRvbm7DqWUgbWluaW1hbGUgZHUgcmVww6hyZVxuICAgKiBAcGFyYW0ge251bWJlcn0gWW1heCBsJ29yZG9ubsOpZSBtYXhpbWFsZSBkdSByZXDDqHJlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBPcmRYMCBsJ29yZG9ubsOpZSDDoCBsJ29yaWdpbmUgZGUgbGEgZHJvaXRlIMOgIHRyYWNlclxuICAgKiBAcGFyYW0ge251bWJlcn0gUGVudGUgbGEgUGVudGUgZGUgbGEgZHJvaXRlIMOgIHRyYWNlci5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvdWxldXIgbGEgY291bGV1ciBkZSBsYSBkcm9pdGUgw6AgdHJhY2VyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBub20gbGUgbm9tIGRlIGxhIGRyb2l0ZSDDoCB0cmFjZXJcbiAgICogQEF1dGV1ciBKZWFuLUNsYXVkZSBMaG90ZVxuICAgKi9cbmV4cG9ydCBmdW5jdGlvbiBTVkdfVHJhY2VyX2Ryb2l0ZSAobW9uX3N2ZywgdGFpbGxlWCwgdGFpbGxlWSwgWG1pbiwgWG1heCwgWW1pbiwgWW1heCwgT3JkWDAsIFBlbnRlLCBjb3VsZXVyLCBub20pIHtcbiAgJ3VzZSBzdHJpY3QnXG4gIGxldCBrID0gMFxuICBjb25zdCBQZW50ZV9yID0gUGVudGUgKiAoWG1heCAtIFhtaW4pIC8gKFltYXggLSBZbWluKSAvLyBQZW50ZSBhZGFwdMOpZSBhdSByYXRpbyBkJ8OpY2hlbGxlIGRlcyBheGVzLlxuICB3aGlsZSAoKGsgPiBYbWluKSAmICgoT3JkWDAgKyBQZW50ZSAqIGspIDwgWW1heCkgJiAoKE9yZFgwICsgUGVudGUgKiBrKSA+IFltaW4pKSBrLS1cbiAgY29uc3QgWDEgPSBrXG4gIGNvbnN0IFkxID0gT3JkWDAgKyBQZW50ZSAqIGtcbiAgY29uc3QgRGVsdGFYID0gWG1heCAtIFhtaW5cbiAgY29uc3QgRGVsdGFZID0gWW1heCAtIFltaW5cbiAgY29uc3QgRHggPSAodGFpbGxlWCAtIDIwKSAvIERlbHRhWFxuICBjb25zdCBEeSA9ICh0YWlsbGVZIC0gMjApIC8gRGVsdGFZXG4gIGNvbnN0IFgwID0gMjAgKyBEeCAqIChYMSAtIFhtaW4pXG4gIGNvbnN0IFkwID0gdGFpbGxlWSAtIDIwIC0gRHkgKiAoWTEgLSBZbWluKVxuICBjb25zdCBkcm9pdGUgPSBtb25fc3ZnLmxpbmUoWDAsIFkwLCBYMCArIHRhaWxsZVgsIFkwIC0gdGFpbGxlWCAqIFBlbnRlX3IpXG4gIGRyb2l0ZS5zdHJva2UoeyBjb2xvcjogY291bGV1ciwgd2lkdGg6IDIsIGxpbmVjYXA6ICdyb3VuZCcgfSlcbiAgbGV0IFlub21cbiAgaWYgKFkwID4gdGFpbGxlWSAvIDIpIFlub20gPSAtTWF0aC5yb3VuZChQZW50ZSlcbiAgZWxzZSBZbm9tID0gLU1hdGgucm91bmQoUGVudGUpXG4gIGNvbnN0IHRleHQgPSBtb25fc3ZnLnRleHQobm9tKS5hdHRyKHsgeDogWDAgKyAyMCwgeTogWTAgLSAyMCAqIFBlbnRlX3IgfSlcbiAgLy8gZWNyaXQgbGUgbm9tXG4gIHRleHQuZm9udCh7XG4gICAgZmlsbDogY291bGV1cixcbiAgICBmYW1pbHk6ICdIZWx2ZXRpY2EnLFxuICAgIHNpemU6IDE1LFxuICAgIGFuY2hvcjogJ21pZGRsZScsXG4gICAgbGVhZGluZzogWW5vbVxuICB9KVxufVxuXG4vKipcbiAgICpcbiAgICogQHBhcmFtIHtudW1iZXJ9IFhtaW4gbCdhYnNjaXNzZSBtaW5pbXVtIGR1IHJlcMOocmVcbiAgICogQHBhcmFtIHtudW1iZXJ9IFhtYXggIGwnYWJzY2lzc2UgbWF4aW11bSBkdSByZXDDqHJlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBZbWluIGwnb3Jkb25uw6llIG1pbmltdW0gZHUgcmVww6hyZVxuICAgKiBAcGFyYW0ge251bWJlcn0gWW1heCBsJ29yZG9ubsOpZSBtYXhpbXVtIGR1IHJlcMOocmVcbiAgICogQHBhcmFtIHtudW1iZXJ9IE9yZFgwIGwnb3Jkb25uw6llIMOgIGwnb3JpZ2luZSBkZSBsYSBkcm9pdGUgw6AgdHJhY2VyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBQZW50ZSBsZSBjb2VmZmljaWVudCBkaXJlY3RldXIgZGUgbGEgZHJvaXRlIMOgIHRyYWNlclxuICAgKiBAcGFyYW0ge3N0cmluZ30gY291bGV1ciBsYSBjb3VsZXVyIGRlIGxhIGRyb2l0ZSDDoCB0cmFjZXJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5vbSBsZSBub20gZGUgbGEgZHJvaXRlXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IExlIGNvZGUgTGF0ZXggw6AgaW50w6lncmVyIGRhbnMgdW4gZW52aXJvbm5lbWVudCB7dGlrenBpY3R1cmV9XG4gICAqIEBBdXRldXIgSmVhbi1DbGF1ZGUgTGhvdGUgZXQgUsOpbWkgQW5nb3RcbiAgICovXG5leHBvcnQgZnVuY3Rpb24gTGF0ZXhfVHJhY2VyX2Ryb2l0ZSAoWG1pbiwgWG1heCwgWW1pbiwgWW1heCwgT3JkWDAsIFBlbnRlLCBjb3VsZXVyLCBub20pIHtcbiAgJ3VzZSBzdHJpY3QnXG4gIGxldCBrID0gMFxuICAvLyBsZXQgUGVudGVfcj1QZW50ZSooWG1heC1YbWluKS8oWW1heC1ZbWluKTsgLy8gUGVudGUgYWRhcHTDqWUgYXUgcmF0aW8gZCfDqWNoZWxsZSBkZXMgYXhlcy5cbiAgd2hpbGUgKChrID4gWG1pbikgJiAoKE9yZFgwICsgUGVudGUgKiBrKSA8IFltYXgpICYgKChPcmRYMCArIFBlbnRlICogaykgPiBZbWluKSkgay0tXG4gIGNvbnN0IFgxID0ga1xuICBjb25zdCBZMSA9IE9yZFgwICsgUGVudGUgKiBrXG4gIGNvbnN0IERlbHRhWCA9IFhtYXggLSBYbWluXG4gIC8vIGxldCBEZWx0YVk9WW1heC1ZbWluO1xuICBjb25zdCBYMiA9IFgxICsgRGVsdGFYXG4gIGNvbnN0IFkyID0gWTEgKyBEZWx0YVggKiBQZW50ZVxuICByZXR1cm4gYFxcblxcdCBcXFxcZHJhd1tjb2xvcj0ke2NvdWxldXJ9LHRoaWNrXSgke1gxfSwke1kxfSktLSgke1gyfSwke1kyfSkgbm9kZVtwb3M9LjEsYWJvdmVdIHskJHtub219JH07YFxufVxuXG4vKipcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1vbl9zdmcgbCdJZGVudGlmaWFudCBkdSBTVkdcbiAgICogQHBhcmFtIHtudW1iZXJ9IFhtaW4gbCdhYnNjaXNzZSBtaW5pbXVtIChkb2l0IMOqdHJlIGVudGllci4gU2kgcG9zaXRpZiwgb24gcHJlbmRyYSAwIGNvbW1lIG1pbmltdW0pXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBYbWF4IGwnYWJzY2lzc2UgbWF4aW11bSAoZG9pdCDDqnRyZSBlbnRpZXIgPiBYbWluKVxuICAgKiBAcGFyYW0ge251bWJlcn0gWW1pbiBsJ29yZG9ubsOpZSBtaW5pbXVtIChkb2l0IMOqdHJlIGVudGllci4gU2kgcG9zaXRpZiwgb24gcHJlbmRyYSAwIGNvbW1lIG1pbmltdW0pXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBZbWF4IGwnb3Jkb25uw6llIG1heGltdW0gKGRvaXQgw6p0cmUgZW50aWVyID4gWW1pbilcbiAgICogQHBhcmFtIHtudW1iZXJ9IHN1YlggY29lZmZpY2llbnQgZGUgZnJhY3Rpb25uZW1lbnQgZGUgbCd1bml0w6kgZW4gWFxuICAgKiBAcGFyYW0ge251bWJlcn0gc3ViWSBjb2VmZmljaWVudCBkZSBmcmFjdGlvbm5lbWVudCBkZSBsJ3VuaXTDqSBlbiBZXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB0YWlsbGVYIE5vbWJyZSBkZSBwaXhlbHMgZGUgbGFyZ2V1ciBwb3VyIGxlIFNWRyAoPjEwMCAhKVxuICAgKiBAcGFyYW0ge251bWJlcn0gdGFpbGxlWSBOb21icmUgZGUgcGl4ZWxzIGRlIGhhdXRldXIgcG91ciBsZSBTVkcgICg+MTAwICEpXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZ3JpbGxlIEZhdXQtaWwgZGVzc2luZXIgdW5lIGdyaWxsZSA/IHRydWUgc2kgT3VpIGZhbHNlIHNpIE5vbi5cbiAgICogQHJldHVybnMgTGVzIGNvb3Jkb25uw6llcyBkZXMgYXhlcyBkYW5zIGxlIFNWR1xuICAgKiBAQXV0ZXVyIEplYW4tQ2xhdWRlIExob3RlXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIFNWR19yZXBlcmUgKG1vbl9zdmcsIFhtaW4sIFhtYXgsIFltaW4sIFltYXgsIHN1YlgsIHN1YlksIHRhaWxsZVgsIHRhaWxsZVksIGdyaWxsZSkge1xuICAndXNlIHN0cmljdCdcbiAgaWYgKFhtaW4gPiAwKSBYbWluID0gMFxuICBpZiAoWW1pbiA+IDApIFltaW4gPSAwXG4gIGNvbnN0IERlbHRhWCA9IFhtYXggLSBYbWluXG4gIGNvbnN0IERlbHRhWSA9IFltYXggLSBZbWluXG4gIGNvbnN0IER4ID0gKHRhaWxsZVggLSAyMCkgLyBEZWx0YVhcbiAgY29uc3QgRHkgPSAodGFpbGxlWSAtIDIwKSAvIERlbHRhWVxuICBpZiAoZ3JpbGxlKSBTVkdfZ3JpbGxlKG1vbl9zdmcsIDIwLCAwLCB0YWlsbGVYIC0gMjAsIHRhaWxsZVkgLSAyMCwgRGVsdGFYLCBEZWx0YVksIHN1YlgsIHN1YlkpXG4gIFNWR19BeGVfaG9yaXpvbnRhbChtb25fc3ZnLCAyMCwgdGFpbGxlWCwgdGFpbGxlWSAtIDIwICsgWW1pbiAqIER5LCBEZWx0YVgsIHN1YlgpXG4gIFNWR190cmFjZXJfZmxlY2hlSChtb25fc3ZnLCB0YWlsbGVYIC0gMiwgdGFpbGxlWSAtIDIwICsgWW1pbiAqIER5KVxuICBTVkdfQXhlX3ZlcnRpY2FsKG1vbl9zdmcsIDAsIHRhaWxsZVkgLSAyMCwgMjAgLSBYbWluICogRHgsIERlbHRhWSwgc3ViWSlcbiAgU1ZHX3RyYWNlcl9mbGVjaGVWKG1vbl9zdmcsIDIwIC0gWG1pbiAqIER4LCAtMylcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBEZWx0YVg7IGkrKykge1xuICAgIGlmIChpICsgWG1pbiA9PSAwKSBTVkdfbGFiZWwobW9uX3N2ZywgW1tzdHJpbmdOb21icmUoaSArIFhtaW4pLCBpICogRHggKyAxNSwgdGFpbGxlWSArIDIgKyBZbWluICogRHldXSwgMCwgJ2JsYWNrJywgMC41KVxuICAgIGVsc2UgU1ZHX2xhYmVsKG1vbl9zdmcsIFtbc3RyaW5nTm9tYnJlKGkgKyBYbWluKSwgaSAqIER4ICsgMjAsIHRhaWxsZVkgKyAyICsgWW1pbiAqIER5XV0sIDAsICdibGFjaycsIDAuNSlcbiAgfVxuICBmb3IgKGxldCBpID0gMDsgaSA8IERlbHRhWTsgaSsrKSB7XG4gICAgaWYgKGkgKyBZbWluID09IDApIFNWR19sYWJlbChtb25fc3ZnLCBbW3N0cmluZ05vbWJyZShpICsgWW1pbiksIDEwIC0gWG1pbiAqIER4LCB0YWlsbGVZIC0gMTUgLSBpICogRHldXSwgMCwgJ2JsYWNrJywgMC41KVxuICAgIGVsc2UgU1ZHX2xhYmVsKG1vbl9zdmcsIFtbc3RyaW5nTm9tYnJlKGkgKyBZbWluKSwgMTAgLSBYbWluICogRHgsIHRhaWxsZVkgLSAyNSAtIGkgKiBEeV1dLCAxLCAnYmxhY2snLCAwLjUpXG4gIH1cbiAgcmV0dXJuIFsyMCAtIFhtaW4gKiBEeCwgdGFpbGxlWSAtIDIwICsgWW1pbiAqIER5XVxufVxuLyoqXG4gICAqIFRyYWNlIHVuIHJlcMOocmUgZW4gTGF0ZXggYXZlYyB1bmUgZ3JpbGxlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBYbWluIGwnYWJzY2lzc2UgbWluaW11bSAoZG9pdCDDqnRyZSBlbnRpZXIuIFNpIHBvc2l0aWYsIG9uIHByZW5kcmEgMCBjb21tZSBtaW5pbXVtKVxuICAgKiBAcGFyYW0ge251bWJlcn0gWG1heCBsJ2Fic2Npc3NlIG1heGltdW0gKGRvaXQgw6p0cmUgZW50aWVyID4gWG1pbilcbiAgICogQHBhcmFtIHtudW1iZXJ9IFltaW4gbCdvcmRvbm7DqWUgbWluaW11bSAoZG9pdCDDqnRyZSBlbnRpZXIuIFNpIHBvc2l0aWYsIG9uIHByZW5kcmEgMCBjb21tZSBtaW5pbXVtKVxuICAgKiBAcGFyYW0ge251bWJlcn0gWW1heCBsJ29yZG9ubsOpZSBtYXhpbXVtIChkb2l0IMOqdHJlIGVudGllciA+IFltaW4pXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzdWJYIGNvZWZmaWNpZW50IGRlIGZyYWN0aW9ubmVtZW50IGRlIGwndW5pdMOpIGVuIFhcbiAgICogQHBhcmFtIHtudW1iZXJ9IHN1YlkgY29lZmZpY2llbnQgZGUgZnJhY3Rpb25uZW1lbnQgZGUgbCd1bml0w6kgZW4gWVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGdyaWxsZSBGYXV0LWlsIGRlc3NpbmVyIHVuZSBncmlsbGUgPyB0cnVlIHNpIE91aSBmYWxzZSBzaSBOb24uXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IFJlbnZvaWUgbGUgY29kZSBMYXRleCBjb3JyZXNwb25kYW50XG4gICAqIEBBdXRldXIgSmVhbi1DbGF1ZGUgTGhvdGVcbiAgICovXG5leHBvcnQgZnVuY3Rpb24gTGF0ZXhfcmVwZXJlIChYbWluLCBYbWF4LCBZbWluLCBZbWF4LCBzdWJYLCBzdWJZLCBncmlsbGUpIHtcbiAgJ3VzZSBzdHJpY3QnXG4gIGxldCByZXN1bHQgPSAnJ1xuICByZXN1bHQgKz0gYFxcblxcdCBcXFxcdGt6SW5pdCBbeG1pbj0ke1htaW59LHhtYXg9JHtYbWF4fSx4c3RlcD0xLHltaW49JHtZbWlufSx5bWF4PSR7WW1heH0seXN0ZXA9MV1gXG4gIGlmIChncmlsbGUpIHJlc3VsdCArPSBgXFxuXFx0IFxcXFx0a3pHcmlkW3N1YixzdWJ4c3RlcD0kezEgLyBzdWJYfSxzdWJ5c3RlcD0kezEgLyBzdWJZfSxjb2xvcj1saWdodGdyYXksbGluZSB3aWR0aD0wLjNwdF0oJHtYbWlufSwke1ltaW59KSgke1htYXh9LCR7WW1heH0pYFxuICByZXN1bHQgKz0gJ1xcblxcdCBcXFxcdGt6QXhlWFknXG4gIHJlc3VsdCArPSAnXFxuXFx0IFxcXFx0a3pDbGlwW3NwYWNlPTFdJ1xuICByZXR1cm4gcmVzdWx0XG59XG5cbi8qKlxuICAqIFRyYWNlIHVuZSBncmFkdWF0aW9uIHN1ciBsZSBTVkdcbiAgKiBAcGFyYW0gb3JpZ2luZSBsYSBwcmVtacOocmUgYWJzY2lzc2UgZGUgbGEgZHJvaXRlIG91IGRlbWktZHJvaXRlXG4gICogQHBhcmFtIGxvbmd1ZXVyIGxlIG5vbWJyZSBkJ2ludGVydmFsbGVzIGVudHJlIGwnb3JpZ2luZSBldCBsYSBkZXJuacOocmUgZ3JhZHVhdGlvblxuICAqIEBwYXJhbSBwYXMxIGxlIGZyYWN0aW9ubmVtZW50IGRlIGwndW5pdMOpIHV0aWxpc8OpIDogMTAgcG91ciAwLDEgOyAyIHBvdXIgMCw1IC4uLlxuICAqIEBwYXJhbSBwYXMyIElkZW0gcGFzMSBwb3VyIGxhIHBldGl0ZSBncmFkdWF0aW9uXG4gICogQHBhcmFtIHBvaW50c19pbmNvbm51cyB0YWJsZWF1IHRhYmxlYXUgW05vbSxuYl9wYXMxLG5iX3BhczIsYWZmaWNoZV9vdV9wYXNdXG4gICogQHBhcmFtIHBvaW50c19jb25udXMgdGFibGVhdSBbdmFsZXVyLG5iX3BhczEsbmJfcGFzMl1cbiAgKiBAcGFyYW0gZnJhY3Rpb24gYm9vbMOpZW4gOiB0cnVlIHBvdXIgZnJhY3Rpb25zLCBmYWxzZSBwb3VyIGTDqWNpbWF1eFxuICAqIEBBdXRldXIgSmVhbi1DbGF1ZGUgTGhvdGVcbiAgKi9cbmV4cG9ydCBmdW5jdGlvbiBTVkdfcmVwZXJhZ2Vfc3VyX3VuX2F4ZSAoaWRfZHVfZGl2LCBvcmlnaW5lLCBsb25ndWV1ciwgcGFzMSwgcGFzMiwgcG9pbnRzX2luY29ubnVzLCBwb2ludHNfY29ubnVzLCBmcmFjdGlvbikge1xuICBsZXQgYXJyb25kaXIgPSAxICsgTWF0aC5yb3VuZChNYXRoLmxvZzEwKHBhczEpKVxuICBpZiAoYXJyb25kaXIgPCAxKSBhcnJvbmRpciA9IDFcbiAgY29uc3QgbG9uZ3VldXJfcGFzMSA9IDYwMCAvIGxvbmd1ZXVyXG4gIGNvbnN0IGxvbmd1ZXVyX3BhczIgPSA2MDAgLyBsb25ndWV1ciAvIHBhczJcbiAgbGV0IGRpc3RhbmNlLCB2YWxldXIsIG5vbVxuICBpZiAoIXdpbmRvdy5TVkdFeGlzdCkgeyB3aW5kb3cuU1ZHRXhpc3QgPSB7fSB9IC8vIFNpIFNWR0V4aXN0IG4nZXhpc3RlIHBhcyBvbiBsZSBjcsOpw6lcbiAgLy8gU1ZHRXhpc3QgZXN0IHVuIGRpY3Rpb25uYWlyZSBkYW5zIGxlcXVlbCBvbiBzdG9ja2UgbGVzIGxpc3Rlbm5lciBzdXIgbGEgY3LDqWF0aW9uIGRlcyBkaXZcbiAgd2luZG93LlNWR0V4aXN0W2lkX2R1X2Rpdl0gPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCQoYCMke2lkX2R1X2Rpdn1gKS5sZW5ndGgpIHtcbiAgICAgICQoYCMke2lkX2R1X2Rpdn1gKS5odG1sKCcnKS8vIFZpZGUgbGUgZGl2IHBvdXIgw6l2aXRlciBsZXMgU1ZHIGVuIGRvdWJsb25cbiAgICAgIGNvbnN0IG1vbl9zdmcgPSBTVkcoKS5hZGRUbyhgIyR7aWRfZHVfZGl2fWApLnZpZXdib3goMCwgMCwgODAwLCAxNTApLnNpemUoJzEwMCUnLCAnMTAwJScpXG4gICAgICAvLyBEcm9pdGVcbiAgICAgIGNvbnN0IGRyb2l0ZSA9IG1vbl9zdmcubGluZSgxMDAsIDUwLCA3NTAsIDUwKVxuICAgICAgZHJvaXRlLnN0cm9rZSh7IGNvbG9yOiAnYmxhY2snLCB3aWR0aDogMiwgbGluZWNhcDogJ3JvdW5kJyB9KVxuICAgICAgLy8gR3JhZHVhdGlvbiBzZWNvbmRhaXJlXG4gICAgICBTVkdfZ3JhZHVhdGlvbihtb25fc3ZnLCAxMDAsIGxvbmd1ZXVyX3BhczIsIDc1MCwgNSwgNTAsICdibGFjaycsIDIpXG4gICAgICAvLyBHcmFkdWF0aW9uIHByaW5jaXBhbGVcbiAgICAgIFNWR19ncmFkdWF0aW9uKG1vbl9zdmcsIDEwMCwgbG9uZ3VldXJfcGFzMSwgNzUwLCAxMCwgNTAsICdibGFjaycsIDUpXG4gICAgICBTVkdfdHJhY2VyX2ZsZWNoZUgobW9uX3N2ZywgNzUwLCA1MClcbiAgICAgIC8vIE5vbWJyZXMgdmlzaWJsZXNcbiAgICAgIFNWR19sYWJlbChtb25fc3ZnLCBbW3N0cmluZ05vbWJyZShvcmlnaW5lKSwgMTAwLCA1MF1dLCAyLCAnYmxhY2snLCAxKVxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb2ludHNfY29ubnVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhbGV1ciA9IHN0cmluZ05vbWJyZShwb2ludHNfY29ubnVzW2ldWzBdKVxuICAgICAgICBkaXN0YW5jZSA9IGNhbGN1bChsb25ndWV1cl9wYXMxICogcG9pbnRzX2Nvbm51c1tpXVsxXSArIGxvbmd1ZXVyX3BhczIgKiBwb2ludHNfY29ubnVzW2ldWzJdKVxuICAgICAgICBTVkdfbGFiZWwobW9uX3N2ZywgW1t2YWxldXIsIDEwMCArIGRpc3RhbmNlLCA1MF1dLCAyLCAnYmxhY2snLCAxKVxuICAgICAgfVxuICAgICAgLy8gUG9pbnRzIGluY29ubnVzXG4gICAgICBsZXQgcG9zaXRpb24gPSAxXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBvaW50c19pbmNvbm51cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBkaXN0YW5jZSA9IGxvbmd1ZXVyX3BhczEgKiBwb2ludHNfaW5jb25udXNbaV1bMV0gKyBsb25ndWV1cl9wYXMyICogcG9pbnRzX2luY29ubnVzW2ldWzJdXG4gICAgICAgIG5vbSA9IHBvaW50c19pbmNvbm51c1tpXVswXVxuICAgICAgICBTVkdfdHJhY2VyX3BvaW50KG1vbl9zdmcsIDEwMCArIGRpc3RhbmNlLCA1MCwgbm9tLCAnI2YxNTkyOScsIDAsIDAsIFtmYWxzZV0pXG4gICAgICAgIGlmIChwb2ludHNfaW5jb25udXNbaV1bM10gPT0gdHJ1ZSkge1xuICAgICAgICAgIGlmICghZnJhY3Rpb24pIHsgLy8gYWZmaWNoYWdlIGTDqWNpbWFsXG4gICAgICAgICAgICB2YWxldXIgPSBzdHJpbmdOb21icmUoY2FsY3VsKG9yaWdpbmUgKyBwb2ludHNfaW5jb25udXNbaV1bMV0gLyBwYXMxICsgcG9pbnRzX2luY29ubnVzW2ldWzJdIC8gcGFzMSAvIHBhczIpKVxuICAgICAgICAgICAgU1ZHX2xhYmVsKG1vbl9zdmcsIFtbdmFsZXVyLCAxMDAgKyBkaXN0YW5jZSwgNTBdXSwgMyArIHBvc2l0aW9uLCAnI2YxNTkyOScsIDEpXG4gICAgICAgICAgICBTVkdfdHJhY2VyX2Ryb2l0ZV9mbGVjaGVWKG1vbl9zdmcsIDEwMCArIGRpc3RhbmNlLCA3NSArIDE1ICogcG9zaXRpb24sIDEwMCArIGRpc3RhbmNlLCA1NSwgJyNmMTU5MjknLCAzKVxuICAgICAgICAgIH0gZWxzZSB7IC8vIGFmZmljaGFnZSBmcmFjdGlvbm5haXJlXG4gICAgICAgICAgICBTVkdfZnJhY3Rpb24obW9uX3N2ZywgKG9yaWdpbmUgKyBwb2ludHNfaW5jb25udXNbaV1bMV0pICogcGFzMiArIHBvaW50c19pbmNvbm51c1tpXVsyXSwgcGFzMiwgMTAwICsgZGlzdGFuY2UsIDExNSArIDE1ICogcG9zaXRpb24sICcjZjE1OTI5JylcbiAgICAgICAgICAgIFNWR190cmFjZXJfZHJvaXRlX2ZsZWNoZVYobW9uX3N2ZywgMTAwICsgZGlzdGFuY2UsIDgwICsgMTUgKiBwb3NpdGlvbiwgMTAwICsgZGlzdGFuY2UsIDU1LCAnI2YxNTkyOScsIDMpXG4gICAgICAgICAgfVxuICAgICAgICAgIHBvc2l0aW9uID0gMSAtIHBvc2l0aW9uXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNsZWFySW50ZXJ2YWwod2luZG93LlNWR0V4aXN0W2lkX2R1X2Rpdl0pLy8gQXJyw6p0ZSBsZSB0aW1lclxuICAgIH1cbiAgfSwgMTAwKSAvLyBWw6lyaWZpZSB0b3V0ZXMgbGVzIDEwMG1zXG59XG5cbi8qKlxuICAqIFRyYWNlIHVuIGF4ZSBncmFkdcOpIGhvcml6b250YWwgYXZlYyBkZXMgcG9pbnRzIHBsYWPDqXMgZGVzc3VzIGVuIExhdGV4XG4gICogQHBhcmFtIG9yaWdpbmUgbGEgcHJlbWnDqHJlIGFic2Npc3NlIGRlIGxhIGRyb2l0ZSBvdSBkZW1pLWRyb2l0ZVxuICAqIEBwYXJhbSBwYXMxIGxlIGZyYWN0aW9ubmVtZW50IGRlIGwndW5pdMOpIHV0aWxpc8OpIDogMTAgcG91ciAwLDEgOyAyIHBvdXIgMCw1IC4uLlxuICAqIEBwYXJhbSBwYXMyIElkZW0gcGFzMSBwb3VyIGxhIHBldGl0ZSBncmFkdWF0aW9uXG4gICogQHBhcmFtIHBvaW50c19pbmNvbm51cyB0YWJsZWF1IHRhYmxlYXUgW05vbSxuYl9wYXMxLG5iX3BhczIsYWZmaWNoZV9vdV9wYXNdXG4gICogQHBhcmFtIHBvaW50c19jb25udXMgdGFibGVhdSBbdmFsZXVyLG5iX3BhczEsbmJfcGFzMl1cbiAgKiBAcGFyYW0gZnJhY3Rpb24gYm9vbMOpZW4gOiB0cnVlIHBvdXIgZnJhY3Rpb24sIGZhbHNlIHBvdXIgZMOpY2ltYXV4XG4gICogQEF1dGV1ciBKZWFuLUNsYXVkZSBMaG90ZVxuICAqL1xuZXhwb3J0IGZ1bmN0aW9uIExhdGV4X3JlcGVyYWdlX3N1cl91bl9heGUgKHpvb20sIG9yaWdpbmUsIHBhczEsIHBhczIsIHBvaW50c19pbmNvbm51cywgcG9pbnRzX2Nvbm51cywgZnJhY3Rpb24pIHtcbiAgJ3VzZSBzdHJpY3QnXG4gIGxldCByZXN1bHQgPSBgXFxcXGJlZ2lue3Rpa3pwaWN0dXJlfVtzY2FsZT0ke3pvb219XWBcbiAgbGV0IHZhbGV1clxuICBsZXQgZGVjYWxhZ2VcblxuICByZXN1bHQgKz0gYFxcblxcdCBcXFxcdGt6SW5pdFt4bWluPSR7b3JpZ2luZX0seG1heD0ke2NhbGN1bChvcmlnaW5lICsgNyAvIHBhczEpfSx5bWluPS0wLjUseW1heD0wLjUseHN0ZXA9JHtjYWxjdWwoMSAvIHBhczEpfV1gXG5cbiAgaWYgKG9yaWdpbmUgPT0gMCkgcmVzdWx0ICs9ICdcXG5cXHQgXFxcXHRrekRyYXdYW3RpY2t3ZD0ycHQsbGFiZWw9e31dOydcbiAgZWxzZSByZXN1bHQgKz0gJ1xcblxcdCBcXFxcdGt6RHJhd1hbbGVmdCBzcGFjZT0wLjIsdGlja3dkPTJwdCxsYWJlbD17fV07J1xuICByZXN1bHQgKz0gJ1xcblxcdCBcXFxcdGlrenNldHthcnIvLnN0eWxlPXtwb3N0YWN0aW9uPWRlY29yYXRlLFx0ZGVjb3JhdGlvbj17bWFya2luZ3MsbWFyaz1hdCBwb3NpdGlvbiAxIHdpdGgge1xcXFxhcnJvd1t0aGlja117IzF9fX19fSdcblxuICBpZiAob3JpZ2luZSA8IDApIGRlY2FsYWdlID0gb3JpZ2luZSAqIHBhczFcbiAgZWxzZSBkZWNhbGFnZSA9IDBcbiAgcmVzdWx0ICs9IGBcXG5cXHQgXFxcXGZvcmVhY2ggXFxcXHggaW4gezAsJHtjYWxjdWwoMSAvIHBhczIpfSwuLi4sN31gXG4gIHJlc3VsdCArPSBgXFxuXFx0IHtcXFxcZHJhdyAoJHtkZWNhbGFnZX0rXFxcXHgsLTAuMDUpLS0oJHtkZWNhbGFnZX0rXFxcXHgsMC4wNSk7fWAgLy8gcmVzdWx0Kz1gXFxuXFx0IHtcXFxcZHJhdyAoJHtvcmlnaW5lKnBhczF9K1xcXFx4LC0wLjA1KS0tKCR7b3JpZ2luZSpwYXMxfStcXFxceCwwLjA1KTt9YFxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcG9pbnRzX2Nvbm51cy5sZW5ndGg7IGkrKykge1xuICAgIHZhbGV1ciA9IGNhbGN1bChvcmlnaW5lICsgcG9pbnRzX2Nvbm51c1tpXVsxXSAvIHBhczEgKyBjYWxjdWwocG9pbnRzX2Nvbm51c1tpXVsyXSAvIHBhczEgLyBwYXMyKSlcbiAgICByZXN1bHQgKz0gYFxcblxcdCBcXFxcdGt6RGVmUG9pbnQoJHt2YWxldXJ9LDApe0F9YFxuICAgIHJlc3VsdCArPSBgXFxuXFx0IFxcXFx0a3pMYWJlbFBvaW50W2NvbG9yID0gYmxhY2ssYmVsb3csaW5uZXIgc2VwID0gNXB0LGZvbnQ9XFxcXHNjcmlwdHNpemVdKEEpeyQke3RleE5vbWJyZWModmFsZXVyKX0kfWBcbiAgfVxuICAvLyBQb2ludHMgaW5jb25udXNcbiAgbGV0IHBvc2l0aW9uID0gNlxuICBmb3IgKGxldCBpID0gMDsgaSA8IHBvaW50c19pbmNvbm51cy5sZW5ndGg7IGkrKykge1xuICAgIHZhbGV1ciA9IGNhbGN1bChvcmlnaW5lICsgcG9pbnRzX2luY29ubnVzW2ldWzFdIC8gcGFzMSArIGNhbGN1bChwb2ludHNfaW5jb25udXNbaV1bMl0gLyBwYXMxIC8gcGFzMikpXG4gICAgcmVzdWx0ICs9IGBcXG5cXHQgXFxcXHRrekRlZlBvaW50KCR7dmFsZXVyfSwwKXtBfWBcbiAgICByZXN1bHQgKz0gYFxcblxcdCBcXFxcdGt6RGVmUG9pbnQoJHt2YWxldXJ9LC0wLjMtJHtwb3NpdGlvbiAqIDAuMDJ9KXtCfWBcbiAgICByZXN1bHQgKz0gJ1xcblxcdCBcXFxcdGt6RHJhd1BvaW50W3NoYXBlPWNyb3NzIG91dCxjb2xvcj1ibHVlLHNpemU9OF0oQSknXG4gICAgcmVzdWx0ICs9IGBcXG5cXHQgXFxcXHRrekxhYmVsUG9pbnRbYWJvdmVdKEEpeyQke3BvaW50c19pbmNvbm51c1tpXVswXX0kfWBcbiAgICBpZiAocG9pbnRzX2luY29ubnVzW2ldWzNdKSB7XG4gICAgICBpZiAoIWZyYWN0aW9uKSB7IC8vIGFmZmljaGFnZSBkw6ljaW1hbFxuICAgICAgICByZXN1bHQgKz0gYFxcblxcdCBcXFxcdGt6TGFiZWxQb2ludFtjb2xvciA9IGJsdWUsYmVsb3c9JHsxNSArIHBvc2l0aW9ufXB0LGlubmVyIHNlcCA9IDVwdCxmb250PVxcXFxzY3JpcHRzaXplXShBKXskJHt0ZXhOb21icmVjKHZhbGV1cil9JH1gXG4gICAgICAgIHJlc3VsdCArPSAnXFxuXFx0IFxcXFx0a3pEcmF3U2VnbWVudFtjb2xvcj1ibHVlLGFycj1zdGVhbHRoXShCLEEpJ1xuICAgICAgfSBlbHNlIHsgLy8gYWZmaWNoYWdlIGZyYWN0aW9ubmFpcmVcbiAgICAgICAgcmVzdWx0ICs9IGBcXG5cXHQgXFxcXHRrekxhYmVsUG9pbnRbY29sb3IgPSBibHVlLGJlbG93PSR7MTUgKyBwb3NpdGlvbn1wdCxpbm5lciBzZXAgPSA1cHQsZm9udD1cXFxcc2NyaXB0c2l6ZV0oQSl7JCR7dGV4RnJhY3Rpb25TaWduZSgob3JpZ2luZSArIHBvaW50c19pbmNvbm51c1tpXVsxXSkgKiBwYXMyICsgcG9pbnRzX2luY29ubnVzW2ldWzJdLCBwYXMyKX0kfWBcbiAgICAgICAgcmVzdWx0ICs9ICdcXG5cXHQgXFxcXHRrekRyYXdTZWdtZW50W2NvbG9yPWJsdWUsYXJyPXN0ZWFsdGhdKEIsQSknXG4gICAgICB9XG4gICAgfVxuICAgIHBvc2l0aW9uID0gNiAtIHBvc2l0aW9uXG4gIH1cbiAgcmVzdWx0ICs9ICdcXG5cXHQgXFxcXGVuZHt0aWt6cGljdHVyZX0nXG4gIHJldHVybiByZXN1bHRcbn1cblxuLyoqXG4gKiBSZW52b2llIGRldXggZW5ncmVuYWdlcyBlbiBIVE1MIHBvdXIgbGUgbW9tZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gaWRfZHVfZGl2IGlkIHVuaXF1ZSBwb3VyIMOpdml0ZXIgbGVzIGRvdWJsb25zLCBnw6luw6lyw6kgZGFucyBsJ2V4bzsgw6AgcmV2b2lyP1xuICogQHBhcmFtIHtudW1iZXJ9IHcgbGFyZ2V1ciBkdSBjb250ZW5ldXJcbiAqIEBwYXJhbSB7bnVtYmVyfSBoIGhhdXRldXIgZHUgY29udGVuZXVyXG4gKiBAYXV0aG9yIFPDqWJhc3RpZW4gTG96YW5vXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBTVkdfZW5ncmVuYWdlcyAoaWRfZHVfZGl2LCB3LCBoKSB7XG4gICd1c2Ugc3RyaWN0J1xuICBpZiAoc29ydGllSHRtbCkge1xuICAgIGlmICghd2luZG93LlNWR0V4aXN0KSB7IHdpbmRvdy5TVkdFeGlzdCA9IHt9IH0gLy8gU2kgU1ZHRXhpc3QgbidleGlzdGUgcGFzIG9uIGxlIGNyw6nDqVxuICAgIC8vIFNWR0V4aXN0IGVzdCB1biBkaWN0aW9ubmFpcmUgZGFucyBsZXF1ZWwgb24gc3RvY2tlIGxlcyBsaXN0ZW5uZXIgc3VyIGxhIGNyw6lhdGlvbiBkZXMgZGl2XG4gICAgd2luZG93LlNWR0V4aXN0W2lkX2R1X2Rpdl0gPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoJChgIyR7aWRfZHVfZGl2fWApLmxlbmd0aCkge1xuICAgICAgICAkKGAjJHtpZF9kdV9kaXZ9YCkuaHRtbCgnJykvLyBWaWRlIGxlIGRpdiBwb3VyIMOpdml0ZXIgbGVzIFNWRyBlbiBkb3VibG9uXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkX2R1X2RpdikuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZlcnNpb249XCIxLjFcIiB4bWxuczp4bGluaz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiB2aWV3Qm94PVwiMCAwIGAgKyB3ICsgJyAnICsgaCArICdcIiB3aWR0aD1cIicgKyB3ICsgYFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxnIGlkPVwic3VyZmFjZTFcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHlsZT1cIiBzdHJva2U6bm9uZTtmaWxsLXJ1bGU6bm9uemVybztmaWxsOnJnYigwJSwwJSwwJSk7ZmlsbC1vcGFjaXR5OjE7XCIgZD1cIk0gMTA2LjU2MjUgMC4xMjUgQyAxMDYuMjg5MDYyIDAuMTc1NzgxIDEwNS4zODY3MTkgMC4yODkwNjIgMTA0LjU2MjUgMC4zNjMyODEgQyAxMDMuNzM4MjgxIDAuNDQ5MjE5IDEwMy4wMjM0MzggMC41NTA3ODEgMTAyLjk2MDkzOCAwLjYxMzI4MSBDIDEwMi43NjE3MTkgMC44MTI1IDEwMiA4LjE2NDA2MiAxMDIgOS45ODgyODEgQyAxMDIgMTAuNDc2NTYyIDEwMS45Mzc1IDEwLjkxNDA2MiAxMDEuODUxNTYyIDExLjAyMzQzOCBDIDEwMS43NjE3MTkgMTEuMTM2NzE5IDEwMS4yMzgyODEgMTEuMzI0MjE5IDEwMC42ODc1IDExLjQzNzUgQyAxMDAuMTM2NzE5IDExLjU2MjUgOTkuMzAwNzgxIDExLjgwMDc4MSA5OC44MTI1IDExLjk2MDkzOCBDIDk3LjY2NDA2MiAxMi4zODY3MTkgOTQuMTI1IDE0LjAzOTA2MiA5My4yMjY1NjIgMTQuNTg1OTM4IEMgOTIuODAwNzgxIDE0LjgzNTkzOCA5Mi40Mzc1IDE0Ljk3NjU2MiA5Mi4zNTE1NjIgMTQuOTI1NzgxIEMgOTIuMjYxNzE5IDE0Ljg3NSA5MC4zNzUgMTMuMzUxNTYyIDg4LjE0ODQzOCAxMS41MjM0MzggQyA4NS45Mzc1IDkuNzEwOTM4IDg0LjA3NDIxOSA4LjI1IDg0LjAxMTcxOSA4LjI3MzQzOCBDIDgzLjk0OTIxOSA4LjMwMDc4MSA4My4yMjY1NjIgOC44NjMyODEgODIuNDE0MDYyIDkuNTIzNDM4IEMgODAuNzUgMTAuODg2NzE5IDc4LjMxMjUgMTMuNDE0MDYyIDc2LjY5OTIxOSAxNS40MjU3ODEgQyA3NS43NSAxNi42MTMyODEgNzUuNjM2NzE5IDE2LjgxMjUgNzUuNzg5MDYyIDE2Ljk4ODI4MSBDIDc1Ljg4NjcxOSAxNy4xMDE1NjIgNzYuNDI1NzgxIDE3Ljc3MzQzOCA3Ny4wMTE3MTkgMTguNSBDIDc3LjU4NTkzOCAxOS4yMjY1NjIgNzkuMDIzNDM4IDIwLjk3NjU2MiA4MC4yMTA5MzggMjIuNDE0MDYyIEMgODEuMzk4NDM4IDIzLjgzNTkzOCA4Mi4zNzUgMjUuMDM5MDYyIDgyLjM3NSAyNS4wODU5MzggQyA4Mi4zNzUgMjUuMTI1IDgyLjE0ODQzOCAyNS41MjM0MzggODEuODYzMjgxIDI1Ljk3NjU2MiBDIDgxLjE5OTIxOSAyNy4wMTE3MTkgODAuMTEzMjgxIDI5LjIzODI4MSA3OS43NzM0MzggMzAuMTg3NSBDIDc5LjU3NDIxOSAzMC43ODkwNjIgNzguNzUgMzMuNDI1NzgxIDc4LjU2MjUgMzQuMDc0MjE5IEMgNzguNTM5MDYyIDM0LjE0ODQzOCA3Ny4zNTE1NjIgMzQuMzEyNSA3NS42MDE1NjIgMzQuNDg4MjgxIEMgNzEuMzEyNSAzNC44ODY3MTkgNjguMjczNDM4IDM1LjI3MzQzOCA2OC4wNjI1IDM1LjQyNTc4MSBDIDY3LjYxMzI4MSAzNS43NjE3MTkgNjcuMzUxNTYyIDQwLjg3NSA2Ny42MjUgNDMuODEyNSBDIDY3LjgwMDc4MSA0NS42OTkyMTkgNjguMDIzNDM4IDQ3LjExMzI4MSA2OC4xNzU3ODEgNDcuMzAwNzgxIEMgNjguMjYxNzE5IDQ3LjQxNDA2MiA2OS4wNTA3ODEgNDcuNTM5MDYyIDcwLjU2MjUgNDcuNjc1NzgxIEMgNzYuMTAxNTYyIDQ4LjE2NDA2MiA3OC4zMjQyMTkgNDguMzg2NzE5IDc4LjQ0OTIxOSA0OC40MjU3ODEgQyA3OC41MjM0MzggNDguNDQ5MjE5IDc4LjYyNSA0OC43MTA5MzggNzguNjc1NzgxIDQ5LjAxMTcxOSBDIDc4LjcyNjU2MiA0OS4zMDA3ODEgNzguODYzMjgxIDQ5LjgwMDc4MSA3OC45ODgyODEgNTAuMTEzMjgxIEMgNzkuMTEzMjgxIDUwLjQyNTc4MSA3OS40MjU3ODEgNTEuMzM1OTM4IDc5LjY3NTc4MSA1Mi4xMzY3MTkgQyA4MC4xNjQwNjIgNTMuNjQ4NDM4IDgxLjE3NTc4MSA1NS44MDA3ODEgODIuMDExNzE5IDU3LjA1MDc4MSBDIDgyLjI3MzQzOCA1Ny40NDkyMTkgODIuNSA1Ny44MjQyMTkgODIuNSA1Ny44ODY3MTkgQyA4Mi41IDU3Ljk0OTIxOSA4MS4zNjMyODEgNTkuMzYzMjgxIDc5Ljk3NjU2MiA2MS4wMjM0MzggQyA3Ny4xNDg0MzggNjQuNDI1NzgxIDc2LjY4NzUgNjQuOTg4MjgxIDc2LjIxMDkzOCA2NS42MzY3MTkgTCA3NS44NzUgNjYuMDg1OTM4IEwgNzYuNjM2NzE5IDY3LjA3NDIxOSBDIDc4LjU2MjUgNjkuNTc0MjE5IDgxLjE2NDA2MiA3Mi4xNzU3ODEgODMuNjEzMjgxIDc0LjA1MDc4MSBDIDg0LjMyNDIxOSA3NC42MDE1NjIgODQuNDM3NSA3NC42NDg0MzggODQuNjY0MDYyIDc0LjUgQyA4NSA3NC4yODkwNjIgODguNzg5MDYyIDcxLjE2NDA2MiA5MC44MzU5MzggNjkuNDE0MDYyIEMgOTEuNzM4MjgxIDY4LjYzNjcxOSA5Mi41ODU5MzggNjggOTIuNzI2NTYyIDY4IEMgOTIuODYzMjgxIDY4IDkzLjU1MDc4MSA2OC4zMjQyMTkgOTQuMjYxNzE5IDY4LjczODI4MSBDIDk1Ljg1MTU2MiA2OS42MjUgOTcuOTYwOTM4IDcwLjQ4ODI4MSA5OS44NjMyODEgNzEgQyAxMDEuMTI1IDcxLjMzNTkzOCAxMDEuNzUgNzEuNTYyNSAxMDEuNzUgNzEuNjY0MDYyIEMgMTAxLjc1IDcyLjQ3NjU2MiAxMDIuODI0MjE5IDgxLjkzNzUgMTAyLjkzNzUgODIuMTEzMjgxIEMgMTAyLjk2MDkzOCA4Mi4xNzU3ODEgMTAzLjgxMjUgODIuMjg5MDYyIDEwNC44MTI1IDgyLjM3NSBDIDEwNi45NjA5MzggODIuNTYyNSAxMTIuNTExNzE5IDgyLjQ3NjU2MiAxMTQuMDYyNSA4Mi4yMjY1NjIgTCAxMTUuMDUwNzgxIDgyLjA2MjUgTCAxMTUuMTQ4NDM4IDgxLjYyNSBDIDExNS4xOTkyMTkgODEuMzg2NzE5IDExNS40MTQwNjIgNzkuMjEwOTM4IDExNS42MjUgNzYuODEyNSBDIDExNS44MzU5MzggNzQuMzk4NDM4IDExNi4wNTA3ODEgNzIuMjEwOTM4IDExNi4xMDE1NjIgNzEuOTM3NSBDIDExNi4yMTA5MzggNzEuMzM1OTM4IDExNi4yNzM0MzggNzEuMzAwNzgxIDExOC4zNjMyODEgNzAuNjg3NSBDIDEyMC4yMjY1NjIgNzAuMTQ4NDM4IDEyMi42MjUgNjkuMDg1OTM4IDEyNC4xMTMyODEgNjguMTY0MDYyIEMgMTI1LjAyMzQzOCA2Ny41ODU5MzggMTI1LjIyNjU2MiA2Ny41IDEyNS40MjU3ODEgNjcuNjI1IEMgMTI1LjU1MDc4MSA2Ny42OTkyMTkgMTI2LjM2MzI4MSA2OC4zNzUgMTI3LjIzODI4MSA2OS4xMjUgQyAxMjkuMTAxNTYyIDcwLjcxMDkzOCAxMzMuNSA3NC4yNSAxMzMuNjI1IDc0LjI1IEMgMTMzLjY2NDA2MiA3NC4yNSAxMzQuMTQ4NDM4IDczLjkyNTc4MSAxMzQuNjk5MjE5IDczLjUyMzQzOCBDIDEzNi4xMTMyODEgNzIuNDg4MjgxIDE0MS40MTQwNjIgNjYuODUxNTYyIDE0MS45ODgyODEgNjUuNzYxNzE5IEMgMTQyLjEwMTU2MiA2NS41NjI1IDE0MS43NSA2NS4wNzQyMTkgMTM5LjQ3NjU2MiA2Mi4zNTE1NjIgQyAxMzguMDIzNDM4IDYwLjYxMzI4MSAxMzYuNTExNzE5IDU4LjgxMjUgMTM2LjExMzI4MSA1OC4zNjMyODEgQyAxMzUuNjk5MjE5IDU3Ljg5ODQzOCAxMzUuMzc1IDU3LjQzNzUgMTM1LjM3NSA1Ny4zMjQyMTkgQyAxMzUuMzc1IDU3LjE5OTIxOSAxMzUuNzEwOTM4IDU2LjQ0OTIxOSAxMzYuMTEzMjgxIDU1LjY0ODQzOCBDIDEzNy4xMTMyODEgNTMuNjg3NSAxMzguMDc0MjE5IDUxLjIzODI4MSAxMzguMzk4NDM4IDQ5Ljg1MTU2MiBDIDEzOC42MTMyODEgNDguOTYwOTM4IDEzOC43MTA5MzggNDguNjk5MjE5IDEzOC45MjU3ODEgNDguNjI1IEMgMTM5LjA3NDIxOSA0OC41NjI1IDEzOS44ODY3MTkgNDguNDYwOTM4IDE0MC43NSA0OC4zODY3MTkgQyAxNDUuNjc1NzgxIDQ3Ljk3NjU2MiAxNDkuMzI0MjE5IDQ3LjU3NDIxOSAxNDkuMzk4NDM4IDQ3LjQ2MDkzOCBDIDE0OS40NzY1NjIgNDcuMzI0MjE5IDE0OS41MjM0MzggNDcgMTQ5Ljc3MzQzOCA0NC42ODc1IEMgMTQ5Ljk3NjU2MiA0Mi42OTkyMTkgMTUwLjAzOTA2MiA0MC4xMzY3MTkgMTQ5Ljg4NjcxOSAzOS4yNSBDIDE0OS44MTI1IDM4LjgwMDc4MSAxNDkuNjk5MjE5IDM3Ljc2MTcxOSAxNDkuNjI1IDM2LjkzNzUgQyAxNDkuNTUwNzgxIDM2LjEwMTU2MiAxNDkuNDI1NzgxIDM1LjM3NSAxNDkuMzM1OTM4IDM1LjMwMDc4MSBDIDE0OS4yNSAzNS4yMTA5MzggMTQ3LjA3NDIxOSAzNC45NjA5MzggMTQ0LjA2MjUgMzQuNjg3NSBDIDE0MC4wMzkwNjIgMzQuMzI0MjE5IDEzOC44OTg0MzggMzQuMTg3NSAxMzguNzg5MDYyIDM0LjAzOTA2MiBDIDEzOC42OTkyMTkgMzMuOTI1NzgxIDEzOC41NTA3ODEgMzMuNDQ5MjE5IDEzOC40Mzc1IDMyLjk3NjU2MiBDIDEzOC4wMTE3MTkgMzEuMTEzMjgxIDEzNi41NjI1IDI3LjYwMTU2MiAxMzUuNSAyNS44NTE1NjIgQyAxMzUuMzYzMjgxIDI1LjYyNSAxMzUuMjUgMjUuMzEyNSAxMzUuMjUgMjUuMTY0MDYyIEMgMTM1LjI1IDI0Ljk4ODI4MSAxMzYuNDYwOTM4IDIzLjQxNDA2MiAxMzguNTUwNzgxIDIwLjg2MzI4MSBDIDE0MS4wNzQyMTkgMTcuNzg5MDYyIDE0MS44MzU5MzggMTYuNzg5MDYyIDE0MS43NSAxNi42MzY3MTkgQyAxNDEuNDg4MjgxIDE2LjE0ODQzOCAxMzkuODUxNTYyIDE0LjMwMDc4MSAxMzguMzM1OTM4IDEyLjc3MzQzOCBDIDEzNi45NjA5MzggMTEuMzc1IDEzMy44ODY3MTkgOC42NjQwNjIgMTMzLjMyNDIxOSA4LjM1MTU2MiBDIDEzMy4xNzU3ODEgOC4yNjE3MTkgMTI5LjYzNjcxOSAxMS4wMjM0MzggMTI2LjY5OTIxOSAxMy41MzkwNjIgQyAxMjUuODEyNSAxNC4yODkwNjIgMTI1LjAyMzQzOCAxNC45MTQwNjIgMTI0Ljk0OTIxOSAxNC45MjU3ODEgQyAxMjQuODc1IDE0LjkyNTc4MSAxMjMuNjAxNTYyIDE0LjMzNTkzOCAxMjIuMTI1IDEzLjYwMTU2MiBDIDExOS42NjQwNjIgMTIuMzYzMjgxIDExOC4wMzkwNjIgMTEuNzUgMTE2LjQ3NjU2MiAxMS40Mzc1IEMgMTE2LjA4NTkzOCAxMS4zNjMyODEgMTE2LjE2NDA2MiAxMS44MDA3ODEgMTE1LjY4NzUgNi44NzUgQyAxMTUuMjYxNzE5IDIuNTIzNDM4IDExNS4wMTE3MTkgMC43MTA5MzggMTE0Ljg1MTU2MiAwLjYxMzI4MSBDIDExNC42OTkyMTkgMC41MTE3MTkgMTE0LjMzNTkzOCAwLjQ3NjU2MiAxMTIuMDYyNSAwLjIzODI4MSBDIDExMC4zNzUgMC4wNjI1IDEwNy4xNzU3ODEgLTAuMDExNzE4OCAxMDYuNTYyNSAwLjEyNSBaIE0gMTEzLjE4NzUgMjYuNDI1NzgxIEMgMTE2LjI2MTcxOSAyNy4zMzU5MzggMTE5LjIzODI4MSAyOS40NjA5MzggMTIxLjI2MTcxOSAzMi4xNzU3ODEgQyAxMjYuMDExNzE5IDM4LjUyMzQzOCAxMjQuODYzMjgxIDQ3Ljg4NjcxOSAxMTguNzUgNTIuOTE0MDYyIEMgMTE1LjYxMzI4MSA1NS40ODgyODEgMTEyLjE2NDA2MiA1Ni42NDg0MzggMTA4LjIxMDkzOCA1Ni40NjA5MzggQyAxMDMuNDQ5MjE5IDU2LjI1IDk5LjUgNTQuMTI1IDk2LjYyNSA1MC4yNSBDIDkzLjI4OTA2MiA0NS43NSA5Mi43MTA5MzggMzkuNDM3NSA5NS4xOTkyMTkgMzQuNDYwOTM4IEMgOTUuOTI1NzgxIDMzLjAxMTcxOSA5Ni43MTA5MzggMzEuOTE0MDYyIDk3Ljk3NjU2MiAzMC42MTMyODEgQyAxMDAuMzM1OTM4IDI4LjE0ODQzOCAxMDIuNSAyNi44NzUgMTA1LjM3NSAyNi4yMzgyODEgQyAxMDYuMjczNDM4IDI2LjAzOTA2MiAxMDYuODYzMjgxIDI2LjAxMTcxOSAxMDkuMjUgMjYuMDUwNzgxIEMgMTExLjg3NSAyNi4wODU5MzggMTEyLjEzNjcxOSAyNi4xMTMyODEgMTEzLjE4NzUgMjYuNDI1NzgxIFogTSAxMTMuMTg3NSAyNi40MjU3ODEgXCIvPlxuICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0eWxlPVwiIHN0cm9rZTpub25lO2ZpbGwtcnVsZTpub256ZXJvO2ZpbGw6cmdiKDAlLDAlLDAlKTtmaWxsLW9wYWNpdHk6MTtcIiBkPVwiTSAxMDYuMzg2NzE5IDI4LjU2MjUgQyAxMDMuMTg3NSAyOS4yNjE3MTkgMTAwLjE5OTIxOSAzMS4yNjE3MTkgOTguNDYwOTM4IDMzLjg2MzI4MSBDIDk2LjcyNjU2MiAzNi40NjA5MzggOTYuMDUwNzgxIDM5LjA1MDc4MSA5Ni4yNjE3MTkgNDIuMjYxNzE5IEMgOTYuNjEzMjgxIDQ3LjUyMzQzOCAxMDAuNjQ4NDM4IDUyLjM2MzI4MSAxMDUuODc1IDUzLjc3MzQzOCBDIDEwNi44MDA3ODEgNTQuMDExNzE5IDEwNy4yMjY1NjIgNTQuMDUwNzgxIDEwOS4wNjI1IDU0LjA1MDc4MSBDIDExMS41IDU0LjAzOTA2MiAxMTIuNDQ5MjE5IDUzLjg1MTU2MiAxMTQuMjEwOTM4IDUzLjAxMTcxOSBDIDExNS42MTMyODEgNTIuMzM1OTM4IDExNi42MTMyODEgNTEuNjM2NzE5IDExNy44MzU5MzggNTAuNDYwOTM4IEMgMTE5LjE3NTc4MSA0OS4xNzU3ODEgMTE5Ljk4ODI4MSA0OC4wNzQyMTkgMTIwLjY3NTc4MSA0Ni42MTMyODEgQyAxMjIuMzM1OTM4IDQzLjA3NDIxOSAxMjIuMjM4MjgxIDM4LjU2MjUgMTIwLjQzNzUgMzUuMTM2NzE5IEMgMTE4LjczODI4MSAzMS44OTg0MzggMTE1LjE0ODQzOCAyOS4yNSAxMTEuNTIzNDM4IDI4LjU1MDc4MSBDIDExMC4zNjMyODEgMjguMzI0MjE5IDEwNy40NDkyMTkgMjguMzM1OTM4IDEwNi4zODY3MTkgMjguNTYyNSBaIE0gMTEwLjk2MDkzOCAzMS41NzQyMTkgQyAxMTIuMzEyNSAzMS44NTE1NjIgMTEzLjM4NjcxOSAzMi4zMTI1IDExNC42NDg0MzggMzMuMTQ4NDM4IEMgMTE2LjQzNzUgMzQuMzUxNTYyIDExNy42OTkyMTkgMzYgMTE4LjMzNTkzOCAzNy45NjA5MzggQyAxMTguNTg1OTM4IDM4LjczODI4MSAxMTguNjc1NzgxIDM5LjI4OTA2MiAxMTguNzI2NTYyIDQwLjYxMzI4MSBDIDExOC44NTE1NjIgNDQuMDYyNSAxMTguMDc0MjE5IDQ2LjA4NTkzOCAxMTUuNzg5MDYyIDQ4LjI1IEMgMTE0LjAyMzQzOCA0OS45MjU3ODEgMTEyLjM4NjcxOSA1MC43MjY1NjIgMTEwLjE2NDA2MiA1MS4wMTE3MTkgQyAxMDcuNTM5MDYyIDUxLjM1MTU2MiAxMDQuODk4NDM4IDUwLjU1MDc4MSAxMDIuNzg5MDYyIDQ4Ljc2MTcxOSBDIDEwMC41NTA3ODEgNDYuODg2NzE5IDk5LjQzNzUgNDQuNjI1IDk5LjI4OTA2MiA0MS42NzU3ODEgQyA5OS4xNzU3ODEgMzkuMzk4NDM4IDk5LjY4NzUgMzcuNTExNzE5IDEwMC45MjU3ODEgMzUuNjM2NzE5IEMgMTAxLjY3NTc4MSAzNC41MTE3MTkgMTAyLjM4NjcxOSAzMy44MDA3ODEgMTAzLjUxMTcxOSAzMy4wNTA3ODEgQyAxMDUuNzM4MjgxIDMxLjU3NDIxOSAxMDguNDE0MDYyIDMxLjA1MDc4MSAxMTAuOTYwOTM4IDMxLjU3NDIxOSBaIE0gMTEwLjk2MDkzOCAzMS41NzQyMTkgXCIvPlxuICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0eWxlPVwiIHN0cm9rZTpub25lO2ZpbGwtcnVsZTpub256ZXJvO2ZpbGw6cmdiKDAlLDAlLDAlKTtmaWxsLW9wYWNpdHk6MTtcIiBkPVwiTSA1OC41IDU1Ljg4NjcxOSBDIDU4LjAxMTcxOSA1Ny4xNDg0MzggNTcuMDIzNDM4IDU5LjgzNTkzOCA1Ni4zMDA3ODEgNjEuODc1IEMgNTUuNTg1OTM4IDYzLjg5ODQzOCA1NC45MjU3ODEgNjUuNzYxNzE5IDU0LjgzNTkzOCA2NiBMIDU0LjY3NTc4MSA2Ni40Mzc1IEwgNTIuNDM3NSA2Ni41MTE3MTkgQyA0OC44OTg0MzggNjYuNjM2NzE5IDQ1LjQ3NjU2MiA2Ny4xMjUgNDMuMTY0MDYyIDY3LjgyNDIxOSBDIDQyLjM4NjcxOSA2OC4wNjI1IDQxLjY5OTIxOSA2OC4yNSA0MS42NDg0MzggNjguMjUgQyA0MS41ODU5MzggNjguMjUgNDEuMDExNzE5IDY3LjUgNDAuMzc1IDY2LjU4NTkzOCBDIDM4LjM3NSA2My43NSAzMy41ODU5MzggNTcuMTg3NSAzMy40NDkyMTkgNTcuMTAxNTYyIEMgMzMuMzAwNzgxIDU3IDMyLjI4OTA2MiA1Ny4zNzUgMzAuNzg5MDYyIDU4LjA3NDIxOSBDIDMwLjE0ODQzOCA1OC4zNzUgMjkuNTg1OTM4IDU4LjYyNSAyOS41MzkwNjIgNTguNjI1IEMgMjkuNDc2NTYyIDU4LjYyNSAyOC43ODkwNjIgNTkgMjggNTkuNDQ5MjE5IEMgMjcuMjEwOTM4IDU5LjkxNDA2MiAyNS45NzY1NjIgNjAuNjI1IDI1LjI1IDYxLjAzOTA2MiBDIDIyLjg4NjcxOSA2Mi4zODY3MTkgMTkuODc1IDY0LjYzNjcxOSAxOS44NzUgNjUuMDYyNSBDIDE5Ljg3NSA2NS4yMjY1NjIgMjAuNTUwNzgxIDY2LjY5OTIxOSAyNC4wODU5MzggNzQuMjg5MDYyIEwgMjUuNTIzNDM4IDc3LjM3NSBMIDI0LjQ0OTIxOSA3OC41IEMgMjMuODYzMjgxIDc5LjEyNSAyMy4wNjI1IDgwLjAxMTcxOSAyMi42ODc1IDgwLjQ3NjU2MiBDIDIyLjMxMjUgODAuOTM3NSAyMS42ODc1IDgxLjY3NTc4MSAyMS4zMDA3ODEgODIuMTI1IEMgMjAuNDc2NTYyIDgzLjA4NTkzOCAxOC42OTkyMTkgODUuNzM4MjgxIDE4LjEzNjcxOSA4Ni44MzU5MzggQyAxNy45MjU3ODEgODcuMjczNDM4IDE3LjY5OTIxOSA4Ny42MjUgMTcuNjQ4NDM4IDg3LjYyNSBDIDE3LjYwMTU2MiA4Ny42MjUgMTUuODEyNSA4Ny4zMjQyMTkgMTMuNjg3NSA4Ni45NDkyMTkgQyA3LjcyNjU2MiA4NS44OTg0MzggNC4xMDE1NjIgODUuMzUxNTYyIDQgODUuNDYwOTM4IEMgMy44NjMyODEgODUuNjEzMjgxIDIuNzI2NTYyIDg4LjQ3NjU2MiAyLjIxMDkzOCA4OS45NDkyMTkgQyAxLjY5OTIxOSA5MS40MjU3ODEgMC45MTQwNjIgOTUuMTk5MjE5IDAuMzg2NzE5IDk4Ljc1IEMgMC4yNSA5OS42MTMyODEgMC4xMTMyODEgMTAwLjM5ODQzOCAwLjA3NDIxODggMTAwLjUgQyAwLjAxMTcxODggMTAwLjY2NDA2MiAwLjkzNzUgMTAxLjA2MjUgNC44MzU5MzggMTAyLjU1MDc4MSBDIDcuNTExNzE5IDEwMy41NzQyMTkgMTAuMzk4NDM4IDEwNC42ODc1IDExLjI4OTA2MiAxMDUuMDM5MDYyIEwgMTIuODc1IDEwNS42NDg0MzggTCAxMi44NzUgMTA3LjMwMDc4MSBDIDEyLjg4NjcxOSAxMTAuMzI0MjE5IDEzLjIyNjU2MiAxMTIuODUxNTYyIDE0LjEzNjcxOSAxMTYuNTYyNSBDIDE0LjQxNDA2MiAxMTcuNjY0MDYyIDE0LjYyNSAxMTguNjEzMjgxIDE0LjYyNSAxMTguNjg3NSBDIDE0LjYyNSAxMTguNzUgMTQuNDE0MDYyIDExOC45NjA5MzggMTQuMTQ4NDM4IDExOS4xMzY3MTkgQyAxMS42MjUgMTIwLjg3NSAzLjk0OTIxOSAxMjYuNDQ5MjE5IDMuNzUgMTI2LjY4NzUgQyAzLjQ0OTIxOSAxMjcuMDM5MDYyIDUuNzYxNzE5IDEzMS43MzgyODEgNy45MjU3ODEgMTM1LjE4NzUgQyA4Ljg1MTU2MiAxMzYuNjc1NzgxIDEwLjU4NTkzOCAxMzkuMTc1NzgxIDExLjI3MzQzOCAxNDAuMDM5MDYyIEwgMTEuNTYyNSAxNDAuMzg2NzE5IEwgMTMuNzUgMTM5LjM3NSBDIDE5LjAzOTA2MiAxMzYuOTE0MDYyIDIzLjg1MTU2MiAxMzQuNzUgMjQuMDUwNzgxIDEzNC43NSBDIDI0LjE3NTc4MSAxMzQuNzUgMjUgMTM1LjQzNzUgMjUuODk4NDM4IDEzNi4yODkwNjIgQyAyNy45Mzc1IDEzOC4yMTA5MzggMjkuMDExNzE5IDEzOS4wMTE3MTkgMzEuODEyNSAxNDAuNzI2NTYyIEMgMzMuMzk4NDM4IDE0MS42ODc1IDM0LjA3NDIxOSAxNDIuMTc1NzgxIDM0LjEwMTU2MiAxNDIuMzUxNTYyIEMgMzQuMTI1IDE0Mi40ODgyODEgMzMuODg2NzE5IDE0NC4xMzY3MTkgMzMuNTc0MjE5IDE0Ni4wMjM0MzggQyAzMy4yNjE3MTkgMTQ3Ljg5ODQzOCAzMi44MDA3ODEgMTUwLjg2MzI4MSAzMi41NTA3ODEgMTUyLjYwMTU2MiBDIDMyLjE2NDA2MiAxNTUuMjczNDM4IDMyLjExMzI4MSAxNTUuNzg5MDYyIDMyLjI2MTcxOSAxNTUuODg2NzE5IEMgMzMuMTM2NzE5IDE1Ni40NDkyMTkgMzcuNTIzNDM4IDE1Ny44MzU5MzggNDEuMDYyNSAxNTguNjc1NzgxIEMgNDMuMTk5MjE5IDE1OS4xODc1IDQ3LjIzODI4MSAxNTkuOTM3NSA0Ny4zMTI1IDE1OS44NTE1NjIgQyA0Ny40ODgyODEgMTU5LjYyNSA1MC41NzQyMTkgMTUxLjUgNTEuNjg3NSAxNDguMzEyNSBDIDUxLjk2MDkzOCAxNDcuNTUwNzgxIDUyLjIzODI4MSAxNDYuODk4NDM4IDUyLjMwMDc4MSAxNDYuODUxNTYyIEMgNTIuMzc1IDE0Ni44MDA3ODEgNTMuMzEyNSAxNDYuNzUgNTQuMzc1IDE0Ni43NSBDIDU3LjUzOTA2MiAxNDYuNzUgNTkuNzEwOTM4IDE0Ni40Mzc1IDYzLjA4NTkzOCAxNDUuNDg4MjgxIEwgNjQuOTI1NzgxIDE0NC45NzY1NjIgTCA2NS4yNSAxNDUuMzM1OTM4IEMgNjUuNDI1NzgxIDE0NS41MzkwNjIgNjcuMjYxNzE5IDE0OC4xMDE1NjIgNjkuMzM1OTM4IDE1MS4wMjM0MzggTCA3My4xMjUgMTU2LjM1MTU2MiBMIDc1LjI1IDE1NS4zNzUgQyA3OC4wNzQyMTkgMTU0LjA3NDIxOSA3OS43MjY1NjIgMTUzLjE4NzUgODEuNjc1NzgxIDE1MS45MTQwNjIgQyA4My4zODY3MTkgMTUwLjgwMDc4MSA4NiAxNDguODUxNTYyIDg2LjQ2MDkzOCAxNDguMzUxNTYyIEwgODYuNzI2NTYyIDE0OC4wNjI1IEwgODUuNzUgMTQ1Ljg3NSBDIDg1LjIyNjU2MiAxNDQuNjc1NzgxIDg0LjAxMTcxOSAxNDIuMDIzNDM4IDgzLjA2MjUgMTQwIEMgODIuMTI1IDEzNy45NzY1NjIgODEuMjg5MDYyIDEzNi4xMzY3MTkgODEuMjEwOTM4IDEzNS45MTQwNjIgQyA4MS4wODU5MzggMTM1LjUxMTcxOSA4MS4xMTMyODEgMTM1LjQ4ODI4MSA4Mi4xOTkyMTkgMTM0LjMxMjUgQyA4NC4zNjMyODEgMTMyIDg2LjIzODI4MSAxMjkuNDg4MjgxIDg3LjM4NjcxOSAxMjcuMzUxNTYyIEMgODcuNzM4MjgxIDEyNi43MTA5MzggODguMTAxNTYyIDEyNi4xMDE1NjIgODguMTk5MjE5IDEyNiBDIDg4LjM5ODQzOCAxMjUuNzg5MDYyIDg4LjEwMTU2MiAxMjUuNzUgOTUuNjg3NSAxMjcgQyA5OC42NDg0MzggMTI3LjUgMTAxLjMwMDc4MSAxMjcuOTI1NzgxIDEwMS41NzQyMTkgMTI3Ljk2MDkzOCBMIDEwMi4wODU5MzggMTI4LjAyMzQzOCBMIDEwMi41IDEyNi45ODgyODEgQyAxMDMuMDM5MDYyIDEyNS41NzQyMTkgMTA0LjM4NjcxOSAxMjEuMzg2NzE5IDEwNC44NTE1NjIgMTE5LjY4NzUgQyAxMDUuMTY0MDYyIDExOC41MzkwNjIgMTA1Ljc2MTcxOSAxMTUuMzg2NzE5IDEwNi4wNTA3ODEgMTEzLjI4OTA2MiBDIDEwNi4xMjUgMTEyLjc3MzQzOCAxMDYuMTEzMjgxIDExMi43NSAxMDUuNjY0MDYyIDExMi41MjM0MzggQyAxMDUuMDYyNSAxMTIuMjEwOTM4IDEwMi41ODU5MzggMTExLjI3MzQzOCA5Ny42MjUgMTA5LjQzNzUgQyA5NS40NjA5MzggMTA4LjYzNjcxOSA5My41NjI1IDEwNy44OTg0MzggOTMuNDE0MDYyIDEwNy44MDA3ODEgQyA5My4xMzY3MTkgMTA3LjYyNSA5My4xMjUgMTA3LjU1MDc4MSA5My4xMjUgMTA1LjY0ODQzOCBDIDkzLjEyNSAxMDIuODI0MjE5IDkyLjc1IDEwMC4wNzQyMTkgOTEuOTI1NzgxIDk2LjgzNTkzOCBDIDkxLjc1IDk2LjE3NTc4MSA5MS42MjUgOTUuNSA5MS42NDg0MzggOTUuMzUxNTYyIEMgOTEuNjc1NzgxIDk1LjE2NDA2MiA5Mi41NTA3ODEgOTQuNDYwOTM4IDk0LjU1MDc4MSA5My4wMzkwNjIgQyA5Ni45MjU3ODEgOTEuMzM1OTM4IDEwMi4yNzM0MzggODcuMzUxNTYyIDEwMi42NjQwNjIgODcgQyAxMDIuODc1IDg2LjgxMjUgMTAxLjAzOTA2MiA4Mi44ODY3MTkgOTkuNTUwNzgxIDgwLjMwMDc4MSBDIDk4LjEyNSA3Ny44MTI1IDk1LjAxMTcxOSA3My41IDk0LjY2NDA2MiA3My41IEMgOTQuNDE0MDYyIDczLjUgOTAuNzUgNzUuMTM2NzE5IDg2LjYyNSA3Ny4wODU5MzggQyA4NC41MjM0MzggNzguMDg1OTM4IDgyLjY2NDA2MiA3OC45Mzc1IDgyLjQ3NjU2MiA3OC45NjA5MzggQyA4Mi4xNzU3ODEgNzkuMDIzNDM4IDgxLjkzNzUgNzguODM1OTM4IDgwLjUyMzQzOCA3Ny40NzY1NjIgQyA3OC44OTg0MzggNzUuODg2NzE5IDc2Ljc2MTcxOSA3NC4xOTkyMTkgNzUuMTg3NSA3My4yNzM0MzggQyA3NC4zNjMyODEgNzIuNzg5MDYyIDczLjI1IDcyLjAzOTA2MiA3Mi43MzgyODEgNzEuNjI1IEMgNzIuNDc2NTYyIDcxLjQxNDA2MiA3Mi4zNzUgNzIuMTI1IDczLjg3NSA2Mi42ODc1IEMgNzQuMjEwOTM4IDYwLjQ4ODI4MSA3NC41MzkwNjIgNTguNDg4MjgxIDc0LjU3NDIxOSA1OC4yMjY1NjIgTCA3NC42MzY3MTkgNTcuNzczNDM4IEwgNzIuNzI2NTYyIDU3LjAyMzQzOCBDIDcwLjQ0OTIxOSA1Ni4xMzY3MTkgNjcuNzYxNzE5IDU1LjI1IDY3LjMzNTkzOCA1NS4yNSBDIDY3LjE2NDA2MiA1NS4yNSA2Ni44MTI1IDU1LjE2NDA2MiA2Ni41NTA3ODEgNTUuMDUwNzgxIEMgNjYuMDUwNzgxIDU0LjgzNTkzOCA2MS4zMTI1IDUzLjgzNTkzOCA2MC4xMTMyODEgNTMuNjg3NSBMIDU5LjM5ODQzOCA1My42MDE1NjIgWiBNIDU1LjY2NDA2MiA4Ni45Mzc1IEMgNjEuODEyNSA4Ny43MzgyODEgNjYuOTc2NTYyIDkwLjk3NjU2MiA2OS45ODgyODEgOTUuOTE0MDYyIEMgNzEuMzM1OTM4IDk4LjExMzI4MSA3Mi40NjA5MzggMTAwLjkxNDA2MiA3Mi44ODY3MTkgMTAzLjA2MjUgQyA3MyAxMDMuNjM2NzE5IDczLjA2MjUgMTA0LjgwMDc4MSA3My4wNjI1IDEwNi40Mzc1IEMgNzMuMDUwNzgxIDEwOC43MTA5MzggNzMuMDIzNDM4IDEwOS4wNzQyMTkgNzIuNjk5MjE5IDExMC40Mzc1IEMgNzEuNzEwOTM4IDExNC42OTkyMTkgNzAuMTc1NzgxIDExNy42NjQwNjIgNjcuNjI1IDEyMC4yMzgyODEgQyA2NC42NDg0MzggMTIzLjI1IDYwLjUzOTA2MiAxMjUuMzUxNTYyIDU2LjI2MTcxOSAxMjYuMDYyNSBDIDUyLjYwMTU2MiAxMjYuNjc1NzgxIDQ3Ljc3MzQzOCAxMjUuODEyNSA0My45ODgyODEgMTIzLjg2MzI4MSBDIDM4LjMxMjUgMTIwLjkyNTc4MSAzNC4yODkwNjIgMTE0Ljg5ODQzOCAzMy42MjUgMTA4LjMxMjUgQyAzMy4yNzM0MzggMTA0Ljg2MzI4MSAzNC4zMDA3ODEgMTAwLjEyNSAzNi4xMjUgOTYuODEyNSBDIDM4LjgwMDc4MSA5MS45NDkyMTkgNDQuMDg1OTM4IDg4LjE4NzUgNDkuNzI2NTYyIDg3LjEzNjcxOSBDIDUxLjk3NjU2MiA4Ni43MTA5MzggNTMuNTUwNzgxIDg2LjY2NDA2MiA1NS42NjQwNjIgODYuOTM3NSBaIE0gNTUuNjY0MDYyIDg2LjkzNzUgXCIvPlxuICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0eWxlPVwiIHN0cm9rZTpub25lO2ZpbGwtcnVsZTpub256ZXJvO2ZpbGw6cmdiKDAlLDAlLDAlKTtmaWxsLW9wYWNpdHk6MTtcIiBkPVwiTSA1MS44NzUgODkuODM1OTM4IEMgNDkuODUxNTYyIDkwLjA1MDc4MSA0Ny45MjU3ODEgOTAuNjQ4NDM4IDQ1Ljg3NSA5MS42OTkyMTkgQyA0MS4zMjQyMTkgOTQuMDExNzE5IDM4Ljc4OTA2MiA5Ny4yODkwNjIgMzcuNDM3NSAxMDIuNTYyNSBDIDM2LjUyMzQzOCAxMDYuMTI1IDM2LjU2MjUgMTA4LjgwMDc4MSAzNy41ODU5MzggMTExLjg1MTU2MiBDIDM4LjYyNSAxMTQuOTQ5MjE5IDQxLjMyNDIxOSAxMTguNDQ5MjE5IDQ0LjEzNjcxOSAxMjAuMzI0MjE5IEMgNDkuMjg5MDYyIDEyMy43NSA1NS42NjQwNjIgMTI0LjE4NzUgNjEuMDYyNSAxMjEuNDYwOTM4IEMgNjUuNjEzMjgxIDExOS4xODc1IDY4Ljg1MTU2MiAxMTUuMDIzNDM4IDY5Ljg5ODQzOCAxMTAuMTEzMjgxIEMgNzAuMTI1IDEwOS4wNTA3ODEgNzAuMTc1NzgxIDEwOC40MTQwNjIgNzAuMTc1NzgxIDEwNi41NjI1IEMgNzAuMTc1NzgxIDEwNC41MjM0MzggNzAuMTQ4NDM4IDEwNC4xODc1IDY5LjgzNTkzOCAxMDIuOTYwOTM4IEMgNjguNjg3NSA5OC4zODY3MTkgNjUuNzYxNzE5IDk0LjMzNTkzOCA2MiA5Mi4xMjUgQyA1OS4yMzgyODEgOTAuNDg4MjgxIDU0Ljg5ODQzOCA4OS41MTE3MTkgNTEuODc1IDg5LjgzNTkzOCBaIE0gNTQuODk4NDM4IDkzLjkzNzUgQyA1Ni43MjY1NjIgOTQuMTM2NzE5IDU5LjEzNjcxOSA5NS4wMzkwNjIgNjAuNzYxNzE5IDk2LjEyNSBDIDYzLjA1MDc4MSA5Ny42NjQwNjIgNjUuMTEzMjgxIDEwMC42MzY3MTkgNjUuODk4NDM4IDEwMy41MTE3MTkgQyA2Ni4xNDg0MzggMTA0LjQyNTc4MSA2Ni4xODc1IDEwNC44MzU5MzggNjYuMTc1NzgxIDEwNi42MjUgQyA2Ni4xNjQwNjIgMTA4LjMyNDIxOSA2Ni4xMTMyODEgMTA4Ljg2MzI4MSA2NS44OTg0MzggMTA5LjY3NTc4MSBDIDY1LjMwMDc4MSAxMTEuODYzMjgxIDYzLjY3NTc4MSAxMTQuNTM5MDYyIDYyLjE2NDA2MiAxMTUuODUxNTYyIEMgNTkuNTM5MDYyIDExOC4xMTMyODEgNTcuMjEwOTM4IDExOS4xMDE1NjIgNTQuMTc1NzgxIDExOS4yMTA5MzggQyA1Mi4zODY3MTkgMTE5LjI4OTA2MiA1MS4zNTE1NjIgMTE5LjEzNjcxOSA0OS40NDkyMTkgMTE4LjUzOTA2MiBDIDQ1LjgyNDIxOSAxMTcuMzk4NDM4IDQzLjE2NDA2MiAxMTQuNzg5MDYyIDQxLjYzNjcxOSAxMTAuOTE0MDYyIEMgNDAuNzYxNzE5IDEwOC42NjQwNjIgNDAuNTg1OTM4IDEwNS43MjY1NjIgNDEuMTg3NSAxMDMuMzM1OTM4IEMgNDEuNDQ5MjE5IDEwMi4zNTE1NjIgNDIuMzEyNSAxMDAuNTExNzE5IDQzLjAxMTcxOSA5OS40ODgyODEgQyA0NC45NzY1NjIgOTYuNTc0MjE5IDQ4LjcxMDkzOCA5NC4zMDA3ODEgNTIuMjYxNzE5IDkzLjg4NjcxOSBDIDUzLjE2NDA2MiA5My43ODkwNjIgNTMuNDQ5MjE5IDkzLjc4OTA2MiA1NC44OTg0MzggOTMuOTM3NSBaIE0gNTQuODk4NDM4IDkzLjkzNzUgXCIvPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICBgXG4gICAgICAgIGNsZWFySW50ZXJ2YWwod2luZG93LlNWR0V4aXN0W2lkX2R1X2Rpdl0pLy8gQXJyw6p0ZSBsZSB0aW1lclxuICAgICAgfVxuICAgIH0sIDEwMCkgLy8gVsOpcmlmaWUgdG91dGVzIGxlcyAxMDBtc1xuICB9XG59XG5cbi8qKlxuICogQ3LDqWUgdW4gZGlhZ3JhbW1lIHBvdXIgdW5lIGZvbmN0aW9uIGFyaXRobcOpdGlxdWUgw6AgZGV1eCDDqXRhcGVzIHByb2R1aXQgcHVpcyBzb21tZVxuICogQHBhcmFtIHtzdHJpbmd9IGlkX2R1X2RpdiBpZCBkdSBkaXYgY29udGVuYW50IGxlIFNWR1xuICogQHBhcmFtIHtudW1iZXJ9IHcgbGFyZ2V1ciBkdSBkaXYgZHUgc3ZnXG4gKiBAcGFyYW0ge251bWVyfSBoIGhhdXRldXIgZHUgZGl2IGR1IHN2Z1xuICogQHBhcmFtIHtzdHJpbmd9IG5vbSBub20gZGUgbGEgZm9uY3Rpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSB4X2FudCBhbnTDqWPDqWRlbnQgZGUgZMOpcGFydFxuICogQHBhcmFtIHthcnJheX0gZXRhcGVzX2V4cHJlc3Npb25zIHRhYmxlYXUgY29udGVuYW50IGxlcyBvcMOpcmF0aW9ucyBldCBsZXMgZXhwcmVzc2lvbnMgYWxnw6licmlxdWVzIGRlcyDDqXRhcGVzXG4gKiBAYXV0aG9yIFPDqWJhc3RpZW4gTG96YW5vXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBTVkdfbWFjaGluZV9kaWFnXzNGMTIgKGlkX2R1X2RpdiwgdywgaCwgbm9tLCB4X2FudCwgZXRhcGVzX2V4cHJlc3Npb25zKSB7XG4gICd1c2Ugc3RyaWN0J1xuICBjb25zdCBpbnRlcmxpZ25lID0gMTAvLyB3LzgwOyAvL2gvMTA7IC8vIHVuaXTDqSBkJ2VzcGFjZW1lbnRcbiAgaWYgKCF3aW5kb3cuU1ZHRXhpc3QpIHsgd2luZG93LlNWR0V4aXN0ID0ge30gfSAvLyBTaSBTVkdFeGlzdCBuJ2V4aXN0ZSBwYXMgb24gbGUgY3LDqcOpXG4gIC8vIFNWR0V4aXN0IGVzdCB1biBkaWN0aW9ubmFpcmUgZGFucyBsZXF1ZWwgb24gc3RvY2tlIGxlcyBsaXN0ZW5uZXIgc3VyIGxhIGNyw6lhdGlvbiBkZXMgZGl2XG4gIHdpbmRvdy5TVkdFeGlzdFtpZF9kdV9kaXZdID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgIGlmICgkKGAjJHtpZF9kdV9kaXZ9YCkubGVuZ3RoKSB7XG4gICAgICAkKGAjJHtpZF9kdV9kaXZ9YCkuaHRtbCgnJykvLyBWaWRlIGxlIGRpdiBwb3VyIMOpdml0ZXIgbGVzIFNWRyBlbiBkb3VibG9uXG4gICAgICAvLyBvbiBjcsOpZSB1biByZWN0YW5nbGUgZG9udCBsYSB0YWlsbGUgZXN0IGFkYXB0w6llIGF1IHRleHRlXG4gICAgICAvLyBsZXQgcGF0aF9jYWRyZV9yZWN0X2FudCA9ICdNMCwwTDAsLScraW50ZXJsaWduZSsnLEwnKyh3X3hfYW50ICsgMippbnRlcmxpZ25lKSsnLC0nK2ludGVybGlnbmUrJyxMJysod194X2FudCArIDIqaW50ZXJsaWduZSkrJywnK2ludGVybGlnbmUrJ0wwLCcraW50ZXJsaWduZSsnWic7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZF9kdV9kaXYpLmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZlcnNpb249XCIxLjFcIiB4bWxuczp4bGluaz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiB2aWV3Qm94PVwiMCAwIGAgKyB3ICsgJyAnICsgaCArICdcIiB3aWR0aD1cIicgKyB3ICsgYFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTAgYCArIDUgKiBpbnRlcmxpZ25lICsgJ0wwICcgKyAzICogaW50ZXJsaWduZSArICdMJyArIDUgKiBpbnRlcmxpZ25lICsgJyAnICsgMyAqIGludGVybGlnbmUgKyAnTCcgKyA1ICogaW50ZXJsaWduZSArICcgJyArIDcgKiBpbnRlcmxpZ25lICsgJ0wwICcgKyA3ICogaW50ZXJsaWduZSArIGBaIFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlLWxpbmVqb2luPVwibnVsbFwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2Utd2lkdGg9XCIzXCIgc3Ryb2tlPVwiI2YxNTkyOVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BhdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JlaWduT2JqZWN0IHdpZHRoPVwiYCArIGludGVybGlnbmUgKyAnXCIgaGVpZ2h0PVwiJyArIGggLyAyICsgJ1wiIHg9XCInICsgMi41ICogaW50ZXJsaWduZSArICdcIiB5PVwiJyArIGggLyA0ICsgYFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cInBvc2l0aW9uOiBmaXhlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwia2F0ZXgtZGlzcGxheVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImthdGV4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImthdGV4LWh0bWxcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtb3JkIG1hdGhkZWZhdWx0XCI+YCArIHhfYW50ICsgYDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JlaWduT2JqZWN0PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgICAgICAgICAgICA8Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmUgeDE9XCJgICsgNSAqIGludGVybGlnbmUgKyAnXCIgeTE9XCInICsgNSAqIGludGVybGlnbmUgKyAnXCIgeDI9XCInICsgNyAqIGludGVybGlnbmUgKyAnXCIgeTI9XCInICsgNSAqIGludGVybGlnbmUgKyBgXCIgc3Ryb2tlLXdpZHRoPVwiM1wiIHN0cm9rZT1cIiNmMTU5MjlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saW5lPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8Y2lyY2xlIHI9XCJgICsgMiAqIGludGVybGlnbmUgKyAnXCIgY3g9XCInICsgOSAqIGludGVybGlnbmUgKyAnXCIgY3k9XCInICsgNSAqIGludGVybGlnbmUgKyBgXCIgZmlsbD1cIm5vbmVcIiBzdHJva2UtbGluZWpvaW49XCJudWxsXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS13aWR0aD1cIjNcIiBzdHJva2U9XCIjZjE1OTI5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvY2lyY2xlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTWAgKyAxMSAqIGludGVybGlnbmUgKyAnICcgKyA1ICogaW50ZXJsaWduZSArICdMJyArIDEzICogaW50ZXJsaWduZSArICcgJyArIDUgKiBpbnRlcmxpZ25lICsgJ0wnICsgKDEzICogaW50ZXJsaWduZSAtIGludGVybGlnbmUgLyAyKSArICcgJyArICg1ICogaW50ZXJsaWduZSAtIGludGVybGlnbmUgLyAyKSArICdNJyArIDEzICogaW50ZXJsaWduZSArICcgJyArIDUgKiBpbnRlcmxpZ25lICsgJ0wnICsgKDEzICogaW50ZXJsaWduZSAtIGludGVybGlnbmUgLyAyKSArICcgJyArICg1ICogaW50ZXJsaWduZSArIGludGVybGlnbmUgLyAyKSArIGAgXCIgZmlsbD1cIm5vbmVcIiBzdHJva2UtbGluZWpvaW49XCJudWxsXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS13aWR0aD1cIjNcIiBzdHJva2U9XCIjZjE1OTI5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvcGF0aD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcmVpZ25PYmplY3Qgd2lkdGg9XCJgICsgNCAqIGludGVybGlnbmUgKyAnXCIgaGVpZ2h0PVwiJyArIGggLyAyICsgJ1wiIHg9XCInICsgNy41ICogaW50ZXJsaWduZSArICdcIiB5PVwiJyArIGggLyA0ICsgYFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cInBvc2l0aW9uOiBmaXhlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwia2F0ZXgtZGlzcGxheVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImthdGV4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImthdGV4LWh0bWxcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtb3JkIG1hdGhkZWZhdWx0XCI+w5dgICsgZXRhcGVzX2V4cHJlc3Npb25zWzBdWzBdICsgYDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JlaWduT2JqZWN0PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgICAgICAgICAgICA8Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk1gICsgMTMgKiBpbnRlcmxpZ25lICsgJyAnICsgNSAqIGludGVybGlnbmUgKyAnTCcgKyAxMyAqIGludGVybGlnbmUgKyAnICcgKyAzICogaW50ZXJsaWduZSArICdMJyArIDIxICogaW50ZXJsaWduZSArICcgJyArIDMgKiBpbnRlcmxpZ25lICsgJ0wnICsgMjEgKiBpbnRlcmxpZ25lICsgJyAnICsgNyAqIGludGVybGlnbmUgKyAnTCcgKyAxMyAqIGludGVybGlnbmUgKyAnICcgKyA3ICogaW50ZXJsaWduZSArIGBaIFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlLWxpbmVqb2luPVwibnVsbFwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2Utd2lkdGg9XCIzXCIgc3Ryb2tlPVwiI2YxNTkyOVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BhdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JlaWduT2JqZWN0IHdpZHRoPVwiYCArIDIuNSAqIGludGVybGlnbmUgKyAnXCIgaGVpZ2h0PVwiJyArIGggLyAyICsgJ1wiIHg9XCInICsgMTYgKiBpbnRlcmxpZ25lICsgJ1wiIHk9XCInICsgaCAvIDQgKyBgXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwicG9zaXRpb246IGZpeGVkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJrYXRleC1kaXNwbGF5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwia2F0ZXhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwia2F0ZXgtaHRtbFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1vcmQgbWF0aGRlZmF1bHRcIj5gICsgZXRhcGVzX2V4cHJlc3Npb25zWzBdWzFdICsgYDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JlaWduT2JqZWN0PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgICAgICAgICAgICA8Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmUgeDE9XCJgICsgMjEgKiBpbnRlcmxpZ25lICsgJ1wiIHkxPVwiJyArIDUgKiBpbnRlcmxpZ25lICsgJ1wiIHgyPVwiJyArIDIzICogaW50ZXJsaWduZSArICdcIiB5Mj1cIicgKyA1ICogaW50ZXJsaWduZSArIGBcIiBzdHJva2Utd2lkdGg9XCIzXCIgc3Ryb2tlPVwiI2YxNTkyOVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpbmU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxjaXJjbGUgcj1cImAgKyAyICogaW50ZXJsaWduZSArICdcIiBjeD1cIicgKyAyNSAqIGludGVybGlnbmUgKyAnXCIgY3k9XCInICsgNSAqIGludGVybGlnbmUgKyBgXCIgZmlsbD1cIm5vbmVcIiBzdHJva2UtbGluZWpvaW49XCJudWxsXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS13aWR0aD1cIjNcIiBzdHJva2U9XCIjZjE1OTI5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvY2lyY2xlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTWAgKyAyNyAqIGludGVybGlnbmUgKyAnICcgKyA1ICogaW50ZXJsaWduZSArICdMJyArIDI5ICogaW50ZXJsaWduZSArICcgJyArIDUgKiBpbnRlcmxpZ25lICsgJ0wnICsgKDI5ICogaW50ZXJsaWduZSAtIGludGVybGlnbmUgLyAyKSArICcgJyArICg1ICogaW50ZXJsaWduZSAtIGludGVybGlnbmUgLyAyKSArICdNJyArIDI5ICogaW50ZXJsaWduZSArICcgJyArIDUgKiBpbnRlcmxpZ25lICsgJ0wnICsgKDI5ICogaW50ZXJsaWduZSAtIGludGVybGlnbmUgLyAyKSArICcgJyArICg1ICogaW50ZXJsaWduZSArIGludGVybGlnbmUgLyAyKSArIGAgXCIgZmlsbD1cIm5vbmVcIiBzdHJva2UtbGluZWpvaW49XCJudWxsXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS13aWR0aD1cIjNcIiBzdHJva2U9XCIjZjE1OTI5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvcGF0aD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcmVpZ25PYmplY3Qgd2lkdGg9XCJgICsgNCAqIGludGVybGlnbmUgKyAnXCIgaGVpZ2h0PVwiJyArIGggLyAyICsgJ1wiIHg9XCInICsgMjMuNSAqIGludGVybGlnbmUgKyAnXCIgeT1cIicgKyBoIC8gNCArIGBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJvZHkgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwicG9zaXRpb246IGZpeGVkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJrYXRleC1kaXNwbGF5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwia2F0ZXhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwia2F0ZXgtaHRtbFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1vcmQgbWF0aGRlZmF1bHRcIj4rYCArIGV0YXBlc19leHByZXNzaW9uc1sxXVswXSArIGA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2JvZHk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9yZWlnbk9iamVjdD5cbiAgICAgICAgICAgICAgICAgICAgICA8L2c+XG4gICAgICAgICAgICAgICAgICAgICAgPGc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNYCArIDI5ICogaW50ZXJsaWduZSArICcgJyArIDUgKiBpbnRlcmxpZ25lICsgJ0wnICsgMjkgKiBpbnRlcmxpZ25lICsgJyAnICsgMyAqIGludGVybGlnbmUgKyAnTCcgKyA0NCAqIGludGVybGlnbmUgKyAnICcgKyAzICogaW50ZXJsaWduZSArICdMJyArIDQ0ICogaW50ZXJsaWduZSArICcgJyArIDcgKiBpbnRlcmxpZ25lICsgJ0wnICsgMjkgKiBpbnRlcmxpZ25lICsgJyAnICsgNyAqIGludGVybGlnbmUgKyBgWiBcIiBmaWxsPVwibm9uZVwiIHN0cm9rZS1saW5lam9pbj1cIm51bGxcIiBzdHJva2UtbGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlLXdpZHRoPVwiM1wiIHN0cm9rZT1cIiNmMTU5MjlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wYXRoPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9yZWlnbk9iamVjdCB3aWR0aD1cImAgKyAxMiAqIGludGVybGlnbmUgKyAnXCIgaGVpZ2h0PVwiJyArIGggLyAyICsgJ1wiIHg9XCInICsgMzEgKiBpbnRlcmxpZ25lICsgJ1wiIHk9XCInICsgaCAvIDQgKyBgXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwicG9zaXRpb246IGZpeGVkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJrYXRleC1kaXNwbGF5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwia2F0ZXhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwia2F0ZXgtaHRtbFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYmFzZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1vcmQgbWF0aGRlZmF1bHRcIj5gICsgbm9tICsgJzxzcGFuIGNsYXNzPVwibW9wZW5cIj4oPC9zcGFuPicgKyB4X2FudCArICc8c3BhbiBjbGFzcz1cIm1jbG9zZVwiPik8L3NwYW4+PHNwYW4gY2xhc3M9XCJtc3BhY2VcIiBzdHlsZT1cIm1hcmdpbi1yaWdodDogMC40MDg4ODllbTtcIj48L3NwYW4+PTxzcGFuIGNsYXNzPVwibXNwYWNlXCIgc3R5bGU9XCJtYXJnaW4tcmlnaHQ6IDAuNDA4ODg5ZW07XCI+PC9zcGFuPicgKyBldGFwZXNfZXhwcmVzc2lvbnNbMV1bMV0gKyBgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ZvcmVpZ25PYmplY3Q+XG4gICAgICAgICAgICAgICAgICAgICAgPC9nPlxuICAgICAgICAgICAgICAgICAgPC9zdmc+XHRcbiAgICAgICAgICAgICAgICAgIGBcblxuICAgICAgY2xlYXJJbnRlcnZhbCh3aW5kb3cuU1ZHRXhpc3RbaWRfZHVfZGl2XSkvLyBBcnLDqnRlIGxlIHRpbWVyXG4gICAgfVxuICB9LCAxMDApIC8vIFbDqXJpZmllIHRvdXRlcyBsZXMgMTAwbXNcbn1cblxuLyoqXG4qIENyw6llIHVuZSBmbMOoY2hlIG9yYW5nZSBwb3VyIGxhIGZvbmN0aW9uIG1hY2hpbmVcbiogQHBhcmFtIHtvYmplY3R9IGdyb3VwZSBncm91cGUgc3ZnXG4qIEBwYXJhbSB7c3RyaW5nfSBjaGVtaW4gcGF0aCBwb3VyIGxhIGxpZ25lXG4qIEBwYXJhbSB7c3RyaW5nfSBjb3VsZXVyIGNvdWxldXJcbiogQEF1dGV1ciBTw6liYXN0aWVuIExvemFub1xuKi9cbmV4cG9ydCBmdW5jdGlvbiBTVkdfZmxlY2hlX21hY2hpbmVfbWF0aHMgKGdyb3VwZSwgY2hlbWluLCBjb3VsZXVyKSB7XG4gICd1c2Ugc3RyaWN0J1xuICByZXR1cm4gZ3JvdXBlLnBhdGgoY2hlbWluKS5maWxsKGNvdWxldXIpLnN0cm9rZSh7IGNvbG9yOiBjb3VsZXVyLCB3aWR0aDogMSwgbGluZWNhcDogJ3JvdW5kJywgbGluZWpvaW46ICdudWxsJyB9KVxufVxuXG4vKiogVHJhY2UgdW4gY2hlbWluIHBvdXIgdW4gZ3JvdXBlIGRvbm7DqSBhdmVjIHVuZSBjb3VsZXVyIGRvbm7DqWVcbiAgKiBAcGFyYW0ge29iamVjdH0gZ3JvdXBlIGdyb3VwZVxuICAqIEBwYXJhbSB7c3RyaW5nfSBjaGVtaW4gcGF0aFxuICAqIEBwYXJhbSB7c3RyaW5nfSBjb3VsZXVyIGNvdWxldXJcbiAgKiBAQXV0ZXVyIFPDqWJhc3RpZW4gTG96YW5vXG4gICovXG5leHBvcnQgZnVuY3Rpb24gU1ZHX2NoZW1pbiAoZ3JvdXBlLCBjaGVtaW4sIGNvdWxldXIpIHtcbiAgJ3VzZSBzdHJpY3QnXG4gIHJldHVybiBncm91cGUucGF0aChjaGVtaW4pLmZpbGwoJ25vbmUnKS5zdHJva2UoeyBjb2xvcjogY291bGV1ciwgd2lkdGg6IDEsIGxpbmVjYXA6ICdyb3VuZCcsIGxpbmVqb2luOiAnbnVsbCcgfSlcbn1cblxuLyoqXG4gICAqIENyw6llIHVuIGRpYWdyYW1tZSBwb3VyIHVuZSBmb25jdGlvbiBhcml0aG3DqXRpcXVlIMOgIHVuZSDDqXRhcGUgcHJvZHVpdFxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWRfZHVfZGl2IGlkIGR1IGRpdiBjb250ZW5hbnQgbGUgU1ZHXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB3IGxhcmdldXIgZHUgZGl2IGR1IHN2Z1xuICAgKiBAcGFyYW0ge251bWVyfSBoIGhhdXRldXIgZHUgZGl2IGR1IHN2Z1xuICAgKiBAcGFyYW0ge3N0cmluZ30gbm9tIG5vbSBkZSBsYSBmb25jdGlvblxuICAgKiBAcGFyYW0ge3N0cmluZ30geF9hbnQgYW50w6ljw6lkZW50IGRlIGTDqXBhcnRcbiAgICogQHBhcmFtIHthcnJheX0gZXRhcGVzX2V4cHJlc3Npb25zIHRhYmxlYXUgY29udGVuYW50IGxlcyBvcMOpcmF0aW9ucyBldCBsZXMgZXhwcmVzc2lvbnMgYWxnw6licmlxdWVzIGRlcyDDqXRhcGVzXG4gICAqIEBBdXRldXIgU8OpYmFzdGllbiBMb3phbm9cbiAgICovXG5leHBvcnQgZnVuY3Rpb24gU1ZHX21hY2hpbmVfZGlhZ18zRjFfYWN0X21vbm8gKGlkX2R1X2RpdiwgdywgaCwgbm9tLCB4X2FudCwgZXRhcGVzX2V4cHJlc3Npb25zKSB7XG4gICd1c2Ugc3RyaWN0J1xuICBjb25zdCBpbnRlcmxpZ25lID0gMTAvLyB3LzgwOyAvL2gvMTA7IC8vIHVuaXTDqSBkJ2VzcGFjZW1lbnRcbiAgaWYgKCF3aW5kb3cuU1ZHRXhpc3QpIHsgd2luZG93LlNWR0V4aXN0ID0ge30gfSAvLyBTaSBTVkdFeGlzdCBuJ2V4aXN0ZSBwYXMgb24gbGUgY3LDqcOpXG4gIC8vIFNWR0V4aXN0IGVzdCB1biBkaWN0aW9ubmFpcmUgZGFucyBsZXF1ZWwgb24gc3RvY2tlIGxlcyBsaXN0ZW5uZXIgc3VyIGxhIGNyw6lhdGlvbiBkZXMgZGl2XG4gIHdpbmRvdy5TVkdFeGlzdFtpZF9kdV9kaXZdID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgIGlmICgkKGAjJHtpZF9kdV9kaXZ9YCkubGVuZ3RoKSB7XG4gICAgICAkKGAjJHtpZF9kdV9kaXZ9YCkuaHRtbCgnJykvLyBWaWRlIGxlIGRpdiBwb3VyIMOpdml0ZXIgbGVzIFNWRyBlbiBkb3VibG9uXG4gICAgICAvLyBvbiBjcsOpZSB1biByZWN0YW5nbGUgZG9udCBsYSB0YWlsbGUgZXN0IGFkYXB0w6llIGF1IHRleHRlXG4gICAgICAvLyBsZXQgcGF0aF9jYWRyZV9yZWN0X2FudCA9ICdNMCwwTDAsLScraW50ZXJsaWduZSsnLEwnKyh3X3hfYW50ICsgMippbnRlcmxpZ25lKSsnLC0nK2ludGVybGlnbmUrJyxMJysod194X2FudCArIDIqaW50ZXJsaWduZSkrJywnK2ludGVybGlnbmUrJ0wwLCcraW50ZXJsaWduZSsnWic7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZF9kdV9kaXYpLmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZlcnNpb249XCIxLjFcIiB4bWxuczp4bGluaz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiB2aWV3Qm94PVwiMCAwIGAgKyB3ICsgJyAnICsgaCArICdcIiB3aWR0aD1cIicgKyB3ICsgYFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTAgYCArIDUgKiBpbnRlcmxpZ25lICsgJ0wwICcgKyAzICogaW50ZXJsaWduZSArICdMJyArIDUgKiBpbnRlcmxpZ25lICsgJyAnICsgMyAqIGludGVybGlnbmUgKyAnTCcgKyA1ICogaW50ZXJsaWduZSArICcgJyArIDcgKiBpbnRlcmxpZ25lICsgJ0wwICcgKyA3ICogaW50ZXJsaWduZSArIGBaIFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlLWxpbmVqb2luPVwibnVsbFwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2Utd2lkdGg9XCIzXCIgc3Ryb2tlPVwiI2YxNTkyOVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BhdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JlaWduT2JqZWN0IHdpZHRoPVwiYCArIGludGVybGlnbmUgKyAnXCIgaGVpZ2h0PVwiJyArIGggLyAyICsgJ1wiIHg9XCInICsgMi41ICogaW50ZXJsaWduZSArICdcIiB5PVwiJyArIGggLyA0ICsgYFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cInBvc2l0aW9uOiBmaXhlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwia2F0ZXgtZGlzcGxheVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImthdGV4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImthdGV4LWh0bWxcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtb3JkIG1hdGhkZWZhdWx0XCI+YCArIHhfYW50ICsgYDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JlaWduT2JqZWN0PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgICAgICAgICAgICA8Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmUgeDE9XCJgICsgNSAqIGludGVybGlnbmUgKyAnXCIgeTE9XCInICsgNSAqIGludGVybGlnbmUgKyAnXCIgeDI9XCInICsgNyAqIGludGVybGlnbmUgKyAnXCIgeTI9XCInICsgNSAqIGludGVybGlnbmUgKyBgXCIgc3Ryb2tlLXdpZHRoPVwiM1wiIHN0cm9rZT1cIiNmMTU5MjlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saW5lPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8Y2lyY2xlIHI9XCJgICsgMiAqIGludGVybGlnbmUgKyAnXCIgY3g9XCInICsgOSAqIGludGVybGlnbmUgKyAnXCIgY3k9XCInICsgNSAqIGludGVybGlnbmUgKyBgXCIgZmlsbD1cIm5vbmVcIiBzdHJva2UtbGluZWpvaW49XCJudWxsXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS13aWR0aD1cIjNcIiBzdHJva2U9XCIjZjE1OTI5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvY2lyY2xlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTWAgKyAxMSAqIGludGVybGlnbmUgKyAnICcgKyA1ICogaW50ZXJsaWduZSArICdMJyArIDEzICogaW50ZXJsaWduZSArICcgJyArIDUgKiBpbnRlcmxpZ25lICsgJ0wnICsgKDEzICogaW50ZXJsaWduZSAtIGludGVybGlnbmUgLyAyKSArICcgJyArICg1ICogaW50ZXJsaWduZSAtIGludGVybGlnbmUgLyAyKSArICdNJyArIDEzICogaW50ZXJsaWduZSArICcgJyArIDUgKiBpbnRlcmxpZ25lICsgJ0wnICsgKDEzICogaW50ZXJsaWduZSAtIGludGVybGlnbmUgLyAyKSArICcgJyArICg1ICogaW50ZXJsaWduZSArIGludGVybGlnbmUgLyAyKSArIGAgXCIgZmlsbD1cIm5vbmVcIiBzdHJva2UtbGluZWpvaW49XCJudWxsXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS13aWR0aD1cIjNcIiBzdHJva2U9XCIjZjE1OTI5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvcGF0aD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcmVpZ25PYmplY3Qgd2lkdGg9XCJgICsgNCAqIGludGVybGlnbmUgKyAnXCIgaGVpZ2h0PVwiJyArIGggLyAyICsgJ1wiIHg9XCInICsgNy41ICogaW50ZXJsaWduZSArICdcIiB5PVwiJyArIGggLyA0ICsgYFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cInBvc2l0aW9uOiBmaXhlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwia2F0ZXgtZGlzcGxheVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImthdGV4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImthdGV4LWh0bWxcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImJhc2VcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtb3JkIG1hdGhkZWZhdWx0XCI+w5dgICsgZXRhcGVzX2V4cHJlc3Npb25zWzBdWzBdICsgYDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JlaWduT2JqZWN0PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgICAgICAgICAgICA8Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk1gICsgMTMgKiBpbnRlcmxpZ25lICsgJyAnICsgNSAqIGludGVybGlnbmUgKyAnTCcgKyAxMyAqIGludGVybGlnbmUgKyAnICcgKyAzICogaW50ZXJsaWduZSArICdMJyArIDI3ICogaW50ZXJsaWduZSArICcgJyArIDMgKiBpbnRlcmxpZ25lICsgJ0wnICsgMjcgKiBpbnRlcmxpZ25lICsgJyAnICsgNyAqIGludGVybGlnbmUgKyAnTCcgKyAxMyAqIGludGVybGlnbmUgKyAnICcgKyA3ICogaW50ZXJsaWduZSArIGBaIFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlLWxpbmVqb2luPVwibnVsbFwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2Utd2lkdGg9XCIzXCIgc3Ryb2tlPVwiI2YxNTkyOVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BhdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JlaWduT2JqZWN0IHdpZHRoPVwiYCArIDEyICogaW50ZXJsaWduZSArICdcIiBoZWlnaHQ9XCInICsgaCAvIDIgKyAnXCIgeD1cIicgKyAxNiAqIGludGVybGlnbmUgKyAnXCIgeT1cIicgKyBoIC8gNCArIGBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJwb3NpdGlvbjogZml4ZWRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImthdGV4LWRpc3BsYXlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJrYXRleFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJrYXRleC1odG1sXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJiYXNlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1vcmQgbWF0aGRlZmF1bHRcIj5gICsgbm9tICsgJzxzcGFuIGNsYXNzPVwibW9wZW5cIj4oPC9zcGFuPicgKyB4X2FudCArICc8c3BhbiBjbGFzcz1cIm1jbG9zZVwiPik8L3NwYW4+PHNwYW4gY2xhc3M9XCJtc3BhY2VcIiBzdHlsZT1cIm1hcmdpbi1yaWdodDogMC40MDg4ODllbTtcIj48L3NwYW4+PTxzcGFuIGNsYXNzPVwibXNwYWNlXCIgc3R5bGU9XCJtYXJnaW4tcmlnaHQ6IDAuNDA4ODg5ZW07XCI+PC9zcGFuPicgKyBldGFwZXNfZXhwcmVzc2lvbnNbMF1bMV0gKyBgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ZvcmVpZ25PYmplY3Q+XG4gICAgICAgICAgICAgICAgICAgICAgPC9nPlxuICAgICAgICAgICAgICAgICAgPC9zdmc+XHRcbiAgICAgICAgICAgICAgICAgIGBcblxuICAgICAgY2xlYXJJbnRlcnZhbCh3aW5kb3cuU1ZHRXhpc3RbaWRfZHVfZGl2XSkvLyBBcnLDqnRlIGxlIHRpbWVyXG4gICAgfVxuICB9LCAxMDApIC8vIFbDqXJpZmllIHRvdXRlcyBsZXMgMTAwbXNcbn1cblxuLyoqXG4gICAqIEZvbmN0aW9uIHBvdXIgcGFydGljdWxhcmlzZXIgdW5lIHBvbGljZSBzdmcgZXQgc2VzIHBhcmFtw6h0cmVzXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBmb250XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpbnRlcmxpZ25lXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhbmNyZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gZl9zdHlsZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gZl93ZWlnaHRcbiAgICogQGF1dGhvciBTw6liYXN0aWVuIExvemFub1xuICAgKi9cbmV4cG9ydCBmdW5jdGlvbiBteV9zdmdfZm9udCAoZm9udCwgaW50ZXJsaWduZSwgYW5jcmUsIGZfc3R5bGUsIGZfd2VpZ2h0KSB7XG4gICd1c2Ugc3RyaWN0J1xuICByZXR1cm4ge1xuICAgIGZhbWlseTogZm9udCxcbiAgICBzaXplOiBpbnRlcmxpZ25lLFxuICAgIGFuY2hvcjogYW5jcmUsXG4gICAgc3R5bGU6IGZfc3R5bGUsXG4gICAgLy8sIGxlYWRpbmcgOiAwLjVcbiAgICB3ZWlnaHQ6IGZfd2VpZ2h0XG4gIH1cbn1cblxuLyoqXG4gICAqIEZvbmN0aW9uIHBvdXIgY3LDqWVyIHVuZSBtYWNoaW5lIG1hdGjDqW1hdGlxdWUgU1ZHLCB1bmUgZm9uY3Rpb24hXG4gICAqIGdlc3Rpb24gZHUgcmVuZHUgS2FUZVggdGVtcG9yYWlyZSBhdmVjIGluc2VydGlvbiBtYW51ZWxsZSBkZSBiYWxpc2VzIGZvcmVpZ25PYmplY3QgcG91ciBsZXMgdGV4dGVzXG4gICAqIEFUVEVOVElPTiBCVUcgU1ZHIERPTkMgTEVTIEFOSU1BVElPTlMgU09OVCBGSUxNRUVTIEEgUEFSVElSIERFIENFTExFUyBHRU5FUkVFUyBQQVIgTEEgRk9OQ1RJT04gU1ZHX21hY2hpbmVfbWF0aHMoKSBTT1VTIEZJUkVGT1hcbiAgICogREUgRkFDT04gQSBBVk9JUiBVTiBSRU5EVSBVTklGT1JNRSBRVUVMIFFVRSBTT0lUIExFIE5BVklHQVRFVVIgT04gUkVORCBMRVMgQU5JTUFUSU9OUyBQQVIgREVTIFZJREVPU1xuICAgKiBPTiBMQUlTU0UgTEEgUElST1VFVFRFIERFIERFVEVDVElPTiBEVSBVU0VSQUdFTlQgRU4gQ09NTUVOVEFJUkUgRU4gQVRURU5EQU5UIERFIFRST1VWRVIgVU5FIFNPTFVUSU9OIERFIFJFTkRVIExBVEVYIERBTlMgU1ZHIFVOSVZFUlNFTExFXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZF9kdV9kaXYgaWRfZHVfZGl2XG4gICAqIEBwYXJhbSB7bnVtYmVyfSB3IHdpZHRoIGR1IHN2Z1xuICAgKiBAcGFyYW0ge251bWJlcn0gaCBoZWlnaHQgZHUgc3ZnXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBub20gbm9tIGRlIGxhIGZvbmN0aW9uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldGFwZTEgZXRhcGUgMSBkdSBwcm9jw6lkw6kgZGUgY2FsY3VsXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldGFwZTIgZXRhcGUgMiBkdSBwcm9jw6lkw6kgZGUgY2FsY3VsXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldGFwZTMgZXRhcGUgMyBkdSBwcm9jw6lkw6kgZGUgY2FsY3VsXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB4X2xpZ25lMSBhbnTDqWPDqWRlbnQgbGlnbmUxXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB4X2xpZ25lMiBhbnTDqWPDqWRlbnQgbGlnbmUyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB5X2xpZ25lMSBpbWFnZSBsaWduZTFcbiAgICogQHBhcmFtIHtzdHJpbmd9IHlfbGlnbmUyIGltYWdlIGxpZ25lMlxuICAgKiBAYXV0aG9yIFPDqWJhc3RpZW4gTG96YW5vXG4gICAqL1xuZXhwb3J0IGZ1bmN0aW9uIFNWR19tYWNoaW5lX21hdGhzIChpZF9kdV9kaXYsIHcsIGgsIG5vbSwgZXRhcGUxLCBldGFwZTIsIGV0YXBlMywgeF9saWduZTEsIHhfbGlnbmUyLCB5X2xpZ25lMSwgeV9saWduZTIpIHtcbiAgJ3VzZSBzdHJpY3QnXG4gIGNvbnN0IGludGVybGlnbmUgPSAxNSAvLyBwb3VyIHVuIGludGVybGlnbmUgdW5pZm9ybWVcbiAgY29uc3QgcHJvcF9mb250ID0gbXlfc3ZnX2ZvbnQoJ0hlbHZldGljYScsIGludGVybGlnbmUsICdzdGFydCcsICdub3JtYWwnLCAnbm9ybWFsJylcbiAgY29uc3QgcHJvcF9mb250X25vbSA9IG15X3N2Z19mb250KCdIZWx2ZXRpY2EnLCBpbnRlcmxpZ25lLCAnc3RhcnQnLCAnbm9ybWFsJywgJ2JvbGQnKVxuICBjb25zdCBwcm9wX2ZvbnRfZXRhcGUgPSBteV9zdmdfZm9udCgnSGVsdmV0aWNhJywgNCAqIGludGVybGlnbmUgLyA1LCAnc3RhcnQnLCAnbm9ybWFsJywgJ25vcm1hbCcpXG5cbiAgaWYgKCF3aW5kb3cuU1ZHRXhpc3QpIHsgd2luZG93LlNWR0V4aXN0ID0ge30gfSAvLyBTaSBTVkdFeGlzdCBuJ2V4aXN0ZSBwYXMgb24gbGUgY3LDqcOpXG4gIC8vIFNWR0V4aXN0IGVzdCB1biBkaWN0aW9ubmFpcmUgZGFucyBsZXF1ZWwgb24gc3RvY2tlIGxlcyBsaXN0ZW5uZXIgc3VyIGxhIGNyw6lhdGlvbiBkZXMgZGl2XG4gIHdpbmRvdy5TVkdFeGlzdFtpZF9kdV9kaXZdID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgIGlmICgkKGAjJHtpZF9kdV9kaXZ9YCkubGVuZ3RoKSB7XG4gICAgICAkKGAjJHtpZF9kdV9kaXZ9YCkuaHRtbCgnJykvLyBWaWRlIGxlIGRpdiBwb3VyIMOpdml0ZXIgbGVzIFNWRyBlbiBkb3VibG9uXG4gICAgICAvLyBjb25zdCBtb25fc3ZnID0gU1ZHKCkuYWRkVG8oYCMke2lkX2R1X2Rpdn1gKS52aWV3Ym94KDAsIDAsIHcsIGgpLnNpemUoJzEwMCUnLCcxMDAlJyk7XG4gICAgICBjb25zdCBtb25fc3ZnID0gU1ZHKCkuYWRkVG8oYCMke2lkX2R1X2Rpdn1gKS52aWV3Ym94KDAsIDAsIHcsIGgpXG4gICAgICAvLyBvbiB0cmFjZSB1biBjYWRyZSBwb3VyIGxlIGRlYnVnXG4gICAgICAvLyBtb25fc3ZnLnBhdGgoJ00wLDAgTCcrdysnLDBMJyt3KycsJytoKydMMCwnK2grJ1onKS5maWxsKCdub25lJykuc3Ryb2tlKHsgY29sb3I6ICcjZjE1OTI5Jywgd2lkdGg6IDEsIGxpbmVjYXA6ICdyb3VuZCcsIGxpbmVqb2luOidudWxsJ30pO1xuXG4gICAgICAvLyBwYXRoIHBvdXIgY3LDqWVyIGRlcyBmbGVjaGVzXG4gICAgICBjb25zdCBwYXRoX2ZsZWNoZSA9ICdtMCwwIGwtJyArIGludGVybGlnbmUgLyAyICsgJywtJyArIGludGVybGlnbmUgKyAnIGwnICsgaW50ZXJsaWduZSArICcsJyArIGludGVybGlnbmUgKyAnIGwtJyArIGludGVybGlnbmUgKyAnLCcgKyBpbnRlcmxpZ25lICsgJyBsJyArIGludGVybGlnbmUgLyAyICsgJywtJyArIGludGVybGlnbmUgKyAneidcblxuICAgICAgLy8gT24gY3LDqWUgdW5lIHRpbWVsaW5lXG4gICAgICBjb25zdCB0aW1lbGluZSA9IG5ldyBTVkcuVGltZWxpbmUoKVxuXG4gICAgICAvLyAtLS0tLS0tLS0tLS1DUkVBVElPTiBERVMgR1JPVVBFUy0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgIC8vIC0tLS0tLS0tLS0tLUFudMOpY8OpZGVudC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICBjb25zdCBhbnQgPSBtb25fc3ZnLmdyb3VwKClcblxuICAgICAgLy8gLS0tLS0tLS0tLS0tSW1hZ2UtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICBjb25zdCBpbSA9IG1vbl9zdmcuZ3JvdXAoKVxuXG4gICAgICAvLyAtLS0tLS0tLS0tLS1QUkVQQVJBVElPTiBERVMgRElNRU5TSU9OUyBORUNFU1NBSVJFUy0tLS1cbiAgICAgIC8vIC0tLS0tLS0tLS0tLURpbWVuc2lvbiBBbnTDqWPDqWRlbnQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICBjb25zdCBhbnRfbGlnbmUxID0gYW50LnRleHQoeF9saWduZTEpLmZvbnQocHJvcF9mb250KVxuICAgICAgY29uc3QgYW50X2xpZ25lMiA9IGFudC50ZXh0KHhfbGlnbmUyKS5mb250KHByb3BfZm9udClcbiAgICAgIGNvbnN0IHdfYW50ID0gTWF0aC5tYXgoYW50X2xpZ25lMS5sZW5ndGgoKSwgYW50X2xpZ25lMi5sZW5ndGgoKSkgKyBpbnRlcmxpZ25lXG4gICAgICBhbnRfbGlnbmUxLmNsZWFyKClcbiAgICAgIGFudF9saWduZTIuY2xlYXIoKVxuXG4gICAgICAvLyAtLS0tLS0tLS0tLS1EaW1lbnNpb24gSW1hZ2UtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgIGNvbnN0IGltX2xpZ25lMSA9IGltLnRleHQoeV9saWduZTEpLmZvbnQocHJvcF9mb250KVxuICAgICAgY29uc3QgaW1fbGlnbmUyID0gaW0udGV4dCh5X2xpZ25lMikuZm9udChwcm9wX2ZvbnQpXG4gICAgICBjb25zdCB3X2ltID0gTWF0aC5tYXgoaW1fbGlnbmUxLmxlbmd0aCgpLCBpbV9saWduZTIubGVuZ3RoKCkpICsgaW50ZXJsaWduZVxuICAgICAgaW1fbGlnbmUxLmNsZWFyKClcbiAgICAgIGltX2xpZ25lMi5jbGVhcigpXG5cbiAgICAgIC8vIC0tLS0tLS0tLS0tLURpbWVuc2lvbiBNYWNoaW5lLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgLy8gb24gY3LDqWUgZGVzIHZhcmlhYmxlcyBwb3VyIGxlIHRleHRlIMOgIGFmZmljaGVyIHN1ciBsYSBtYWNoaW5lIGFmaW4gZGUgcsOpY3Vww6lyZXIgbGV1ciB0YWlsbGVcbiAgICAgIC8vIHBvdXIgYWp1c3RlciBjZWxsZSBkZSBsYSBtYWNoaW5lLlxuICAgICAgbGV0IFdfbWFjaGluZV9ub20sIG1hY2hpbmVfbm9tLCBtYWNoaW5lX2V0YXBlMSwgd19tYWNoaW5lX2V0YXBlMSwgbWFjaGluZV9ldGFwZTIsIHdfbWFjaGluZV9ldGFwZTIsIG1hY2hpbmVfZXRhcGUzLCB3X21hY2hpbmVfZXRhcGUzXG4gICAgICBpZiAobm9tICE9ICcnKSB7XG4gICAgICAgIG1hY2hpbmVfbm9tID0gbW9uX3N2Zy50ZXh0KG5vbSkuZm9udChwcm9wX2ZvbnRfbm9tKVxuICAgICAgICB3X21hY2hpbmVfbm9tID0gbWFjaGluZV9ub20ubGVuZ3RoKClcbiAgICAgICAgbWFjaGluZV9ub20uY2xlYXIoKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd19tYWNoaW5lX25vbSA9IDBcbiAgICAgIH1cbiAgICAgIGlmIChldGFwZTEgIT0gJycpIHtcbiAgICAgICAgbWFjaGluZV9ldGFwZTEgPSBtb25fc3ZnLnRleHQoZXRhcGUxKS5mb250KHByb3BfZm9udF9ldGFwZSlcbiAgICAgICAgd19tYWNoaW5lX2V0YXBlMSA9IG1hY2hpbmVfZXRhcGUxLmxlbmd0aCgpXG4gICAgICAgIG1hY2hpbmVfZXRhcGUxLmNsZWFyKClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdfbWFjaGluZV9ldGFwZTEgPSAwXG4gICAgICB9XG4gICAgICBpZiAoZXRhcGUyICE9ICcnKSB7XG4gICAgICAgIG1hY2hpbmVfZXRhcGUyID0gbW9uX3N2Zy50ZXh0KGV0YXBlMikuZm9udChwcm9wX2ZvbnRfZXRhcGUpXG4gICAgICAgIHdfbWFjaGluZV9ldGFwZTIgPSBtYWNoaW5lX2V0YXBlMi5sZW5ndGgoKVxuICAgICAgICBtYWNoaW5lX2V0YXBlMi5jbGVhcigpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3X21hY2hpbmVfZXRhcGUyID0gMFxuICAgICAgfVxuICAgICAgaWYgKGV0YXBlMyAhPSAnJykge1xuICAgICAgICBtYWNoaW5lX2V0YXBlMyA9IG1vbl9zdmcudGV4dChldGFwZTMpLmZvbnQocHJvcF9mb250X2V0YXBlKVxuICAgICAgICB3X21hY2hpbmVfZXRhcGUzID0gbWFjaGluZV9ldGFwZTMubGVuZ3RoKClcbiAgICAgICAgbWFjaGluZV9ldGFwZTMuY2xlYXIoKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd19tYWNoaW5lX2V0YXBlMyA9IDBcbiAgICAgIH1cblxuICAgICAgY29uc3Qgd19ldGFwZV9tYXggPSBNYXRoLm1heCh3X21hY2hpbmVfbm9tLCB3X21hY2hpbmVfZXRhcGUxLCB3X21hY2hpbmVfZXRhcGUyLCB3X21hY2hpbmVfZXRhcGUzLCB3X2FudCArIGludGVybGlnbmUsIHdfaW0gKyBpbnRlcmxpZ25lKSArIDEuNSAqIGludGVybGlnbmVcblxuICAgICAgLy8gLS0tLS0tLS0tLS0tR1JPVVBFIEFOVEVDRURFTlQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgICBjb25zdCBhbnRfbGlnbmUgPSBhbnQuZm9yZWlnbk9iamVjdCh3X2FudCwgaCkuYXR0cih7IHg6ICcwJywgeTogJzAnIH0pXG4gICAgICBjb25zdCBhbnREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwnLCAnZGl2JylcbiAgICAgIGthdGV4LnJlbmRlcih4X2xpZ25lMSArICdcXFxcbmV3bGluZSAnICsgeF9saWduZTIsIGFudERpdiwge1xuICAgICAgICBkaXNwbGF5TW9kZTogdHJ1ZSwgdGhyb3dPbkVycm9yOiB0cnVlLCBlcnJvckNvbG9yOiAnI0NDMDAwMCcsIHN0cmljdDogJ2lnbm9yZScsIHRydXN0OiBmYWxzZVxuICAgICAgfSlcbiAgICAgIGFudF9saWduZS5hZGQoYW50RGl2KVxuICAgICAgYW50X2xpZ25lLmRtb3ZlKDAsIC1hbnREaXYub2Zmc2V0SGVpZ2h0IC8gMilcbiAgICAgIGNvbnN0IGZsZWNoZV9hbnQgPSBTVkdfZmxlY2hlX21hY2hpbmVfbWF0aHMoYW50LCBwYXRoX2ZsZWNoZSwgJyNmMTU5MjknKVxuICAgICAgZmxlY2hlX2FudC5kbW92ZShhbnREaXYub2Zmc2V0V2lkdGggKyBpbnRlcmxpZ25lIC8gMiwgaW50ZXJsaWduZSlcbiAgICAgIC8vIG9uIHBvc2l0aW9ubmUgbGUgZ3JvdXBlIGFudMOpY8OpZGVudFxuICAgICAgYW50LmRtb3ZlKDAsIGggLyAyIC0gaW50ZXJsaWduZSlcblxuICAgICAgLy8gLS0tLS0tLS0tLS0tR1JPVVBFIElNQUdFLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgY29uc3QgaW1fbGlnbmUgPSBpbS5mb3JlaWduT2JqZWN0KHdfaW0sIGgpLmF0dHIoeyB4OiAnMCcsIHk6ICcwJyB9KVxuICAgICAgY29uc3QgaW1EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwnLCAnZGl2JylcbiAgICAgIGthdGV4LnJlbmRlcih5X2xpZ25lMSArICdcXFxcbmV3bGluZSAnICsgeV9saWduZTIsIGltRGl2LCB7XG4gICAgICAgIGRpc3BsYXlNb2RlOiB0cnVlLCB0aHJvd09uRXJyb3I6IHRydWUsIGVycm9yQ29sb3I6ICcjQ0MwMDAwJywgc3RyaWN0OiAnaWdub3JlJywgdHJ1c3Q6IGZhbHNlXG4gICAgICB9KVxuICAgICAgaW1fbGlnbmUuYWRkKGltRGl2KVxuICAgICAgaW1fbGlnbmUuZG1vdmUoMCwgLWltRGl2Lm9mZnNldEhlaWdodCAvIDIpXG4gICAgICBjb25zdCBmbGVjaGVfaW0gPSBTVkdfZmxlY2hlX21hY2hpbmVfbWF0aHMoaW0sIHBhdGhfZmxlY2hlLCAnI2YxNTkyOScpXG4gICAgICBmbGVjaGVfaW0uZG1vdmUoLWludGVybGlnbmUgLyAyLCBpbnRlcmxpZ25lKVxuICAgICAgLy8gb24gcG9zaXRpb25uZSBsZSBncm91cGUgaW1hZ2VcbiAgICAgIGltLmRtb3ZlKHcgLyAyIC0gaW1EaXYub2Zmc2V0V2lkdGggLyAyLCBoIC8gMiAtIGludGVybGlnbmUpXG5cbiAgICAgIC8vIC0tLS0tLS0tLS0tLUdST1VQRSBNQUNISU5FLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgLy8gY29uc3QgcGF0aF9tYWNoaW5lID0gJ00tNSwwIEwtNSwtNSBMLTUsNSBNLTUsMCBMMTAsMCBMMTAsLTQwIEwxMDAsLTQwIEwxMDAsMCBMMTIwLDAgTDExNSwtNSBMMTIwLDAgTDExNSw1IEwxMjAsMCBMMTAwLDAgTDEwMCw0MCBMMTAsNDAgTDEwLDAnO1xuICAgICAgY29uc3QgcGF0aF9tYWNoaW5lID0gJ00tMTAsMCBMLTEwLC01IEwtMTAsNSBNLTEwLDAgTDEwLDAgTDEwLC0nICsgKGggLyAyIC0gNSkgKyAnIEwnICsgKHdfZXRhcGVfbWF4ICsgMjApICsgJywtJyArIChoIC8gMiAtIDUpICsgJyBMJyArICh3X2V0YXBlX21heCArIDIwKSArICcsMCBMJyArICh3X2V0YXBlX21heCArIDQwKSArICcsMCBMJyArICh3X2V0YXBlX21heCArIDM1KSArICcsLTUgTCcgKyAod19ldGFwZV9tYXggKyA0MCkgKyAnLDAgTCcgKyAod19ldGFwZV9tYXggKyAzNSkgKyAnLDUgTCcgKyAod19ldGFwZV9tYXggKyA0MCkgKyAnLDAgTCcgKyAod19ldGFwZV9tYXggKyAyMCkgKyAnLDAgTCcgKyAod19ldGFwZV9tYXggKyAyMCkgKyAnLCcgKyAoaCAvIDIgLSA1KSArICcgTDEwLCcgKyAoaCAvIDIgLSA1KSArICcgTDEwLDAnXG4gICAgICBjb25zdCBtYWNoaW5lID0gbW9uX3N2Zy5wYXRoKHBhdGhfbWFjaGluZSkuZmlsbCgnI2ZmZicpLnN0cm9rZSh7IGNvbG9yOiAnI2YxNTkyOScsIHdpZHRoOiAzLCBsaW5lY2FwOiAncm91bmQnLCBsaW5lam9pbjogJ3JvdW5kJyB9KVxuICAgICAgbWFjaGluZS5kbW92ZSh3IC8gMiAtIHdfZXRhcGVfbWF4IC8gMiAtIDIwICsgaW50ZXJsaWduZSAvIDIsIGggLyAyKSAvLyB3LzI7ICA2MCBlc3QgbGEgbW9pdGnDqSBkZSBsYSB0YWlsbGUgZGUgbGEgbWFjaGluZSBlbiBsYXJnZXVyXG5cbiAgICAgIGNvbnN0IGZvYmpfbWFjaGluZSA9IG1vbl9zdmcuZm9yZWlnbk9iamVjdCh3X2V0YXBlX21heCwgaCkuYXR0cih7IHg6IHcgLyAyIC0gd19ldGFwZV9tYXggLyAyLCB5OiAnMCcgfSlcbiAgICAgIGNvbnN0IG1hY2hpbmVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwnLCAnZGl2JylcbiAgICAgIGthdGV4LnJlbmRlcignXFxcXG1hdGhiZnsnICsgbm9tICsgJ31cXFxcbmV3bGluZSAnICsgZXRhcGUxICsgJ1xcXFxuZXdsaW5lICcgKyBldGFwZTIgKyAnXFxcXG5ld2xpbmUgJyArIGV0YXBlMywgbWFjaGluZURpdiwge1xuICAgICAgICBkaXNwbGF5TW9kZTogdHJ1ZSwgdGhyb3dPbkVycm9yOiB0cnVlLCBlcnJvckNvbG9yOiAnI0NDMDAwMCcsIHN0cmljdDogJ2lnbm9yZScsIHRydXN0OiBmYWxzZVxuICAgICAgfSlcbiAgICAgIGZvYmpfbWFjaGluZS5hZGQobWFjaGluZURpdilcbiAgICAgIGZvYmpfbWFjaGluZS5kbW92ZSgwLCBoIC8gMiAtIGludGVybGlnbmUgLSBtYWNoaW5lRGl2Lm9mZnNldEhlaWdodCAvIDIpXG5cbiAgICAgIC8vIC0tLS0tLS0tLS0tLUFOSU1BVElPTi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgIGFudC50aW1lbGluZSh0aW1lbGluZSlcbiAgICAgIGltLnRpbWVsaW5lKHRpbWVsaW5lKVxuXG4gICAgICBjb25zdCBydW5uZXIxID0gYW50LmFuaW1hdGUoODAwMCwgMCwgJ2Fic29sdXRlJykuZG1vdmUodyAvIDIgLSB3X2FudCAvIDIsIDApXG4gICAgICBjb25zdCBydW5uZXIyID0gaW0uYW5pbWF0ZSg4MDAwLCAwLCAnYWZ0ZXInKS5kbW92ZSh3IC0gd19pbSAvIDIsIDApXG5cbiAgICAgIHJ1bm5lcjEubG9vcCh0cnVlLCBmYWxzZSwgODAwMClcbiAgICAgIHJ1bm5lcjIubG9vcCh0cnVlLCBmYWxzZSwgODAwMClcblxuICAgICAgY2xlYXJJbnRlcnZhbCh3aW5kb3cuU1ZHRXhpc3RbaWRfZHVfZGl2XSkvLyBBcnLDqnRlIGxlIHRpbWVyXG4gICAgfVxuICB9LCAxMDApIC8vIFbDqXJpZmllIHRvdXRlcyBsZXMgMTAwbXNcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFPQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBT0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFDQTtBQU9BO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBT0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFRQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFHQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/modules/macroSvgJs.js\n");

/***/ })

}]);