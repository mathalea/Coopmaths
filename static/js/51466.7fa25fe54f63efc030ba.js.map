{"version":3,"file":"js/51466.7fa25fe54f63efc030ba.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N32-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureAlgebrique } from '../../modules/outils.js'\n\nexport const titre = 'Simplifier une somme de racines carrées'\n\n/**\n * 2N32-4, ex 2N11-1\n * @author Stéphane Guyon\n */\nexport default function SimplifierUneSommeDeRacinesCarrees () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ' Simplifier une somme de racines carrées'\n  this.nbQuestions = 4\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1 //\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      const e1 = randint(2, 8) * choice([-1, 1])\n      const e2 = randint(2, 8) * choice([-1, 1])\n      const e3 = randint(2, 8) * choice([-1, 1])\n      const a1 = randint(2, 11)\n      const a2 = randint(2, 11, [a1])\n      const a3 = randint(2, 11, [a1, a2])\n      const b1 = a1 * a1\n      const b2 = a2 * a2\n      const b3 = a3 * a3\n      const c = randint(2, 11, [4, 8, 9])\n      const d1 = c * b1\n      const d2 = c * b2\n      const d3 = c * b3\n      const f1 = e1 * a1\n      const f2 = e2 * a2\n      const f3 = e3 * a3\n      const f = f1 + f2 + f3\n\n      texte = `Écrire $A=${e1}\\\\sqrt{${d1}} ${ecritureAlgebrique(e2)}\\\\sqrt{${d2}} ${ecritureAlgebrique(e3)}\\\\sqrt{${d3}}$ sous la forme $a\\\\sqrt{${c}}$ où $a$ est un entier:`\n      texteCorr = `On cherche le plus grand carré parfait diviseur de ${d1}, ${d2} et ${d3}. <br>\n                On trouve $${d1}=${b1} \\\\times ${c}~~$, $~~${d2}=${b2} \\\\times ${c}~~$ et $${d3}=${b3} \\\\times ${c}$<br>\n                On a donc  : $\\\\sqrt{${d1}}=\\\\sqrt{${a1}^{2} \\\\times ${c} }=${a1}\\\\times \\\\sqrt{${c}}$,\n                $~~\\\\sqrt{${d2}}=\\\\sqrt{${a2}^{2} \\\\times ${c} }=${a2}\\\\times \\\\sqrt{${c}}~$ et\n                $~\\\\sqrt{${d3}}=\\\\sqrt{${a3}^{2} \\\\times ${c} }=${a3}\\\\times \\\\sqrt{${c}}$<br>\n                On en déduit que : $A=${e1}\\\\times${a1}\\\\times \\\\sqrt{${c}} ${ecritureAlgebrique(e2)}\\\\times ${a2}\\\\times \\\\sqrt{${c}}${ecritureAlgebrique(e3)}\\\\times ${a3}\\\\times \\\\sqrt{${c}}$<br>\n                $A=${f1}\\\\times \\\\sqrt{${c}} ${ecritureAlgebrique(f2)}\\\\times \\\\sqrt{${c}}${ecritureAlgebrique(f3)}\\\\times \\\\sqrt{${c}}$  <br>\n                $A=(${f1}${ecritureAlgebrique(f2)}${ecritureAlgebrique(f3)})\\\\times \\\\sqrt{${c}} = ${f}\\\\sqrt{${c}}$`\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : En donnat la racine carrée unité\\n2 : Sans indication']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","SimplifierUneSommeDeRacinesCarrees","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","i","cpt","e1","randint","choice","e2","e3","a1","a2","a3","b1","b2","b3","c","d1","d2","d3","f1","f2","f3","f","ecritureAlgebrique","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}