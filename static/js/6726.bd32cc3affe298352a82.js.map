{"version":3,"sources":["webpack://mathalea/./src/js/exercices/CM/CM005.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","amcReady","interactifReady","amcType","Ajouter9","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","nouvelleVersion","numeroExercice","boutonAide","modalTexteCourt","listeQuestions","listeCorrections","texte","texteCorr","a","i","cpt","randint","setReponse","interactif","ajouteChampTexte","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","propositions","length","statut","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","id","feedback","type","querySelectorAll","uicheck","classList","add","propositionsQcm","espace","context","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","texteApres","inline","numeric","reponse","valeur","exerciceInteractif","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"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","file":"js/6726.bd32cc3affe298352a82.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, modalTexteCourt } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Ajouter 9'\nexport const amcReady = false\nexport const interactifReady = true\nexport const amcType = 4\n\n/**\n * Un nombre à 2 chiffres (non multiple de 10) + 9\n * @Auteur Rémi Angot\n * Référence CM005\n*/\nexport default function Ajouter9 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.consigne = 'Calculer'\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.boutonAide = modalTexteCourt(\n      numeroExercice,\n      'Ajouter 9 revient à ajouter 10 et à soustraire 1.'\n    )\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (\n      let i = 0, texte, texteCorr, a, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      a = randint(0, 9) * 10 + randint(1, 9)\n      texte = `$${a}+9 = $`\n      texteCorr = `$${a}+9=${a + 9}$`\n      setReponse(this, i, a + 9)\n      if (this.interactif) texte += ajouteChampTexte(this, i)\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}