{"version":3,"file":"js/25983.383ecbd805da96bae64e.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5N110-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, calcul, texFraction } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport Fraction from '../../modules/Fraction.js'\nexport const titre = 'Variation en pourcentages'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n/**\n* Essai sur les fractions\n* 5N110\n*/\nexport default function VariationEnPourcentages () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Ecrire la valeur décimale de la fraction. Ecrire la fraction décimale du nombre.'\n  this.nbQuestions = 4\n  this.spacing = 1\n  this.spacingCorr = 2\n  this.nbColsCorr = 1\n  this.nbCols = 1\n  this.interactif = true\n  this.interactifType = 'mathLive'\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const nombrePremier = [2, 3, 5, 7, 11]\n    let c, d\n    for (let i = 0, a, b, texte, texteCorr, solution, k, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // prix = choice([randint(2, 9), randint(1, 9) * 10, randint(1, 9) * 100, calcul(randint(11, 99) / 10)])\n      // X | X0 | X00 | X,X0\n      // taux = choice([20, 30, 40, 60])\n      switch (i) {\n        case 0:\n          a = randint(2, 9)\n          b = 10\n          solution = calcul(a / b)\n          texte = `Ecrire la valeur décimale égale à : $${texFraction(a, b)}.$`\n          texte += ajouteChampTexteMathLive(this, i, 'inline largeur25') + '<br>'\n          setReponse(this, i, solution)\n          texteCorr = 'à faire'\n          break\n        case 1:\n          a = randint(1, 9)\n          b = 10\n          texte = `Ecrire la fraction décimale de dénominateur 10 égale à 0,${a}.`\n          texte += ajouteChampTexteMathLive(this, i, 'inline largeur25') + '<br>'\n          setReponse(this, i, new Fraction(a, 10), { formatInteractif: 'fraction' })\n          texteCorr = 'à faire'\n          break\n        case 2:\n          c = randint(0, 4)\n          a = nombrePremier[c] // var 1 est le nbre d iris, de croissants ou de garçons\n          d = randint(0, 4, [c])\n          b = nombrePremier[d]\n          k = randint(2, 11)\n          texte = `Ecrire la valeur simplifiée de ${a} ${b} : $${texFraction(k * a, k * b)}.$`\n          texteCorr = 'à faire'\n          texte += ajouteChampTexteMathLive(this, i, 'inline largeur25') + '<br>'\n          //\n          setReponse(this, i, new Fraction(a, k * b), { formatInteractif: 'fraction' })\n          break\n          case 3:\n          c = randint(0, 4)\n          a = nombrePremier[c] // var 1 est le nbre d iris, de croissants ou de garçons\n          d = randint(0, 4, [c])\n          b = nombrePremier[d]\n          k = randint(2, 11)\n          texte = `Ecrire la valeur simplifiée de ${a} ${b} : $${texFraction(k * a, k * b)}.$`\n          texteCorr = 'à faire'\n          texte += ajouteChampTexteMathLive(this, i, 'inline largeur25') + '<br>'\n          //\n          setReponse(this, i, new Fraction(a, k * b), { formatInteractif: 'fraction' })\n          break\n      }// fin du switch\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    } // fin for\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","VariationEnPourcentages","Exercice","this","consigne","nbQuestions","spacing","spacingCorr","nbColsCorr","nbCols","interactif","nouvelleVersion","listeQuestions","listeCorrections","nombrePremier","c","d","a","b","texte","texteCorr","solution","k","i","cpt","randint","calcul","texFraction","ajouteChampTexteMathLive","setReponse","Fraction","formatInteractif","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}