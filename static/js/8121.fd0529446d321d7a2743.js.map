{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5C12-1.js","webpack://mathalea/./src/js/exercices/5e/_Ecrire_une_expression_numerique.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Traduire_une_phrase_par_une_expression_et_calculer","Ecrire_une_expression_numerique","this","version","Exercice","consigne","nbQuestions","nbCols","nbColsCorr","sup2","sup","sup3","nouvelleVersion","type_de_questions_disponibles","listeQuestions","listeCorrections","split","expf","expn","expc","nbval","nb_operations","resultats","decimal","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","val1","val2","i","cpt","parseInt","randint","litteral","Choisir_expression_litterale","Choisir_expression_numerique","indexOf","substring","push","listeQuestionsToContenu","besoinFormulaireTexte","besoin_formulaire2_case_a_cocher","besoin_formulaire3_case_a_cocher","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/8121.fd0529446d321d7a2743.js","sourcesContent":["import Ecrire_une_expression_numerique from './_Ecrire_une_expression_numerique.js'\n\nexport const titre = 'Traduire une phrase par une expression et la calculer'\n\n/**\n * @Auteur Jean-Claude Lhote\n * Référence 5C12-1\n */\nexport default function Traduire_une_phrase_par_une_expression_et_calculer() {\n\tEcrire_une_expression_numerique.call(this)\n\tthis.version = 3\n\tthis.titre = titre;\n}","import Exercice from '../ClasseExercice.js';\nimport Choisir_expression_numerique from './_Choisir_expression_numerique.js'\nimport Choisir_expression_litterale from './_Choisir_expression_litterale.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes,katexPopup2} from '../../modules/outils.js'\n/**\n* Fonction noyau pour 7 fonctions qui utilisent les mêmes variables et la fonction Choisir_expression_numerique\n* @Auteur Jean-Claude Lhote\n* Référence 5C11,5C11-1, 5C11-2, 5C12, 5C12-1, 5L13, 5L13-1, 5L13-2, 5L13-3\n*/\nexport default function Ecrire_une_expression_numerique() {\n\t'use strict'\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.consigne = \"\";\n\tthis.nbQuestions = 4;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.sup2 = false; // si false alors utilisation de nombres entiers, si true alors utilisation de nombres à un chiffre après la virgule.\n\tthis.sup = false;\n\tthis.sup3 = true;\n\tthis.version = 1; // 1 pour ecrire une expression, 2 pour écrire la phrase, 3 pour écrire l'expression et la calculer, 4 pour calculer une expression numérique\n\n\tthis.nouvelleVersion = function () {\n\t\tlet type_de_questions_disponibles = [];\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tif (!this.sup) { // Si aucune liste n'est saisie\n\t\t\ttype_de_questions_disponibles = [1, 2, 3, 4, 5]\n\t\t}\n\t\telse {\n\t\t\tif (typeof (this.sup) == 'number') { // Si c'est un nombre c'est qu'il y a qu'une expression\n\t\t\t\ttype_de_questions_disponibles[0] = this.sup\n\t\t\t} else {\n\t\t\t\ttype_de_questions_disponibles = this.sup.split(\"-\");// Sinon on créé un tableau à partir des valeurs séparées par des -\n\t\t\t}\n\t\t}\n\t\tlet expf, expn, expc, decimal = 1, nbval, nb_operations, resultats\n\t\tlet listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions)\n\t\tif (this.sup2) decimal = 10;\n\t\tfor (let i = 0, texte, texteCorr, val1, val2, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\tnb_operations = parseInt(listeTypeDeQuestions[i])\n\t\t\tval1 = randint(2, 5)\n\t\t\tval2 = randint(6, 9)\n\t\t\tif (this.version > 2 && nb_operations == 1 && !this.litteral) nb_operations++\n\t\t\tif (!this.litteral)\n\t\t\t\tresultats = Choisir_expression_numerique(nb_operations, decimal, this.sup3)\n\t\t\telse\n\t\t\t\tresultats = Choisir_expression_litterale(nb_operations, decimal, val1, val2, this.sup3)\n\t\t\texpf = resultats[0]\n\t\t\texpn = resultats[1]\n\t\t\texpc = resultats[2]\n\t\t\tnbval = resultats[3]\n\t\t\tswitch (this.version) {\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.consigne = `Traduire la phrase par un calcul (il n’est pas demandé d’effectuer ce calcul).`\n\t\t\t\t\ttexte = `${expf}.`\n\t\t\t\t\ttexteCorr = `${expf} s'écrit<br>${expn}.`\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\tif (expn.indexOf('ou') > 0) expn = expn.substring(0, expn.indexOf('ou')) // on supprime la deuxième expression fractionnaire\n\t\t\t\t\tthis.consigne = `Traduire le calcul par une phrase en français.`\n\t\t\t\t\ttexte = `${expn}`\n\t\t\t\t\texpf = `l` + expf.substring(1);\n\t\t\t\t\ttexteCorr = `${expn} est ${expf}.`\n\t\t\t\t\tbreak\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.consigne = `Traduire la phrase par un calcul et effectuer ce calcul en respectant les priorités opératoires.`\n\t\t\t\t\tif (!this.litteral) texte = `${expf}.`\n\t\t\t\t\telse if (nbval == 2) texte = `${expf} puis calculer pour $x=${val1}$ et $y=${val2}$.` //nbval contient le nombre de valeurs en cas de calcul littéral\n\t\t\t\t\telse texte = `${expf} puis calculer pour $x=${val1}$.`\n\t\t\t\t\ttexteCorr = `${expf} s'écrit ${expn}.<br>`\n\t\t\t\t\tif (!this.litteral) texteCorr = `${expc}.`\n\t\t\t\t\telse if (nbval == 2) texteCorr += `Pour $x=${val1}$ et $y=${val2}$ :<br> ${expc}.`\n\t\t\t\t\telse texteCorr += `Pour $x=${val1}$ :<br>${expc}.`\n\t\t\t\t\tbreak\n\t\t\t\tcase 4:\n\t\t\t\t\tif (expn.indexOf('ou') > 0) expn = expn.substring(0, expn.indexOf('ou')) // on supprime la deuxième expression fractionnaire\n\t\t\t\t\tthis.consigne = `Calculer en respectant les priorités opératoires.`\n\t\t\t\t\tif (!this.litteral) texte = `${expn}.`\n\t\t\t\t\telse if (nbval == 2) texte = `Pour $x=${val1}$ et $y=${val2}$, calculer ${expn}.`\n\t\t\t\t\telse texte = `Pour $x=${val1}$, calculer ${expn}.`\n\t\t\t\t\tif (!this.litteral) texteCorr = `${expc}.`\n\t\t\t\t\telse if (nbval == 2) texteCorr = `Pour $x=${val1}$ et $y=${val2}$ :<br>${expc}.`\n\t\t\t\t\telse texteCorr = `Pour $x=${val1}$ :<br>${expc}.`\n\t\t\t\t\tbreak\n\n\t\t\t}\n\t\t\tif (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\tlisteQuestionsToContenu(this);\n\t}\n\tthis.besoinFormulaireTexte = ['Choix des expressions', 'Nombres séparés par des tirets\\n 1 : Expressions de base à une opération\\n2 : Expressions à deux opérations\\n3 : Expressions à 3 opérations\\n4 : Expressions à 4 opérations\\n5 : Expressions complexes'] // Texte, tooltip\n\tthis.besoin_formulaire2_case_a_cocher = [\"Avec décimaux.\", false]\n\tthis.besoin_formulaire3_case_a_cocher = [\"Avec le signe × devant les parenthèses\", true]\n\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}