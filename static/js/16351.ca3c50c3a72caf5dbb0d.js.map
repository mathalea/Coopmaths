{"version":3,"file":"js/16351.ca3c50c3a72caf5dbb0d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G32-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, arrondi, calcul, texNombre, texNombrec, arrondiVirgule } from '../../modules/outils.js'\nimport { texteSurSegment, pointAdistance, polygoneAvecNom, afficheMesureAngle, codageAngleDroit, point, segment, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Calculer la hauteur d’un objet vu sous un angle donné'\n\n/**\n * propose de mesurer la hauteur d'un objet en utilisant l'angle sous lequel on voit l'objet et la distance à l'objet.\n * @author Jean-Claude Lhote\n * Référence 3G32-2\n*/\nexport default function CalculsTrigonometriques2 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.sup = true // Niveau de difficulté\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.nbQuestions = 1\n  this.spacingCorr = 2\n  this.spacing = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const objet = [['arbre', 'un', ''], ['immeuble', 'un', ''], ['éolienne', 'une', 'te'], ['coline', 'une', 'te']]\n    let distance; let hauteur; let alfa; let baita; let beta; let alpha; let teta; let taille; let index; let A; let B; let O; let H; let S; let objets = []; let p\n    if (context.isHtml) {\n      alfa = 'α'\n      baita = 'β'\n    } else {\n      alfa = '\\\\alpha'\n      baita = '\\\\beta'\n    }\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n\n      objets = []\n      distance = randint(5, 300)\n      hauteur = calcul(randint(150, 190) / 100)\n      beta = Math.atan(hauteur / distance)\n      alpha = randint(10, 50)\n      teta = alpha * Math.PI / 180 - beta\n      taille = arrondi(hauteur + distance * Math.tan(teta), 1)\n      if (taille < 20) index = 0\n      else if (taille < 50) index = 1\n      else if (taille < 100) index = 2\n      else index = 3\n      A = point(0, 0, 'A')\n      B = pointAdistance(A, 12, 0, 'B')\n      O = pointAdistance(A, 3, 90, 'O')\n      H = pointAdistance(B, 3, 90, 'H')\n      S = pointAdistance(B, 9, 90, 'S')\n      p = polygoneAvecNom(A, B, H, S, O)\n      objets.push(p[1], p[0], segment(O, B), segment(O, H), codageAngleDroit(O, A, B), codageAngleDroit(A, B, H), codageAngleDroit(O, H, S))\n      objets.push(afficheMesureAngle(B, O, S, 'black', 3, `${alfa}`), afficheMesureAngle(A, B, O, 'black', 2, `${baita}`), afficheMesureAngle(B, O, H, 'black', 2, `${baita}`))\n      objets.push(texteSurSegment(`${texNombre(hauteur)} m`, O, A, 'black', -0.5), texteSurSegment(`${texNombre(distance)} m`, O, H))\n      texte = `Un observateur regarde ${objet[index][1]} ${objet[index][0]} sous un angle de $${alpha}\\\\degree$.<br>`\n      texte += `Cet${objet[index][2]} ${objet[index][0]} est situé à une distance de $${texNombre(distance)}$ m de l'observateur.<br>`\n      texte += `l'oeil de l'observateur est situé à $${texNombre(hauteur)}$ m du sol.<br>`\n      if (this.sup) {\n        texte += `$O$ représente l'oeil de l'observateur, $[BS]$ représente cet${objet[index][2]} ${objet[index][0]}.<br>`\n\n        texte += 'Le schéma ci-dessous n\\'est pas en vraie grandeur.<br>' + mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 10, pixelsParCm: 20, scale: 0.5 }, objets)\n        texte += `<br>Calculer d'abord l'angle $${baita}$.<br>`\n        texte += 'En déduire la mesure de l\\'angle $\\\\widehat{HOS}$.<br>'\n        texte += 'Calculer alors la longueur $HS$.<br>'\n      }\n      texte += `Calculer la hauteur de cet${objet[index][2]} ${objet[index][0]} arrondie au mètre près.<br>`\n\n      texteCorr = mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 10, pixelsParCm: 20, scale: 0.5 }, objets)\n      texteCorr += `<br>Dans le triangle $OHB$ rectangle en $H$, $\\\\tan(${baita})=\\\\dfrac{HB}{OH}$.<br>D'où $${baita}=\\\\arctan(\\\\dfrac{${texNombre(hauteur)}}{${texNombre(distance)}})\\\\approx ${arrondiVirgule(beta)}\\\\degree$.<br>`\n      texteCorr += `$\\\\widehat{HOS}=${alfa}-${baita}\\\\approx ${arrondiVirgule(alpha - beta)}$.<br>`\n      texteCorr += `$HS=OH\\\\times \\\\tan(\\\\widehat{HOS})\\\\approx ${distance}\\\\times \\\\tan(${arrondiVirgule(alpha - beta)})\\\\approx ${texNombrec(taille - hauteur)}$ m.<br>`\n      texteCorr += `$BS=BH+HS=${texNombre(hauteur)}+${texNombrec(taille - hauteur)}=${texNombre(taille)}$ m.<br>`\n      texteCorr += `Cet${objet[index][2]} ${objet[index][0]} mesure $${texNombre(Math.round(taille))}$ m de hauteur.`\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Afficher un schéma et des questions intermédiaires']\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","CalculsTrigonometriques2","Exercice","this","consigne","nbCols","nbColsCorr","sup","tailleDiaporama","video","nbQuestions","spacingCorr","spacing","nouvelleVersion","listeQuestions","listeCorrections","objet","distance","hauteur","alfa","baita","beta","alpha","teta","taille","index","A","B","O","H","S","p","objets","context","texte","texteCorr","i","cpt","randint","calcul","Math","atan","PI","arrondi","tan","point","pointAdistance","polygoneAvecNom","push","segment","codageAngleDroit","afficheMesureAngle","texteSurSegment","texNombre","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","arrondiVirgule","texNombrec","round","indexOf","listeQuestionsToContenu","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}