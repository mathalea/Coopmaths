{"version":3,"file":"js/44242.e6a7ac6b7428deeb3540.js","mappings":";4GAMe,SAASA,IAItBC,KAAKC,MAAQ,GACbD,KAAKE,YAAa,EAclBF,KAAKG,SAAW,GAChBH,KAAKI,mBAAqB,GAC1BJ,KAAKK,aAAe,GACpBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKQ,QAAU,GACfR,KAAKS,kBAAoB,GACzBT,KAAKU,eAAiB,GACtBV,KAAKW,sBAAwB,GAK7BX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EAKnBb,KAAKc,mBAAoB,EACzBd,KAAKe,cAAgB,GACrBf,KAAKgB,oBAAqB,EAC1BhB,KAAKiB,uBAAwB,EAC7BjB,KAAKkB,OAAS,EACdlB,KAAKmB,WAAa,EAClBnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAM7BvB,KAAKwB,QAAS,EACdxB,KAAKyB,gBAAkB,EAKvBzB,KAAK0B,YAAc,GACnB1B,KAAK2B,mBAAqB,EAC1B3B,KAAK4B,+BAAgC,EACrC5B,KAAK6B,qBAAsB,EAC3B7B,KAAK8B,oBAAqB,EAC1B9B,KAAK+B,MAAQ,GAEb/B,KAAKgC,YAAa,EAClBhC,KAAKiC,uBAAwB,EAE7BjC,KAAKkC,2BAA4B,EACjClC,KAAKmC,uBAAwB,EAC7BnC,KAAKoC,6BAA8B,EAEnCpC,KAAKqC,4BAA6B,EAClCrC,KAAKsC,wBAAyB,EAC9BtC,KAAKuC,8BAA+B,EAEpCvC,KAAKwC,4BAA6B,EAClCxC,KAAKyC,wBAAyB,EAC9BzC,KAAK0C,8BAA+B,EAEpC1C,KAAK2C,4BAA6B,EAClC3C,KAAK4C,wBAAyB,EAC9B5C,KAAK6C,8BAA+B,EAMpC7C,KAAK8C,cAAe,EASpB9C,KAAK+C,eAAiB,GAMtB/C,KAAKgD,gBAAkB,SAAUC,KAQjCjD,KAAKkD,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAASnD,KAAK+C,eAAiB,IACnC,IAAIM,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIxD,KAAK+C,eAAeU,QAAQJ,IAAmB,KAGjDrD,KAAK+C,eAAeW,KAAKL,IAClB,gNC5HN,MAAMpD,EAAQ,iBACR0D,EAAoB,YACpBC,GAAkB,EAClBC,EAAiB,WAOf,SAASC,IACtB/D,EAAAA,QAAAA,KAAcC,MACdA,KAAK0B,YAAc,EACnB1B,KAAKyB,gBAAkB,EACvBzB,KAAK+D,aAAe,SACpB/D,KAAKgE,iBAAmB,mBACxBhE,KAAKgD,gBAAkB,WACrB,IAAIiB,EAAIC,EAAIC,EAAIC,EAAIC,EACpB,MAAMC,GAAcC,EAAAA,EAAAA,KAAO,CAAC,QAAS,SAC/BC,GAASC,EAAAA,EAAAA,OACTC,EAAuB,CAAC,gBAAiB,oBAAqB,qBAAsB,sBACpFC,EAAuB,CAAC,yBAA0B,yBAA0B,qBAClF,OAAQL,GACN,IAAK,QACHL,GAAKW,EAAAA,EAAAA,KAAQ,EAAG,IAChBV,EAAqB,GAAhBU,EAAAA,EAAAA,KAAQ,EAAG,GAChBT,EAAKF,GAAKW,EAAAA,EAAAA,KAAQ,EAAG,GACrBR,EAAKF,EAA+B,GAA1BU,EAAAA,EAAAA,KAAQ,EAAIT,EAAKF,EAAI,GAC/BI,EAAU,GAAEG,EAAOK,WAAUN,EAAAA,EAAAA,KAAOG,gBAAmCF,EAAOM,wDAC9E,MACF,IAAK,OACHb,GAAKW,EAAAA,EAAAA,KAAQ,GAAI,IACjBV,EAAqB,GAAhBU,EAAAA,EAAAA,KAAQ,EAAG,GAChBT,EAAKF,GAAKW,EAAAA,EAAAA,KAAQ,EAAG,GACrBR,EAAKF,EAA+B,GAA1BU,EAAAA,EAAAA,KAAQ,EAAIT,EAAKF,EAAI,GAC/BI,EAAU,GAAEG,EAAOK,WAAUN,EAAAA,EAAAA,KAAOI,eAAkCH,EAAOM,wDAGjF,MAAMC,EAAS,GAAU,GAALd,EAAUC,EAAK,EAC7Bc,EAAQ,GAAU,EAALd,EACbe,EAAS,GAAU,GAALd,EAAUC,EAAK,EAC7Bc,EAAQ,GAAU,EAALd,EAEbe,EAAU,GACVC,GAAIC,EAAAA,EAAAA,KAAM,EAAG,GACbC,GAAIC,EAAAA,EAAAA,KAAOH,EAAG,GACpBD,EAAQzB,KAAK4B,GACb,MAAME,GAAIC,EAAAA,EAAAA,KAAQ,IAAK,EAAG,IAAK,GAC/B,IAAK,IAAItC,EAAI,EAAGA,EAAI,EAAGA,IACrBgC,EAAQzB,MAAKgC,EAAAA,EAAAA,KAASF,EAAGJ,EAAG,GAAKjC,IAEnC,MAAMwC,GAAIF,EAAAA,EAAAA,KAAQ,IAAK,EAAG,IAAK,GAC/B,IAAK,IAAItC,EAAI,EAAGA,EAAI,EAAGA,IACrBgC,EAAQzB,MAAKgC,EAAAA,EAAAA,KAASC,EAAGP,EAAG,GAAS,GAAJjC,IAASuC,EAAAA,EAAAA,KAASC,EAAGP,EAAG,GAAS,GAAJjC,IAEhE,MAAMyC,GAAkBF,EAAAA,EAAAA,MAASD,EAAAA,EAAAA,KAAQL,GAAGC,EAAAA,EAAAA,KAAM,IAAK,IAAKD,EAAGJ,GACzDa,GAAkBH,EAAAA,EAAAA,MAASD,EAAAA,EAAAA,KAAQL,GAAGC,EAAAA,EAAAA,KAAM,EAAG,IAAKD,EAAGL,GACvDe,GAAkBJ,EAAAA,EAAAA,MAASD,EAAAA,EAAAA,KAAQL,GAAGC,EAAAA,EAAAA,KAAM,IAAK,IAAKD,EAAGF,GACzDa,GAAkBL,EAAAA,EAAAA,MAASD,EAAAA,EAAAA,KAAQL,GAAGC,EAAAA,EAAAA,KAAM,EAAG,IAAKD,EAAGH,GAE7DW,EAAgBI,MAAQ,MACxBJ,EAAgBK,UAAY,EAC5BJ,EAAgBG,MAAQ,QACxBH,EAAgBI,UAAY,EAC5BH,EAAgBE,MAAQ,MACxBF,EAAgBG,UAAY,EAC5BF,EAAgBC,MAAQ,QACxBD,EAAgBE,UAAY,EAC5BjG,KAAKkG,SAAW7B,GAAU8B,EAAAA,GAAAA,OAAiB,kBAAoB,4BAC/DC,EAAAA,EAAAA,KAAW,CAAEC,MAAO,EAAGC,MAAO,EAAGC,KAAM,EAAGC,KAAM,EAAGC,MAAO,EAAGC,KAAM1G,KAAKyB,gBAAiBkF,MAAO,gBAAkBxB,EAASS,EAAiBC,GAAiBe,EAAAA,EAAAA,KAAiB,iBAAkB,GAAI,OACvMT,EAAAA,GAAAA,OAAiB,YAAc,KAC5BC,EAAAA,EAAAA,KAAW,CAAEC,MAAO,EAAGC,MAAO,EAAGC,KAAM,EAAGC,KAAM,EAAGC,MAAO,EAAGC,KAAM1G,KAAKyB,gBAAiBkF,MAAO,gBAAkBxB,EAASW,EAAiBC,GAAiBa,EAAAA,EAAAA,KAAiB,eAAgB,GAAI,OACjMT,EAAAA,GAAAA,OAAiB,qBAAuB,sBACnC,iDACNnG,KAAK6G,QAAW,GAAE1C,EAAKF,MAAOG,EAAKF,IACnClE,KAAK8G,WAAc,wFAAsFC,EAAAA,EAAAA,MAAQ3C,EAAKF,GAAM,uBAAuBE,EAAKF,iBACxJlE,KAAK8G,YAAc,mFAEjB9G,KAAK8G,YADH3C,IAAOF,EACW,yDAAwDG,EAAKF,aAE7D,mEAAkEE,EAAKF","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/c3/canc3D02.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { cercle, mathalea2d, point, rotation, segment, texteParPosition } from '../../../modules/2d.js'\nimport { context } from '../../../modules/context.js'\nimport { calcul, choice, personne, randint } from '../../../modules/outils.js'\nimport Exercice from '../../Exercice.js'\nexport const titre = 'Lire une durée'\nexport const dateDePublication = '4/11/2021'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/*!\n * @author Jean-Claude Lhote\n * Créé le 4/11/2021\n * Référence canc3D01\n */\nexport default function LireUneDuree () {\n  Exercice.call(this)\n  this.nbQuestions = 1\n  this.tailleDiaporama = 1\n  this.typeExercice = 'simple'\n  this.formatChampTexte = 'largeur15 inline'\n  this.nouvelleVersion = function () {\n    let h1, m1, h2, m2, enonce\n    const matinOuSoir = choice(['matin', 'soir'])\n    const quidam = personne()\n    const OccupationsMatinales = ['a lu un livre', 'a fait un jogging', 'a préparé le repas', 'a fait ses devoirs']\n    const occupationsNocturnes = ['a regardé une émission', 'a écouté de la musique', 'a joué aux cartes']\n    switch (matinOuSoir) {\n      case 'matin':\n        h1 = randint(8, 10)\n        m1 = randint(1, 5) * 5\n        h2 = h1 + randint(0, 1)\n        m2 = m1 + randint(2 - h2 + h1, 6) * 5\n        enonce = `${quidam.prenom} ${choice(OccupationsMatinales)} ce matin. ${quidam.pronom} a noté l'heure de début et l'heure de fin.<br>`\n        break\n      case 'soir':\n        h1 = randint(20, 22)\n        m1 = randint(1, 5) * 5\n        h2 = h1 + randint(0, 1)\n        m2 = m1 + randint(2 - h2 + h1, 6) * 5\n        enonce = `${quidam.prenom} ${choice(occupationsNocturnes)} ce soir. ${quidam.pronom} a noté l'heure de début et l'heure de fin.<br>`\n        break\n    }\n    const alpha1 = 90 - h1 * 30 - m1 / 2\n    const beta1 = 90 - m1 * 6\n    const alpha2 = 90 - h2 * 30 - m2 / 2\n    const beta2 = 90 - m2 * 6\n\n    const horloge = []\n    const O = point(0, 0)\n    const C = cercle(O, 2)\n    horloge.push(C)\n    const s = segment(1.5, 0, 1.9, 0)\n    for (let i = 0; i < 4; i++) {\n      horloge.push(rotation(s, O, 90 * i))\n    }\n    const t = segment(1.7, 0, 1.9, 0)\n    for (let i = 0; i < 4; i++) {\n      horloge.push(rotation(t, O, 30 + i * 90), rotation(t, O, 60 + i * 90))\n    }\n    const grandeAiguille1 = rotation(segment(O, point(1.5, 0)), O, beta1)\n    const petiteAiguille1 = rotation(segment(O, point(1, 0)), O, alpha1)\n    const grandeAiguille2 = rotation(segment(O, point(1.5, 0)), O, beta2)\n    const petiteAiguille2 = rotation(segment(O, point(1, 0)), O, alpha2)\n\n    grandeAiguille1.color = 'red'\n    grandeAiguille1.epaisseur = 2\n    petiteAiguille1.color = 'green'\n    petiteAiguille1.epaisseur = 3\n    grandeAiguille2.color = 'red'\n    grandeAiguille2.epaisseur = 2\n    petiteAiguille2.color = 'green'\n    petiteAiguille2.epaisseur = 3\n    this.question = enonce + (context.isHtml ? '<table><tr><td>' : '\\\\begin{multicols}{2}\\n') +\n    mathalea2d({ xmin: -3, ymin: -3, xmax: 3, ymax: 3, scale: 1, zoom: this.tailleDiaporama, style: 'margin: auto' }, horloge, grandeAiguille1, petiteAiguille1, texteParPosition('Heure de début', 0, -2.5)) +\n(context.isHtml ? '</td><td>' : '') +\n    mathalea2d({ xmin: -3, ymin: -3, xmax: 3, ymax: 3, scale: 1, zoom: this.tailleDiaporama, style: 'margin: auto' }, horloge, grandeAiguille2, petiteAiguille2, texteParPosition('Heure de fin', 0, -2.5)) +\n    (context.isHtml ? '</td></tr></table>' : '\\\\end{multicols}\\n') +\n          'Combien de temps cela a-t-il duré ? (...h....)'\n    this.reponse = `${h2 - h1}h ${m2 - m1}`\n    this.correction = `On regarde de combien de graduations la grande aiguille a avancé : elle a avancé de ${calcul((m2 - m1) / 5)} graduations soit ${m2 - m1} minutes.<br>`\n    this.correction += 'Ensuite on regarde si la petite aiguille a avancé d\\'au moins une graduation.<br>'\n    if (h2 === h1) {\n      this.correction += `Ce n'est pas le cas, donc il s'est écoulé seulement 0h${m2 - m1} minutes.`\n    } else {\n      this.correction += `La petite aiguille a avancé d'une heure, donc il s'est écoulé 1h${m2 - m1}.`\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","dateDePublication","interactifReady","interactifType","LireUneDuree","typeExercice","formatChampTexte","h1","m1","h2","m2","enonce","matinOuSoir","choice","quidam","personne","OccupationsMatinales","occupationsNocturnes","randint","prenom","pronom","alpha1","beta1","alpha2","beta2","horloge","O","point","C","cercle","s","segment","rotation","t","grandeAiguille1","petiteAiguille1","grandeAiguille2","petiteAiguille2","color","epaisseur","question","context","mathalea2d","xmin","ymin","xmax","ymax","scale","zoom","style","texteParPosition","reponse","correction","calcul"],"sourceRoot":""}