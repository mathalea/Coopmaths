{"version":3,"file":"js/14148.47a78ac23c4645ab2145.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4G20.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, texNombrec, creerNomDePolygone, texNombre, arrondi } from '../../modules/outils.js'\nimport { point, polygone, nommePolygone, rotation, similitude, codageAngleDroit, afficheLongueurSegment, longueur, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport Grandeur from '../../modules/Grandeur.js'\nexport const titre = 'Calculer une longueur avec le théorème de Pythagore'\nexport const amcType = 'AMCOpenNum' // Question numérique\nexport const amcReady = true // Il reste à gérer les options numériques\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Exercices sur le théorème de Pythagore avec MathALEA2D\n * @author Rémi Angot\n * 4G20\n */\nexport default function Pythagore2D () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactif = true\n  this.interactifType = interactifType\n  this.nbQuestions = 3\n  this.nbCols = 3\n  this.nbColsCorr = 1\n  this.typeExercice = 'Calculer'\n  this.video = 'M9sceJ8gzNc'\n\n  this.nouvelleVersion = function () {\n    if (this.sup) {\n      this.sup = parseInt(this.sup)\n    }\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions = []\n    const listeDeNomsDePolygones = []\n    let reponse\n    if (this.sup === 1) {\n      this.consigne = \"Dans chaque cas, donner l'égalité de Pythagore.\"\n    } else if (this.sup === 2) {\n      this.consigne = \"Dans chaque cas, compléter l'égalité en utilisant le théorème de Pythagore.\"\n    } else {\n      this.consigne = 'Dans chaque cas, calculer la longueur manquante (si nécessaire, l\\'arrondir au millimètre près).'\n    }\n    if (this.sup === 2 || this.typeExercice === 'Calculer') {\n      listeTypeDeQuestions = combinaisonListes(['AB', 'BC', 'AC'], this.nbQuestions)\n    }\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = ''\n      texteCorr = ''\n      const A1 = point(0, 0)\n      const B1 = point(calcul(randint(22, 50) / 10), 0)\n      const C1 = similitude(B1, A1, 90, calcul(randint(22, 50) / 10) / longueur(A1, B1))\n      const p1 = polygone(A1, B1, C1)\n      p1.isVisible = false\n      const p2 = rotation(p1, A1, randint(0, 360))\n      const A = p2.listePoints[0]\n      const B = p2.listePoints[1]\n      const C = p2.listePoints[2]\n      const codage = codageAngleDroit(B, A, C)\n      const xmin = Math.min(A.x, B.x, C.x) - 1\n      const ymin = Math.min(A.y, B.y, C.y) - 1\n      const xmax = Math.max(A.x, B.x, C.x) + 1\n      const ymax = Math.max(A.y, B.y, C.y) + 1\n      const nomDuPolygone = creerNomDePolygone(3, listeDeNomsDePolygones)\n      listeDeNomsDePolygones.push(nomDuPolygone)\n      const nomme = nommePolygone(p2, nomDuPolygone)\n      const affAB = afficheLongueurSegment(B, A)\n      const affAC = afficheLongueurSegment(A, C)\n      const affBC = afficheLongueurSegment(C, B)\n      const longueurAB = longueur(A, B, 1)\n      const longueurAC = longueur(A, C, 1)\n      const longueurBC = longueur(B, C, 1)\n      const mesObjetsATracer = [codage, p2, nomme]\n\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'AB') {\n        mesObjetsATracer.push(affAC, affBC)\n      }\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'BC') {\n        mesObjetsATracer.push(affAC, affAB)\n      }\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'AC') {\n        mesObjetsATracer.push(affAB, affBC)\n      }\n\n      if (!context.isHtml) { texte = '~\\\\\\\\' }\n      texte += mathalea2d({ xmin: xmin, xmax: xmax, ymin: ymin, ymax: ymax, scale: 0.6, style: 'display: block' }, mesObjetsATracer)\n      if (this.sup === 2) {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          if (this.interactif && context.isHtml) texte += `<br>$${A.nom + B.nom}^2=\\\\ldots$`\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          if (this.interactif && context.isHtml) texte += `<br>$${B.nom + C.nom}^2=\\\\ldots$`\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          if (this.interactif && context.isHtml) texte += `<br>$${A.nom + C.nom}^2=\\\\ldots$`\n        }\n      }\n      if (!context.isHtml && !context.isAmc && i !== this.nbQuestions - 1) { texte += '\\\\columnbreak' } // pour la sortie LaTeX sauf la dernière question\n\n      texteCorr = `Le triangle $${nomDuPolygone}$ est rectangle en $${A.nom}$ donc d'après le théorème de Pythagore, on a : `\n      texteCorr += `$${B.nom + C.nom}^2=${A.nom + B.nom}^2+${A.nom + C.nom}^2$`\n      if (this.sup === 2) {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          texteCorr += ` d'où $${A.nom + B.nom}^2=${B.nom + C.nom}^2-${A.nom + C.nom}^2$.`\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          texteCorr += '.'\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          texteCorr += ` d'où $${A.nom + C.nom}^2=${B.nom + C.nom}^2-${A.nom + B.nom}^2$.`\n        }\n      }\n      if (this.typeExercice === 'Calculer') {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          let AB\n          texteCorr += ` donc $${A.nom + B.nom}^2=${B.nom + C.nom}^2-${A.nom + C.nom}^2$`\n          texteCorr += `<br> $${A.nom + B.nom}^2=${texNombre(longueurBC)}^2-${texNombre(longueurAC)}^2=${texNombrec(longueurBC ** 2 - longueurAC ** 2)}$`\n          texteCorr += `<br> $${A.nom + B.nom}=\\\\sqrt{${texNombrec(longueurBC ** 2 - longueurAC ** 2)}}$`\n          if (calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1) === calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 5)) {\n            AB = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1))\n            reponse = arrondi(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1)\n            texteCorr += `<br> $${A.nom + B.nom}=${AB}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${A.nom + B.nom}=$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          } else {\n            AB = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1))\n            reponse = arrondi(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1)\n            texteCorr += `<br> $${A.nom + B.nom}\\\\approx${AB}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${A.nom + B.nom}\\\\approx$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          }\n          context.isAmc ? setReponse(this, i, reponse) : setReponse(this, i, new Grandeur(reponse, 'cm'), { formatInteractif: 'longueur' })\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          const BC = texNombre(calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1))\n          reponse = arrondi(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1)\n          texteCorr += `<br> $${B.nom + C.nom}^2=${texNombre(longueurAB)}^2+${texNombre(longueurAC)}^2=${texNombrec(longueurAB ** 2 + longueurAC ** 2)}$`\n          texteCorr += `<br> $${B.nom + C.nom}=\\\\sqrt{${texNombrec(longueurAB ** 2 + longueurAC ** 2)}}$`\n          if (calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1) === calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 5)) {\n            texteCorr += `<br> $${B.nom + C.nom}=${BC}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${B.nom + C.nom}=$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          } else {\n            texteCorr += `<br> $${B.nom + C.nom}\\\\approx${BC}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${B.nom + C.nom}\\\\approx$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          }\n          context.isAmc ? setReponse(this, i, reponse) : setReponse(this, i, new Grandeur(reponse, 'cm'), { formatInteractif: 'longueur' })\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          const AC = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1))\n          reponse = arrondi(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1)\n          texteCorr += ` donc $${A.nom + C.nom}^2=${B.nom + C.nom}^2-${A.nom + B.nom}^2$`\n          texteCorr += `<br> $${A.nom + C.nom}^2=${texNombre(longueurBC)}^2-${texNombre(longueurAB)}^2=${texNombrec(longueurBC ** 2 - longueurAB ** 2)}$`\n          texteCorr += `<br> $${A.nom + C.nom}=\\\\sqrt{${texNombrec(longueurBC ** 2 - longueurAB ** 2)}}$`\n          if (calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1) === calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 5)) {\n            texteCorr += `<br> $${A.nom + C.nom}=${AC}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${A.nom + C.nom}=$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          } else {\n            texteCorr += `<br> $${A.nom + C.nom}\\\\approx${AC}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${A.nom + C.nom}\\\\approx$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          }\n          context.isAmc ? setReponse(this, i, reponse) : setReponse(this, i, new Grandeur(reponse, 'cm'), { formatInteractif: 'longueur' })\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3,\"1 : Donner l'égalité de Pythagore\\n2 : Compléter l'égalité de Pythagore\\n3 : Calculer une longueur manquante\"];\n}\n// 4G20-1\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcType","amcReady","interactifReady","interactifType","Pythagore2D","Exercice","this","interactif","nbQuestions","nbCols","nbColsCorr","typeExercice","video","nouvelleVersion","sup","parseInt","listeQuestions","listeCorrections","listeTypeDeQuestions","listeDeNomsDePolygones","reponse","consigne","combinaisonListes","texte","texteCorr","i","cpt","A1","point","B1","calcul","randint","C1","similitude","longueur","p1","polygone","isVisible","p2","rotation","A","listePoints","B","C","codage","codageAngleDroit","xmin","Math","min","x","ymin","y","xmax","max","ymax","nomDuPolygone","creerNomDePolygone","push","nomme","nommePolygone","affAB","afficheLongueurSegment","affAC","affBC","longueurAB","longueurAC","longueurBC","mesObjetsATracer","context","mathalea2d","scale","style","nom","AB","texNombre","texNombrec","sqrt","arrondi","ajouteChampTexteMathLive","setReponse","Grandeur","formatInteractif","BC","AC","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}