{"version":3,"sources":["webpack://mathalea/./src/js/exercices/2e/2G50-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","lecturegraphiquedeaetb","numeroExercice","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","spacing","spacingCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","a","b","r","f","c","d","s1","s2","t","l","texte","texteCorr","i","cpt","randint","repere2","x","courbe2","repere","color","mathalea2d","xmin","ymin","xmax","ymax","reduireAxPlusB","segment","epaisseur","A","point","tracePoint","labelPoint","setReponse","abs","pgcd","texFractionReduite","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/94817.ba4fd6dadc5e73f240a6.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, abs, reduireAxPlusB, texFractionReduite, pgcd } from '../../modules/outils.js'\nimport { repere2, courbe2, segment, tracePoint, labelPoint, point, mathalea2d } from '../../modules/2d.js'\nimport { setReponse, ajouteChampTexteMathLive } from '../../modules/gestionInteractif.js'\nexport const titre = \"Lecture graphique des coefficients d'une équation réduite \"\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n/**\n totoche\n\n*/\nexport default function lecturegraphiquedeaetb (numeroExercice) {\n  Exercice.call(this)\n  this.titre = titre\n  // this.interactifReady = interactifReady\n  // this.interactifType = interactifType\n  this.consigne = 'Equation réduite de droite et représentation graphique '\n  this.nbQuestions = 3// On complète le nb de questions\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.tailleDiaporama = 100\n  this.video = ''\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.spacingCorr = 3\n  this.sup = 1\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    // let typesDeQuestionsDisponibles = []\n    // typesDeQuestionsDisponibles = []// On complète selon le nb de cas dans l'exo (switch)\n\n    // const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, a, b, r, f, c, d, s1, s2, t, l, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;) { // on rajoute les variables dont on a besoin\n      if (this.sup === 1) {\n        a = randint(-4, 4) // coefficient directeur\n        b = randint(-5, 5) // ordonnée à l'origine\n        if (a === 0 && b === 0) {\n          a = 1\n        }// On évite la situation de double nullité\n        r = repere2()// On définit le repère\n        f = x => a * x + b// On définit la fonction affine\n        c = courbe2(f, { repere: r, color: 'red' })// On définit l'objet qui tracera la courbe dans le repère\n        texte = 'A partir de la représentation graphique de la droite ci-dessous, donner par lecture graphique son équation réduite'\n        texte += mathalea2d({\n          xmin: -8,\n          ymin: -8,\n          xmax: 8,\n          ymax: 8\n        }, r, f, c)// On trace le graphique\n        if (a === 0) {\n          texteCorr = 'On observe que la droite est horizontale. '\n          texteCorr += `<br>La droite est l'ensemble des points ayant comme ordonnée : $${b}$ `\n          texteCorr += `<br>L'équation réduite de cette droite est donc : $y=${b}$`\n        } else {\n          texteCorr = 'On sait que l\\'équation réduite d\\'une droite non verticale est de la forme : $y= ax+b$ avec $a$ et $b$ deux réels non tous deux nuls.<br>'\n          texteCorr += 'Le premier coefficient à lire graphiquement est $b$, l\\'ordonnée à l\\'origine de la droite.<br>'\n          texteCorr += 'C\\'est l\\'ordonnée du point d\\'intersection de la droite avec l\\'axe des ordonnées.<br>'\n          texteCorr += `On lit ici que le point $(0;${b}) \\\\in (d)$.<br>`\n          texteCorr += `On peut alors conclure que l'ordonnée à l'origine est : $b=${b}$. <br>`\n          texteCorr += 'On peut lire ensuite le coefficient directeur $a$ de la droite $(d)$.<br>'\n          texteCorr += 'On sait que $a=\\\\dfrac{\\\\text{Dénivelé vertical}}{\\\\text{Déplacement horizontal}}$'\n          texteCorr += `<br>En lisant le déplacement vertical correspondant à un déplacement horizontal d'une unité, on lit : <br>$a=\\\\dfrac{\\\\text{Dénivelé vertical}}{1}=${a}$`\n          texteCorr += '<br>On peut en déduire que l\\'équation réduite de la droite $(d)$ est :'\n\n          texteCorr += `$y=${reduireAxPlusB(a, b)}$`\n        }\n        if (b + a < -5 || b + a > 5) {\n          s1 = segment(-2, b - 2 * a, -1, b - 2 * a, 'red')\n          s2 = segment(-1, b - 2 * a, -1, b - a, 'red')\n\n          s1.epaisseur = 4\n          s2.epaisseur = 4\n          const A = point(0, b, 'A')\n          t = tracePoint(A, 'red') // Variable qui trace les points avec une croix\n          l = labelPoint(A)// Variable qui trace les nom s A et B\n          l.color = 'red'\n          if (a !== 0) {\n            texteCorr += mathalea2d({\n              xmin: -8,\n              ymin: -8,\n              xmax: 8,\n              ymax: 8\n\n            }, r, f, s1, s2, t, l, c)\n          }\n        } else {\n          s1 = segment(0, b, 1, b, 'red')\n          s2 = segment(1, b, 1, b + a, 'red')\n\n          s1.epaisseur = 4\n          s2.epaisseur = 4\n          const A = point(0, b, 'A')\n          t = tracePoint(A, 'red') // Variable qui trace les points avec une croix\n          l = labelPoint(A)// Variable qui trace les nom s A et B\n          l.color = 'red'\n          if (a !== 0) {\n            texteCorr += mathalea2d({\n              xmin: -8,\n              ymin: -8,\n              xmax: 8,\n              ymax: 8\n\n            }, r, f, s1, s2, t, l, c)\n          }\n        }\n        // On trace le graphique\n        setReponse(this, i, 'y=' + reduireAxPlusB(a, b))\n      }\n      if (this.sup === 2) { // cas du coeff directeur fractionnaire\n        a = randint(-5, 5) // numérateut coefficient directeur\n        b = randint(-5, 5) // ordonnée à l'origine\n        d = randint(2, 5) // dénominateur coefficient directeur\n        if (a === 0 && b === 0) {\n          a = 1\n          d = 3\n        }// On évite la situation de double nullité\n        r = repere2()// On définit le repère\n        f = x => (a / d) * x + b // On définit la fonction affine\n        c = courbe2(f, { repere: r, color: 'red' })// On définit l'objet qui tracera la courbe dans le repère\n\n        texte = 'A partir de la représentation graphique de la droite ci-dessous, donner par lecture graphique son équation réduite'\n        texte += mathalea2d({\n          xmin: -6,\n          ymin: -6,\n          xmax: 6,\n          ymax: 6\n        }, r, f, c)// On trace le graphique\n        if (a === 0) {\n          texteCorr = 'On observe que la droite est horizontale. '\n          texteCorr += `<br>La droite est l'ensemble des points ayant comme ordonnée : $${b}$ `\n          texteCorr += `<br>L'équation réduite de cette droite est donc : $y=${b}$`\n        } else {\n          texteCorr = 'On sait que l\\'équation réduite d\\'une droite non verticale est de la forme : $y= ax+b$ avec $a$ et $b$ deux réels non tous deux nuls.<br>'\n          texteCorr += 'Le premier coefficient à lire graphiquement est $b$, l\\'ordonnée à l\\'origine de la droite.<br>'\n          texteCorr += 'C\\'est l\\'ordonnée du point d\\'intersection de la droite avec l\\'axe des ordonnées.<br>'\n          texteCorr += `On lit ici que : $A(0;${b}) \\\\in (d)$.<br>`\n          texteCorr += `On peut alors conclure que l'ordonnée à l'origine est : $b=${b}$. <br>`\n          texteCorr += 'On peut lire ensuite le coefficient directeur $a$ de la droite $(d)$.<br>'\n          texteCorr += 'On sait que $a=\\\\dfrac{\\\\text{Dénivelé vertical}}{\\\\text{Déplacement horizontal}}$'\n          texteCorr += '<br>On cherche un déplacement horizontal correspondant à un déplacement vertical entier.'\n          texteCorr += `<br>On lit que pour un déplacement vers la droite de ${d} unités, il faut `\n\n          if (a > 0) { texteCorr += 'monter de ' }\n          if (a < 0) { texteCorr += 'descendre de ' }\n          texteCorr += `${abs(a)} unités.`\n          texteCorr += `<br>Il vient : $a=\\\\dfrac{${a}}{${d}}`\n          if (pgcd(a, d) !== 1) {\n            texteCorr += `=${texFractionReduite(a, d)}`\n          }\n          texteCorr += '$'\n\n          texteCorr += '<br>On peut en déduire que l\\'équation réduite de la droite $(d)$ est : $y='\n\n          if (a === d) { texteCorr += 'x' }\n          if (a !== d) { texteCorr += `${texFractionReduite(a, d)}x` }\n\n          if (b !== 0) { texteCorr += `+ ${b}` }\n          texteCorr += '$.'\n          if (a > 0) {\n            s1 = segment(0, b - a, -d, b - a, 'blue')\n            s1.epaisseur = 4\n            s2 = segment(0, b - a, 0, b, 'blue')\n          }\n          if (a < 0) {\n            s1 = segment(0, b, d, b, 'blue')\n            s1.epaisseur = 4\n            s2 = segment(d, b - abs(a), d, b, 'blue')\n          }\n          s2.epaisseur = 4\n          const A = point(0, b, 'A')\n          t = tracePoint(A, 'red') // Variable qui trace les points avec une croix\n          l = labelPoint(A)// Variable qui trace les nom s A et B\n          l.color = 'red'\n          if (a !== 0) {\n            texteCorr += mathalea2d({\n              xmin: -6,\n              ymin: -6,\n              xmax: 6,\n              ymax: 6\n\n            }, r, f, s1, s2, t, l, c)\n          }// On trace le graphique\n        setReponse(this, i, 'y=' + reduireAxPlusB(a / d, b))\n        }\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Types de question :', 2, '1 : Valeurs entières.\\n2 : Valeurs fractionnaires.']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}