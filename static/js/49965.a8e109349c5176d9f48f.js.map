{"version":3,"file":"js/49965.a8e109349c5176d9f48f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C30-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes,texNombre,texNombre2,puissanceEnProduit} from '../../modules/outils.js'\nexport const titre = 'Écriture décimale d’une puissance de 10'\n\n/**\n * Donner l'écriture décimale d'une puissance de 10\n * @author Rémi Angot\n* Référence 4C30-2\n */\nexport default function EcritureDecimalePuissanceDe10() {\n  Exercice.call(this);\n  this.titre = titre;\n  this.consigne = \"Donner l'écriture décimale\";\n  this.nbQuestions = 8;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 3; // exposants positifs et négatifs par défaut\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    let listeTypeDeQuestions\n    if (this.sup == 1) {\n      listeTypeDeQuestions = combinaisonListes(['+'], this.nbQuestions);\n    }\n    if (this.sup == 2) {\n      listeTypeDeQuestions = combinaisonListes(['-'], this.nbQuestions);\n    }\n    if (this.sup == 3) {\n      listeTypeDeQuestions = combinaisonListes(['+', '-'], this.nbQuestions);\n    }\n    for (let i = 0, texte, texteCorr, n, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case '+':\n          n = randint(0, 10)\n          texte = `$10^{${n}}$`;\n          if (n < 2) {\n            texteCorr = `$10^${n}=${10 ** n}$`\n          } else {\n            if (context.isHtml){\n              texteCorr = `$10^{${n}}=${puissanceEnProduit(10, n)}=${texNombre(10 ** n)}$`;\n            } else {\n              texteCorr = `$10^{${n}}=${texNombre(10 ** n)}$`;\n            }\n          }\n          break;\n        case '-':\n          n = randint(1, 10)\n          texte = `$10^{${-n}}$`;\n          if (context.isHtml){\n            texteCorr = `$10^{${-n}}=\\\\dfrac{1}{10^{${n}}}=\\\\dfrac{1}{${puissanceEnProduit(10, n)}}=\\\\dfrac{1}{${texNombre(10 ** n)}}=${texNombre2(1 / 10 ** n)}$`;\n          } else {\n            texteCorr = `$10^{${-n}}=\\\\dfrac{1}{10^{${n}}}=\\\\dfrac{1}{${texNombre(10 ** n)}}=${texNombre2(1 / 10 ** n)}$`;\n          }\n          break;\n\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Exposants positifs\\n2 : Exposants négatifs\\n3 : Exposants relatifs'];\n}\n\n\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","EcritureDecimalePuissanceDe10","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","combinaisonListes","texte","texteCorr","n","i","cpt","randint","context","puissanceEnProduit","texNombre","texNombre2","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}