{"version":3,"file":"js/30392.f4e4ca72eb801baebb26.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3L15.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'// eslint-disable-next-line camelcase\nimport { listeQuestionsToContenu, combinaisonListes, ecritureAlgebriqueSauf1, ecritureAlgebrique, rienSi1, texFraction, texFractionReduite, randint, pgcd, choice } from '../../modules/outils.js'\nexport const titre = 'Équations du second degré se ramenant au premier degré'\n\n/**\n *\n * Résoudre une équation du type (ax)2 - b2 = 0\n *\n * Résoudre une équation du type ax2 + bx = 0\n *\n * @author Rémi Angot\n * Référence 3L15\n*/\nexport default function ExerciceEquations () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre les équations suivantes'\n  this.nbQuestions = 6\n  this.nbCols = 2\n  this.nbColsCorr = 1\n  this.sup = 4\n  this.spacingCorr = 3\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typeQuestionsDisponibles = ['ax2+bx', 'ax2+bxAvec1']\n    }\n    if (this.sup === 2) {\n      typeQuestionsDisponibles = ['ax2-b2', 'ax2=b2']\n    }\n    if (this.sup === 3) {\n      typeQuestionsDisponibles = ['bcx2+a=bx(cx+d)', 'bcx2+a=bx(cx+d)', '(ax+b)(cx+d)=acx2']\n    }\n    if (this.sup === 4) {\n      typeQuestionsDisponibles = ['ax2+bx', 'ax2+bxAvec1', 'bcx2+a=bx(cx+d)', 'ax2-b2', 'ax2=b2', '(ax+b)(cx+d)=acx2']\n    }\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, a, b, c, d, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'ax2+bx':\n          a = randint(-9, 9, 0)\n          b = randint(-9, 9, 0)\n          texte = ax2plusbx(a, b)[0]\n          texteCorr = ax2plusbx(a, b)[1]\n          break\n        case 'ax2+bxAvec1':\n          if (randint(1, 2) === 1) {\n            a = choice([-1, 1])\n            b = randint(-9, 9, [-1, 0, 1])\n          } else {\n            b = choice([-1, 1])\n            a = randint(-9, 9, [-1, 0, 1])\n          }\n          texte = ax2plusbx(a, b)[0]\n          texteCorr = ax2plusbx(a, b)[1]\n          break\n        case 'ax2-b2':\n          a = randint(1, 10)\n          b = randint(1, 10)\n          texte = `$ ${rienSi1(a ** 2)}x^2 - ${b ** 2} = 0 $ `\n          texteCorr = `$ ${rienSi1(a ** 2)}x^2 - ${b ** 2} = 0 $ `\n          texteCorr += '<br>'\n          texteCorr += `$ (${a}x+${b})(${a}x-${b}) = 0 $ `\n          texteCorr += '<br>'\n          texteCorr += `$${a}x+${b} = 0 \\\\quad \\\\text{ou} \\\\quad ${a}x-${b} = 0$ `\n          texteCorr += '<br>'\n          texteCorr += `$${a}x = ${-b} \\\\quad \\\\text{ou} \\\\quad ${a}x = ${b}$ `\n          texteCorr += '<br>'\n          if (pgcd(a, b) !== 1) {\n            texteCorr += `$x = ${texFraction(-b, a)} \\\\quad \\\\text{ou} \\\\quad x = ${texFraction(b, a)}$ `\n          } else {\n            texteCorr += `$x = ${texFraction(-b, a)}=${texFractionReduite(-b, a)} \\\\quad \\\\text{ou} \\\\quad x = ${texFraction(b, a)}=${texFractionReduite(b, a)}$ `\n          }\n          break\n        case 'ax2=b2':\n          a = randint(1, 10)\n          b = randint(1, 10)\n          texte = `$ ${rienSi1(a ** 2)}x^2 = ${b ** 2}$ `\n          texteCorr = `$ ${rienSi1(a ** 2)}x^2 = ${b ** 2}$ `\n          texteCorr += '<br>'\n          texteCorr += `$ ${rienSi1(a ** 2)}x^2 - ${b ** 2} = 0 $ `\n          texteCorr += '<br>'\n          texteCorr += `$ (${a}x+${b})(${a}x-${b}) = 0 $ `\n          texteCorr += '<br>'\n          texteCorr += `$${a}x+${b} = 0 \\\\quad \\\\text{ou} \\\\quad ${a}x-${b} = 0$ `\n          texteCorr += '<br>'\n          texteCorr += `$${a}x = ${-b} \\\\quad \\\\text{ou} \\\\quad ${a}x = ${b}$ `\n          texteCorr += '<br>'\n          if (pgcd(a, b) !== 1) {\n            texteCorr += `$x = ${texFraction(-b, a)} \\\\quad \\\\text{ou} \\\\quad x = ${texFraction(b, a)}$ `\n          } else {\n            texteCorr += `$x = ${texFraction(-b, a)}=${texFractionReduite(-b, a)} \\\\quad \\\\text{ou} \\\\quad x = ${texFraction(b, a)}=${texFractionReduite(b, a)}$ `\n          }\n          break\n        case 'bcx2+a=bx(cx+d)':\n          a = randint(1, 10)\n          b = randint(1, 10)\n          c = randint(1, 10)\n          d = randint(1, 10)\n          if (randint(1, 2) === 1) {\n            texte = `$ ${rienSi1(b * c)}x^2 ${ecritureAlgebrique(a)} = ${rienSi1(b)}x(${rienSi1(c)}x ${ecritureAlgebrique(d)}) $`\n            texteCorr = `$ ${rienSi1(b * c)}x^2 ${ecritureAlgebrique(a)} = ${rienSi1(b)}x(${rienSi1(c)}x ${ecritureAlgebrique(d)}) $`\n            texteCorr += '<br>'\n            texteCorr += `$ ${rienSi1(b * c)}x^2 ${ecritureAlgebrique(a)} = ${rienSi1(b * c)}x^2 ${ecritureAlgebriqueSauf1(d * b)}x $`\n            texteCorr += '<br>'\n            texteCorr += `$ ${a} = ${rienSi1(d * b)}x $`\n            texteCorr += '<br>'\n            texteCorr += `$ ${texFraction(a, d * b)} = x $`\n            if ((a < 0 && d * b < 0) || pgcd(a, d * b) !== 1) {\n              texteCorr += '<br>'\n              texteCorr += ` $ x = ${texFractionReduite(a, d * b)} $`\n            }\n          } else {\n            texte = `$ ${rienSi1(b)}x(${rienSi1(c)}x ${ecritureAlgebrique(d)}) = ${rienSi1(b * c)}x^2 ${ecritureAlgebrique(a)} $`\n            texteCorr = `$  ${rienSi1(b)}x(${rienSi1(c)}x ${ecritureAlgebrique(d)}) = ${rienSi1(b * c)}x^2 ${ecritureAlgebrique(a)} $`\n            texteCorr += '<br>'\n            texteCorr += `$ ${rienSi1(b * c)}x^2 ${ecritureAlgebriqueSauf1(b * d)}x = ${rienSi1(b * c)}x^2 ${ecritureAlgebrique(a)}$`\n            texteCorr += '<br>'\n            texteCorr += `$ ${rienSi1(b * d)}x = ${a} $`\n            texteCorr += '<br>'\n            texteCorr += `$ x = ${texFraction(a, b * d)}$`\n            if ((a < 0 && b * d < 0) || pgcd(a, b * d) !== 1) {\n              texteCorr += '<br>'\n              texteCorr += ` $ x = ${texFractionReduite(a, b * d)} $`\n            }\n          }\n\n          break\n        case '(ax+b)2=0':\n          a = randint(1, 10)\n          b = randint(1, 10)\n          texte = `$ (${rienSi1(a)}x ${ecritureAlgebrique(b)})^2 = 0 $`\n          texteCorr = `$ (${rienSi1(a)}x ${ecritureAlgebrique(b)})^2 = 0 $`\n          texteCorr += '<br>'\n          texteCorr += `$ ${rienSi1(a)}x ${ecritureAlgebrique(b)} = 0$`\n          texteCorr += '<br>'\n          texteCorr += `$ ${rienSi1(a)}x = ${-b} $`\n          texteCorr += '<br>'\n          texteCorr += `$ x = ${texFraction(-b, a)}$`\n          if ((-b < 0 && a < 0) || pgcd(a, b) !== 1) {\n            texteCorr += '<br>'\n            texteCorr += ` $ x = ${texFractionReduite(-b, a)} $`\n          }\n          break\n        case '(ax+b)(cx+d)=acx2':\n          a = randint(1, 5)\n          b = randint(1, 5)\n          c = randint(1, 5)\n          d = randint(1, 5)\n          texte = `$ (${rienSi1(a)}x ${ecritureAlgebrique(b)})(${rienSi1(c)}x ${ecritureAlgebrique(d)}) = ${rienSi1(a * c)}x^2 $`\n          texteCorr = `$ (${rienSi1(a)}x ${ecritureAlgebrique(b)})(${rienSi1(c)}x ${ecritureAlgebrique(d)}) = ${rienSi1(a * c)}x^2 $`\n          texteCorr += '<br>'\n          texteCorr += `$ ${rienSi1(a * c)}x^2 ${ecritureAlgebriqueSauf1(a * d)}x ${ecritureAlgebriqueSauf1(b * c)}x ${ecritureAlgebrique(b * d)} = ${rienSi1(a * c)}x^2 $`\n          texteCorr += '<br>'\n          texteCorr += `$ ${rienSi1(a * c)}x^2 ${ecritureAlgebriqueSauf1(a * d + b * c)}x ${ecritureAlgebrique(b * d)} = ${rienSi1(a * c)}x^2 $`\n          texteCorr += '<br>'\n          texteCorr += `$ ${rienSi1(a * d + b * c)}x ${ecritureAlgebrique(b * d)} = 0 $`\n          texteCorr += '<br>'\n          texteCorr += `$ ${rienSi1(a * d + b * c)}x = ${-b * d}$ `\n          texteCorr += '<br>'\n          texteCorr += `$ x = ${texFraction(-b * d, a * d + b * c)}$`\n          if ((-b * d < 0 && a * d + b * c < 0) || pgcd(-b * d, a * d + b * c) !== 1) {\n            texteCorr += '<br>'\n            texteCorr += `$ x = ${texFractionReduite(-b * d, a * d + b * c)}$`\n          }\n\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\"Types d'équations\", 2, \"1 : Factoriser avec x en facteur commun\\n2 : Factoriser avec l'identité remarquable\\n3 : Développer et réduire\\n4 : Tous les types précédents\"]\n}\n\nfunction ax2plusbx (a, b) {\n  const texte = `$ ${rienSi1(a)} x^2 ${ecritureAlgebriqueSauf1(b)} x=0$`\n  let texteCorr = `$ ${rienSi1(a)} x^2 ${ecritureAlgebriqueSauf1(b)} x=0$`\n  texteCorr += '<br>'\n  texteCorr += `$x(${rienSi1(a)} x ${ecritureAlgebrique(b)})=0$`\n  texteCorr += '<br>'\n  texteCorr += `$ x = 0 \\\\text{ \\\\quad ou \\\\quad } ${rienSi1(a)} x ${ecritureAlgebrique(b)} = 0 $ `\n  texteCorr += '<br>'\n  texteCorr += `$ \\\\phantom{x = 0 \\\\text{ \\\\quad ou \\\\quad }} ${rienSi1(a)} x = ${-b} $ `\n  texteCorr += '<br>'\n  texteCorr += `$ \\\\phantom{x = 0 \\\\text{ \\\\quad ou \\\\quad }}  x = ${texFraction(-b, a)} `\n  if ((b > 0 && a < 0) || pgcd(a, b) !== 1) {\n    texteCorr += ` = ${texFractionReduite(-b, a)} `\n  }\n  texteCorr += '$'\n  return [texte, texteCorr]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ExerciceEquations","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","spacingCorr","tailleDiaporama","video","nouvelleVersion","parseInt","listeQuestions","listeCorrections","typeQuestionsDisponibles","listeTypeQuestions","combinaisonListes","a","b","c","d","texte","texteCorr","i","cpt","randint","ax2plusbx","choice","rienSi1","pgcd","texFraction","texFractionReduite","ecritureAlgebrique","ecritureAlgebriqueSauf1","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}