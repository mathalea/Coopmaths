{"version":3,"file":"js/54517.0085146568db2a6cbab6.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/PE/PEA11.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,texNombre,miseEnEvidence} from '../../modules/outils.js'\nexport const titre = 'Passer de la base 10 à une autre base et inversement'\n\n/**\n* Passer d'une écriture en base 10 à l'écriture dans une autre base ou inversement\n* référence PEA11\n* * Convertir en base 10\n* * Convertir vers une base entre 2 et 7\n* * Trouver le plus grand nombre à 3 ou 4 chiffres d'une base ainsi que son successeur et le convertir en base 10 ou le plus petit et son prédecesseur\n*\n* @author Rémi Angot\n*/\nexport default function Passer_d_une_base_a_l_autre() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.consigne = \"\";\n\tthis.nbQuestions = 3;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.spacing = 1;\n\tcontext.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1;\n\n\tthis.nouvelleVersion = function () {\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\n\t\tlet typesDeQuestionsDisponibles = ['vers_base_10', choice(['vers_base_n_3_chiffres', 'vers_base_n_4_chiffres']), choice(['plus_grand_4_chiffres', 'plus_grand_3_chiffres', 'plus_petit_4_chiffres', 'plus_petit_3_chiffres'])];\n\t\tif (this.nbQuestions > 3) {\n\t\t\ttypesDeQuestionsDisponibles = ['vers_base_10', 'vers_base_n_3_chiffres', 'vers_base_n_4_chiffres', 'plus_grand_4_chiffres', 'plus_grand_3_chiffres', 'plus_petit_4_chiffres', 'plus_petit_3_chiffres'];\n\t\t}\n\t\tlet listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions); // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\t\tfor (let i = 0, texte, texteCorr, b, n, m, chiffre1, chiffre2, chiffre3, chiffre4, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\tb = randint(2, 7);\n\t\t\tswitch (listeTypeDeQuestions[i]) {\n\t\t\t\tcase 'vers_base_10':\n\t\t\t\t\tn = randint(1, b - 1) * 10 + randint(0, b - 1);\n\t\t\t\t\tm = randint(1, b - 1) * 1000 + randint(0, b - 1) * 100 + randint(0, b - 1) * 10 + randint(0, b - 1);\n\t\t\t\t\ttexte = `Les nombre $(${n})_${b}$ et $(${m})_${b}$ sont écrits en base ${b}. Donner leur écriture en base 10.`;\n\t\t\t\t\ttexteCorr = `$(${n})_${b}=${n.toString()[0]}\\\\times${b}+${n.toString()[1]}=${parseInt(n, b)}$`;\n\t\t\t\t\ttexteCorr += `<br>$(${m})_${b}=${m.toString()[0]}\\\\times${b}^3+${m.toString()[1]}\\\\times${b}^2+${m.toString()[2]}\\\\times${b}+${m.toString()[3]}=${parseInt(m, b)}$`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'vers_base_n_3_chiffres':\n\t\t\t\t\tchiffre1 = randint(1, b - 1);\n\t\t\t\t\tchiffre2 = randint(0, b - 1);\n\t\t\t\t\tchiffre3 = randint(0, b - 1);\n\t\t\t\t\tn = chiffre1 * b ** 2 + chiffre2 * b + chiffre3;\n\t\t\t\t\ttexte = `Écrire en base ${b} le nombre ${n}.`;\n\t\t\t\t\ttexteCorr = `$${n}=${b}\\\\times${Math.floor(n / b)}+${miseEnEvidence(n % b)}$`;\n\t\t\t\t\ttexteCorr += `<br>$${Math.floor(n / b)}=${b}\\\\times${miseEnEvidence(chiffre1)}+${miseEnEvidence(chiffre2)}$`;\n\t\t\t\t\ttexteCorr += `<br> Finalement $${n}=(${chiffre1}${chiffre2}${chiffre3})_${b}$`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'vers_base_n_4_chiffres':\n\t\t\t\t\tchiffre1 = randint(1, b - 1);\n\t\t\t\t\tchiffre2 = randint(0, b - 1);\n\t\t\t\t\tchiffre3 = randint(0, b - 1);\n\t\t\t\t\tchiffre4 = randint(0, b - 1);\n\t\t\t\t\tn = chiffre1 * b ** 3 + chiffre2 * b ** 2 + chiffre3 * b + chiffre4;\n\t\t\t\t\ttexte = `Écrire en base ${b} le nombre ${n}.`;\n\t\t\t\t\ttexteCorr = `$${n}=${b}\\\\times${Math.floor(n / b)}+${miseEnEvidence(n % b)}$`;\n\t\t\t\t\ttexteCorr += `<br>$${Math.floor(n / b)}=${b}\\\\times${Math.floor(Math.floor(n / b) / b)}+${miseEnEvidence(Math.floor(n / b) % b)}$`;\n\t\t\t\t\ttexteCorr += `<br>$${Math.floor(Math.floor(n / b) / b)}=${b}\\\\times${miseEnEvidence(chiffre1)}+${miseEnEvidence(chiffre2)}$`;\n\t\t\t\t\ttexteCorr += `<br> Finalement $${n}=(${chiffre1}${chiffre2}${chiffre3}${chiffre4})_${b}$`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'plus_grand_4_chiffres':\n\t\t\t\t\ttexte = `Quel est le plus grand nombre à 4 chiffres que l'on peut écrire en base ${b}.`;\n\t\t\t\t\ttexte += `<br>Comment s'écrit son successeur immédiat en base ${b} ? En déduire l'écriture en base 10 de ces 2 nombres.`;\n\t\t\t\t\ttexteCorr = `En base ${b} les chiffres sont 0`;\n\t\t\t\t\tfor (let i = 1; i < b; i++) {\n\t\t\t\t\t\ttexteCorr += `, ${i}`;\n\t\t\t\t\t}\n\t\t\t\t\ttexteCorr += ` donc le plus grand nombre à 4 chiffres est $(${b - 1}${b - 1}${b - 1}${b - 1})_${b}$ et son successeur immédiat est $(10000)_${b}$.`;\n\t\t\t\t\ttexteCorr += `<br> $(10000)_${b}=1\\\\times${b}^4=${texNombre(b ** 4)}$ donc $(${b - 1}${b - 1}${b - 1}${b - 1})_${b}=${b ** 4}-1=${texNombre(b ** 4 - 1)}$.`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'plus_grand_3_chiffres':\n\t\t\t\t\ttexte = `Quel est le plus grand nombre à 3 chiffres que l'on peut écrire en base ${b}.`;\n\t\t\t\t\ttexte += `<br>Comment s'écrit son successeur immédiat en base ${b} ? En déduire l'écriture en base 10 de ces 2 nombres.`;\n\t\t\t\t\ttexteCorr = `En base ${b} les chiffres sont 0`;\n\t\t\t\t\tfor (let i = 1; i < b; i++) {\n\t\t\t\t\t\ttexteCorr += `, ${i}`;\n\t\t\t\t\t}\n\t\t\t\t\ttexteCorr += ` donc le plus grand nombre à 3 chiffres est $(${b - 1}${b - 1}${b - 1})_${b}$ et son successeur immédiat est $(1000)_${b}$.`;\n\t\t\t\t\ttexteCorr += `<br> $(1000)_${b}=1\\\\times${b}^3=${texNombre(b ** 3)}$ donc $(${b - 1}${b - 1}${b - 1})_${b}=${b ** 3}-1=${texNombre(b ** 3 - 1)}$.`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'plus_petit_4_chiffres':\n\t\t\t\t\ttexte = `Quel est le plus petit nombre à 4 chiffres que l'on peut écrire en base ${b}.`;\n\t\t\t\t\ttexte += `<br>Comment s'écrit son prédécesseur immédiat en base ${b} ? En déduire l'écriture en base 10 de ces 2 nombres.`;\n\t\t\t\t\ttexteCorr = `En base ${b} les chiffres sont 0`;\n\t\t\t\t\tfor (let i = 1; i < b; i++) {\n\t\t\t\t\t\ttexteCorr += `, ${i}`;\n\t\t\t\t\t}\n\t\t\t\t\ttexteCorr += ` donc le plus petit nombre à 4 chiffres est $(1000)_${b}$ et son prédécesseur immédiat est $(${b - 1}${b - 1}${b - 1})_${b}$.`;\n\t\t\t\t\ttexteCorr += `<br> $(1000)_${b}=1\\\\times${b}^3=${texNombre(b ** 3)}$ donc $(${b - 1}${b - 1}${b - 1})_${b}=${b ** 3}-1=${texNombre(b ** 3 - 1)}$.`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'plus_petit_3_chiffres':\n\t\t\t\t\ttexte = `Quel est le plus petit nombre à 3 chiffres que l'on peut écrire en base ${b}.`;\n\t\t\t\t\ttexte += `<br>Comment s'écrit son prédécesseur immédiat en base ${b} ? En déduire l'écriture en base 10 de ces 2 nombres.`;\n\t\t\t\t\ttexteCorr = `En base ${b} les chiffres sont 0`;\n\t\t\t\t\tfor (let i = 1; i < b; i++) {\n\t\t\t\t\t\ttexteCorr += `, ${i}`;\n\t\t\t\t\t}\n\t\t\t\t\ttexteCorr += ` donc le plus petit nombre à 3 chiffres est $(100)_${b}$ et son prédécesseur immédiat est $(${b - 1}${b - 1})_${b}$.`;\n\t\t\t\t\ttexteCorr += `<br> $(100)_${b}=1\\\\times${b}^2=${texNombre(b ** 2)}$ donc $(${b - 1}${b - 1})_${b}=${b ** 2}-1=${texNombre(b ** 2 - 1)}$.`;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\tlisteQuestionsToContenu(this);\n\t};\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","Passer_d_une_base_a_l_autre","context","typesDeQuestionsDisponibles","choice","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","b","n","m","chiffre1","chiffre2","chiffre3","chiffre4","cpt","randint","parseInt","Math","floor","miseEnEvidence","texNombre","listeQuestionsToContenu"],"sourceRoot":""}