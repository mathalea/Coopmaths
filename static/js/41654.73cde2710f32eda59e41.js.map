{"version":3,"file":"js/41654.73cde2710f32eda59e41.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta3F23.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, ecritureAlgebrique, texFractionReduite, texFraction, pgcd } from '../../modules/outils.js'\n\nexport const titre = 'Déterminer un antécédent'\n\n/**\n * Reconnaître une fonction affine\n* @author Erwan Duplessy\n* 3F23\n* date : 2021/02/21\n* référentiel 3F23 - Déterminer de manière algébrique l’antécédent par une fonction, dans des cas se ramenant à la résolution d’une équation du premier degré.\n* plusieurs cas :\n* f(x) = ax + b avec a et b petits relatifs\n* f(x) = ax + b avec a et b grands relatifs\n* f(x) = a(x + b) + c avec a, b, c petits relatifs\n* f(x) = a(bx + c) + dx + e  avec a, b, c, d petits relatifs\n*/\n\nexport default function antecedentParCalcul () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.consigne = 'Répondre aux questions suivantes avec une valeur exacte simplifiée. '\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.spacingCorr = context.isHtml ? 3 : 1\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n\n  //  this.sup = 1; // A décommenter : valeur par défaut d'un premier paramètre\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.sup3 = false; // A décommenter : valeur par défaut d'un troisième paramètre\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4] // tableau à compléter par valeurs possibles des types de questions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n      let a = 0; let b = 0; let c = 0; let d = 0; let e = 0; let m = 0\n      let expr = ''\n\n      switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent\n        case 1:\n          // f(x) = ax + b avec a et b petits relatifs\n          a = randint(-20, 20, [-1, 0, 1])\n          b = randint(-20, 20)\n          m = randint(-20, 20)\n          expr = `$f(x)=${a}x ${ecritureAlgebrique(b)}$`\n          texte += `Déterminer l'antécédent de $${m}$ par la fonction $f$ définie par ${expr}. `\n          texteCorr += `On cherche un nombre $x$ tel que $f(x) = ${m}$. `\n          texteCorr += `On résout donc l'équation : $f(x) = ${m}$. <br>`\n          texteCorr += '$\\\\begin{aligned} '\n          texteCorr += `${a}x ${ecritureAlgebrique(b)} &= ${m} \\\\\\\\ `\n          texteCorr += `${a}x &= ${m} ${ecritureAlgebrique(-b)} \\\\\\\\ `\n          if (pgcd(m - b, a) === 1 && m - b > 0 && a > 0) { // teste si la fraction est simplifiable\n            texteCorr += `x &= ${texFraction(m - b, a)} \\\\\\\\`\n          } else {\n            texteCorr += `x &= ${texFraction(m - b, a)} = ${texFractionReduite(m - b, a)}\\\\\\\\ `\n          }\n          texteCorr += '\\\\end{aligned}$'\n          break\n\n        case 2:\n          // f(x) = ax + b avec a et b grands relatifs\n          a = randint(-999, 999, [-1, 0, 1])\n          b = randint(-999, 999, [0])\n          m = randint(-999, 999, [0])\n          expr = `$f(x)=${a}x ${ecritureAlgebrique(b)}$`\n          texte += `Déterminer l'antécédent de $${m}$ par la fonction $f$ définie par ${expr}. `\n          texteCorr += `On cherche un nombre $x$ tel que $f(x) = ${m}$. `\n          texteCorr += `On résout donc l'équation : $f(x) = ${m}$. <br>`\n          texteCorr += '$\\\\begin{aligned} '\n          texteCorr += ` ${a}x ${ecritureAlgebrique(b)}&= ${m} \\\\\\\\ `\n          texteCorr += ` ${a}x &= ${m} ${ecritureAlgebrique(-b)}\\\\\\\\ `\n          if (pgcd(m - b, a) === 1 && m - b > 0 && a > 0) { // teste si la fraction est simplifiable\n            texteCorr += `x &= ${texFraction(m - b, a)}\\\\\\\\`\n          } else {\n            texteCorr += `x &= ${texFraction(m - b, a)} = ${texFractionReduite(m - b, a)}\\\\\\\\`\n          }\n          texteCorr += '\\\\end{aligned}$'\n          break\n\n        case 3:\n          // f(x) = a(x + b) + c avec a, b, c petits relatifs\n          a = randint(-20, 20, [-1, 0, 1])\n          b = randint(-20, 20, [0])\n          c = randint(-20, 20, [0])\n          m = randint(-20, 20)\n          expr = `$f(x)=${a}(x ${ecritureAlgebrique(b)})${ecritureAlgebrique(c)}$`\n          texte += `Déterminer l'antécédent de $${m}$ par la fonction $f$ définie par ${expr}. `\n          texteCorr += `On cherche un nombre $x$ tel que $f(x) = ${m}$. `\n          texteCorr += `On résout donc l'équation : $f(x) = ${m}$. <br>`\n\n          texteCorr += '$\\\\begin{aligned} '\n          texteCorr += `${a}(x ${ecritureAlgebrique(b)})${ecritureAlgebrique(c)} &= ${m}\\\\\\\\`\n          texteCorr += `${a}x ${ecritureAlgebrique(a * b)}${ecritureAlgebrique(c)} &= ${m}\\\\\\\\`\n          texteCorr += `${a}x ${ecritureAlgebrique(a * b + c)} &= ${m}\\\\\\\\`\n          texteCorr += `${a}x &= ${m} ${ecritureAlgebrique(-a * b - c)}\\\\\\\\`\n          if (pgcd(m - a * b - c, a) === 1 && m - a * b - c > 0 && a > 0) { // teste si la fraction est simplifiable\n            texteCorr += `x &= ${texFraction(m - a * b - c, a)}\\\\\\\\`\n          } else {\n            texteCorr += `x &= ${texFraction(m - a * b - c, a)} = ${texFractionReduite(m - a * b - c, a)}\\\\\\\\`\n          }\n          texteCorr += '\\\\end{aligned}$'\n          break\n\n        case 4:\n          // f(x) = a(bx + c) + dx + e  avec a, b, c, d petits relatifs\n          a = randint(-20, 20, [-1, 0, 1])\n          b = randint(-20, 20, [-1, 0, 1])\n          c = randint(-20, 20, [0])\n          d = randint(-20, 20, [-1, 0, 1, -a * b]) // d différent de -ab pour assurer une solution\n          e = randint(-20, 20, [0])\n          m = randint(-20, 20)\n          expr = `$f(x)=${a}(${b}x ${ecritureAlgebrique(c)})${ecritureAlgebrique(d)}x${ecritureAlgebrique(e)}$`\n          texte += `Déterminer l'antécédent de $${m}$ par la fonction $f$ définie par ${expr}. `\n          texteCorr += `On cherche un nombre $x$ tel que $f(x) = ${m}$. `\n          texteCorr += `On résout donc l'équation : $f(x) = ${m}$. <br>`\n\n          texteCorr += '$\\\\begin{aligned} '\n          texteCorr += `${a}(${b}x ${ecritureAlgebrique(c)})${ecritureAlgebrique(d)}x${ecritureAlgebrique(e)} &= ${m}\\\\\\\\`\n          texteCorr += `${a * b}x ${ecritureAlgebrique(a * c)}${ecritureAlgebrique(d)}x${ecritureAlgebrique(e)} &= ${m}\\\\\\\\`\n          texteCorr += `${a * b + d}x ${ecritureAlgebrique(a * c + e)} &= ${m}\\\\\\\\`\n          texteCorr += `${a * b + d}x  &= ${m}${ecritureAlgebrique(-a * c - e)}\\\\\\\\`\n          texteCorr += `${a * b + d}x &= ${m - a * c - e}\\\\\\\\`\n          if (pgcd(m - a * c - e, a * b + d) === 1 && m - a * c - e > 0 && a * b + d > 0) { // teste si la fraction est simplifiable\n            texteCorr += `x &= ${texFraction(m - a * c - e, a * b + d)}\\\\\\\\`\n          } else {\n            texteCorr += `x &= ${texFraction(m - a * c - e, a * b + d)} = ${texFractionReduite(m - a * c - e, a * b + d)}\\\\\\\\`\n          }\n          texteCorr += '\\\\end{aligned}$'\n\n          break\n      }\n      if (this.questionJamaisPosee(i, a, b, c, d, m, e)) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","antecedentParCalcul","pas_de_version_HMTL","context","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","cpt","a","b","c","d","e","m","expr","randint","ecritureAlgebrique","pgcd","texFraction","texFractionReduite","listeQuestionsToContenu"],"sourceRoot":""}