{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6M20.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["Algebrite","require","titre","AireDeTriangles","Exercice","this","consigne","spacing","sortieHtml","spacingCorr","nbQuestions","nbCols","nbColsCorr","nbQuestionsModifiable","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","numeroExercice","listeCorrections","listeQuestions","tableauDesCotes","shuffle","tableauDesHauteurs","cotes","combinaisonListesSansChangerOrdre","hauteurs","triH","A","point","B","C","H","triangle","polynom","hauteurpoly","d","objetsEnonce","objetsCorrection","xmin","xmax","ymin","ymax","texte","texteCorr","nom","creerNomDePolygone","i","length","rotation","randint","longueur","calcul","triangle2points1hauteur","pied","listePoints","polygoneAvecNom","segment","pointilles","Math","min","x","max","y","push","afficheCoteSegment","afficheLongueurSegment","codageAngleDroit","mathalea2d","pixelsParCm","scale","mainlevee","texNombre","eval","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/1008.3791a44c2a8f4dc49ddd.js","sourcesContent":["import { longueur, segment, mathalea2d, afficheLongueurSegment, afficheCoteSegment, codageAngleDroit, polygoneAvecNom, triangle2points1hauteur, point, rotation } from '../../modules/2d.js'\nimport { combinaisonListesSansChangerOrdre, creerNomDePolygone, listeQuestionsToContenu, randint, shuffle, texNombre, calcul } from '../../modules/outils.js'\nimport Exercice from '../ClasseExercice.js'\n\nconst Algebrite = require('algebrite')\n\nexport const titre = 'Aires de triangles'\n\n/**\n * Calculer l'aire de 3 triangles dont une hauteur est tracée.\n *\n * Une figure dynamique est disponible sur laquelle on peut déplacer le pied de la hauteur.\n *\n * @Auteur Rémi Angot conversion mathalea2d Jean-Claude Lhote\n * Référence 6M20\n */\nexport default function AireDeTriangles () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne =\n    \"Calculer l'aire des 3 triangles suivants.\"\n  this.spacing = 2\n  // eslint-disable-next-line no-undef\n  sortieHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 2)\n  this.nbQuestions = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nbQuestionsModifiable = false\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.listeQuestions = []\n    const tableauDesCotes = shuffle([5, 6, 7, 8, 9]) // pour s'assurer que les 3 côtés sont différents\n    const tableauDesHauteurs = shuffle([3, 4, 5, 6]) // pour s'assurer que les 3 hauteurs sont différents\n    const cotes = combinaisonListesSansChangerOrdre(tableauDesCotes, this.nbQuestions)\n    const hauteurs = combinaisonListesSansChangerOrdre(tableauDesHauteurs, this.nbQuestions)\n    let triH; const A = point(0, 0); let B; let C; let H; let triangle; let polynom; let hauteurpoly; let d\n    const objetsEnonce = []; const objetsCorrection = []; let xmin; let xmax; let ymin; let ymax\n    let texte = ''; let texteCorr = ''\n\n    const nom = creerNomDePolygone(4 * this.nbQuestions, 'Q')\n\n    for (let i = 0; i < this.nbQuestions; i++) {\n      objetsEnonce.length = 0\n      objetsCorrection.length = 0\n      A.nom = nom[i * 4]\n      B = rotation(point(cotes[i], 0), A, randint(-60, 60), nom[i * 4 + 1])\n      if (i % 3 === 2) {\n        d = longueur(A, B) + randint(6, 9) / 3\n      } else {\n        d = calcul(randint(6, longueur(A, B) * 10 - 6) / 10)\n      }\n      triH = triangle2points1hauteur(A, B, hauteurs[i], d, 2)\n      H = triH.pied\n      H.nom = nom[i * 4 + 3]\n      triangle = triH.triangle\n      C = triangle.listePoints[2]\n      C.nom = nom[i * 4 + 2]\n      polynom = polygoneAvecNom(A, H, B, C)\n      hauteurpoly = segment(C, H)\n      hauteurpoly.pointilles = 2\n      xmin = Math.min(A.x, B.x, C.x, H.x) - 1.5\n      xmax = Math.max(A.x, B.x, C.x, H.x) + 1.5\n      ymin = Math.min(A.y, B.y, C.y, H.y) - 2\n      ymax = Math.max(A.y, B.y, C.y, H.y) + 1.5\n      objetsEnonce.push(polynom[0], polynom[1], hauteurpoly, afficheCoteSegment(segment(B, A), '', 1), afficheLongueurSegment(A, C, 'black', 0.5), afficheLongueurSegment(C, B, 'black', 0.5), afficheLongueurSegment(C, H, 'black', 0.3), codageAngleDroit(A, H, C))\n      objetsCorrection.push(polynom[0], polynom[1], hauteurpoly, afficheCoteSegment(segment(B, A), '', 1), afficheLongueurSegment(C, H, 'black', 0.3), codageAngleDroit(A, H, C))\n      texte = mathalea2d({ xmin: xmin, xmax: xmax, ymin: ymin, ymax: ymax, pixelsParCm: 20, scale: 0.5, mainlevee: false }, objetsEnonce) + '<br>'\n      if (this.correctionDetaillee) { texteCorr = mathalea2d({ xmin: xmin, xmax: xmax, ymin: ymin, ymax: ymax, pixelsParCm: 20, scale: 0.5, mainlevee: false }, objetsCorrection) + '<br>' } else texteCorr = ''\n      texteCorr += `$\\\\mathcal{A}_{${A.nom}${B.nom}${C.nom}}=\\\\dfrac{1}{2}\\\\times ${A.nom}${B.nom}\\\\times ${H.nom}${C.nom}=\\\\dfrac{1}{2}\\\\times${cotes[i]}~\\\\text{cm}\\\\times ${hauteurs[i]}~\\\\text{cm}=${texNombre(\n      Algebrite.eval((cotes[i] * hauteurs[i]) / 2)\n    )}~\\\\text{cm}^2$`\n\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}