{"version":3,"file":"js/96425.79125da67fc0f4dd944e.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2F10-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, reduireAxPlusB, texFractionSigne, ecritureAlgebrique, ecritureAlgebriqueSauf1 } from '../../modules/outils.js'\nimport { context } from '../../modules/context.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Reconnaître une fonction affine.'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\nexport const amcReady = true\nexport const amcType = 'qcmMono'\n\n/**\n * Reconnaître une fonction affine\n* @author Stéphane Guyon\n* 2F20\n*/\nexport default function Reconnaitrefonctionaffine () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.video = ''\n  this.consigne = 'Déterminer, en expliquant, si les fonctions suivantes sont, ou non, des fonctions affines :'\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.nbQuestions = 5\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let bonneReponse\n\n    const listeTypeDeQuestions = combinaisonListes([1, 2, 3, 4, 5, 6, 7, 8, 9], this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0, a, b, c, d, e, k = [], typesDeQuestions; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      k = choice([-1, 1])\n      a = randint(2, 9)\n      a = a * k\n      b = randint(1, 9)\n      c = choice([2, 3, 5, 7, 10, 11, 13, 15, 17])\n      b = b * k\n      d = choice([2, 3, 5, 7, 10, 11, 13, 15, 17])\n      e = randint(2, 9)\n\n      switch (typesDeQuestions) {\n        case 1:// Cas f(x)=ax+b\n          texte = ` Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${reduireAxPlusB(a, b)}$` // f(x)=ax + b\n          texteCorr = ` $f(x)=${reduireAxPlusB(a, b)}$.<br>`\n          texteCorr += 'On observe que la fonction $f$ s\\'écrit bien sous la forme $f(x)= a x+ b$  avec $a$ et $b$ des nombres réels.<br>'\n          texteCorr += `Ici, on a : $a=${a}$ et $b=${b}$.<br>`\n          texteCorr += '$f$ est donc bien une fonction affine.<br>'\n          bonneReponse = 'oui'\n          break\n        case 2:// Cas f(x)=b+a x\n          if (a === 1) {\n            texte = ` Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${b}+x$.<br>` // f(x)=b+x\n            texteCorr = ` Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${b}+x$.<br>`\n            texteCorr += ` On peut écrire $f$ sous cette forme : $f(x)=x ${ecritureAlgebrique(b)}$.<br>`\n          }\n          if (a === -1) {\n            texte = ` Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${b}-x$.<br>` // f(x)=b-x}\n            texteCorr = ` Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${b}-x$.<br>`\n            texteCorr += ` On peut écrire $f$ sous cette forme : $f(x)=-x ${ecritureAlgebrique(b)}$.<br>`\n          }\n          if (a !== 0 & a !== 1) {\n            texte = ` Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${b} ${ecritureAlgebrique(a)}  x$.<br>` // f(x)=b-x}\n            texteCorr = ` Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${b} ${ecritureAlgebrique(a)}  x$.<br>` // f(x)=b-x}\n            texteCorr += ` On peut écrire $f$ sous cette forme : $f(x)= ${reduireAxPlusB(a, b)}$.<br>`\n          }\n          texteCorr += 'On observe que la fonction $f$ s\\'écrit bien sous la forme $f(x)= a x+ b$ avec $a$ et $b$ des nombres réels.<br>'\n          texteCorr += `Ici, on a : $a=${a}$ et $b=${b}$.<br>`\n          texteCorr += '$f$ est donc bien une fonction affine.'\n          bonneReponse = 'oui'\n\n          break\n        case 3:// Cas f(x)=ax²+bx+c\n          texte = ` Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${a}x^{2}${ecritureAlgebrique(b)} x${ecritureAlgebrique(c)} $.` // f(x)=ax²+bx+c\n          texteCorr = ` $f(x)=${a}x^{2}${ecritureAlgebriqueSauf1(b)} x${ecritureAlgebrique(c)} $.<br>`\n          texteCorr += 'On observe que la fonction $f$ est du second degré, puisqu\\'il y a un terme en $x^{2}$.<br>'\n          texteCorr += 'Elle s\\'écrit sous la forme $f(x)= a x^{2}+ bx+c$ et non pas sous la forme $ax+b$.<br>'\n          texteCorr += '$f$ n\\'est donc pas une fonction affine.<br>'\n          bonneReponse = 'non'\n\n          break\n        case 4:\n          texte = ` Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=\\\\sqrt{${c}}x + \\\\sqrt{${d}}$.` // f(x)=\\sqrt a x + \\sqrt b\n          texteCorr = ` $f(x)=\\\\sqrt{${c}}x + \\\\sqrt{${d}}$.<br>`\n          texteCorr += 'On observe que la fonction $f$ s\\'écrit bien sous la forme $f(x)= a x+ b$ avec $a$ et $b$ des nombres réels.<br>'\n          texteCorr += `Ici, on a : $a=\\\\sqrt{${c}}$ et $b=\\\\sqrt{${d}}$.<br>`\n          texteCorr += '$f$ est donc bien une fonction affine.<br>'\n          bonneReponse = 'oui'\n\n          break\n        case 5:\n          texte = ` Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${a}x^{2}${ecritureAlgebrique(c)} $.` // f(x)=ax²+c\n          texteCorr = ` $f(x)=${a}x^{2}${ecritureAlgebrique(c)} $.<br>`\n          texteCorr += 'On observe que la fonction $f$ est du second degré, puisqu\\'il y a un terme en $x^{2}$.<br>'\n          texteCorr += 'Elle s\\'écrit sous la forme $f(x)= a x^{2}+b$ avec $a$ et $b$ des nombres réels, et non pas sous la forme $ax+b$.<br>'\n          texteCorr += '$f$ n\\'est donc pas une fonction affine.<br>'\n          bonneReponse = 'non'\n\n          break\n        case 6:\n          texte = `Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=\\\\dfrac{1}{${a}x${ecritureAlgebrique(b)} }$.` // f(x)=1/(ax+b)\n          texteCorr = ` $f(x)=\\\\dfrac{1}{${a}x${ecritureAlgebrique(b)} }$.<br>`\n          texteCorr += 'On observe que la fonction $f$ est une fonction rationnelle, puisqu\\'il y une fraction avec des termes en $x$ au dénominateur.<br>'\n          texteCorr += 'Elle ne s\\'écrit  pas sous la forme $ax+b$.<br>'\n          texteCorr += '$f$ n\\'est donc pas une fonction affine.<br>'\n          bonneReponse = 'non'\n\n          break\n        case 7:// f(x)=1/a x+1/b\n          texte = `Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${texFractionSigne(1, a)}x+${texFractionSigne(1, e)} $.`\n          texteCorr = `$f(x)=${texFractionSigne(1, a)}x+${texFractionSigne(1, e)}$.<br>`\n          texteCorr += 'On observe que la fonction $f$ s\\'écrit bien sous la forme $f(x)= a x+ b$ avec $a$ et $b$ des nombres réels.<br>'\n          texteCorr += `Ici, on a : $a=${texFractionSigne(1, a)}$ et $b=${texFractionSigne(1, e)}$.<br>`\n          texteCorr += '$f$ est donc bien une fonction affine.<br>'\n          bonneReponse = 'oui'\n\n          break\n        case 8:// f(x)=k(ax+b)\n          texte = `Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=${c}\\\\times (${reduireAxPlusB(a, b)}) $.`\n          texteCorr = `$f(x)=${c}\\\\times (${reduireAxPlusB(a, b)}) $.<br>`\n          texteCorr += 'On peut développer l\\'expression de $f$ et on obtient alors :<br>'\n          texteCorr += `$f(x)=${reduireAxPlusB(a * c, b * c)} $.<br>`\n          texteCorr += 'On observe que la fonction $f$ s\\'écrit bien sous la forme $f(x)= a x+ b$ avec $a$ et $b$ des nombres réels.<br>'\n          texteCorr += `Ici, on a : $a=${a * c}$ et $b=${b * c}$.<br>`\n          texteCorr += '$f$ est donc bien une fonction affine.<br>'\n          bonneReponse = 'oui'\n\n          break\n        case 9:// f(x)= x/a+1/b\n          texte = `Soit $f$ la fonction définie sur un intervalle $I$ de $\\\\mathbb R$, par $f(x)=\\\\dfrac{x}{${a}}+${texFractionSigne(1, e)} $.`\n          texteCorr = `On a : $f(x)=\\\\dfrac{x}{${a}}+${texFractionSigne(1, e)} $.`\n          texteCorr += `<br>Ce qui revient à écrire que : $f(x)=${texFractionSigne(1, a)}x+${texFractionSigne(1, e)}$.<br>`\n          texteCorr += 'On observe que la fonction $f$ s\\'écrit bien sous la forme $f(x)= a x+ b$ avec $a$ et $b$ des nombres réels.<br>'\n          texteCorr += `Ici, on a : $a=${texFractionSigne(1, a)}$ et $b=${texFractionSigne(1, e)}$.<br>`\n          texteCorr += '$f$ est donc bien une fonction affine.<br>'\n          bonneReponse = 'oui'\n\n          break\n      }\n      if (this.interactif || context.isAmc) {\n        this.autoCorrection[i] = {}\n        this.autoCorrection[i].options = { ordered: true }\n        this.autoCorrection[i].enonce = `${texte}\\n`\n        this.autoCorrection[i].propositions = [\n          {\n            texte: 'oui',\n            statut: bonneReponse !== 'non'\n          },\n          {\n            texte: 'non',\n            statut: bonneReponse !== 'oui'\n          },\n          {\n            texte: 'je ne sais pas',\n            statut: false\n          }\n        ]\n        if (this.interactif) {\n          texte += propositionsQcm(this, i).texte\n        }\n      }\n      if (this.questionJamaisPosee(i, k, a, b, c, d, e)) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","Reconnaitrefonctionaffine","Exercice","this","video","consigne","nbCols","nbColsCorr","spacing","spacingCorr","nbQuestions","nouvelleVersion","bonneReponse","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","d","e","typesDeQuestions","i","cpt","k","choice","randint","reduireAxPlusB","ecritureAlgebrique","ecritureAlgebriqueSauf1","texFractionSigne","interactif","context","autoCorrection","options","ordered","enonce","propositions","statut","propositionsQcm","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}