{"version":3,"file":"js/18268.83eae2ad92ca36082db9.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, calcul, texGraphique, resolutionSystemeLineaire2x2 } from '../../modules/outils.js'\nexport const titre = 'Lire les antécédents d’un nombre à partir d’un graphique'\n\n/**\n* Un graphique étant tracé, déterminer les antécédents de nombres donnés.\n* La fonction est un polynome de degré 1, 2 ou 3 et les nombres des questions ne sont que des entiers.\n*\n* @author Rémi Angot\n* 3F13\n*/\nexport default function Antecedent_graphique () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.sup = 2\n  this.spacing = 1\n  context.isHtml ? this.spacingCorr = 3 : this.spacingCorr = 1\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.typeExercice = 'MG32'\n  this.dimensionsDivMg32 = [800, 600]\n  this.pasDeVersionLatex = false\n  this.nbCols = 1\n  this.listePackages = 'pgfplots'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    const codeBase64 = 'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAQzAAACtAAAAQEAAAAAAAAAAQAAAEL#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAOAAFPAMAoAAAAAAAAAAAAAAAAAAAFAAFAeKkeuFHrhEBzy4UeuFHs#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8BAAAAAA4AAAEAAQAAAAEBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8AAAAAAQ4AAUkAwBgAAAAAAAAAAAAAAAAAAAUAAUBCb52yLQ5WAAAAAv####8AAAABAAlDRHJvaXRlQUIA#####wAAAAAAEAAAAQABAAAAAQAAAAP#####AAAAAQAWQ0Ryb2l0ZVBlcnBlbmRpY3VsYWlyZQD#####AAAAAAAOAAABAAEAAAABAAAABP####8AAAABAAlDQ2VyY2xlT0EA#####wEAAAAAAQAAAAEAAAAD#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAUAAAAG#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wEAAAAADgAAAQUAAQAAAAcAAAAJAP####8AAAAAAQ4AAUoAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAQEAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAAQAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAduYmdyYWR4AAIyMAAAAAFANAAAAAAAAAAAABEA#####wAHbmJncmFkeQACMjAAAAABQDQAAAAAAAD#####AAAAAQAUQ0ltcGxlbWVudGF0aW9uUHJvdG8A#####wAUR3JhZHVhdGlvbkF4ZXNSZXBlcmUAAAAbAAAACAAAAAMAAAAKAAAADwAAABD#####AAAAAQATQ0Fic2Npc3NlT3JpZ2luZVJlcAAAAAARAAVhYnNvcgAAAAr#####AAAAAQATQ09yZG9ubmVlT3JpZ2luZVJlcAAAAAARAAVvcmRvcgAAAAoAAAALAAAAABEABnVuaXRleAAAAAr#####AAAAAQAKQ1VuaXRleVJlcAAAAAARAAZ1bml0ZXkAAAAK#####wAAAAEAEENQb2ludERhbnNSZXBlcmUAAAAAEQAAAAAADgAAAQUAAAAACgAAAA4AAAASAAAADgAAABMAAAAWAAAAABEAAAAAAA4AAAEFAAAAAAoAAAANAAAAAA4AAAASAAAADgAAABQAAAAOAAAAEwAAABYAAAAAEQAAAAAADgAAAQUAAAAACgAAAA4AAAASAAAADQAAAAAOAAAAEwAAAA4AAAAVAAAADAAAAAARAAAAFgAAAA4AAAAPAAAADwAAAAARAAAAAAAOAAABBQAAAAAXAAAAGQAAAAwAAAAAEQAAABYAAAAOAAAAEAAAAA8AAAAAEQAAAAAADgAAAQUAAAAAGAAAABv#####AAAAAQAIQ1NlZ21lbnQAAAAAEQEAAAAAEAAAAQABAAAAFwAAABoAAAAXAAAAABEBAAAAABAAAAEAAQAAABgAAAAcAAAABAAAAAARAQAAAAALAAFXAMAUAAAAAAAAwDQAAAAAAAAFAAE#3FZ4mrzfDgAAAB3#####AAAAAgAIQ01lc3VyZVgAAAAAEQAGeENvb3JkAAAACgAAAB8AAAARAAAAABEABWFic3cxAAZ4Q29vcmQAAAAOAAAAIP####8AAAACABJDTGlldU9iamV0UGFyUHRMaWUBAAAAEQBmZmYAAAAfAAAADgAAAA8AAAAfAAAAAgAAAB8AAAAfAAAAEQAAAAARAAVhYnN3MgANMiphYnNvci1hYnN3MQAAAA0BAAAADQIAAAABQAAAAAAAAAAAAAAOAAAAEgAAAA4AAAAhAAAAFgAAAAARAQAAAAALAAABBQAAAAAKAAAADgAAACMAAAAOAAAAEwAAABkBAAAAEQBmZmYAAAAkAAAADgAAAA8AAAAfAAAABQAAAB8AAAAgAAAAIQAAACMAAAAkAAAABAAAAAARAQAAAAALAAFSAEAgAAAAAAAAwCAAAAAAAAAFAAE#0RtOgbToHwAAAB7#####AAAAAgAIQ01lc3VyZVkAAAAAEQAGeUNvb3JkAAAACgAAACYAAAARAAAAABEABW9yZHIxAAZ5Q29vcmQAAAAOAAAAJwAAABkBAAAAEQBmZmYAAAAmAAAADgAAABAAAAAmAAAAAgAAACYAAAAmAAAAEQAAAAARAAVvcmRyMgANMipvcmRvci1vcmRyMQAAAA0BAAAADQIAAAABQAAAAAAAAAAAAAAOAAAAEwAAAA4AAAAoAAAAFgAAAAARAQAAAAALAAABBQAAAAAKAAAADgAAABIAAAAOAAAAKgAAABkBAAAAEQBmZmYAAAArAAAADgAAABAAAAAmAAAABQAAACYAAAAnAAAAKAAAACoAAAAr#####wAAAAIADENDb21tZW50YWlyZQAAAAARAWZmZgAAAAAAAAAAAEAYAAAAAAAAAAAAHwsAAf###wAAAAEAAAAAAAAAAQAAAAAAAAAAAAsjVmFsKGFic3cxKQAAABkBAAAAEQBmZmYAAAAtAAAADgAAAA8AAAAfAAAABAAAAB8AAAAgAAAAIQAAAC0AAAAbAAAAABEBZmZmAAAAAAAAAAAAQBgAAAAAAAAAAAAkCwAB####AAAAAQAAAAAAAAABAAAAAAAAAAAACyNWYWwoYWJzdzIpAAAAGQEAAAARAGZmZgAAAC8AAAAOAAAADwAAAB8AAAAGAAAAHwAAACAAAAAhAAAAIwAAACQAAAAvAAAAGwAAAAARAWZmZgDAIAAAAAAAAD#wAAAAAAAAAAAAJgsAAf###wAAAAIAAAABAAAAAQAAAAAAAAAAAAsjVmFsKG9yZHIxKQAAABkBAAAAEQBmZmYAAAAxAAAADgAAABAAAAAmAAAABAAAACYAAAAnAAAAKAAAADEAAAAbAAAAABEBZmZmAMAcAAAAAAAAAAAAAAAAAAAAAAArCwAB####AAAAAgAAAAEAAAABAAAAAAAAAAAACyNWYWwob3JkcjIpAAAAGQEAAAARAGZmZgAAADMAAAAOAAAAEAAAACYAAAAGAAAAJgAAACcAAAAoAAAAKgAAACsAAAAz#####wAAAAEABUNGb25jAP####8AAWYACC0yKngqeCszAAAADQD#####AAAAAQAMQ01vaW5zVW5haXJlAAAADQIAAAANAgAAAAFAAAAAAAAAAP####8AAAACABFDVmFyaWFibGVGb3JtZWxsZQAAAAAAAAAeAAAAAAAAAAFACAAAAAAAAAABeAAAAAQA#####wEAAAAAEAABeAAAAAAAAAAAAEAIAAAAAAAABQABQC8BAyKX1IIAAAAEAAAAGAD#####AAJ4MQAAAAoAAAA2AAAAEQD#####AAJ5MQAFZih4MSn#####AAAAAQAOQ0FwcGVsRm9uY3Rpb24AAAA1AAAADgAAADcAAAAWAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAABQAAAAAKAAAADgAAADcAAAAOAAAAOP####8AAAACAA1DTGlldURlUG9pbnRzAP####8AAAD#AAIAAAA5AAAB9AABAAAANgAAAAQAAAA2AAAANwAAADgAAAA5#####wAAAAEAFUNQb2ludExpZUxpZXVQYXJQdExpZQD#####AAAAAAAQAAFNAAAAAAAAAAAAQAgAAAAAAAAJAAG#fx#Yd2ToAAAAADq#fx#Yd2ToAAAAAAMA#####wEAAAABEAAAAQABAAAAOwA#8AAAAAAAAAAAAAMA#####wEAAAABEAAAAQABAAAAOwE#8AAAAAAAAP####8AAAABABBDSW50RHJvaXRlRHJvaXRlAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAAAEAAAAPAAAACIA#####wEAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAAUAAAA9AAAAFwD#####AAAAAAAQAAABAQEAAAA7AAAAPgAAABcA#####wAAAAAAEAAAAQEBAAAAOwAAAD8AAAAO##########8='\n\n    let a, b, c, d, x1, x2, x3, fx1, fx2, fx3, expressionF, numa, dena, numb, denb, ymax, texte, texteCorr\n\n    function initialise_variables () {\n      if (context.isHtml) { // repère -10 || 10\n        x1 = randint(-6, -3)\n        x2 = randint(x1 + 3, 2)\n        x3 = randint(x2 + 2, 8)\n        fx1 = randint(-5, 5)\n        fx2 = randint(-6, 6, fx1)\n        fx3 = randint(-5, 5)\n        d = randint(-5, 5)\n        c = randint(-5, 5)\n        ymax = 7\n      } else { // repère -5 || 5\n        x1 = randint(-4, -2)\n        x2 = randint(-1, 2, [0])\n        x3 = randint(3, 4)\n        fx1 = randint(-4, 4)\n        fx2 = randint(-4, 4, fx1)\n        fx3 = randint(-4, 4)\n        d = randint(-3, 3)\n        c = randint(-3, 3)\n        ymax = 4\n      }\n    };\n\n    initialise_variables()\n\n    texte = 'On a tracé ci-dessous la courbe représentative de la fonction $f$.<br>'\n\n    if (this.sup == 1) {\n      a = calcul((fx2 - fx1) / (x2 - x1))\n      b = calcul(fx1 - a * x1)\n      expressionF = `${a}*x+(${b})`\n      if (fx2 != fx1) {\n        texte += `Déterminer par lecture graphique les antécédents de $${fx1}$ et de $${fx2}$ par cette fonction $f$.<br><br>`\n        texteCorr = `L'antécédent de $${fx1}$ est $${x1}$, on note $f(${x1})=${fx1}$.<br>`\n        texteCorr += `L'antécédent de $${fx2}$ est $${x2}$, on note $f(${x2})=${fx2}$.`\n      } else {\n        texte += `Déterminer par lecture graphique les antécédents de $${fx1}$ par cette fonction $f$.<br><br>`\n        texteCorr = `$${fx1}$ possède une infinité d'antécédents : on note $f(x)=${fx1}$ quel que soit $x$.<br>`\n      }\n    }\n\n    if (this.sup == 2) {\n      if (randint(1, 4) < 2) { // une fois sur 4 il n'y a qu'un seul antécédent\n        const x0 = randint(-2, 2)\n        let fx0 = randint(-4, 4)\n        if (!context.isHtml) {\n          fx0 = randint(-2, 2)\n        }\n        a = randint(-3, 3, 0)\n        texte += `Déterminer par lecture graphique le (ou les) antécédent(s) de $${fx0}$ par cette fonction $f$.<br><br>`\n        texteCorr = `$${fx0}$ a un unique antécédent $${x0}$, on note $f(${x0})=${fx0}$.<br>`\n        expressionF = `${a}*(x-(${x0}))^2+(${fx0})`\n      } else {\n        fx3 = fx1;\n        [[numa, dena], [numb, denb]] = resolutionSystemeLineaire2x2(x1, x3, fx1, fx3, c)\n        while (dena == 0 || denb == 0 || numa == 0) {\n          x1 = randint(-4, -1)\n          x3 = randint(1, 4)\n          context.isHtml ? fx1 = randint(-7, 7) : fx1 = randint(-3, 3)\n          fx3 = fx1\n          context.isHtml ? c = randint(-6, 6) : c = randint(-4, 4);\n\n          [[numa, dena], [numb, denb]] = resolutionSystemeLineaire2x2(x1, x3, fx1, fx3, c)\n        }\n        a = numa / dena\n        b = numb / denb\n        x2 = 0\n        fx2 = c\n        expressionF = `${a}*x^2+(${b})*x+(${c})`\n        texte += `Déterminer par lecture graphique le (ou les) antécédent(s) de $${fx1}$ par cette fonction $f$.<br><br>`\n        texteCorr = `$${fx1}$ a deux antécédents $${x1}$ et $${x3}$, on note $f(${x1})=f(${x3})=${fx1}$.<br>`\n      }\n    }\n\n    if (!context.isHtml) {\n      texte += '\\n\\n'\n      texte += texGraphique(expressionF)\n    }\n\n    this.MG32codeBase64 = codeBase64\n    this.mg32init = (mtgApp, idDoc) => {\n      mtgApp.giveFormula2(idDoc, 'f', expressionF)\n      mtgApp.calculate(idDoc)\n      mtgApp.display(idDoc)\n    }\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n\n  this.besoinFormulaireNumerique = ['Type de fonctions', 2, '1 : Affine\\n2 : Polynome du 2nd degré']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Antecedent_graphique","Exercice","this","consigne","sup","spacing","context","spacingCorr","nbQuestions","nbQuestionsModifiable","typeExercice","dimensionsDivMg32","pasDeVersionLatex","nbCols","listePackages","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","contenu","contenuCorrection","a","b","c","d","x1","x2","x3","fx1","fx2","fx3","expressionF","numa","dena","numb","denb","ymax","texte","texteCorr","randint","calcul","x0","fx0","resolutionSystemeLineaire2x2","texGraphique","MG32codeBase64","mg32init","mtgApp","idDoc","giveFormula2","calculate","display","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","autoCorrection","tableauSolutionsDuQcm","consigneModifiable","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}