{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta4G20-3.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","Calculer_valeur_manquante_visuel_pythagore","objetsEnonce","objetsEnonceml","objetsCorrection","paramsEnonce","paramsCorrection","listeTypeDeQuestions","combinaisonListes","context","A","point","B","C","p1","polygone","isVisible","p2","rotation","randint","a","listePoints","b","c","car1","codageAngleDroit","carre","couleurDeRemplissage","bar1","barycentre","positionLabel","car2","bar2","car3","bar3","latexParPoint","afficheLongueurSegment","texte","texteCorr","i","cpt","xmin","ymin","xmax","ymax","pixelsParCm","scale","mainlevee","mathalea2d","indexOf","push","listeQuestionsToContenu"],"mappings":"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","file":"js/707.435f85df8a1ba668c119.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,combinaisonListes} from '../../modules/outils.js'\nimport {mathalea2d} from '../../modules/2d.js'\n\nexport const titre = 'Calculer une valeur manquante avec l’égalité de Pythagore'\n\nexport default function Calculer_valeur_manquante_visuel_pythagore() {\n    \"use strict\"\n    Exercice.call(this)\n    this.titre = titre;\n    this.consigne = \"Dans chaque cas, calculer la valeur manquante indiquée par un point d'interrogation.\";\n    this.nbQuestions = 4; // Ici le nombre de questions\n    this.nbQuestionsModifiable=true // Active le formulaire nombre de questions\n    this.nbCols = 1; // Le nombre de colonnes dans l'énoncé LaTeX\n    this.nbColsCorr = 1;// Le nombre de colonne pour la correction LaTeX\n  \n  \n    this.nouvelleVersion = function () {\n    this.listeQuestions = []; // tableau contenant la liste des questions \n    this.listeCorrections = [];\n    let typesDeQuestionsDisponibles=[1,2,3,4]; // tableau à compléter par valeurs possibles des types de questions\n    let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions);\n  \n    let objetsEnonce,objetsEnonceml,objetsCorrection,paramsEnonce,paramsCorrection\n      context.fenetreMathalea2d = [-11.7,-6.4,18.3,13.6]\nlet A=point(4,0,'A')\nlet B=point(0,3,'B')\nlet C=point(0,0,'C')\nlet p1=polygone(A,B,C)\np1.isVisible=false\nlet p2=rotation(p1,C,randint(0,359))\nlet a=p2.listePoints[0]\nlet b=p2.listePoints[1]\nlet c=p2.listePoints[2]\nlet codage=codageAngleDroit(a,c,b)\nlet car1=carre(b,a)\ncar1.couleurDeRemplissage='red'\nlet bar1=barycentre(car1)\nbar1.positionLabel='center'\nlet car2=carre(c,b)\ncar2.couleurDeRemplissage='blue'\nlet bar2=barycentre(car2)\nbar2.positionLabel='center'\nlet car3=carre(a,c)\ncar3.couleurDeRemplissage='green'\nlet bar3=barycentre(car3)\nbar3.positionLabel='center'\nlet q1=latexParPoint('? \\\\text{ cm}^2',bar1)\nlet l1=afficheLongueurSegment(b,c)\nlet l2=afficheLongueurSegment(c,a)\nlet q2=latexParPoint('9 \\\\text{ cm}^2',bar2)\nlet q3=latexParPoint('16 \\\\text{ cm}^2',bar3)\n  \n      for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n        objetsEnonce = [] // on initialise le tableau des objets Mathalea2d de l'enoncé\n        objetsEnonceml = [] // Idem pour l'enoncé à main levée si besoin\n        objetsCorrection = [] // Idem pour la correction\n  \n        texte = `` // Nous utilisons souvent cette variable pour construire le texte de la question.\n        texteCorr = `` // Idem pour le texte de la correction.\n\n        switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n          case 1:\n               \n            //ici sont créés les texte, tex_corr, objets mathalea2d divers entrant dans le contenu de l'exercice\n          break;\n  \n          case 2:\n            // Idem Cas1 mais avec d'autres texte, texteCorr...\n          break\n  \n          case 3:\n            \n          break\n            \n          case 4:\n          \n          break  \n            \n        }\n  //  objetsEnonce.push () // On rempli les tableaux d'objets Mathalea2d\n  //  objetsEnonceml.push()\n  //  objetsCorrection.push()\n  \n  //paramètres de la fenêtre Mathalea2d pour l'énoncé main levée\n    //    paramsEnonceml = { xmin: Math.min(objetsEnonceml.x), ymin: Math.min(objetsEnonceml.y), xmax: Math.max(objetsEnonceml.x), ymax: Math.max(objetsEnonceml.y), pixelsParCm: 20, scale: 1, mainlevee: true, amplitude: 1 }\n  //paramètres de la fenêtre Mathalea2d pour l'énoncé normal\n        paramsEnonce = { xmin:-10, ymin: -10, xmax: 10, ymax: 10, pixelsParCm: 20, scale: 1, mainlevee: false}\n  //paramètres de la fenêtre Mathalea2d pour la correction\n        paramsCorrection = { xmin: -10, ymin: -10, xmax: 10, ymax: 10, pixelsParCm: 20, scale: 1 }\n  // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n        texte += mathalea2d(paramsEnonce, objetsEnonce)\n  // On ajoute au texte de la correction, la figure de la correction\n        texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n        if (this.listeQuestions.indexOf(texte) === -1) {\n          // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n          this.listeQuestions.push(texte);\n          this.listeCorrections.push(texteCorr);\n          i++;\n        }\n        cpt++;\n      }\n      listeQuestionsToContenu(this); // On envoie l'exercice à la fonction de mise en page\n    };\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  \n  //\tthis.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n  \n  } // Fin de l'exercice.\n  \n\n\n\n\n\n"],"sourceRoot":""}