{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5N20.js","webpack://mathalea/./src/js/exercices/6e/6C23.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","amcType","interactifReady","titre","ExerciceAdditionnerSoustraireFractions5e","max","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","qcmDisponible","modeQcm","nouvelleVersion","listeTypeDeQuestions","parseInt","qcm","level","listeQuestions","listeCorrections","combinaisonListes","a","b","c","d","k","texte","texteCorr","i","autoCorrection","randint","choice","propositions","texFractionReduite","statut","texFraction","options","ordered","lastChoice","ordreDesFractions","enonce","miseEnEvidence","s","pgcd","calcul","context","interactif","propositionsQcm","Math","abs","replaceAll","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","ExerciceAdditionnerFractions6e","ExerciceAdditionnerOuSoustraireDesFractions5e","besoinFormulaireNumerique2","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceInteractif","exercice","document","addEventListener","button","querySelector","event","spanReponseLigne","champTexte","getElementById","value","reponse","valeur","toString","innerHTML","readOnly","style","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","length","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","feedback","messageFeedback","id","message","type","querySelectorAll","uicheck","exerciceQcm","espace","undefined","shuffleJusqua","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","valeurs","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","reponses","Array","isArray","param","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","includes","div","cssIcon","remove","divTitre","test","messageUtilisateur","code","width"],"mappings":"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","file":"js/1311.636ff01ddef01957d9ab.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { calcul, listeQuestionsToContenu, randint, choice, combinaisonListes, abs, pgcd, miseEnEvidence, texFraction, texFractionReduite } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType =1 // QCM \nexport const interactifReady = true\n\nexport const titre = 'Additionner ou soustraire deux fractions (dénominateurs multiples)'\n\n/**\n* Effectuer l'addition ou la soustraction de deux fractions dont un dénominateur est un multiple de l'autre.\n*\n* Le résultat de la soustraction sera toujours positif.\n*\n* Le coefficient est paramétrable, par défaut il est inférieur à 11.\n*\n* On peut paramétrer de n'avoir que des soustractions.\n* @author Rémi Angot\n* 5N20\n*/\nexport default function ExerciceAdditionnerSoustraireFractions5e (max = 11) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.sup = max // Correspond au facteur commun\n  this.sup2 = false // Si true alors il n'y aura que des soustractions\n  this.titre = titre\n  this.consigne = \"Calculer et donner le résultat sous la forme d'une fraction simplifiée\"\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.sup2 = 3\n  /** ************ modeQcm disponible dans Mathalea ***********************/\n  this.qcmDisponible = true\n  this.modeQcm = false\n  /***********************************************************************/\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.qcm = ['5N20', [], 'Additionner ou soustraire deux fractions (dénominateurs multiples)', 1]\n    if (this.level === 6) this.qcm[0] = '6C23'\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    if (this.sup2 === 1) {\n      listeTypeDeQuestions = combinaisonListes(['+'], this.nbQuestions)\n    }\n    if (this.sup2 === 2) {\n      listeTypeDeQuestions = combinaisonListes(['-'], this.nbQuestions)\n    }\n    if (this.sup2 === 3) {\n      listeTypeDeQuestions = combinaisonListes(['+', '-'], this.nbQuestions)\n    }\n    for (let i = 0, a, b, c, d, k, texte, texteCorr; i < this.nbQuestions; i++) {\n      this.autoCorrection[i] = {}\n      texteCorr = ''\n      // les numérateurs\n      a = randint(1, 9)\n      // les dénominateurs\n      b = randint(2, 9, a)\n      while (b === a) {\n        b = randint(2, 9) // pas de fraction avec numérateur et dénominateur égaux\n      }\n      if (this.sup > 1) {\n        k = randint(2, this.sup)\n      } else k = 1\n      d = b * k\n      if (listeTypeDeQuestions[i] === '-') {\n        c = choice([randint(1, b * k), randint(b * k, 9 * k)])\n      } else {\n        c = randint(1, 19, d)\n      }\n      if (listeTypeDeQuestions[i] === '+') { // une addition\n        /** ***************** Choix des réponses du QCM ***********************************/\n        this.autoCorrection[i].propositions = [\n          {\n            texte: `$${texFractionReduite(a * d + c * b, b * d)}$`,\n            statut: true\n          },\n          {\n            texte: `$${texFraction(a + c, b + d)}$`,\n            statut: false\n          },\n          {\n            texte: `$${texFraction(a + c, b * d)}$`,\n            statut: false\n          },\n          {\n            texte: `$${texFraction(a * c, b * d)}$`,\n            statut: false\n          }\n        ]\n        this.autoCorrection[i].options = {\n          ordered: false,\n          lastChoice: 5\n        }\n        if (this.level === 6) {\n          // En 6e, pas de fraction simplifiée\n          // Les fractions ont le même dénominateur (b=d)\n          this.autoCorrection[i].propositions[0].texte = `$${texFraction(a + c, b )}$`\n        }\n        /*************************************************************************/\n        const ordreDesFractions = randint(1, 2)\n        if (ordreDesFractions === 1) {\n          texte = `$${texFraction(a, b)}+${texFraction(c, d)}=$`\n          /** ****************** AMC question/questionmult ********************************/\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          /*******************************************************************************/\n        } else {\n          texte = `$${texFraction(c, d)}+${texFraction(a, b)}=$`\n          /** ****************** AMC question/questionmult ******************************/\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          /*******************************************************************************/\n        }\n\n        if (ordreDesFractions === 1) {\n          texteCorr = `$${texFraction(a, b)}+${texFraction(c, d)}=`\n\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}+${texFraction(c, d)}=${texFraction(a * k, b * k)}+${texFraction(c, d)}=`\n          }\n          texteCorr += `${texFraction(a * k + '+' + c, d)}=${texFraction(a * k + c, d)}$`\n        } else {\n          texteCorr = `$${texFraction(c, d)}+${texFraction(a, b)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(c, d)}+${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}=${texFraction(c, d)}+${texFraction(a * k, b * k)}=`\n          }\n          texteCorr += `${texFraction(c + '+' + a * k, d)}=${texFraction(a * k + c, d)}$`\n        }\n        // Est-ce que le résultat est simplifiable ?\n        const s = pgcd(a * k + c, d)\n        if (s !== 1) {\n          texteCorr += `$=${texFraction(calcul((a * k + c) / s) + miseEnEvidence('\\\\times ' + s), calcul(d / s) + miseEnEvidence('\\\\times ' + s))}=${texFractionReduite(calcul((a * k + c) / s), calcul(d / s))}$`\n        }\n        if ((this.modeQcm && !context.isAmc) || this.interactif) {\n          texte += '<br>' + propositionsQcm(this, i).texte\n        }\n      } else { // une soustraction\n        /** ***************** Choix des réponses du QCM ***********************************/\n        this.autoCorrection[i].propositions = [\n          {\n            texte: `$${texFractionReduite(Math.abs(a * d - c * b), Math.abs(b * d))}$`,\n            statut: true\n          },\n          {\n            texte: `$${texFraction(Math.abs(a - c), Math.abs(b - d))}$`,\n            statut: false\n          },\n          {\n            texte: `$${texFraction(Math.abs(a - c), b * d)}$`,\n            statut: false\n          },\n          {\n            texte: `$${texFraction(a * c, b * d)}$`,\n            statut: false\n          }\n        ]\n        this.autoCorrection[i].options = {\n          ordered: false,\n          lastChoice: 5\n        }\n        if (this.level === 6) {\n          // En 6e, pas de fraction simplifiée\n          // Les fractions ont le même dénominateur (b=d)\n          this.autoCorrection[i].propositions[0].texte = `$${texFraction(Math.abs(a - c), b )}$`\n        }\n        /*********************************************************************************/\n        if ((a / b) > (c / d)) {\n          texte = `$${texFraction(a, b)}-${texFraction(c, d)}=$`\n        } else {\n          texte = `$${texFraction(c, d)}-${texFraction(a, b)}=$`\n          /** ****************** AMC question/questionmult ******************************/\n\n          /*****************************************************************************/\n        }\n        if ((a / b) > (c / d)) {\n          texteCorr = `$${texFraction(a, b)}-${texFraction(c, d)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}-${texFraction(c, d)}=${texFraction(a * k, b * k)}-${texFraction(c, d)}=`\n          }\n          texteCorr += `${texFraction(a * k + '-' + c, d)}=${texFraction(a * k - c, d)}$`\n        } else {\n          texteCorr = `$${texFraction(c, d)}-${texFraction(a, b)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(c, d)}-${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}=${texFraction(c, d)}-${texFraction(a * k, b * k)}=${texFraction(c + '-' + a * k, d)}=`\n          }\n          texteCorr += `${texFraction(c - a * k, d)}$`\n        }\n        // Est-ce que le résultat est simplifiable ?\n        const s = pgcd(a * k - c, d)\n        if (!this.modeQcm) {\n          if (abs(a * k - c) % d === 0) { // si la fraction peut-être un nombre entier\n            texteCorr += `$=${calcul((abs(a * k - c)) / d)}$`\n          } else if (s !== 1) {\n            texteCorr += `$=${texFraction(calcul((abs(a * k - c)) / s) + miseEnEvidence('\\\\times ' + s), calcul(d / s) + miseEnEvidence('\\\\times ' + s))}=${texFractionReduite(calcul((abs(a * k - c)) / s), calcul(d / s))}$`\n          }\n        }\n        if ((this.modeQcm && !context.isAmc) || this.interactif) {\n          texte += '<br>' + propositionsQcm(this, i).texte\n        }\n      }\n\n      texte = texte.replaceAll('$$', ' ')\n      texteCorr = texteCorr.replaceAll('$$', ' ')\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n\n  this.besoinFormulaireNumerique = ['Valeur maximale du coefficient multiplicateur', 99999]\n  this.besoinFormulaire2Numerique = ['Types de calculs ', 3, '1 : Additions\\n2 : Soustractions\\n3 : Additions et soustractions']\n}\n","import ExerciceAdditionnerOuSoustraireDesFractions5e from '../5e/5N20.js'\n\nexport const amcReady = true\nexport const interactifReady = true\nexport const amcType =1 //type de question AMC \n\nexport const titre = 'Additionner ou soustraire des fractions de même dénominateur'\n\nexport default function ExerciceAdditionnerFractions6e () {\n  ExerciceAdditionnerOuSoustraireDesFractions5e.call(this)\n  this.sup = 1\n  this.sup2 = 3\n  this.level = 6\n  this.titre = titre\n  this.besoinFormulaireNumerique2 = false\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.amcReady = amcReady\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1 && exercice.autoCorrection[i].propositions[indiceFeedback].feedback) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              message: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.', ',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true, indice } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}${indice || ''}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {array || number} a\n */\nexport function setReponse (exercice, i, valeurs, { digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0 } = {}) {\n  let reponses = []\n  if (!Array.isArray(valeurs)) {\n    reponses = [valeurs]\n  } else {\n    reponses = valeurs\n  }\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n  for (const reponse of reponses) {\n    exercice.autoCorrection[i].reponse.valeur = reponse\n  }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (const prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n/**\n * Fonctions pour gérer les messages utilisateur (feedback erreur|warning ou messages positifs)\n * @module\n */\n\n/**\n * Les types possibles\n * @type {string[]}\n */\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} feedback\n * @param {string} feedback.message\n * @param {string} [feedback.type=error]\n * @param {string} [feedback.titre]\n * @return {HTMLElement} L'élément du feedback (déjà ajouté dans le container)\n */\nexport function addFeedback (container, { message, type = 'error', titre } = {}) {\n  if (!types.includes(type)) {\n    console.error(Error(`type de message inconnu : ${type}`))\n    type = 'error'\n  }\n  if (!message) throw Error('Message obligatoire pour tout retour utilisateur')\n  const cssDiv = type === 'info' ? '' : type\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = type === 'error'\n    ? 'frown outline'\n    : (type === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  if (/<[a-zA-Z0-9_ \"']+/.test(message)) div.innerHTML += message\n  else addText(div, message)\n  return div\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        type: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} feedback\n * @param {string} feedback.id id du div conteneur à utiliser\n * @param {string} feedback.message Le message à afficher\n * @param {string} feedback.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, message = '', type = 'error' } = {}) {\n  if (!id || !message) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message, type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}