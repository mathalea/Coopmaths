{"version":3,"file":"js/41457.2db9c195d5c6ed7ac000.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C12-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, texNombre, texteEnCouleurEtGras, texteGras, prenomM, arrondi, prenomF, nomDuMois, jour, rangeMinMax, compteOccurences, contraindreValeur, combinaisonListes, sp } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const amcType = 'qcmMult' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = ['qcm']\n\nexport const titre = 'Trouver les informations utiles ou inutiles pour résoudre des problèmes'\n\n// Gestion de la date de publication initiale\nexport const dateDePublication = '01/12/2021'\n\n/**\n * Trouver les informations utiles ou inutiles pour résoudre des problèmes\n * On peut choisir des problèmes qui n'ont pas de solution.\n * @author Eric Elter\n* Référence 6C12-3\n */\nexport default function ExerciceInformationsProblemes () {\n  // Multiplier deux nombres\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 1\n  this.sup2 = 11\n  this.sup3 = false\n  this.titre = titre\n  this.spacing = 2\n  this.tailleDiaporama = 3\n  this.nbQuestions = 10\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.sup = parseInt(this.sup)\n    // Ebauche de la consigne en fonction des possibilités\n    const cocheIndique = ['coche', 'indique']\n    const chaqueCe = ['chaque', 'ce']\n    const affirmatifNegatif = ['servent', 'ne servent pas']\n    this.consigne = 'Dans '\n    this.nbQuestions === 1 ? this.consigne += chaqueCe[1] : this.consigne += chaqueCe[0]\n    this.consigne += ' problème, '\n    context.isDiaporama ? this.consigne += cocheIndique[1] : this.consigne += cocheIndique[0]\n    this.consigne += ' les informations qui '\n    this.sup !== 1 ? this.consigne += affirmatifNegatif[1] : this.consigne += affirmatifNegatif[0]\n    this.consigne += ' à sa résolution.'\n    // Fin de l'ébauche de la consigne en fonction des possibilités\n\n    let listeDesProblemes = []\n    if (!this.sup2) { // Si aucune liste n'est saisie\n      listeDesProblemes = rangeMinMax(1, 10)\n    } else {\n      if (typeof (this.sup2) === 'number') { // Si c'est un nombre c'est que le nombre a été saisi dans la barre d'adresses\n        listeDesProblemes[0] = contraindreValeur(1, 11, this.sup2, 11)\n      } else {\n        listeDesProblemes = this.sup2.split('-')// Sinon on créé un tableau à partir des valeurs séparées par des -\n        for (let i = 0; i < listeDesProblemes.length; i++) { // on a un tableau avec des strings : ['1', '1', '2']\n          listeDesProblemes[i] = contraindreValeur(1, 11, parseInt(listeDesProblemes[i]), 11) // parseInt en fait un tableau d'entiers\n        }\n      }\n    }\n    if (compteOccurences(listeDesProblemes, 11) > 0) listeDesProblemes = rangeMinMax(1, 10) // Teste si l'utilisateur a choisi tout\n    listeDesProblemes = combinaisonListes(listeDesProblemes, this.nbQuestions)\n    const FamilleH = ['père', 'frère', 'cousin', 'grand-père', 'voisin']\n    const FamilleF = ['mère', 'sœur', 'cousine', 'grand-mère', 'tante', 'voisine']\n\n    let choixVersion = 0\n\n    for (\n      let i = 0, nb, nb1, nb2, nb3, nb4, nb5, quidam, quidam2, personnage1, texte, texteCorr;\n      i < this.nbQuestions;\n      i++\n    ) {\n      this.autoCorrection[i] = {}\n      choixVersion = this.sup3 ? choice([1, 2, 3]) : choice([1, 2])\n      texte = ''\n      texteCorr = ''\n      switch (listeDesProblemes[i]) {\n        case 1 :\n          nb1 = randint(17, 35)\n          nb2 = randint(7, 15)\n          nb4 = randint(3, 10)\n          nb5 = 10 * randint(20, 60)\n          texte += `Dans une classe de ${nb1} élèves âgés de ${nb2}  à ${nb2 + 2}  ans,`\n          texte += ` un professeur distribue à chaque enfant ${nb4} livres pesant en moyenne ${nb5} g chacun.<br>`\n\n          switch (choixVersion) {\n            case 1:\n              texte += 'Quel est le nombre total de livres distribués ?'\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' élèves')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4 + ' livres') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb1) + '$\\\\times$' + texteEnCouleurEtGras(nb4 + ' livres') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb2 + ' ans') + ', ' + texteEnCouleurEtGras(nb2 + 2 + ' ans')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' g') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb1) + '$\\\\times$' + texteGras(nb4 + ' livres') + '.'\n              }\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} élèves`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb2} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2 + 2} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} livres`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5} g`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n            case 2:\n              texte += 'Quelle est la masse moyenne des livres distribués à chaque enfant ?'\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb5 + ' g')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4 + ' livres') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb5 + ' g ') + '$\\\\times$' + texteEnCouleurEtGras(nb4) + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb2 + ' ans') + ', ' + texteEnCouleurEtGras(nb2 + 2 + ' ans')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb1 + ' élèves') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb5 + ' g ') + '$\\\\times$' + texteGras(nb4) + '.'\n              }\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} élèves`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2 + 2} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} livres`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5} g`,\n                  statut: this.sup === 1\n                }\n              ]\n\n              break\n            default:\n              texte += `Quel est, dans cette classe, le nombre exact d'enfants de ${nb2 + 1} ans ?`\n              if (this.sup === 1) {\n                texteCorr += 'Aucune donnée n\\'est utile pour la résolution du problème.<br>'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' élèves') + ', ' + texteEnCouleurEtGras(nb2 + ' ans') + ', '\n                texteCorr += texteEnCouleurEtGras(nb2 + 2 + ' ans') + ', ' + texteEnCouleurEtGras(nb4 + ' livres')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' g') + ' ne sont pas utiles pour la résolution du problème.<br>'\n              }\n              texteCorr += 'On ne peut pas répondre à ce problème. Il manque des informations.'\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} élèves`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2 + 2} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} livres`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} g`,\n                  statut: this.sup !== 1\n                }\n              ]\n\n              break\n          }\n          break\n        case 2:\n          quidam = prenomM()\n          nb1 = randint(2, 5)\n          nb2 = choice([250, 500, 600, 750])\n          nb3 = texNombre(arrondi(randint(10, 50) / 10 + randint(1, 9) / 100))\n          nb4 = randint(2, 5, [nb1])\n          nb5 = texNombre(arrondi(randint(20, 40) / 10 + randint(1, 9) / 100))\n          texte += `Au marché, ${quidam} achète ${nb1} barquettes de haricots verts de ${nb2}${sp(1)}g chacune à ${nb3}${sp(1)}€ pièce `\n          texte += ` et ${nb4}${sp(1)}ananas coûtant ${nb5}${sp(1)}€ l'unité.<br>`\n\n          switch (choixVersion) {\n            case 1:\n              texte += 'Quel est le prix total des fruits achetés ?'\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb4 + ' ananas')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' €') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb4) + '$\\\\times$' + texteEnCouleurEtGras(nb5 + ' €') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' barquettes') + ', ' + texteEnCouleurEtGras(nb2 + ' g')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb3 + ' €') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb4) + '$\\\\times$' + texteGras(nb5 + ' €') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} barquettes`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} g`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} €`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} ananas`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5} €`,\n                  statut: this.sup === 1\n                }\n              ]\n              break\n            case 2:\n              texte += 'Quel est le prix total des légumes achetés ?'\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' barquettes')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb3 + ' €') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb1) + '$\\\\times$' + texteEnCouleurEtGras(nb3 + ' €') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb4 + ' ananas') + ', ' + texteEnCouleurEtGras(nb2 + ' g')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' €') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb1) + '$\\\\times$' + texteGras(nb3 + ' €') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} barquettes`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb2} g`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} €`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb4} ananas`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} €`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n            default:\n              texte += 'Quel est le prix total des boissons achetées ?'\n              if (this.sup === 1) {\n                texteCorr += 'Aucune donnée n\\'est utile pour la résolution du problème.<br>'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' barquettes') + ', ' + texteEnCouleurEtGras(nb2 + ' g') + ', '\n                texteCorr += texteEnCouleurEtGras(nb3 + ' €') + ', ' + texteEnCouleurEtGras(nb4 + ' ananas')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' €') + ' ne sont pas utiles pour la résolution du problème.<br>'\n              }\n              texteCorr += 'On ne peut pas répondre à ce problème. Il manque des informations.'\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} barquettes`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} g`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} €`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} ananas`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} €`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n          }\n          break\n\n        case 3:\n          quidam = prenomM()\n          quidam2 = prenomF()\n          nb1 = randint(501, 978)\n          nb2 = randint(230, 450)\n          nb3 = randint(5, 11)\n          nb4 = randint(110, 230)\n          nb5 = randint(128, nb1 / 2)\n          texte += `Le village de Sainte-${quidam2}-Les-Trois-Vallées compte ${nb1} habitants et se situe à une altitude de ${nb2} m.`\n          texte += ` À ${nb3} km de là, le village de Saint-${quidam}-Le-Bouquetin, situé ${nb4} m plus haut, compte ${nb5} habitants de moins.<br>`\n\n          switch (choixVersion) {\n            case 1:\n              texte += `Combien d'habitants compte le village de Saint-${quidam}-Le-Bouquetin ?`\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' habitants')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' habitants') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb1 + ' habitants ') + '$-$' + texteEnCouleurEtGras(nb5 + ' habitants') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb2 + ' m') + ', ' + texteEnCouleurEtGras(nb3 + ' km')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4 + ' m') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb1 + ' habitants') + '$-$' + texteGras(nb5 + ' habitants') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} habitants`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb2} m`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} km`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} m`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} habitants`,\n                  statut: this.sup === 1\n                }\n              ]\n              break\n            case 2:\n              texte += `À quelle altitude se situe le village de Saint-${quidam}-Le-Bouquetin ?`\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb2 + ' m')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4 + ' m') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb2 + ' m') + '$+$' + texteEnCouleurEtGras(nb4 + ' m') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' habitants') + ', ' + texteEnCouleurEtGras(nb3 + ' km')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' habitants') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb2 + ' m') + '$+$' + texteGras(nb4 + ' m') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} habitants`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} m`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb3} km`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} m`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5} habitants`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n            default:\n              texte += `Combien de garçons compte le village de Sainte-${quidam2}-Les-Trois-Vallées ?`\n              if (this.sup === 1) {\n                texteCorr += 'Aucune donnée n\\'est utile pour la résolution du problème.<br>'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' habitants') + ', ' + texteEnCouleurEtGras(nb2 + ' m') + ', '\n                texteCorr += texteEnCouleurEtGras(nb3 + ' km') + ', ' + texteEnCouleurEtGras(nb4 + ' m')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' habitants') + ' ne sont pas utiles pour la résolution du problème.<br>'\n              }\n              texteCorr += 'On ne peut pas répondre à ce problème. Il manque des informations.'\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} habitants`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} m`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} km`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} m`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} habitants`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n          }\n          break\n        case 4:\n          personnage1 = choice(FamilleH)\n          quidam2 = prenomF()\n          nb1 = '1 h ' + 5 * randint(1, 10) + ' min'\n          nb2 = texNombre(arrondi(randint(50, 90) / 10 + randint(1, 9) / 100))\n          nb3 = randint(5, 9)\n          nb4 = choice([10, 20, 50])\n          nb5 = 4 * randint(12, 24)\n          texte += `${quidam2} vient de lire en ${nb1} un manga qu'elle avait payé ${nb2} €. `\n          texte += `Elle a remarqué que sur chaque page, il y avait exactement ${nb3} cases. `\n          texte += `C'est grâce au billet de ${nb4} € que lui a donné son ${personnage1}, que ${quidam2} a pu s'acheter ce livre de ${nb5} pages.<br>`\n\n          switch (choixVersion) {\n            case 1:\n              texte += `Combien y a-t-il de cases dans le manga de ${quidam2} ?`\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb3 + ' cases')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' pages') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb3 + ' cases ') + '$\\\\times$' + texteEnCouleurEtGras(nb5) + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1) + ', ' + texteEnCouleurEtGras(nb2 + ' €')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4 + ' €') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb3 + ' cases') + '$\\\\times$' + texteGras(nb5) + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} €`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} cases`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb4} €`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} pages`,\n                  statut: this.sup === 1\n                }\n              ]\n              break\n            case 2:\n              texte += `Lorsqu'elle a acheté son manga, quelle somme d'argent a-t-on rendu à ${quidam2} ?`\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb2 + ' €')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4 + ' €') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb4 + ' €') + '$-$' + texteEnCouleurEtGras(nb2 + ' €') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1) + ', ' + texteEnCouleurEtGras(nb3 + ' cases')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' pages') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb4 + ' €') + '$-$' + texteGras(nb2 + ' €') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} €`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb3} cases`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} €`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5} pages`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n            default:\n              texte += `À quelle heure ${quidam2} a-t-elle commencé à lire son manga ?`\n              if (this.sup === 1) {\n                texteCorr += 'Aucune donnée n\\'est utile pour la résolution du problème.<br>'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1) + ', ' + texteEnCouleurEtGras(nb2 + ' €') + ', '\n                texteCorr += texteEnCouleurEtGras(nb3 + ' cases') + ', ' + texteEnCouleurEtGras(nb4 + ' €')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' pages') + ' ne sont pas utiles pour la résolution du problème.<br>'\n              }\n              texteCorr += 'On ne peut pas répondre à ce problème. Il manque des informations.'\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} €`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} cases`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} €`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} pages`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n          }\n          break\n        case 5:\n          personnage1 = randint(1, 2) === 1 ? 'sa ' + choice(FamilleF) : 'son ' + choice(FamilleH)\n          if (randint(1, 2) === 1) {\n            quidam = prenomM()\n            quidam2 = 'il'\n          } else {\n            quidam = prenomF()\n            quidam2 = 'elle'\n          }\n          nb = randint(13, 21)\n          nb1 = jour() + ' ' + randint(1, 29) + ' ' + nomDuMois(randint(1, 12))\n          nb2 = nb + ' h ' + 5 * randint(2, 11) + ' min'\n          nb3 = nb + 2 + ' h ' + 5 * randint(2, 11) + ' min'\n          nb4 = nb + 1 + ' h ' + 5 * randint(2, 11) + ' min'\n          nb5 = randint(37, 58)\n          texte += `${quidam} décide de programmer la box de ${personnage1} pour enregistrer un film prévu le ${nb1} et une émission prévue le lendemain. `\n          texte += `Le film doit commencer à ${nb2} et se terminer à ${nb3}. L'émission commence à ${nb4} et dure ${nb5} minutes.<br>`\n\n          switch (choixVersion) {\n            case 1:\n              texte += 'Quelle est la durée prévue du film ?'\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb2)\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb3) + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb3) + '$-$' + texteEnCouleurEtGras(nb2) + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb4) + ', ' + texteEnCouleurEtGras(nb1)\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' minutes') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb3) + '$-$' + texteGras(nb2) + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2}`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb3}`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb4}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5 + ' minutes'}`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n            case 2:\n              texte += 'À quelle heure se termine l\\'émission ?'\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb4)\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' minutes') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb4) + '$+$' + texteEnCouleurEtGras(nb5 + ' minutes') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb2) + ', ' + texteEnCouleurEtGras(nb3)\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb1) + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb4) + '$+$' + texteGras(nb5 + ' minutes') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4}`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5 + ' minutes'}`,\n                  statut: this.sup === 1\n                }\n              ]\n              break\n            default:\n              texte += `À quelle heure de sa journée, ${quidam} décide-t-${quidam2} de programmer la box de ${personnage1} ?`\n              if (this.sup === 1) {\n                texteCorr += 'Aucune donnée n\\'est utile pour la résolution du problème.<br>'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb2) + ', ' + texteEnCouleurEtGras(nb3) + ', '\n                texteCorr += texteEnCouleurEtGras(nb4) + ', ' + texteEnCouleurEtGras(nb5 + ' minutes')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb1) + ' ne sont pas utiles pour la résolution du problème.<br>'\n              }\n              texteCorr += 'On ne peut pas répondre à ce problème. Il manque des informations.'\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5 + ' minutes'}`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n          }\n          break\n        case 6:\n          personnage1 = choice(FamilleF)\n          quidam = choice(FamilleH)\n          quidam2 = prenomF()\n          nb1 = choice([15, 18, 21])\n          nb2 = randint(214, 625)\n          nb3 = randint(15, 18)\n          nb4 = texNombre(arrondi(randint(2054, 3298) / 100))\n          nb5 = choice([2, 3, 4, 6, 12])\n          texte += `La ${personnage1} de ${quidam2} lui a acheté un superbe vélo de ${nb1} vitesses, coûtant ${nb2} €, avec des roues de ${nb3} pouces. `\n          texte += `Pour la protéger, son ${quidam} lui a offert un casque et du matériel d'éclairage valant ${nb4} €. `\n          texte += `La ${personnage1} de ${quidam2} a décidé de payer le vélo en ${nb5} fois.<br>`\n\n          switch (choixVersion) {\n            case 1:\n              texte += `Quel est le montant de chaque versement que payera la ${personnage1} de ${quidam2} ?`\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb2 + ' €')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' fois') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb2 + ' € ') + '$\\\\div$' + texteEnCouleurEtGras(nb5) + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' vitesses') + ', ' + texteEnCouleurEtGras(nb3 + ' pouces')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4 + ' €') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb2 + ' €') + '$\\\\div$' + texteGras(nb5) + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} vitesses`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} €`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb3} pouces`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} €`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} fois`,\n                  statut: this.sup === 1\n                }\n              ]\n              break\n            case 2:\n              texte += `Quel est le montant total des cadeaux offerts à ${quidam2} ?`\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb2 + ' €')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4 + ' €') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb4 + ' €') + '$+$' + texteEnCouleurEtGras(nb2 + ' €') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' vitesses') + ', ' + texteEnCouleurEtGras(nb3 + ' pouces')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' fois') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb4 + ' €') + '$+$' + texteGras(nb2 + ' €') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} vitesses`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} €`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb3} pouces`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} €`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5} fois`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n            default:\n              texte += `Pour quel âge, ${quidam2} a-t-elle reçu son vélo comme cadeau d'anniversaire ?`\n              if (this.sup === 1) {\n                texteCorr += 'Aucune donnée n\\'est utile pour la résolution du problème.<br>'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' vitesses') + ', ' + texteEnCouleurEtGras(nb2 + ' €') + ', '\n                texteCorr += texteEnCouleurEtGras(nb3 + ' pouces') + ', ' + texteEnCouleurEtGras(nb4 + ' €')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' fois') + ' ne sont pas utiles pour la résolution du problème.<br>'\n              }\n              texteCorr += 'On ne peut pas répondre à ce problème. Il manque des informations.'\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} vitesses`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} €`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} pouces`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} €`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} fois`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n          }\n          break\n        case 7:\n          personnage1 = choice(FamilleF)\n          quidam = prenomM()\n          quidam2 = prenomF()\n          nb1 = randint(0, 3)\n          nb2 = ['3ème', '4ème', '5ème', '6ème'][nb1]\n          nb3 = [14, 13, 12, 11][nb1]\n          nb4 = texNombre(arrondi(randint(132, 151) / 100))\n          nb5 = randint(21, 42)\n          texte += `${quidam}, un élève de ${nb2}, de ${nb3} ans, mesure ${nb4} m. `\n          texte += `${quidam2} a ${nb1 + 2} ans de plus que ${quidam} et mesure ${nb5} cm de plus.<br>`\n\n          switch (choixVersion) {\n            case 1:\n              texte += `Quel est l'âge de ${quidam2} ?`\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb3 + ' ans')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb1 + 2 + ' ans') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb3 + ' ans ') + '$+$' + texteEnCouleurEtGras(nb1 + 2 + ' ans ') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb2) + ', ' + texteEnCouleurEtGras(nb4 + ' m')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' cm') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb3 + ' ans') + '$+$' + texteGras(nb1 + 2 + ' ans ') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1 + 2} ans`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb2}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} ans`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb4} m`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} cm`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n            case 2:\n              texte += `Combien mesure ${quidam2} ?`\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb4 + ' m')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' cm') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb4 + ' m') + '$+$' + texteEnCouleurEtGras(nb5 + ' cm') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + 2 + ' ans, ') + texteEnCouleurEtGras(nb3 + ' ans')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb2) + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb4 + ' m') + '$+$' + texteGras(nb5 + ' cm') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1 + 2} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} m`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5} cm`,\n                  statut: this.sup === 1\n                }\n              ]\n              break\n            default:\n              texte += `En quelle classe est ${quidam2} ?`\n              if (this.sup === 1) {\n                texteCorr += 'Aucune donnée n\\'est utile pour la résolution du problème.<br>'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + 2 + ' ans') + ', ' + texteEnCouleurEtGras(nb2) + ', '\n                texteCorr += texteEnCouleurEtGras(nb3 + ' ans') + ', ' + texteEnCouleurEtGras(nb4 + ' m')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' cm') + ' ne sont pas utiles pour la résolution du problème.<br>'\n              }\n              texteCorr += 'On ne peut pas répondre à ce problème. Il manque des informations.'\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1 + 2} ans`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb2}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} ans`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb4} m`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} cm`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n          }\n          break\n        case 8:\n          personnage1 = choice(FamilleH)\n          quidam = prenomM()\n          nb1 = randint(45, 58)\n          nb2 = randint(3, 5)\n          nb3 = randint(7, 9) + ' h ' + 5 * randint(2, 11) + ' min'\n          nb4 = texNombre(arrondi(randint(9, 15, [10]) / 10), 1) + '0'\n          nb5 = 5 * randint(4, 11)\n          texte += `Le ${personnage1} de ${quidam}, âgé de ${nb1} ans, se rend ${nb2} fois par semaine à ${choice(['Paris', 'Toulouse', 'Bordeaux', 'Rouen'])} en train. `\n          texte += `Une fois arrivé, il prend le métro à ${nb3}, après avoir acheté systèmatiquement le même journal, dans un kiosque de la gare, qui coûte ${nb4} €. Son trajet en métro dure ${nb5} minutes pour se rendre au travail.<br>`\n\n          switch (choixVersion) {\n            case 1:\n              texte += `Combien le ${personnage1} de ${quidam} dépense-t-il chaque semaine pour son journal ?`\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb2 + ' fois')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4 + ' €') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb2) + '$\\\\times$' + texteEnCouleurEtGras(nb4 + ' € ') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' ans') + ', ' + texteEnCouleurEtGras(nb3)\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' min') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb2) + '$\\\\times$' + texteGras(nb4 + ' € ') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} fois`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb3}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} €`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5} min`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n            case 2:\n              texte += `À quelle heure le ${personnage1} de ${quidam} arrive-t-il à son travail ?`\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb3)\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' min') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb3) + '$+$' + texteEnCouleurEtGras(nb5 + ' min') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' ans, ') + texteEnCouleurEtGras(nb2 + ' fois')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4 + ' €') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb3) + '$+$' + texteGras(nb5 + ' min') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} fois`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3}`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb4} €`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} min`,\n                  statut: this.sup === 1\n                }\n              ]\n              break\n            default:\n              texte += `À quelle heure le ${personnage1} de ${quidam} est-il parti de chez lui ?`\n              if (this.sup === 1) {\n                texteCorr += 'Aucune donnée n\\'est utile pour la résolution du problème.<br>'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' ans') + ', ' + texteEnCouleurEtGras(nb3) + ', '\n                texteCorr += texteEnCouleurEtGras(nb2 + ' fois') + ', ' + texteEnCouleurEtGras(nb4 + ' €')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' min') + ' ne sont pas utiles pour la résolution du problème.<br>'\n              }\n              texteCorr += 'On ne peut pas répondre à ce problème. Il manque des informations.'\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} ans`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} fois`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb3}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} €`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5} min`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n          }\n          break\n        case 9:\n          personnage1 = choice(FamilleF)\n          quidam = prenomM()\n          quidam2 = prenomF()\n          nb1 = randint(21, 39)\n          nb2 = randint(7, 18)\n          nb3 = randint(7, 15)\n          nb4 = randint(10, 12) + ' h ' + 5 * randint(2, 11) + ' min'\n          nb5 = randint(16, 29)\n          texte += `Un livreur part de son entrepôt avec ${nb1} colis. Au premier arrêt, il depose ${nb2} colis. ${nb3} km plus loin, il livre le reste de ses colis. `\n          texte += `Ensuite, à ${nb4}, le livreur retourne à l'entrepôt, à ${nb5} km de là.<br>`\n\n          switch (choixVersion) {\n            case 1:\n              texte += 'Quelle distance sépare l\\'entrepôt du premier arrêt ?'\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb3 + ' km')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' km') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb5 + ' km') + '$-$' + texteEnCouleurEtGras(nb3 + ' km ') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' colis') + ', ' + texteEnCouleurEtGras(nb2 + ' colis')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb4) + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb5 + ' km') + '$-$' + texteGras(nb3 + ' km ') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} colis`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} colis`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} km`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb4}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} km`,\n                  statut: this.sup === 1\n                }\n              ]\n              break\n            case 2:\n              texte += 'Combien de colis le livreur a-t-il déposé à son deuxième arrêt ?'\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' colis')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb2 + ' colis') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb1 + ' colis') + '$-$' + texteEnCouleurEtGras(nb2 + ' colis') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb3 + ' km, ') + texteEnCouleurEtGras(nb4)\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' km') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb1 + ' colis') + '$-$' + texteGras(nb2 + ' colis') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} colis`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb2} colis`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb3} km`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} km`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n            default:\n              texte += 'À quelle heure ce livreur est-il rentré à l\\'entrepôt ?'\n              if (this.sup === 1) {\n                texteCorr += 'Aucune donnée n\\'est utile pour la résolution du problème.<br>'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' colis') + ', ' + texteEnCouleurEtGras(nb4) + ', '\n                texteCorr += texteEnCouleurEtGras(nb2 + ' colis') + ', ' + texteEnCouleurEtGras(nb3 + ' km')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' km') + ' ne sont pas utiles pour la résolution du problème.<br>'\n              }\n              texteCorr += 'On ne peut pas répondre à ce problème. Il manque des informations.'\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} colis`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} colis`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} km`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4}`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} km`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n          }\n          break\n        case 10:\n          personnage1 = choice(FamilleF)\n          quidam = prenomM()\n          quidam2 = prenomF()\n          nb1 = randint(85, 153)\n          nb2 = randint(67, 86)\n          nb3 = randint(7, 15)\n          nb4 = randint(21, 35)\n          nb5 = randint(21, 35)\n          texte += `Un cargo mesurant ${nb1} m tranporte ${nb2} gros conteneurs de ${nb3} tonnes chacun du Havre à Hong-Kong. `\n          texte += `Ce bateau transporte aussi ${nb4} petits conteneurs pour une masse totale de ${nb5} tonnes.<br>`\n\n          switch (choixVersion) {\n            case 1:\n              texte += 'Quelle est la masse de chacun des petits conteneurs, sachant qu\\'ils ont tous la même masse ?'\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb4 + ' conteneurs')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' tonnes') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb5 + ' tonnes') + '$\\\\div$' + texteEnCouleurEtGras(nb4) + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' m') + ', ' + texteEnCouleurEtGras(nb2 + ' conteneurs')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb3 + ' tonnes') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb5 + ' tonnes') + '$\\\\div$' + texteGras(nb4) + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} m`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} conteneurs`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} tonnes`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb4} conteneurs`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb5} tonnes`,\n                  statut: this.sup === 1\n                }\n              ]\n              break\n            case 2:\n              texte += 'Quelle est la masse totale des gros conteneurs ?'\n              if (this.sup === 1) {\n                texteCorr += texteEnCouleurEtGras(nb2 + ' conteneurs')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb3 + ' tonnes') + ' sont utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteEnCouleurEtGras(nb2) + '$\\\\times$' + texteEnCouleurEtGras(nb3 + ' tonnes') + '.'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' m, ') + texteEnCouleurEtGras(nb4 + ' conteneurs')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' tonnes') + ' ne sont pas utiles pour la résolution du problème.<br>'\n                texteCorr += 'La solution du problème est donnée par : '\n                texteCorr += texteGras(nb2) + '$\\\\times$' + texteGras(nb3 + ' tonnes') + '.'\n              }\n\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} m`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} conteneurs`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb3} tonnes`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb4} conteneurs`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} tonnes`,\n                  statut: this.sup !== 1\n                }\n              ]\n              break\n            default:\n              texte += 'Quelle est la longueur d\\'un gros conteneur ?'\n              if (this.sup === 1) {\n                texteCorr += 'Aucune donnée n\\'est utile pour la résolution du problème.<br>'\n              } else {\n                texteCorr += texteEnCouleurEtGras(nb1 + ' m') + ', ' + texteEnCouleurEtGras(nb4 + ' conteneurs') + ', '\n                texteCorr += texteEnCouleurEtGras(nb2 + ' conteneurs') + ', ' + texteEnCouleurEtGras(nb3 + ' tonnes')\n                texteCorr += ' et ' + texteEnCouleurEtGras(nb5 + ' tonnes') + ' ne sont pas utiles pour la résolution du problème.<br>'\n              }\n              texteCorr += 'On ne peut pas répondre à ce problème. Il manque des informations.'\n              this.autoCorrection[i].enonce = `${texte}\\n`\n              this.autoCorrection[i].propositions = [\n                {\n                  texte: `${nb1} m`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb2} conteneurs`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb3} tonnes`,\n                  statut: this.sup === 1\n                },\n                {\n                  texte: `${nb4} conteneurs`,\n                  statut: this.sup !== 1\n                },\n                {\n                  texte: `${nb5} tonnes`,\n                  statut: this.sup === 1\n                }\n              ]\n              break\n          }\n          break\n      }\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 5 // A creuser pour supprimer ou mettre nbquestions\n      }\n      if (!context.isAmc) {\n        texte += propositionsQcm(this, i).texte\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Choix de la formulation', 2, '1 : Coche les informations qui servent à sa résolution.\\n2 : Coche les informations qui NE servent PAS à sa résolution.']\n  this.besoinFormulaire2Texte = ['Choix des problèmes', 'Nombres séparés par des tirets\\n1 : Livres\\n2 : Haricots\\n3 : Villages de montagne\\n4 : Manga\\n5 : Film\\n6 : Vélo\\n7 : Taille\\n8 : Gare\\n9 : Livreur\\n10 : Cargo\\n11 : Tous les problèmes\\n']\n  this.besoinFormulaire3CaseACocher = ['Certains problèmes peuvent être insolubles']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","dateDePublication","ExerciceInformationsProblemes","Exercice","this","sup","sup2","sup3","spacing","tailleDiaporama","nbQuestions","nouvelleVersion","autoCorrection","listeQuestions","listeCorrections","parseInt","cocheIndique","chaqueCe","affirmatifNegatif","consigne","context","listeDesProblemes","contraindreValeur","split","i","length","rangeMinMax","compteOccurences","combinaisonListes","FamilleH","FamilleF","choixVersion","nb","nb1","nb2","nb3","nb4","nb5","quidam","quidam2","personnage1","texte","texteCorr","choice","randint","texteEnCouleurEtGras","texteGras","enonce","propositions","statut","prenomM","texNombre","arrondi","sp","prenomF","jour","nomDuMois","options","ordered","lastChoice","propositionsQcm","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Texte","besoinFormulaire3CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}