{"version":3,"file":"js/19400.01273798b71a0ab6b3ad.js","mappings":"4GAMe,SAASA,IAItBC,KAAKC,MAAQ,GACbD,KAAKE,YAAa,EAclBF,KAAKG,SAAW,GAChBH,KAAKI,mBAAqB,GAC1BJ,KAAKK,aAAe,GACpBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKQ,QAAU,GACfR,KAAKS,kBAAoB,GACzBT,KAAKU,eAAiB,GACtBV,KAAKW,sBAAwB,GAK7BX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EAKnBb,KAAKc,mBAAoB,EACzBd,KAAKe,cAAgB,GACrBf,KAAKgB,oBAAqB,EAC1BhB,KAAKiB,uBAAwB,EAC7BjB,KAAKkB,OAAS,EACdlB,KAAKmB,WAAa,EAClBnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAM7BvB,KAAKwB,QAAS,EACdxB,KAAKyB,gBAAkB,EAKvBzB,KAAK0B,YAAc,GACnB1B,KAAK2B,mBAAqB,EAC1B3B,KAAK4B,+BAAgC,EACrC5B,KAAK6B,qBAAsB,EAC3B7B,KAAK8B,oBAAqB,EAC1B9B,KAAK+B,MAAQ,GAEb/B,KAAKgC,YAAa,EAClBhC,KAAKiC,uBAAwB,EAE7BjC,KAAKkC,2BAA4B,EACjClC,KAAKmC,uBAAwB,EAC7BnC,KAAKoC,6BAA8B,EAEnCpC,KAAKqC,4BAA6B,EAClCrC,KAAKsC,wBAAyB,EAC9BtC,KAAKuC,8BAA+B,EAEpCvC,KAAKwC,4BAA6B,EAClCxC,KAAKyC,wBAAyB,EAC9BzC,KAAK0C,8BAA+B,EAEpC1C,KAAK2C,4BAA6B,EAClC3C,KAAK4C,wBAAyB,EAC9B5C,KAAK6C,8BAA+B,EAMpC7C,KAAK8C,cAAe,EASpB9C,KAAK+C,eAAiB,GAMtB/C,KAAKgD,gBAAkB,SAAUC,KAQjCjD,KAAKkD,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAASnD,KAAK+C,eAAiB,IACnC,IAAIM,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIxD,KAAK+C,eAAeU,QAAQJ,IAAmB,KAGjDrD,KAAK+C,eAAeW,KAAKL,IAClB,I,yKC3HN,MAAMpD,EAAQ,mDACR0D,GAAkB,EAClBC,EAAiB,WAQf,SAASC,IACtB9D,EAAAA,QAAAA,KAAcC,MACdA,KAAK8D,aAAe,SACpB9D,KAAK+D,iBAAmB,mBACxB/D,KAAK0B,YAAc,EAGnB1B,KAAKgD,gBAAkB,WACrB,IAAIgB,EAAKC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAMC,EAAMC,EAAMC,EAAMC,EAAQC,GACtEC,EAAAA,EAAAA,KAAO,EAAC,GAAM,KAChBlB,GAAMmB,EAAAA,EAAAA,KAAmB,EAAG,CAAC,MAC7Bf,GAAIc,EAAAA,EAAAA,KAAO,CAAC,IAAK,EAAG,MACpBhB,GAAIkB,EAAAA,EAAAA,KAAQ,EAAG,GACfnB,EAAIG,EAAIF,EACRC,GAAIiB,EAAAA,EAAAA,KAAQ,EAAG,EAAGlB,GAElBG,GAAIgB,EAAAA,EAAAA,KAAM,EAAG,EAAGrB,EAAI,GAAI,eACxBM,GAAIgB,EAAAA,EAAAA,KAAejB,EAAGH,EAAG,GAAIF,EAAI,IACjCQ,GAAIc,EAAAA,EAAAA,KAAejB,EAAGJ,EAAG,GAAID,EAAI,IACjCO,GAAIe,EAAAA,EAAAA,KAAed,EAAGJ,EAAID,GAAI,GAAIH,EAAI,GAAI,eAC1CS,GAAIa,EAAAA,EAAAA,KAAehB,EAAGH,GAAI,GAAIH,EAAI,GAAI,eACtCU,GAAIY,EAAAA,EAAAA,KAAejB,EAAG,GAAK,KAC3BM,GAAIW,EAAAA,EAAAA,KAAed,EAAG,GAAK,KAC3BS,GAAMM,EAAAA,EAAAA,KAAgBlB,EAAGG,EAAGD,GAC5BK,EAAOY,KAAKC,IAAIpB,EAAEqB,EAAGpB,EAAEoB,EAAGnB,EAAEmB,EAAGlB,EAAEkB,EAAGjB,EAAEiB,GAAK,EAC3CZ,EAAOU,KAAKC,IAAIpB,EAAEsB,EAAGrB,EAAEqB,EAAGpB,EAAEoB,EAAGnB,EAAEmB,EAAGlB,EAAEkB,GAAK,EAC3Cd,EAAOW,KAAKI,IAAIvB,EAAEqB,EAAGpB,EAAEoB,EAAGnB,EAAEmB,EAAGlB,EAAEkB,EAAGjB,EAAEiB,GAAK,EAC3CX,EAAOS,KAAKI,IAAIvB,EAAEsB,EAAGrB,EAAEqB,EAAGpB,EAAEoB,EAAGnB,EAAEmB,EAAGlB,EAAEkB,GAAK,EAC3CX,EAAS,GACTA,EAAOtB,KAAKuB,EAAI,IAChBD,EAAOtB,MAAKmC,EAAAA,EAAAA,KAAOxB,EAAGC,IAAIwB,EAAAA,EAAAA,KAAQxB,EAAGG,IAAIoB,EAAAA,EAAAA,KAAOxB,EAAGE,IAAIuB,EAAAA,EAAAA,KAAQtB,EAAGD,IAAIwB,EAAAA,EAAAA,KAAsBrB,EAAGC,IAAIqB,EAAAA,EAAAA,KAAW3B,EAAGC,EAAGC,EAAGC,EAAGC,IAC1HO,EAAOtB,MAAKuC,EAAAA,EAAAA,KAAkB,IAAEC,EAAAA,EAAAA,KAAWjC,MAAMkC,EAAAA,EAAAA,KAAOzB,EAAGC,GAAGe,GAAGS,EAAAA,EAAAA,KAAOzB,EAAGC,GAAGgB,EAAI,GAAK,SAAU,QAAS,EAAG,UAAU,IACrHM,EAAAA,EAAAA,KAAkB,IAAEC,EAAAA,EAAAA,KAAWhC,MAAMiC,EAAAA,EAAAA,KAAO9B,EAAGC,GAAGoB,GAAGS,EAAAA,EAAAA,KAAO9B,EAAGC,GAAGqB,EAAI,GAAK,SAAU,QAAS,EAAG,UAAU,IAAOM,EAAAA,EAAAA,KAAkB,IAAEC,EAAAA,EAAAA,KAAW/B,MAAMgC,EAAAA,EAAAA,KAAO7B,EAAGG,GAAGiB,GAAGS,EAAAA,EAAAA,KAAO7B,EAAGG,GAAGkB,EAAI,GAAK,SAAU,QAAS,EAAG,UAAU,IAC/N3F,KAAKoG,SAAY,iBAAgBpC,EAAI,KAAKA,EAAI,aAAaA,EAAI,KAAKA,EAAI,4CAC1DA,EAAI,KAAKA,EAAI,WAC3BhE,KAAKoG,WAAYC,EAAAA,EAAAA,KAAW,CAAEzB,KAAMA,EAAME,KAAMA,EAAMD,KAAMA,EAAME,KAAMA,EAAMuB,YAAa,GAAIC,WAAW,EAAOC,UAAW,GAAKC,MAAO,GAAKC,MAAO,gBAAkB1B,GACtKhF,KAAK2G,WAAc,iBAAgB3C,EAAI,KAAKA,EAAI,KAAKA,EAAI,0CAA0CA,EAAI,KAAKA,EAAI,KAAKA,EAAI,2EAC/DA,EAAI,KAAKA,EAAI,OAAOA,EAAI,KAAKA,EAAI,gBAAekC,EAAAA,EAAAA,KAAWjC,OAAOC,OAAMgC,EAAAA,EAAAA,KAAWjC,EAAIC,6DACrGF,EAAI,KAAKA,EAAI,KAAKA,EAAI,cAAakC,EAAAA,EAAAA,KAAWjC,EAAIC,iDAAiDF,EAAI,KAAKA,EAAI,KAAKA,EAAI,8BACzJA,EAAI,KAAKA,EAAI,OAAMkC,EAAAA,EAAAA,KAAWjC,EAAIC,aAAaF,EAAI,KAAKA,EAAI,OAAMkC,EAAAA,EAAAA,KAAWjC,EAAIC,aAAaC,MAAK+B,EAAAA,EAAAA,KAAWjC,EAAIE,EAAID,+BAElIlE,KAAK4G,SAAUC,EAAAA,EAAAA,KAAO5C,EAAIE,EAAID,KAE9BF,GAAMmB,EAAAA,EAAAA,KAAmB,EAAG,CAAC,MAC7Bf,GAAIc,EAAAA,EAAAA,KAAO,CAAC,IAAK,EAAG,MACpBjB,GAAImB,EAAAA,EAAAA,KAAQ,EAAG,GACflB,GAAIkB,EAAAA,EAAAA,KAAQ,EAAG,EAAGnB,GAElBI,GAAIgB,EAAAA,EAAAA,KAAM,EAAG,EAAGrB,EAAI,GAAI,eACxBM,GAAIgB,EAAAA,EAAAA,KAAejB,EAAGJ,EAAG,GAAID,EAAI,IACjCQ,GAAIc,EAAAA,EAAAA,KAAejB,EAAGD,EAAIH,EAAG,GAAID,EAAI,IACrCO,GAAIe,EAAAA,EAAAA,KAAed,EAAGJ,EAAIF,GAAI,GAAIF,EAAI,GAAI,eAC1CS,GAAIa,EAAAA,EAAAA,KAAehB,EAAGJ,GAAI,GAAIF,EAAI,GAAI,eACtCiB,GAAMM,EAAAA,EAAAA,KAAgBlB,EAAGG,EAAGD,GAC5BK,EAAOY,KAAKC,IAAIpB,EAAEqB,EAAGpB,EAAEoB,EAAGnB,EAAEmB,EAAGlB,EAAEkB,EAAGjB,EAAEiB,GAAK,EAC3CZ,EAAOU,KAAKC,IAAIpB,EAAEsB,EAAGrB,EAAEqB,EAAGpB,EAAEoB,EAAGnB,EAAEmB,EAAGlB,EAAEkB,GAAK,EAC3Cd,EAAOW,KAAKI,IAAIvB,EAAEqB,EAAGpB,EAAEoB,EAAGnB,EAAEmB,EAAGlB,EAAEkB,EAAGjB,EAAEiB,GAAK,EAC3CX,EAAOS,KAAKI,IAAIvB,EAAEsB,EAAGrB,EAAEqB,EAAGpB,EAAEoB,EAAGnB,EAAEmB,EAAGlB,EAAEkB,GAAK,EAC3CX,EAAS,GACTA,EAAOtB,KAAKuB,EAAI,IAChBD,EAAOtB,MAAKmC,EAAAA,EAAAA,KAAOxB,EAAGC,IAAIwB,EAAAA,EAAAA,KAAQxB,EAAGG,IAAIoB,EAAAA,EAAAA,KAAOxB,EAAGE,IAAIuB,EAAAA,EAAAA,KAAQtB,EAAGD,IAAIyB,EAAAA,EAAAA,KAAW3B,EAAGC,EAAGC,EAAGC,EAAGC,IAC7FO,EAAOtB,MAAKuC,EAAAA,EAAAA,KAAkB,IAAEC,EAAAA,EAAAA,KAAWjC,MAAMkC,EAAAA,EAAAA,KAAO9B,EAAGC,GAAGoB,GAAGS,EAAAA,EAAAA,KAAO9B,EAAGC,GAAGqB,EAAI,GAAK,SAAU,QAAS,EAAG,UAAU,IACrHM,EAAAA,EAAAA,KAAkB,IAAEC,EAAAA,EAAAA,KAAW9B,EAAIF,MAAMiC,EAAAA,EAAAA,KAAO3B,EAAGD,GAAGmB,EAAI,IAAKS,EAAAA,EAAAA,KAAO3B,EAAGD,GAAGoB,EAAI,GAAK,SAAU,QAAS,EAAG,UAAU,IACrHM,EAAAA,EAAAA,KAAkB,IAAEC,EAAAA,EAAAA,KAAWhC,MAAMiC,EAAAA,EAAAA,KAAO7B,EAAGG,GAAGiB,EAAI,IAAKS,EAAAA,EAAAA,KAAO7B,EAAGG,GAAGkB,EAAI,GAAK,SAAU,QAAS,EAAG,UAAU,IACnH3F,KAAKoG,SAAY,iBAAgBpC,EAAI,KAAKA,EAAI,aAAaA,EAAI,KAAKA,EAAI,4CAC3DA,EAAI,KAAKA,EAAI,WAC1BhE,KAAKoG,WAAYC,EAAAA,EAAAA,KAAW,CAAEzB,KAAMA,EAAME,KAAMA,EAAMD,KAAMA,EAAME,KAAMA,EAAMuB,YAAa,GAAIC,WAAW,EAAOC,UAAW,GAAKC,MAAO,GAAKC,MAAO,gBAAkB1B,GACtKhF,KAAK2G,WAAc,iBAAgB3C,EAAI,KAAKA,EAAI,KAAKA,EAAI,0CAA0CA,EAAI,KAAKA,EAAI,KAAKA,EAAI,0EAChEA,EAAI,KAAKA,EAAI,OAAOA,EAAI,KAAKA,EAAI,gBAAekC,EAAAA,EAAAA,KAAW9B,EAAIF,OAAOA,OAAMgC,EAAAA,EAAAA,KAAW9B,4DACrGJ,EAAI,KAAKA,EAAI,KAAKA,EAAI,cAAakC,EAAAA,EAAAA,KAAW9B,iDAAiDJ,EAAI,KAAKA,EAAI,KAAKA,EAAI,6BACrJA,EAAI,KAAKA,EAAI,OAAMkC,EAAAA,EAAAA,KAAW9B,aAAaJ,EAAI,KAAKA,EAAI,OAAMkC,EAAAA,EAAAA,KAAW9B,aAAaH,MAAKiC,EAAAA,EAAAA,KAAW9B,EAAIH,8BAErHjE,KAAK4G,SAAUC,EAAAA,EAAAA,KAAOzC,EAAIH","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/4e/can4G06.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { randint, choice, calcul, creerNomDePolygone, texNombrec } from '../../../modules/outils.js'\nimport {\n  mathalea2d, point, pointAdistance, polygoneAvecNom, labelPoint, segmentAvecExtremites, droite, segment, milieu, texteParPosition\n} from '../../../modules/2d.js'\nexport const titre = 'Calculer une longueur avec le théorème de Thalès'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence can4G06\n * Date de publication septembre 2021\n*/\nexport default function CalculLongueurThales () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.typeExercice = 'simple' // Cette ligne est très importante pour faire faire un exercice simple !\n  this.formatChampTexte = 'largeur15 inline'\n  this.nbQuestions = 1\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n\n  this.nouvelleVersion = function () {\n    let nom, a, b, c, k, A, B, C, D, E, G, H, xmin, xmax, ymin, ymax, objets, pol\n    if (choice([true, false])) {\n      nom = creerNomDePolygone(5, ['Q'])\n      k = choice([1.5, 2, 2.5])\n      b = randint(2, 5)//\n      a = k * b\n      c = randint(2, 5, b)//\n\n      A = point(0, 0, nom[0], 'below right')\n      B = pointAdistance(A, b, 40, nom[1])\n      D = pointAdistance(A, a, 40, nom[3])\n      C = pointAdistance(D, k * c, -40, nom[2], 'below right')\n      E = pointAdistance(B, c, -40, nom[4], 'below right')\n      G = pointAdistance(A, 0.7, 120)\n      H = pointAdistance(D, 0.7, 120)\n      pol = polygoneAvecNom(A, D, C)\n      xmin = Math.min(A.x, B.x, C.x, D.x, E.x) - 1\n      ymin = Math.min(A.y, B.y, C.y, D.y, E.y) - 1\n      xmax = Math.max(A.x, B.x, C.x, D.x, E.x) + 1\n      ymax = Math.max(A.y, B.y, C.y, D.y, E.y) + 1\n      objets = []\n      objets.push(pol[0]) //, pol[1]\n      objets.push(droite(A, B), segment(B, E), droite(A, C), segment(D, C), segmentAvecExtremites(G, H), labelPoint(A, B, C, D, E))\n      objets.push(texteParPosition(`${texNombrec(a)}`, milieu(G, H).x, milieu(G, H).y + 0.8, 'milieu', 'black', 1, 'middle', true),\n        texteParPosition(`${texNombrec(b)}`, milieu(A, B).x, milieu(A, B).y + 0.3, 'milieu', 'black', 1, 'middle', true), texteParPosition(`${texNombrec(c)}`, milieu(B, E).x, milieu(B, E).y + 0.2, 'milieu', 'black', 1, 'middle', true))\n      this.question = `Les droites $(${nom[1]}${nom[4]})$ et $(${nom[3]}${nom[2]})$ sont parallèles.\n        Calculer $${nom[3]}${nom[2]}$.<br>`\n      this.question += mathalea2d({ xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax, pixelsParCm: 15, mainlevee: false, amplitude: 0.5, scale: 0.5, style: 'margin: auto' }, objets)\n      this.correction = ` Le triangle $${nom[0]}${nom[3]}${nom[2]}$ est un agrandissement du triangle $${nom[0]}${nom[3]}${nom[2]}$.<br>\n    Le coefficient d'agrandissement est  donné par : $\\\\dfrac{${nom[0]}${nom[3]}}{${nom[0]}${nom[1]}}=\\\\dfrac{${texNombrec(a)}}{${b}}=${texNombrec(a / b)}$.<br>\n    On en déduit que les longueurs du triangle $${nom[0]}${nom[3]}${nom[2]}$ sont $${texNombrec(a / b)}$ fois plus grandes que celles du triangle $${nom[0]}${nom[1]}${nom[4]}$. <br>\n        Ainsi, $${nom[3]}${nom[2]}=${texNombrec(a / b)}\\\\times ${nom[1]}${nom[4]}=${texNombrec(a / b)}\\\\times ${c}=${texNombrec(a * c / b)}$.\n                  <br>`\n      this.reponse = calcul(a * c / b)\n    } else {\n      nom = creerNomDePolygone(5, ['Q'])\n      k = choice([1.5, 2, 2.5])\n      a = randint(2, 5)//\n      b = randint(2, 5, a)//\n\n      A = point(0, 0, nom[0], 'below right')\n      B = pointAdistance(A, a, 40, nom[1])\n      D = pointAdistance(A, k * a, 40, nom[3])\n      C = pointAdistance(D, k * b, -40, nom[2], 'below right')\n      E = pointAdistance(B, b, -40, nom[4], 'below right')\n      pol = polygoneAvecNom(A, D, C)\n      xmin = Math.min(A.x, B.x, C.x, D.x, E.x) - 1\n      ymin = Math.min(A.y, B.y, C.y, D.y, E.y) - 1\n      xmax = Math.max(A.x, B.x, C.x, D.x, E.x) + 1\n      ymax = Math.max(A.y, B.y, C.y, D.y, E.y) + 1\n      objets = []\n      objets.push(pol[0]) //, pol[1]\n      objets.push(droite(A, B), segment(B, E), droite(A, C), segment(D, C), labelPoint(A, B, C, D, E))\n      objets.push(texteParPosition(`${texNombrec(a)}`, milieu(A, B).x, milieu(A, B).y + 0.3, 'milieu', 'black', 1, 'middle', true),\n        texteParPosition(`${texNombrec(k * b)}`, milieu(D, C).x + 0.5, milieu(D, C).y + 0.1, 'milieu', 'black', 1, 'middle', true),\n        texteParPosition(`${texNombrec(b)}`, milieu(B, E).x + 0.5, milieu(B, E).y + 0.1, 'milieu', 'black', 1, 'middle', true))\n      this.question = `Les droites $(${nom[1]}${nom[4]})$ et $(${nom[3]}${nom[2]})$ sont parallèles. \n       Calculer $${nom[0]}${nom[3]}$.<br>`\n      this.question += mathalea2d({ xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax, pixelsParCm: 15, mainlevee: false, amplitude: 0.5, scale: 0.5, style: 'margin: auto' }, objets)\n      this.correction = ` Le triangle $${nom[0]}${nom[3]}${nom[2]}$ est un agrandissement du triangle $${nom[0]}${nom[3]}${nom[2]}$.<br>\n   Le coefficient d'agrandissement est  donné par : $\\\\dfrac{${nom[2]}${nom[3]}}{${nom[1]}${nom[4]}}=\\\\dfrac{${texNombrec(k * b)}}{${b}}=${texNombrec(k)}$.<br>\n   On en déduit que les longueurs du triangle $${nom[0]}${nom[3]}${nom[2]}$ sont $${texNombrec(k)}$ fois plus grandes que celles du triangle $${nom[0]}${nom[1]}${nom[4]}$. <br>\n       Ainsi, $${nom[0]}${nom[3]}=${texNombrec(k)}\\\\times ${nom[0]}${nom[1]}=${texNombrec(k)}\\\\times ${a}=${texNombrec(k * a)}$.\n                 <br>`\n      this.reponse = calcul(k * a)\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","CalculLongueurThales","typeExercice","formatChampTexte","nom","a","b","c","k","A","B","C","D","E","G","H","xmin","xmax","ymin","ymax","objets","pol","choice","creerNomDePolygone","randint","point","pointAdistance","polygoneAvecNom","Math","min","x","y","max","droite","segment","segmentAvecExtremites","labelPoint","texteParPosition","texNombrec","milieu","question","mathalea2d","pixelsParCm","mainlevee","amplitude","scale","style","correction","reponse","calcul"],"sourceRoot":""}