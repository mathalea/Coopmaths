{"version":3,"file":"js/43375.0ce231f8b0c69b67adbf.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6G14.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, range, rangeMinMax, shuffle, combinaisonListes, contraindreValeur, choice } from '../../modules/outils.js'\nimport { point, pointIntersectionDD, droite, droiteParPointEtParallele, droiteParPointEtPerpendiculaire, droiteParPointEtPente, rotation, codageAngleDroit, mathalea2d } from '../../modules/2d.js'\nexport const amcReady = true\nexport const amcType = 'AMCOpen' // type de question AMC\nexport const titre = 'Utiliser les propriétés des droites perpendiculaires'\n\n/**\n * Ref 6G14\n * @author Jean-Claude Lhote (EE : pour l'ajout d'AMC et la possibilité de sélectionner différents mélanges)\n * publié le 22/11/2020\n */\nexport default function ProprietesParallelesPerpendiculaires () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 4\n  this.sup2 = false\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    let typesDeQuestionsDisponibles = []\n    let questionsParNiveau = []\n    if (!this.sup2) {\n      questionsParNiveau.push(range(3))\n      questionsParNiveau.push(rangeMinMax(9, 15))\n      questionsParNiveau.push(rangeMinMax(19, 31, 20))\n      questionsParNiveau.push(questionsParNiveau[0].concat(questionsParNiveau[1].concat(questionsParNiveau[2])))\n    } else {\n      questionsParNiveau = [[2], [15], [31], [2, 15, 31]]\n    }\n    let AvecMelange = true\n    if (!this.sup) { // Si aucun melange n'est saisi\n      typesDeQuestionsDisponibles = questionsParNiveau[3]\n    } else {\n      if (typeof (this.sup) === 'number') { // Si c'est un nombre, on duplique ce nombre et on insère un - entre les deux.\n        this.sup = this.sup + '-' + this.sup\n      } else { AvecMelange = false }\n      let QuestionsDisponibles = []\n      const IndiceNew = [0, 0, 0, 0, 0]\n      let NumQuestionsDisponibles\n      QuestionsDisponibles = this.sup.split('-')// Sinon on créé un tableau à partir des valeurs séparées par des -\n      for (let i = 0; i < this.nbQuestions; i++) { // on a un tableau avec des strings : ['1', '1', '2']\n        NumQuestionsDisponibles = contraindreValeur(1, 4, parseInt(QuestionsDisponibles[i % QuestionsDisponibles.length]), 4) - 1\n        typesDeQuestionsDisponibles[i] = choice(questionsParNiveau[NumQuestionsDisponibles], typesDeQuestionsDisponibles.slice(IndiceNew[NumQuestionsDisponibles])) // Ce slice permet de gérer, par exemple, le mélange 1-1-2 pour 10 questions car il n'y a pas assez de choix différents pour le mélange 1.\n        if (typesDeQuestionsDisponibles[i] === undefined) { // Dans le cas, on a épuisé tous les choix différents d'un mélange\n          IndiceNew[NumQuestionsDisponibles] = i\n          typesDeQuestionsDisponibles[i] = choice(questionsParNiveau[NumQuestionsDisponibles], typesDeQuestionsDisponibles.slice(IndiceNew[NumQuestionsDisponibles]))\n        }\n      }\n    }\n    let listeTypeDeQuestions = []\n    if (AvecMelange) {\n      listeTypeDeQuestions = combinaisonListes(\n        typesDeQuestionsDisponibles,\n        this.nbQuestions\n      )\n    } else { listeTypeDeQuestions = typesDeQuestionsDisponibles }\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const droites = []; let code; let raisonnement; let numDroites = []; const phrases = []; let textetemp\n    const d = []; const P = []; const objets = []; const couleurd = []; let droiteP; let PP; let Inter\n    const droitecolor = function (num) {\n      let couleurs\n      context.isHtml ? couleurs = ['red', 'blue', 'green', 'black', 'magenta', 'orange'] : couleurs = ['black', 'black', 'black', 'black', 'black', 'black']\n      return couleurs[num]\n    }\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      texte = ''\n      texteCorr = ''\n      phrases.length = 0\n      droites.length = 0\n      objets.length = 0\n      d.length = 0\n      P.length = 0\n      couleurd.length = 0\n      numDroites = shuffle([1, 2, 3, 4, 5])\n      raisonnement = listeTypeDeQuestions[i]\n\n      switch (raisonnement) {\n        case 0: // si 1//2 et 2//3 alors 1//3\n          code = [[1, 2, 1], [2, 3, 1]]\n          break\n        case 1: // si 1//2 et 2T3 alors 1T3\n          code = [[1, 2, 1], [2, 3, -1]]\n          break\n        case 2: // si 1T2 et 2T3 alors 1//3\n          code = [[1, 2, -1], [2, 3, -1]]\n          break\n        case 3: // si 1T2 et 2//3 alors 1T3\n          code = [[1, 2, -1], [2, 3, 1]]\n          break\n        case 8: // Si 1//2 et 2//3 et 3//4 alors 1//4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1]]\n          break\n        case 9: // Si 1//2 et 2//3 et 3T4 alors 1T4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1]]\n          break\n        case 10: // Si 1//2 et 2T3 et 3//4 alors 1T4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1]]\n          break\n        case 11: // Si 1//2 et 2T3 et 3T4 alors 1//4\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1]]\n          break\n        case 12: // Si 1T2 et 2//3 et 3//4 alors 1T4\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1]]\n          break\n        case 13: // Si 1T2 et 2//3 et 3T4 alors 1//4\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1]]\n          break\n        case 14: // Si 1T2 et 2T3 et 3//4 alors 1//4\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1]]\n          break\n        case 15: // Si 1T2 et 2T3 et 3T4 alors 1T4\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1]]\n          break\n        case 16: // Si 1//2 et 2//3 et 3//4 et 4//5 alors 1//5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, 1]]\n          break\n        case 17: // Si 1//2 et 2//3 et 3T4 et 4//5 alors 1T5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1], [4, 5, 1]]\n          break\n        case 18: // Si 1//2 et 2T3 et 3//4 et 4//5 alors 1T5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, 1], [4, 5, 1]]\n          break\n        case 19: // Si 1//2 et 2T3 et 3T4 et 4//5 alors 1//5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1], [4, 5, 1]]\n          break\n        case 20: // Si 1T2 et 2//3 et 3//4 et 4//5 alors 1T5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1], [4, 5, 1]]\n          break\n        case 21: // Si 1T2 et 2//3 et 3T4 et 4//5 alors 1//5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1], [4, 5, 1]]\n          break\n        case 22: // Si 1T2 et 2T3 et 3//4 et 4//5 alors 1//5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1], [4, 5, 1]]\n          break\n        case 23: // Si 1T2 et 2T3 et 3T4 et 4//5 alors 1T5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1], [4, 5, 1]]\n          break\n        case 24: // Si 1//2 et 2//3 et 3//4 et 4T5 alors 1T5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, -1]]\n          break\n        case 25: // Si 1//2 et 2//3 et 3T4 et 4T5 alors 1//5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1], [4, 5, -1]]\n          break\n        case 26: // Si 1//2 et 2T3 et 3//4 et 4T5 alors 1//5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, 1], [4, 5, -1]]\n          break\n        case 27: // Si 1//2 et 2T3 et 3T4 et 4T5 alors 1T5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1], [4, 5, -1]]\n          break\n        case 28: // Si 1T2 et 2//3 et 3//4 et 4T5 alors 1//5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1], [4, 5, -1]]\n          break\n        case 29: // Si 1T2 et 2//3 et 3T4 et 4T5 alors 1T5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1], [4, 5, -1]]\n          break\n        case 30: // Si 1T2 et 2T3 et 3//4 et 4T5 alors 1T5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1], [4, 5, -1]]\n          break\n        case 31: // Si 1T2 et 2T3 et 3T4 et 4T5 alors 1//5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1], [4, 5, -1]]\n          break\n      }\n\n      // enoncé mélangé\n      texte += 'On sait que '\n      couleurd.push(randint(0, 5))\n      for (let j = 0; j < code.length; j++) {\n        textetemp = `$(d_${numDroites[code[j][0] - 1]})`\n        if (code[j][2] === 1) {\n          textetemp += '//'\n          couleurd.push(couleurd[j])\n        } else {\n          textetemp += '\\\\perp'\n          couleurd.push((couleurd[j] + 1) % 6)\n        }\n        textetemp += `(d_${numDroites[code[j][1] - 1]})$`\n        phrases.push(textetemp)\n      }\n      // phrases=shuffle(phrases)\n      for (let j = 0; j < code.length - 1; j++) {\n        texte += phrases[j]\n        if (j !== code.length - 2) texte += ', '\n        else texte += ' et '\n      }\n      texte += phrases[code.length - 1]\n      texte += `.<br>Que peut-on dire de $(d_${numDroites[code[0][0] - 1]})$ et $(d_${numDroites[code[code.length - 1][1] - 1]})$ ?`\n      if (context.isAmc) {\n        texte += ' On pourra s\\'aider en traçant une figure.'\n      }\n      // construction de la figure\n\n      P.push(point(0, 0))\n      droiteP = droiteParPointEtPente(P[0], randint(-1, 1, 0) / 10, `$(d_${numDroites[code[0][0] - 1]})$`, droitecolor(couleurd[0]))\n      droiteP.epaisseur = 2\n      droite.pointilles = false\n      d.push(droiteP)\n      objets.push(d[0])\n      for (let x = 0; x < code.length; x++) {\n        if (code[x][2] === 1) {\n          P.push(point((x + 1) * 2, (x + 1) * 2))\n          droiteP = droiteParPointEtParallele(P[x + 1], d[x], `$(d_${numDroites[code[x][1] - 1]})$`, droitecolor(couleurd[x + 1]))\n          droiteP.epaisseur = 2\n          droiteP.pointilles = d[x].pointilles\n          d.push(droiteP)\n        } else {\n          P.push(point((x + 1) * 2, (x + 1) * 2))\n          droiteP = droiteParPointEtPerpendiculaire(P[x + 1], d[x], `$(d_${numDroites[code[x][1] - 1]})$`, droitecolor(couleurd[x + 1]))\n          droiteP.epaisseur = 2\n          droiteP.pointilles = x % 3 + 1\n          Inter = pointIntersectionDD(d[x], droiteP)\n          PP = rotation(P[x + 1], Inter, 90)\n          d.push(droiteP)\n          objets.push(codageAngleDroit(PP, Inter, P[x + 1], 'black', 0.6))\n        }\n        objets.push(d[x + 1])\n      }\n      for (let i = 0; i < code.length; i++) { // on ajoute les angles droits\n\n      }\n      // correction raisonnement ordonné\n      context.fenetreMathalea2d = [-2, -2, 15, 10]\n      texteCorr = 'À partir de l\\'énoncé, on peut réaliser le schéma suivant (il en existe une infinité).<br> Les droites données parallèles dans l\\'énoncé sont de même couleur/style.<br>'\n      texteCorr += mathalea2d({ xmin: -2, xmax: 15, ymin: -2, ymax: 10, pixelsParCm: 20, scale: 0.3, mainlevee: false, amplitude: 0.3 }, objets) + '<br>'\n      for (let j = 0; j < code.length - 1; j++) {\n        if (this.correctionDetaillee) texteCorr += 'On sait que : '\n        else texteCorr += 'Comme '\n        texteCorr += `$(d_${numDroites[code[j][0] - 1]})`\n        if (code[j][2] === 1) texteCorr += '//'\n        else texteCorr += '\\\\perp'\n        texteCorr += `$(d_${numDroites[code[j][1] - 1]})$ et `\n        texteCorr += `$(d_${numDroites[code[j + 1][0] - 1]})`\n        if (code[j + 1][2] === 1) texteCorr += '//'\n        else texteCorr += '\\\\perp'\n        texteCorr += `$(d_${numDroites[code[j + 1][1] - 1]})$`\n        // quelle propriété ?\n        if (code[j][2] * code[j + 1][2] === -1) { // Une parallèle et une perpendiculaire\n          if (this.correctionDetaillee) texteCorr += '.<br> Or «Si deux droites sont parallèles alors toute droite perpendiculaire à l\\'une est aussi perpendiculaire à l\\'autre».<br>Donc'\n          else texteCorr += ', on en déduit que '\n          texteCorr += ` $(d_${numDroites[code[0][0] - 1]})\\\\perp(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = -1\n        } else if (code[j][2] > 0) { // deux parallèles\n          if (this.correctionDetaillee) texteCorr += '.<br> Or «Si deux droites sont parallèles à une même droite alors elles sont parallèles entre elles».<br>Donc'\n          else texteCorr += ', on en déduit que '\n          texteCorr += ` $(d_${numDroites[code[0][0] - 1]})//(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = 1\n        } else { // deux perpendiculaires\n          if (this.correctionDetaillee) texteCorr += '.<br> Or «Si deux droites sont perpendiculaires à une même droite alors elles sont parallèles entre elles».<br>Donc'\n          else texteCorr += ', on en déduit que '\n          texteCorr += ` $(d_${numDroites[code[0][0] - 1]})//(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = 1\n        }\n      }\n\n      /** ********************** AMC Open *****************************/\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].options = { ordered: false }\n      this.autoCorrection[i].enonce = texte + '<br>'\n      this.autoCorrection[i].propositions = [\n        {\n          texte: texteCorr,\n          statut: 3\n        }\n      ]\n      /****************************************************/\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte + '<br>')\n        this.listeCorrections.push(texteCorr + '<br>')\n        i++\n      }\n      cpt++\n    }\n\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = ['Nombre d\\'étapes de raisonnement', 'Nombres séparés par des tirets\\n1 : Une étape\\n2 : Deux étapes\\n3 : Trois étapes\\n4 : Mélange']\n  this.besoinFormulaire2CaseACocher = ['Que des perpendiculaires', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","titre","ProprietesParallelesPerpendiculaires","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","sup2","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","autoCorrection","typesDeQuestionsDisponibles","questionsParNiveau","push","range","rangeMinMax","concat","AvecMelange","QuestionsDisponibles","IndiceNew","NumQuestionsDisponibles","split","i","contraindreValeur","parseInt","length","choice","slice","undefined","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","droites","code","raisonnement","numDroites","phrases","textetemp","d","P","objets","couleurd","droiteP","PP","Inter","droitecolor","num","couleurs","context","texte","texteCorr","cpt","shuffle","randint","j","point","droiteParPointEtPente","epaisseur","droite","x","droiteParPointEtParallele","pointilles","droiteParPointEtPerpendiculaire","pointIntersectionDD","rotation","codageAngleDroit","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","mainlevee","amplitude","options","ordered","enonce","propositions","statut","indexOf","listeQuestionsToContenu","besoinFormulaireTexte","besoinFormulaire2CaseACocher","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","toString"],"sourceRoot":""}