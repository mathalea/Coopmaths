/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e_6G32-1_js"],{

/***/ "./src/js/exercices/6e/6G32-1.js":
/*!***************************************!*\
  !*** ./src/js/exercices/6e/6G32-1.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Symetrie_axiale_conservation1)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\nconst titre = 'Propriétés de conservation de la symétrie axiale'\n\n/**\n * Ref 6G32-1\n * Publié le 26/10/2020\n * @Auteur Jean-Claude Lhote\n */\nfunction Symetrie_axiale_conservation1() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nb_questions = 4;\n  this.nb_cols = 1;\n  this.nb_cols_corr = 1;\n  this.sup = 1;\n\n  this.nouvelle_version = function () {\n    let type_de_questions_disponibles = [\"Segment\", \"Droite\", \"1/2droite\", \"Triangle\", \"Angle\"];\n    let points = [], traces = [], nom = [], alternance\n    for (let i = 0; i < 25; i++) nom.push((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lettre_depuis_chiffre)(i + 1))\n    let noms = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)(nom)\n\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(type_de_questions_disponibles, this.nb_questions);\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n    this.liste_questions.push(`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)('Dans la symétrie d\\'axe (d)...')}`);\n    this.liste_corrections.push(`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)('Dans la symétrie d\\'axe (d)...')}`);\n    // On prépare la figure...\n    let axe = parseInt(this.sup)\n    let d, nonchoisi, coords = [], x, y, objets_enonce = [], objets_correction = [], nomd, label_pos\n    if (axe == 5) axe = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 4) //choix de l'axe et des coordonnées\n    switch (axe) {\n      case 1: d = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(1, 0, 0);\n        nomd = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)('(d)', 0.3, 5.6)\n        label_pos = 'above left'\n        for (let i = 0; i < 12; i++) {\n          nonchoisi = false\n          while (!nonchoisi) { // Le nouveau point est-il déjà dans la liste ?\n            [x, y] = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-5, 0), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-5, 5)]\n            nonchoisi = true\n            for (let j = 0; j < i; j++)\n              if (coords[j][0] == x && coords[j][1] == y) nonchoisi = false\n          }\n          coords.push([x, y]) //on stocke les 12 points\n        }\n        for (let j = 0; j < 12; j++) coords.push([-coords[j][0], coords[j][1]]) // on stocke les 12 images\n        break;\n      case 2: d = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(0, 1, 0);\n        label_pos = 'above'\n        nomd = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)('(d)', 5.6, 0.3)\n        for (let i = 0; i < 12; i++) {\n          nonchoisi = false\n          while (!nonchoisi) { // Le nouveau point est-il déjà dans la liste ?\n            [x, y] = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-5, 5), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-5, 0)]\n            nonchoisi = true\n            for (let j = 0; j < i; j++)\n              if (coords[j][0] == x && coords[j][1] == y) nonchoisi = false\n          }\n          coords.push([x, y]) //on stocke les 12 points\n        }\n        for (let j = 0; j < 12; j++) coords.push([coords[j][0], -coords[j][1]]) // on stocke les 12 images\n        break;\n      case 3: d = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(1, -1, 0);\n        label_pos = 'above'\n        nomd = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)('(d)', -5.8, -5.4)\n        for (let i = 0; i < 12; i++) {\n          nonchoisi = false\n          while (!nonchoisi) { // Le nouveau point est-il déjà dans la liste ?\n            x = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-5, 5)\n            y = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(x, 5)\n            nonchoisi = true\n            for (let j = 0; j < i; j++)\n              if (coords[j][0] == x && coords[j][1] == y) nonchoisi = false\n          }\n          coords.push([x, y]) //on stocke les 12 points\n        }\n        for (let j = 0; j < 12; j++) coords.push([coords[j][1], coords[j][0]]) // on stocke les 12 images\n        break;\n      case 4: d = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(1, 1, 0);\n        label_pos = 'above'\n        nomd = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)('(d)', -5.8, 5.4)\n        for (let i = 0; i < 12; i++) {\n          nonchoisi = false\n          while (!nonchoisi) { // Le nouveau point est-il déjà dans la liste ? Si oui, on recommence.\n            x = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-5, 5)\n            y = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-5, -x)\n            nonchoisi = true\n            for (let j = 0; j < i; j++)\n              if (coords[j][0] == x && coords[j][1] == y)\n                nonchoisi = false;\n          }\n          coords.push([x, y]) //on stocke les 12 points\n        }\n        for (let j = 0; j < 12; j++)\n          coords.push([-coords[j][1], -coords[j][0]]); // on stocke les 12 images\n        break;\n    }\n    for (let i = 0; i < 24; i++) {\n      if (i < 12) points.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(coords[i][0], coords[i][1], noms[i], label_pos))\n      else if (coords[i][0] == coords[i - 12][0] && coords[i][1] == coords[i - 12][1]) {\n        points.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(coords[i][0], coords[i][1], noms[i - 12], label_pos))\n        noms[i] = noms[i - 12]\n      }\n      else points.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(coords[i][0], coords[i][1], noms[i], label_pos))\n      traces.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(points[i]));\n    }\n    // On rédige les questions et les réponses\n    if (this.sup2 == true) alternance = 2\n    else alternance = 1\n    function index(i) {\n      return (i + 12 * (i % alternance)) % 24\n    }\n    objets_enonce.length = 0\n    objets_correction.lenght = 0\n    for (let i = 0, texte, texte_corr,s1,s2,choix, cpt = 0; i < this.nb_questions && cpt < 50;) {\n\n      switch (liste_type_de_questions[i]) {\n        case \"Segment\":\n          choix = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 10) + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1) * 12\n          texte = `Quel est le symétrique du segment $[${noms[index(choix)]}${noms[index(choix + 1)]}]$ ?`\n          texte_corr = `Le symétrique du segment $[${noms[index(choix)]}${noms[index(choix + 1)]}]$ est le segment $[${noms[index(choix + 12)]}${noms[index(choix + 13)]}]$.`\n          s1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(points[index(choix)], points[index(choix + 1)], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2))\n          s2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(points[index(choix + 12)], points[index(choix + 13)], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2))\n          s1.epaisseur = 2\n          s2.epaisseur = 2\n          objets_correction.push(s1, s2)\n          break;\n        case \"Droite\":\n          choix = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 10) + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1) * 12\n          texte = `Quel est la symétrique de la droite $(${noms[index(choix)]}${noms[index(choix + 1)]})$ ?`\n          texte_corr = `La symétrique de la droite $(${noms[index(choix)]}${noms[index(choix + 1)]})$ est la droite $(${noms[index(choix + 12)]}${noms[index(choix + 13)]})$.`\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(points[index(choix)], points[index(choix + 1)], \"\", (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2)))\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(points[index(choix + 12)], points[index(choix + 13)], \"\", (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2)))\n          break;\n        case \"1/2droite\":\n          choix = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 10) + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1) * 12\n          texte = `Quel est la symétrique de la demi-droite $[${noms[index(choix)]}${noms[index(choix + 1)]})$ ?`\n          texte_corr = `La symétrique de la demi-droite $[${noms[index(choix)]}${noms[index(choix + 1)]})$ est la demi-droite $[${noms[index(choix + 12)]}${noms[index(choix + 13)]})$`\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.demiDroite)(points[index(choix)], points[index(choix + 1)], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2)))\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.demiDroite)(points[index(choix + 12)], points[index(choix + 13)], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2)))\n          break;\n        case \"Triangle\":\n          choix = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9) + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1) * 12\n          texte = `Quel est le symétrique du triangle $${noms[index(choix)]}${noms[index(choix + 1)]}${noms[index(choix + 2)]}$ ?`\n          texte_corr = `Le symétrique du triangle $${noms[index(choix)]}${noms[index(choix + 1)]}${noms[index(choix + 2)]}$ est le triangle $${noms[index(choix + 12)]}${noms[index(choix + 13)]}${noms[index(choix + 14)]}$.`\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)([points[index(choix)], points[index(choix + 1)], points[index(choix + 2)]], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2)))\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)([points[index(choix + 12)], points[index(choix + 13)], points[index(choix + 14)]], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2)))\n          break;\n        case \"Angle\":\n          choix = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9) + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1) * 12\n          texte = `Quel est le symétrique de l'angle $\\\\widehat{${noms[index(choix)]}${noms[index(choix + 1)]}${noms[index(choix + 2)]}}$ ?`\n          texte_corr = `Le symétrique de l'angle $\\\\widehat{${noms[index(choix)]}${noms[index(choix + 1)]}${noms[index(choix + 2)]}}$ est l'angle $\\\\widehat{${noms[index(choix + 12)]}${noms[index(choix + 13)]}${noms[index(choix + 14)]}}$.`\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(points[index(choix)], points[index(choix + 1)], points[index(choix + 2)], 2, '', (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2), 2, 0.5, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2), 0.2))\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(points[index(choix + 12)], points[index(choix + 13)], points[index(choix + 14)], 2, '', (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2), 2, 0.5, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2), 0.2))\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(points[index(choix)], points[index(choix + 1)], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2)))\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(points[index(choix + 1)], points[index(choix + 2)], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2)))\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(points[index(choix + 12)], points[index(choix + 13)], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2)))\n          objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(points[index(choix + 13)], points[index(choix + 14)], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i * 3 + 2)))\n\n          break;\n      }\n\n      if (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    d.isVisible = true;\n    objets_enonce.push(nomd, d);\n    objets_correction.push(nomd, d);\n    for (let i = 0; i < 24; i++) {\n      objets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(points[i]), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(points[i], 'blue'))\n      objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(points[i]), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(points[i], 'blue'))\n\n    }\n    this.liste_questions.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: -6, ymin: -6, xmax: 6, ymax: 6, pixelsParCm: 40, scale: 1 }, objets_enonce))\n    this.liste_corrections.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: -6, ymin: -6, xmax: 6, ymax: 6, pixelsParCm: 40, scale: 1 }, objets_correction))\n    ;(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu_sans_numero)(this);\n\n  }\n  this.besoin_formulaire_numerique = ['Type d\\'axe', 5, \"1 : Axe vertical\\n2 : Axe horizontal\\n3 : Axe oblique 1\\n4 : Axe oblique 2\\n5 : Axe aléatoire\"];\n  this.besoin_formulaire2_case_a_cocher = [\"Avec des points de part et d'autre\"];\n}\n\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/6G32-1.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);