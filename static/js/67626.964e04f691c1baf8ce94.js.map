{"version":3,"file":"js/67626.964e04f691c1baf8ce94.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5P10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, shuffle, combinaisonListesSansChangerOrdre, calcul, texNombre, texteEnCouleurEtGras, tableauColonneLigne } from '../../modules/outils.js'\nexport const titre = 'Reconnaître des tableaux de proportionnalité'\n\n/**\n * * Justifier qu'un tableau est un tableau de proportionnalité ou non\n * * 5P10\n * @author Sébastien Lozano\n */\n\nexport default function TableauxEtProportionnalite () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.debug = false\n  this.sup = 1\n  if (this.debug) {\n    this.nbQuestions = 6\n  } else {\n    this.nbQuestions = 4\n  };\n\n  this.titre = titre\n  this.consigne = 'Dire si les tableaux suivants sont de tableaux de proportionnalité. Justifier.'\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  // this.nbQuestionsModifiable = false;\n  context.isHtml ? this.spacing = 3 : this.spacing = 2\n  context.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    if (this.debug) {\n      typesDeQuestionsDisponibles = [0, 1, 2, 3, 4, 5]\n    } else {\n      // typesDeQuestionsDisponibles = shuffle([choice([1,3]),choice([2,4]),0]);\n      typesDeQuestionsDisponibles = [choice([0, 1]), 2, choice([3, 4]), 5]\n      typesDeQuestionsDisponibles = shuffle(typesDeQuestionsDisponibles)\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    // let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      const n1 = randint(5, 9)\n      const n2 = randint(5, 9, [n1])\n      const n3 = randint(5, 9, [n1, n2])\n      const coeff = randint(2, 9)\n      const coeffSoust = randint(2, 4)\n\n      // pour les décimaux seulement en demis\n      const u1 = randint(1, 9)\n      let ci1 = choice([0, 5])\n      const u2 = randint(1, 9)\n      let ci2 = choice([0, 5])\n      const u3 = randint(1, 9)\n      let ci3 = choice([0, 5])\n\n      while (ci1 === 0 && ci2 === 0 && ci3 === 0) {\n        ci1 = choice([0, 5])\n        ci2 = choice([0, 5])\n        ci3 = choice([0, 5])\n      };\n\n      // une fonction pour la justification\n      function justificationsOK (n1, n2, n3, coeff, sens) {\n        let sortie\n        switch (sens) {\n          case 'L1L2':\n            sortie = `$\\\\dfrac{\\\\textcolor{blue}{${texNombre(n1)}}}{\\\\textcolor{red}{${texNombre(n1 * coeff)}}} = \\\\dfrac{\\\\textcolor{blue}{${texNombre(n2)}}}{\\\\textcolor{red}{${texNombre(n2 * coeff)}}} = \\\\dfrac{\\\\textcolor{blue}{${texNombre(n3)}}}{\\\\textcolor{red}{${texNombre(n3 * coeff)}}}$`\n            break\n          case 'L2L1':\n            sortie = `$\\\\dfrac{\\\\textcolor{red}{${texNombre(n1 * coeff)}}}{\\\\textcolor{blue}{${texNombre(n1)}}} = \\\\dfrac{\\\\textcolor{red}{${texNombre(n2 * coeff)}}}{\\\\textcolor{blue}{${texNombre(n2)}}} = \\\\dfrac{\\\\textcolor{red}{${texNombre(n3 * coeff)}}}{\\\\textcolor{blue}{${texNombre(n3)}}}$`\n            break\n        };\n        return sortie\n      };\n\n      // une fonction pour la justification sens1\n      function justificationsKO (n1, n2, n3, coeff, operation, sens) {\n        let sortie\n        const isEq = function (n1, n2, coeff) {\n          if (calcul(n1 / (n1 + coeff)) === calcul(n2 / (n2 + coeff))) {\n            return '='\n          } else {\n            return '\\\\neq'\n          };\n        }\n        let color1, color2\n        switch (sens) {\n          case 'L1L2':\n            color1 = 'red'\n            color2 = 'blue'\n            break\n          case 'L2L1':\n            color1 = 'blue'\n            color2 = 'red'\n            break\n        };\n        switch (operation) {\n          case '+':\n            sortie = `$\\\\dfrac{\\\\textcolor{${color2}}{${texNombre(n1)}}}{\\\\textcolor{${color1}}{${texNombre(n1 + coeff)}}}`\n            sortie += isEq(n1, n2, coeff)\n            sortie += `\\\\dfrac{\\\\textcolor{${color2}}{${texNombre(n2)}}}{\\\\textcolor{${color1}}{${texNombre(n2 + coeff)}}}`\n            sortie += isEq(n2, n3, coeff)\n            sortie += `\\\\dfrac{\\\\textcolor{${color2}}{${texNombre(n3)}}}{\\\\textcolor{${color1}}{${texNombre(n3 + coeff)}}}$`\n            break\n          case '-':\n            sortie = `$\\\\dfrac{\\\\textcolor{${color2}}{${texNombre(n1)}}}{\\\\textcolor{${color1}}{${texNombre(n1 - coeff)}}}`\n            sortie += isEq(n1, n2, coeff)\n            sortie += `\\\\dfrac{\\\\textcolor{${color2}}{${texNombre(n2)}}}{\\\\textcolor{${color1}}{${texNombre(n2 - coeff)}}}`\n            sortie += isEq(n2, n3, coeff)\n            sortie += `\\\\dfrac{\\\\textcolor{${color2}}{${texNombre(n3)}}}{\\\\textcolor{${color1}}{${texNombre(n3 - coeff)}}}$`\n            break\n        };\n        return sortie\n      };\n\n      // pour les situations, autant de situations que de cas dans le switch !\n      const situations = [\n        { // case 0 --> multiplication ligne1 vers ligne2\n          tableau: tableauColonneLigne(\n            ['\\\\phantom{000}' + n1 + '\\\\phantom{000}', '\\\\phantom{000}' + n2 + '\\\\phantom{000}', '\\\\phantom{000}' + n3 + '\\\\phantom{000}'],\n            [n1 * coeff], [n2 * coeff, n3 * coeff]\n          ),\n          justification_L1_L2: justificationsOK(n1, n2, n3, coeff, 'L1L2'),\n          justification_L2_L1: justificationsOK(n1, n2, n3, coeff, 'L2L1'),\n          isProportionnel: texteEnCouleurEtGras('C\\'est donc un tableau de proportionnalité.'),\n          areEgaux: 'égaux'\n\n        },\n        { // case 1 --> multiplication ligne1 vers ligne2 Décimaux\n          tableau: tableauColonneLigne(\n            ['\\\\phantom{000}' + texNombre(u1 + ci1 / 10) + '\\\\phantom{000}', '\\\\phantom{000}' + texNombre(u2 + ci2 / 10) + '\\\\phantom{000}', '\\\\phantom{000}' + texNombre(u3 + ci3 / 10) + '\\\\phantom{000}'],\n            [texNombre((u1 + ci1 / 10) * coeff)], [texNombre((u2 + ci2 / 10) * coeff), texNombre((u3 + ci3 / 10) * coeff)]\n          ),\n          justification_L1_L2: justificationsOK(u1 + ci1 / 10, u2 + ci2 / 10, u3 + ci3 / 10, coeff, 'L1L2'),\n          justification_L2_L1: justificationsOK(u1 + ci1 / 10, u2 + ci2 / 10, u3 + ci3 / 10, coeff, 'L2L1'),\n          isProportionnel: texteEnCouleurEtGras('C\\'est donc un tableau de proportionnalité.'),\n          areEgaux: 'égaux'\n\n        },\n        { // case 2 --> division ligne1 vers ligne2\n          tableau: tableauColonneLigne(\n            ['\\\\phantom{000}' + n1 * coeff + '\\\\phantom{000}', '\\\\phantom{000}' + n2 * coeff + '\\\\phantom{000}', '\\\\phantom{000}' + n3 * coeff + '\\\\phantom{000}'],\n            [n1], [n2, n3]\n          ),\n          justification_L1_L2: justificationsOK(n1 * coeff, n2 * coeff, n3 * coeff, 1 / coeff, 'L1L2'),\n          justification_L2_L1: justificationsOK(n1 * coeff, n2 * coeff, n3 * coeff, 1 / coeff, 'L2L1'),\n          isProportionnel: texteEnCouleurEtGras('C\\'est donc un tableau de proportionnalité.'),\n          areEgaux: 'égaux'\n\n        },\n        { // case 3 --> addition ligne1 vers ligne2\n          tableau: tableauColonneLigne(\n            ['\\\\phantom{000}' + n1 + '\\\\phantom{000}', '\\\\phantom{000}' + n2 + '\\\\phantom{000}', '\\\\phantom{000}' + n3 + '\\\\phantom{000}'],\n            [n1 + coeff], [n2 + coeff, n3 + coeff]\n          ),\n          justification_L1_L2: justificationsKO(n1, n2, n3, coeff, '+', 'L1L2'),\n          justification_L2_L1: justificationsKO(n1 + coeff, n2 + coeff, n3 + coeff, -coeff, '+', 'L2L1'),\n          isProportionnel: texteEnCouleurEtGras('Ce n\\'est donc pas un tableau de proportionnalité.'),\n          areEgaux: 'différents'\n        },\n        { // case 4 --> addition ligne1 vers ligne2 Décimaux\n          tableau: tableauColonneLigne(\n            ['\\\\phantom{000}' + texNombre(u1 + ci1 / 10) + '\\\\phantom{000}', '\\\\phantom{000}' + texNombre(u2 + ci2 / 10) + '\\\\phantom{000}', '\\\\phantom{000}' + texNombre(u3 + ci3 / 10) + '\\\\phantom{000}'],\n            [texNombre((u1 + ci1 / 10) + coeff)], [texNombre((u2 + ci2 / 10) + coeff), texNombre((u3 + ci3 / 10) + coeff)]\n          ),\n          justification_L1_L2: justificationsKO(u1 + ci1 / 10, u2 + ci2 / 10, u3 + ci3 / 10, coeff, '+', 'L1L2'),\n          justification_L2_L1: justificationsKO(u1 + ci1 / 10, u2 + ci2 / 10, u3 + ci3 / 10, coeff, '+', 'L2L1'),\n          isProportionnel: texteEnCouleurEtGras('Ce n\\'est donc pas un tableau de proportionnalité.'),\n          areEgaux: 'différents'\n\n        },\n        { // case 5 --> soustraction ligne1 vers ligne2\n          tableau: tableauColonneLigne(\n            ['\\\\phantom{000}' + n1 + '\\\\phantom{000}', '\\\\phantom{000}' + n2 + '\\\\phantom{000}', '\\\\phantom{000}' + n3 + '\\\\phantom{000}'],\n            [n1 - coeffSoust], [n2 - coeffSoust, n3 - coeffSoust]\n          ),\n          justification_L1_L2: justificationsKO(n1, n2, n3, coeffSoust, '-', 'L1L2'),\n          justification_L2_L1: justificationsKO(n1 - coeffSoust, n2 - coeffSoust, n3 - coeffSoust, -coeffSoust, '-', 'L2L1'),\n          isProportionnel: texteEnCouleurEtGras('Ce n\\'est donc pas un tableau de proportionnalité.'),\n          areEgaux: 'différents'\n        }\n      ]\n\n      const enonces = []\n      for (let k = 0; k < situations.length; k++) {\n        enonces.push({\n          enonce: `${situations[k].tableau}`,\n          question: '',\n          correction: `Pour déterminer si c'est un tableau de proportionnalité, il suffit de comparer les quotients d'un nombre de la première ligne par le nombre correspondant de la seconde ligne ou inversement.\n<br> Soit ${situations[k].justification_L1_L2}, on constate qu'ils sont ${situations[k].areEgaux}.\n<br>Ou bien ${situations[k].justification_L2_L1}, on constate aussi qu'ils sont ${situations[k].areEgaux}.\n<br>${situations[k].isProportionnel}`\n        })\n      };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n        case 1:\n          texte = `${enonces[1].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[1].correction}`\n          };\n          break\n        case 2:\n          texte = `${enonces[2].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[2].correction}`\n          };\n          break\n        case 3:\n          texte = `${enonces[3].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[3].correction}`\n          };\n          break\n        case 4:\n          texte = `${enonces[4].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[4].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[4].correction}`\n          };\n          break\n        case 5:\n          texte = `${enonces[5].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[5].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[5].correction}`\n          };\n          break\n      };\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  // this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\n};\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","TableauxEtProportionnalite","typesDeQuestionsDisponibles","Exercice","this","debug","sup","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","choice","shuffle","listeQuestions","listeCorrections","autoCorrection","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","n1","randint","n2","n3","coeff","coeffSoust","u1","ci1","u2","ci2","u3","ci3","justificationsOK","sens","sortie","texNombre","justificationsKO","operation","isEq","calcul","color1","color2","situations","tableau","tableauColonneLigne","justification_L1_L2","justification_L2_L1","isProportionnel","texteEnCouleurEtGras","areEgaux","enonces","k","length","push","enonce","question","correction","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}