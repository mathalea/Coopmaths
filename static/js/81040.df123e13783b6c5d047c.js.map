{"version":3,"file":"js/81040.df123e13783b6c5d047c.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C32.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombrec } from '../../modules/outils.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\n\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Notation scientifique'\nexport const interactifReady = true\nexport const interactifType = 'numerique'\nexport const amcReady = true\nexport const amcType = 'AMCNum' // type de question AMC\n\n/**\n * Ecrire un nombre décimal en notation scientifique et inversement\n * @author Jean-Claude Lhote\n * 4C32\n */\n\nexport default function NotationScientifique () {\n  Exercice.call(this)\n  this.sup = 1\n  this.sup2 = 1\n  this.titre = titre\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nbQuestions = 5\n  this.interactif = false\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  /********************************************************************/\n  /** Type 4 : questionmultx avec AMCnumericChoices */\n  // Dans ce cas, le tableau des booléens comprend les renseignements nécessaires pour paramétrer \\AMCnumericCoices\n  // {int digits,int decimals,bool signe,int exposantNbChiffres,bool exposantSigne,int approx}\n  // La correction est dans tabQCM[1][0] et la réponse numlérique est dans tabQCM[1][1]\n  /********************************************************************/\n\n  this.nouvelleVersion = function () {\n    let reponse\n    if (parseInt(this.sup) === 1) this.consigne = 'Donner l\\'écriture scientifique des nombres suivants.'\n    else this.consigne = 'Donner l\\'écriture décimale des nombres suivants.'\n    let typesDeQuestionsDisponibles\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (parseInt(this.sup2) === 1) typesDeQuestionsDisponibles = [0, 0, 0, 1, 1]\n    else if (parseInt(this.sup2) === 2) typesDeQuestionsDisponibles = [0, 1, 1, 2, 2]\n    else typesDeQuestionsDisponibles = [2, 2, 3, 3, 3]\n\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, mantisse, exp, decimalstring, scientifiquestring, cpt = 0;\n      i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          mantisse = randint(1, 9)\n          if (!context.isAmc) {\n            exp = randint(1, 5)\n          } else {\n            exp = randint(1, 3)\n          }\n\n          break\n        case 1:\n          mantisse = calcul(randint(11, 99) / 10)\n          if (!context.isAmc) {\n            exp = randint(1, 5)\n          } else {\n            exp = randint(1, 3)\n          }\n          break\n        case 2:\n          if (randint(0, 1) === 1) mantisse = calcul(randint(111, 999) / 100)\n          else mantisse = calcul((randint(1, 9) * 100 + randint(1, 9)) / 100)\n          if (!context.isAmc) {\n            exp = randint(1, 7) * choice([-1, 1])\n          } else {\n            exp = randint(1, 3) * choice([-1, 1])\n          }\n          break\n        case 3:\n          if (randint(0, 1) === 1) mantisse = calcul((randint(1, 9) * 1000 + randint(1, 19) * 5) / 1000)\n          else mantisse = calcul(randint(1111, 9999) / 1000)\n          if (!context.isAmc) {\n            exp = randint(1, 7) * choice([-1, 1])\n          } else {\n            exp = randint(1, 3) * choice([-1, 1])\n          }\n          break\n      }\n      reponse = calcul(mantisse * 10 ** exp)\n      decimalstring = texNombrec(mantisse * 10 ** exp)\n      scientifiquestring = `${texNombrec(mantisse)}\\\\times 10^{${exp}}`\n      if (this.sup === 1) {\n        texte = `$${decimalstring}$`\n        texteCorr = `$${decimalstring} = ${scientifiquestring}$`\n        if (this.interactif) {\n          texte = ajouteChampTexte(this, i, {\n            texte: `$${decimalstring} = $`\n          })\n        }\n      } else {\n        texteCorr = `$${scientifiquestring} = ${decimalstring}$`\n        texte = `$${scientifiquestring}$`\n        if (this.interactif) {\n          texte = ajouteChampTexte(this, i, {\n            texte: `$${scientifiquestring} = $`\n          })\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n\n        if (parseInt(this.sup) === 1) {\n          setReponse(this, i, reponse, { digits: listeTypeDeQuestions[i] + 1, decimals: listeTypeDeQuestions[i], signe: false, exposantNbChiffres: 1, exposantSigne: true, approx: 0 })\n        } else {\n          setReponse(this, i, reponse, { strict: false, vertical: false, digits: 2 * Math.abs(exp) + 1, decimals: Math.abs(exp), signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 })\n        }\n        if (context.isAmc) {\n          if (parseInt(this.sup) === 1) {\n            this.amcType = 4\n            this.autoCorrection[i].enonce = \"Donner l'écriture scientifique du nombre \" + texte\n          } else {\n            this.amcType = 1\n            this.autoCorrection[i].enonce = \"Donner l'écriture décimale du nombre \" + texte\n            this.autoCorrection[i].options = {\n              ordered: false,\n              lastChoice: 5\n            }\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${decimalstring}$`,\n                statut: true\n              },\n              {\n                texte: `$${texNombrec(mantisse * 10 ** (exp - 1))}$`,\n                statut: false\n              },\n              {\n                texte: `$${texNombrec(mantisse * 10 ** (exp + 1))}$`,\n                statut: false\n              },\n              {\n                texte: `$${texNombrec(mantisse * 10 ** (-exp))}$`,\n                statut: false\n              }\n            ]\n          }\n        }\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\"Type d'exercices\", 2, '1 : Traduire en notation scientifique\\n2 : Traduire en notation décimale']\n  this.besoinFormulaire2Numerique = ['Niveaux de difficulté', 3, '1 : Facile\\n2 : Moyen\\n3 : Difficile']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","NotationScientifique","Exercice","this","sup","sup2","nbCols","nbColsCorr","nbQuestions","interactif","nouvelleVersion","reponse","typesDeQuestionsDisponibles","parseInt","consigne","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","mantisse","exp","decimalstring","scientifiquestring","i","cpt","randint","context","calcul","choice","texNombrec","ajouteChampTexte","indexOf","push","setReponse","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","strict","vertical","Math","abs","autoCorrection","enonce","options","ordered","lastChoice","propositions","statut","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}