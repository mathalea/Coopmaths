{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C30-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Puissances_encadrement","typesDeQuestionsDisponibles","Exercice","this","sup","nbQuestions","consigne","nbCols","nbColsCorr","nouvelleVersion","Number","choice","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","texte","texteCorr","i","cpt","ent_pos","push","val","texNombre","calcul","randint","puissance_inf","puissance_sup","puissance_inf_num","puissance_sup_num","dec_pos","dec_pos_inf_un","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/4868.57e92735591831293d7a.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,calcul,texNombre} from '../../modules/outils.js'\n\nexport const titre = 'Encadrer avec des puissances de 10'\n\n/**\n * Encadrer par des puissances de 10\n * 4C30-1\n * @author Sébastien Lozano\n */\nexport default function Puissances_encadrement() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.sup = 4;\n  this.nbQuestions = 6;\n  this.titre = titre;\n\n  this.consigne = `Encadrer les nombres suivants par deux puissances de 10 d'exposants consécutifs.`;\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  //this.nbQuestionsModifiable = false;\n\n  let typesDeQuestionsDisponibles;\n\n  this.nouvelleVersion = function () {\n    this.sup = Number(this.sup); // attention le formulaire renvoie un string, on a besoin d'un number pour le switch !\n\n    switch (this.sup) {\n      case 1: // nombre enier positif\n        typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6];\n        //this.nbQuestions = typesDeQuestionsDisponibles.length;\n        //this.nbQuestions = 3;\n        break;\n      case 2: // nombre décimal positif\n        typesDeQuestionsDisponibles = [7, 8, 9, 10];\n        //this.nbQuestions = typesDeQuestionsDisponibles.length;\n        //this.nbQuestions = 3;\n        break;\n      case 3: // nombre décimal positif inférieur à 1\n        typesDeQuestionsDisponibles = [11, 12, 13, 14];\n        //this.nbQuestions = typesDeQuestionsDisponibles.length;\n        //this.nbQuestions = 3;\n        break;\n      case 4: // Mélange\n        typesDeQuestionsDisponibles = [\n          choice([1, 2, 3]),\n          choice([4, 5, 6]),\n          choice([7, 8]),\n          choice([9, 10]),\n          choice([11, 12]),\n          choice([13, 14]),\n        ];\n        //this.nbQuestions = typesDeQuestionsDisponibles.length;\n        break;\n    }\n\n    let listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ); // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    // let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      // nombre entier positif, entre 1 et 10, puis 10 et 100 puis ....100 000 et 1 000 000\n      let ent_pos = [];\n      for (let i = 0; i < 6; i++) {\n        ent_pos.push({\n          val: `$${texNombre(calcul(randint(10 ** i + 1, 10 ** (i + 1))))}$`,\n          puissance_inf: `$10^{${i}}$`,\n          puissance_sup: `$10^{${i + 1}}$`,\n          puissance_inf_num: `$${texNombre(calcul(10 ** i))}$`,\n          puissance_sup_num: `$${texNombre(calcul(10 ** (i + 1)))}$`,\n        });\n      }\n\n      // nombre décimal positif 1 et 10 000 avec 1,2,3 puis 4 décimales\n      let dec_pos = [];\n      for (let i = 0; i < 4; i++) {\n        dec_pos.push({\n          val: `$${texNombre(calcul(randint(10000, 100000) / 10 ** (4 - i)))}$`,\n          puissance_inf: `$10^{${i}}$`,\n          puissance_sup: `$10^{${i + 1}}$`,\n          puissance_inf_num: `$${texNombre(calcul(10 ** i))}$`,\n          puissance_sup_num: `$${texNombre(calcul(10 ** (i + 1)))}$`,\n        });\n      }\n      // nombre décimal positif inférieur à 1, entre 0,1 et 1 puis entre 0,01 et 0,1 puis 0,001 et 0,0001\n      let dec_pos_inf_un = [];\n      for (let i = 0; i < 4; i++) {\n        dec_pos_inf_un.push({\n          val: `$${texNombre(calcul(randint(10 ** (4 - i - 1) + 1, 10 ** (4 - i)) / 10000))}$`,\n          puissance_inf: `$10^{${-(i + 1)}}$`,\n          puissance_sup: `$10^{${-i}}$`,\n          puissance_inf_num: `$${texNombre(calcul(10 ** -(i + 1)))}$`,\n          puissance_sup_num: `$${texNombre(calcul(10 ** -i))}$`,\n        });\n      }\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // nombre enier positif\n          texte = `${ent_pos[0].val}`;\n          texteCorr = `${ent_pos[0].puissance_inf} $\\\\leqslant$ ${ent_pos[0].val} $\\\\leqslant$ ${ent_pos[0].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[0].puissance_inf} = ${ent_pos[0].puissance_inf_num} et ${ent_pos[0].puissance_sup} = ${ent_pos[0].puissance_sup_num}`;\n          break;\n        case 2: // nombre enier positif\n          texte = `${ent_pos[1].val}`;\n          texteCorr = `${ent_pos[1].puissance_inf} $\\\\leqslant$ ${ent_pos[1].val} $\\\\leqslant$ ${ent_pos[1].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[1].puissance_inf} = ${ent_pos[1].puissance_inf_num} et ${ent_pos[1].puissance_sup} = ${ent_pos[1].puissance_sup_num}`;\n          break;\n        case 3: // nombre enier positif\n          texte = `${ent_pos[2].val}`;\n          texteCorr = `${ent_pos[2].puissance_inf} $\\\\leqslant$ ${ent_pos[2].val} $\\\\leqslant$ ${ent_pos[2].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[2].puissance_inf} = ${ent_pos[2].puissance_inf_num} et ${ent_pos[2].puissance_sup} = ${ent_pos[2].puissance_sup_num}`;\n          break;\n        case 4: // nombre enier positif\n          texte = `${ent_pos[3].val}`;\n          texteCorr = `${ent_pos[3].puissance_inf} $\\\\leqslant$ ${ent_pos[3].val} $\\\\leqslant$ ${ent_pos[3].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[3].puissance_inf} = ${ent_pos[3].puissance_inf_num} et ${ent_pos[3].puissance_sup} = ${ent_pos[3].puissance_sup_num}`;\n          break;\n        case 5: // nombre enier positif\n          texte = `${ent_pos[4].val}`;\n          texteCorr = `${ent_pos[4].puissance_inf} $\\\\leqslant$ ${ent_pos[4].val} $\\\\leqslant$ ${ent_pos[4].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[4].puissance_inf} = ${ent_pos[4].puissance_inf_num} et ${ent_pos[4].puissance_sup} = ${ent_pos[4].puissance_sup_num}`;\n          break;\n        case 6: // nombre enier positif\n          texte = `${ent_pos[5].val}`;\n          texteCorr = `${ent_pos[5].puissance_inf} $\\\\leqslant$ ${ent_pos[5].val} $\\\\leqslant$ ${ent_pos[5].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[5].puissance_inf} = ${ent_pos[5].puissance_inf_num} et ${ent_pos[5].puissance_sup} = ${ent_pos[5].puissance_sup_num}`;\n          break;\n        case 7: // nombre décimal positif\n          texte = `${dec_pos[0].val}`;\n          texteCorr = `${dec_pos[0].puissance_inf} $\\\\leqslant$ ${dec_pos[0].val} $\\\\leqslant$ ${dec_pos[0].puissance_sup}`;\n          texteCorr += ` car ${dec_pos[0].puissance_inf} = ${dec_pos[0].puissance_inf_num} et ${dec_pos[0].puissance_sup} = ${dec_pos[0].puissance_sup_num}`;\n          break;\n        case 8: // nombre décimal positif\n          texte = `${dec_pos[1].val}`;\n          texteCorr = `${dec_pos[1].puissance_inf} $\\\\leqslant$ ${dec_pos[1].val} $\\\\leqslant$ ${dec_pos[1].puissance_sup}`;\n          texteCorr += ` car ${dec_pos[1].puissance_inf} = ${dec_pos[1].puissance_inf_num} et ${dec_pos[1].puissance_sup} = ${dec_pos[1].puissance_sup_num}`;\n          break;\n        case 9: // nombre décimal positif\n          texte = `${dec_pos[2].val}`;\n          texteCorr = `${dec_pos[2].puissance_inf} $\\\\leqslant$ ${dec_pos[2].val} $\\\\leqslant$ ${dec_pos[2].puissance_sup}`;\n          texteCorr += ` car ${dec_pos[2].puissance_inf} = ${dec_pos[2].puissance_inf_num} et ${dec_pos[2].puissance_sup} = ${dec_pos[2].puissance_sup_num}`;\n          break;\n        case 10: // nombre décimal positif\n          texte = `${dec_pos[3].val}`;\n          texteCorr = `${dec_pos[3].puissance_inf} $\\\\leqslant$ ${dec_pos[3].val} $\\\\leqslant$ ${dec_pos[3].puissance_sup}`;\n          texteCorr += ` car ${dec_pos[3].puissance_inf} = ${dec_pos[3].puissance_inf_num} et ${dec_pos[3].puissance_sup} = ${dec_pos[3].puissance_sup_num}`;\n          break;\n        case 11: // nombre décimal positif inferieur à 1\n          texte = `${dec_pos_inf_un[0].val}`;\n          texteCorr = `${dec_pos_inf_un[0].puissance_inf} $\\\\leqslant$ ${dec_pos_inf_un[0].val} $\\\\leqslant$ ${dec_pos_inf_un[0].puissance_sup}`;\n          texteCorr += ` car ${dec_pos_inf_un[0].puissance_inf} = ${dec_pos_inf_un[0].puissance_inf_num} et ${dec_pos_inf_un[0].puissance_sup} = ${dec_pos_inf_un[0].puissance_sup_num}`;\n          break;\n        case 12: // nombre décimal positif inferieur à 1\n          texte = `${dec_pos_inf_un[1].val}`;\n          texteCorr = `${dec_pos_inf_un[1].puissance_inf} $\\\\leqslant$ ${dec_pos_inf_un[1].val} $\\\\leqslant$ ${dec_pos_inf_un[1].puissance_sup}`;\n          texteCorr += ` car ${dec_pos_inf_un[1].puissance_inf} = ${dec_pos_inf_un[1].puissance_inf_num} et ${dec_pos_inf_un[1].puissance_sup} = ${dec_pos_inf_un[1].puissance_sup_num}`;\n          break;\n        case 13: // nombre décimal positif inferieur à 1\n          texte = `${dec_pos_inf_un[2].val}`;\n          texteCorr = `${dec_pos_inf_un[2].puissance_inf} $\\\\leqslant$ ${dec_pos_inf_un[2].val} $\\\\leqslant$ ${dec_pos_inf_un[2].puissance_sup}`;\n          texteCorr += ` car ${dec_pos_inf_un[2].puissance_inf} = ${dec_pos_inf_un[2].puissance_inf_num} et ${dec_pos_inf_un[2].puissance_sup} = ${dec_pos_inf_un[2].puissance_sup_num}`;\n          break;\n        case 14: // nombre décimal positif inferieur à 1\n          texte = `${dec_pos_inf_un[3].val}`;\n          texteCorr = `${dec_pos_inf_un[3].puissance_inf} $\\\\leqslant$ ${dec_pos_inf_un[3].val} $\\\\leqslant$ ${dec_pos_inf_un[3].puissance_sup}`;\n          texteCorr += ` car ${dec_pos_inf_un[3].puissance_inf} = ${dec_pos_inf_un[3].puissance_inf_num} et ${dec_pos_inf_un[3].puissance_sup} = ${dec_pos_inf_un[3].puissance_sup_num}`;\n          break;\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    4,\n    \"1 : nombre entier positif\\n2 : nombre décimal positif\\n3 : nombre entier positif inférieur à un\\n4 : Mélange\",\n  ];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}