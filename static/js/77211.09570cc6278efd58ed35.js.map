{"version":3,"file":"js/77211.09570cc6278efd58ed35.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3L11-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { egal, randint, combinaisonListes, printlatex, listeQuestionsToContenuSansNumero, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Utiliser la double distributivité'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCOpenNum✖︎3'\n\n/**\n * Développer des expressions de la forme(ax+ou-b)(cx+ou-d)\n* @author Jean-Claude Lhote\n* 3L11-1\n*/\nexport default function DoubleDistributivite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.consigne = 'Développer et réduire les expressions suivantes.'\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = context.isHtml ? 3 : 2\n  this.spacingCorr = context.isHtml ? 3 : 2\n  this.nbQuestions = 5\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    let typesDeQuestionsDisponibles = [1, 2]\n    if (this.sup === 2) {\n      typesDeQuestionsDisponibles = [3, 4]\n    }\n    if (this.sup === 3) {\n      typesDeQuestionsDisponibles = [1, 2, 3, 4]\n    }\n\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, reponse, reponse1, reponse2, reponse3, cpt = 0, a, b, c, d, typesDeQuestions; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      a = randint(2, 9)\n      b = randint(2, 9)\n      c = randint(2, 9, [a])\n      d = randint(2, 9, [b])\n      switch (typesDeQuestions) {\n        case 1: // (x+b)(x+d)\n          b = randint(2, 10)\n          d = randint(2, 12)\n          texte = `$${lettreDepuisChiffre(i + 1)} = (x+${b})(x+${d})$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)} = (x+${b})(x+${d})=x^2+${b}x+${d}x+${b * d}=x^2+${b + d}x+${b * d}$`\n          reponse = `x^2+${b + d}x+${b * d}`\n          reponse1 = 1\n          reponse2 = b + d\n          reponse3 = b * d\n          break\n        case 2: // (ax+b)(cx+d)\n          texte = `$${lettreDepuisChiffre(i + 1)} = (${a}x+${b})(${c}x+${d})$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)} = (${a}x+${b})(${c}x+${d})=${a * c}x^2+${a * d}x+${b * c}x+${b * d}=${a * c}x^2+${a * d + b * c}x+${b * d}$`\n          reponse = `${a * c}x^2+${a * d + b * c}x+${b * d}`\n          reponse1 = a * c\n          reponse2 = a * d + b * c\n          reponse3 = b * d\n          break\n        case 3: // (ax-b)(cx+d)\n          texte = `$${lettreDepuisChiffre(i + 1)} = (${a}x-${b})(${c}x+${d})$`\n          if (egal(a * d - b * c, 0)) {\n            texteCorr = `$${lettreDepuisChiffre(i + 1)} = (${a}x-${b})(${c}x+${d})=${a * c}x^2+${d * a}x-${b * c}x-${b * d}=${printlatex(`${a * c}*x^2-${b * d}`)}$`\n            reponse = printlatex(`${a * c}*x^2-${b * d}`)\n            reponse1 = a * c\n            reponse2 = 0\n            reponse3 = -b * d\n          } else {\n            texteCorr = `$${lettreDepuisChiffre(i + 1)} = (${a}x-${b})(${c}x+${d})=${a * c}x^2+${d * a}x-${b * c}x-${b * d}=${printlatex(`${a * c}*x^2+(${d * a - b * c})*x-${b * d}`)}$`\n            reponse = printlatex(`${a * c}*x^2+(${d * a - b * c})*x-${b * d}`)\n            reponse1 = a * c\n            reponse2 = a * d - b * c\n            reponse3 = -b * d\n          }\n          break\n        case 4: // (ax-b)(cx-d)\n          texte = `$${lettreDepuisChiffre(i + 1)} = (${a}x-${b})(${c}x-${d})$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)} = (${a}x-${b})(${c}x-${d})=${a * c}x^2-${a * d}x-${b * c}x+${b * d}=${a * c}x^2-${a * d + b * c}x+${b * d}$`\n          reponse = `${a * c}x^2-${a * d + b * c}x+${b * d}`\n          reponse1 = a * c\n          reponse2 = -a * d - b * c\n          reponse3 = b * d\n          break\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      setReponse(this, i, reponse)\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte\n        this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: 4 }]\n        this.autoCorrection[i].reponse = { texte: '$x^2 $ ', textePosition: 'right', valeur: [reponse1], param: { digits: 2, decimals: 0, approx: 0, signe: false, exposantNbChiffres: 0, vertical: true } }\n        this.autoCorrection[i].reponse2 = { texte: '$x $ ', textePosition: 'right', valeur: [reponse2], param: { digits: 3, decimals: 0, approx: 0, signe: true, exposantNbChiffres: 0, vertical: true } }\n        this.autoCorrection[i].reponse3 = { texte: '', textePosition: 'right', valeur: [reponse3], param: { digits: 2, decimals: 0, approx: 0, signe: true, exposantNbChiffres: 0, vertical: true } }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, ' 1 : (x+a)(x+b) et (ax+b)(cx+d)\\n 2 : (ax-b)(cx+d) et (ax-b)(cx-d)\\n 3 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","DoubleDistributivite","Exercice","this","consigne","nbCols","nbColsCorr","spacing","context","spacingCorr","nbQuestions","sup","nouvelleVersion","parseInt","listeQuestions","listeCorrections","autoCorrection","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","reponse","reponse1","reponse2","reponse3","a","b","c","d","typesDeQuestions","i","cpt","randint","lettreDepuisChiffre","egal","printlatex","ajouteChampTexteMathLive","setReponse","enonce","propositions","statut","textePosition","valeur","param","digits","decimals","approx","signe","exposantNbChiffres","vertical","indexOf","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}