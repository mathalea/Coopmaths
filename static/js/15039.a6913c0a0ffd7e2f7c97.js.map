{"version":3,"file":"js/15039.a6913c0a0ffd7e2f7c97.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, shuffle2tableaux } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Lectures d’images et d’antécédents depuis un tableau de valeurs'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Un nombre à 2 chiffres (non multiple de 10) + 9\n * @author Rémi Angot\n * Référence 3F10\n*/\nexport default function ImageAntecedentDepuisTableauOuFleche () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = ''\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nbQuestions = 4\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const a = randint(-20, 20)\n    const b = randint(-20, 20, [a])\n    const c = randint(-20, 20, [a, b])\n    const d = randint(-20, 20, [a, b, c])\n    const e = randint(-20, 20, [a, b, c, d])\n    const f = randint(-20, 20, [a, b, c, d, e])\n    // a->b ; c->d ; e->d ; d->a ; f->c\n    const ligneX = [a, c, e, d, f]\n    const ligneY = [b, d, d, a, c]\n    shuffle2tableaux(ligneX, ligneY) // mélange les 2 lignes de la même manière\n    this.introduction = \"Voici un tableau de valeurs d'une fonction $f$ : \"\n    this.introduction += '<br><br>'\n    this.introduction += `$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|l|c|c|c|c|c|}\n    \\\\hline\n    x & ${ligneX[0]} & ${ligneX[1]} & ${ligneX[2]} & ${ligneX[3]} & ${ligneX[4]} \\\\\\\\\n    \\\\hline\n    f(x) & ${ligneY[0]} & ${ligneY[1]} & ${ligneY[2]} & ${ligneY[3]} & ${ligneY[4]} \\\\\\\\\n    \\\\hline\n    \\\\end{array}\n    $\n    `\n    let texte = `Quelle est l'image de $${a}$ par la fonction $f$ ?`\n    let texteCorr = `L'image de $${a}$ par la fonction $f$ est $${b}$, on note $f(${a})=${b}$.`\n    setReponse(this, 0, b)\n    texte += ajouteChampTexteMathLive(this, 0)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n\n    texte = `Quelle est l'image de $${c}$ par la fonction $f$ ?`\n    texteCorr = `L'image de $${c}$ par la fonction $f$ est $${d}$, on note $f(${c})=${d}$.`\n    texte += ajouteChampTexteMathLive(this, 1)\n    setReponse(this, 1, d)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n\n    let texte3 = `Déterminer le(s) antécédent(s) de $${a}$ par la fonction $f$.`\n    const texteCorr3 = `$${a}$ a un seul antécédent par la fonction $f$ qui est $${d}$, on note $f(${d})=${a}$.`\n    setReponse(this, 2, d)\n    texte3 += ajouteChampTexteMathLive(this, 2)\n\n    let texte4 = `Déterminer le(s) antécédent(s) de $${d}$ par la fonction $f$.`\n    const texteCorr4 = `$${d}$ a deux antécédents par la fonction $f$ qui sont $${c}$ et $${e}$, on note $f(${c})=f(${e})=${d}$.`\n    setReponse(this, 3, [`${c};${e}`, `${e};${c}`])\n    texte4 += ajouteChampTexteMathLive(this, 3)\n\n    if (choice([true, false])) { // Une fois sur 2 on inverse les questions 3 et 4\n      this.listeQuestions.push(texte3)\n      this.listeCorrections.push(texteCorr3)\n      this.listeQuestions.push(texte4)\n      this.listeCorrections.push(texteCorr4)\n    } else {\n      this.listeQuestions.push(texte4)\n      this.listeCorrections.push(texteCorr4)\n      this.listeQuestions.push(texte3)\n      this.listeCorrections.push(texteCorr3)\n    }\n\n    texte = `Recopier et compléter : $f(${c})=\\\\ldots$`\n    texteCorr = `$f(${c})=${d}$`\n    texte += ajouteChampTexteMathLive(this, 4)\n    setReponse(this, 4, `f(${c})=${d}`)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n\n    texte = `Recopier et compléter : $f(\\\\ldots)=${c}$`\n    texteCorr = `$f(${f})=${c}$`\n    texte += ajouteChampTexteMathLive(this, 5)\n    setReponse(this, 5, `f(${f})=${c}`)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n\n    if (this.interactif && context.isHtml) this.introduction = this.introduction + \"<br><br> <em>S'il y a plusieurs réponses, séparer-les avec le point-virgule</em>.<br>\"\n\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","ImageAntecedentDepuisTableauOuFleche","Exercice","this","consigne","nbQuestionsModifiable","nbCols","nbColsCorr","nbQuestions","nouvelleVersion","listeQuestions","listeCorrections","a","randint","b","c","d","e","f","ligneX","ligneY","shuffle2tableaux","introduction","texte","texteCorr","setReponse","ajouteChampTexteMathLive","push","texte3","texteCorr3","texte4","texteCorr4","choice","interactif","context","listeQuestionsToContenu","boutonAide","consigneCorrection","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}