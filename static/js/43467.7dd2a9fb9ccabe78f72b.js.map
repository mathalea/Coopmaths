{"version":3,"file":"js/43467.7dd2a9fb9ccabe78f72b.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N15-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif } from '../../modules/outils.js'\nimport { point, labelPoint, segment, segmentAvecExtremites, texteParPosition, mathalea2d } from '../../modules/2d.js'\n\n/* auteur Stéphane Guyon */\nexport const titre = 'Résoudre une équation avec des valeurs absolues'\n\n/**\n * 2N15-2, ex 2N23\n * @author Stéphane Guyon\n */\nexport default function ValeurAbsolueEtEquation () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre dans $\\\\mathbb{R}$ les équations suivantes  :'\n  this.nbQuestions = 4\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1 //\n  this.correction_detaille_disponible = true\n  context.isHtml ? this.correctionDetaillee = true : this.correctionDetaillee = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2, 2, 2, 2, 2]; let typesDeQuestions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, a, b, c, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        // Cas par cas, on définit le type de nombres que l'on souhaite\n        // Combien de chiffres ? Quelles valeurs ?\n        case 1:\n\n          a = randint(1, 15) * choice([-1, 1])\n          b = randint(1, 15) * (-1)\n\n          texte = `$\\\\vert x ${ecritureAlgebrique(a)}\\\\vert =${b}$`\n          texteCorr = ` ${b} étant négatif, il n'existe pas de solution à cette équation. $S=\\\\emptyset$`\n\n          break\n        case 2:\n\n          a = randint(1, 15) * choice([-1, 1])\n          b = randint(1, 15)\n          c = -a\n          texte = `$\\\\vert x ${ecritureAlgebrique(a)}\\\\vert =${b}$`\n\n          texteCorr = `Résoudre cette équation est équivalent à résoudre ces deux équations :<br>\n                    $x ${ecritureAlgebrique(a)} =${b}$ et    $x ${ecritureAlgebrique(a)} =${-b}$<br>\n                    Il existe donc deux solutions à cette équation :<br>\n                    $x_1=${c} ${ecritureAlgebrique(b)}$ et $x_2=${c} -${ecritureParentheseSiNegatif(b)}$<br>\n                    $S=\\\\{${c - b};${c + b}\\\\}$`\n          if (this.correctionDetaillee) {\n            const s = segment(point(0, 0), point(12, 0))\n            s.styleExtremites = '->'\n            const x0 = point(3, 0)\n            x0.nom = c - b\n            x0.positionLabel = 'below'\n            const A = point(6, 0, c)\n            A.nom = c\n            A.positionLabel = 'below'\n            const x1 = point(9, 0, c + b, 'below')\n            x1.nom = c + b\n            x1.positionLabel = 'below'\n            const s1 = segmentAvecExtremites(x0, x1)\n            s1.color = 'blue'\n            s1.epaisseur = 2\n            const s2 = segmentAvecExtremites(x0, A)\n            const l = labelPoint(A, x0, x1)\n            const cote = segment(point(3, 1), point(5.95, 1))\n            cote.styleExtremites = '<->'\n            const texteCote = texteParPosition(b, 4.5, 1.6)\n            const cote2 = segment(point(6.05, 1), point(9, 1))\n            cote2.styleExtremites = '<->'\n            const texteCote2 = texteParPosition(b, 7.5, 1.6)\n            texteCorr += mathalea2d({ xmin: -1, xmax: 13, ymin: -2, ymax: 2.5 },\n              s, s1, s2, l, cote, texteCote, cote2, texteCote2)\n          }\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ValeurAbsolueEtEquation","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","correction_detaille_disponible","context","correctionDetaillee","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","a","b","c","texte","texteCorr","i","cpt","randint","choice","ecritureAlgebrique","ecritureParentheseSiNegatif","s","segment","point","styleExtremites","x0","nom","positionLabel","A","x1","s1","segmentAvecExtremites","color","epaisseur","s2","l","labelPoint","cote","texteCote","texteParPosition","cote2","texteCote2","mathalea2d","xmin","xmax","ymin","ymax","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}