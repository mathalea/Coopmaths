{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4F12.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Exploiter_representation_graphique","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nbQuestionsModifiable","sup","nouvelleVersion","type_de_probleme","a","f","t1","l","l1","l2","g1","g2","g3","r","graphique","texte1","texte2","fille","listeQuestions","listeCorrections","choice","x","calcul","xscale","grille","color","opacite","axes","texteParPosition","labelX","labelY","courbe","introduction","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","push","texNombrec","v1","randint","v2","v3","tempsPause","periodeRapide","situation","polyline","point","epaisseur","prenomF","hmin","hmax","tmin","tmax","repere","legendeX","legendeY","courbeInterpolee","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1694.033041fd60e8e45d52bf.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,choice,calcul,texNombrec,prenomF} from '../../modules/outils.js'\nimport {point,polyline,axes,labelX,labelY,grille,repere,courbe,courbeInterpolee,texteParPosition,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Problème s’appuyant sur la lecture d’une représentation graphique'\n\n/**\n * Problème avec lecture de représentation graphique d'une fonction\n * @Auteur Rémi Angot\n * Référence 4F12\n */\nexport default function Exploiter_representation_graphique() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 1;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.nbQuestionsModifiable = false;\n  this.sup = 4;\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let type_de_probleme\n    if (this.sup == 1) {\n      type_de_probleme = \"projectile\"\n    }\n    if (this.sup == 2) {\n      type_de_probleme = \"velo\"\n    }\n    if (this.sup == 3) {\n      type_de_probleme = \"temperature\"\n    }\n    if (this.sup == 4) {\n      type_de_probleme = choice([\"temperature\", \"projectile\", \"velo\"]);\n    }\n    let a, f, t1, l,l1, l2, g1, g2,g3, r, graphique, texte1, texte2,fille;\n    switch (type_de_probleme) {\n      case \"projectile\":\n        // Parabole qui a pour zéro, 0 et 6,8 ou 10\n        // Et qui a pour maximum un multiple de 5\n        t1 = choice([6, 8, 10]);\n        a = (1 / ((-t1 / 2) * (t1 / 2 - t1))) * choice([10, 15, 20, 25, 30]); // on divise par l'image du max et on multiplie par la valeur souhaitée\n        f = (x) => calcul(-a * x * (x - t1));\n\n        // Mettre des dixièmes de secondes à la place des secondes\n        let xscale = choice([1, 0.1]);\n        g1 = grille(-1, -1, t1 + 2, 8);\n        g1.color = \"black\";\n        g1.opacite = 1;\n        g2 = grille(-1, -1, t1 + 2, 8, \"gray\", 0.2, 0.2);\n        g3 = axes(0, 0, t1 + 1, 8);\n        texte1 = texteParPosition(\"hauteur (en mètre)\", 0.2, 7.3, \"droite\");\n        l1 = labelX(0, calcul((t1 + 1) * xscale), 1, \"black\", -0.6, xscale);\n        l2 = labelY(5, 35, 1, \"black\", -0.6, 5);\n        graphique = courbe(f, 0, t1, \"blue\", 2, [1, 5]);\n        texte2 = texteParPosition(\"temps (en s)\", t1 + 0.5, 0.4, \"droite\");\n\n        this.introduction =\n          \"On a représenté ci-dessous l’évolution de la hauteur d’un projectile lancé depuis le sol (en mètre) en fonction du temps (en seconde).\";\n\n        this.introduction +=\n          \"<br><br>\" +\n          mathalea2d(\n            {\n              xmin: -1,\n              ymin: -1,\n              xmax: t1 + 3,\n              ymax: 8,\n              pixelsParCm: 30,\n              scale: .6,\n            },\n            g1,\n            g2,\n            g3,\n            graphique,\n            texte1,\n            texte2,\n            l1,\n            l2\n          );\n\n        this.introduction +=\n          \"<br><br>\" +\n          \"À l’aide de ce graphique, répondre aux questions suivantes :\";\n\n        this.listeQuestions.push(\n          \"Au bout de combien de temps le projectile retombe-t-il au sol ?\"\n        );\n        this.listeCorrections.push(\n          `Au bout de ${texNombrec(\n            t1 * xscale\n          )} s, le projectile retombe au sol car la courbe passe par le point de coordonnées $(${texNombrec(\n            t1 * xscale\n          )}~;~0)$.`\n        );\n\n        this.listeQuestions.push(\n          \"Quelle est la hauteur maximale atteinte par le projectile ?\"\n        );\n        this.listeCorrections.push(\n          `Le point le plus haut de la courbe a pour abscisse $${texNombrec(\n            (t1 / 2) * xscale\n          )}$ et pour ordonnée $${f(\n            t1 / 2\n          )}$ donc la hauteur maximale est de $${f(t1 / 2)}$ m.`\n        );\n\n        break;\n      case 'velo':\n        let v1 = randint(1, 4)\n        let v2 = randint(1, 3, v1)\n        let v3 = v1 + v2\n        g1 = grille(-1, -1, 6, 8)\n        g1.color = 'black'\n        g1.opacite = 1\n        g2 = grille(-1, -1, 6, 8, 'gray', .2, .2)\n        g3 = axes(0, 0, 6, 7)\n        texte1 = texteParPosition('distance (en km)', 0.2, 7.3, 'droite')\n        l1 = labelX(0, 50, 1, 'black', -.6, 10)\n        l2 = labelY(1, 6, 1, 'black', -.6, 1)\n        texte2 = texteParPosition('temps (en min)', 6.5, 0.4, 'droite')\n        let situation = randint(1, 3)\n        let tempsPause\n        let periodeRapide\n        if (situation == 1) {\n          l = polyline(point(0, 0), point(1, v1), point(2, v1 + v2), point(3, v1 + v2), point(4, 0))\n          tempsPause = 20\n          periodeRapide = 'de la 20e à la 30e minute'\n        }\n        if (situation == 2) {\n          l = polyline(point(0, 0), point(1, v3), point(2, v3), point(3, v2), point(4, 0))\n          tempsPause = 10\n          periodeRapide = 'durant les 10 premières minutes'\n\n        }\n        if (situation == 3) {\n          l = polyline(point(0, 0), point(1, v3), point(2, v2), point(3, v2), point(4, 0))\n          tempsPause = 20\n          periodeRapide = 'durant les 10 premières minutes'\n        }\n        l.epaisseur = 2\n        l.color = 'blue'\n\n        fille = prenomF()\n        this.introduction = `${fille} fait du vélo avec son smartphone sur une voie-verte rectiligne qui part de chez elle. Une application lui permet de voir à quelle distance de chez elle, elle se trouve.`\n\n        this.introduction += '<br><br>' + mathalea2d({\n          xmin: -1,\n          ymin: -1,\n          xmax: 9,\n          ymax: 8,\n          pixelsParCm: 40,\n        }, g1, g2, g3, l, texte1, texte2, l1, l2)\n\n        this.introduction += '<br><br>' + 'À l’aide de ce graphique, répondre aux questions suivantes :'\n\n        this.listeQuestions.push('Pendant combien de temps a-t-elle fait du vélo ?')\n        this.listeCorrections.push(`Elle a fait du vélo pendant 40 minutes.`)\n\n        this.listeQuestions.push('Quelle distance a-t-elle parcourue au total ?')\n        this.listeCorrections.push(`Le point le plus loin de sa maison est à ${v3} km et ensuite elle revient chez elle, donc la distance totale est de ${2 * v3} km.`)\n\n        this.listeQuestions.push(`Que se passe-t-il après ${tempsPause} minutes de vélo ?`)\n        this.listeCorrections.push(`La distance reste constante alors qu'elle est sur un chemin rectiligne. Elle a donc fait une pause.`)\n\n        this.listeQuestions.push('À quel moment a-t-elle été la plus rapide ?')\n        this.listeCorrections.push(`Elle a été la plus rapide ${periodeRapide} où elle a effectué ${v3} km en 10 minutes.`)\n\n\n        break;\n      case \"temperature\":\n        let hmin = randint(2, 4)\n        let hmax = randint(12, 16)\n        let tmin = randint(-5, 15)\n        let tmax = tmin + randint(5, 12)\n\n        r = repere({\n          xmin: 0,\n          ymin: tmin - 1,\n          ymax: tmax + 2,\n          xmax: 24,\n          xscale: 2,\n          legendeX: \"Heure\",\n          legendeY: \"Température (en °C)\",\n        });\n        graphique = courbeInterpolee(\n          [\n            [-2, tmin + 2],\n            [hmin, tmin],\n            [hmax, tmax],\n            [26, tmin + 2],\n          ],\n          \"blue\",\n          2,\n          r,\n          0,\n          24\n        );\n        this.introduction =\n          \"On a représenté ci-dessous l’évolution de la température sur une journée.\";\n        this.introduction +=\n          \"<br><br>\" +\n          mathalea2d(\n            {\n              xmin: -1,\n              ymin: tmin - 2.5,\n              xmax: 16,\n              ymax: tmax + 3,\n              pixelsParCm: 40,\n            },\n            r,\n            graphique\n          );\n\n        this.introduction +=\n          \"<br><br>\" +\n          \"À l’aide de ce graphique, répondre aux questions suivantes :\";\n\n        this.listeQuestions.push(\n          \"Quelle est la température la plus froide de la journée ?\"\n        );\n        this.listeCorrections.push(`La température la plus basse est ${tmin}°C.`)\n\n        this.listeQuestions.push(\n          \"Quelle est la température la plus chaude de la journée ?\"\n        );\n        this.listeCorrections.push(`La température la plus élevée de la journée est ${tmax}°C.`)\n        this.listeQuestions.push(\n          \"À quelle heure fait-il le plus chaud ?\"\n        );\n        this.listeCorrections.push(`C'est à ${hmax} h qu'il fait le plus chaud.`)\n        this.listeQuestions.push(\n          \"À quelle heure fait-il le plus froid ?\"\n        );\n        this.listeCorrections.push(`C'est à ${hmin} h qu'il fait le plus froid.`)\n\n\n        break;\n    }\n\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = ['Choix du problème', 3, \"1 : Projectile\\n2 : Trajet à vélo\\n3 : Température\\n4 : Au hasard\"];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}