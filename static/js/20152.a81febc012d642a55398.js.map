{"version":3,"file":"js/20152.a81febc012d642a55398.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5N14-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { fraction } from '../../modules/fractions.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListesSansChangerOrdre, calcul, texNombre2, texteEnCouleur } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Fractions égales et égalité des produits en croix'\n\nexport const amcReady = true\nexport const amcType = 'qcmMono'\nexport const interactifType = 'qcm'\nexport const interactifReady = true\n\nexport const description = 'Déterminer si une égalité de deux fractions est vraie en utilisant les produits en croix.<br> 4 niveaux : petits entiers, grands entiers, décimaux, mélange.'\n\n/**\n * * Fractions et égalité des produits en croix\n * * 5N14-3\n * * publication initiale le 23/05/2021\n * * modification le jj/mm/aaaa pour ....\n * @author Sébastien Lozano\n */\nexport default function EqResolvantesThales () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.debug = false\n  if (this.debug) {\n    this.nbQuestions = 4\n  } else {\n    this.nbQuestions = 4\n  };\n  this.sup = 1 // Niveau de difficulté\n  this.consigne = 'Les égalités suivantes sont-elles vraies ? Justifier.'\n\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  context.isHtml ? this.spacing = 3 : this.spacing = 2\n  context.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5\n\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    let typesDeQuestionsDisponibles = []\n    if (this.debug) {\n      typesDeQuestionsDisponibles = [0, 1, 2, 3]\n    } else {\n      typesDeQuestionsDisponibles = [0, 1, 2, 3]\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let numLowInt, fLowInt, fEqOrNotLowInt, denLowInt, numBigInt, denBigInt, fBigInt, fEqOrNotBigInt, numDec, denDec, fDec, masterChoice, fEqOrNotDec\n\n    // const listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // On a besoin d'un booléen pour que tout ne soit pas vrai ou faux\n      let equalOrNot\n      // On a besoin de variables opur les fractions\n      let f, fEqOrNot\n      // On a besoin d'un numerateur d'un dénominateur et d'un coefficient pour les fractions égales\n      let num, den\n      // On a besoin d'un string pour stocker l'égalité et un autre pour la justification\n      let egalite, justification\n      /**\n* Une fonction pour rendre deux fractions égales ou pas\n* @param {boolean} bool\n* @returns deux fractions egales ou non\n*/\n      function fracEqualOrNot (bool, n, d) {\n        // On a besoin de deux fractions\n        let f2\n        const f1 = fraction(n, d)\n        if (bool) {\n          f2 = fraction(calcul(n * k), calcul(d * k))\n        } else {\n          f2 = fraction(calcul(n + k), calcul(d + k))\n        }\n        return { frac: f1, fracEqualOrNot: f2 }\n      }\n      /**\n* Une fonction pour afficher des fraction avec num et/ou den décimaux\n* @param num le numerateur de type number\n* @param den le dénominateur de type number\n*/\n      function showFracNumDenDec (num, den) {\n        const f = fraction(num, den)\n        return `\\\\dfrac{${texNombre2(f.num)}}{${texNombre2(f.den)}}`\n      }\n\n      /**\n* Une fonction pour la correction\n* @param bool le booléen pour savoir si il y a égalité ou pas\n* @param f une fraction\n* @param fEqOrNot l'autre fraction égale ou pas\n*/\n      function justifyEq (bool, f, fEqOrNot) {\n        let strOut\n        if (bool) {\n          strOut = `Les produits en croix sont égaux :<br>\n${texNombre2(f.num)}$\\\\times$${texNombre2(fEqOrNot.den)} ${texteEnCouleur('$=$')} ${texNombre2(f.den)}$\\\\times$${texNombre2(fEqOrNot.num)}<br>\n`\n          if (Number.isInteger(f.num)) {\n            strOut += `Les fractions $${f.texFraction}$ et $${fEqOrNot.texFraction}$ sont donc égales.`\n          } else {\n            strOut += `Les fractions $${showFracNumDenDec(f.num, f.den)}$ et $${showFracNumDenDec(fEqOrNot.num, fEqOrNot.den)}$ sont donc égales.`\n          }\n        } else {\n          strOut = `Les produits en croix ne sont pas égaux :<br>\n${texNombre2(f.num)}$\\\\times$${texNombre2(fEqOrNot.den)} ${texteEnCouleur('$\\\\neq$')} ${texNombre2(f.den)}$\\\\times$${texNombre2(fEqOrNot.num)}<br>\n`\n          if (Number.isInteger(f.num)) {\n            strOut += `Les fractions $${f.texFraction}$ et $${fEqOrNot.texFraction}$ ne sont donc pas égales.`\n          } else {\n            strOut += `Les fractions $${showFracNumDenDec(f.num, f.den)}$ et $${showFracNumDenDec(fEqOrNot.num, fEqOrNot.den)}$ ne sont donc pas égales.`\n          }\n        }\n        return strOut\n      }\n      const k = randint(2, 9)\n      // On prépare tous les contenus selon le type de questions\n      this.sup = Number(this.sup) // attention le formulaire renvoie un string, on a besoin d'un number pour le switch !\n      switch (this.sup) {\n        case 1: // petits entiers égalité\n          equalOrNot = choice([true, false])\n          num = randint(1, 9)\n          den = randint(2, 9, num)\n          egalite = `\n$${fracEqualOrNot(equalOrNot, num, den).frac.texFraction}\\\\overset{?}{=}${fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot.texFraction}$`\n          justification = justifyEq(equalOrNot, fracEqualOrNot(equalOrNot, num, den).frac, fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot)\n          break\n        case 2: // grands entiers\n          equalOrNot = choice([true, false])\n          num = randint(11, 99)\n          den = randint(11, 99, num)\n          egalite = `\n$${fracEqualOrNot(equalOrNot, num, den).frac.texFraction}=${fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot.texFraction}$`\n          justification = justifyEq(equalOrNot, fracEqualOrNot(equalOrNot, num, den).frac, fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot)\n          break\n        case 3: // décimaux\n          equalOrNot = choice([true, false])\n          num = calcul(randint(11, 99) * 0.1)\n          den = calcul(randint(11, 99, num) * 0.1)\n          f = fracEqualOrNot(equalOrNot, num, den).frac\n          fEqOrNot = fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot\n          egalite = `\n$${showFracNumDenDec(f.num, f.den)}=${showFracNumDenDec(fEqOrNot.num, fEqOrNot.den)}$`\n          justification = justifyEq(equalOrNot, fracEqualOrNot(equalOrNot, num, den).frac, fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot)\n          break\n        case 4: // mélange\n          equalOrNot = choice([true, false])\n          numLowInt = randint(2, 9)\n          denLowInt = randint(2, 9, numLowInt)\n          fLowInt = fracEqualOrNot(equalOrNot, numLowInt, denLowInt).frac\n          fEqOrNotLowInt = fracEqualOrNot(equalOrNot, numLowInt, denLowInt).fracEqualOrNot\n          numBigInt = randint(11, 99)\n          denBigInt = randint(11, 99, numBigInt)\n          fBigInt = fracEqualOrNot(equalOrNot, numBigInt, denBigInt).frac\n          fEqOrNotBigInt = fracEqualOrNot(equalOrNot, numBigInt, denBigInt).fracEqualOrNot\n          numDec = calcul(randint(11, 99) * 0.1)\n          denDec = calcul(randint(11, 99, numDec) * 0.1)\n          fDec = fracEqualOrNot(equalOrNot, numDec, denDec).frac\n          fEqOrNotDec = fracEqualOrNot(equalOrNot, numDec, denDec).fracEqualOrNot\n          masterChoice = choice([\n            { equalOrNot: equalOrNot, num: numLowInt, den: denLowInt, k: k, f: fLowInt, fEqOrNot: fEqOrNotLowInt },\n            { equalOrNot: equalOrNot, num: numBigInt, den: denBigInt, k: k, f: fBigInt, fEqOrNot: fEqOrNotBigInt },\n            { equalOrNot: equalOrNot, num: numDec, den: denDec, k: k, f: fDec, fEqOrNot: fEqOrNotDec }\n          ])\n          egalite = ''\n          if (Number.isInteger(masterChoice.num)) {\n            egalite += `$${masterChoice.f.texFraction}=${masterChoice.fEqOrNot.texFraction}$`\n          } else {\n            egalite += `$${showFracNumDenDec(masterChoice.f.num, masterChoice.f.den)}=${showFracNumDenDec(masterChoice.fEqOrNot.num, masterChoice.fEqOrNot.den)}$`\n          }\n          justification = justifyEq(equalOrNot, masterChoice.f, masterChoice.fEqOrNot)\n          break\n      };\n\n      const enonces = []\n      for (let k = 0; k < 4; k++) {\n        enonces.push({\n          enonce: egalite,\n          question: '',\n          correction: justification\n        })\n      };\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n        case 1:\n          texte = `${enonces[1].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[1].correction}`\n          };\n          break\n        case 2:\n          texte = `${enonces[2].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[2].correction}`\n          };\n          break\n        case 3:\n          texte = `${enonces[3].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[3].correction}`\n          };\n          break\n      };\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: 'L\\'égalité est vraie',\n          statut: equalOrNot\n        },\n        {\n          texte: 'L\\'égalité est fausse',\n          statut: !equalOrNot\n        },\n        {\n          texte: 'Je ne sais pas',\n          statut: false\n        }\n      ]\n      this.autoCorrection[i].options = { ordered: true } // On ne mélange pas les propositions 'Oui', 'Non' et 'Je ne sais pas'\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de nombres', 4, '1 : Petits entiers\\n2 : Grands entiers\\n3 : Décimaux\\n4 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","amcType","interactifType","interactifReady","description","EqResolvantesThales","Exercice","this","debug","nbQuestions","sup","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","tailleDiaporama","video","nouvelleVersion","numLowInt","fLowInt","fEqOrNotLowInt","denLowInt","numBigInt","denBigInt","fBigInt","fEqOrNotBigInt","numDec","denDec","fDec","masterChoice","fEqOrNotDec","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","equalOrNot","f","fEqOrNot","num","den","egalite","justification","fracEqualOrNot","bool","n","d","f2","f1","fraction","calcul","k","frac","showFracNumDenDec","texNombre2","justifyEq","strOut","texteEnCouleur","Number","isInteger","texFraction","randint","choice","enonces","push","enonce","question","correction","autoCorrection","propositions","statut","options","ordered","interactif","propositionsQcm","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}