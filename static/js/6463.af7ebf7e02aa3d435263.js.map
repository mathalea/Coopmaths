{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G32-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Calculs_trigonometriques3","Exercice","this","consigne","nbCols","nbColsCorr","sup","tailleDiaporama","video","nbQuestions","spacingCorr","spacing","nouvelleVersion","listeQuestions","listeCorrections","distance","alfa","baita","beta","alpha","taille","A","B","H","S","p","objets","context","texte","texteCorr","i","cpt","randint","Math","tan","PI","point","pointAdistance","polygoneAvecNom","push","segment","codageAngleDroit","afficheMesureAngle","texteSurSegment","texNombre","texteParPosition","milieu","x","y","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","round","texNombrec","indexOf","listeQuestionsToContenu","besoinFormulaireCaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/6463.af7ebf7e02aa3d435263.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, texNombre, texNombrec } from '../../modules/outils.js'\nimport { texteSurSegment, pointAdistance,polygoneAvecNom, afficheMesureAngle, codageAngleDroit, point, segment, texteParPosition, milieu, mathalea2d } from '../../modules/2d.js';\nexport const titre = 'Calculer la hauteur d’une falaise'\n\n/**\n * Propose de calculer la hauteur d'une falaise en utilisant les angles de vue depuis deux positions d'un bateau sans s'en approcher.\n * @author Jean-Claude Lhote\n * Référence 3G32-3\n*/\nexport default function Calculs_trigonometriques3() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbCols = 1; // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1; // Uniquement pour la sortie LaTeX\n  this.sup = true; // Niveau de difficulté \n  this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = \"\" // Id YouTube ou url\n  this.nbQuestions = 1\n  this.spacingCorr=2\n  this.spacing=2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let distance, alfa,baita, beta, alpha, taille, A, B, H, S, objets = [], p\n    if (context.isHtml) {\n      alfa='α'\n      baita='β'\n    }\n    else {\n      alfa='\\\\alpha'\n      baita='\\\\beta'\n    }\n\n    for (let i = 0, texte, texteCorr,cpt = 0; i < this.nbQuestions && cpt < 50;) {\n        objets=[]\n          alpha = randint(25, 45)\n          beta = Math.tan(alpha * Math.PI / 180) * Math.tan((alpha + 1) * Math.PI / 180) / (Math.tan((alpha + 1) * Math.PI / 180) - Math.tan(alpha * Math.PI / 180))\n          distance = randint(5, 10)\n          taille = beta * distance\n          A = point(0, 0, 'A')\n          B = pointAdistance(A, 5, 0, 'B')\n          H = pointAdistance(A, 12, 0, 'H')\n          S = pointAdistance(H, 7, 90, 'S')\n          p = polygoneAvecNom(A, B, H, S)\n          objets.push(p[1], p[0], segment(S, B), codageAngleDroit(A, H, S))\n          objets.push(afficheMesureAngle(H, A, S, 'black', 2, `${alfa}`), afficheMesureAngle(H, B, S, 'black', 2, `${baita}`))\n          objets.push(texteSurSegment(`${texNombre(distance)} m`, A, B, 'black', -0.5), texteParPosition(`h`, milieu(H, S).x + 0.5, milieu(H, S).y, 0, 'black', 2, \"middle\", true))\n\n          texte = `Un observateur sur un bateau s'approche d'une falaise dont il veut mesurer la hauteur.<br>`;\n          texte += `Il jette l'ancre puis constate qu'il voit la falaise sous un angle de $${alpha}\\\\degree$.<br>`\n          texte += `Il se rapproche ensuite de la falaise jusqu'à la voir sous un angle de $${alpha + 5}\\\\degree$.<br>`\n          texte += `Il constate qu'entre ses deux mesures, il s'est rapproché de la falaise de $${distance}$ m.<br>`\n          if (this.sup) {\n            texte += `Le schéma ci-dessous n'est pas en vraie grandeur.<br>` + mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 8, pixelsParCm: 20, scale: 0.5 }, objets);\n            texte += `<br>Exprimer $h$ en fonction de $BH$ et $${alfa}$ puis en fonction de $AH$ et $${baita}$.<br>`\n            texte += `En déduire $BH$ en fonction de $AB$, $${alfa}$ et $${baita}$.<br>`\n            texte += `Exprimer $HS$ en fonction de $AB$, $${alfa}$ et $${baita}$.<br>`\n          }\n          texte += `Quelle est la hauteur de la falaise ?<br>`\n          texte += `A quelle distance du pied de la falaise se trouve l'observateur lors du deuxième relevé ?<br>`\n          texte += `Arrondir les résultats au mètre près. (On supposera le point d'observation au niveau de l'eau)`\n          texteCorr = mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 8, pixelsParCm: 20, scale: 0.5 }, objets)\n          texteCorr += `<br>Dans le triangle $BHS$ rectangle en $H$, $\\\\tan(${baita})=\\\\dfrac{h}{BH}$.<br>D'où $h=BH\\\\times \\\\tan(${baita})$.<br>`\n          texteCorr += `<br>Dans le triangle $AHS$ rectangle en $H$, $\\\\tan(${alfa})=\\\\dfrac{h}{AH}$.<br>D'où $h=AH\\\\times \\\\tan(${alfa})$.<br>`\n          texteCorr += `Or $AH=AB+BH$ donc $h=(AB+BH)\\\\times \\\\tan(${alfa})$.<br>`\n          texteCorr += `On en déduit que $BH\\\\times \\\\tan(${baita})=(AB+BH)\\\\times \\\\tan(${alfa})$ soit $BH\\\\times \\\\tan(${baita})=AB\\\\times \\\\tan(${alfa})+BH\\\\times \\\\tan(${alfa})$.<br>`\n          texteCorr += `D'où $AB\\\\times \\\\tan(${alfa})=BH\\\\times \\\\tan(${baita})-BH\\\\times \\\\tan(${alfa})=BH\\\\times (\\\\tan(${baita})-\\\\tan(${alfa}))$.<br>`\n          texteCorr += `Et $BH=\\\\dfrac{AB\\\\times \\\\tan(${alfa})}{\\\\tan(${baita})-\\\\tan(${alfa})}$.<br>`\n          texteCorr += `Ainsi $h=BH\\\\times \\\\tan(${baita})=\\\\dfrac{AB\\\\times \\\\tan(${alfa})\\\\times \\\\tan(${baita})}{\\\\tan(${baita})-\\\\tan(${alfa})}$.<br>`\n          texteCorr += `Application numérique : <br>`\n          texteCorr += `$h=\\\\dfrac{${distance}\\\\times \\\\tan(${alpha})\\\\times \\\\tan(${alpha + 5})}{\\\\tan(${alpha + 5})-\\\\tan(${alpha})}\\\\approx ${Math.round(taille)}$ m.<br>`\n          texteCorr += `$BH=\\\\dfrac{${distance}\\\\times \\\\tan(${alpha})}{\\\\tan(${alpha + 5})-\\\\tan(${alpha})}\\\\approx ${texNombrec(Math.round(taille / Math.tan((alpha + 5) * Math.PI / 180)))}$ m.<br>`\n          texteCorr += `La hauteur de la falaise est de $${Math.round(taille)}$ m et l'observateur se trouve à $${texNombrec(Math.round(taille / Math.tan((alpha + 5) * Math.PI / 180)))}$ m de celle-ci lors du deuxième relevé.<br>`;\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireCaseACocher = ['Afficher un schéma et des questions intermédiaires'];\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}