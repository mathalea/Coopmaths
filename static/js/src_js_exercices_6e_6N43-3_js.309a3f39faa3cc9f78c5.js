/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e_6N43-3_js"],{

/***/ "./src/js/exercices/6e/6N43-3.js":
/*!***************************************!*\
  !*** ./src/js/exercices/6e/6N43-3.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"amcReady\": () => (/* binding */ amcReady),\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ ExerciceVraiFauxDivisibleMultipleDiviseur)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst amcReady = true\n\nconst titre = 'Diviseur, multiple, divisible - Vrai ou faux'\n\n/**\n * Vrai ou faux sur les notions de diviseur ou multiple\n * @Auteur Rémi Angot\n * Référence 6N43-3\n*/\nfunction ExerciceVraiFauxDivisibleMultipleDiviseur() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"Pour chaque affirmation, indiquer si elle est vraie ou fausse.\";\n  this.nb_questions = 5;\n  this.nb_cols = 2; // Uniquement pour la sortie LaTeX\n  this.nb_cols_corr = 2; // Uniquement pour la sortie LaTeX\n  this.sup = 1; // Niveau de difficulté à ne définir que si on peut le modifier avec un formulaire en paramètre\n  this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = \"\" // Id YouTube ou url\n  this.QCM_disponible=true\n  this.ModeQCM=false\n  \n  function justification(N,a,booleen) {\n\n    let result\n    if (booleen == true){\n      if (N == 2) {\n        result = ', car son chiffre des unités est $0$, $2$, $4$, $6$ ou $8$.'\n      }\n      else if (N == 5) {\n        result = ', car son chiffre des unités est $0$, ou $5$.'\n      }\n      else if (N == 3 || N == 9) {\n        result = `, car la somme de ses chiffres est $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.somme_des_chiffre)(a.toString())}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.somme_des_chiffre)(a.toString()))}$ qui est divisible par $${N}$.`\n      }\n      else {\n        result = `, car $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)} = ${N}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(a/N)}$.`\n      }\n    }\n    if (booleen == false){\n      if (N == 2) {\n        result = \", car son chiffre des unités n'est pas $0$, $2$, $4$, $6$ ou $8$.\"\n      }\n      else if (N == 5) {\n        result = \", car son chiffre des unités n'est pas $0$, ou $5$.\"\n      }\n      else if (N == 3 || N == 9) {\n        result = `, car la somme de ses chiffres est $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.somme_des_chiffre)(a.toString())}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.somme_des_chiffre)(a.toString()))}$ qui n'est pas divisible par $${N}$.`\n      }\n      else {\n        result = `, car $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)} = ${N}\\\\times ${Math.floor(a/N)}+ ${a%N}$.`\n      }\n    }\n    return result\n  }\n\n  this.nouvelle_version = function () {\n    this.QCM=['6N43-3',[],\"Diviseur, multiple, divisible - Vrai ou faux\",1,{ordered:true,lastChoices:2}]\n    let tabrep,tabicone\n    let espace =``;\n    if (sortie_html) {\n      espace = `&emsp;`;\n    } else {\n      espace = `\\\\qquad`;\n    }\n\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n\n    let type_de_questions_disponibles = ['Ndiviseur','divisibleParN','multipleDeN','NdiviseurF','divisibleParNF','multipleDeNF','NdiviseurEnvers','divisibleParNEnvers','multipleDeNEnvers']; \n    if (this.nb_questions<8) {\n      type_de_questions_disponibles = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(['Ndiviseur','divisibleParN']),'multipleDeN',(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(['NdiviseurF','divisibleParNF']),'multipleDeNF',(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(['NdiviseurEnvers','divisibleParNEnvers','multipleDeNEnvers'])]; \n    }\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(type_de_questions_disponibles,this.nb_questions); // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    let liste_de_N_disponibles\n    if (this.sup == 1) {\n        liste_de_N_disponibles = [2,5]\n    }\n    if (this.sup == 2) {\n        liste_de_N_disponibles = [2,3,5,9]\n    }\n    if (this.sup == 3) {\n        liste_de_N_disponibles = [7,11,13,20,30,25]\n    }\n    let liste_de_N = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(liste_de_N_disponibles,this.nb_questions); // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texte_corr, N, a, cpt = 0; i < this.nb_questions && cpt < 50;) {\n        // Boucle principale où i+1 correspond au numéro de la question\n        N = liste_de_N[i]\n        a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(199,999)*N;\n        switch (liste_type_de_questions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'Ndiviseur': \n          texte = `$${N}$ est un diviseur de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$.`;\n          texte_corr = texte.replace('.',' ') + ' : Vrai';\n          texte_corr += justification(N,a,true);\n          tabrep=[\"Vrai\",\"Faux\",\"Je ne sais pas\"];\n          tabicone=[1,0,0]\n          break;\n        case 'divisibleParN': \n          texte = `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$ est divisible par $${N}$.`;\n          texte_corr = texte.replace('.',' ') + ' : Vrai';\n          texte_corr += justification(N,a,true)\n          tabrep=[\"Vrai\",\"Faux\",\"Je ne sais pas\"];\n          tabicone=[1,0,0]\n         break;\n        case 'multipleDeN': \n          texte = `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$ est un multiple de $${N}$.`;\n          texte_corr = texte.replace('.',' ') + ' : Vrai';\n          texte_corr += justification(N,a,true)\n          tabrep=[\"Vrai\",\"Faux\",\"Je ne sais pas\"];\n          tabicone=[1,0,0]\n         break;\n        case 'NdiviseurF':\n          a += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1,N-1) \n          texte = `$${N}$ est un diviseur de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$.`;\n          texte_corr = texte.replace('.',' ') + ' : Faux';\n          texte_corr += justification(N,a,false)\n          tabrep=[\"Vrai\",\"Faux\",\"Je ne sais pas\"];\n          tabicone=[0,1,0]\n         break;\n        case 'divisibleParNF': \n          a += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1,N-1) \n          texte = `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$ est divisible par $${N}$.`;\n          texte_corr = texte.replace('.',' ') + ' : Faux';\n          texte_corr += justification(N,a,false)\n          tabrep=[\"Vrai\",\"Faux\",\"Je ne sais pas\"];\n          tabicone=[0,1,0]\n          break;\n        case 'multipleDeNF': \n          a += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1,N-1) \n          texte = `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$ est un multiple de $${N}$.`;\n          texte_corr = texte.replace('.',' ') + ' : Faux';\n          texte_corr += justification(N,a,false)\n          tabrep=[\"Vrai\",\"Faux\",\"Je ne sais pas\"];\n          tabicone=[0,1,0]\n          break;\n        case 'NdiviseurEnvers': \n          texte = `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$ est un diviseur de $${N}$.`;\n          texte_corr = texte.replace('.',' ') + ' : Faux';\n          texte_corr += `, il faudrait plutôt dire $${N}$ est un diviseur de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$`\n          texte_corr += justification(N,a,true)\n          tabrep=[\"Vrai\",\"Faux\",\"Je ne sais pas\"];\n          tabicone=[0,1,0]\n          break;\n        case 'divisibleParNEnvers': \n          texte = `$${N}$ est divisible par $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$.`;\n          texte_corr = texte.replace('.',' ') + ' : Faux';\n          texte_corr += `, il faudrait plutôt dire $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$ est divisible par $${N}$`\n          texte_corr += justification(N,a,true)\n          tabrep=[\"Vrai\",\"Faux\",\"Je ne sais pas\"];\n          tabicone=[0,1,0]\n          break;\n        case 'multipleDeNEnvers': \n          texte = `$${N}$ est un multiple de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$.`;\n          texte_corr = texte.replace('.',' ') + ' : Faux';\n          texte_corr += `, il faudrait plutôt dire $${a}$ est un multiple de $${N}$`\n          texte_corr += justification(N,a,true)\n          tabrep=[\"Vrai\",\"Faux\",\"Je ne sais pas\"];\n          tabicone=[0,1,0]\n           break;\n      }\n      if (this.ModeQCM&&!mathalea.sortieAMC) {\n        texte_corr=`${texte}..`\n        texte+=`<br><br>  Réponses possibles : ${espace}  `\n        //shuffle2tableaux(tabrep, tabicone);\n        for (let i=0; i<tabrep.length; i++) {\n          texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace ;\n         if (tabicone[i]==1) {\n           texte_corr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace ;\n         } else {\n           texte_corr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace ;\n         }\n       }\n      }\n      if (this.liste_questions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        this.QCM[1].push([`${texte}.\\\\\\\\ \\n `,\n        tabrep,\n        tabicone]) \n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  this.besoin_formulaire_numerique = ['Niveau de difficulté',3,'1 : Critères de divisibilité par 2 et 5\\n2 : Critères de divisibilité par 2, 3, 5 et 9\\n3 : Sans critères de divisibilité'];\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/6N43-3.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);