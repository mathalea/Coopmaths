{"version":3,"file":"js/73031.6daf8d95ac54ce1296a6.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2F10-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, reduireAxPlusB, abs, pgcd, texteEnCouleurEtGras, texFraction, miseEnEvidence, ecritureAlgebrique, texFractionReduite } from '../../modules/outils.js'\nimport { repere2, droite, mathalea2d, point, tracePoint, segment, texteParPosition, latexParPoint, vecteur, translation, homothetie } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\n\nexport const titre = 'Lecture graphique d’une fonction affine'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n/**\n\n*/\nexport default function lecturefonctionaffine () {\n  Exercice.call(this)\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 3// On complète le nb de questions\n  this.tailleDiaporama = 100\n  this.video = ''\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.spacingCorr = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    // let typesDeQuestionsDisponibles = []\n    // typesDeQuestionsDisponibles = [1, 2]// On complète selon le nb de cas dans l'exo (switch)\n    const o = texteParPosition('O', -0.5, -0.5, 'milieu', 'black', 1)\n\n    // const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    this.sup = parseInt(this.sup)\n    for (let i = 0, A, a, b, d, r, f, c, t, l, s1, s2, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;) { // on rajoute les variables dont on a besoin\n      // typesDeQuestions = listeTypeDeQuestions[i]\n      r = repere2()// On définit le repère\n\n      if (this.sup === 1) {\n        a = randint(0, 10)\n        a = a - 5// coefficient directeur\n        b = randint(0, 10)\n        b = b - 5// ordonnée à l'origine\n        if (a === 0 && b === 0) {\n          a = 1\n        }// On évite la fonction nulle\n        c = droite(a, -1, b)\n        c.color = 'red'\n        c.epaisseur = 2\n        texte = 'Déterminer graphiquement l\\'expression algébrique de la fonction affine $f$ représentée ci-dessus :<br>'\n        texte += mathalea2d({\n          xmin: -6,\n          ymin: -6,\n          xmax: 6,\n          ymax: 6\n        }, r, c, o)// On trace le graphique\n        if (context.isAmc) {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: `$f(x)=${reduireAxPlusB(a, b)}$`,\n                  statut: '',\n                  reponse: {\n                    texte: 'coefficient a de $y=ax+b$',\n                    valeur: a,\n                    param: {\n                      digits: 1,\n                      decimals: 0,\n                      signe: true,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: '',\n                  statut: '',\n                  reponse: {\n                    texte: 'valeur b de $y=ax+b$',\n                    valeur: b,\n                    param: {\n                      digits: 1,\n                      decimals: 0,\n                      signe: true,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n        } else if (this.interactif) {\n          texte += '<br>$f(x) =$' + ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, `${reduireAxPlusB(a, b)}`)\n        }\n\n        texteCorr = 'On sait que l\\'expression algébrique d\\'une fonction affine est de la forme :$f(x)=ax+b$, avec $a$ et $b$ deux réels.<br>'\n        texteCorr += 'Le premier coefficient qu\\'on peut facilement lire graphiquement est $b$, l\\'ordonnée à l\\'origine de la droite.<br>'\n        texteCorr += `On lit ici que le point $(0;${b}) \\\\in \\\\mathcal{C_f}$.<br>`\n        texteCorr += `On peut alors conclure que l'ordonnée à l'origine est : $${b}$. <br>`\n        texteCorr += 'On peut lire le coefficient directeur de la droite, en lisant le déplacement vertical correspondant à un déplacement horizontal d\\'une unité .<br>'\n        texteCorr += `On lit alors que le coefficient directeur de la droite est : $${a}$.<br>`\n        texteCorr += ' On peut en déduire que l\\'expression de la fonction $f$ est'\n\n        texteCorr += `$f(x)=${reduireAxPlusB(a, b)}$<br>`\n        texteCorr += mathalea2d({\n          xmin: -6,\n          ymin: -6,\n          xmax: 6,\n          ymax: 6\n        }, r, c, o)// On trace le graphique\n      }\n      if (this.sup === 2) { // cas du coeff directeur fractionnaire\n        a = randint(-5, 5, [0]) // numérateut coefficient directeur non nul\n        b = randint(-5, 5) // ordonnée à l'origine\n        d = randint(2, 5, [a, 2 * a]) // dénominateur coefficient directeur non multiple du numérateur pour éviter nombre entier\n        r = repere2()// On définit le repère\n        c = droite(a / d, -1, b)\n        c.color = 'red'\n        c.epaisseur = 2\n        texte = 'A partir de la représentation graphique de la droite ci-dessous, donner par lecture graphique son équation réduite'\n        texte += mathalea2d({\n          xmin: -6,\n          ymin: -6,\n          xmax: 6,\n          ymax: 6\n        }, r, c, o)// On trace le graphique\n\n        texteCorr = 'On sait que l\\'équation réduite d\\'une droite non verticale est de la forme : $y= ax+b$ avec $a$ et $b$ deux réels non tous deux nuls.<br>'\n        texteCorr += 'Le premier coefficient à lire graphiquement est $b$, l\\'ordonnée à l\\'origine de la droite.<br>'\n        texteCorr += 'C\\'est l\\'ordonnée du point d\\'intersection de la droite avec l\\'axe des ordonnées.<br>'\n        texteCorr += `On lit ici que : $A(0;${b}) \\\\in (d)$.<br>`\n        texteCorr += `On peut alors conclure que l'ordonnée à l'origine est : $b=${b}$. <br>`\n        texteCorr += 'On peut lire ensuite le coefficient directeur $a$ de la droite $(d)$.<br>'\n        texteCorr += 'On sait que $a=\\\\dfrac{\\\\text{Dénivelé vertical}}{\\\\text{Déplacement horizontal}}$'\n        texteCorr += '<br>On cherche un déplacement horizontal (en bleu) correspondant à un déplacement vertical entier (en vert).'\n        texteCorr += `<br>On lit que pour un déplacement vers la droite de ${texteEnCouleurEtGras(d + ' unités', 'blue')}, il faut `\n        if (a > 0) { texteCorr += 'monter de ' }\n        if (a < 0) { texteCorr += 'descendre de ' }\n        texteCorr += `${texteEnCouleurEtGras(Math.abs(a) + ' unités', 'green')}.`\n        texteCorr += `<br>Il vient : $a=${texFraction(miseEnEvidence(a, 'green'), miseEnEvidence(d, 'blue'))}`\n        f = pgcd(a, d)\n        if (f !== 1) {\n          if (a % d === 0) {\n            texteCorr += `=${a / d}`\n          } else {\n            a /= f\n            d /= f\n            texteCorr += `=${texFraction(miseEnEvidence(a, 'green'), miseEnEvidence(d, 'blue'))}`\n          }\n        }\n        texteCorr += '$'\n\n        texteCorr += '<br>On peut en déduire que l\\'équation réduite de la droite $(d)$ est : $y= '\n        if (a === d) { texteCorr += 'x' }\n        if (a === -d) { texteCorr += '-x' }\n        if (a !== d & a !== -d) { texteCorr += `${texFractionReduite(a, d)}x` }\n\n        if (b !== 0) { texteCorr += `${ecritureAlgebrique(b)}` }\n        texteCorr += '$.<br>'\n        if (context.isAmc) {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: `$${texFractionReduite(a, d)}x${ecritureAlgebrique(b)}$`,\n                  statut: '',\n                  reponse: {\n                    texte: 'numérateur (signé) n de $y=\\\\dfrac{n}{d}x+b$',\n                    valeur: a,\n                    param: {\n                      digits: 1,\n                      decimals: 0,\n                      signe: true,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: '',\n                  statut: '',\n                  reponse: {\n                    texte: 'dénominateur d de $y=\\\\dfrac{n}{d}x+b$',\n                    valeur: d,\n                    param: {\n                      digits: 1,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: '',\n                  statut: '',\n                  reponse: {\n                    texte: 'valeur b de $y=ax+b$',\n                    valeur: b,\n                    param: {\n                      digits: 1,\n                      decimals: 0,\n                      signe: true,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n        } else if (this.interactif && !context.isAmc) {\n          texte += '<br>$y =$' + ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, `${texFractionReduite(a, d)}x${ecritureAlgebrique(b)}`)\n        }\n        if (a > 0) {\n          s1 = segment(0, b - a, -d, b - a, 'blue')\n          s2 = segment(0, b - a, 0, b, 'green')\n        }\n        if (a < 0) {\n          s1 = segment(d, b, 0, b, 'blue')\n          s2 = segment(d, b, d, b - abs(a), 'green')\n        }\n        s2.epaisseur = 2\n        s1.epaisseur = 2\n        s2.styleExtremites = '->'\n        s1.styleExtremites = '<-'\n        A = point(0, b)\n\n        l = latexParPoint('A', translation(A, homothetie(vecteur(-a, d), A, 0.5 / Math.sqrt(a ** 2 + d ** 2)), 'A', 'center'), 'red', 10, 10, '') // Variable qui trace les points avec une croix\n        t = tracePoint(A, 'red')// Variable qui trace les nom s A et B\n        t.taille = 3\n        t.epaisseur = 2\n        l.color = 'red'\n        if (a !== 0) {\n          texteCorr += mathalea2d({\n            xmin: -8,\n            ymin: -10,\n            xmax: 8,\n            ymax: 10\n\n          }, r, s1, s2, t, l, c, o)\n        }// On trace le graphique\n      }\n\n      if (this.questionJamaisPosee(i, a, b)) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Types de question ', 2, '1 : Valeurs entières\\n2 : Valeurs fractionnaires.']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","lecturefonctionaffine","Exercice","this","consigne","nbQuestions","tailleDiaporama","video","nbCols","nbColsCorr","spacing","spacingCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","o","texteParPosition","parseInt","A","a","b","d","r","f","c","t","l","s1","s2","texte","texteCorr","i","cpt","repere2","randint","droite","color","epaisseur","mathalea2d","xmin","ymin","xmax","ymax","context","autoCorrection","enonce","propositions","type","reduireAxPlusB","statut","reponse","valeur","param","digits","decimals","signe","approx","interactif","ajouteChampTexteMathLive","setReponse","texteEnCouleurEtGras","Math","abs","texFraction","miseEnEvidence","pgcd","texFractionReduite","ecritureAlgebrique","segment","styleExtremites","point","latexParPoint","translation","homothetie","vecteur","sqrt","tracePoint","taille","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}