{"version":3,"file":"js/68678.e7f2a7ad1873b9d66d44.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G12-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { axes, mathalea2d, point, polygoneAvecNom, repere2 } from '../../modules/2d.js'\nimport { extraireRacineCarree, listeQuestionsToContenu, randint, choice, combinaisonListes, ecritureParentheseSiNegatif, fractionSimplifiee, texNombre } from '../../modules/outils.js'\nexport const titre = 'Déterminer la nature d’un polygone'\n\n/**\n * 2G12\n * @author Stéphane Guyon\n */\nexport default function NaturePolygone () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.nbQuestions = 2\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  // this.sup = 1 ; //\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4, 5]; let typesDeQuestions\n    let objets\n    let A, B, C, D, P, XMIN, XMAX, YMIN, YMAX\n\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, a, facteur, radical, ux, uy, xA, yA, xB, yB, xC, yC, xD, yD, AB, XAB, YAB, XAC, YAC, XBC, YBC, AC, BC, XAD, YAD, AD, xI0, xI1, yI0, yI1, xJ0, xJ1, yJ0, yJ1, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      objets = []\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        // Cas par cas, on définit le type de nombres que l'on souhaite\n        // Combien de chiffres ? Quelles valeurs ?\n\n        case 1:\n\n          xA = randint(0, 5) * choice([-1, 1])\n          yA = randint(0, 5) * choice([-1, 1])\n          ux = randint(1, 5) * choice([-1, 1])\n          uy = randint(1, 5) * choice([-1, 1])\n          xB = xA + ux\n\n          yB = yA + uy\n\n          xC = xA - uy\n          yC = yA + ux\n          xD = 0 // pour ne pas bloquer le recadrage du repère\n          yD = 0\n          XAB = (xB - xA) * (xB - xA)\n          YAB = (yB - yA) * (yB - yA)\n          AB = XAB + YAB\n          XAC = (xC - xA) * (xC - xA)\n          YAC = (yC - yA) * (yC - yA)\n          XBC = (xC - xB) * (xC - xB)\n          YBC = (yC - yB) * (yC - yB)\n          AC = XAC + YAC\n          texte = 'Dans un repère orthonormé $(O,I,J)$, on donne les points suivants :'\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right)$ et $C\\\\left(${xC};${yC}\\\\right)$`\n          texte += '<br>Déterminer la nature du triangle $ABC$ '\n\n          texteCorr = 'A partir du repère, on a envie de prouver que$ABC$ est un triangle isocèle en $A$.'\n          texteCorr += '<br> On calcule donc séparément les distances $AB$ et $AC$ '\n          texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d\\'un repère orthonormé,'\n          texteCorr += ' alors on a : $AB=\\\\sqrt{\\\\left(x_B-x_A\\\\right)^{2}+\\\\left(y_B-y_A\\\\right)^{2}}$<br>'\n          texteCorr += `On applique la relation à l'énoncé : $AB=\\\\sqrt{\\\\left(${xB}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yB}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AB=\\\\sqrt{${XAB}+${YAB}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AB=\\\\sqrt{${texNombre(XAB + YAB)}}$<br>`\n          facteur = extraireRacineCarree(AB)[0]\n          radical = extraireRacineCarree(AB)[1]\n          if (radical !== 1) {\n            if (facteur !== 1) {\n              texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          } else {\n            texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}$<br>`\n          }\n\n          texteCorr += `De même : $AC=\\\\sqrt{\\\\left(${xC}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yC}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{De meme :       } AC=\\\\sqrt{${XAC}+${YAC}}$<br>`\n          texteCorr += `$\\\\phantom{De meme :       } AC=\\\\sqrt{${texNombre(XAC + YAC)}}$<br>`\n          facteur = extraireRacineCarree(AC)[0]\n          radical = extraireRacineCarree(AC)[1]\n          if (radical !== 1) {\n            if (facteur !== 1) {\n              texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          } else {\n            texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}$<br>`\n          }\n          texteCorr += 'On observe que $AC=AB$ donc le triangle $ABC$ est isocèle.'\n          texteCorr += '<br>On calcule $BC$ pour vérifier s\\'il est ou non  équilatéral.'\n          texteCorr += `<br>On obtient : $BC=\\\\sqrt{${XBC}+${YBC}}=\\\\sqrt{${texNombre(XBC + YBC)}}$<br>`\n          if (XBC + YBC === XAB + YAB) { texteCorr += 'Le triangle $ABC$ est équilatéral.' } else { texteCorr += 'Le triangle $ABC$ est simplement isocèle, il n\\'est pas équilatéral.' }\n\n          ;\n          A = point(xA, yA, 'A')\n          B = point(xB, yB, 'B')\n          C = point(xC, yC, 'C')\n          P = polygoneAvecNom(A, B, C)\n          objets.push(P[0], P[1])\n          break\n        case 2:\n\n          xA = randint(0, 5) * choice([-1, 1])\n          yA = randint(0, 5) * choice([-1, 1])\n          ux = randint(1, 5) * choice([-1, 1])\n          uy = randint(1, 5) * choice([-1, 1])\n          xB = xA + ux\n          yB = yA + uy\n          xC = xA - uy\n          yC = yA + ux\n          XAB = (xB - xA) * (xB - xA)\n          YAB = (yB - yA) * (yB - yA)\n          AB = XAB + YAB\n          XAC = (xC - xA) * (xC - xA)\n          YAC = (yC - yA) * (yC - yA)\n          XBC = (xC - xB) * (xC - xB)\n          YBC = (yC - yB) * (yC - yB)\n          AC = XAC + YAC\n          texte = 'Dans un repère orthonormé $(O,I,J)$, on donne les points suivants :'\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right)$ et $C\\\\left(${xC};${yC}\\\\right)$`\n          texte += '<br>Déterminer la nature du triangle $ABC$ '\n\n          texteCorr = 'A partir du repère, on a envie de prouver que$ABC$ est un triangle rectangle en $A$.'\n          texteCorr += '<br> Pour vérifier que le triangle est rectabgle, on va utiliser la réciproque du théorème de Pythagore.'\n          texteCorr += '<br> On calcule donc séparément les distances $AB^{2}$ ; $AC^{2}$ et $BC^{2}$ pour vérifier si $BC^{2}=AB^{2}+AC^{2}$ .'\n          texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d\\'un repère orthonormé,'\n          texteCorr += ' alors on a : $AB^{2}=\\\\left(x_B-x_A\\\\right)^{2}+\\\\left(y_B-y_A\\\\right)^{2}$<br>'\n          texteCorr += `On applique la relation à l'énoncé : $AB^{2}=\\\\left(${xB}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yB}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AB^{2}={${XAB}+${YAB}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AB^{2}={${texNombre(XAB + YAB)}}$<br>`\n\n          texteCorr += `De même : $AC^{2}={\\\\left(${xC}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yC}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{De meme :       } AC^{2}={${XAC}+${YAC}}$<br>`\n          texteCorr += `$\\\\phantom{De meme :       } AC^{2}={${texNombre(XAC + YAC)}}$<br>`\n\n          texteCorr += `Enfin : $BC^{2}={\\\\left(${xB}-${ecritureParentheseSiNegatif(xB)}\\\\right)^{2}+\\\\left(${yC}-${ecritureParentheseSiNegatif(yB)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{De meme :       } BC^{2}={${XBC}+${YBC}}$<br>`\n          texteCorr += `$\\\\phantom{De meme :       } BC^{2}={${texNombre(XBC + YBC)}}$<br>`\n          texteCorr += `On observe que $AC^{2}+AB^{2}=${texNombre(XAC + YAC + XAB + YAB)} ~~et~~ BC^{2}={${texNombre(XBC + YBC)}}$.`\n          texteCorr += '<br>On en déduit que $BC^{2}=AC^{2}+AB^{2}$.'\n          texteCorr += '<br>D\\'après la réciproque du théorème de Pythagore,  le triangle ABC est rectangle en A.'\n          A = point(xA, yA, 'A')\n          B = point(xB, yB, 'B')\n          C = point(xC, yC, 'C')\n          P = polygoneAvecNom(A, B, C)\n          objets.push(P[0], P[1])\n          break\n        case 3:\n          xA = randint(0, 9) * choice([-1, 1])\n          yA = randint(0, 9) * choice([-1, 1])\n          ux = randint(1, 5)\n          uy = randint(1, 5, ux) * choice([-1, 1])\n          ux *= choice([-1, 1])\n          xB = xA + ux\n          yB = yA + uy\n          xC = xB - uy\n          yC = yB - ux\n          xD = xC - ux\n          yD = yC - uy\n          xI0 = fractionSimplifiee(xA + xD, 2)[0]\n          xI1 = fractionSimplifiee(xA + xD, 2)[1]\n          yI0 = fractionSimplifiee(yA + yD, 2)[0]\n          yI1 = fractionSimplifiee(yA + yD, 2)[1]\n          xJ0 = fractionSimplifiee(xB + xC, 2)[0]\n          xJ1 = fractionSimplifiee(xB + xC, 2)[1]\n          yJ0 = fractionSimplifiee(yB + yC, 2)[0]\n          yJ1 = fractionSimplifiee(yB + yC, 2)[1]\n          XAB = (xB - xA) * (xB - xA)\n          YAB = (yB - yA) * (yB - yA)\n          AB = XAB + YAB\n          XAD = (xD - xA) * (xD - xA)\n          YAD = (yD - yA) * (yD - yA)\n          AD = XAD + YAD\n          XAC = (xC - xA) * (xC - xA)\n          YAC = (yC - yA) * (yC - yA)\n          AC = XAC + YAC\n          a = axes(-9, -9, 9, 9, 0.2, 1)\n\n          texte = 'Dans un repère orthonormé (O,I,J), on donne les 4 points suivants :<br>'\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`\n          texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`\n          texte += '<br>Démontrer que $ABDC$ est un losange.'\n\n          texteCorr = '<br>Pour prouver que $ABDC$ est un losange, il y a deux stratégies :<br>'\n          texteCorr += '$~~~~~~~~$<B>1.</B> On calcule les quatre longueurs du quadrilatère et on prouve leur égalité.<br>'\n          texteCorr += '$\\\\phantom{~~~~~~~~}$Un quadrilatère qui possède quatre côtés de même longueur est un losange.<br>'\n          texteCorr += '$~~~~~~~~$<B>2. </B> On prouve que $ABDC$ est un parallélogramme, puis il sufit de prouver qu\\'il possède deux côtés consécutifs de même longueur.<br>'\n          texteCorr += '$\\\\phantom{~~~~~~~~}$ Un parallélogramme qui possède deux côtés consécutifs de même longueur est un losange'\n          texteCorr += '<br>Les deux démonstrations se valent. On choisit ici la <B>démonstration n°2</B>, plus variée, mais la n°1 est valable.<br>'\n          texteCorr += '<B>Démonstration :</B><br>'\n          texteCorr += 'On veut prouver que $ABDC$ est un parallélogramme :'\n          texteCorr += '<br>On sait que ABDC est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.'\n          texteCorr += '<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère, pour prouver qu\\'elles sont identiques. :'\n          texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d\\'un repère ,'\n          texteCorr += '<br> alors les coordonnées du point $I$ milieu de $[AD]$ sont '\n          texteCorr += '$I\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>'\n          texteCorr += 'On applique la relation à l\\'énoncé : '\n          texteCorr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${ecritureParentheseSiNegatif(xD)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${ecritureParentheseSiNegatif(yD)}}{2}\\\\end{cases}$`\n          texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${texNombre(xA + xD)}}{2}\\\\\\\\y_I=\\\\dfrac{${texNombre(yA + yD)}}{2}\\\\end{cases}$`\n          if (xI1 !== 1 && yI1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$` }\n          if (xI1 === 1 && yI1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$` }\n          if (xI1 !== 1 && yI1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$` }\n          if (xI1 === 1 && yI1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$` }\n          texteCorr += '<br> Les coordonnées du point $J$ milieu de $[BC]$ sont '\n          texteCorr += '$J\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>'\n          texteCorr += 'On applique la relation à l\\'énoncé : '\n          texteCorr += `$\\\\begin{cases}x_J=\\\\dfrac{${xB}+${ecritureParentheseSiNegatif(xC)}}{2} \\\\\\\\ y_J=\\\\dfrac{${yB}+${ecritureParentheseSiNegatif(yC)}}{2}\\\\end{cases}$`\n          texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_J=\\\\dfrac{${texNombre(xB + xC)}}{2}\\\\\\\\y_J=\\\\dfrac{${texNombre(yB + yC)}}{2}\\\\end{cases}$`\n          if (xJ1 !== 1 && yJ1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$` }\n          if (xJ1 === 1 && yJ1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$` }\n          if (xJ1 !== 1 && yJ1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$` }\n          if (xJ1 === 1 && yJ1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};${yJ0}\\\\right)$` }\n          texteCorr += '<br>On observe que $I$ et $J$ ont les mêmes coordonnées, donc les deux diagonales du quadrilatère se coupent en leur milieu.'\n          texteCorr += '<br>$ABDC$ est donc un parallélogramme.'\n          texteCorr += '<br>On calcule maintenant deux cotés consécutifs : $AB$ et $AC$ par exemple.'\n          texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d\\'un repère orthonormé,'\n          texteCorr += ' alors on a : $AB=\\\\sqrt{\\\\left(x_B-x_A\\\\right)^{2}+\\\\left(y_B-y_A\\\\right)^{2}}.$<br>'\n          texteCorr += `On applique la relation à l'énoncé : $AB=\\\\sqrt{\\\\left(${xB}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yB}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AB=\\\\sqrt{${XAB}+${YAB}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AB=\\\\sqrt{${texNombre(XAB + YAB)}}$<br>`\n\n          facteur = extraireRacineCarree(AB)[0]\n          radical = extraireRacineCarree(AB)[1]\n\n          if (radical !== 1) {\n            if (facteur !== 1) {\n              texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          } else {\n            texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}$<br>`\n          }\n\n          texteCorr += `On procède de même pour $AC$: $AC=\\\\sqrt{\\\\left(${xC}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yC}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AC=\\\\sqrt{${XAC}+${YAC}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AC=\\\\sqrt{${texNombre(XAC + YAC)}}$<br>`\n          facteur = extraireRacineCarree(AC)[0]\n          radical = extraireRacineCarree(AC)[1]\n          if (radical !== 1) {\n            if (facteur !== 1) {\n              texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AC=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          } else {\n            texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AC=\\\\sqrt{${radical}}$<br>`\n          }\n          texteCorr += '<br>On observe que $AB=AC$, $ABDC$ est donc bien un losange.'\n          A = point(xA, yA, 'A')\n          B = point(xB, yB, 'B')\n          C = point(xC, yC, 'C')\n          D = point(xD, yD, 'D')\n          P = polygoneAvecNom(A, B, C, D)\n          objets.push(P[0], P[1])\n\n          break\n        case 4:\n          xA = randint(0, 6) * choice([-1, 1])\n          yA = randint(0, 6) * choice([-1, 1])\n          ux = randint(1, 3) * choice([-1, 1])\n          uy = randint(1, 3) * choice([-1, 1])\n          a = randint(2, 4)\n          xB = xA + ux * a\n          yB = yA + uy * a\n          xC = xA - uy\n          yC = yA + ux\n          xD = xC + ux * a\n          yD = yC + uy * a\n\n          xI0 = fractionSimplifiee(xA + xD, 2)[0]\n          xI1 = fractionSimplifiee(xA + xD, 2)[1]\n          yI0 = fractionSimplifiee(yA + yD, 2)[0]\n          yI1 = fractionSimplifiee(yA + yD, 2)[1]\n          xJ0 = fractionSimplifiee(xB + xC, 2)[0]\n          xJ1 = fractionSimplifiee(xB + xC, 2)[1]\n          yJ0 = fractionSimplifiee(yB + yC, 2)[0]\n          yJ1 = fractionSimplifiee(yB + yC, 2)[1]\n          XAB = (xB - xA) * (xB - xA)\n          YAB = (yB - yA) * (yB - yA)\n          AB = XAB + YAB\n          XAC = (xC - xA) * (xC - xA)\n          YAC = (yC - yA) * (yC - yA)\n          AC = XAC + YAC\n          XAD = (xD - xA) * (xD - xA)\n          YAD = (yD - yA) * (yD - yA)\n          AD = XAD + YAD\n          XBC = (xB - xC) * (xB - xC)\n          YBC = (yB - yC) * (yB - yC)\n          BC = XBC + YBC\n          a = axes(-9, -9, 9, 9, 0.2, 1)\n\n          texte = 'Dans un repère orthonormé (O,I,J), on donne les 4 points suivants :<br>'\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`\n          texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`\n          texte += '<br>Démontrer que $ABDC$ est un rectangle.'\n\n          texteCorr = '<br>Pour prouver que $ABDC$ est un rectangle, il y a pluieurs stratégies :<br>'\n          texteCorr += '$~~~~~~~~$<B>1.</B> On prouve avec la réciproque du théorème de Pythagore que $ABDC$ possède un angle droit,<br>'\n          texteCorr += '$puis on prouve qu\\'il a ses côtés opposés de même longueur.<br>'\n          texteCorr += '$~~~~~~~~$<B>2. </B> On prouve que $ABDC$ est un parallélogramme, puis il sufit de prouver que ses diagonales sont de même longueur.<br>'\n          texteCorr += '$\\\\phantom{~~~~~~~~}$ Un parallélogramme qui a ses diagonales de même longueur est un rectangle.'\n          texteCorr += '<br>Plusiurs démonstrations se valent. On choisit ici la <B>démonstration n°2</B>, mais d\\'autres idées sont valables.<br>'\n          texteCorr += '<B>Démonstration :</B><br>'\n          texteCorr += 'On veut prouver que $ABDC$ est un parallélogramme :'\n          texteCorr += '<br>On sait que $ABDC$ est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.'\n          texteCorr += '<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère, pour prouver qu\\'elles sont identiques. :'\n          texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d\\'un repère ,'\n          texteCorr += '<br> alors les coordonnées du point $I$ milieu de $[AD]$ sont '\n          texteCorr += '$I\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>'\n          texteCorr += 'On applique la relation a l\\'enonce : '\n          texteCorr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${ecritureParentheseSiNegatif(xD)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${ecritureParentheseSiNegatif(yD)}}{2}\\\\end{cases}$`\n          texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${texNombre(xA + xD)}}{2}\\\\\\\\y_I=\\\\dfrac{${texNombre(yA + yD)}}{2}\\\\end{cases}$`\n          if (xI1 !== 1 && yI1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$` }\n          if (xI1 === 1 && yI1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$` }\n          if (xI1 !== 1 && yI1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$` }\n          if (xI1 === 1 && yI1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$` }\n          texteCorr += '<br> Les coordonnées du point $J$ milieu de $[BC]$ sont '\n          texteCorr += '$J\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>'\n          texteCorr += 'On applique la relation à l\\'énoncé : '\n          texteCorr += `$\\\\begin{cases}x_J=\\\\dfrac{${xB}+${ecritureParentheseSiNegatif(xC)}}{2} \\\\\\\\ y_J=\\\\dfrac{${yB}+${ecritureParentheseSiNegatif(yC)}}{2}\\\\end{cases}$`\n          texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_J=\\\\dfrac{${texNombre(xB + xC)}}{2}\\\\\\\\y_J=\\\\dfrac{${texNombre(yB + yC)}}{2}\\\\end{cases}$`\n          if (xJ1 !== 1 && yJ1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$` }\n          if (xJ1 === 1 && yJ1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$` }\n          if (xJ1 !== 1 && yJ1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$` }\n          if (xJ1 === 1 && yJ1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};${yJ0}\\\\right)$` }\n          texteCorr += '<br>On observe que $I$ et $J$ ont les mêmes coordonnées, donc les deux diagonales du quadrilatère se coupent en leur milieu.'\n          texteCorr += '<br>$ABDC$ est donc un parallélogramme.'\n          texteCorr += '<br>On calcule maintenant les diagonales de $ABDC$ : $AD$ et $BC$ par exemple.'\n          texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d\\'un repère orthonormé,'\n          texteCorr += ' alors on a : $AD=\\\\sqrt{\\\\left(x_D-x_A\\\\right)^{2}+\\\\left(y_D-y_A\\\\right)^{2}}.$<br>'\n          texteCorr += `On applique la relation à l'énoncé : $AD=\\\\sqrt{\\\\left(${xD}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yD}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AD=\\\\sqrt{${XAD}+${YAD}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AD=\\\\sqrt{${texNombre(XAD + YAD)}}$<br>`\n          facteur = extraireRacineCarree(AD)[0]\n          radical = extraireRacineCarree(AD)[1]\n          if (radical !== 1) {\n            if (facteur !== 1) {\n              texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AD=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          } else {\n            texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AD=\\\\sqrt{${radical}}$<br>`\n          }\n\n          texteCorr += `On procède de même pour $BC$: $BC=\\\\sqrt{\\\\left(${xC}-${ecritureParentheseSiNegatif(xB)}\\\\right)^{2}+\\\\left(${yC}-${ecritureParentheseSiNegatif(yB)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } BC=\\\\sqrt{${XBC}+${YBC}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } BC=\\\\sqrt{${texNombre(XBC + YBC)}}$<br>`\n          facteur = extraireRacineCarree(BC)[0]\n          radical = extraireRacineCarree(BC)[1]\n          if (radical !== 1) {\n            if (facteur !== 1) {\n              texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } BC=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          } else {\n            texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } BC=${facteur}$<br>`\n          }\n          texteCorr += '<br>On observe que $BC=AD$, $ABDC$ est donc bien un rectangle.'\n          A = point(xA, yA, 'A')\n          B = point(xB, yB, 'B')\n          C = point(xC, yC, 'C')\n          D = point(xD, yD, 'D')\n          P = polygoneAvecNom(A, B, C, D)\n          objets.push(P[0], P[1])\n\n          break\n        case 5:\n          xA = randint(0, 9) * choice([-1, 1])\n          yA = randint(0, 9) * choice([-1, 1])\n          ux = randint(1, 9) * choice([-1, 1])\n          uy = randint(1, 9) * choice([-1, 1])\n          xB = xA + ux\n          yB = yA + uy\n          xC = xA - uy\n          yC = yA + ux\n          xD = xC + ux\n          yD = yC + uy\n\n          xI0 = fractionSimplifiee(xA + xD, 2)[0]\n          xI1 = fractionSimplifiee(xA + xD, 2)[1]\n          yI0 = fractionSimplifiee(yA + yD, 2)[0]\n          yI1 = fractionSimplifiee(yA + yD, 2)[1]\n          xJ0 = fractionSimplifiee(xB + xC, 2)[0]\n          xJ1 = fractionSimplifiee(xB + xC, 2)[1]\n          yJ0 = fractionSimplifiee(yB + yC, 2)[0]\n          yJ1 = fractionSimplifiee(yB + yC, 2)[1]\n          XAB = (xB - xA) * (xB - xA)\n          YAB = (yB - yA) * (yB - yA)\n          AB = XAB + YAB\n          XAC = (xC - xA) * (xC - xA)\n          YAC = (yC - yA) * (yC - yA)\n          AC = XAC + YAC\n          XAD = (xD - xA) * (xD - xA)\n          YAD = (yD - yA) * (yD - yA)\n          AD = XAD + YAD\n          XBC = (xB - xC) * (xB - xC)\n          YBC = (yB - yC) * (yB - yC)\n          BC = XBC + YBC\n          a = axes(-9, -9, 9, 9, 0.2, 1)\n\n          texte = 'Dans un repère orthonormé (O,I,J), on donne les 4 points suivants :<br>'\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`\n          texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`\n          texte += '<br>Démontrer que $ABDC$ est un carré.'\n\n          texteCorr = '<br>Pour prouver que $ABDC$ est un carré, il y a pluieurs stratégies :<br>'\n          texteCorr += 'Dans cette correction, on propose de procéder par étapes :<br>'\n          texteCorr += 'On va prouver d\\'abord que $ABDC$ est un parallélogramme en utilisant les milieux des diagonales.<br>'\n          texteCorr += 'puis on prouvera qu\\'il est un rectangle en comparant ses diagonales.<br>'\n          texteCorr += '<br>Enfin, en vérifiant qu\\'il a deux côtés consécutifs de même longueur, on aura prouvé qu\\'il est un carré. '\n\n          texteCorr += '<br><B>Démonstration :</B><br>'\n          texteCorr += '<B>1. On prouve que $ABDC$ est un parallélogramme :</B>'\n          texteCorr += '<br>On sait que $ABDC$ est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.'\n          texteCorr += '<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère, pour prouver qu\\'elles sont identiques. :'\n          texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d\\'un repère ,'\n          texteCorr += '<br> alors les coordonnées du point $I$ milieu de $[AD]$ sont '\n          texteCorr += '$I\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>'\n          texteCorr += 'On applique la relation à l\\'énoncé : '\n          texteCorr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${ecritureParentheseSiNegatif(xD)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${ecritureParentheseSiNegatif(yD)}}{2}\\\\end{cases}$`\n          texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${texNombre(xA + xD)}}{2}\\\\\\\\y_I=\\\\dfrac{${texNombre(yA + yD)}}{2}\\\\end{cases}$`\n          if (xI1 !== 1 && yI1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$` }\n          if (xI1 === 1 && yI1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$` }\n          if (xI1 !== 1 && yI1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$` }\n          if (xI1 === 1 && yI1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$` }\n          texteCorr += '<br> Les coordonnées du point $J$ milieu de $[BC]$ sont '\n          texteCorr += '$J\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>'\n          texteCorr += 'On applique la relation à l\\'énoncé : '\n          texteCorr += `$\\\\begin{cases}x_J=\\\\dfrac{${xB}+${ecritureParentheseSiNegatif(xC)}}{2} \\\\\\\\ y_J=\\\\dfrac{${yB}+${ecritureParentheseSiNegatif(yC)}}{2}\\\\end{cases}$`\n          texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_J=\\\\dfrac{${texNombre(xB + xC)}}{2}\\\\\\\\y_J=\\\\dfrac{${texNombre(yB + yC)}}{2}\\\\end{cases}$`\n          if (xJ1 !== 1 && yJ1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$` }\n          if (xJ1 === 1 && yJ1 !== 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$` }\n          if (xJ1 !== 1 && yJ1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$` }\n          if (xJ1 === 1 && yJ1 === 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};${yJ0}\\\\right)$` }\n          texteCorr += '<br>On observe que $I$ et $J$ ont les mêmes coordonnées, donc les deux diagonales du quadrilatère se coupent en leur milieu.'\n          texteCorr += '<br>$ABDC$ est donc un parallélogramme.'\n          texteCorr += '<br><B>2. On prouve que $ABDC$ est un rectangle :</B>'\n          texteCorr += '<br>On calcule maintenant les diagonales de $ABDC$ : $AD$ et $BC$ .'\n          texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d\\'un repère orthonormé,'\n          texteCorr += ' alors on a : $AD=\\\\sqrt{\\\\left(x_D-x_A\\\\right)^{2}+\\\\left(y_D-y_A\\\\right)^{2}}.$<br>'\n          texteCorr += `On applique la relation à l'énoncé : $AD=\\\\sqrt{\\\\left(${xD}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yD}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AD=\\\\sqrt{${XAD}+${YAD}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } AD=\\\\sqrt{${texNombre(XAD + YAD)}}$<br>`\n          facteur = extraireRacineCarree(AD)[0]\n          radical = extraireRacineCarree(AD)[1]\n          if (radical !== 1) {\n            if (facteur !== 1) {\n              texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AD=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          } else {\n            texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } AD=${facteur}$<br>`\n          }\n          texteCorr += `On procède de même pour $BC$: $BC=\\\\sqrt{\\\\left(${xC}-${ecritureParentheseSiNegatif(xB)}\\\\right)^{2}+\\\\left(${yC}-${ecritureParentheseSiNegatif(yB)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{On applique la relation a l'enonce :        } BC=\\\\sqrt{${XBC}+${YBC}}$<br>`\n          facteur = extraireRacineCarree(BC)[0]\n          radical = extraireRacineCarree(BC)[1]\n          if (radical !== 1) {\n            if (facteur !== 1) {\n              texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } BC=${facteur}\\\\sqrt{${radical}}$<br>`\n            } else {\n              texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } BC=\\\\sqrt{${radical}}$<br>`\n            }\n          } else {\n            texteCorr += `$\\\\phantom{On applique la relation a l'enonce :   } BC=${facteur}$<br>`\n          }\n          texteCorr += '<br>On observe que $BC=AD$, $ABDC$ est donc bien un rectangle.'\n          texteCorr += '<br><B>3. On prouve que $ABDC$ est un carré :</B>'\n          texteCorr += '<br>On calcule maintenant deux côtés consécutilfs de $ABDC$ : $AB$ et $AC$ par exemple.'\n          texteCorr += ` <br>$AB=\\\\sqrt{\\\\left(${xB}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yB}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`\n          texteCorr += `$AB =\\\\sqrt{${XAB}+${YAB}}$<br>`\n          texteCorr += `$AB =\\\\sqrt{${texNombre(XAB + YAB)}}$<br>`\n          facteur = extraireRacineCarree(AB)[0]\n          radical = extraireRacineCarree(AB)[1]\n          if (radical !== 1) {\n            if (facteur !== 1) {\n              texteCorr += `$AB=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          } else {\n            texteCorr += `$AB=${facteur}$<br>`\n          }\n          texteCorr += `De même : $AC=\\\\sqrt{\\\\left(${xC}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yC}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`\n          texteCorr += `$\\\\phantom{De meme :       } AC=\\\\sqrt{${XAC}+${YAC}}$<br>`\n          texteCorr += `$\\\\phantom{De meme :       } AC=\\\\sqrt{${texNombre(XAC + YAC)}}$<br>`\n          facteur = extraireRacineCarree(AC)[0]\n          radical = extraireRacineCarree(AC)[1]\n          if (radical !== 1) {\n            if (facteur !== 1) {\n              texteCorr += `$\\\\phantom{De meme :       } AC=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          } else {\n            texteCorr += `$\\\\phantom{De meme :  } AC=${facteur}$<br>`\n          }\n          texteCorr += 'On observe que $AC=AB$ donc $ABDC$ est bien un carré.'\n          A = point(xA, yA, 'A')\n          B = point(xB, yB, 'B')\n          C = point(xC, yC, 'C')\n          D = point(xD, yD, 'D')\n          P = polygoneAvecNom(A, B, C, D)\n          objets.push(P[0], P[1])\n\n          break\n      }\n\n      XMIN = Math.min(xA, xB, xC, xD, -1) - 1\n      YMIN = Math.min(yA, yB, yC, yD, -1) - 1\n      XMAX = Math.max(xA, xB, xC, xD, 1) + 1\n      YMAX = Math.max(yA, yB, yC, yD, 1) + 1\n      objets.push(repere2({ xMin: XMIN, yMin: YMIN, xMax: XMAX, yMax: YMAX }))\n      texteCorr += '<br>' + mathalea2d({ xmin: XMIN, ymin: YMIN, xmax: XMAX, ymax: YMAX }, objets)\n      if (this.questionJamaisPosee(i, xA, yA, xB, yB, typesDeQuestions)) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","NaturePolygone","Exercice","this","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","objets","A","B","C","D","P","XMIN","XMAX","YMIN","YMAX","listeTypeDeQuestions","combinaisonListes","a","facteur","radical","ux","uy","xA","yA","xB","yB","xC","yC","xD","yD","AB","XAB","YAB","XAC","YAC","XBC","YBC","AC","BC","XAD","YAD","AD","xI0","xI1","yI0","yI1","xJ0","xJ1","yJ0","yJ1","texte","texteCorr","i","cpt","randint","choice","ecritureParentheseSiNegatif","texNombre","extraireRacineCarree","point","polygoneAvecNom","push","fractionSimplifiee","axes","Math","min","max","repere2","xMin","yMin","xMax","yMax","mathalea2d","xmin","ymin","xmax","ymax","questionJamaisPosee","listeQuestionsToContenu","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}