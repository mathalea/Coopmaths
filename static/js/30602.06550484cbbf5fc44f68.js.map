{"version":3,"file":"js/30602.06550484cbbf5fc44f68.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6P13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, lampeMessage, prenomF, prenomM, calcul, texPrix, texteEnCouleurEtGras } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Augmenter ou diminuer d’un pourcentage'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Description didactique de l'exercice\n * augmenter ou diminuer un prix d'un pourcentage,\n * le calcul intermédiaire du montant de l'augmentation ou de la baisse est demandé\n * Trois niveaux :\n * - 1 valeurs entières et 10%, 20%...;\n * - 2 valeurs entières et 13%, 28%...;\n * - 3 valeurs décimale comme 13,5%...;\n * @author Laurence CANDILLE\n * Référence 6P13\n * Date de Publication : 23/07/2021\n*/\nexport default function AugmenterEtReduireDunPourcentage () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.interactif = true\n  this.interactifType = 'mathLive'\n\n  this.nouvelleVersion = function () {\n    const n = parseInt(this.sup) - 1\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.introduction = lampeMessage({\n      titre: 'Calculatrice autorisée.',\n      texte: 'Ecrire les réponses dans les cases sans arrondir, ne pas préciser \"€\" ni \"euros\" ...',\n      couleur: 'nombres'\n    })\n    const typeQuestionsDisponibles = ['augmentation', 'réduction'] // On créé 2 types de questions\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    let billet, loyer // prix du billet, loyer de l'appart\n    let pr, pa // pourcentage réduction, pourcentage augmentation\n    let mr, ma // montant réduction, montant augmentation\n    let final1, final2 // prix final 1 , prix final 2\n    let prenom1, prenom2 // choix aleatoire des prenoms\n    function nombreDecimales (n) {\n      if (n === 0) {\n        pr = randint(1, 6) * 10\n        pa = randint(1, 3) * 10\n      }\n      if (n === 1) {\n        pr = randint(21, 39, [30])\n        pa = randint(2, 9)\n      }\n      if (n === 2) {\n        pr = calcul((randint(40, 60) * 100 + randint(1, 9) * 10) / 100)\n        pa = calcul((randint(1, 9) * 10 + randint(1, 9)) / 10)\n      }\n    }\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      prenom1 = prenomM()\n      prenom2 = prenomF()\n      billet = randint(100, 200)\n      loyer = randint(501, 899, [600, 700, 800])\n\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'réduction':\n          nombreDecimales(n)\n          mr = calcul(pr * billet / 100)\n          final1 = calcul(billet - mr)\n          texte = `<br> Un billet d'avion coûte ${billet}€. ${prenom1} bénéficie d'une réduction de ${pr} %.<br>`\n          texte += 'a) Le montant de la réduction est :'\n          texte += ajouteChampTexteMathLive(this, i)\n          setReponse(this, i, [mr, mr * 10], { formatInteractif: 'calcul' })\n          texte += `b) Finalement, ${prenom1} paiera son billet :`\n          texte += ajouteChampTexteMathLive(this, i + this.nbQuestions + 1)\n          texteCorr = `<br>a) Le montant de la réduction est :     $${billet}\\\\times ${pr} \\\\div 100 = ~ $`\n          texteCorr += texteEnCouleurEtGras(`$${texPrix(mr)}€.$<br>`)\n          texteCorr += `b) Finalement, ${prenom1} paiera son billet : $${billet} - ${texPrix(mr)} = ~ $`\n          texteCorr += texteEnCouleurEtGras(`$${texPrix(final1)}€.$`)\n          setReponse(this, i + this.nbQuestions + 1, final1)\n          break\n        case 'augmentation':\n          nombreDecimales(n)\n          calcul(ma = pa * loyer / 100)\n          calcul(final2 = loyer + ma)\n\n          texte = `<br> Le loyer de l'appartement de ${prenom2} coûte ${loyer}€. Au 1er janvier, il augmente de ${pa} %.<br>`\n          texte += 'a) Le montant de l\\'augmentation est :'\n          texte += ajouteChampTexteMathLive(this, i)\n          texte += `b) Finalement, ${prenom2} paiera son loyer :`\n          setReponse(this, i, ma)\n          texte += ajouteChampTexteMathLive(this, i + this.nbQuestions + 1)\n          setReponse(this, i + this.nbQuestions + 1, final2)\n          texteCorr = `<br>a) Le montant de l'augmentation est :     $${loyer}\\\\times ${pa} \\\\div 100 = ~ $`\n          texteCorr += texteEnCouleurEtGras(`$${texPrix(ma)}€.$<br>`)\n          texteCorr += `b) Finalement, ${prenom2} paiera son loyer : $${loyer} + ${texPrix(ma)} = ~ $`\n          texteCorr += texteEnCouleurEtGras(`$${texPrix(final2)}€.$`)\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Valeurs entières et 10%, 20% ..\\n2 : Valeurs entières et 4%, 23% ..\\n3 : Une décimale comme 34,5%']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","AugmenterEtReduireDunPourcentage","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","interactif","nouvelleVersion","n","parseInt","listeQuestions","listeCorrections","introduction","lampeMessage","texte","couleur","listeTypeQuestions","combinaisonListes","billet","loyer","pr","pa","mr","ma","final1","final2","prenom1","prenom2","nombreDecimales","randint","calcul","texteCorr","i","cpt","prenomM","prenomF","ajouteChampTexteMathLive","setReponse","formatInteractif","texteEnCouleurEtGras","texPrix","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}