{"version":3,"file":"js/58658.6002356430ce9bee65a6.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G10-1.js","webpack://mathalea/./src/js/exercices/5e/5G30-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import EgaliteDAngles from '../5e/5G30-1.js'\nexport const titre = 'Déterminer des angles en utilisant les cas d\\'égalité'\n// export { interactifReady, interactifType } from '../5e/5G30-1.js'\n// export { amcReady, amcType } from '../5e/5G30-1.js'\n\n/**\n * Clone de 5G42 pour les 2nde\n *\n * @author Sébastien LOZANO\n */\nexport default function EgaliteDAngles2nde () {\n  EgaliteDAngles.call(this)\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, arrondi, choisitLettresDifferentes, miseEnEvidence, numAlpha } from '../../modules/outils.js'\nimport { point, pointSurSegment, pointIntersectionDD, labelPoint, droite, droiteParPointEtParallele, rotation, similitude, codeAngle, longueur, angle, mathalea2d } from '../../modules/2d.js'\n\nexport const titre = 'Déterminer des angles en utilisant les cas d’égalité'\n\n/**\n * Déterminer des angles en utilisant les cas d'égalités : opposés par le sommet, alternes-internes, correspondants...\n * ref 5G30-1\n * publié le 14/11/2020\n * @author Jean-Claude Lhote Inspiré d'exercices du manuel sésamath.\n */\nexport default function EgaliteDAngles () {\n  'use strict'\n  Exercice.call(this)\n  this.sup = 1\n  this.nbQuestions = 1\n  if (context.isHtml) {\n    this.spacing = 2\n    this.spacingCorr = 3\n  } else {\n    this.spacing = 2\n    this.spacingCorr = 2\n  }\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.titre = titre\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    // this.consigne = \"Cet exercice est inspiré d'un exercice du manuel sésamath 5e\"\n    let figure = []; let choix\n    const fig1 = function () {\n      const objets = []; let enonce; let correction\n      const noms = choisitLettresDifferentes(5, 'Q', true); let gras\n      context.isHtml ? gras = '#f15929' : gras = 'black'\n      const A = point(0, 0, noms[0], 'above left')\n      let a = randint(45, 85)\n      const ac = randint(8, 10)\n      const ce = randint(7, 10, ac)\n      const C = similitude(rotation(point(1, 0), A, randint(-45, 45)), A, a, ac, noms[2], 'left')\n      const c = randint(45, 70)\n      const E = similitude(A, C, c, ce / ac, noms[4], 'above right')\n      const CA = droite(C, A)\n      const CE = droite(C, E)\n      const AE = droite(A, E, '', 'gray')\n      AE.epaisseur = 2\n      const B = pointSurSegment(A, C, randint(3, ac - 4), noms[1], 'above left')\n      const BD = droiteParPointEtParallele(B, AE, '', 'gray')\n      BD.epaisseur = 2\n      const D = pointIntersectionDD(BD, CE, noms[3], 'above right')\n      const m1 = codeAngle(E, A, C, 1, '', 'black', 2, 1, 'black', 0.1, true)\n      const m2 = codeAngle(A, C, E, 1, '', 'black', 2, 1, 'black', 0.1, true)\n      const l1 = labelPoint(A, B, C, D, E)\n      const c1 = codeAngle(D, B, A, 1, '', 'blue', 2, 1, 'blue')\n      const c2 = codeAngle(B, D, E, 1, '', 'orange', 2, 1, 'orange')\n      const c3 = codeAngle(D, E, A, 1, '', 'green', 2, 1, 'green')\n      const c4 = codeAngle(D, B, C, 1, '', 'pink', 2, 1, 'pink')\n      const c5 = codeAngle(C, D, B, 1, '', 'red', 2, 1, 'red')\n      objets.push(CA, CE, AE, BD, m1, m2, c1, c2, c3, c4, c5, l1)\n      a = Math.round(angle(E, A, C))\n      enonce = `Dans la figure ci-dessous,  les droites $(${noms[0]}${noms[4]})$ et $(${noms[1]}${noms[3]})$ sont parallèles.<br>`\n      enonce += `On veut déterminer la mesure des angles du quadrilatère $${noms[0]}${noms[1]}${noms[3]}${noms[4]}$ (toutes les réponses doivent être justifiées).<br>`\n      enonce += `${numAlpha(0)} Déterminer la mesure de l'angle $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$.<br>`\n      enonce += `${numAlpha(1)} En déduire la mesure de l'angle $\\\\widehat{${noms[0]}${noms[1]}${noms[3]}}$.<br>`\n      enonce += `${numAlpha(2)} En utilisant la question ${numAlpha(0)}, déterminer la mesure de l'angle $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}$.<br>`\n      enonce += `${numAlpha(3)} En déduire la mesure de l'angle $\\\\widehat{${noms[1]}${noms[3]}${noms[4]}}$.<br>`\n      enonce += `${numAlpha(4)} En utilisant la question ${numAlpha(2)} déterminer la mesure de l'angle $\\\\widehat{${noms[3]}${noms[4]}${noms[0]}}$.<br>`\n      enonce += `${numAlpha(5)} Vérifier la conjecture suivante : « La somme des angles d'un quadrilatère vaut 360°.»<br>`\n      correction = `${numAlpha(0)} Comme les droites $(${noms[0]}${noms[4]})$ et $(${noms[1]}${noms[3]})$ sont parallèles, les angles correspondants $\\\\widehat{${noms[4]}${noms[0]}${noms[1]}}$ et $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$ sont égaux, donc $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$ mesure $${a}\\\\degree$.<br>`\n      correction += `${numAlpha(1)} Les angles $\\\\widehat{${noms[0]}${noms[1]}${noms[3]}}$ et $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$ sont adjacents supplémentaires, donc $\\\\widehat{${noms[0]}${noms[1]}${noms[3]}}$ mesure $180\\\\degree-${a}\\\\degree=${miseEnEvidence(180 - a, gras)}\\\\degree$.<br>`\n      correction += `${numAlpha(2)} Dans un triangle, la somme des angles vaut $180\\\\degree$ donc $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}=180\\\\degree-\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}-\\\\widehat{${noms[1]}${noms[2]}${noms[3]}}=180\\\\degree-${a}\\\\degree-${c}\\\\degree=${180 - a - c}\\\\degree$.<br>`\n      correction += `${numAlpha(3)} Les angles $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}$ et $\\\\widehat{${noms[1]}${noms[3]}${noms[4]}}$ sont adjacents supplémentaires, donc $\\\\widehat{${noms[1]}${noms[3]}${noms[4]}}$ mesure $180\\\\degree-${180 - a - c}\\\\degree=${miseEnEvidence(a + c, gras)}\\\\degree$.<br>`\n      correction += `${numAlpha(4)} Comme les droites $(${noms[0]}${noms[4]})$ et $(${noms[1]}${noms[3]})$ sont parallèles, les angles correspondants $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}$ et $\\\\widehat{${noms[3]}${noms[4]}${noms[0]}}$ sont égaux, donc $\\\\widehat{${noms[3]}${noms[4]}${noms[0]}}$ mesure $${miseEnEvidence(180 - a - c, gras)}\\\\degree$.<br>`\n      correction += `${numAlpha(5)} La somme des angles du quadrilatère vaut donc : $${a}\\\\degree+${miseEnEvidence(180 - a, gras)}\\\\degree+${miseEnEvidence(a + c, gras)}\\\\degree+${miseEnEvidence(180 - a - c, gras)}\\\\degree=180\\\\degree+180\\\\degree=360\\\\degree$.<br>`\n      correction += '$\\\\phantom{f}$ La conjecture est finalement vraie.'\n      const params = { xmin: Math.min(A.x - 8, C.x - 8, E.x - 8), ymin: Math.min(A.y - 1, E.y - 1, C.y - 1), xmax: Math.max(E.x + 2, A.x + 2, C.x + 2), ymax: Math.max(C.y + 2, A.y + 2, E.y + 2), scale: 0.7 }\n\n      return [objets, params, enonce, correction]\n    }\n    const fig2 = function () {\n      const objets = []; let enonce; let correction\n      const noms = choisitLettresDifferentes(5, 'Q', true)\n      const A = point(0, 0, noms[0], 'above left')\n      const B = rotation(point(randint(8, 10), randint(1, 3)), A, randint(-40, 40), noms[1], 'right')\n      const ab = longueur(A, B)\n      const ac = randint(6, 8)\n      const a = randint(40, 60)\n      const C = similitude(B, A, a, ac / ab, noms[2], 'above left')\n      const CA = droite(C, A)\n      const AB = droite(A, B)\n      const D = pointSurSegment(A, B, ab / 2 + randint(-1, 1, 0) / 10, noms[3], 'below')\n      const CE = droite(C, D)\n      const cd = longueur(C, D)\n      const ad = longueur(A, D)\n      const E = pointSurSegment(C, D, cd * ab / ad, noms[4], 'below right')\n      const BE = droite(B, E)\n      const d = arrondi(angle(C, D, B), 0)\n      const cA = codeAngle(D, A, C, 1, '', 'black', 2, 1, 'black', 0.2, true)\n      const cD = codeAngle(C, D, B, 1, '', 'red', 2, 1, 'red', 0.2, true)\n      const cE = codeAngle(D, E, B, 1, '', 'blue', 2, 1, 'blue', 0.2, true)\n      const c4 = codeAngle(A, C, D, 1, '', 'green', 2, 1, 'green', 0.2)\n      const c5 = codeAngle(B, D, E, 1, '', 'orange', 2, 1, 'orange', 0.2)\n      const c6 = codeAngle(E, B, D, 1, '', 'pink', 2, 1, 'pink', 0.2)\n      const c3 = codeAngle(A, D, C, 1, '', 'gray', 2, 1, 'gray', 0.2)\n      const l1 = labelPoint(A, B, C, D, E)\n      objets.push(CA, AB, CE, BE, cA, cD, cE, c3, c4, c5, c6, l1)\n      enonce = 'La figure n\\'est pas en vraie grandeur. Toutes les réponses devront être justifiées.<br>'\n      enonce += `${numAlpha(0)} Déterminer la mesure de l'angle $\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}$.<br>`\n      enonce += `${numAlpha(1)} En déduire la mesure de l'angle $\\\\widehat{${noms[3]}${noms[2]}${noms[0]}}$.<br>`\n      enonce += `${numAlpha(2)} Déterminer si les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ sont parallèles.<br>`\n      enonce += `${numAlpha(3)} Si on considère que les segments $[${noms[0]}${noms[2]}]$ et $[${noms[4]}${noms[1]}]$ sont de même longueur, Déterminer la nature du quadrilatère $${noms[0]}${noms[2]}${noms[1]}${noms[4]}$.<br>`\n      correction = `${numAlpha(0)} Les angles $\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}$ et $\\\\widehat{${noms[2]}${noms[3]}${noms[1]}}$ sont adjacents supplémentaires, donc $\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}$ mesure $180\\\\degree-${d}\\\\degree=${180 - d}\\\\degree$.<br>`\n      correction += `${numAlpha(1)} Dans un triangle, la somme des angles vaut $180\\\\degree$ donc $\\\\widehat{${noms[0]}${noms[2]}${noms[3]}}=180-\\\\widehat{${noms[3]}${noms[0]}${noms[2]}}-\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}=180\\\\degree-${a}\\\\degree-${180 - d}\\\\degree=${-a + d}\\\\degree$.<br>`\n      correction += `${numAlpha(2)} Pour les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ coupées par la sécante $(${noms[2]}${noms[4]})$ les angles $\\\\widehat{${noms[0]}${noms[2]}${noms[3]}}$ et $\\\\widehat{${noms[1]}${noms[4]}${noms[3]}}$ sont des angles alternes-internes.<br>`\n      correction += '$\\\\phantom{c/}$ Or, si des angles alternes-internes sont égaux, alors cela signifie que les droites coupées par la sécante sont parallèles.<br>'\n      correction += `$\\\\phantom{c/}$ Les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ sont donc parallèles.<br>`\n      correction += `${numAlpha(3)} Les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ sont parallèles et les segments $[${noms[0]}${noms[2]}]$ et $[${noms[4]}${noms[1]}]$ sont de même longueur.<br>`\n      correction += '$\\\\phantom{c/}$ Or, un quadrilatère qui possède des côtés opposés parallèles et de même longueur est un parallèlogramme.<br>'\n      correction += `$\\\\phantom{c/}$ Donc $${noms[0]}${noms[2]}${noms[1]}${noms[4]}$ est un parallèlogramme et $${noms[3]}$ est son centre.`\n      const params = { xmin: Math.min(A.x, B.x, C.x, D.x, E.x) - 1, ymin: Math.min(A.y, B.y, C.y, D.y, E.y) - 1, xmax: Math.max(A.x, B.x, C.x, D.x, E.x) + 2, ymax: Math.max(A.y, B.y, C.y, D.y, E.y) + 2 }\n\n      return [objets, params, enonce, correction]\n    }\n    if (this.sup === 3) { choix = randint(1, 2) } else { choix = parseInt(this.sup) }\n    switch (choix) {\n      case 1:\n        figure = fig1()\n        figure[2] += mathalea2d(figure[1], figure[0])\n        break\n      case 2:\n        figure = fig2()\n        figure[2] += mathalea2d(figure[1], figure[0])\n        break\n    }\n    this.listeQuestions.push(figure[2])\n    this.listeCorrections.push(figure[3])\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Numéro de figure', 3, '1 : Le trapèze\\n2 : Le papillon\\n3 : Au hasard']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","EgaliteDAngles2nde","EgaliteDAngles","this","Exercice","sup","nbQuestions","context","spacing","spacingCorr","nbCols","nbColsCorr","nouvelleVersion","parseInt","listeQuestions","listeCorrections","autoCorrection","choix","figure","randint","objets","enonce","correction","noms","choisitLettresDifferentes","gras","A","point","a","ac","ce","C","similitude","rotation","c","E","CA","droite","CE","AE","epaisseur","B","pointSurSegment","BD","droiteParPointEtParallele","D","pointIntersectionDD","m1","codeAngle","m2","l1","labelPoint","c1","c2","c3","c4","c5","push","Math","round","angle","numAlpha","miseEnEvidence","xmin","min","x","ymin","y","xmax","max","ymax","scale","fig1","mathalea2d","ab","longueur","AB","cd","ad","BE","d","arrondi","cA","cD","cE","c6","fig2","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}