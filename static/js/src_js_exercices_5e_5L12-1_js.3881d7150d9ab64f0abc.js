/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_5e_5L12-1_js"],{

/***/ "./src/js/exercices/5e/5L12-1.js":
/*!***************************************!*\
  !*** ./src/js/exercices/5e/5L12-1.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Reduire_dinstinction_somme_produit)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst titre = 'Réduire un produit et une somme à partir des mêmes éléments algébriques pour distinguer la différence'\n\n/**\n * 5L12-1\n * Distinction entre la réduction d'un produit et la réduction d'une somme, on garde les même coeffs\n * @author Sébastien Lozano \n */\nfunction Reduire_dinstinction_somme_produit() {\n\t'use strict'\n\t_ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\tthis.debug = false;\n\tif (this.debug) {\n\t\tthis.nb_questions = 4;\n\t} else {\n\t\tthis.nb_questions = 2;\n\t};\n\tthis.consigne = \"\";\n\t//this.nb_questions = 4;\n\tthis.nb_cols = 1;\n\tthis.nb_cols_corr = 1;\n\t//this.sup2=false; // si false alors utilisation de nombres entiers, si true alors utilisation de nombres à un chiffre après la virgule.\n\tthis.titre = titre;\n\tlet type_de_questions_disponibles\n\tthis.nouvelle_version = function () {\n\t\t//let type_de_questions_disponibles\n\t\tthis.liste_questions = []; // Liste de questions\n\t\tthis.liste_corrections = []; // Liste de questions corrigées\n\t\tif (this.debug) {\n\t\t\ttype_de_questions_disponibles = [0, 1, 2, 3];\n\t\t} else {\n\t\t\ttype_de_questions_disponibles = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([0, 2]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([1, 3])];\n\t\t}\n\n\t\t//let liste_type_de_questions = combinaison_listes(type_de_questions_disponibles,this.nb_questions) \n\t\tlet liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(type_de_questions_disponibles, this.nb_questions)\n\n\t\t//if (this.sup2) decimal=10;\n\t\tfor (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n\t\t\t// deux fonctions pour gérer la chaine de sortie et supprimer le coeff 1 !\n\t\t\tfunction isUn(n) {\n\t\t\t\tif (n == 1) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t};\n\t\t\tfunction sliceUn(n) {\n\t\t\t\tif (n == 1) {\n\t\t\t\t\treturn ``;\n\t\t\t\t} else {\n\t\t\t\t\treturn `${n}`;\n\t\t\t\t};\n\t\t\t};\n\t\t\tlet variables = ['x', 'y', 'z', 't'];\n\t\t\tlet enonces = [];\n\t\t\tlet n = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 6);\n\t\t\tlet p = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 6);\n\t\t\tlet inc = variables[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, variables.length - 1)];\n\t\t\t//===== 0 le produit puis la somme\n\t\t\tenonces.push({\n\t\t\t\tenonce: `Simplifier le plus possible le produit puis la somme de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$`,\n\t\t\t\tquesttion: ``,\n\t\t\t\tcorrection_produit: `Le produit de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$ vaut : $${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc} = ${n}\\\\times ${inc}\\\\times ${p}\\\\times ${inc} = ${n}\\\\times ${p}\\\\times ${inc}\\\\times ${inc}=$ `,\n\t\t\t\tcorrection_somme: `La somme de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$ vaut : $${sliceUn(n)}${inc}+${sliceUn(p)}${inc} = ${n}\\\\times ${inc}+${p}\\\\times ${inc} = (${n}+${p})\\\\times ${inc}=$ `\n\t\t\t});\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[0].correction_produit += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(`$${n * p}${inc}^2=${inc}^2$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[0].correction_produit += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${n * p}${inc}^2$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[0].correction_somme += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${n + p}${inc}=${inc}$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[0].correction_somme += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${n + p}${inc}$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n) && isUn(p)) {\n\t\t\t\tenonces[0].correction_produit = `$${inc}\\\\times ${inc} =$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${inc}^2$`)} `;\n\t\t\t}\n\t\t\t//===== 1 le produit puis la somme\n\t\t\tenonces.push({\n\t\t\t\tenonce: `Simplifier le plus possible l'expression $${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc}$ puis l'expression $${sliceUn(n)}${inc}+${sliceUn(p)}${inc}$`,\n\t\t\t\tquesttion: ``,\n\t\t\t\tcorrection_produit: `$${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc} = ${n}\\\\times ${inc}\\\\times ${p}\\\\times ${inc} = ${n}\\\\times ${p}\\\\times ${inc}\\\\times ${inc}=$ `,\n\t\t\t\tcorrection_somme: `$${sliceUn(n)}${inc}+${sliceUn(p)}${inc} = ${n}\\\\times ${inc}+${p}\\\\times ${inc} = (${n}+${p})\\\\times ${inc}=$ `\n\t\t\t});\n\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[1].correction_produit += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(`$${n * p}${inc}^2=${inc}^2$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[1].correction_produit += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${n * p}${inc}^2$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[1].correction_somme += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${n + p}${inc}=${inc}$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[1].correction_somme += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${n + p}${inc}$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n) && isUn(p)) {\n\t\t\t\tenonces[1].correction_produit = `$${inc}\\\\times ${inc} =$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${inc}^2$`)} `;\n\t\t\t}\n\t\t\t//===== 2 la somme puis le produit \n\t\t\tenonces.push({\n\t\t\t\tenonce: `Simplifier le plus possible la somme puis le produit de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$`,\n\t\t\t\tquesttion: ``,\n\t\t\t\tcorrection_produit: `Le produit de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$ vaut : $${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc} = ${n}\\\\times ${inc}\\\\times ${p}\\\\times ${inc} = ${n}\\\\times ${p}\\\\times ${inc}\\\\times ${inc}=$ `,\n\t\t\t\tcorrection_somme: `La somme de $${sliceUn(n)}${inc}$ et de $${sliceUn(p)}${inc}$ vaut : $${sliceUn(n)}${inc}+${sliceUn(p)}${inc} = ${n}\\\\times ${inc}+${p}\\\\times ${inc} = (${n}+${p})\\\\times ${inc}=$ `\n\t\t\t});\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[2].correction_produit += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(`$${n * p}${inc}^2=${inc}^2$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[2].correction_produit += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${n * p}${inc}^2$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[2].correction_somme += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${inc}$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[2].correction_somme += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${n + p}${inc}$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n) && isUn(p)) {\n\t\t\t\tenonces[2].correction_produit = `$${inc}\\\\times ${inc} =$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${inc}^2$`)} `;\n\t\t\t}\n\t\t\t//===== 3 la somme puis le produit \n\t\t\tenonces.push({\n\t\t\t\tenonce: `Simplifier le plus possible l'expression $${sliceUn(n)}${inc}+${sliceUn(p)}${inc}$ puis l'expression $${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc}$`,\n\t\t\t\tquesttion: ``,\n\t\t\t\tcorrection_produit: `$${sliceUn(n)}${inc}\\\\times ${sliceUn(p)}${inc} = ${n}\\\\times ${inc}\\\\times ${p}\\\\times ${inc} = ${n}\\\\times ${p}\\\\times ${inc}\\\\times ${inc}=$ `,\n\t\t\t\tcorrection_somme: `$${sliceUn(n)}${inc}+${sliceUn(p)}${inc} = ${n}\\\\times ${inc}+${p}\\\\times ${inc} = (${n}+${p})\\\\times ${inc}=$ `\n\t\t\t});\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[3].correction_produit += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(`$${inc}^2$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[3].correction_produit += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${n * p}${inc}^2$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n * p)) {\n\t\t\t\tenonces[3].correction_somme += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${inc}$`)}`;\n\t\t\t} else {\n\t\t\t\tenonces[3].correction_somme += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${n + p}${inc}$`)}`;\n\t\t\t};\n\t\t\tif (isUn(n) && isUn(p)) {\n\t\t\t\tenonces[3].correction_produit = `$${inc}\\\\times ${inc} =$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(` $${inc}^2$`)} `;\n\t\t\t};\n\n\t\t\tswitch (liste_type_de_questions[i]) {\n\t\t\t\tcase 0:\t// produit puis somme \t\t\t\t\n\t\t\t\t\ttexte = `${enonces[0].enonce}.`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br><br>=====CORRECTION======<br>`;\n\t\t\t\t\t\ttexte += enonces[0].correction_produit;\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += enonces[0].correction_somme;\n\t\t\t\t\t\ttexte_corr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr = enonces[0].correction_produit;\n\t\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\t\ttexte_corr += enonces[0].correction_somme;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\t// x puis +\t\t\t\t\n\t\t\t\t\ttexte = `${enonces[1].enonce}.`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br><br>=====CORRECTION======<br>`;\n\t\t\t\t\t\ttexte += enonces[1].correction_produit;\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += enonces[1].correction_somme;\n\t\t\t\t\t\ttexte_corr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr = enonces[1].correction_produit;\n\t\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\t\ttexte_corr += enonces[1].correction_somme;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\t// somme puis produit\t\t\t\t\n\t\t\t\t\ttexte = `${enonces[2].enonce}.`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br><br>=====CORRECTION======<br>`;\n\t\t\t\t\t\ttexte += enonces[2].correction_somme;\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += enonces[2].correction_produit;\n\t\t\t\t\t\ttexte_corr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr = enonces[2].correction_somme;\n\t\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\t\ttexte_corr += enonces[2].correction_produit;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\t// + puis x\t\t\t\t\n\t\t\t\t\ttexte = `${enonces[3].enonce}.`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br><br>=====CORRECTION======<br>`;\n\t\t\t\t\t\ttexte += enonces[3].correction_somme;\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += enonces[3].correction_produit;\n\t\t\t\t\t\ttexte_corr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr = enonces[3].correction_somme;\n\t\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\t\ttexte_corr += enonces[3].correction_produit;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\n\t\t\t}\n\t\t\tif (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.liste_questions.push(texte);\n\t\t\t\tthis.liste_corrections.push(texte_corr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\t}\n\t//this.besoin_formulaire2_case_a_cocher = [\"Avec décimaux.\",false]\n\n}\n\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/5e/5L12-1.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);