/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e_6M12_js"],{

/***/ "./src/js/exercices/6e/6M12.js":
/*!*************************************!*\
  !*** ./src/js/exercices/6e/6M12.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Reglages_6M12)\n/* harmony export */ });\n/* harmony import */ var _Exercice_conversions_de_longueurs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Exercice_conversions_de_longueurs.js */ \"./src/js/exercices/6e/_Exercice_conversions_de_longueurs.js\");\n\nconst titre = 'Conversions de longueurs'\n\n/** */\n// Référence 6M12\nfunction Reglages_6M12() {\n  _Exercice_conversions_de_longueurs_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this);\n  this.titre = titre;\n  this.sup = 3;\n  this.nb_questions = 8;\n}\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/6M12.js?");

/***/ }),

/***/ "./src/js/exercices/6e/_Exercice_conversions_de_longueurs.js":
/*!*******************************************************************!*\
  !*** ./src/js/exercices/6e/_Exercice_conversions_de_longueurs.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice_conversions_de_longueurs)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst Algebrite = __webpack_require__(/*! algebrite */ \"./node_modules/.pnpm/algebrite@1.4.0/node_modules/algebrite/dist/algebrite.js\")\n\n/**\n * Conversions de longueur en utilisant le préfixe pour déterminer la multiplication ou division à faire.\n *\n * * 1 : De dam, hm, km vers m\n * * 2 : De dm, cm, mm vers m\n * * 3 : Conversions en mètres\n * * 4 : Toutes les conversions de longueurs\n * * Paramètre supplémentaire : utiliser des nombres décimaux (par défaut tous les nombres sont entiers)\n * @Auteur Rémi Angot\n */\nfunction Exercice_conversions_de_longueurs(niveau = 1) {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.sup = niveau; // Niveau de difficulté de l'exercice\n  this.sup2 = false; // Avec des nombres décimaux ou pas\n  this.titre = \"Conversions de longueurs\";\n  this.consigne = \"Compléter\";\n  this.spacing = 2;\n\n  this.nouvelle_version = function () {\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n    let prefixe_multi = [\n      [\" da\", 10],\n      [\" h\", 100],\n      [\" k\", 1000],\n    ];\n    let prefixe_div = [\n      [\" d\", 10],\n      [\" c\", 100],\n      [\" m\", 1000],\n    ];\n    let unite = \"m\";\n    let liste_unite = [\"mm\", \"cm\", \"dm\", \"m\", \"dam\", \"hm\", \"km\"];\n    let liste_unite1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)([0, 1, 2, 3, 4, 5, 6], this.nb_questions);\n    let liste_de_k = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)([0, 1, 2], this.nb_questions);\n    for (let i = 0,\n      a,\n      k,\n      div,\n      resultat,\n      texte,\n      texte_corr,\n      cpt = 0; i < this.nb_questions && cpt < 50;) {\n      let type_de_questions;\n      // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      if (this.sup < 5) {\n        type_de_questions = this.sup;\n      } else {\n        type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 4);\n      }\n      // k = randint(0,2); // Choix du préfixe\n      k = liste_de_k[i]; //Plutôt que de prendre un préfix au hasard, on alterne entre 10,100 et 1000\n      if (type_de_questions == 1) {\n        // niveau 1\n        div = false; // Il n'y aura pas de division\n      } else if (type_de_questions == 2) {\n        // niveau 2\n        div = true; // Avec des divisions\n      } else {\n        div = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([true, false]); // Avec des multiplications ou des divisions\n      }\n\n      if (this.sup2) {\n        // Si la case pour les nombres décimaux est cochée\n        a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 19) + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 10, 1),\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 10, 1),\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 100, 2),\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 10 + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 100, 2),\n        ]);\n        // XX,X 0,X 0,0X X,XX\n      } else {\n        a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9),\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) * 10,\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) * 100,\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) * 10 + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9),\n        ]);\n        // X, X0, X00, XX\n      }\n\n      if (!div && type_de_questions < 4) {\n        // Si il faut multiplier pour convertir\n        resultat = Algebrite.eval(a * prefixe_multi[k][1]).toString(); // Utilise Algebrite pour avoir le résultat exact même avec des décimaux\n        texte =\n          \"$ \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(prefixe_multi[k][0] + unite) +\n          \" = \\\\dotfill \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"$\";\n\n        texte_corr =\n          \"$ \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(prefixe_multi[k][0] + unite) +\n          \" =  \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          \"\\\\times\" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(prefixe_multi[k][1]) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \" = \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(resultat) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"$\";\n      } else if (div && type_de_questions < 4) {\n        resultat = Algebrite.eval(a / prefixe_div[k][1]).toString(); // Attention aux notations scientifiques pour 10e-8\n        texte =\n          \"$ \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(prefixe_div[k][0] + unite) +\n          \" = \\\\dotfill \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"$\";\n        texte_corr =\n          \"$ \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(prefixe_div[k][0] + unite) +\n          \" =  \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          \"\\\\div\" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(prefixe_div[k][1]) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \" = \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(resultat) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"$\";\n      } else {\n        // pour type de question = 4\n        let unite1 = liste_unite1[i];\n        let unite2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(Math.max(0, unite1 - 3), Math.min(unite1 + 3, 6), unite1);\n        if (unite1 > unite2) {\n          [unite1, unite2] = [unite2, unite1];\n        }\n        let ecart = unite2 - unite1; // nombre de multiplication par 10 pour passer de l'un à l'autre\n        if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1) > 0) {\n          resultat = Algebrite.eval(a * Math.pow(10, ecart));\n          texte =\n            \"$ \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite2]) +\n            \" = \\\\dotfill \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite1]) +\n            \"$\";\n          texte_corr =\n            \"$ \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite2]) +\n            \" =  \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            \"\\\\times\" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(Math.pow(10, ecart)) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite1]) +\n            \" = \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(resultat) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite1]) +\n            \"$\";\n        } else {\n          resultat = Algebrite.eval(a / Math.pow(10, ecart));\n          texte =\n            \"$ \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite1]) +\n            \" = \\\\dotfill \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite2]) +\n            \"$\";\n          texte_corr =\n            \"$ \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite1]) +\n            \" =  \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            \"\\\\div\" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(Math.pow(10, ecart)) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite2]) +\n            \" = \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(resultat) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite2]) +\n            \"$\";\n        }\n      }\n\n      if (this.liste_questions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        if (est_diaporama) {\n          texte = texte.replace(\"= \\\\dotfill\", \"\\\\text{ en }\");\n        }\n        if (sortie_html) {\n          texte = texte.replace(\n            \"\\\\dotfill\",\n            \"................................................\"\n          );\n        }\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  this.besoin_formulaire_numerique = [\n    \"Niveau de difficulté\",\n    4,\n    \"1 : De dam, hm, km vers m\\n\\\n2 : De dm, cm, mm vers m\\n3 : Conversions en mètres\\n4 : Toutes les conversions de longueurs\",\n  ];\n  this.besoin_formulaire2_case_a_cocher = [\"Avec des nombres décimaux\"];\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/_Exercice_conversions_de_longueurs.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);