{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta5C12.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","NomQuelconqueDeLaFonctionQuiCreeExercice","sup","interactifType","listeTypeQuestions","combinaisonListesSansChangerOrdre","a","b","c","d","r1","r2","texte","texteCorr","i","cpt","randint","ajouteChampTexte","texteEnCouleurEtGras","setReponse","indexOf","push","listeQuestionsToContenu"],"mappings":"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","file":"js/38494.09b1247572f3c232770e.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListesSansChangerOrdre, randint, texteEnCouleurEtGras } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif'\nexport const titre = 'Exercice exemple'\n\n/**\n * Description didactique de l'exercice\n * @author Laurence Candille\n * Référence\n*/\nexport default function NomQuelconqueDeLaFonctionQuiCreeExercice () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 3\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.interactif = true\n  // this.amcType = 4\n  this.interactifType = 'numerique'\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeQuestionsDisponibles = ['q1', 'q2', 'q3'] // On créé 3 types de questions\n    const listeTypeQuestions = combinaisonListesSansChangerOrdre(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    let a, b, c, d // mes facteurs\n    let r1, r2 // réponses\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      a = randint(2, 11)\n      b = randint(2, 11)\n      c = randint(1, 11)\n      d = randint(12, 19)\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'q1':\n          // texte = `Question ${i + 1} de type 1`\n          // texteCorr = `Correction ${i + 1} de type 1`\n          r1 = a + b * c\n          texte = `$${a}+${b}\\\\times ${c} = $`\n          texte += ajouteChampTexte(this, i)\n          texteCorr = `$${a}+${b}\\\\times ${c} = $`\n          texteCorr = `$${a}+${b}\\\\times ${c} = $`\n          texteCorr += texteEnCouleurEtGras(`$${r1}$ <br>`)\n          setReponse(this, i, r1)\n          break\n        case 'q2':\n          // texte = `Question ${i + 1} de type 2`\n          // texteCorr = `Correction ${i + 1} de type 2`\n          r2 = (d - a) * b\n          texte = `$(${d}-${a})\\\\times ${b} = $`\n          texte += ajouteChampTexte(this, i)\n          texteCorr = `$(${d}-${a})\\\\times ${b} =$`\n          texteCorr += texteEnCouleurEtGras(`$${r2}$ <br>`)\n          setReponse(this, i, r2)\n          break\n        case 'q3': // Table de 200\n          texte = `Question ${i + 1} de type 2`\n          texteCorr = `Correction ${i + 1} de type 2`\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n"],"sourceRoot":""}