{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N10-5.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Exercice_labyrinthe_numeration","Exercice","this","consigne","niveau","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","sup","nouvelleVersion","params","texte","texteCorr","trouve","listeCorrections","listeQuestions","laby","labyrinthe","parseInt","chemin","choisitChemin","murs2d","construitMurs","chemin2d","traceChemin","chiffre","hasard","rangMax","rang","Dm","Um","C","D","U","d","c","m","dm","nombretemp","monchemin","positions","listeNombresOK","index","randint","texte_en_couleur_et_gras","miseEnEvidence","length","i","texNombrec2","push","a","nombres","b","k","nombres2d","placeNombres","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/8134.a613c337278238623718.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,texNombrec2,miseEnEvidence,texte_en_couleur_et_gras} from '../../modules/outils.js'\nimport {mathalea2d,labyrinthe} from '../../modules/2d.js'\nexport const titre = 'Labyrinthe de numération décimale'\n\n/**\n * @Auteur Jean-Claude Lhote\n * Publié le 9/12/2020\n * Ref 6N10-5\n * Sortir du labyrinthe en utilisant la numération décimale.\n */\nexport default function Exercice_labyrinthe_numeration() {\n  \"use strict\"\n  Exercice.call(this)\n  this.titre = titre;\n  this.consigne=\"\"\n  this.niveau = '6e'\n  this.nbQuestions = 1;\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  this.sup = 3;\n\n  //this.consigne=`Trouve la sortie en ne passant que par les cases contenant un nombre divisible par $${parseInt(this.sup)}$.`\n\n  this.nouvelleVersion = function () {\n    this.listeCorrections=[]\n    this.listeQuestions=[]\n\n    let params, texte, texteCorr, trouve\n    let laby = labyrinthe()\n    laby.niveau = parseInt(this.sup) // Le niveau (de 1 à 6=mélange) définit le nombre d'étapes\n    laby.chemin = laby.choisitChemin(laby.niveau) // On choisi un chemin\n    laby.murs2d = laby.construitMurs(laby.chemin) // On construit le labyrinthe\n    laby.chemin2d = laby.traceChemin(laby.chemin) // On trace le chemin solution\n    let monchemin = laby.chemin\n    let positions=['unités','dixièmes','centièmes','millièmes','dizaines','centaines','unités de mille','dix-millièmes','dizaines de mille']\n    let chiffre,hasard\n    let listeNombresOK = [], index = 0,rangMax,rang\n    if (this.niveau = 'CM') {\n      rangMax=5\n    }\n    else {\n      if (!this.sup) {\n        rangMax=6\n      }\n      else {\n        rangMax=8\n      }\n    }\n    rang=randint(0,rangMax)\n    chiffre=randint(0,9)\n    texte = `${texte_en_couleur_et_gras(`Trouve la sortie en ne passant que par les cases contenant un nombre dont le chiffre des ${positions[rang]} est un `,'black')}$${miseEnEvidence(chiffre,'black')}$.<br>`\n    texteCorr = `${texte_en_couleur_et_gras(`Voici le chemin en marron et la sortie était la numéro $${2 - monchemin[monchemin.length - 1][1] + 1}$.`, 'black')}<br>`\n    // Zone de construction du tableau de nombres : Si ils sont sur monchemin et seulement si, ils doivent vérifier la consigne\n    let Dm,Um,C,D,U,d,c,m,dm,nombretemp\n    for (let i = 0; i <= 30; i++) {\n      if (rangMax>7){\n      if (positions[rang]!='dizaines de mille') {\n        Dm=randint (0,9,chiffre)\n      }\n      else {\n        Dm=chiffre\n      }}\n      else {\n        Dm=0\n      }\n      if (positions[rang]!='unités de mille') {\n        if (rangMax>5){\n        Um=randint (0,9,chiffre)\n      }\n      else {\n        Um=chiffre\n      }}\n      else {\n        Um=0\n      }\n\n      if (positions[rang]!='centaines') {\n        C=randint (0,9,chiffre)\n      }\n      else {\n        C=chiffre\n      }\n      if (positions[rang]!='dizaines') {\n        D=randint (0,9,chiffre)\n      }\n      else {\n        D=chiffre\n      }\n      if (positions[rang]!='unités') {\n        U=randint (0,9,chiffre)\n      }\n      else {\n        U=chiffre\n      }\n      if (positions[rang]!='dixièmes') {\n        d=randint (0,9,chiffre)\n      }\n      else {\n        d=chiffre\n      }\n      if (positions[rang]!='centièmes') {\n        c=randint (0,9,chiffre)\n      }\n      else {\n        c=chiffre\n      }\n      if (positions[rang]!='millièmes') {\n        m=randint (0,9,chiffre)\n      }\n      else {\n        m=chiffre\n      }\n      if (rangMax>6){\n      if (positions[rang]!='dix-millièmes') {\n  \n        dm=randint (0,9,chiffre)\n      }\n      else {\n        dm=chiffre\n      }}\n      else {\n        dm=0\n      }\n      if (i>12) {\n        hasard=randint(0,rangMax,rang) //on met le chiffre au hasard à un autre endroit du nombre\n        switch (hasard){\n          case 8: \n          if (rangMax>7) {Dm=chiffre}\n          else {\n            Dm=0\n            if (rang!=0) {\n              U=chiffre\n            }\n            else {\n              d=chiffre\n            }\n          }\n          break\n          case 6: Um=chiffre\n          break\n          case 5: C=chiffre\n          break\n          case 4: D=chiffre\n          break\n          case 0: U=chiffre\n          break\n          case 1: d=chiffre\n          break\n          case 2: c=chiffre\n          break\n          case 3: m=chiffre\n          break\n          case 7:\n            if (rangMax>6) {dm=chiffre}\n            else {\n              dm=0\n              if (rang!=1) {\n                d=chiffre\n              }\n              else {\n                c=chiffre\n              }\n            }\n          break\n        }\n        hasard=randint(0,9,chiffre)\n        switch (rang){ // On met autre chose au rang choisi \n          case 8: Dm=hasard\n          break\n          case 6: Um=hasard\n          break\n          case 5: C=hasard\n          break\n          case 4: D=hasard\n          break\n          case 0: U=hasard\n          break\n          case 1: d=hasard\n          break\n          case 2: c=hasard\n          break\n          case 3: m=hasard\n          break\n          case 7: dm=hasard\n          break\n        }\n      }\n      nombretemp=texNombrec2(`${Dm}*10000+${Um}*1000+${C}*100+${D}*10+${U}+${d}*0.1+${c}*0.01+${m}*0.001+${dm}*0.0001`,8)\n      listeNombresOK.push(nombretemp)\n    }\n    for (let a=1;a<7;a++) {\n      laby.nombres.push([0,0,0])\n    }\n    for (let a = 1; a < 7; a++) {\n      for (let b = 0; b < 3; b++) {\n        trouve = false\n        for (let k = 0; k < monchemin.length; k++){\n          if (monchemin[k][0] == a && monchemin[k][1] == b) trouve = true\n        }\n        if (!trouve) {\n          laby.nombres[a - 1][b] = listeNombresOK[index+13]\n        }\n        else {\n          laby.nombres[a - 1][b] = listeNombresOK[index]\n          index++\n        }\n      }\n    } // Le tableau de nombre étant fait, on place les objets nombres.\n    laby.nombres2d = laby.placeNombres(laby.nombres,0.7)\n    params = { xmin: -4, ymin: 0, xmax: 22, ymax: 11, pixelsParCm: 20, scale: 0.7 }\n    texte += mathalea2d(params, laby.murs2d, laby.nombres2d)\n    texteCorr += mathalea2d(params, laby.murs2d, laby.nombres2d, laby.chemin2d)\n    this.listeQuestions.push(texte);\n    this.listeCorrections.push(texteCorr);\n    listeQuestionsToContenu(this)\n  }\n//this.besoinFormulaireCaseACocher = [\"Avec des dizaines de mille et des dix-millièmes\"]\n//  this.besoinFormulaire2Numerique = [\"Critère de divisibilité supplémentaire \",6,'1 : Aucun\\n2 : Par 2\\n3 : Par 3\\n4 : Par 4\\n5 : Par 5\\n6 : Par 9'];\n this.besoinFormulaireNumerique = ['Niveau de rapidité', 6, '1 : Escargot\\n 2 : Tortue\\n 3 : Lièvre\\n 4 : Antilope\\n 5 : Guépard\\n 6 : Au hasard']\n} // Fin de l'exercice.\n\n\n\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}