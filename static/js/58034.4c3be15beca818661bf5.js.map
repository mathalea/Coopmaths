{"version":3,"file":"js/58034.4c3be15beca818661bf5.js","mappings":"8QAMO,MAAMA,GAAkB,EAClBC,EAAiB,MACjBC,GAAW,EACXC,EAAU,UACVC,EAAQ,0DAYN,SAASC,IAStB,IAAIC,EARJC,EAAAA,QAAAA,KAAcC,MACdA,KAAKC,SAAW,8CAChBD,KAAKE,YAAc,EACnBF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKK,IAAM,EACXL,KAAKM,YAAa,EAIlBN,KAAKO,gBAAkB,WAGrB,GAFAP,KAAKQ,eAAiB,GACtBR,KAAKK,IAAMI,OAAOT,KAAKK,KACnBL,KAAKU,MAAQV,KAAKW,KAAO,SAE3B,OAAQX,KAAKK,KACX,KAAK,EACHP,EAA8B,CAAC,GAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,GAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,GAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,EAAG,EAAG,QAGpC,GAAIE,KAAKU,MAAQV,KAAKW,KAAO,SAElC,OAAQX,KAAKK,KACX,KAAK,EACHP,EAA8B,CAAC,GAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,GAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,GAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,GAC/B,MACF,KAAK,EACHA,EAA8B,CAAC,EAAG,EAAG,EAAG,QAK5CA,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGnD,MAAMc,GAAuBC,EAAAA,EAAAA,KAAkBf,EAA6BE,KAAKE,aACjFF,KAAKc,eAAiB,GACtBd,KAAKe,iBAAmB,GAExB,IAAK,IAAWC,EAAOC,EAAWC,EAAzBC,EAAI,EAA8BC,EAAM,EAAGD,EAAInB,KAAKE,aAAekB,EAAM,IAAK,CACrFpB,KAAKQ,eAAeW,GAAK,GAEzB,MAAME,EAAQ,GAERC,EAAM,IAAIC,EAAAA,KACdC,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,KAAMA,EAAAA,EAAAA,KAAQ,EAAGH,IACjCG,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,KAAMA,EAAAA,EAAAA,KAAQ,EAAGH,IACjCG,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,KAAMA,EAAAA,EAAAA,KAAQ,EAAGH,IACjCG,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,KAAMA,EAAAA,EAAAA,KAAQ,EAAGH,IAGnC,OAAQT,EAAqBO,IAC3B,KAAK,EACHH,EAAS,MAAIS,EAAAA,EAAAA,KACXH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,QAChDT,EAAa,MAAIQ,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,YAAWF,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,MACtKV,GAAc,QAAOK,EAAIM,qBACvBN,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfT,GAAc,eAAaQ,EAAAA,EAAAA,KACzBH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,cACJG,EAAAA,EAAAA,KACTP,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,QAE1DR,EAAUI,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,IAClE,MACF,KAAK,EACHV,EAAS,MAAIS,EAAAA,EAAAA,KACXH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,QAChDT,EAAa,MAAIQ,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,UAASF,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,KACpKV,GAAc,UAAQQ,EAAAA,EAAAA,KACpBH,EAAII,SAAS,aACJJ,EAAIK,iBAAiB,MAChCV,GAAc,QAAOK,EAAIM,qBACvBN,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfT,GAAc,eAAaQ,EAAAA,EAAAA,KACzBH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,cACJG,EAAAA,EAAAA,KACTP,EAAIQ,sBACFR,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,QAGjBR,EAAUI,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,IACnF,MACF,KAAK,EACHV,EAAS,MAAIS,EAAAA,EAAAA,KACXH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,QAChDT,EAAa,MAAIQ,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,UAASF,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,OACpKV,GAAc,MAAIQ,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,YAAWF,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,MACvKV,GAAc,QAAOK,EAAIM,qBACvBN,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfT,GAAc,eAAaQ,EAAAA,EAAAA,KACzBH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,cACJG,EAAAA,EAAAA,KACTP,EAAIQ,sBACFR,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,QAGjBR,EAAUI,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,IACpG,MACF,KAAK,EACHV,EAAS,cAAYS,EAAAA,EAAAA,KACnBH,EAAII,SAAS,SACTD,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,SACzCT,EAAa,MAAIQ,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,YAAWF,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,MACtKV,GAAc,QAAOK,EAAIS,sBACvBT,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfT,GAAc,uBAAqBQ,EAAAA,EAAAA,KACjCH,EAAII,SAAS,SACTD,EAAAA,EAAAA,KACJH,EAAII,SAAS,eACHG,EAAAA,EAAAA,KACVP,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,QAE1DR,EAAUI,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,IAClE,MACF,KAAK,EACHV,EAAS,cAAYS,EAAAA,EAAAA,KACnBH,EAAII,SAAS,SACTD,EAAAA,EAAAA,KACJH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,SAChDT,EAAa,MAAIQ,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,UAASF,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,KACpKV,GAAc,UAAQQ,EAAAA,EAAAA,KACpBH,EAAII,SAAS,aACJJ,EAAIK,iBAAiB,MAChCV,GAAc,QAAOK,EAAIS,sBACvBT,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfT,GAAc,uBAAqBQ,EAAAA,EAAAA,KACjCH,EAAII,SAAS,SACTD,EAAAA,EAAAA,KACJH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,eACHG,EAAAA,EAAAA,KACVP,EAAIQ,sBACFR,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,QAGjBR,EAAUI,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,IACnF,MACF,KAAK,EACHV,EAAS,cAAYS,EAAAA,EAAAA,KACnBH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,SACTD,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,SACzCT,EAAa,MAAIQ,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,UAASF,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,KACpKV,GAAc,UAAQQ,EAAAA,EAAAA,KACpBH,EAAII,SAAS,aACJJ,EAAIK,iBAAiB,MAChCV,GAAc,QAAOK,EAAIS,sBACvBT,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfT,GAAc,uBAAqBQ,EAAAA,EAAAA,KACjCH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,SACTD,EAAAA,EAAAA,KACJH,EAAII,SAAS,eACHG,EAAAA,EAAAA,KACVP,EAAIQ,sBACFR,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,QAGjBR,EAAUI,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,IACnF,MACF,KAAK,EACHV,EAAS,cAAYS,EAAAA,EAAAA,KACnBH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,SACTD,EAAAA,EAAAA,KACJH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,SAChDT,EAAa,MAAIQ,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,UAASF,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,OACpKV,GAAc,MAAIQ,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,YAAWF,EAAAA,EAAAA,KAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,MACvKV,GAAc,QAAOK,EAAIS,sBACvBT,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfT,GAAc,uBAAqBQ,EAAAA,EAAAA,KACjCH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,SACTD,EAAAA,EAAAA,KACJH,EAAII,SAAS,gBACFD,EAAAA,EAAAA,KACXH,EAAII,SAAS,eACHG,EAAAA,EAAAA,KACVP,EAAIQ,sBACFR,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,QAGjBR,EAAUI,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,KAGpGM,EAAAA,GAAAA,OAAiBhC,KAAKM,cACxBN,KAAKQ,eAAeW,GAAK,CACvBc,OAAQjB,EACRkB,QAAS,CAAEC,SAAS,GACpBC,aAAc,CACZ,CACEpB,MAAO,UACPqB,OAAoB,YAAZnB,GAEV,CACEF,MAAO,MACPqB,QAAQ,GAEV,CACErB,MAAO,UACPqB,OAAoB,YAAZnB,MAKhBF,IAASsB,EAAAA,EAAAA,IAAgBtC,KAAMmB,GAAGH,MAC9BhB,KAAKuC,oBAAoBpB,EAAGG,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAId,EAAqBO,MAEvHnB,KAAKc,eAAe0B,KAAKxB,GACzBhB,KAAKe,iBAAiByB,KAAKvB,GAC3BE,KAEFC,KAEFqB,EAAAA,EAAAA,KAAwBzC,S,gBCvTb,SAASD,IAItBC,KAAKJ,MAAQ,GACbI,KAAK0C,YAAa,EAclB1C,KAAKC,SAAW,GAChBD,KAAK2C,mBAAqB,GAC1B3C,KAAK4C,aAAe,GACpB5C,KAAKc,eAAiB,GACtBd,KAAKe,iBAAmB,GACxBf,KAAK6C,QAAU,GACf7C,KAAK8C,kBAAoB,GACzB9C,KAAKQ,eAAiB,GACtBR,KAAK+C,sBAAwB,GAK7B/C,KAAKgD,QAAU,EACfhD,KAAKiD,YAAc,EAKnBjD,KAAKkD,mBAAoB,EACzBlD,KAAKmD,cAAgB,GACrBnD,KAAKoD,oBAAqB,EAC1BpD,KAAKqD,uBAAwB,EAC7BrD,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKsD,kBAAmB,EACxBtD,KAAKuD,sBAAuB,EAC5BvD,KAAKwD,mBAAoB,EACzBxD,KAAKyD,uBAAwB,EAM7BzD,KAAK0D,QAAS,EACd1D,KAAK2D,gBAAkB,GAKvB3D,KAAKE,YAAc,GACnBF,KAAK4D,+BAAgC,EACrC5D,KAAK6D,qBAAsB,EAC3B7D,KAAK8D,MAAQ,GAEb9D,KAAKM,YAAa,EAClBN,KAAK+D,uBAAwB,EAE7B/D,KAAKgE,2BAA4B,EACjChE,KAAKiE,uBAAwB,EAC7BjE,KAAKkE,6BAA8B,EAEnClE,KAAKmE,4BAA6B,EAClCnE,KAAKoE,wBAAyB,EAC9BpE,KAAKqE,8BAA+B,EAEpCrE,KAAKsE,4BAA6B,EAClCtE,KAAKuE,wBAAyB,EAC9BvE,KAAKwE,8BAA+B,EAMpCxE,KAAKyE,cAAe,EAMpBzE,KAAK0E,eAAiB,GAEtB1E,KAAKO,gBAAkB,SAAUoE,KAQjC3E,KAAKuC,oBAAsB,SAAUpB,KAAMyD,GAC/B,IAANzD,IAASnB,KAAK0E,eAAiB,IACnC,IAAIG,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIhF,KAAK0E,eAAeO,QAAQJ,IAAmB,KAGjD7E,KAAK0E,eAAelC,KAAKqC,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/4e/4C10-0.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["/* eslint-disable camelcase */\nimport Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, ecritureNombreRelatif, texteEnCouleurEtGras, Relatif, combinaisonListes } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\n\nexport const interactifReady = true\nexport const interactifType = 'qcm'\nexport const amcReady = true\nexport const amcType = 'qcmMono'\nexport const titre = 'Signe d’un produit ou d’un quotient de nombres relatifs'\n\n/**\n * Signe d'un produit ou d'on quotient de relatifs\n * Plusieurs niveaux 2, 3 ou 4 factieurs, un quotient de 2 nombres, 1  nombre sur un produit de deux nombres, un produit de 2 nombres sur un nombre, un quotient de produit de 2 nombres\n * 4C10-0 exercice parent de 4C10-1 et 4C10-2\n * 4C10-0 contient tous les cas\n * Dans ces exercices je me servais de this.beta pour faire passer l'exo de beta.html à context.html\n * this.beta pouvait prendre la valeur 'beta' ou '', tous les autres this.beta sont devenus des this.debug\n\n * @author Sébastien Lozano\n */\nexport default function SigneProduitQuotientRelatifs () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Donner le signe des expressions numériques.'\n  this.nbQuestions = 7\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.interactif = true\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.sup = Number(this.sup) // attention le formulaire renvoie un string, on a besoin d'un number pour le switch !\n    if (this.exo === this.beta + '4C10-1') {\n      // signe d'un produit\n      switch (this.sup) {\n        case 1: // 2 facteurs\n          typesDeQuestionsDisponibles = [1]\n          break\n        case 2: // 3 facteurs\n          typesDeQuestionsDisponibles = [2]\n          break\n        case 3: // 4 facteurs\n          typesDeQuestionsDisponibles = [3]\n          break\n        case 4: // Mélange\n          typesDeQuestionsDisponibles = [1, 2, 3]\n          break\n      }\n    } else if (this.exo === this.beta + '4C10-2') {\n      // signe d'un quotient\n      switch (this.sup) {\n        case 1: // quotient de 2 nombres\n          typesDeQuestionsDisponibles = [4]\n          break\n        case 2: // quotient d'1 nombre sur un produit de 2 nombres\n          typesDeQuestionsDisponibles = [5]\n          break\n        case 3: // quotient d'1 produit de 2 nombres sur 1 nombre\n          typesDeQuestionsDisponibles = [6]\n          break\n        case 4: // quotient de 2 produits de 2 nombres\n          typesDeQuestionsDisponibles = [7]\n          break\n        case 5: // Mélange\n          typesDeQuestionsDisponibles = [4, 5, 6, 7]\n          break\n      }\n    } else {\n      // signe d'un produit et/ou d'un quotient\n      typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7]\n    }\n\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, texte, texteCorr, reponse, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n      // on ne choisit que des nombres compris entre 1 et 20\n      const nbMax = 20\n      // Le tableau des relatifs necessaires, il m'en faut max 4 !\n      const num = new Relatif(\n        randint(-1, 1, [0]) * randint(1, nbMax),\n        randint(-1, 1, [0]) * randint(1, nbMax),\n        randint(-1, 1, [0]) * randint(1, nbMax),\n        randint(-1, 1, [0]) * randint(1, nbMax)\n      )\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // 2 facteurs\n          texte = `$ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(num.relatifs[1])} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]} et $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}.`\n          texteCorr += `<br> ${num.setRegleSigneProduit(\n            num.relatifs[0],\n            num.relatifs[1]\n          )}`\n          texteCorr += `<br>Donc $ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(num.relatifs[0], num.relatifs[1])\n          )}.`\n          reponse = num.getSigneProduitString(num.relatifs[0], num.relatifs[1])\n          break\n        case 2: // 3 facteurs\n          texte = `$ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(num.relatifs[2])} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]}, $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}`\n          texteCorr += ` et $ ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} $ est ${num.getSigneString()[2]}.`\n          texteCorr += `<br> ${num.setRegleSigneProduit(\n            num.relatifs[0],\n            num.relatifs[1],\n            num.relatifs[2]\n          )}`\n          texteCorr += `<br>Donc $ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(\n              num.relatifs[0],\n              num.relatifs[1],\n              num.relatifs[2]\n            )\n          )}.`\n          reponse = num.getSigneProduitString(num.relatifs[0], num.relatifs[1], num.relatifs[2])\n          break\n        case 3: // 4 facteurs\n          texte = `$ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} \\\\times ${ecritureNombreRelatif(num.relatifs[3])} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]}, $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}, `\n          texteCorr += `$ ${ecritureNombreRelatif(num.relatifs[2])} $ est ${num.getSigneString()[2]} et $ ${ecritureNombreRelatif(num.relatifs[3])} $ est ${num.getSigneString()[3]}.`\n          texteCorr += `<br> ${num.setRegleSigneProduit(\n            num.relatifs[0],\n            num.relatifs[1],\n            num.relatifs[2],\n            num.relatifs[3]\n          )}`\n          texteCorr += `<br>Donc $ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[3]\n          )} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(\n              num.relatifs[0],\n              num.relatifs[1],\n              num.relatifs[2],\n              num.relatifs[3]\n            )\n          )}.`\n          reponse = num.getSigneProduitString(num.relatifs[0], num.relatifs[1], num.relatifs[2], num.relatifs[3])\n          break\n        case 4: // quotient de 2 nombres\n          texte = `$ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )}}{${ecritureNombreRelatif(num.relatifs[1])}} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]} et $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}.`\n          texteCorr += `<br> ${num.setRegleSigneQuotient(\n            num.relatifs[0],\n            num.relatifs[1]\n          )}`\n          texteCorr += `<br>Donc $ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[1]\n          )}} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(num.relatifs[0], num.relatifs[1])\n          )}.`\n          reponse = num.getSigneProduitString(num.relatifs[0], num.relatifs[1])\n          break\n        case 5: // quotient d'1 nombre sur un produit de 2 nombres\n          texte = `$ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(num.relatifs[2])}} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]}, $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}`\n          texteCorr += ` et $ ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} $ est ${num.getSigneString()[2]}.`\n          texteCorr += `<br> ${num.setRegleSigneQuotient(\n            num.relatifs[0],\n            num.relatifs[1],\n            num.relatifs[2]\n          )}`\n          texteCorr += `<br>Donc $ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )}} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(\n              num.relatifs[0],\n              num.relatifs[1],\n              num.relatifs[2]\n            )\n          )}.`\n          reponse = num.getSigneProduitString(num.relatifs[0], num.relatifs[1], num.relatifs[2])\n          break\n        case 6: // quotient d'1 produit de 2 nombres sur 1 nombre\n          texte = `$ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )}}{${ecritureNombreRelatif(num.relatifs[2])}} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]}, $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}`\n          texteCorr += ` et $ ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} $ est ${num.getSigneString()[2]}.`\n          texteCorr += `<br> ${num.setRegleSigneQuotient(\n            num.relatifs[0],\n            num.relatifs[1],\n            num.relatifs[2]\n          )}`\n          texteCorr += `<br>Donc $ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[2]\n          )}} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(\n              num.relatifs[0],\n              num.relatifs[1],\n              num.relatifs[2]\n            )\n          )}.`\n          reponse = num.getSigneProduitString(num.relatifs[0], num.relatifs[1], num.relatifs[2])\n          break\n        case 7: // quotient de 2 produits de 2 nombres\n          texte = `$ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} \\\\times ${ecritureNombreRelatif(num.relatifs[3])}} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]}, $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}, `\n          texteCorr += `$ ${ecritureNombreRelatif(num.relatifs[2])} $ est ${num.getSigneString()[2]} et $ ${ecritureNombreRelatif(num.relatifs[3])} $ est ${num.getSigneString()[3]}.`\n          texteCorr += `<br> ${num.setRegleSigneQuotient(\n            num.relatifs[0],\n            num.relatifs[1],\n            num.relatifs[2],\n            num.relatifs[3]\n          )}`\n          texteCorr += `<br>Donc $ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[3]\n          )}} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(\n              num.relatifs[0],\n              num.relatifs[1],\n              num.relatifs[2],\n              num.relatifs[3]\n            )\n          )}.`\n          reponse = num.getSigneProduitString(num.relatifs[0], num.relatifs[1], num.relatifs[2], num.relatifs[3])\n          break\n      }\n      if (context.isAmc || this.interactif) {\n        this.autoCorrection[i] = {\n          enonce: texte,\n          options: { ordered: true },\n          propositions: [\n            {\n              texte: 'négatif',\n              statut: reponse === 'négatif'\n            },\n            {\n              texte: 'nul',\n              statut: false\n            },\n            {\n              texte: 'positif',\n              statut: reponse === 'positif'\n            }\n          ]\n        }\n      }\n      texte += propositionsQcm(this, i).texte\n      if (this.questionJamaisPosee(i, num.relatifs[0], num.relatifs[1], num.relatifs[2], num.relatifs[3], listeTypeDeQuestions[i])) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["interactifReady","interactifType","amcReady","amcType","titre","SigneProduitQuotientRelatifs","typesDeQuestionsDisponibles","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","interactif","nouvelleVersion","autoCorrection","Number","exo","beta","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","texte","texteCorr","reponse","i","cpt","nbMax","num","Relatif","randint","ecritureNombreRelatif","relatifs","getSigneString","setRegleSigneProduit","texteEnCouleurEtGras","getSigneProduitString","setRegleSigneQuotient","context","enonce","options","ordered","propositions","statut","propositionsQcm","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}