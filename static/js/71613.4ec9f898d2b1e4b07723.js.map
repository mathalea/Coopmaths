{"version":3,"file":"js/71613.4ec9f898d2b1e4b07723.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta240-1.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, lettreDepuisChiffre, printlatex } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Utiliser la distributivité (simple ou double) et réduire'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n* Utiliser la simple ou la double distributivité et réduire l'expression\n*\n* @author Eric Schrafstetter\n* 3L11-3\n*/\nexport default function ResoudreEnXetY () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Développer et réduire les expressions suivantes.'\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = ['cx+e(ax+b)', 'ex+(ax+b)(cx+d)', 'e+(ax+b)(cx+d)', 'e-(ax+b)(cx+d)', '(ax*b)(cx+d)', 'e(ax+b)-(d+cx)']\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, reponse, a, b, c, d, e, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      a = randint(-11, 11, 0)\n      b = randint(-11, 11, 0)\n      c = randint(-11, 11, 0)\n      d = randint(-11, 11, 0)\n      e = randint(-11, 11, 0)\n      switch (listeTypeDeQuestions[i]) {\n        case 'cx+e(ax+b)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${c}*x+(${e})*(${a}*x+(${b}))`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${c}*x+(${e})*(${a}*x+(${b}))`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${c}*x+(${e * a})*x+(${e * b})`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${c + e * a}*x+(${e * b})`)}$`\n          reponse = printlatex(`${c + e * a}*x+(${e * b})`)\n          break\n        case 'ex+(ax+b)(cx+d)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${e}*x+(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${e}*x+(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${e}*x+(${a * c})*x^2+(${a * d})*x+(${b * c})*x+(${b * d})`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * c}*x^2+(${e + b * c + a * d})*x+(${b * d})`)}$`\n          reponse = printlatex(`${a * c}*x^2+(${e + b * c + a * d})*x+(${b * d})`)\n          break\n        case 'e+(ax+b)(cx+d)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${e}+(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${e}+(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${e}+(${a * c})*x^2+(${a * d})*x+(${b * c})*x+(${b * d})`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * c}*x^2+(${b * c + a * d})*x+(${e + b * d})`)}$`\n          reponse = printlatex(`${a * c}*x^2+(${b * c + a * d})*x+(${e + b * d})`)\n          break\n        case 'e-(ax+b)(cx+d)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${e}-${printlatex(`(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${e}-${printlatex(`(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${e}-(${printlatex(`(${a * c})*x^2+(${a * d})*x+(${b * c})*x+(${b * d})`)})$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${e}+(${-1 * a * c})*x^2+(${-1 * a * d})*x+(${-1 * b * c})*x+(${-1 * b * d})`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${-1 * a * c}*x^2+(${-1 * b * c - a * d})*x+(${e - b * d})`)}$`\n          reponse = printlatex(`${-1 * a * c}*x^2+(${-1 * b * c - a * d})*x+(${e - b * d})`)\n          break\n        case '(ax*b)(cx+d)':\n          a = randint(-3, 3, [0])\n          b = randint(2, 3)\n          texte = `$${lettreDepuisChiffre(i + 1)}=(${printlatex(`${a}*x`)}\\\\times${b})(${printlatex(`${c}*x+(${d})`)})$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=(${printlatex(`${a}*x`)}\\\\times${b})(${printlatex(`${c}*x+(${d})`)})$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * b}*x`)}\\\\times(${printlatex(`${c}*x+(${d})`)})$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * b * c}*x^2+(${a * b * d})*x`)}$`\n          reponse = printlatex(`${a * b * c}*x^2+(${a * b * d})*x`)\n          break\n        case 'e(ax+b)-(d+cx)':\n          e = randint(-11, 11, [-1, 1, 0])\n          texte = `$${lettreDepuisChiffre(i + 1)}=${e}(${printlatex(`${a}*x+(${b})`)})-(${printlatex(`${d}+(${c})*x`)})$`\n          texteCorr = texte\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`(${e * a})*x+(${e * b})`)}-(${printlatex(`${d}+(${c})*x`)})$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`(${e * a})*x+(${e * b})+(${-d})+(${-c})*x`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`(${e * a - c})*x+(${e * b - d})`)}$`\n          reponse = printlatex(`(${e * a - c})*x+(${e * b - d})`)\n          break\n      }\n      setReponse(this, i, reponse)\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","ResoudreEnXetY","context","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","reponse","a","b","c","d","e","cpt","randint","lettreDepuisChiffre","printlatex","setReponse","ajouteChampTexteMathLive","listeQuestionsToContenu"],"sourceRoot":""}