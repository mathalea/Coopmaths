{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N41.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/modules/gestionQcm.js"],"names":["titre","amcReady","amcType","EgalitesEntreFractions","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","qcmDisponible","modeQcm","nouvelleVersion","tabrep","tabicone","parseInt","qcm","listeQuestions","listeCorrections","listeFractions","listeTypeDeQuestions","combinaisonListes","nbQuestions","fraction","a","b","c","d","k","choix","texte","texteCorr","i","choice","randint","Math","max","enleveElement","texFraction","miseEnEvidence","abs","elimineDoublons","push","shuffle2tableaux","mathalea","sortieAMC","replace","tableauSolutionsDuQcm","propositionsQcm","numeroExercice","listeQuestionsToContenu","gestionQcmInteractif","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","autoCorrection","mg32Editable","listePackages","exercice","document","addEventListener","$","checkbox","button","querySelector","event","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","reduce","spanReponseLigne","forEach","solution","rep","label","check","style","backgroundColor","checked","innerHTML","color","fontSize","querySelectorAll","uicheck","classList","add","espace","sortieHtml","length","reponses","statuts","reponsesEpurees","slice","statutsEpures","j","console","log","splice"],"mappings":"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","file":"js/1923.50a514a435d396a60fa3.js","sourcesContent":["/* global mathalea */\nimport Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, combinaisonListes, miseEnEvidence, texFraction, shuffle2tableaux } from '../../modules/outils.js'\nimport { gestionQcmInteractif, propositionsQcm, elimineDoublons } from '../../modules/gestionQcm.js'\nexport const titre = 'Égalités entre fractions simples'\nexport const amcReady = true\nexport const amcType = 1 // type de question AMC\n\n/**\n * Écrire une fraction avec un nouveau dénominateur qui est un multiple de son dénominateur (ce multiple est inférieur à une valeur maximale de 11 par défaut)\n * @Auteur Rémi Angot\n * @auteur Jean-claude Lhote (Mode QCM et alternance numérateur / dénominateur)\n * 5N13-2 et 6N41\n */\nexport default function EgalitesEntreFractions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 11 // Correspond au facteur commun\n  this.sup2 = 2 // alternace numérateur ou dénominateur imposé.\n  this.titre = titre\n  this.consigne = 'Compléter les égalités.'\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.sup2 = parseInt(this.sup2)\n    this.qcm = ['6N41', [], 'Egalités de fractions', 1]\n    let tabrep, tabicone\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const listeFractions = [\n      [1, 2],\n      [1, 3],\n      [2, 3],\n      [1, 4],\n      [3, 4],\n      [1, 5],\n      [2, 5],\n      [3, 5],\n      [4, 5],\n      [1, 6],\n      [5, 6],\n      [1, 7],\n      [2, 7],\n      [3, 7],\n      [4, 7],\n      [5, 7],\n      [6, 7],\n      [1, 8],\n      [3, 8],\n      [5, 8],\n      [7, 8],\n      [1, 9],\n      [2, 9],\n      [4, 9],\n      [5, 9],\n      [7, 9],\n      [8, 9],\n      [1, 10],\n      [3, 10],\n      [7, 10],\n      [9, 10]\n    ] // Couples de nombres premiers entre eux\n    const listeTypeDeQuestions = combinaisonListes(\n      [1, 1, 1, 1, 2],\n      this.nbQuestions\n    )\n    for (\n      let i = 0, fraction, a, b, c, d, k, choix, texte, texteCorr;\n      i < this.nbQuestions;\n      i++\n    ) {\n      if (listeTypeDeQuestions[i] === 1) {\n        // égalité entre 2 fractions\n        fraction = choice(listeFractions) //\n        a = fraction[0]\n        b = fraction[1]\n        if (this.modeQcm) {\n          k = randint(3, Math.max(this.sup, 4))\n        } else {\n          k = randint(2, Math.max(3, this.sup))\n        }\n        c = k * a\n        d = k * b\n        enleveElement(listeFractions, fraction) // Il n'y aura pas 2 fois la même fraction de départ\n        if (this.sup2 === 3) {\n          choix = i % 2\n        } else {\n          choix = this.sup2 % 2\n        }\n        switch (choix) {\n          case 0 :\n            texte = `$${texFraction(a, b)} = ${texFraction(\n          '\\\\phantom{00000000000000}',\n          '\\\\phantom{00000000000000}'\n        )} = ${texFraction('\\\\phantom{0000}', d)}$`\n            if (this.modeQcm) {\n              texte = `$${texFraction(a, b)} = \\\\ldots$`\n            }\n            texteCorr = `$${texFraction(a, b)} = ${texFraction(\n          a + miseEnEvidence('\\\\times' + k),\n          b + miseEnEvidence('\\\\times' + k)\n        )} = ${texFraction(c, d)}$`\n            tabrep = [`$${texFraction(c, d)}$`, `$${texFraction(a, d)}$`, `$${texFraction((k - 1) * a, d)}$`, `$${texFraction((k + 1) * a, d)}$`, `$${texFraction(Math.abs(d - a), d)}$`]\n            tabicone = [1, 0, 0, 0, 0];\n            [tabrep, tabicone] = elimineDoublons(tabrep, tabicone)\n             this.qcm[1].push([`Complète l'égalité de fractions $${texte}$.\\\\\\\\ \\n `,\n              tabrep,\n              tabicone])\n            shuffle2tableaux(tabrep, tabicone)\n            if (this.modeQcm && !mathalea.sortieAMC) {\n              // texteCorr = ''\n              texte = texte.replace(`$${texFraction('\\\\phantom{00000}', '\\\\phantom{00000}')}$`, '')\n              this.tableauSolutionsDuQcm[i] = tabicone\n              texte += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n              // texteCorr += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n            }\n            break\n          case 1 :\n            texte = `$${texFraction(a, b)} = ${texFraction(\n            '\\\\phantom{00000000000000}',\n            '\\\\phantom{00000000000000}'\n          )} = ${texFraction(c, '\\\\phantom{0000}')}$`\n            if (this.modeQcm) {\n              texte = `$${texFraction(a, b)} = \\\\ldots$`\n            }\n            texteCorr = `$${texFraction(a, b)} = ${texFraction(\n            a + miseEnEvidence('\\\\times' + k),\n            b + miseEnEvidence('\\\\times' + k)\n          )} = ${texFraction(c, d)}$`\n            tabrep = [`$${texFraction(c, d)}$`, `$${texFraction(c, b)}$`, `$\\\\dfrac{${c}}{${(k - 1) * b}}$`, `$${texFraction(c, (k + 1) * b)}$`, `$\\\\dfrac{${c}}{${Math.abs(c - b)}}$`]\n            tabicone = [1, 0, 0, 0, 0];\n            [tabrep, tabicone] = elimineDoublons(tabrep, tabicone)\n            this.qcm[1].push([`Complète l'égalité de fractions $${texte}$.\\\\\\\\ \\n `,\n              tabrep,\n              tabicone])\n            shuffle2tableaux(tabrep, tabicone)\n            if (this.modeQcm && !mathalea.sortieAMC) {\n              // texteCorr = ''\n              texte = texte.replace(`$${texFraction('\\\\phantom{00000}', '\\\\phantom{00000}')}$`, '')\n              this.tableauSolutionsDuQcm[i] = tabicone\n              texte += '<br><br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n              // texteCorr += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n            }\n\n            break\n        }\n      } else {\n        // écrire un entier sous la forme d'une fraction\n        a = randint(1, 9)\n        if (this.modeQcm && !mathalea.sortieAMC) {\n          d = randint(3, 9, [a, 2 * a])\n        } else {\n          d = randint(2, 9)\n        }\n        c = a * d\n        if (this.sup2 === 3) {\n          choix = i % 2\n        } else {\n          choix = this.sup2 % 2\n        }\n        switch (choix) {\n          case 0 :\n            texte = `$${a} = ${texFraction(\n          '\\\\phantom{00000000000000}',\n          '\\\\phantom{00000000000000}'\n        )} = ${texFraction('\\\\phantom{0000}', d)}$`\n            if (this.modeQcm) {\n              texte = `$${a} = \\\\ldots$`\n            }\n            texteCorr = `$${a} = \\\\dfrac{${a}}{1} =${texFraction(\n          a + miseEnEvidence('\\\\times' + d),\n          '1' + miseEnEvidence('\\\\times' + d)\n        )} = ${texFraction(c, d)}$`\n            tabrep = [`$${texFraction(c, d)}$`, `$${texFraction(a, d)}$`, `$${texFraction(d + a, d)}$`, `$${texFraction(Math.abs(d - a), d)}$`, `$${texFraction((a + 1) * d, d)}$`]\n            tabicone = [1, 0, 0, 0, 0];\n            [tabrep, tabicone] = elimineDoublons(tabrep, tabicone)\n            this.qcm[1].push([`Complète l'égalité de fractions $${texte}$.\\\\\\\\ \\n `,\n              tabrep,\n              tabicone])\n            shuffle2tableaux(tabrep, tabicone)\n            if (this.modeQcm && !mathalea.sortieAMC) {\n              // texteCorr = ''\n              texte = texte.replace(`$${texFraction('\\\\phantom{00000}', '\\\\phantom{00000}')}$`, '')\n              this.tableauSolutionsDuQcm[i] = tabicone\n              texte += '<br><br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n              // texteCorr += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n            }\n            break\n          case 1 :\n            texte = `$${a} = ${texFraction(\n            '\\\\phantom{00000000000000}',\n            '\\\\phantom{00000000000000}'\n          )} = ${texFraction(c, '\\\\phantom{0000}')}$`\n            if (this.modeQcm) {\n              texte = `$${a} = \\\\ldots$`\n            }\n            texteCorr = `$${a} = \\\\dfrac{${a}}{1} =${texFraction(\n            a + miseEnEvidence('\\\\times' + d),\n            '1' + miseEnEvidence('\\\\times' + d)\n          )} = ${texFraction(c, d)}$`\n            tabrep = [`$${texFraction(c, d)}$`, `$${texFraction(c, c - a)}$`, `$${texFraction(c, a)}$`, `$${texFraction(c, c + a)}$`, `$${texFraction(c, c * a)}$`]\n            tabicone = [1, 0, 0, 0, 0];\n            [tabrep, tabicone] = elimineDoublons(tabrep, tabicone)\n            this.qcm[1].push([`Complète l'égalité de fractions $${texte}$.\\\\\\\\ \\n `,\n              tabrep,\n              tabicone])\n            shuffle2tableaux(tabrep, tabicone)\n            if (this.modeQcm && !mathalea.sortieAMC) {\n              // texteCorr = ''\n              texte = texte.replace(`$${texFraction('\\\\phantom{00000}', '\\\\phantom{00000}')}$`, '')\n              this.tableauSolutionsDuQcm[i] = tabicone\n              texte += '<br><br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n              // texteCorr += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n            }\n\n            break\n        }\n      }\n\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n    gestionQcmInteractif(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale du facteur commun', 99]\n  this.besoinFormulaire2Numerique = ['Type de question', 3, '1 : Numérateur imposé\\n2 : Dénominateur imposé\\n3 : Alternance']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ mathalea sortieHtml */\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function gestionQcmInteractif (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          const nbBonnesReponsesAttendues = exercice.tableauSolutionsDuQcm[i].reduce((a, b) => a + b, 0)\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.tableauSolutionsDuQcm[i].forEach((solution, rep) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${rep}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${rep}`)\n            if (solution === 1) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n            }\n          })\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '✔︎'\n            spanReponseLigne.style.color = 'green'\n          } else {\n            spanReponseLigne.innerHTML = '✖︎'\n            spanReponseLigne.style.color = 'red'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (numeroExercice, i, tabrep, tabicone) {\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (sortieHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  if (!mathalea.sortieAMC) {\n    if (sortieHtml) {\n      texte += `<br>  <form id=\"formEx${numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < tabrep.length; rep++) {\n      if (sortieHtml) {\n        texte += `<div class=\"ui checkbox ex${numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${numeroExercice}Q${i}R${rep}\">${tabrep[rep] + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n      if (tabicone[rep] === 1) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[rep]}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n    }\n    if (sortieHtml) {\n      texte += `<span id=\"resultatCheckEx${numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un objet {reponse=[a,b,c,d,e],statuts=[1,0,0,0,0]}\n * élimine les doublons de réponses et les statuts associés avant de retourner l'objet épuré.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (reponses, statuts) { // fonction qui va éliminer les doublons si il y en a\n  const reponsesEpurees = reponses.slice()\n  const statutsEpures = statuts.slice()\n  for (let i = 0; i < reponsesEpurees.length - 1; i++) {\n    for (let j = i + 1; j < reponsesEpurees.length;) {\n      if (reponsesEpurees[i] === reponsesEpurees[j]) {\n        console.log('doublon trouvé', reponsesEpurees[i], reponsesEpurees[j]) // les réponses i et j sont les mêmes\n\n        if (statutsEpures[i] === 1) { // si la réponse i est bonne, on vire la j\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n        } else if (statutsEpures[j] === 1) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n          statutsEpures[i] = 1\n        } else { // Les deux réponses sont mauvaises\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return [reponsesEpurees, statutsEpures]\n}\n"],"sourceRoot":""}