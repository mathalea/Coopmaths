{"version":3,"file":"js/55449.3af47d48947edf700957.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N12-1.js","webpack://mathalea/./src/js/exercices/6e/6N20-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import EncadrerFractionEntre2Entiers from '../6e/6N20-1.js'\nexport const titre = 'Encadrer une fraction entre deux nombres entiers'\nexport { interactifReady, interactifType, amcType, amcReady } from '../6e/6N20-1.js'\nexport const dateDeModifImportante = '27/10/2021'\n/**\n * Clone de 6N20-1 pour les 2nde\n *\n * @author Jean-Claude Lhote\n */\nexport default function EncadrerFractionEntre2Entiers2nde () {\n  EncadrerFractionEntre2Entiers.call(this)\n  this.lycee = true\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { modalTexteCourt, combinaisonListes, listeQuestionsToContenu, randint, rangeMinMax } from '../../modules/outils.js'\nimport { mathalea2d } from '../../modules/2d.js'\nimport { fraction } from '../../modules/fractions.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Encadrer une fraction entre deux nombres entiers'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n/**\n * Une fraction avec pour dénominateur 2, 3, 4, 5, 10 à encadrer entre 2 entiers\n * @author Rémi Angot\n * Référence 6N20-1\n * Relecture : Novembre 2021 par EE\n*/\nexport default function EncadrerFractionEntre2Entiers () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Compléter avec deux nombres entiers consécutifs.' + modalTexteCourt(1, 'Nombres entiers consécutifs : Ce sont deux nombres entiers qui se suivent comme 4 et 5.', 'Consécutifs')\n  this.introduction = 'Exemple : $2 < \\\\dfrac{9}{4} < 3$ car  $2=\\\\dfrac{8}{4}$ et $3=\\\\dfrac{12}{4}$'\n  this.nbQuestions = 6\n  this.nbCols = 2\n  this.nbColsCorr = 1\n  this.correctionDetailleeDisponible = true\n  this.lycee = false\n  context.isHtml ? this.correctionDetaillee = true : this.correctionDetaillee = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    this.liste_de_denominateurs = this.lycee ? combinaisonListes([2, 3, 4, 5, 6, 7, 8, 9], this.nbQuestions) : combinaisonListes([2, 3, 4, 5, 10], this.nbQuestions)\n    this.liste_de_k = this.lycee ? combinaisonListes(rangeMinMax(-5, 5), this.nbQuestions) : combinaisonListes([0, 1, 2, 3, 4, 5], this.nbQuestions)\n    console.log(this.lycee)\n    for (let i = 0, texte, texteCorr, n, d, k, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      d = this.liste_de_denominateurs[i]\n      k = this.liste_de_k[i]\n      n = k * d + randint(1, d - 1)\n      texte = this.interactif ? ajouteChampTexteMathLive(this, 2 * i, 'largeur10 inline') + `$< \\\\dfrac{${n}}{${d}} <$` + ajouteChampTexteMathLive(this, 2 * i + 1, 'largeur10 inline') : `$\\\\ldots < \\\\dfrac{${n}}{${d}} < \\\\ldots$`\n      texteCorr = `$${k} < \\\\dfrac{${n}}{${d}} < ${k + 1}$`\n      if (this.correctionDetaillee) {\n        texteCorr += ` $\\\\qquad$ car $\\\\quad ${k}=\\\\dfrac{${k * d}}{${d}}\\\\quad$ et $\\\\quad${k + 1}=\\\\dfrac{${(k + 1) * d}}{${d}}$ `\n        texteCorr += '<br><br>'\n        texteCorr += mathalea2d({ xmin: -0.5, xmax: 24, ymax: 1.5, scale: 0.6 }, fraction(n, d).representation(0, 0, 3, 0, 'barre', 'blue')\n        )\n      }\n\n      if (this.questionJamaisPosee(i, d, n)) {\n        if (context.isAmc) {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            options: { multicols: true },\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: texteCorr,\n                  statut: '',\n                  reponse: {\n                    texte: 'Entier inférieur',\n                    valeur: k,\n                    param: {\n                      digits: 1,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: '',\n                  statut: '',\n                  reponse: {\n                    texte: 'Entier supérieur',\n                    valeur: k + 1,\n                    param: {\n                      digits: 1,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n        } else {\n          setReponse(this, 2 * i, k)\n          setReponse(this, 2 * i + 1, k + 1)\n        }\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","dateDeModifImportante","EncadrerFractionEntre2Entiers2nde","EncadrerFractionEntre2Entiers","this","lycee","interactifReady","interactifType","amcReady","amcType","Exercice","consigne","modalTexteCourt","introduction","nbQuestions","nbCols","nbColsCorr","correctionDetailleeDisponible","context","correctionDetaillee","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","autoCorrection","liste_de_denominateurs","combinaisonListes","liste_de_k","rangeMinMax","console","log","texte","texteCorr","n","d","k","i","cpt","randint","interactif","ajouteChampTexteMathLive","mathalea2d","xmin","xmax","ymax","scale","fraction","representation","questionJamaisPosee","enonce","options","multicols","propositions","type","statut","reponse","valeur","param","digits","decimals","signe","approx","setReponse","push","listeQuestionsToContenu","boutonAide","consigneCorrection","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}