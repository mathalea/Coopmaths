{"version":3,"file":"js/93771.86699c825b5875c8b559.js","mappings":"yPAIO,MAAMA,GAAW,EACXC,EAAU,UACVC,GAAkB,EAClBC,EAAQ,uCASN,SAASC,IAEtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,SAAW,GAChBD,KAAKE,OAAS,KACdF,KAAKG,YAAc,EACnBH,KAAKI,OAAS,EACdJ,KAAKK,WAAa,EAClBL,KAAKM,mBAAoB,EACzBN,KAAKO,qBAAsB,EAC3BP,KAAKQ,gBAAkB,EACvBR,KAAKS,KAAO,EACZT,KAAKU,IAAM,EACS,OAAhBV,KAAKE,QACPF,KAAKW,KAAO,GACZX,KAAKS,KAAO,IAEZT,KAAKW,KAAO,GACZX,KAAKS,KAAO,GAEdT,KAAKY,gBAAkB,WAKrB,IAAIC,EAJJb,KAAKc,iBAAmB,GACxBd,KAAKe,eAAiB,GACtBf,KAAKgB,eAAiB,GACtBhB,KAAKU,KAAMO,EAAAA,EAAAA,KAAkB,EAAG,EAAGC,OAAOlB,KAAKU,KAAM,GAGnDG,EADe,IAAbb,KAAKU,KACCS,EAAAA,EAAAA,KAAkB,CAAC,EAAG,EAAG,IAAKnB,KAAKG,aACrB,IAAbH,KAAKU,KACNS,EAAAA,EAAAA,KAAkB,CAAC,EAAG,GAAInB,KAAKG,aACjB,IAAbH,KAAKU,KACNS,EAAAA,EAAAA,KAAkB,CAAC,EAAG,EAAG,GAAInB,KAAKG,cAElCiB,EAAAA,EAAAA,KAAkC,EAACC,EAAAA,EAAAA,KAAO,CAAC,EAAG,EAAG,MAAMA,EAAAA,EAAAA,KAAO,CAAC,EAAG,KAAKA,EAAAA,EAAAA,KAAO,CAAC,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5H,MACMC,EAAUC,SAASvB,KAAKW,MAE9B,IAAK,IAAWa,EAAOC,EAAQC,EAAWC,EAAWC,EAAMC,EAAQC,EAAgBC,EAA1EC,EAAI,EAA6EA,EAAIhC,KAAKG,aAAc,CAC/GyB,GAAOK,EAAAA,EAAAA,KAAW,CAAEC,OAJA,KAKpBN,EAAK1B,OAASqB,SAASvB,KAAKS,MAC5BmB,EAAKO,OAASP,EAAKQ,cAAcR,EAAK1B,QACtC0B,EAAKS,OAAST,EAAKU,cAAcV,EAAKO,QACtCP,EAAKW,SAAWX,EAAKY,YAAYZ,EAAKO,QACtCR,EAAYC,EAAKO,OAGjBX,EAAS,IAAEiB,EAAAA,EAAAA,KAAqB,6EAA8E,YAAY5B,EAAMmB,WAChIN,EAAa,IAAEe,EAAAA,EAAAA,KAAsB,2DAA0D,EAAId,EAAUA,EAAUe,OAAS,GAAG,GAAK,MAAO,eAE/IZ,EAAiB,GACjBC,EAAQ,EACR,IAAK,IAAIY,EAAI,EAAGA,GAAKrB,EAASqB,IAC5Bb,EAAec,KAAK/B,EAAMmB,GAAKW,GAEjCb,GAAiBX,EAAAA,EAAAA,KAAkBW,EAAgB,IACnD,IAAK,IAAIe,EAAI,EAAGA,EAAI,EAAGA,IACrBjB,EAAKkB,QAAQF,KAAK,CAAC,EAAG,EAAG,IAE3B,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BlB,GAAS,EACT,IAAK,IAAImB,EAAI,EAAGA,EAAIrB,EAAUe,OAAQM,IAChCrB,EAAUqB,GAAG,KAAOH,GAAKlB,EAAUqB,GAAG,KAAOD,IAAGlB,GAAS,GAE1DA,GAGHD,EAAKkB,QAAQD,EAAI,GAAGE,GAAKjB,EAAeC,GACxCA,KAHAH,EAAKkB,QAAQD,EAAI,GAAGE,IAAKE,EAAAA,EAAAA,KAAQ,EAAG3B,GAAWT,EAAMmB,IAAKiB,EAAAA,EAAAA,KAAQ,EAAGpC,EAAMmB,GAAK,GAOtFJ,EAAKsB,UAAYtB,EAAKuB,aAAavB,EAAKkB,QAtCpB,IAuCpBrB,EAAS,CAAE2B,MAAO,EAAGC,KAAM,EAAGC,KAAM,GAAIC,KAAM,GAAIC,YAAa,GAAIC,MAAO,IAC1EjC,IAASkC,EAAAA,EAAAA,KAAWjC,EAAQG,EAAKS,OAAQT,EAAKsB,YACzC,EAAIlB,GAAK,GAAM,IAAM2B,EAAAA,GAAAA,SAAmBA,EAAAA,GAAAA,OAAiB3D,KAAKG,YAAc,IAC/EqB,GAAS,aAEXE,IAAagC,EAAAA,EAAAA,KAAWjC,EAAQG,EAAKS,OAAQT,EAAKsB,UAAWtB,EAAKW,UAGlEvC,KAAKgB,eAAiB,CAAC,CAAE4C,OAAQpC,EAAOqC,aAAc,CAAC,CAAErC,MAAOE,EAAWoC,OAAQ,EAAGC,SAAU,OAE5F/D,KAAKgE,oBAAoBhC,KAAMJ,EAAKkB,WACtC9C,KAAKe,eAAe6B,KAAKpB,GACzBxB,KAAKc,iBAAiB8B,KAAKlB,GAC3BM,MAEFiC,EAAAA,EAAAA,KAAwBjE,QAG5BA,KAAKkE,0BAA4B,CAAC,WAAY,EAAG,oFACjDlE,KAAKmE,2BAA6B,CAAC,mBACnCnE,KAAKoE,2BAA6B,CAAC,qBAAsB,EAAG,0F,gBCzG/C,SAASrE,IAItBC,KAAKH,MAAQ,GACbG,KAAKqE,YAAa,EAclBrE,KAAKC,SAAW,GAChBD,KAAKsE,mBAAqB,GAC1BtE,KAAKuE,aAAe,GACpBvE,KAAKe,eAAiB,GACtBf,KAAKc,iBAAmB,GACxBd,KAAKwE,QAAU,GACfxE,KAAKyE,kBAAoB,GACzBzE,KAAKgB,eAAiB,GACtBhB,KAAK0E,sBAAwB,GAK7B1E,KAAK2E,QAAU,EACf3E,KAAK4E,YAAc,EAKnB5E,KAAKM,mBAAoB,EACzBN,KAAK6E,cAAgB,GACrB7E,KAAK8E,oBAAqB,EAC1B9E,KAAK+E,uBAAwB,EAC7B/E,KAAKI,OAAS,EACdJ,KAAKK,WAAa,EAClBL,KAAKgF,kBAAmB,EACxBhF,KAAKiF,sBAAuB,EAC5BjF,KAAKkF,mBAAoB,EACzBlF,KAAKmF,uBAAwB,EAM7BnF,KAAKoF,QAAS,EACdpF,KAAKQ,gBAAkB,EAKvBR,KAAKG,YAAc,GACnBH,KAAKqF,mBAAqB,EAC1BrF,KAAKsF,+BAAgC,EACrCtF,KAAKuF,qBAAsB,EAC3BvF,KAAKwF,oBAAqB,EAC1BxF,KAAKyF,MAAQ,GAEbzF,KAAK0F,YAAa,EAClB1F,KAAK2F,uBAAwB,EAE7B3F,KAAKkE,2BAA4B,EACjClE,KAAK4F,uBAAwB,EAC7B5F,KAAK6F,6BAA8B,EAEnC7F,KAAKmE,4BAA6B,EAClCnE,KAAK8F,wBAAyB,EAC9B9F,KAAK+F,8BAA+B,EAEpC/F,KAAKoE,4BAA6B,EAClCpE,KAAKgG,wBAAyB,EAC9BhG,KAAKiG,8BAA+B,EAEpCjG,KAAKkG,4BAA6B,EAClClG,KAAKmG,wBAAyB,EAC9BnG,KAAKoG,8BAA+B,EAMpCpG,KAAKqG,cAAe,EASpBrG,KAAKsG,eAAiB,GAMtBtG,KAAKY,gBAAkB,SAAU2F,KAQjCvG,KAAKgE,oBAAsB,SAAUrB,KAAM6D,GAC/B,IAAN7D,IAAS3C,KAAKsG,eAAiB,IACnC,IAAIG,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAI5G,KAAKsG,eAAeO,QAAQJ,IAAmB,KAGjDzG,KAAKsG,eAAe1D,KAAK6D,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/6e/6C10-5.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, texteEnCouleurEtGras, choice, contraindreValeur, combinaisonListesSansChangerOrdre } from '../../modules/outils.js'\nimport { mathalea2d, labyrinthe } from '../../modules/2d.js'\nimport { context } from '../../modules/context.js'\nexport const amcReady = true\nexport const amcType = 'AMCOpen' // type de question AMC\nexport const interactifReady = false\nexport const titre = 'Parcourir un labyrinthe de multiples'\n\n/**\n * @author Jean-Claude Lhote\n * Publié le 6/12/2020\n * Ref : c3C10-2 et 6C10-5\n * Parcourir un labyrinthe de nombres en passant par les multiples du nombre choisi.\n */\n\nexport default function ExerciceLabyrintheMultiples () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.consigne = ''\n  this.niveau = '6e'\n  this.nbQuestions = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  this.tailleDiaporama = 3\n  this.sup3 = 3\n  this.sup = 4\n  if (this.niveau === 'CM') {\n    this.sup2 = 10\n    this.sup3 = 3\n  } else {\n    this.sup2 = 13\n    this.sup3 = 4\n  }\n  this.nouvelleVersion = function () {\n    this.listeCorrections = []\n    this.listeQuestions = []\n    this.autoCorrection = []\n    this.sup = contraindreValeur(1, 4, Number(this.sup), 4)\n    let table\n    if (this.sup === 1) {\n      table = combinaisonListes([2, 5, 10], this.nbQuestions)\n    } else if (this.sup === 2) {\n      table = combinaisonListes([3, 9], this.nbQuestions)\n    } else if (this.sup === 3) {\n      table = combinaisonListes([4, 6, 8], this.nbQuestions)\n    } else {\n      table = combinaisonListesSansChangerOrdre([choice([2, 5, 10]), choice([3, 9]), choice([4, 6, 7, 8]), 2, 3, 4, 5, 6, 7, 8, 9])\n    }\n    const tailleChiffre = 0.8\n    const maximum = parseInt(this.sup2)\n\n    for (let q = 0, texte, params, texteCorr, monChemin, laby, trouve, listeMultiples, index; q < this.nbQuestions;) {\n      laby = labyrinthe({ taille: tailleChiffre })\n      laby.niveau = parseInt(this.sup3) // Le niveau (de 1 à 6=mélange) définit le nombre d'étapes\n      laby.chemin = laby.choisitChemin(laby.niveau) // On choisi un chemin\n      laby.murs2d = laby.construitMurs(laby.chemin) // On construit le labyrinthe\n      laby.chemin2d = laby.traceChemin(laby.chemin) // On trace le chemin solution\n      monChemin = laby.chemin\n      //   this.consigne=`Trouve la sortie en ne passant que par les cases contenant un multiple de $${table}$.`\n\n      texte = `${texteEnCouleurEtGras('Trouve la sortie en ne passant que par les cases contenant un multiple de ', 'black')}$${table[q]}$.<br>`\n      texteCorr = `${texteEnCouleurEtGras(`Voici le chemin en marron et la sortie était la numéro $${2 - monChemin[monChemin.length - 1][1] + 1}$.`, 'black')}<br>`\n      // Zone de construction du tableau de nombres : Si ils sont sur monchemin et seulement si, ils doivent vérifier la consigne\n      listeMultiples = []\n      index = 0\n      for (let i = 2; i <= maximum; i++) {\n        listeMultiples.push(table[q] * i)\n      }\n      listeMultiples = combinaisonListes(listeMultiples, 12)\n      for (let a = 1; a < 7; a++) {\n        laby.nombres.push([0, 0, 0])\n      }\n      for (let a = 1; a < 7; a++) {\n        for (let b = 0; b < 3; b++) {\n          trouve = false\n          for (let k = 0; k < monChemin.length; k++) {\n            if (monChemin[k][0] === a && monChemin[k][1] === b) trouve = true\n          }\n          if (!trouve) {\n            laby.nombres[a - 1][b] = randint(2, maximum) * table[q] + randint(1, table[q] - 1)\n          } else {\n            laby.nombres[a - 1][b] = listeMultiples[index]\n            index++\n          }\n        }\n      } // Le tableau de nombre étant fait, on place les objets nombres.\n      laby.nombres2d = laby.placeNombres(laby.nombres, tailleChiffre)\n      params = { xmin: -4, ymin: 0, xmax: 22, ymax: 11, pixelsParCm: 20, scale: 0.5 }\n      texte += mathalea2d(params, laby.murs2d, laby.nombres2d)\n      if ((1 + q) % 3 === 0 && !context.isHtml && !context.isAmc && this.nbQuestions > 3) { // en contexte Latex, on évite que la consigne soit sur un page différente du labyrinthe\n        texte += '\\\\newpage'\n      }\n      texteCorr += mathalea2d(params, laby.murs2d, laby.nombres2d, laby.chemin2d)\n\n      /** ********************** AMC Open *****************************/\n      this.autoCorrection = [{ enonce: texte, propositions: [{ texte: texteCorr, statut: 3, feedback: '' }] }]\n      /****************************************************/\n      if (this.questionJamaisPosee(q, ...laby.nombres)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        q++\n      }\n      listeQuestionsToContenu(this)\n    }\n  }\n  this.besoinFormulaireNumerique = ['Tables :', 4, '1: tables de 2,5 et 10\\n2: tables de 3 et 9\\n3: tables de 4,6,7 et 8\\n4: mélange']\n  this.besoinFormulaire2Numerique = ['Facteur maximum']\n  this.besoinFormulaire3Numerique = ['Niveau de rapidité', 6, ' 1 : Guépard\\n 2 : Antilope\\n 3 : Lièvre\\n 4 : Tortue\\n 5 : Escargot\\n 6 : Au hasard']\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","titre","ExerciceLabyrintheMultiples","Exercice","this","consigne","niveau","nbQuestions","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","tailleDiaporama","sup3","sup","sup2","nouvelleVersion","table","listeCorrections","listeQuestions","autoCorrection","contraindreValeur","Number","combinaisonListes","combinaisonListesSansChangerOrdre","choice","maximum","parseInt","texte","params","texteCorr","monChemin","laby","trouve","listeMultiples","index","q","labyrinthe","taille","chemin","choisitChemin","murs2d","construitMurs","chemin2d","traceChemin","texteEnCouleurEtGras","length","i","push","a","nombres","b","k","randint","nombres2d","placeNombres","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","context","enonce","propositions","statut","feedback","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","besoinFormulaire3Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}