{"version":3,"file":"js/23348.badaf6a5b6a07e6bb9b6.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/CM/CM021.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, range1, shuffle, combinaisonListes, calcul } from '../../modules/outils.js'\n\nexport const titre = 'Le compte est bon original'\n\n/**\n * Un \"Le compte est bon\" avec des solutions \"formatées\" pour travailler certains incontournables du calcul mental\n *  @author Jean-Claude Lhote\n * Référence CM021\n */\nexport default function CompteEstBon () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne =\n    'Trouve le résultat en utilisant les quatre opérations et les nombres du tirage (une seule fois).'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1 // niveau de calcul souhaité\n\n  this.nouvelleVersion = function () {\n    let typesDeQuestions, a, b, c, d, cible, tirage\n    if (!this.sup) {\n      // Si rien n'est saisi\n      typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions)\n    } else {\n      if (typeof this.sup === 'number') {\n        // Si c'est un nombre c'est qu'il y a qu'une seule grandeur\n        typesDeQuestions = combinaisonListes(\n          [parseInt(this.sup)],\n          this.nbQuestions\n        )\n      } else {\n        typesDeQuestions = this.sup.split('-') // Sinon on crée un tableau à partir des valeurs séparées par des -\n        for (let i = 0; i < typesDeQuestions.length; i++) { typesDeQuestions[i] = parseInt(typesDeQuestions[i]) }\n        this.nbQuestions = typesDeQuestions.length\n      }\n    }\n    const choix = combinaisonListes(range1(5), this.nbQuestions)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (typesDeQuestions[i]) {\n        case 1:\n          a = randint(2, 9)\n          b = randint(2, 8, a)\n          c = randint(1, 9, [a, b])\n          d = randint(1, 9, [a, b, c])\n          switch (choix[i]) {\n            case 1:\n              cible = calcul(a * 100 + b * 10 + c + d)\n              tirage = shuffle([100, 10, a, b, c, d])\n              texteCorr = `Le compte est bon : $${cible}=100\\\\times${a}+10\\\\times${b}+${c}+${d}$`\n              break\n            case 2:\n              cible = calcul(a * 100 + b * 10 + c - d)\n              tirage = shuffle([100, 10, a, b, c, d])\n              texteCorr = `Le compte est bon : $${cible}=100\\\\times${a}+10\\\\times${b}+${c}-${d}$`\n              break\n            case 3:\n              cible = calcul(a * 100 - b * 10 + c + d)\n              tirage = shuffle([100, 10, a, b, c, d])\n              texteCorr = `Le compte est bon : $${cible}=100\\\\times${a}-10\\\\times${b}+${c}+${d}$`\n              break\n            case 4:\n              cible = calcul(a * 100 - b * 10 + c - d)\n              tirage = shuffle([100, 10, a, b, c, d])\n              texteCorr = `Le compte est bon : $${cible}=100\\\\times${a}-10\\\\times${b}+${c}-${d}$`\n              break\n            default:\n              cible = calcul(a * 100 + (b + c) * 10 + d)\n              tirage = shuffle([100, 10, a, b, c, d])\n              texteCorr = `Le compte est bon : $${cible}=100\\\\times${a}+10\\\\times(${b}+${c})+${d}$`\n          }\n          break\n\n        case 2:\n          a = randint(3, 9)\n          b = randint(3, 8, a)\n          c = randint(3, 9, [a, b])\n          switch (choix[i]) {\n            case 1:\n              cible = calcul(a * 100 + b * 10 + c)\n              tirage = shuffle([50, 50, 10, a, b, c])\n              texteCorr = `Le compte est bon : $${cible}=(50+50)\\\\times${a}+10\\\\times${b}+${c}$`\n              break\n            case 2:\n              cible = calcul(a * 100 + b * 10 - c)\n              tirage = shuffle([50, 50, 10, a, b, c])\n              texteCorr = `Le compte est bon : $${cible}=(50+50)\\\\times${a}+10\\\\times${b}-${c}$`\n              break\n            case 3:\n              cible = calcul(a * 100 - b * 10 + c)\n              tirage = shuffle([50, 50, 10, a, b, c])\n              texteCorr = `Le compte est bon : $${cible}=(50+50)\\\\times${a}-10\\\\times${b}+${c}$`\n              break\n            case 4:\n              cible = calcul(a * 100 - b * 10 - c)\n              tirage = shuffle([50, 2, 10, a, b, c])\n              texteCorr = `Le compte est bon : $${cible}=2\\\\times50\\\\times${a}-10\\\\times${b}-${c}$`\n              break\n            default:\n              cible = calcul(a * 100 + b * 10 - c)\n              tirage = shuffle([25, 4, 10, a, b, c])\n              texteCorr = `Le compte est bon : $${cible}=4\\\\times25\\\\times${a}+10\\\\times${b}-${c}$`\n          }\n          break\n        case 3:\n          a = randint(2, 5)\n          b = randint(3, 8, a)\n          c = randint(3, 9, [a, b])\n          switch (choix[i]) {\n            case 1:\n              cible = calcul(a * (100 + b * 10) + c)\n              tirage = shuffle([50, 2, 10, a, b, c])\n              texteCorr = `Le compte est bon : $${cible}=${a}\\\\times(50\\\\times2+10\\\\times${b})+${c}$`\n              break\n            case 2:\n              cible = calcul(a * (100 + b * 10) - c)\n              tirage = shuffle([50, 2, 10, a, b, c])\n              texteCorr = `Le compte est bon : $${cible}=${a}\\\\times(50\\\\times2+10\\\\times${b})-${c}$`\n              break\n            case 3:\n              cible = calcul(a * (100 + b * 10) + c)\n              tirage = shuffle([25, 4, 10, a, b, c])\n              texteCorr = `Le compte est bon : $${cible}=${a}\\\\times(25\\\\times4+10\\\\times${b})+${c}$`\n              break\n            case 4:\n              cible = calcul(a * (100 + b * 10) - c)\n              tirage = shuffle([25, 4, 10, a, b, c])\n              texteCorr = `Le compte est bon : $${cible}=${a}\\\\times(25\\\\times4+10\\\\times${b})-${c}$`\n              break\n            default:\n              cible = calcul(a * (100 + b * 10) + c)\n              tirage = shuffle([25, 75, 10, a, b, c])\n              texteCorr = `Le compte est bon : $${cible}=${a}\\\\times((25+75)+10\\\\times${b})+${c}$`\n          }\n          break\n      }\n      texte = 'Voici le tirage : '\n      for (let i = 0; i < 5; i++) { texte += `${tirage[i]} ; ` }\n      texte += `${tirage[5]}.<br>`\n      texte += `Et le nombre à trouver est : ${cible}.`\n\n      if (this.questionJamaisPosee(i, choix[i], a, b, c)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = [\n    'Niveaux de difficultés (1 à 3)',\n    'Nombres séparés par des tirets'\n  ] // Texte, tooltip\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","CompteEstBon","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","typesDeQuestions","a","b","c","d","cible","tirage","combinaisonListes","parseInt","split","i","length","choix","range1","listeQuestions","listeCorrections","texte","texteCorr","cpt","randint","calcul","shuffle","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireTexte","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}