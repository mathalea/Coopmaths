{"version":3,"file":"js/16498.5b6eb0f960002fb31181.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/1e/1E10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, rienSi1, ecritureAlgebrique, ecritureAlgebriqueSauf1, ecritureParentheseSiNegatif, modalTexteLong } from '../../modules/outils.js'\nimport { point, segment, repere2, courbe, mathalea2d } from '../../modules/2d.js'\n\nexport const titre = 'Calcul du discriminant d’une équation du second degré'\n\n/**\n * Calcul de discriminant pour identifier la forme graphique associée (0 solution dans IR, 1 ou 2)\n * @author Rémi Angot\n * Référence 1E10\n*/\nexport default function CalculDiscriminant () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Pour chaque équation, calculer le discriminant et déterminer le nombre de solutions de cette équation dans $\\\\mathbb{R}$.'\n  this.nbQuestions = 6\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  if (context.isHtml) {\n    this.spacingCorr = 2\n  }\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const listeTypesEquations = combinaisonListes(['0solution', '1solution', '2solutions'], this.nbQuestions)\n    for (let i = 0, texte, texteCorr, a, b, c, x1, y1, k, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      let aNbPointsIntersection\n      switch (listeTypesEquations[i]) {\n        case '0solution':\n          aNbPointsIntersection = \"n'a aucun point d'intersection\"\n          k = randint(1, 5)\n          x1 = randint(-3, 3, [0])\n          y1 = randint(1, 5)\n          if (choice(['+', '-']) === '+') { // k(x-x1)^2 + y1 avec k>0 et y1>0\n            a = k\n            b = -2 * k * x1\n            c = k * x1 * x1 + y1\n          } else { // -k(x-x1)^2 -y1 avec k>0 et y1>0\n            a = -k\n            b = 2 * k * x1\n            c = -k * x1 * x1 - y1\n          }\n          texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}=0$`\n          if (b === 0) {\n            texte = `$${rienSi1(a)}x^2${ecritureAlgebrique(c)}=0$`\n          }\n          texteCorr = `$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n          texteCorr += '<br>$\\\\Delta<0$ donc l\\'équation n\\'admet pas de solution.'\n          texteCorr += '<br>$\\\\mathcal{S}=\\\\emptyset$'\n          break\n        case '1solution': // k(x-x1)^2\n          aNbPointsIntersection = \"n'a qu'un seul point d'intersection\"\n          k = randint(-5, 5, [0])\n          x1 = randint(-5, 5, [0])\n          a = k\n          b = -2 * k * x1\n          c = k * x1 * x1\n          texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}=0$`\n          if (b === 0) {\n            texte = `$${rienSi1(a)}x^2${ecritureAlgebrique(c)}=0$`\n          }\n          if (c === 0) {\n            texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x=0$`\n          }\n          texteCorr = `$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n          texteCorr += '<br>$\\\\Delta=0$ donc l\\'équation admet une unique solution.'\n          break\n        case '2solutions': // k(x-x1)^2\n          aNbPointsIntersection = \"a deux points d'intersection\"\n          k = randint(1, 5)\n          x1 = randint(-3, 3)\n          y1 = randint(1, 5)\n          if (choice(['+', '-']) === '+') { // k(x-x1)^2 + y1 avec k>0 et y1<0\n            y1 *= -1\n            a = k\n            b = -2 * k * x1\n            c = k * x1 * x1 + y1\n          } else { // -k(x-x1)^2 -y1 avec k>0 et y1>0\n            a = -k\n            b = 2 * k * x1\n            c = -k * x1 * x1 + y1\n          }\n          texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}=0$`\n          if (b === 0) {\n            texte = `$${rienSi1(a)}x^2${ecritureAlgebrique(c)}=0$`\n          }\n          if (c === 0) {\n            texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x=0$`\n          }\n          texteCorr = `$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n          texteCorr += '<br>$\\\\Delta>0$ donc l\\'équation admet deux solutions.'\n          break\n        default:\n          break\n      }\n      if (context.isHtml) {\n        const f = x => a * x ** 2 + b * x + c\n        const graphique = courbe(f)\n        graphique.color = 'blue'\n        const s = segment(point(-10, 0), point(10, 0))\n        s.epaisseur = 3\n        s.color = 'red'\n        const r = repere2({ afficheLabels: false, xLabelListe: [], yLabelListe: [] })\n        let correctionComplementaire = `Notons $f : x \\\\mapsto ${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$.`\n        correctionComplementaire += `<br>On observe que la courbe représentative de $f$ ${aNbPointsIntersection} avec l'axe des abscisses.`\n        correctionComplementaire += '<br>'\n        correctionComplementaire += mathalea2d({ xmin: -10.1, ymin: -10.1, xmax: 10.1, ymax: 10.1, pixelsParCm: 15 },\n          graphique, r, s)\n\n        texteCorr += modalTexteLong(numeroExercice, 'Complément graphique', correctionComplementaire, 'Complément graphique', 'info circle')\n      }\n      if (this.questionJamaisPosee(i, a, b, c)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","CalculDiscriminant","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","context","spacingCorr","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","listeTypesEquations","combinaisonListes","texte","texteCorr","a","b","c","x1","y1","k","i","cpt","aNbPointsIntersection","randint","choice","rienSi1","ecritureAlgebriqueSauf1","ecritureAlgebrique","ecritureParentheseSiNegatif","f","x","graphique","courbe","color","s","segment","point","epaisseur","r","repere2","afficheLabels","xLabelListe","yLabelListe","correctionComplementaire","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","modalTexteLong","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}