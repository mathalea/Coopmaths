{"version":3,"file":"js/87976.185aeee701d1a455c5b1.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5A11-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, texteEnCouleurEtGras, shuffle, combinaisonListesSansChangerOrdre } from '../../modules/outils.js'\nimport { mathalea2d, labyrinthe } from '../../modules/2d.js'\nexport const dateDePublication = '16/11/2021'\nexport const titre = 'Labyrinthe de multiples avec critères choisis équilibrés '\n\n/**\n * @author Jean-Claude Lhote\n * Publié le 16/11/2021\n * Ref 5A11-2 (clône de 5A11-1 qui datait du 7/12/2020)\n * Sortir du labyrinthe en utilisant les critères de divisibilité.\n */\nexport default function ExerciceLabyrintheDivisibilite () {\n  Exercice.call(this)\n  this.titre = titre\n  this.consigne = ''\n  this.niveau = '6e'\n  this.nbQuestions = 4\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  this.sup = 6\n\n  // this.consigne=`Trouve la sortie en ne passant que par les cases contenant un nombre divisible par $${parseInt(this.sup)}$.`\n  this.nouvelleVersion = function () {\n    this.sup = Number(this.sup)\n    const tailleChiffre = 0.8\n    this.listeCorrections = []\n    this.listeQuestions = []\n    this.autoCorrection = []\n\n    let texte, texteCorr, trouve, laby, monChemin\n    const listeCouples = shuffle([[2, 3], [2, 9], [5, 3], [5, 9], [10, 3], [10, 9]])\n    let tables = []\n    for (const couple of listeCouples) {\n      tables.push(couple[0], couple[1])\n    }\n    tables = combinaisonListesSansChangerOrdre(tables, this.nbQuestions)\n    for (let q = 0; q < this.nbQuestions;) {\n      laby = labyrinthe({ taille: tailleChiffre })\n      laby.niveau = this.sup // Le niveau (de 1 à 6=mélange) définit le nombre d'étapes\n      laby.chemin = laby.choisitChemin(laby.niveau) // On choisi un chemin\n      laby.murs2d = laby.construitMurs(laby.chemin) // On construit le labyrinthe\n      laby.chemin2d = laby.traceChemin(laby.chemin) // On trace le chemin solution\n      monChemin = laby.chemin\n      texte = `${texteEnCouleurEtGras('Trouve la sortie en ne passant que par les cases contenant un nombre divisible par ', 'black')}$${tables[q]}$.<br>`\n      texteCorr = `${texteEnCouleurEtGras(`Voici le chemin en marron et la sortie était la numéro $${2 - monChemin[monChemin.length - 1][1] + 1}$.`, 'black')}<br>`\n      // Zone de construction du tableau de nombres : Si ils sont sur monChemin et seulement si, ils doivent vérifier la consigne\n      let listeMultiples = []; let index = 0\n      for (let i = 200; i <= 12000; i += randint(1, 100)) {\n        listeMultiples.push(tables[q] * i)\n      }\n      listeMultiples = combinaisonListes(listeMultiples, 12)\n      for (let a = 1; a < 7; a++) {\n        laby.nombres.push([0, 0, 0])\n      }\n      for (let a = 1; a < 7; a++) {\n        for (let b = 0; b < 3; b++) {\n          trouve = false\n          for (let k = 0; k < monChemin.length; k++) {\n            if (monChemin[k][0] === a && monChemin[k][1] === b) { trouve = true }\n          }\n          if (!trouve) {\n            laby.nombres[a - 1][b] = randint(200, 5000) * tables[q] + randint(1, tables[q] - 1)\n          } else {\n            laby.nombres[a - 1][b] = listeMultiples[index]\n            index++\n          }\n        }\n      } // Le tableau de nombre étant fait, on place les objets nombres.\n      laby.nombres2d = laby.placeNombres(laby.nombres, tailleChiffre)\n      const params = { xmin: -4, ymin: 0, xmax: 22, ymax: 11, pixelsParCm: 20, scale: 0.7 }\n      texte += mathalea2d(params, laby.murs2d, laby.nombres2d)\n      texteCorr += mathalea2d(params, laby.murs2d, laby.nombres2d, laby.chemin2d)\n      if (this.questionJamaisPosee(q, laby.nombres[0], laby.nombres[1])) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        q++\n      }\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de rapidité', 6, '1 : Escargot\\n2 : Tortue\\n3 : Lièvre\\n4 : Antilope\\n5 : Guépard\\n6 : Au hasard']\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["dateDePublication","titre","ExerciceLabyrintheDivisibilite","Exercice","this","consigne","niveau","nbQuestions","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","sup","nouvelleVersion","Number","texte","texteCorr","trouve","laby","monChemin","listeCorrections","listeQuestions","autoCorrection","listeCouples","shuffle","tables","couple","push","combinaisonListesSansChangerOrdre","q","labyrinthe","taille","chemin","choisitChemin","murs2d","construitMurs","chemin2d","traceChemin","texteEnCouleurEtGras","length","listeMultiples","index","i","randint","combinaisonListes","a","nombres","b","k","nombres2d","placeNombres","params","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}