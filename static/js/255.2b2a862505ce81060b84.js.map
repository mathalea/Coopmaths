{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4G20.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","amcType","amcReady","interactifReady","Pythagore2D","Exercice","this","interactif","nbQuestions","nbCols","nbColsCorr","typeExercice","video","nouvelleVersion","sup","parseInt","listeQuestions","listeCorrections","listeTypeDeQuestions","listeDeNomsDePolygones","consigne","combinaisonListes","texte","texteCorr","i","cpt","A1","point","B1","calcul","randint","C1","similitude","longueur","p1","polygone","isVisible","p2","rotation","A","listePoints","B","C","codage","codageAngleDroit","xmin","Math","min","x","ymin","y","xmax","max","ymax","nomDuPolygone","creerNomDePolygone","push","nomme","nommePolygone","affAB","afficheLongueurSegment","affAC","affBC","longueurAB","longueurAC","longueurBC","mesObjetsATracer","context","mathalea2d","scale","style","nom","AB","texNombre","texNombrec","sqrt","ajouteChampTexte","texteApres","setReponse","BC","AC","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","propositions","length","statut","spanReponseLigne","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","id","feedback","type","querySelectorAll","uicheck","classList","add","propositionsQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","inline","numeric","a","reponse","valeur","exerciceInteractif","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"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","file":"js/255.2b2a862505ce81060b84.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, texNombrec, creerNomDePolygone, texNombre } from '../../modules/outils.js'\nimport { point, polygone, nommePolygone, rotation, similitude, codageAngleDroit, afficheLongueurSegment, longueur, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Calculer une longueur avec le théorème de Pythagore'\nexport const amcType = 4 // Question numérique\nexport const amcReady = false // Il reste à gérer les options numériques\nexport const interactifReady = true\n\n/**\n * Exercices sur le théorème de Pythagore avec MathALEA2D\n * @Auteur Rémi Angot\n * 4G20\n */\nexport default function Pythagore2D () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactif = true\n  this.nbQuestions = 3\n  this.nbCols = 3\n  this.nbColsCorr = 1\n  this.typeExercice = 'Calculer'\n  this.video = 'M9sceJ8gzNc'\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions = []\n    const listeDeNomsDePolygones = []\n    if (this.sup === 1) {\n      this.consigne = \"Dans chaque cas, donner l'égalité de Pythagore.\"\n    } else if (this.sup === 2) {\n      this.consigne = \"Dans chaque cas, compléter l'égalité en utilisant le théorème de Pythagore.\"\n    } else {\n      this.consigne = 'Dans chaque cas, calculer la longueur manquante.'\n    }\n    if (this.sup === 2 || this.typeExercice === 'Calculer') {\n      listeTypeDeQuestions = combinaisonListes(['AB', 'BC', 'AC'], this.nbQuestions)\n    }\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = ''\n      texteCorr = ''\n      const A1 = point(0, 0)\n      const B1 = point(calcul(randint(22, 50) / 10), 0)\n      const C1 = similitude(B1, A1, 90, calcul(randint(22, 50) / 10) / longueur(A1, B1))\n      const p1 = polygone(A1, B1, C1)\n      p1.isVisible = false\n      const p2 = rotation(p1, A1, randint(0, 360))\n      const A = p2.listePoints[0]\n      const B = p2.listePoints[1]\n      const C = p2.listePoints[2]\n      const codage = codageAngleDroit(B, A, C)\n      const xmin = Math.min(A.x, B.x, C.x) - 1\n      const ymin = Math.min(A.y, B.y, C.y) - 1\n      const xmax = Math.max(A.x, B.x, C.x) + 1\n      const ymax = Math.max(A.y, B.y, C.y) + 1\n      const nomDuPolygone = creerNomDePolygone(3, listeDeNomsDePolygones)\n      listeDeNomsDePolygones.push(nomDuPolygone)\n      const nomme = nommePolygone(p2, nomDuPolygone)\n      const affAB = afficheLongueurSegment(B, A)\n      const affAC = afficheLongueurSegment(A, C)\n      const affBC = afficheLongueurSegment(C, B)\n      const longueurAB = longueur(A, B, 1)\n      const longueurAC = longueur(A, C, 1)\n      const longueurBC = longueur(B, C, 1)\n      const mesObjetsATracer = [codage, p2, nomme]\n\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'AB') {\n        mesObjetsATracer.push(affAC, affBC)\n      }\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'BC') {\n        mesObjetsATracer.push(affAC, affAB)\n      }\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'AC') {\n        mesObjetsATracer.push(affAB, affBC)\n      }\n\n      if (!context.isHtml) { texte = '~\\\\\\\\' }\n      texte += mathalea2d({ xmin: xmin, xmax: xmax, ymin: ymin, ymax: ymax, scale: 0.6, style: 'display: block' }, mesObjetsATracer)\n      if (this.sup === 2) {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          texte += `<br>$${A.nom + B.nom}^2=\\\\ldots$`\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          texte += `<br>$${B.nom + C.nom}^2=\\\\ldots$`\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          texte += `<br>$${A.nom + C.nom}^2=\\\\ldots$`\n        }\n      }\n      if (!context.isHtml && i !== this.nbQuestions - 1) { texte += '\\\\columnbreak' } // pour la sortie LaTeX sauf la dernière question\n\n      texteCorr = `Le triangle $${nomDuPolygone}$ est rectangle en $${A.nom}$ donc d'après le théorème de Pythagore, on a : `\n      texteCorr += `$${B.nom + C.nom}^2=${A.nom + B.nom}^2+${A.nom + C.nom}^2$`\n      if (this.sup === 2) {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          texteCorr += ` d'où $${A.nom + B.nom}^2=${B.nom + C.nom}^2-${A.nom + C.nom}^2$.`\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          texteCorr += '.'\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          texteCorr += ` d'où $${A.nom + C.nom}^2=${B.nom + C.nom}^2-${A.nom + B.nom}^2$.`\n        }\n      }\n      if (this.typeExercice === 'Calculer') {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          let AB\n          texteCorr += ` donc $${A.nom + B.nom}^2=${B.nom + C.nom}^2-${A.nom + C.nom}^2$`\n          texteCorr += `<br> $${A.nom + B.nom}^2=${texNombre(longueurBC)}^2-${texNombre(longueurAC)}^2=${texNombrec(longueurBC ** 2 - longueurAC ** 2)}$`\n          texteCorr += `<br> $${A.nom + B.nom}=\\\\sqrt{${texNombrec(longueurBC ** 2 - longueurAC ** 2)}}$`\n          if (calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1) === calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 5)) {\n            AB = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1))\n            texteCorr += `<br> $${A.nom + B.nom}=${AB}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${A.nom + B.nom} = $`, texteApres: 'cm' })\n          } else {\n            AB = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1))\n            texteCorr += `<br> $${A.nom + B.nom}\\\\approx${AB}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${A.nom + B.nom}\\\\approx$`, texteApres: 'cm' })\n          }\n          setReponse(this, i, AB)\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          const BC = texNombre(calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1))\n          texteCorr += `<br> $${B.nom + C.nom}^2=${texNombre(longueurAB)}^2+${texNombre(longueurAC)}^2=${texNombrec(longueurAB ** 2 + longueurAC ** 2)}$`\n          texteCorr += `<br> $${B.nom + C.nom}=\\\\sqrt{${texNombrec(longueurAB ** 2 + longueurAC ** 2)}}$`\n          if (calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1) === calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 5)) {\n            texteCorr += `<br> $${B.nom + C.nom}=${BC}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${B.nom + C.nom}=$`, texteApres: 'cm' })\n          } else {\n            texteCorr += `<br> $${B.nom + C.nom}\\\\approx${BC}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${B.nom + C.nom}\\\\approx$`, texteApres: 'cm' })\n          }\n          setReponse(this, i, BC)\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          const AC = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1))\n          texteCorr += ` donc $${A.nom + C.nom}^2=${B.nom + C.nom}^2-${A.nom + B.nom}^2$`\n          texteCorr += `<br> $${A.nom + C.nom}^2=${texNombre(longueurBC)}^2-${texNombre(longueurAB)}^2=${texNombrec(longueurBC ** 2 - longueurAB ** 2)}$`\n          texteCorr += `<br> $${A.nom + C.nom}=\\\\sqrt{${texNombrec(longueurBC ** 2 - longueurAB ** 2)}}$`\n          if (calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1) === calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 5)) {\n            texteCorr += `<br> $${A.nom + C.nom}=${AC}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${B.nom + C.nom}=$`, texteApres: 'cm' })\n          } else {\n            texteCorr += `<br> $${A.nom + C.nom}\\\\approx${AC}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${A.nom + C.nom}\\\\approx$`, texteApres: 'cm' })\n          }\n          setReponse(this, i, AC)\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3,\"1 : Donner l'égalité de Pythagore\\n2 : Compléter l'égalité de Pythagore\\n3 : Calculer une longueur manquante\"];\n}\n// 4G20-1\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}