{"version":3,"file":"js/24352.80208fc5dab41fb3c9ac.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3P10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, abs, calcul, texNombrec, texNombre, stringNombre, texPrix } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Variations en pourcentage'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n* Problèmes de variations en pourcentage\n*\n* * Situations variées : prix soldé ou augmenté, effectif d'un collège ou lycée, facture, population d'une ville\n*\n* * Calculer le résultat d'une évolution\n* * Exprimer l'évolution en pourcentage\n* * Retrouver la situation initiale\n* * Mélange des 3 types de problèmes\n* @author Rémi Angot\n* 3P10\n*/\nexport default function EvolutionsEnPourcentage () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = ''\n  this.nbQuestions = 4\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 4 // type de questions\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = ['finale']\n    }\n    if (this.sup === 2) {\n      typesDeQuestionsDisponibles = ['evolution']\n    }\n    if (this.sup === 3) {\n      typesDeQuestionsDisponibles = ['initiale']\n    }\n    if (this.sup === 4) {\n      typesDeQuestionsDisponibles = ['finale', 'evolution', 'initiale']\n    }\n    const situationsDisponibles = ['prix', 'etablissement', 'facture', 'population']\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const typesDeSituations = combinaisonListes(situationsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, depart, arrive, taux, coeff, reponse, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (typesDeSituations[i]) {\n        case 'prix':\n          depart = choice([calcul(randint(11, 99) / 10), randint(11, 99), randint(11, 99) * 10])\n          taux = choice([10, 20, 30, 40, 60])\n          taux *= choice([-1, 1])\n          coeff = texNombrec(1 + taux / 100)\n          arrive = calcul(depart * (1 + taux / 100))\n          switch (listeTypeDeQuestions[i]) {\n            case 'finale':\n              if (taux > 0) {\n                texte = `Un article coûtait $${texPrix(depart)}$ € et son prix a augmenté de $${taux}~\\\\%$. Calculer son nouveau prix.`\n                texteCorr = `Une augmentation de $${taux}~\\\\%$ revient à multiplier par $100~\\\\% + ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.`\n                texteCorr += `<br>$${texPrix(depart)}\\\\times ${coeff} = ${texPrix(arrive)}$`\n                texteCorr += `<br>Le nouveau prix de cet article est ${texPrix(arrive)} €.`\n                reponse = arrive\n              } else {\n                texte = `Un article coûtait $${texPrix(depart)}$ € et son prix est soldé à $${taux}~\\\\%$. Calculer son nouveau prix.`\n                texteCorr = `Une diminution de $${abs(taux)}~\\\\%$ revient à multiplier par $100~\\\\% ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.`\n                texteCorr += `<br>$${texPrix(depart)}\\\\times ${coeff} = ${texPrix(arrive)}$`\n                texteCorr += `<br>Le nouveau prix de cet article est ${texPrix(arrive)} €.`\n                reponse = arrive\n              }\n              break\n            case 'initiale':\n              if (taux > 0) {\n                texte = `Après une augmentation de $${taux}~\\\\%$ un article coûte maintenant $${texPrix(arrive)}$ €. Calculer son prix avant l'augmentation.`\n                texteCorr = `Une augmentation de $${taux}~\\\\%$ revient à multiplier par $100~\\\\% + ${taux}~\\\\%=${100 + taux}~\\\\% = ${coeff}$.<br>Pour retrouver le prix initial, on va donc diviser le prix final par ${coeff}.`\n                texteCorr += `<br>$${texPrix(arrive)}\\\\div ${coeff} = ${texPrix(depart)}$`\n                texteCorr += `<br>Avant l'augmentation cet article coûtait ${texPrix(depart)} €.`\n                reponse = depart\n              } else {\n                texte = `Soldé à $${taux}~\\\\%$ un article coûte maintenant $${texPrix(arrive)}$ €. Calculer son prix avant les soldes.`\n                texteCorr = `Une diminution de $${abs(taux)}~\\\\%$ revient à multiplier par $100~\\\\% ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.<br>Pour retrouver le prix initial, on va donc diviser le prix final par ${coeff}.`\n                texteCorr += `<br>$${texPrix(arrive)}\\\\div ${coeff} = ${texPrix(depart)}$`\n                texteCorr += `<br>Avant les soldes cet article coûtait ${texPrix(depart)} €.`\n                reponse = depart\n              }\n              break\n            case 'evolution':\n              if (taux > 0) {\n                texte = `Un article qui coûtait $${texPrix(depart)}$ € coûte maintenant $${texPrix(arrive)}$ €. Exprimer l'augmentation du prix en pourcentage.`\n                texteCorr = `$${texPrix(arrive)}\\\\div ${texPrix(depart)} = ${coeff} =  ${100 + taux}~\\\\% = 100~\\\\%+${taux}~\\\\%$`\n                texteCorr += `<br>Le prix a été multiplié par ${coeff}, il a donc augmenté de $${taux}~\\\\%$.`\n                reponse = taux\n              } else {\n                texte = `Un article qui coûtait $${texPrix(depart)}$ € coûte maintenant $${texPrix(arrive)}$ €. Exprimer la réduction du prix en pourcentage.`\n                texteCorr = `$${texPrix(arrive)}\\\\div ${texPrix(depart)} = ${coeff} =  ${100 + taux}~\\\\% = 100~\\\\%${taux}~\\\\%$`\n                texteCorr += `<br>Le prix a été multiplié par ${coeff}, il a donc diminué de $${abs(taux)}~\\\\%$.`\n                reponse = abs(taux)\n              }\n              break\n          }\n          break\n        case 'etablissement':\n          // Le nombre d'élève doit être entier\n          // Multiple de 50 et multiple de 2%\n          // Multiple de 20 et multiple de 5%\n          // Multiple de 100 et n%\n          switch (randint(1, 3)) {\n            case 1:\n              depart = 50 * randint(7, 24)\n              taux = 2 * randint(1, 5)\n              break\n            case 2:\n              depart = 20 * randint(17, 60)\n              taux = 5 * randint(1, 3)\n              break\n            case 3:\n              depart = 100 * randint(4, 12)\n              taux = randint(1, 11)\n              break\n          }\n          arrive = calcul(depart * (1 + taux / 100))\n          coeff = texNombrec(1 + taux / 100)\n          const date = new Date()\n          const cetteAnnee = date.getFullYear()\n          const anneeDerniere = cetteAnnee - 1\n          const etablissement = choice(['collège', 'lycée'])\n          switch (listeTypeDeQuestions[i]) {\n            case 'finale':\n              if (taux > 0) {\n                texte = `Un ${etablissement} avait $${texNombre(depart)}$ élèves en ${anneeDerniere}. Depuis, le nombre d'élèves a augmenté de $${taux}~\\\\%$. Calculer le nombre d'élèves dans ce ${etablissement} cette année.`\n                texteCorr = `Une augmentation de $${taux}~\\\\%$ revient à multiplier par $100~\\\\% + ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.`\n                texteCorr += `<br>$${texNombre(depart)}\\\\times ${coeff} = ${texNombre(arrive)}$`\n                texteCorr += `<br>Il y a maintenant ${stringNombre(arrive)} élèves dans ce ${etablissement}.`\n                reponse = arrive\n              } else {\n                texte = `Un ${etablissement} avait $${texNombre(depart)}$ élèves en ${anneeDerniere}. Depuis, le nombre d'élèves a diminué de $${abs(taux)}~\\\\%$. Calculer le nombre d'élèves dans ce ${etablissement} cette année.`\n                texteCorr = `Une diminution de $${abs(taux)}~\\\\%$ revient à multiplier par $100~\\\\% ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.`\n                texteCorr += `<br>$${texNombre(depart)}\\\\times ${coeff} = ${texNombre(arrive)}$`\n                texteCorr += `<br>Il y a maintenant ${stringNombre(arrive)} élèves dans ce ${etablissement}.`\n                reponse = arrive\n              }\n              break\n            case 'initiale':\n              if (taux > 0) {\n                texte = `Depuis ${anneeDerniere} le nombre d'élèves d'un ${etablissement} a augmenté de $${taux}~\\\\%$. Il y a maintenant $${texNombre(arrive)}$ élèves. Calculer le nombre d'élèves en ${anneeDerniere} dans cet établissement.`\n                texteCorr = `Une augmentation de $${taux}~\\\\%$ revient à multiplier par $100~\\\\% + ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.<br>Pour retrouver le nombre initial d'élèves, on va donc diviser le nombre actuel d'élèves par ${coeff}.`\n                texteCorr += `<br>$${texNombre(arrive)}\\\\div ${coeff} = ${texNombre(depart)}$`\n                texteCorr += `<br>En ${anneeDerniere}, il y avait ${stringNombre(depart)} élèves dans ce ${etablissement}.`\n                reponse = depart\n              } else {\n                texte = `Depuis ${anneeDerniere} le nombre d'élèves d'un ${etablissement} a diminué de $${taux}~\\\\%$. Il y a maintenant $${texNombre(arrive)}$ élèves. Calculer le nombre d'élèves en ${anneeDerniere} dans cet établissement.`\n                texteCorr = `Une diminution de $${abs(taux)}~\\\\%$ revient à multiplier par $100~\\\\% ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.<br>Pour retrouver le nombre initial d'élèves, on va donc diviser le nombre actuel d'élèves par ${coeff}.`\n                texteCorr += `<br>$${texNombre(arrive)}\\\\div ${coeff} = ${texNombre(depart)}$`\n                texteCorr += `<br>En ${anneeDerniere}, il y avait ${stringNombre(depart)} élèves dans ce ${etablissement}.`\n                reponse = depart\n              }\n              break\n            case 'evolution':\n              texte = `En ${anneeDerniere}, il y avait $${texNombre(depart)}$ élèves dans un ${etablissement}. En ${cetteAnnee}, ils sont $${texNombre(arrive)}$. Exprimer la variation du nombre d'élèves de cet établissement en pourcentage.`\n              if (taux > 0) {\n                texteCorr = `$${texNombre(arrive)}\\\\div ${texNombre(depart)} = ${coeff} =  ${100 + taux}~\\\\% = 100~\\\\%+${taux}~\\\\%$`\n                texteCorr += `<br>Le nombre d'élèves a été multiplié par ${coeff}, il a donc augmenté de $${taux}~\\\\%$.`\n                reponse = taux\n              } else {\n                texte = `Un article qui coûtait $${texNombre(depart)}$ € coûte maintenant $${texNombre(arrive)}$ €. Exprimer la réduction du prix en pourcentage.`\n                texteCorr = `$${texNombre(arrive)}\\\\div ${texPrix(depart)} = ${coeff} =  ${100 + taux}~\\\\% = 100~\\\\%${taux}~\\\\%$`\n                texteCorr += `<br>Le nombre d'élèves a été multiplié par ${coeff}, il a donc diminué de $${abs(taux)}~\\\\%$.`\n                reponse = abs(taux)\n              }\n              break\n          }\n          break\n        case 'facture':\n          depart = randint(700, 1400)\n          taux = randint(1, 12)\n          taux *= choice([-1, 1])\n          coeff = texNombrec(1 + taux / 100)\n          arrive = calcul(depart * (1 + taux / 100))\n          const facture = choice([\"ma facture annuelle d'électricité\", 'ma facture annuelle de gaz', \"ma taxe d'habitation\", 'mon ordinateur', 'mon vélo électrique'])\n          switch (listeTypeDeQuestions[i]) {\n            case 'finale':\n              if (taux > 0) {\n                texte = `Le prix de ${facture} était de $${texPrix(depart)}$ € l'année dernière et il a augmenté de $${taux}~\\\\%$. Calculer son nouveau prix.`\n                texteCorr = `Une augmentation de $${taux}~\\\\%$ revient à multiplier par $100~\\\\% + ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.`\n                texteCorr += `<br>$${texPrix(depart)}\\\\times ${coeff} = ${texPrix(arrive)}$`\n                texteCorr += `<br>Le prix de ${facture} est maintenant de ${texPrix(arrive)} €.`\n                reponse = arrive\n              } else {\n                texte = `Le prix de ${facture} était de $${texPrix(depart)}$ € l'année dernière et il a diminué de $${abs(taux)}~\\\\%$. Calculer son nouveau prix.`\n                texteCorr = `Une diminution de $${abs(taux)}~\\\\%$ revient à multiplier par $100~\\\\% ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.`\n                texteCorr += `<br>$${texPrix(depart)}\\\\times ${coeff} = ${texPrix(arrive)}$`\n                texteCorr += `<br>Le prix de ${facture} est maintenant de ${texPrix(arrive)} €.`\n                reponse = arrive\n              }\n              break\n            case 'initiale':\n              if (taux > 0) {\n                texte = `Après une augmentation de $${taux}~\\\\%$ le prix de ${facture} est maintenant $${texPrix(arrive)}$ €. Calculer son prix avant l'augmentation.`\n                texteCorr = `Une augmentation de $${taux}~\\\\%$ revient à multiplier par $100~\\\\% + ${taux}~\\\\%=${100 + taux}~\\\\% = ${coeff}$.<br>Pour retrouver le prix initial, on va donc diviser le prix final par ${coeff}.`\n                texteCorr += `<br>$${texPrix(arrive)}\\\\div ${coeff} = ${texPrix(depart)}$`\n                texteCorr += `<br>Avant l'augmentation le prix de ${facture} était de ${texPrix(depart)} €.`\n                reponse = depart\n              } else {\n                texte = `Après une diminution de $${abs(taux)}~\\\\%$ ${facture} coûte maintenant $${texPrix(arrive)}$ €. Calculer son prix avant les soldes.`\n                texteCorr = `Une diminution de $${abs(taux)}~\\\\%$ revient à multiplier par $100~\\\\% ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.<br>Pour retrouver le prix initial, on va donc diviser le prix final par ${coeff}.`\n                texteCorr += `<br>$${texPrix(arrive)}\\\\div ${coeff} = ${texPrix(depart)}$`\n                texteCorr += `<br>Avant la diminution le prix de ${facture} était de ${texPrix(depart)} €.`\n                reponse = depart\n              }\n              break\n            case 'evolution':\n              if (taux > 0) {\n                texte = `Le prix de ${facture} est passé de $${texPrix(depart)}$ € à $${texPrix(arrive)}$ €. Exprimer cette augmentation en pourcentage.`\n                texteCorr = `$${texPrix(arrive)}\\\\div ${texPrix(depart)} = ${coeff} =  ${100 + taux}~\\\\% = 100~\\\\%+${taux}~\\\\%$`\n                texteCorr += `<br>Le prix a été multiplié par ${coeff}, il a donc augmenté de $${taux}~\\\\%$.`\n                reponse = taux\n              } else {\n                texte = `Le prix de ${facture} est passé de $${texPrix(depart)}$ € à $${texPrix(arrive)}$ €. Exprimer cette diminution en pourcentage.`\n                texteCorr = `$${texPrix(arrive)}\\\\div ${texPrix(depart)} = ${coeff} =  ${100 + taux}~\\\\% = 100~\\\\%${taux}~\\\\%$`\n                texteCorr += `<br>Le prix a été multiplié par ${coeff}, il a donc diminué de $${abs(taux)}~\\\\%$.`\n                reponse = abs(taux)\n              }\n              break\n          }\n          break\n        case 'population':\n          depart = choice([randint(11, 99) * 1000, randint(11, 99) * 10000])\n          taux = randint(5, 35)\n          taux *= choice([-1, 1])\n          coeff = texNombrec(1 + taux / 100)\n          arrive = calcul(depart * (1 + taux / 100))\n          const nb = randint(5, 15)\n          switch (listeTypeDeQuestions[i]) {\n            case 'finale':\n              if (taux > 0) {\n                texte = `Il y a ${nb} ans, la population d'une ville était de $${texNombre(depart)}$ habitants. Depuis, elle a augmenté de $${taux}~\\\\%$. Calculer le nombre d'habitants actuel de cette ville.`\n                texteCorr = `Une augmentation de $${taux}~\\\\%$ revient à multiplier par $100~\\\\% + ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.`\n                texteCorr += `<br>$${texNombre(depart)}\\\\times ${coeff} = ${texNombre(arrive)}$`\n                texteCorr += `<br>La population de cette ville est maintenant de $${texNombre(arrive)}$ habitants.`\n              } else {\n                texte = `Il y a ${nb} ans, la population d'une ville était de $${texNombre(depart)}$ habitants. Depuis, elle a diminué de $${abs(taux)}~\\\\%$. Calculer le nombre d'habitants actuel de cette ville.`\n                texteCorr = `Une diminution de $${abs(taux)}~\\\\%$ revient à multiplier par $100~\\\\% ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.`\n                texteCorr += `<br>$${texNombre(depart)}\\\\times ${coeff} = ${texNombre(arrive)}$`\n                texteCorr += `<br>La population de cette ville est maintenant de $${texNombre(arrive)}$ habitants.`\n              }\n              reponse = arrive\n              break\n            case 'initiale':\n              if (taux > 0) {\n                texte = `En ${nb} ans, la population d'une ville a augmenté de $${taux}~\\\\%$ et est maintenant $${texNombre(arrive)}$ habitants. Calculer sa population d'il y a ${nb} ans.`\n                texteCorr = `Une augmentation de $${taux}~\\\\%$ revient à multiplier par $100~\\\\% + ${taux}~\\\\%=${100 + taux}~\\\\% = ${coeff}$.<br>Pour retrouver la population initiale, on va donc diviser le nombre d'habitants actuel par ${coeff}.`\n                texteCorr += `<br>$${texNombre(arrive)}\\\\div ${coeff} = ${texNombre(depart)}$`\n                texteCorr += `<br>Il y a ${nb} ans cette ville comptait $${texNombre(depart)}$ habitants.`\n              } else {\n                texte = `En ${nb} ans, la population d'une ville a diminué de $${abs(taux)}~\\\\%$ et est maintenant $${texNombre(arrive)}$ habitants. Calculer sa population d'il y a ${nb} ans.`\n                texteCorr = `Une diminution de $${abs(taux)}~\\\\%$ revient à multiplier par $100~\\\\% ${taux}~\\\\% = ${100 + taux}~\\\\% = ${coeff}$.<br>Pour retrouver la population initiale, on va donc diviser le nombre d'habitants actuel par ${coeff}.`\n                texteCorr += `<br>$${texNombre(arrive)}\\\\div ${coeff} = ${texNombre(depart)}$`\n                texteCorr += `<br>Il y a ${nb} ans cette ville comptait $${texNombre(depart)}$ habitants.`\n              }\n              reponse = depart\n              break\n            case 'evolution':\n              if (taux > 0) {\n                texte = `En ${nb} ans, la population d'une ville est passé de $${texNombre(depart)}$ habitants à $${texNombre(arrive)}$. Exprimer cette augmentation en pourcentage.`\n                texteCorr = `$${texNombre(arrive)}\\\\div ${texNombre(depart)} = ${coeff} =  ${100 + taux}~\\\\% = 100~\\\\%+${taux}~\\\\%$`\n                texteCorr += `<br>La population a été multipliée par ${coeff} elle a donc augmenté de $${abs(taux)}~\\\\%$.`\n              } else {\n                texte = `En ${nb} ans, la population d'une ville est passé de $${texNombre(depart)}$ habitants à $${texNombre(arrive)}$. Exprimer cette diminution en pourcentage.`\n                texteCorr = `$${texNombre(arrive)}\\\\div ${texNombre(depart)} = ${coeff} =  ${100 + taux}~\\\\% = 100~\\\\%${taux}~\\\\%$`\n                texteCorr += `<br>La population a été multipliée par ${coeff} elle a donc diminué de $${abs(taux)}~\\\\%$.`\n              }\n              reponse = abs(taux)\n              break\n          }\n          break\n      }\n      setReponse(this, i, reponse)\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, '1 : Déterminer le résultat après une variation en pourcentage\\n2 : Exprimer une variation en pourcentage\\n3 : Calculer la valeur initiale en connaissant la variation et la situation finale\\n4 : Mélange des 3 types de problèmes']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","EvolutionsEnPourcentage","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","parseInt","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","typesDeSituations","texte","texteCorr","depart","arrive","taux","coeff","reponse","i","cpt","choice","calcul","randint","texNombrec","texPrix","abs","cetteAnnee","Date","getFullYear","anneeDerniere","etablissement","texNombre","stringNombre","facture","nb","setReponse","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}