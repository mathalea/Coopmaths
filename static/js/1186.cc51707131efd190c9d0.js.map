{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6P11-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","ProportionnaliteParLineariteTableau","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","typeDeQuestionsDisponibles","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","np","cm","ng","o","pp","pg","pu","tp","texte","texteCorr","monTableau","i","cpt","randint","choice","objet","prenom","texPrix","tableau","largeurTitre","ligne1","ligne2","miseEnEvidence","flecheHaut","mathalea2d","xmin","xmax","ymin","ymax","style","texNombre","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1186.cc51707131efd190c9d0.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, choice, objet, randint, prenom, texPrix, texNombre, miseEnEvidence } from '../../modules/outils.js'\nimport { mathalea2d, tableau } from '../../modules/2d.js'\nexport const titre = 'Résoudre des problèmes de proportionnalité linétaire dans un tableau'\n\n/**\n * Résoudre un problème de proportionnalité avec linéarité via tableau\n * @Mireille Gain, 30 ami 2021\n * Référence 6P11-2\n*/export default function ProportionnaliteParLineariteTableau () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'On considère que les situations suivantes, sauf cas flagrant, sont des situations de proportionnalité. <br>On demande de les résoudre sous forme d\\'un tableau.'\n  this.nbQuestions = 5\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 4 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typeDeQuestionsDisponibles\n    if (this.sup === 1) {\n      typeDeQuestionsDisponibles = [1, 1, 1, 1, 4]\n    } else if (this.sup === 2) {\n      typeDeQuestionsDisponibles = [2, 2, 2, 2, 4]\n    } else if (this.sup === 3) {\n      typeDeQuestionsDisponibles = [3, 3, 3, 3, 4]\n    } else if (this.sup === 4) {\n      typeDeQuestionsDisponibles = [1, 2, 3, 4]\n    }\n\n    const listeTypeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    let np, cm, ng, o, pp, pg, pu, tp\n    for (let i = 0, texte, texteCorr, monTableau, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 1: // multiplication\n          np = randint(1, 10)\n          cm = randint(2, 7)\n          ng = np * cm\n          pp = randint(2, 99) / 10\n          pg = cm * pp\n          o = choice([objet()])\n          texte = `${prenom()} achète ${np} ${o} pour ${texPrix(pp)} €. Combien faudrait-il payer pour en acheter ${ng} ? `\n          monTableau = tableau({\n            largeurTitre: 8,\n            ligne1: [`\\\\text{Nombre de ${o}}`, np, ng],\n            ligne2: ['\\\\text{Prix (en euros)}', `${texPrix(pp)}`, `${miseEnEvidence(texPrix(pg))}`],\n            flecheHaut: [[1, 2, `${miseEnEvidence('\\\\times ' + cm)}`]]\n          })\n          texteCorr = mathalea2d({ xmin: -1, xmax: 17, ymin: -2, ymax: 6.5, style: 'display: block' }, monTableau)\n          break\n        case 2: // division\n          np = randint(1, 10)\n          cm = randint(2, 7)\n          ng = np * cm\n          pp = randint(2, 99) / 10\n          pg = cm * pp\n          o = choice([objet()])\n          texte = `${prenom()} achète ${ng} ${o} pour ${texPrix(pg)} €. Combien faudrait-il payer pour en acheter ${np} ? `\n          monTableau = tableau({\n            largeurTitre: 8,\n            ligne1: [`\\\\text{Nombre de ${o}}`, np, ng],\n            ligne2: ['\\\\text{Prix (en euros)}', `${texPrix(pg)}`, `${miseEnEvidence(texPrix(pp))}`],\n            flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + cm)}`]]\n          })\n          texteCorr = mathalea2d({ xmin: -1, xmax: 17, ymin: -2, ymax: 6.5, style: 'display: block' }, monTableau)\n          break\n        case 3: // passage par l'unité\n          pu = (1, 19) / 10\n          np = randint(2, 10)\n          pp = pu * np\n          ng = randint(2, 10, np)\n          pg = pu * ng\n          o = choice([objet()])\n          texte = `${prenom()} achète ${np} ${o} pour ${texPrix(pp)} €. Combien faudrait-il payer pour en acheter ${ng} ? `\n          monTableau = tableau({\n            largeurTitre: 8,\n            ligne1: [`\\\\text{Nombre de ${o}}`, np, 1, ng],\n            ligne2: ['\\\\text{Prix (en euros)}', `${texPrix(pp)}`, `${miseEnEvidence(texPrix(pu))}`, `${miseEnEvidence(texPrix(pp))}`],\n            flecheHaut: [[1, 2, `\\\\div ${miseEnEvidence(np)}`], [2, 3, `${miseEnEvidence('\\\\times' + ng)}`]]\n          })\n          texteCorr = mathalea2d({ xmin: -1, xmax: 17, ymin: -2, ymax: 6.5, style: 'display: block' }, monTableau)\n          break\n        case 4: // Non proportionnalité\n          tp = randint(120, 165) / 100\n          np = randint(10, 14)\n          cm = randint(2, 5)\n          ng = np * cm\n          texte = `${prenom()} mesure ${texNombre(tp)} m à ${np} ans. Quelle sera sa taille à ${ng} ans ?`\n          texteCorr = 'On ne peut pas savoir car la taille n\\'est pas proportionnelle à l\\'âge.'\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, '1 : Multiplication\\n2 : Division\\n3 : Passage par l\\'unité\\n4 : Mélange des trois']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}