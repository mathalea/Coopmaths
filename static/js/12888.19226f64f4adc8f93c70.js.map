{"version":3,"file":"js/12888.19226f64f4adc8f93c70.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5M10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import { mathalea2d, pointAdistance, polygoneAvecNom, point, parallelogramme2points1hauteur, afficheLongueurSegment, projectionOrtho , milieu, droite, segment, codageAngleDroit} from '../../modules/2d.js';\nimport { creerNomDePolygone } from '../../modules/outils.js';\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenuSansNumero,randint,choice,texteEnCouleurEtGras} from '../../modules/outils.js'\n\n\nexport const titre = 'Aire du parallélogramme'\n\n/**\n* Deux parallélogrammes sont tracés, on connait les 2 côté et une hauteur.\n*\n* Il faut calculer leurs aires.\n*\n* Pas de version LaTeX\n* @author Rémi Angot\n* 5M10\n*/\nexport default function Aire_du_parallelogramme() {\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.consigne = \"Calculer l'aire des 3 parallélogrammes suivants (les longueurs sont données en cm).\";\n\tthis.spacing = 2;\n\tthis.spacingCorr = 2;\n\tthis.nbQuestions = 1;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n  \n\tthis.nbQuestionsModifiable = false;\n\tlet cadre = function (p,params){\n\t\tlet xmin=0,xmax=0,ymin=0,ymax=0\n\t\tfor (let i=0;i<4;i++){\n\t\t\txmin=Math.min(xmin,p[0].listePoints[i].x-1)\n\t\t\tymin=Math.min(ymin,p[0].listePoints[i].y-1)\n\t\t\txmax=Math.max(xmax,p[0].listePoints[i].x+1)\n\t\t\tymax=Math.max(ymax,p[0].listePoints[i].y+1)\n\t\t}\n\t\tparams.xmin=xmin\n\t\tparams.xmax=xmax\n\t\tparams.ymin=ymin\n\t\tparams.ymax=ymax\n\t\treturn params\n\t}\n\n\tthis.nouvelleVersion = function (numeroExercice) {\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tthis.listeQuestions=[]\n\t\tlet texte='',params\n        let nom=creerNomDePolygone(12,'Q')\n\t\tlet objetsEnonce=[]\n\t\tlet c1 = randint(3, 7);\n\t\tlet h1 = randint(2, 4);\n\t\tlet c2 = randint(3, 7);\n\t\tlet h2 = randint(2, 7);\n\t\tlet c3 = randint(3, 10);\n\t\tlet h3 = randint(2, 4);\n        let A1,A2,A3,B1,B2,B3,P1,P2,P3,H1,H2,H3,I1,I2,I3,s1,s2,s3,C1,C2,C3\n        A1 = point(0,0,nom[0])\n        B1 = pointAdistance(A1,c1,randint(-20,20),nom[1])\n\t      P1=parallelogramme2points1hauteur(nom.slice(0,4),A1,B1,h1)\n\t\t  C1=P1[0].listePoints[2]\n\t\t  I1=milieu(A1,B1)\n\t\t  H1=projectionOrtho(I1,droite(P1[0].listePoints[3],P1[0].listePoints[2]))\n\t\t  s1=segment(I1,H1)\n\t\t  s1.pointilles=2\n\t\t   A2 = point (0,0)\n        B2=pointAdistance(A2,c2,randint(-20,20),nom[5])\n        P2=parallelogramme2points1hauteur(nom.slice(4,8),A2,B2,h2)\n\t\tC2=P2[0].listePoints[2]\n\t\tI2=milieu(A2,B2)\n\t\tH2=projectionOrtho(I2,droite(P2[0].listePoints[3],P2[0].listePoints[2]))\n\t\ts2=segment(I2,H2)\n\t\ts2.pointilles=2\n\t\tA3 = point (0,0)\n        B3 = pointAdistance(A3,c3,randint(-20,20),nom[9])\n        P3=parallelogramme2points1hauteur(nom.slice(8,12),A3,B3,h3)\n\t\tC3=P3[0].listePoints[2]\n\t\tI3=milieu(A3,B3)\n\t\tH3=projectionOrtho(I3,droite(P3[0].listePoints[3],P3[0].listePoints[2]))\n\t\ts3=segment(I3,H3)\n\t\ts3.pointilles=2\n\t    params={xmin:0,xmax:0,ymin:0,ymax:0,pixelsParCm:20,scale:0.5,mainlevee:false}\n\t\tparams=cadre(P1,params)\n\t\ttexte+=\tmathalea2d(params,P1[0],P1[1],afficheLongueurSegment(B1,A1),afficheLongueurSegment(C1,B1),afficheLongueurSegment(I1,H1),s1,codageAngleDroit(A1,I1,H1),codageAngleDroit(C1,H1,I1))\n\t\tparams={xmin:0,xmax:0,ymin:0,ymax:0,pixelsParCm:20,scale:0.5,mainlevee:false}\n\t\tparams=cadre(P2,params)\n\t\ttexte+=\tmathalea2d(params,P2[0],P2[1],afficheLongueurSegment(B2,A2),afficheLongueurSegment(C2,B2),afficheLongueurSegment(I2,H2),s2,codageAngleDroit(A2,I2,H2),codageAngleDroit(C2,H2,I2))\n\t\tparams={xmin:0,xmax:0,ymin:0,ymax:0,pixelsParCm:20,scale:0.5,mainlevee:false}\n\t\tparams=cadre(P3,params)\n\t\ttexte+='br'+mathalea2d(params,P3[0],P3[1],afficheLongueurSegment(B3,A3),afficheLongueurSegment(C3,B3),afficheLongueurSegment(I3,H3),s3,codageAngleDroit(A3,I3,H3),codageAngleDroit(C3,H3,I3))\n\t\t\n\t\t\n\t\tlet texteCorr = `Dans chaque parallélogramme, le segment en pointillés est ${texteEnCouleurEtGras(\"perpendiculaire\")} à deux côtés opposés, c'est donc une ${texteEnCouleurEtGras(\"hauteur\")}.<br>`;\n\t\ttexteCorr += `Pour obtenir l'aire, il faut multiplier cette ${texteEnCouleurEtGras(\"hauteur\")} par la longueur de la ${texteEnCouleurEtGras(\"base\")} correspondante.`;\n\t\ttexteCorr += \"<br><br>\";\n\t\ttexteCorr += `$\\\\mathcal{A}_{${nom.slice(0,4)}}=${c1}~\\\\text{cm}\\\\times  ${h1}~\\\\text{cm}=${c1 * h1}~\\\\text{cm}^2$`;\n\t\ttexteCorr += `<br>$\\\\mathcal{A}_{${nom.slice(4,8)}}=${c2}~\\\\text{cm}\\\\times  ${h2}~\\\\text{cm}=${c2 * h2}~\\\\text{cm}^2$`;\n\t\ttexteCorr += `<br>$\\\\mathcal{A}_{${nom.slice(8,12)}}=${c3}~\\\\text{cm}\\\\times  ${h3}~\\\\text{cm}=${c3 * h3}~\\\\text{cm}^2$`;\n\n        this.listeQuestions.push(texte)\n\t\tthis.listeCorrections.push(texteCorr);\n\t\tlisteQuestionsToContenuSansNumero(this);\n\t};\n\n\t// \tthis.besoinFormulaireNumerique = ['Niveau de difficulté',3,\"1 : Périmètres\\n\\\n\t// 2 : Aires\\n3 : Périmètres et aires\"];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Aire_du_parallelogramme","Exercice","this","consigne","spacing","spacingCorr","nbQuestions","nbCols","nbColsCorr","nbQuestionsModifiable","cadre","p","params","xmin","xmax","ymin","ymax","i","Math","min","listePoints","x","y","max","nouvelleVersion","numeroExercice","listeCorrections","listeQuestions","A1","A2","A3","B1","B2","B3","P1","P2","P3","H1","H2","H3","I1","I2","I3","s1","s2","s3","C1","C2","C3","texte","nom","creerNomDePolygone","c1","randint","h1","c2","h2","c3","h3","point","pointAdistance","parallelogramme2points1hauteur","slice","milieu","projectionOrtho","droite","segment","pointilles","pixelsParCm","scale","mainlevee","mathalea2d","afficheLongueurSegment","codageAngleDroit","texteCorr","texteEnCouleurEtGras","push","listeQuestionsToContenuSansNumero","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}