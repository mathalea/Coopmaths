{"version":3,"file":"js/52686.801a5409657bbf2c2a95.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G21.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, listeQuestionsToContenuSansNumero, randint, arrondi, abs, texNombrec, lettreDepuisChiffre, texNombre, miseEnEvidence, texFraction } from '../../modules/outils.js'\n\nexport const amcReady = true\nexport const amcType = 'AMCHybride' // type de question AMC\n\nexport const titre = 'Contrôler si deux droites sont parallèles'\n\n/**\n * Reciproque_Thales\n * @author Jean-Claude Lhote\n * 3G21\n */\nexport default function ReciproqueThales () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  context.isHtml ? (this.spacingCorr = 3.5) : (this.spacingCorr = 1)\n  context.isHtml ? (this.spacing = 2) : (this.spacing = 1.5)\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.quatrieme = false\n  this.sup = 1\n  this.sup2 = 1\n  this.listePackages = 'tkz-euclide'\n  this.typeExercice = 'MG32'\n  this.amcReady = amcReady\n  this.amcType = amcType\n\n  // let s1='A',s2='B',s3='C',s4='M',s5='N'\n  // coefficient de l'homothétie compris entre -0,8 et -0,2 ou entre 0,2 et 0,8 pour éviter les constructions trop serrées\n  this.nouvelleVersion = function (numeroExercice) {\n    this.autoCorrections = []\n    this.listeQuestions = []\n    this.listeCorrections = []\n    const lettre1 = randint(1, 26) // aleatoirisation du nom des points\n    const s1 = lettreDepuisChiffre(lettre1)\n    const lettre2 = randint(1, 26, [lettre1])\n    const s2 = lettreDepuisChiffre(lettre2)\n    const lettre3 = randint(1, 26, [lettre1, lettre2])\n    const s3 = lettreDepuisChiffre(lettre3)\n    const lettre4 = randint(1, 26, [lettre1, lettre2, lettre3])\n    const s4 = lettreDepuisChiffre(lettre4)\n    const lettre5 = randint(1, 26, [lettre1, lettre2, lettre3, lettre4])\n    const s5 = lettreDepuisChiffre(lettre5)\n    let x2 = randint(2, 4)\n    let y2 = randint(3, 5)\n    let x3 = randint(5, 6)\n    let y3 = randint(-2, 1)\n    let k = (randint(2, 8) * randint(-1, 1, [0])) / 10\n    let k2\n    if (parseInt(this.sup2) === 1) { k2 = k } else if (parseInt(this.sup2) === 3) { k2 = k * (1 + randint(0, 1) * 0.1) } else { k2 = k * (1 + randint(-1, 1, 0) * 0.1) }\n\n    if (this.quatrieme) {\n      k = abs(k)\n      k2 = abs(k2)\n    }\n    let dist24\n    let dist12 = Math.round(Math.sqrt(x2 * x2 + y2 * y2))\n    let dist13 = Math.round(Math.sqrt(x3 * x3 + y3 * y3))\n    while (dist12 === dist13) {\n      // éviter les triangles isocèles imbriqués qui ne nécéssitent aucun calculs.\n      x2 = randint(2, 4)\n      y2 = randint(3, 5)\n      x3 = randint(5, 6)\n      y3 = randint(-2, 1)\n      dist12 = Math.round(Math.sqrt(x2 * x2 + y2 * y2))\n      dist13 = Math.round(Math.sqrt(x3 * x3 + y3 * y3))\n    }\n    const dist15 = arrondi(dist13 * abs(k), 1)\n    const dist14 = arrondi(dist12 * abs(k2), 1)\n    let dist35\n\n    if (k < 0) {\n      dist35 = dist13 + dist15\n      dist24 = dist12 + dist14\n    } else {\n      dist35 = dist13 - dist15\n      dist24 = dist12 - dist14\n    }\n\n    let texte, texteCorr\n    // On ne garde qu'une approximation au dixième pour l'exercice\n    // mise en texte avec 1 chiffres après la virgule pour énoncé\n    const s13 = texNombre(dist13)\n    const s12 = texNombre(dist12)\n    const s15 = texNombre(dist15)\n    const s14 = texNombre(dist14)\n    const s24 = texNombre(dist24)\n    const s35 = texNombre(dist35)\n    // num1 = arrondi(dist12 * 100);\n    // den1 = arrondi(dist14 * 100);\n    // num2 = arrondi(dist13 * 100);\n    // den2 = arrondi(dist15 * 100);\n    // let fraction1 = [],\n    //   fraction2 = [];\n    //  fraction1 = fractionSimplifiee(num1, den1);\n    // fraction2 = fractionSimplifiee(num2, den2);\n    if (context.isHtml) {\n      this.typeExercice = 'MG32'\n      this.dimensionsDivMg32 = [700, 500]\n      let codeBase64\n\n      if (k < 0) {\n        codeBase64 =\n          'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAYfAAADsgAAAQEAAAAAAAAAAQAAACX#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAJBJwBANgAAAAAAAEAzAAAAAAAABwABQHYBR64UeuFAcdwo9cKPXP####8AAAABABRDRHJvaXRlRGlyZWN0aW9uRml4ZQD#####AQAAAAAQAAABAAEAAAABAT#wAAAAAAAA#####wAAAAEAD0NQb2ludExpZURyb2l0ZQD#####AQAAAAAQAAJJJwDAGAAAAAAAAAAAAAAAAAAABQABQEerQ5WBBiUAAAAC#####wAAAAEACUNEcm9pdGVBQgD#####AQAAAAASAAABAAEAAAABAAAAA#####8AAAABABZDRHJvaXRlUGVycGVuZGljdWxhaXJlAP####8BAAAAABAAAAEAAQAAAAEAAAAE#####wAAAAEACUNDZXJjbGVPQQD#####AQAAAAABAAAAAQAAAAP#####AAAAAQAQQ0ludERyb2l0ZUNlcmNsZQD#####AAAABQAAAAb#####AAAAAQAQQ1BvaW50TGllQmlwb2ludAD#####AQAAAAAQAAABBQABAAAABwAAAAkA#####wEAAAAAEAACSicAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAASAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MgABMgAAAAFAAAAAAAAAAAAAABEA#####wACeTIAATUAAAABQBQAAAAAAAAAAAARAP####8AAngzAAE2AAAAAUAYAAAAAAAAAAAAEQD#####AAJ5MwACLTH#####AAAAAQAMQ01vaW5zVW5haXJlAAAAAT#wAAAAAAAAAAAAEQD#####AAFrAAQtMC41AAAAEgAAAAE#4AAAAAAAAP####8AAAABABBDUG9pbnREYW5zUmVwZXJlAP####8BAAAAABgAAlonAAAAAAAAAAAAQAgAAAAAAAAHAAAAAAoAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAATAP####8AAAAAABgAAkInAMAwAAAAAAAAwEOAAAAAAAAHAAAAAAoAAAAOAAAADwAAAA4AAAAQAAAAEwD#####AAAAAAAYAAJDJwAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAADgAAABEAAAAOAAAAEgAAAAwA#####wAAABQAAAAOAAAAEwAAAA8A#####wAAAAAAGAACTScAwCQAAAAAAADAAAAAAAAAAAcAAAAAFQAAABcAAAAPAP####8AAAAAABgAAk4nAMAzAAAAAAAAwEMAAAAAAAAHAAAAABYAAAAX#####wAAAAEACUNQb2x5Z29uZQD#####AAAAAAACAAAABAAAABYAAAAVAAAAFAAAABYAAAAUAP####8AAAAAAAIAAAAEAAAAGQAAABQAAAAYAAAAGf####8AAAABABBDU3VyZmFjZVBvbHlnb25lAP####8BAAD#AAAABQAAABsAAAAVAP####8B#wAAAAAABQAAABr#####AAAAAQAQQ01hY3JvQXBwYXJpdGlvbgD#####AP8AAAH#####EECIoKPXCj1xQELhR64UeuECAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAZBcHBBTU4AAAAAAAEAAAAcAAAAABYA#####wD#AAAB#####xBAiLCj1wo9cUBUMKPXCj1wAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAGQXBwQUJDAAAAAAABAAAAHQD#####AAAAAQARQ01hY3JvRGlzcGFyaXRpb24A#####wD#AAAB#####xBAi+Cj1wo9cUBE4UeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAHTWFzcUFNTgAAAAAAAQAAABwAAAAXAP####8A#wAAAf####8QQIvoo9cKPXFAVPCj1wo9cAIAAAAAAAAAAAAAAAABAAAAAAAAAAAAB01hc3FBQkMAAAAAAAEAAAAd#####wAAAAEAC0NNYWNyb1BhdXNlAP####8A#wAAAf####8QQIj4o9cKPXFAX3Cj1wo9cAIAAAAAAAAAAAAAAAABAAAAAAAAAAAABVBhdXNlAAAAAAAB#####wAAAAEAEUNNYWNyb1N1aXRlTWFjcm9zAP####8A#wAAAf####8QQFHFHrhR64VAePwo9cKPXAIAAAAAAAAAAAAAAAABAAAAAAAAAAAAClRyaWFuZ2xlIDEAAAAAAAMAAAAfAAAAIgAAACEAAAAZAP####8A#wAAAf####8QQFFFHrhR64VAe3wo9cKPXAIAAAAAAAAAAAAAAAABAAAAAAAAAAAAClRyaWFuZ2xlIDIAAAAAAAMAAAAeAAAAIgAAACAAAAAO##########8='\n      } else {\n        codeBase64 =\n          'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAYfAAADsgAAAQEAAAAAAAAAAQAAACX#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAJBJwDAKAAAAAAAAEAiAAAAAAAABwABQHMxR64UeuFAcbwo9cKPXP####8AAAABABRDRHJvaXRlRGlyZWN0aW9uRml4ZQD#####AQAAAAAOAAABAAEAAAABAT#wAAAAAAAA#####wAAAAEAD0NQb2ludExpZURyb2l0ZQD#####AQAAAAAQAAJJJwDAGAAAAAAAAAAAAAAAAAAABQABQEerQ5WBBiUAAAAC#####wAAAAEACUNEcm9pdGVBQgD#####AQAAAAASAAABAAEAAAABAAAAA#####8AAAABABZDRHJvaXRlUGVycGVuZGljdWxhaXJlAP####8BAAAAAA4AAAEAAQAAAAEAAAAE#####wAAAAEACUNDZXJjbGVPQQD#####AQAAAAABAAAAAQAAAAP#####AAAAAQAQQ0ludERyb2l0ZUNlcmNsZQD#####AAAABQAAAAb#####AAAAAQAQQ1BvaW50TGllQmlwb2ludAD#####AQAAAAAOAAABBQABAAAABwAAAAkA#####wEAAAAAEAACSicAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAASAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MgABMgAAAAFAAAAAAAAAAAAAABEA#####wACeTIAATUAAAABQBQAAAAAAAAAAAARAP####8AAngzAAE2AAAAAUAYAAAAAAAAAAAAEQD#####AAJ5MwACLTH#####AAAAAQAMQ01vaW5zVW5haXJlAAAAAT#wAAAAAAAAAAAAEQD#####AAFrAAMwLjUAAAABP+AAAAAAAAD#####AAAAAQAQQ1BvaW50RGFuc1JlcGVyZQD#####AQAAAAAYAAJaJwAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAEwD#####AAAAAAAYAAJCJwDAMAAAAAAAAMBDgAAAAAAABwAAAAAKAAAADgAAAA8AAAAOAAAAEAAAABMA#####wAAAAAAGAACQycAAAAAAAAAAABACAAAAAAAAAcAAAAACgAAAA4AAAARAAAADgAAABIAAAAMAP####8AAAAUAAAADgAAABMAAAAPAP####8AAAAAABgAAk0nAMA7AAAAAAAAwDcAAAAAAAAHAAAAABUAAAAXAAAADwD#####AAAAAAAYAAJOJwDAKAAAAAAAAEAAAAAAAAAABwAAAAAWAAAAF#####8AAAABAAlDUG9seWdvbmUA#####wAAAAAAAgAAAAQAAAAWAAAAFQAAABQAAAAWAAAAFAD#####AAAAAAACAAAABAAAABkAAAAUAAAAGAAAABn#####AAAAAQAQQ1N1cmZhY2VQb2x5Z29uZQD#####AQAA#wAAAAUAAAAbAAAAFQD#####Af8AAAAAAAUAAAAa#####wAAAAEAEENNYWNyb0FwcGFyaXRpb24A#####wD#AAAB#####xBAiKCj1wo9cUBC4UeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAGQXBwQU1OAAAAAAABAAAAHAAAAAAWAP####8A#wAAAf####8QQIiwo9cKPXFAVDCj1wo9cAIAAAAAAAAAAAAAAAABAAAAAAAAAAAABkFwcEFCQwAAAAAAAQAAAB0A#####wAAAAEAEUNNYWNyb0Rpc3Bhcml0aW9uAP####8A#wAAAf####8QQIvgo9cKPXFAROFHrhR64QIAAAAAAAAAAAAAAAABAAAAAAAAAAAAB01hc3FBTU4AAAAAAAEAAAAcAAAAFwD#####AP8AAAH#####EECL6KPXCj1xQFTwo9cKPXACAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAdNYXNxQUJDAAAAAAABAAAAHf####8AAAABAAtDTWFjcm9QYXVzZQD#####AP8AAAH#####EECI+KPXCj1xQF9wo9cKPXACAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAVQYXVzZQAAAAAAAf####8AAAABABFDTWFjcm9TdWl0ZU1hY3JvcwD#####AP8AAAH#####EEBRxR64UeuFQHj8KPXCj1wCAAAAAAAAAAAAAAAAAQAAAAAAAAAAAApUcmlhbmdsZSAxAAAAAAADAAAAHwAAACIAAAAhAAAAGQD#####AP8AAAH#####EEBRRR64UeuFQHt8KPXCj1wCAAAAAAAAAAAAAAAAAQAAAAAAAAAAAApUcmlhbmdsZSAyAAAAAAADAAAAHgAAACIAAAAgAAAADv##########'\n      }\n\n      if (parseInt(this.sup) === 1) {\n        // AM,AB,AN,AC sont donnés pas de calculs intermédiaires\n        texte = `Dans la figure ci-dessous, $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s5}=${s15}$ cm et $${s1 + s4}=${s14}$ cm.<br>`\n        texteCorr = ''\n      } else if (parseInt(this.sup) === 2) {\n        // AN n'est pas donné, il faut le calculer avant.\n        texte = `Dans la figure ci-dessous, $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s3 + s5}=${s35}$ cm et $${s2 + s4}=${s24}$ cm.<br>`\n        texteCorr = ''\n        if (k > 0) {\n          // triangles imbriqués\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s1 + s3}-${s3 + s5}=${s13}-${s35}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'et que ' +\n            `$${s1 + s4}=${s1 + s2}-${s2 + s4}=${s12}-${s24}=${s14}$` +\n            ' cm.<br>'\n        } else {\n          // papillon\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s3 + s5}-${s1 + s3}=${s35}-${s13}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'et que ' +\n            `$${s1 + s4}=${s2 + s4}-${s1 + s2}=${s24}-${s12}=${s14}$` +\n            ' cm.<br>'\n        }\n      } else if (randint(1, 2) === 1) {\n        // triangles imbriqués sans figure\n        texte = `$${s1}$, $${s2}$ et $${s3}$ sont trois point distincts. $${s4} \\\\in [${s1 + s2}]$ et $${s5} \\\\in [${s1 + s3}]$ <br> $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.`\n        texteCorr = ''\n      } else {\n        // papillon sans figure\n        texte = `Les points $${s2}$, $${s1}$, $${s4}$ et $${s3}$, $${s1}$, $${s5}$ sont alignés dans cet ordre.<br>`\n        texte += `$${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.<br>`\n        texteCorr = ''\n      }\n      texte += `Les droites $(${s2 + s3})$ et $(${s4 + s5})$ sont-elles parallèles ?<br>`\n\n      texteCorr += `D'une part on a $\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s12}}{${s14}}=\\\\dfrac{${s12}\\\\times${miseEnEvidence(\n        s15\n      )}}{${s14}\\\\times${miseEnEvidence(s15)}}=\\\\dfrac{\n        ${texNombrec(arrondi(dist12 * dist15, 3))}}\n        {${s14}\\\\times${s15}}\n      $`\n      texteCorr += `<br>D'autre part on a $\\\\dfrac{${s1 + s3}}{${s1 + s5}}=\\\\dfrac{${s13}}{${s15}}=\\\\dfrac{${s13}\\\\times${miseEnEvidence(\n        s14\n      )}}{${s15}\\\\times${miseEnEvidence(s14)}}=\\\\dfrac{${texNombrec(arrondi(dist13 * dist14, 3))}}\n        {${s14}\\\\times${s15}}\n      $`\n\n      if (k !== k2) {\n        // droites non parallèles\n        texteCorr += `<br>$\\\\dfrac{${s1 + s2}}{${s1 + s4}}\\\\not=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>`\n        texteCorr += `Donc d'après le théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ ne sont pas parallèles.<br>`\n      } else {\n        // droites parallèles\n        texteCorr += `<br>$\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>` // car les produits en croix sont égaux : $${s12}\\\\times${s15}=${s13}\\\\times${s14}=${texNombre(arrondi(dist12*dist15,3))}$.<br>`;\n        if (k > 0) { texteCorr += `$${s1}$,$${s4}$,$${s2}$ et $${s1}$,$${s5}$,$${s3}$ sont alignés dans le même ordre.<br>` } else { texteCorr += `$${s4}$,$${s1}$,$${s2}$ et $${s5}$,$${s1}$,$${s3}$ sont alignés dans le même ordre.<br>` }\n        texteCorr += `Donc d'après la réciproque du théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ sont parallèles.<br>`\n      }\n\n      if (this.sup < 3) {\n        this.MG32codeBase64 = codeBase64\n        this.mg32init = (mtg32App, idDoc) => {\n          mtg32App.giveFormula2(idDoc, 'x3', x3)\n          mtg32App.giveFormula2(idDoc, 'y2', y2)\n          mtg32App.giveFormula2(idDoc, 'y3', y3)\n          mtg32App.giveFormula2(idDoc, 'k', k)\n          mtg32App.rename(idDoc, \"A'\", s1)\n          mtg32App.rename(idDoc, \"B'\", s2)\n          mtg32App.rename(idDoc, \"C'\", s3)\n          mtg32App.rename(idDoc, \"M'\", s4)\n          mtg32App.rename(idDoc, \"N'\", s5)\n          mtg32App.calculate(idDoc)\n          mtg32App.display(idDoc)\n        }\n        texte += `$\\\\footnotesize{\\\\textit{Le point \\\\thickspace ${s1} peut être déplacé (si la figure est tronquée).}}$<br>`\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n      if (this.sup < 3) {\n        listeQuestionsToContenu(this)\n      } else {\n        this.typeExercice = ''\n        listeQuestionsToContenuSansNumero(this)\n      }\n    } else {\n      // sortie Latex\n      texteCorr = ''\n      if (parseInt(this.sup) === 1) {\n        // niveau 1 : Calcul direct\n        texte =\n          '\\\\begin{minipage}{.7 \\\\linewidth} \\\\vspace{0cm} Sur la figure ci-contre, on a  : \\\\begin{itemize}'\n        texte += `\\n\\t \\\\item ${s1 + s2}=${s12} cm \\n\\t \\\\item ${s1 + s3}=${s13} cm\\n\\t \\\\item ${s1 + s5}=${s15} cm\\n\\t \\\\item ${s1 + s4}=${s14} cm.<br>`\n        texte +=\n          '\\\\end{itemize}  ' +\n          `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>` +\n          '. \\\\end{minipage}'\n      } else if (parseInt(this.sup) === 2) {\n        // niveau 2 : Calcul intermédiaire nécessaire\n        texte =\n          '\\\\begin{minipage}{.7 \\\\linewidth} \\\\vspace{0cm} Sur la figure ci-contre, on a  : \\\\begin{itemize}'\n        texte += `\\n\\t \\\\item ${s1 + s2} = ${s12} cm\\n\\t \\\\item ${s1 + s3} = ${s13} cm\\n\\t \\\\item ${s3 + s5} = ${s35} cm\\n\\t \\\\item ${s2 + s4} = ${s24} cm.<br>`\n        texte +=\n          '\\\\end{itemize}  ' +\n          `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>` +\n          '. \\\\end{minipage}'\n        if (k > 0) {\n          // triangles imbriqués\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s1 + s3}-${s3 + s5}=${s13}-${s35}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'et que ' +\n            `$${s1 + s4}=${s1 + s2}-${s2 + s4}=${s12}-${s24}=${s14}$` +\n            ' cm.<br>'\n        } else { // papillon\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s3 + s5}-${s1 + s3}=${s35}-${s13}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'et que ' +\n            `$${s1 + s4}=${s2 + s4}-${s1 + s2}=${s24}-${s12}=${s14}$` +\n            ' cm.<br>'\n        } // énoncé sans figure\n      } else if (randint(1, 2) === 1) {\n        // triangles imbriqués\n        texte = `$${s1}$, $${s2}$ et $${s3}$ sont trois point distincts. $${s4} \\\\in [${s1 + s2}]$ et $${s5} \\\\in [${s1 + s3}]$ <br> $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.<br>`\n        texte += `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>`\n      } else {\n        // papillon\n        texte = `Les points $${s2}$, $${s1}$, $${s4}$ et $${s3}$, $${s1}$, $${s5}$ sont alignés dans cet ordre.<br>`\n        texte += `$${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.<br>`\n        texte += `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>`\n      }\n\n      if (this.sup < 3) {\n        // on ne fait la figure que si niveau < 3\n        texte += '\\\\begin{minipage}{0.3 \\\\linewidth}'\n        // dessin de la figure\n        texte += '\\n \\\\begin{tikzpicture}[scale=0.7]' // Balise début de figure\n        texte +=\n          '\\n\\t \\\\tkzDefPoints{0/0/' +\n          s1 +\n          ',' +\n          x3 +\n          '/' +\n          y3 +\n          '/' +\n          s3 +\n          ',' +\n          x2 +\n          '/' +\n          y2 +\n          '/' +\n          s2 +\n          '}' // Placer les points du triangle principal\n        texte += '\\n\\t \\\\tkzDrawPolygon(' + s1 + ',' + s2 + ',' + s3 + ')' // Trace le triangle principal\n\n        // Définit les points M et N par homothétie de centre C et de rapport 0,3<k<0,8\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n          s1 +\n          ' ratio ' +\n          k +\n          '](' +\n          s2 +\n          ')' +\n          '\\t\\\\tkzGetPoint{' +\n          s4 +\n          '}' // Place le premier point du triangle image\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n          s1 +\n          ' ratio ' +\n          k +\n          '](' +\n          s3 +\n          ')' +\n          '\\t\\\\tkzGetPoint{' +\n          s5 +\n          '}' // Place le deuxième point du triangle image\n        texte += '\\n\\t \\\\tkzDrawSegment(' + s4 + ',' + s5 + ')' // Trace le segment\n        if (k > 0) {\n          texte += '\\n\\t \\\\tkzLabelPoints[left](' + s1 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[above left](' + s2 + ',' + s4 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[below](' + s3 + ',' + s5 + ')' // nomme les points\n\n          // Nomme les points au dessus avec above, dessous avec below...\n        } else {\n          // position papillon -> position du nom inversée et nécessité de tracer le triangle secondaire\n          texte += '\\n\\t \\\\tkzLabelPoints[below](' + s1 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[below](' + s3 + ',' + s4 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[above](' + s2 + ',' + s5 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzDrawPolygon(' + s1 + ',' + s4 + ',' + s5 + ')' // Trace le triangle secondaire\n        }\n        texte += '\\n \\\\end{tikzpicture}' // Balise de fin de figure\n        texte += '\\\\end{minipage}'\n      }\n      this.listeQuestions.push(texte) // on envoie la question\n\n      // correction\n      texteCorr += `D'une part on a $\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s12}}{${s14}}=\\\\dfrac{${s12}\\\\times${miseEnEvidence(\n        s15\n      )}}{${s14}\\\\times${miseEnEvidence(s15)}}=${texFraction(\n        texNombrec(arrondi(dist12 * dist15, 3)),\n        texNombrec(arrondi(dist14 * dist15, 4))\n      )}$`\n      texteCorr += `<br>D'autre part on a $\\\\dfrac{${s1 + s3}}{${s1 + s5}}=\\\\dfrac{${s13}}{${s15}}=\\\\dfrac{${s13}\\\\times${miseEnEvidence(\n        s14\n      )}}{${s15}\\\\times${miseEnEvidence(s14)}}=${texFraction(\n        texNombrec(arrondi(dist13 * dist14, 3)),\n        texNombrec(arrondi(dist14 * dist15, 4))\n      )}$`\n\n      if (k !== k2) {\n        // droites pas parallèles\n        texteCorr += `<br>$\\\\dfrac{${s1 + s2}}{${s1 + s4}}\\\\not=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>`\n        texteCorr += `Donc d'après le théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ ne sont pas parallèles.<br>`\n        this.autoCorrection = [{\n          enonce: texte,\n          propositions:\n          [\n            {\n              type: 'AMCOpen',\n              propositions: [{ texte: texteCorr, statut: 6, feedback: '' }]\n            },\n            {\n              type: 'qcmMono',\n              options: { ordered: true },\n              propositions: [\n                {\n                  texte: 'Oui',\n                  statut: false\n                },\n                {\n                  texte: 'Non',\n                  statut: true\n                },\n                {\n                  texte: 'Je ne sais pas',\n                  statut: false\n                }\n\n              ]\n            }\n          ]\n        }]\n      } else {\n        // droites parallèles\n        texteCorr += `<br>$\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>` // car les produits en croix sont égaux : $${s12}\\\\times${s15}=${s13}\\\\times${s14}=${texNombre(arrondi(dist12*dist15,3))}$.<br>`;\n        if (k > 0) { texteCorr += `$${s1}$,$${s4}$,$${s2}$ et $${s1}$,$${s5}$,$${s3}$ sont alignés dans le même ordre.<br>` } else { texteCorr += `$${s4}$,$${s1}$,$${s2}$ et $${s5}$,$${s1}$,$${s3}$ sont alignés dans le même ordre.<br>` }\n        texteCorr += `Donc d'après la réciproque du théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ sont parallèles.<br>`\n        this.autoCorrection = [{\n          enonce: texte,\n          propositions:\n          [\n            {\n              type: 'AMCOpen',\n              propositions: [{ texte: texteCorr, statut: 6, feedback: '' }]\n            },\n            {\n              type: 'qcmMono',\n              options: { ordered: true },\n              propositions: [\n                {\n                  texte: 'Oui',\n                  statut: true\n                },\n                {\n                  texte: 'Non',\n                  statut: false\n                },\n                {\n                  texte: 'Je ne sais pas',\n                  statut: false\n                }\n\n              ]\n            }\n          ]\n        }]\n      }\n      this.listeCorrections.push(texteCorr)\n\n      listeQuestionsToContenuSansNumero(this)\n    }\n  }\n\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    3,\n    '1 : Cas simple \\n 2 : Complication \\n 3 : Sans figure'\n  ]\n  this.besoinFormulaire2Numerique = [\n    'Réciproque ou contraposée ? ',\n    3,\n    '1 : Réciproque \\n 2 : Contraposée \\n 3 : Aléatoire'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","titre","ReciproqueThales","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","context","spacingCorr","spacing","nbCols","nbColsCorr","quatrieme","sup","sup2","listePackages","typeExercice","nouvelleVersion","numeroExercice","autoCorrections","listeQuestions","listeCorrections","lettre1","randint","s1","lettreDepuisChiffre","lettre2","s2","lettre3","s3","lettre4","s4","lettre5","s5","k2","dist24","x2","y2","x3","y3","k","parseInt","abs","dist12","Math","round","sqrt","dist13","dist15","arrondi","dist14","dist35","texte","texteCorr","s13","texNombre","s12","s15","s14","s24","s35","codeBase64","dimensionsDivMg32","miseEnEvidence","texNombrec","MG32codeBase64","mg32init","mtg32App","idDoc","giveFormula2","rename","calculate","display","push","listeQuestionsToContenu","listeQuestionsToContenuSansNumero","texFraction","autoCorrection","enonce","propositions","type","statut","feedback","options","ordered","besoinFormulaireNumerique","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}