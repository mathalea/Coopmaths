/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e_6Algo10_js"],{

/***/ "./src/js/exercices/6e/6Algo10.js":
/*!****************************************!*\
  !*** ./src/js/exercices/6e/6Algo10.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Colorier_Deplacement)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\n\n\nconst titre = 'Programmer des déplacements'\n\n/**\n * * Colorier le déplacement d'un lutin\n * * 6Algo10\n * @author Erwan Duplessy\n */\nfunction Colorier_Deplacement() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.type_exercice = \"Scratch\"\n  this.sup = 1; // nombre de commandes = this.sup + 2\n  this.sup2 = false; //1 : sans boucle ; true : avec boucle\n  this.nb_questions = 1;\n  this.nb_questions_modifiable = false;\n  this.titre = titre;\n  this.consigne = \"Dans le quadrillage, effectuer le programme.\";\n  this.nb_cols = 1;\n  this.nb_cols_corr = 1;\n  this.nb_questions_modifiable = false;\n  sortie_html ? this.spacing = 2 : this.spacing = 1;\n  sortie_html ? this.spacing_corr = 2 : this.spacing_corr = 1;\n  this.liste_packages = \"scratch3\"; // pour dessiner les blocs en LaTeX/Tikz\n\n  this.nouvelle_version = function () {\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n    function scratchblocks_Tikz(code_svg, code_tikz) {\n      if (sortie_html) {\n        return code_svg;\n      } else {\n        return code_tikz;\n      };\n    };\n\n    let texte = \"\"; // texte de l'énoncé\n    let texte_corr = \"\"; // texte du corrigé\n    let code_tikz = ``; // code pour dessiner les blocs en tikz\n    let code_svg = ``; // code pour dessiner les blocs en svg\n    let nbCommandes = Number(this.sup) + 2; // nombre de commandes de déplacement dans un script\n    let nbRepetition = 1; // Nombre de fois où la boucle est répétée. \n    if (this.sup2) {\n      nbRepetition = 3;\n    }\n    // 0 : gauche, 1 : droite, 2 : haut, 3 : bas, 4 : colorier.\n    let lstCommandesTikz = [`\\\\blockmove{Aller à gauche}`, `\\\\blockmove{Aller à droite}`, `\\\\blockmove{Aller en haut}`, `\\\\blockmove{Aller en bas}`, `\\\\blockmove{Colorier la case}`];\n    let lstCommandesSVG = [`Aller à gauche`, `Aller à droite`, `Aller en haut`, `Aller en bas`, `Colorier`];\n    let lstAjoutXY = [[-1, 0], [1, 0], [0, 1], [0, -1], [0, 0]];\n    code_tikz += `\\\\medskip \\\\\\\\ \\\\begin{scratch} <br>`;\n    code_svg += `<pre class='blocks'>`;\n    let n = 0; // variable temporaire pour stocker le numéro de la commande\n    let lstNumCommande = []; // liste des commandes successives\n    let lstX = [0]; // liste des abscisses successives\n    let lstY = [0]; // liste des ordonnées successives\n    if (this.sup2) {\n      code_svg += `répéter (${nbRepetition}) fois <br>`;\n      code_tikz += `\\\\blockrepeat{répéter \\\\ovalnum{${nbRepetition}} fois} {`;\n    }\n\n    for (let i = 0; i < nbCommandes; i++) {\n      n = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([0, 1, 2, 3]); // choix d'un déplacement\n      code_tikz += lstCommandesTikz[n]; // ajout d'un déplacement \n      code_svg += lstCommandesSVG[n] + `<br>`; // ajout d'un déplacement \n      code_tikz += lstCommandesTikz[4]; // ajout de l'instruction \"Colorier\"\n      code_svg += lstCommandesSVG[4] + `<br>`; // ajout de l'instruction \"Colorier\"\n      lstNumCommande.push(n); // ajout d'un déplacement \n      lstNumCommande.push(4); // ajout de l'instruction \"Colorier\"\n      lstX.push(lstX[lstX.length - 1] + lstAjoutXY[n][0]); // calcul de la nouvelle abscisse\n      lstY.push(lstY[lstY.length - 1] + lstAjoutXY[n][1]); // calcul de la nouvelle ordonnée\n    }\n    for (let j = 0; j < nbRepetition - 1; j++) {\n      for (let i = 0; i < 2 * nbCommandes; i++) {\n        lstX.push(lstX[lstX.length - 1] + lstAjoutXY[lstNumCommande[i]][0]);\n        lstY.push(lstY[lstY.length - 1] + lstAjoutXY[lstNumCommande[i]][1]);\n      }\n    }\n    if (this.sup2) {\n      code_svg += `fin <br>`;\n      code_tikz += `}`;\n    }\n    code_svg += `</pre>`;\n    code_tikz += `\\\\end{scratch}`;\n\n    let xLutinMin = Math.min(...lstX);\n    let xLutinMax = Math.max(...lstX);\n    let yLutinMin = Math.min(...lstY);\n    let yLutinMax = Math.max(...lstY);\n\n    if (sortie_html) {\n      texte += `<table style=\"width: 100%\"><tr><td>`;\n    } else {\n      texte += `\\\\begin{minipage}[t]{.25\\\\textwidth}`;\n    }\n\n    texte += scratchblocks_Tikz(code_svg, code_tikz);\n\n    if (sortie_html) {\n      texte += `</td><td>`;\n      texte += `             `;\n      texte += `</td><td style=\"vertical-align: top; text-align: center\">`;\n    }\n    else {\n      texte += `\\\\end{minipage} `;\n      texte += `\\\\hfill \\\\begin{minipage}[t]{.74\\\\textwidth}`;\n    }\n\n    let xGrilleMin = xLutinMin - 1;\n    let xGrilleMax = xLutinMax + 2;\n    let yGrilleMin = yLutinMin - 2;\n    let yGrilleMax = yLutinMax + 1;\n\n    let r2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.grille)(xGrilleMin, yGrilleMin, xGrilleMax, yGrilleMax, 'black', .8, 1);\n    let lstObjet = [r2]; // liste de tous les objets Mathalea2d\n\n    let p; // carré gris représentant le lutin en position de départ\n    p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(lstX[0], lstY[0]), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(lstX[0] + 1, lstY[0]), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(lstX[0] + 1, lstY[0] - 1), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(lstX[0], lstY[0] - 1));\n    p.opacite = 0.5;\n    p.couleurDeRemplissage = 'black';\n    p.opaciteDeRemplissage = 0.5;\n    p.epaisseur = 0;\n    lstObjet.push(p);\n    let txt = ``; // variable temporaire\n    for (let j = 0; j < (xGrilleMax - xGrilleMin); j++) {\n      txt = String.fromCharCode(65 + j); // ascii 65 = A\n      lstObjet.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)(txt, xGrilleMin + j + 0.5, yGrilleMax + 0.5, 'milieu', 'black', 1)); // affiche de A à J... en haut de la grille\n    }\n    for (let i = 0; i < (yGrilleMax - yGrilleMin); i++) {\n      lstObjet.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)(String(i), xGrilleMin - 0.25, yGrilleMax - i - 0.5, 'gauche', 'black', 1)); // affiche de 0 à 9... à gauche de la grille\n    }\n\n    texte += `Au départ, le lutin est situé dans la case grisée. Chaque déplacement se fait dans une case adjacente. <br><br>`;\n    if (!sortie_html) { texte += `\\\\begin{center}`; }\n    texte += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xGrilleMin - 3, xmax: xGrilleMax + 1, ymin: yGrilleMin - 1, ymax: yGrilleMax + 1, pixelsParCm: 20, scale: .5 }, lstObjet);\n    if (sortie_html) {\n      texte += `</td></tr></table>`;\n    } else {\n      texte += `\\\\end{center}\\\\end{minipage} `;\n      texte += `\\\\hfill \\\\null`;\n    }\n\n    // CORRECTION\n    // 0 : gauche, 1 : droite, 2 : haut, 3 : bas, 4 : colorier.\n    let xLutin = 0; // position initiale du carré\n    let yLutin = 0; // position initiale du carré\n    let couleur = `red`;\n\n    // on fait un dessin par passage dans la boucle\n    if (sortie_html) {\n      texte_corr += `<table style=\"width:100%\"><tr><td style=\"text-align:center\">`;\n    } else {\n      texte_corr += `\\\\begin{minipage}{.49\\\\textwidth}`;\n    }\n    for (let k = 0; k < nbRepetition; k++) {\n      for (let i = k * lstNumCommande.length; i < (k + 1) * lstNumCommande.length; i++) {\n        switch (lstNumCommande[i % lstNumCommande.length]) {\n          case 0:\n            xLutin += -1; break;\n          case 1:\n            xLutin += 1; break;\n          case 2:\n            yLutin += 1; break;\n          case 3:\n            yLutin += -1; break;\n          case 4:\n            p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xLutin, yLutin), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xLutin + 1, yLutin), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xLutin + 1, yLutin - 1), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xLutin, yLutin - 1));\n            p.couleurDeRemplissage = couleur;\n            p.opaciteDeRemplissage = 0.25;\n            p.epaisseur = 0;\n            lstObjet.push(p);\n        }\n      }\n      if (this.sup2) {\n        texte_corr += `Passage n° ${k + 1} dans la boucle : <br>`;\n      }\n      texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xGrilleMin - 3, xmax: xGrilleMax + 1, ymin: yGrilleMin - 1, ymax: yGrilleMax + 1, pixelsParCm: 20, scale: 0.4 }, lstObjet);\n      if (sortie_html) {\n        if (k % 3 == 2) {\n          texte_corr += `</td></tr><tr><td style=\"text-align:center\">`; // retour à la ligne après 3 grilles dessinées en HTML\n        } else {\n          texte_corr += `</td><td></td><td style=\"text-align:center\">`;\n        }\n      } else {\n        texte_corr += `\\\\end{minipage}`;\n        if (k % 2 == 1) { texte_corr += `\\\\\\\\ `; } // retour à la ligne après 2 grilles dessinées en LaTeX\n        texte_corr += `\\\\begin{minipage}{.49\\\\textwidth}`;\n      }\n    }\n    sortie_html ? texte_corr += `</td></tr></table>` : texte_corr += `\\\\end{minipage}`;\n\n    this.liste_questions.push(texte);\n    this.liste_corrections.push(texte_corr);\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  this.besoin_formulaire_numerique = [`Nombre d'instructions de déplacements`, 3, '1 : 3 instructions\\n2 : 4 instructions\\n3 : 5 instructions'];\n  this.besoin_formulaire2_case_a_cocher = [\"Avec une boucle\"];\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/6Algo10.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);