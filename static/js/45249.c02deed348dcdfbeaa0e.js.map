{"version":3,"file":"js/45249.c02deed348dcdfbeaa0e.js","mappings":"oRAKO,MAAMA,EAAQ,2BACRC,GAAW,EACXC,EAAU,SACVC,GAAkB,EAClBC,EAAiB,YAOf,SAASC,EAAyBC,EAAM,IACrDC,EAAAA,QAAAA,KAAcC,MACdA,KAAKR,MAAQA,EACbQ,KAAKC,SAAW,WAChBD,KAAKE,IAAMJ,EACXE,KAAKG,QAAU,EACfH,KAAKI,gBAAkB,IAEvBJ,KAAKK,gBAAkB,WACrBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxB,IACE,IAAWC,EAAGC,EAAGC,EAAOC,EAApBC,EAAI,EAA2BC,EAAM,EACzCD,EAAIZ,KAAKc,aAAeD,EAAM,IAG9Bb,KAAKe,eAAeH,GAAK,GACzBJ,GAAIQ,EAAAA,EAAAA,KAAQ,EAAGC,SAASjB,KAAKE,MAC7BO,GAAIO,EAAAA,EAAAA,KAAQ,EAAGC,SAASjB,KAAKE,MAC7BQ,EAAS,MAAIQ,EAAAA,EAAAA,KAAUV,SAAQU,EAAAA,EAAAA,KAAUT,mBACzCE,EAAa,MAAIO,EAAAA,EAAAA,KAAUV,SAAQU,EAAAA,EAAAA,KAAUT,SAAQS,EAAAA,EAAAA,KAAUV,EAAIC,QACnEU,EAAAA,EAAAA,IAAWnB,KAAMY,EAAGJ,EAAIC,GACpBW,EAAAA,GAAAA,QAAkBpB,KAAKqB,aACzBX,EAAQA,EAAMY,QAAQ,YAAa,IACnCZ,IAASa,EAAAA,EAAAA,IAAiBvB,KAAMY,IAE9BQ,EAAAA,GAAAA,QACFpB,KAAKe,eAAeH,GAAGY,OAASd,EAChCV,KAAKe,eAAeH,GAAGa,aAAe,CAAC,CAAEf,MAAOC,EAAWe,OAAQ,KACnE1B,KAAKe,eAAeH,GAAGe,QAAU,CAAEC,OAAQpB,EAAIC,EAAGoB,MAAO,CAAEC,OAAQC,KAAKjC,IAAI,GAAGkC,EAAAA,EAAAA,KAAoCxB,EAAIC,IAAKwB,SAAU,EAAGC,mBAAoB,EAAGC,OAAO,MAE7H,IAAxCnC,KAAKM,eAAe8B,QAAQ1B,KAE9BV,KAAKM,eAAe+B,KAAK3B,GACzBV,KAAKO,iBAAiB8B,KAAK1B,GAC3BC,KAEFC,KAEFyB,EAAAA,EAAAA,KAAwBtC,OAE1BA,KAAKuC,0BAA4B,CAAC,kBAAmB,S,gBCnDxC,SAASxC,IAItBC,KAAKR,MAAQ,GACbQ,KAAKwC,YAAa,EAclBxC,KAAKC,SAAW,GAChBD,KAAKyC,mBAAqB,GAC1BzC,KAAK0C,aAAe,GACpB1C,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAK2C,QAAU,GACf3C,KAAK4C,kBAAoB,GACzB5C,KAAKe,eAAiB,GACtBf,KAAK6C,sBAAwB,GAK7B7C,KAAKG,QAAU,EACfH,KAAK8C,YAAc,EAKnB9C,KAAK+C,mBAAoB,EACzB/C,KAAKgD,cAAgB,GACrBhD,KAAKiD,oBAAqB,EAC1BjD,KAAKkD,uBAAwB,EAC7BlD,KAAKmD,OAAS,EACdnD,KAAKoD,WAAa,EAClBpD,KAAKqD,kBAAmB,EACxBrD,KAAKsD,sBAAuB,EAC5BtD,KAAKuD,mBAAoB,EACzBvD,KAAKwD,uBAAwB,EAM7BxD,KAAKyD,QAAS,EACdzD,KAAKI,gBAAkB,GAKvBJ,KAAKc,YAAc,GACnBd,KAAK0D,+BAAgC,EACrC1D,KAAK2D,qBAAsB,EAC3B3D,KAAK4D,MAAQ,GAEb5D,KAAKqB,YAAa,EAClBrB,KAAK6D,uBAAwB,EAE7B7D,KAAKuC,2BAA4B,EACjCvC,KAAK8D,uBAAwB,EAC7B9D,KAAK+D,6BAA8B,EAEnC/D,KAAKgE,4BAA6B,EAClChE,KAAKiE,wBAAyB,EAC9BjE,KAAKkE,8BAA+B,EAEpClE,KAAKmE,4BAA6B,EAClCnE,KAAKoE,wBAAyB,EAC9BpE,KAAKqE,8BAA+B,EAMpCrE,KAAKsE,cAAe,EAMpBtE,KAAKuE,eAAiB,GAEtBvE,KAAKK,gBAAkB,SAAUmE,KAQjCxE,KAAKyE,oBAAsB,SAAU7D,KAAM8D,GAC/B,IAAN9D,IAASZ,KAAKuE,eAAiB,IACnC,IAAII,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAI9E,KAAKuE,eAAenC,QAAQuC,IAAmB,KAGjD3E,KAAKuE,eAAelC,KAAKsC,IAClB,I,gOClHN,MAAMnF,EAAQ,oBAUN,SAASuF,IACtBlF,EAAAA,QAAAA,KAA6BG,KAAM","sources":["webpack://mathalea/./src/js/exercices/6e/6C10-4.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/c3/c3C10-4.js"],"sourcesContent":["/* eslint-disable camelcase */\nimport Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, nombreDeChiffresDansLaPartieEntiere, randint, texNombre } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Addition de deux entiers'\nexport const amcReady = true\nexport const amcType = 'AMCNum' // Question numérique\nexport const interactifReady = true\nexport const interactifType = 'numerique'\n\n/**\n * Additionner deux entiers\n * @author Rémi Angot\n * Référence 6C10-4\n */\nexport default function ExerciceTablesAdditions (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.sup = max // Le paramètre accessible à l'utilisateur sera la valeur maximale\n  this.spacing = 2\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    for (\n      let i = 0, a, b, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      this.autoCorrection[i] = {}\n      a = randint(2, parseInt(this.sup))\n      b = randint(2, parseInt(this.sup))\n      texte = `$ ${texNombre(a)} + ${texNombre(b)} = \\\\dotfill $`\n      texteCorr = `$ ${texNombre(a)} + ${texNombre(b)} = ${texNombre(a + b)} $`\n      setReponse(this, i, a + b)\n      if (context.isHtml && this.interactif) {\n        texte = texte.replace('\\\\dotfill', '')\n        texte += ajouteChampTexte(this, i)\n      }\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte\n        this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: '' }]\n        this.autoCorrection[i].reponse = { valeur: a + b, param: { digits: Math.max(2, nombreDeChiffresDansLaPartieEntiere(a + b)), decimals: 0, exposantNbChiffres: 0, signe: false } }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import ExerciceTablesAdditions from '../6e/6C10-4.js'\nexport const titre = 'Tables d’addition'\nexport { interactifReady, interactifType, amcReady, amcType } from '../6e/6C10-4.js'\n\n/**\n * Lire des nombres déciamux sur une portion de droite graduée\n * Une question demande la forme décimale, une autre, la partie entière plus la fraction décimale, et une troisième demande une seule fraction décimale.\n * ref 6N23-2\n *\n * @author Jean-Claude Lhote\n */\nexport default function TablesAdditionsCycle3 () {\n  ExerciceTablesAdditions.call(this, 10)\n}\n"],"names":["titre","amcReady","amcType","interactifReady","interactifType","ExerciceTablesAdditions","max","Exercice","this","consigne","sup","spacing","tailleDiaporama","nouvelleVersion","listeQuestions","listeCorrections","a","b","texte","texteCorr","i","cpt","nbQuestions","autoCorrection","randint","parseInt","texNombre","setReponse","context","interactif","replace","ajouteChampTexte","enonce","propositions","statut","reponse","valeur","param","digits","Math","nombreDeChiffresDansLaPartieEntiere","decimals","exposantNbChiffres","signe","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","TablesAdditionsCycle3"],"sourceRoot":""}