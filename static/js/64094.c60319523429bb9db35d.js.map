{"version":3,"file":"js/64094.c60319523429bb9db35d.js","mappings":"4GAMe,SAASA,IAItBC,KAAKC,MAAQ,GACbD,KAAKE,YAAa,EAclBF,KAAKG,SAAW,GAChBH,KAAKI,mBAAqB,GAC1BJ,KAAKK,aAAe,GACpBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKQ,QAAU,GACfR,KAAKS,kBAAoB,GACzBT,KAAKU,eAAiB,GACtBV,KAAKW,sBAAwB,GAK7BX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EAKnBb,KAAKc,mBAAoB,EACzBd,KAAKe,cAAgB,GACrBf,KAAKgB,oBAAqB,EAC1BhB,KAAKiB,uBAAwB,EAC7BjB,KAAKkB,OAAS,EACdlB,KAAKmB,WAAa,EAClBnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAM7BvB,KAAKwB,QAAS,EACdxB,KAAKyB,gBAAkB,EAKvBzB,KAAK0B,YAAc,GACnB1B,KAAK2B,mBAAqB,EAC1B3B,KAAK4B,+BAAgC,EACrC5B,KAAK6B,qBAAsB,EAC3B7B,KAAK8B,oBAAqB,EAC1B9B,KAAK+B,MAAQ,GAEb/B,KAAKgC,YAAa,EAClBhC,KAAKiC,uBAAwB,EAE7BjC,KAAKkC,2BAA4B,EACjClC,KAAKmC,uBAAwB,EAC7BnC,KAAKoC,6BAA8B,EAEnCpC,KAAKqC,4BAA6B,EAClCrC,KAAKsC,wBAAyB,EAC9BtC,KAAKuC,8BAA+B,EAEpCvC,KAAKwC,4BAA6B,EAClCxC,KAAKyC,wBAAyB,EAC9BzC,KAAK0C,8BAA+B,EAEpC1C,KAAK2C,4BAA6B,EAClC3C,KAAK4C,wBAAyB,EAC9B5C,KAAK6C,8BAA+B,EAMpC7C,KAAK8C,cAAe,EASpB9C,KAAK+C,eAAiB,GAMtB/C,KAAKgD,gBAAkB,SAAUC,KAQjCjD,KAAKkD,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAASnD,KAAK+C,eAAiB,IACnC,IAAIM,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIxD,KAAK+C,eAAeU,QAAQJ,IAAmB,KAGjDrD,KAAK+C,eAAeW,KAAKL,IAClB,I,8HC5HN,MAAMpD,EAAQ,6BAQN,SAAS0D,IACtB5D,EAAAA,QAAAA,KAAcC,MACdA,KAAKkB,OAAS,EACdlB,KAAK4D,IAAM,EACX5D,KAAKC,MAAQA,EAEbD,KAAKgD,gBAAkB,WACrBhD,KAAKQ,QAAU,GACf,IAAIqD,EAAQ,GACZ,MAAMC,GAAOC,EAAAA,EAAAA,KAA0B,EAAG,OAC1C,IAAIC,EAAMC,EAASC,EAAMC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EAAIC,EAAWC,EAClH,MAAMC,EAAS,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAIC,SAASxF,KAAK4D,KAAM2B,IAAK,CAE/C,GADAD,EAAOG,OAAS,EACW,IAAvBD,SAASxF,KAAK4D,KAAY,CAC5BI,GAAO0B,EAAAA,EAAAA,KAAQ,EAAG,IAAM,GACxBzB,EAAU0B,KAAKC,MAAM5B,EAAO,IAC5B,MAAM6B,EAAW,GACjB3B,EAAOD,EAAU,IAEjBE,GAAK2B,EAAAA,EAAAA,KAAO9B,EAAO,IAAM0B,EAAAA,EAAAA,KAAQ,EAAG,IAAKA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,IACzDN,EAAY,KAEZ,MAAMW,GAAKC,EAAAA,EAAAA,KAAe,CACxBC,EAAG,EACHC,EAAG,EACHC,IAAKnC,EACLoC,YAAa,IACbC,IAAKnC,EAAO,GACZoC,UAAU,EACVC,UAAU,EACVC,MAAO,EACPC,YAAaZ,EACba,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAElBC,WAAY,CAAC,CAAC3C,EAAK,GAAEL,EAAK,MAAO,CAAC6B,KAAKoB,MAAM5C,GAAM,GAAEL,EAAK,MAAO,CAAC6B,KAAKoB,MAAM5C,EAAK,GAAK,GAAEL,EAAK,OAC9FkD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAUjC,IAENkC,GAAKtB,EAAAA,EAAAA,KAAe,CACxBC,EAAGN,KAAKoB,MAAM5C,GAAMH,EAAO,IAC3BkC,EAAG,EACHC,IAAKR,KAAKoB,MAAM5C,GAChBiC,YAAa,IACbC,IAAKV,KAAKoB,MAAM5C,EAAK,GACrBmC,UAAU,EACVC,UAAU,EACVC,MAAO,GACPC,YAAaZ,EACba,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBC,WAAY,CAAC,CAAC3C,EAAK,GAAEL,EAAK,MAAO,CAAC6B,KAAKoB,MAAM5C,GAAM,GAAEL,EAAK,MAAO,CAAC6B,KAAKoB,MAAM5C,EAAK,GAAK,GAAEL,EAAK,OAC9FkD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAUjC,IAGZZ,GAAM+C,EAAAA,EAAAA,KAAgC,GAAzB5B,KAAKoB,MAAM5C,GAAMH,GAAW,GACzCS,GAAM8C,EAAAA,EAAAA,KAAM5B,KAAKoB,MAAM5C,GAAMH,EAAO,IAAK,GACzCU,GAAM6C,EAAAA,EAAAA,KAAoC,GAA7B5B,KAAKoB,MAAM5C,GAAM,EAAIH,GAAW,GAC7CW,GAAM4C,EAAAA,EAAAA,KAAM5B,KAAKoB,MAAM5C,GAAMH,EAAO,KAAM,GAC1CgB,GAAKwC,EAAAA,EAAAA,KAAQhD,EAAKC,GAClBQ,GAAKuC,EAAAA,EAAAA,KAAQ9C,EAAKC,GAClBK,EAAGyC,YAAa,EAChBxC,EAAGwC,YAAa,EAChBnC,EAAO5B,KAAKqC,EAAIuB,EAAItC,EAAIC,GACxBI,EAAU,CAAErB,MAAO,IAAKE,KAAM,GAAIwD,MAAO,EAAGC,KAAM,IAAKC,YAAa,GAAIC,MAAO,QAC1E,CACL7D,GAAO0B,EAAAA,EAAAA,KAAQ,EAAG,IAClBxB,EAAOF,EAAO,EACdG,GAAK2B,EAAAA,EAAAA,KAAO9B,GAAO0B,EAAAA,EAAAA,KAAQ,EAAG,GAAK,IAAKA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,IAAsB,MAAhBA,EAAAA,EAAAA,KAAQ,EAAG,IACzEtB,GAAK0D,EAAAA,EAAAA,KAAW3D,EAAI,GACpBG,GAAMwD,EAAAA,EAAAA,KAAW3D,EAAI,GACrBE,GAAKyB,EAAAA,EAAAA,KAAO1B,EAAK,IACjBG,GAAMuB,EAAAA,EAAAA,KAAOxB,EAAM,KACnBN,EAAO2B,KAAKoB,MAAM3C,GAClBF,EAAOF,EAAO,EACd,MAAM6B,EAAW,KAEjBT,EAAY,KACZ,MAAMW,GAAKC,EAAAA,EAAAA,KAAe,CACxBC,EAAG,EACHC,EAAG,EACHC,IAAKnC,EACLoC,YAAa,IACbC,IAAKnC,EACLoC,UAAU,EACVC,UAAU,EACVC,MAAO,GACPuB,cAAe,EACfC,aAAc,GACdC,aAAc,IACdxB,YAAaZ,EACba,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBC,WAAY,CAAC,CAAC3C,EAAK,GAAEL,EAAK,MAAO,CAACM,EAAK,GAAEN,EAAK,MAAO,CAACO,EAAK,GAAEP,EAAK,OAClEkD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAUjC,IAENkC,GAAKtB,EAAAA,EAAAA,KAAe,CACxBC,EAAG,IACHC,EAAG,EACHC,IAAK/B,EACLgC,YAAa,IACbC,IAAKhC,EACLiC,UAAU,EACVC,UAAU,EACVC,MAAO,IACPwB,aAAc,IACdC,aAAc,KACdF,cAAe,GACftB,YAAaZ,EACba,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBC,WAAY,CAAC,CAAC3C,EAAK,GAAEL,EAAK,MAAO,CAACM,EAAK,GAAEN,EAAK,MAAO,CAACO,EAAK,GAAEP,EAAK,MAAO,CAACQ,EAAM,GAAER,EAAK,MAAO,CAACS,EAAM,GAAET,EAAK,OAC5GkD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAUjC,IAEN8C,GAAKlC,EAAAA,EAAAA,KAAe,CACxBC,EAAG,IACHC,EAAG,EACHC,IAAK7B,EACL8B,YAAa,IACbC,IAAK9B,EACL+B,UAAU,EACVC,UAAU,EACVC,MAAO,IACPwB,aAAc,KACdvB,YAAaZ,EACba,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBC,WAAY,CAAC,CAAC3C,EAAK,GAAEL,EAAK,MAAO,CAACQ,EAAM,GAAER,EAAK,MAAO,CAACS,EAAM,GAAET,EAAK,OACpEkD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAUjC,IAGZZ,GAAM+C,EAAAA,EAAAA,KAAoB,IAAbnD,EAAKJ,GAAY,GAC9BS,GAAM8C,EAAAA,EAAAA,KAAM,IAAK,GACjB7C,GAAM6C,EAAAA,EAAAA,KAAoB,IAAblD,EAAKL,GAAY,GAC9BW,GAAM4C,EAAAA,EAAAA,KAAM,KAAM,GAClBvC,GAAKwC,EAAAA,EAAAA,KAAQhD,EAAKC,GAClBQ,GAAKuC,EAAAA,EAAAA,KAAQ9C,EAAKC,GAClBK,EAAGyC,YAAa,EAChBxC,EAAGwC,YAAa,EAChB7C,GAAM2C,EAAAA,EAAAA,KAAM,IAAmB,KAAZjD,EAAMF,GAAW,GACpCS,GAAM0C,EAAAA,EAAAA,KAAM,IAAK,GACjBzC,GAAMyC,EAAAA,EAAAA,KAAM,IAAmB,KAAZhD,EAAMH,GAAW,GACpCW,GAAMwC,EAAAA,EAAAA,KAAM,KAAM,GAClBrC,GAAKsC,EAAAA,EAAAA,KAAQ5C,EAAKC,GAClBM,GAAKqC,EAAAA,EAAAA,KAAQ1C,EAAKC,GAClBG,EAAGuC,YAAa,EAChBtC,EAAGsC,YAAa,EAChBpC,EAAU,CAAErB,MAAO,IAAKE,KAAM,GAAIwD,MAAO,IAAKC,KAAM,IAAKC,YAAa,GAAIC,MAAO,IACjFvC,EAAO5B,KAAKqC,EAAIuB,EAAIY,EAAIlD,EAAIC,EAAIC,EAAIC,GAEtCtB,GAAQsE,EAAAA,EAAAA,KAAW9C,EAASC,GAE5BtF,KAAKQ,SAAWqD,EAChB7D,KAAKQ,SAAW,SAGpBR,KAAKkC,0BAA4B,CAAC,iBAAkB,EAAG","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/Profs/P004.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { randint, troncature, calcul, choisitLettresDifferentes } from '../../modules/outils.js'\nimport { point, segment, droiteGraduee2, mathalea2d } from '../../modules/2d.js'\n\nexport const titre = 'Droites graduées avec zoom'\n\n/**\n * Fonction permettant aux enseignants de proposer des feuilles à compléter pour la lecture d'abscisse décimale avec zoom\n * L'enseignant peut ajouter \"à la main\" les données qu'il souhaite\n * ref P004\n * @author Jean-Claude Lhote\n */\nexport default function FeuilleDeZooms () {\n  Exercice.call(this)\n  this.nbCols = 1\n  this.sup = 1\n  this.titre = titre\n\n  this.nouvelleVersion = function () {\n    this.contenu = ''\n    let texte = ''\n    const noms = choisitLettresDifferentes(5, 'QFN')\n    let xmin, origine, xmax, x1, x2, x3, x21, x31, pA1, pA2, pB1, pB2, pC1, pC2, pD1, pD2, sA, sB, sC, sD, extremite, fenetre\n    const objets = []\n    for (let n = 0; n < 8 / parseInt(this.sup); n++) {\n      objets.length = 0\n      if (parseInt(this.sup) === 1) {\n        xmin = randint(5, 10) - 0.2\n        origine = Math.round(xmin + 0.2)\n        const thickOff = 0.1\n        xmax = origine + 9.2\n\n        x1 = calcul(xmin + 0.2 + randint(1, 5) + randint(2, 8) / 10)\n        extremite = '->'\n\n        const d1 = droiteGraduee2({\n          x: 0,\n          y: 3,\n          Min: xmin,\n          axePosition: 'H',\n          Max: xmax + 0.2,\n          thickSec: true,\n          thickTer: false,\n          Unite: 3,\n          thickOffset: thickOff,\n          thickCouleur: 'black',\n          axeCouleur: 'black',\n          axeHauteur: 4,\n          labelsPrincipaux: false,\n          // labelListe: [[origine, `${texNombre(origine)}`], [extreme, `${texNombre(extreme)}`]],\n          pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n          pointTaille: 6,\n          pointOpacite: 0.8,\n          pointCouleur: 'blue',\n          pointStyle: '|',\n          pointEpaisseur: 2,\n          axeStyle: extremite\n        })\n        const d2 = droiteGraduee2({\n          x: Math.floor(x1) - xmin + 1.5,\n          y: 0,\n          Min: Math.floor(x1),\n          axePosition: 'H',\n          Max: Math.floor(x1 + 1),\n          thickSec: true,\n          thickTer: false,\n          Unite: 20,\n          thickOffset: thickOff,\n          thickCouleur: 'black',\n          axeCouleur: 'black',\n          axeHauteur: 4,\n          labelsPrincipaux: false,\n          pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n          pointTaille: 6,\n          pointOpacite: 0.8,\n          pointCouleur: 'blue',\n          pointStyle: '|',\n          pointEpaisseur: 2,\n          axeStyle: extremite\n        })\n\n        pA1 = point((Math.floor(x1) - xmin) * 3, 3)\n        pA2 = point(Math.floor(x1) - xmin + 1.5, 0)\n        pB1 = point((Math.floor(x1) + 1 - xmin) * 3, 3)\n        pB2 = point(Math.floor(x1) - xmin + 21.5, 0)\n        sA = segment(pA1, pA2)\n        sB = segment(pB1, pB2)\n        sA.pointilles = true\n        sB.pointilles = true\n        objets.push(d1, d2, sA, sB)\n        fenetre = { xmin: -1.5, xmax: 35, ymin: -1, ymax: 4.5, pixelsParCm: 25, scale: 0.5 }\n      } else {\n        xmin = randint(1, 15)\n        xmax = xmin + 1\n        x1 = calcul(xmin + randint(2, 8) / 10 + randint(2, 8) / 100 + randint(2, 8) * 0.001)\n        x2 = troncature(x1, 1)\n        x21 = troncature(x1, 2)\n        x3 = calcul(x2 + 0.1)\n        x31 = calcul(x21 + 0.01)\n        xmin = Math.floor(x2)\n        xmax = xmin + 1\n        const thickOff = 0.001\n\n        extremite = '->'\n        const d1 = droiteGraduee2({\n          x: 0,\n          y: 6,\n          Min: xmin,\n          axePosition: 'H',\n          Max: xmax,\n          thickSec: true,\n          thickTer: true,\n          Unite: 30,\n          thickDistance: 1,\n          thickSecDist: 0.1,\n          thickTerDist: 0.01,\n          thickOffset: thickOff,\n          thickCouleur: 'black',\n          axeCouleur: 'black',\n          axeHauteur: 6,\n          labelsPrincipaux: false,\n          pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n          pointTaille: 6,\n          pointOpacite: 0.8,\n          pointCouleur: 'blue',\n          pointStyle: '|',\n          pointEpaisseur: 3,\n          axeStyle: extremite\n        })\n        const d2 = droiteGraduee2({\n          x: 6.5,\n          y: 3,\n          Min: x2,\n          axePosition: 'H',\n          Max: x3,\n          thickSec: true,\n          thickTer: true,\n          Unite: 200,\n          thickSecDist: 0.01,\n          thickTerDist: 0.001,\n          thickDistance: 0.1,\n          thickOffset: thickOff,\n          thickCouleur: 'black',\n          axeCouleur: 'black',\n          axeHauteur: 6,\n          labelsPrincipaux: false,\n          pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n          pointTaille: 6,\n          pointOpacite: 0.8,\n          pointCouleur: 'blue',\n          pointStyle: '|',\n          pointEpaisseur: 2,\n          axeStyle: extremite\n        })\n        const d3 = droiteGraduee2({\n          x: 6.5,\n          y: 0,\n          Min: x21,\n          axePosition: 'H',\n          Max: x31,\n          thickSec: true,\n          thickTer: false,\n          Unite: 2000,\n          thickSecDist: 0.001,\n          thickOffset: thickOff,\n          thickCouleur: 'black',\n          axeCouleur: 'black',\n          axeHauteur: 6,\n          labelsPrincipaux: false,\n          pointListe: [[x1, `${noms[1]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n          pointTaille: 6,\n          pointOpacite: 0.8,\n          pointCouleur: 'blue',\n          pointStyle: '|',\n          pointEpaisseur: 2,\n          axeStyle: extremite\n        })\n\n        pA1 = point((x2 - xmin) * 30, 6)\n        pA2 = point(6.5, 3)\n        pB1 = point((x3 - xmin) * 30, 6)\n        pB2 = point(26.5, 3)\n        sA = segment(pA1, pA2)\n        sB = segment(pB1, pB2)\n        sA.pointilles = true\n        sB.pointilles = true\n        pC1 = point(6.5 + (x21 - x2) * 200, 3)\n        pC2 = point(6.5, 0)\n        pD1 = point(6.5 + (x31 - x2) * 200, 3)\n        pD2 = point(26.5, 0)\n        sC = segment(pC1, pC2)\n        sD = segment(pD1, pD2)\n        sC.pointilles = true\n        sD.pointilles = true\n        fenetre = { xmin: -1.5, xmax: 35, ymin: -1.5, ymax: 7.5, pixelsParCm: 25, scale: 0.5 }\n        objets.push(d1, d2, d3, sA, sB, sC, sD)\n      }\n      texte = mathalea2d(fenetre, objets)\n\n      this.contenu += texte\n      this.contenu += '<br>'\n    }\n  }\n  this.besoinFormulaireNumerique = ['Nombre de zoom', 2, '1 : Un seul zoom\\n2 : Deux niveaux de zoom']\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","FeuilleDeZooms","sup","texte","noms","choisitLettresDifferentes","xmin","origine","xmax","x1","x2","x3","x21","x31","pA1","pA2","pB1","pB2","pC1","pC2","pD1","pD2","sA","sB","sC","sD","extremite","fenetre","objets","n","parseInt","length","randint","Math","round","thickOff","calcul","d1","droiteGraduee2","x","y","Min","axePosition","Max","thickSec","thickTer","Unite","thickOffset","thickCouleur","axeCouleur","axeHauteur","labelsPrincipaux","pointListe","floor","pointTaille","pointOpacite","pointCouleur","pointStyle","pointEpaisseur","axeStyle","d2","point","segment","pointilles","ymin","ymax","pixelsParCm","scale","troncature","thickDistance","thickSecDist","thickTerDist","d3","mathalea2d"],"sourceRoot":""}