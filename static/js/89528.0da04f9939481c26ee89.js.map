{"version":3,"file":"js/89528.0da04f9939481c26ee89.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/2e/can2F10.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { listeQuestionsToContenu, ecritureAlgebrique, extraireRacineCarree, ecritureParentheseSiNegatif, texNombrec, miseEnEvidence, randint, sp, calcul, choice, texFractionReduite } from '../../../modules/outils.js'\nimport { propositionsQcm } from '../../../modules/gestionInteractif.js'\nexport const titre = 'Résoudre une équation avec une fonction de référence*'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '27/12/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence\n*/\nexport default function ResoudreEquationsFonctionDeReference2 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 1\n  this.tailleDiaporama = 1\n  this.spacing = 2\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let texte, texteCorr, k, b, c\n    switch (choice([1, 2, 3, 4, 5, 6])) {\n      case 1 :\n        b = randint(-5, 5, 0)\n        c = randint(-5, 5, 0)\n        k = calcul(c - b)\n        if (this.interactif) {\n          texte = `L'ensemble des solutions $S$ de l'équation $x^2${ecritureAlgebrique(b)}=${c}$ est :\n               `\n          if (k > 0) {\n            if (k === 1 || k === 4 || k === 9 || k === 16 || k === 25) {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\{-${extraireRacineCarree(k)[0]}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{${extraireRacineCarree(k)[0]}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            } else {\n              if (extraireRacineCarree(k)[1] === k) {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$S=\\\\{-\\\\sqrt{${c - b}}${sp(1)};${sp(1)}\\\\sqrt{${c - b}}\\\\}$`,\n                      statut: true\n                    },\n                    {\n                      texte: '$S=\\\\emptyset$',\n                      statut: false\n                    },\n                    {\n                      texte: `$S=\\\\{\\\\sqrt{${c - b}}\\\\}$`,\n                      statut: false\n                    }\n                  ]\n                }\n              } else {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$S=\\\\{-${Math.sqrt(k)};${Math.sqrt(k)}\\\\}$`,\n                      statut: true\n                    },\n                    {\n                      texte: `$S=\\\\{${Math.sqrt(k)}\\\\}$`,\n                      statut: false\n                    },\n                    {\n                      texte: `$S=\\\\{${k}\\\\}$`,\n                      statut: false\n                    }\n                  ]\n                }\n              }\n            }\n          }\n\n          if (k === 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\{0\\\\}$',\n                  statut: true\n                },\n                {\n                  texte: '$S=\\\\{1}\\\\}$',\n                  statut: false\n                },\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: false\n                }\n              ]\n            }\n          }\n          if (k < 0) {\n            if (k === -1 || k === -4 || k === -9 || k === -16 || k === -25) {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: true\n                  },\n                  {\n                    texte: `$S=\\\\{-${Math.sqrt(-k)};${Math.sqrt(-k)}\\\\}$`,\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{-${Math.sqrt(-k)}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            } else {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: true\n                  },\n                  {\n                    texte: `$S=\\\\{-\\\\sqrt{${-k}};\\\\sqrt{${-k}}\\\\}$`,\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{\\\\sqrt{${-k}}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            }\n          }\n\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `Résoudre dans $\\\\mathbb{R}$ :<br>\n      ${sp(50)} $x^2${ecritureAlgebrique(b)}=${c}$`\n        }\n\n        if (b > 0) {\n          texteCorr = `$\\\\begin{aligned}\n         x^2${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n         x^2${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n         x^2&=${c - b}\n         \\\\end{aligned}$`\n        } else {\n          texteCorr = `$\\\\begin{aligned}\n         x^2${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n         x^2${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n         x^2&=${c - b}\n         \\\\end{aligned}$`\n        }\n        if (k > 0) {\n          if (k === 1 || k === 4 || k === 9 || k === 16 || k === 25) {\n            texteCorr += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texNombrec(k)}}$ et $\\\\sqrt{${texNombrec(k)}}$.\n            <br> Comme $-\\\\sqrt{${texNombrec(k)}}=-${extraireRacineCarree(k)[0]}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}$ alors\n            les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}$ et $${extraireRacineCarree(k)[0]}$.<br>\n            Ainsi,  $S=\\\\{-${extraireRacineCarree(k)[0]}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\}$.`\n          } else {\n            if (extraireRacineCarree(k)[1] !== k) {\n              texteCorr += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texNombrec(k)}}$ et $\\\\sqrt{${texNombrec(k)}}$. <br>\n                Comme $-\\\\sqrt{${k}}=-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ alors\n                les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$.<br>\n                Ainsi,  $S=\\\\{-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}\\\\}$.`\n            } else {\n              texteCorr += `<br>L'équation est de la forme $x^2=k$ avec $k=${c - b}>0$,\n                donc l'équation a deux solutions : $-\\\\sqrt{${c - b}}$ et $\\\\sqrt{${c - b}}$.<br>\n                Ainsi,  $S=\\\\{-\\\\sqrt{${c - b}}${sp(1)};${sp(1)}\\\\sqrt{${c - b}}\\\\}$.`\n            }\n          }\n        }\n        if (k === 0) {\n          texteCorr += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}$, alors l'équation a une solution : $0$.<br>\n          Ainsi, $S=\\\\{0\\\\}$. `\n        }\n        if (k < 0) {\n          texteCorr += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(c - b)}$, alors l'équation n'a pas de solution.\n            <br>Ainsi, $S=\\\\emptyset$. `\n        }\n        break\n      case 2 :\n        b = randint(-5, 5, 0)\n        c = randint(-5, 5, 0)\n        k = calcul(b - c)\n        if (this.interactif) {\n          texte = `L'ensemble des solutions $S$ de l'équation $-x^2${ecritureAlgebrique(b)}=${c}$ est :\n         `\n          if (k > 0) {\n            if (k === 1 || k === 4 || k === 9 || k === 16 || k === 25) {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\{-${extraireRacineCarree(k)[0]}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{${extraireRacineCarree(k)[0]}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            } else {\n              if (extraireRacineCarree(k)[1] === k) {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$S=\\\\{-\\\\sqrt{${k}}${sp(1)};${sp(1)}\\\\sqrt{${k}}\\\\}$`,\n                      statut: true\n                    },\n                    {\n                      texte: '$S=\\\\emptyset$',\n                      statut: false\n                    },\n                    {\n                      texte: `$S=\\\\{\\\\sqrt{${k}}\\\\}$`,\n                      statut: false\n                    }\n                  ]\n                }\n              } else {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$S=\\\\{-${Math.sqrt(k)};${Math.sqrt(k)}\\\\}$`,\n                      statut: true\n                    },\n                    {\n                      texte: `$S=\\\\{${Math.sqrt(k)}\\\\}$`,\n                      statut: false\n                    },\n                    {\n                      texte: `$S=\\\\{${k}\\\\}$`,\n                      statut: false\n                    }\n                  ]\n                }\n              }\n            }\n          }\n\n          if (k === 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\{0\\\\}$',\n                  statut: true\n                },\n                {\n                  texte: '$S=\\\\{1}\\\\}$',\n                  statut: false\n                },\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: false\n                }\n              ]\n            }\n          }\n          if (k < 0) {\n            if (k === -1 || k === -4 || k === -9 || k === -16 || k === -25) {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: true\n                  },\n                  {\n                    texte: `$S=\\\\{-${Math.sqrt(-k)};${Math.sqrt(-k)}\\\\}$`,\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{-${Math.sqrt(-k)}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            } else {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: true\n                  },\n                  {\n                    texte: `$S=\\\\{-\\\\sqrt{${-k}};\\\\sqrt{${-k}}\\\\}$`,\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{\\\\sqrt{${-k}}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            }\n          }\n\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `Résoudre dans $\\\\mathbb{R}$ :<br>\n${sp(50)} $-x^2${ecritureAlgebrique(b)}=${c}$`\n        }\n\n        if (b > 0) {\n          texteCorr = `$\\\\begin{aligned}\n   -x^2${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n   -x^2${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n   x^2&=${b - c}\n   \\\\end{aligned}$`\n        } else {\n          texteCorr = `$\\\\begin{aligned}\n   -x^2${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n  - x^2${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n   x^2&=${b - c}\n   \\\\end{aligned}$`\n        }\n        if (k > 0) {\n          if (k === 1 || k === 4 || k === 9 || k === 16 || k === 25) {\n            texteCorr += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texNombrec(k)}}$ et $\\\\sqrt{${texNombrec(k)}}$.\n      <br> Comme $-\\\\sqrt{${texNombrec(k)}}=-${extraireRacineCarree(k)[0]}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}$ alors\n      les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}$ et $${extraireRacineCarree(k)[0]}$.<br>\n      Ainsi,  $S=\\\\{-${extraireRacineCarree(k)[0]}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\}$.`\n          } else {\n            if (extraireRacineCarree(k)[1] !== k) {\n              texteCorr += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}>0$, donc l'équation a deux solutions : $-\\\\sqrt{${texNombrec(k)}}$ et $\\\\sqrt{${texNombrec(k)}}$. <br>\n          Comme $-\\\\sqrt{${k}}=-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ alors\n          les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$.<br>\n          Ainsi,  $S=\\\\{-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}\\\\}$.`\n            } else {\n              texteCorr += `<br>L'équation est de la forme $x^2=k$ avec $k=${k}>0$,\n          donc l'équation a deux solutions : $-\\\\sqrt{${k}}$ et $\\\\sqrt{${k}}$.<br>\n          Ainsi,  $S=\\\\{-\\\\sqrt{${k}}${sp(1)};${sp(1)}\\\\sqrt{${k}}\\\\}$.`\n            }\n          }\n        }\n        if (k === 0) {\n          texteCorr += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}$, alors l'équation a une solution : $0$.<br>\n    Ainsi, $S=\\\\{0\\\\}$. `\n        }\n        if (k < 0) {\n          texteCorr += `<br>L'équation est de la forme $x^2=k$ avec $k=${texNombrec(k)}$, alors l'équation n'a pas de solution.\n      <br>Ainsi, $S=\\\\emptyset$. `\n        }\n        break\n\n      case 3 :\n        b = randint(-5, 5, 0)\n        c = randint(-5, 5)\n        k = calcul(c - b)\n        if (this.interactif) {\n          texte = `L'ensemble des solutions $S$ de l'équation $\\\\sqrt{x}${ecritureAlgebrique(b)}=${c}$ est :\n                     `\n          if (k > 0) {\n            if (k !== 1) {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\{${k ** 2}\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: `$S=\\\\{${2 * k}\\\\}$`,\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{${k}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            } else {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\{${k}\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{${2 * k}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            }\n          }\n\n          if (k < 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: true\n                },\n                {\n                  texte: `$S=\\\\{\\\\sqrt{${-k}}\\\\}$`,\n                  statut: false\n                },\n                {\n                  texte: `$S=\\\\{${k ** 2}\\\\}$`,\n                  statut: false\n                }\n              ]\n            }\n          }\n          if (k === 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\{0\\\\}$',\n                  statut: true\n                },\n                {\n                  texte: `$S=\\\\{${k + 1}\\\\}$`,\n                  statut: false\n                },\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: false\n                }\n              ]\n            }\n          }\n\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `Résoudre dans $[0${sp(1)};${sp(1)}+\\\\infty[$ :<br>\n            ${sp(50)} $\\\\sqrt{x}${ecritureAlgebrique(b)}=${c}$`\n        }\n        if (b > 0) {\n          texteCorr = `On isole $\\\\sqrt{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\sqrt{x}=k$.<br>\n            $\\\\begin{aligned}\n            \\\\sqrt{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n            \\\\sqrt{x}${ecritureAlgebrique(b)}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n            \\\\sqrt{x}&=${c - b}\n                           \\\\end{aligned}$<br>`\n        } else {\n          texteCorr = `On isole $\\\\sqrt{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\sqrt{x}=k$.<br>\n                           $\\\\begin{aligned}\n                           \\\\sqrt{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n                           \\\\sqrt{x}${ecritureAlgebrique(b)}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n                           \\\\sqrt{x}&=${c - b}\n                                          \\\\end{aligned}$<br>`\n        }\n        if (c - b < 0) {\n          texteCorr += `L'équation est de la forme $\\\\sqrt{x}=k$ avec $k=${k}$. Comme $${k}<0$ alors l'équation n'admet pas de solution. <br>\nAinsi,   $S=\\\\emptyset$.<br>\n`\n        }\n        if (c - b > 0 || c - b === 0) {\n          texteCorr += `L'équation est de la forme $\\\\sqrt{x}=k$ avec $k=${c - b}$. Comme $${c - b}\\\\geqslant 0$ alors l'équation admet une solution : $${k}^2=${k ** 2}$.<br>\nAinsi $S=\\\\{${k ** 2}\\\\}$.\n`\n        }\n        break\n      case 4 :\n        b = randint(-5, 5, 0)\n        c = randint(-5, 5)\n        k = calcul(b - c)\n        if (this.interactif) {\n          texte = `L'ensemble des solutions $S$ de l'équation $${b}-\\\\sqrt{x}=${c}$ est :\n                         `\n          if (k > 0) {\n            if (k !== 1) {\n              if (k === 2) {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$S=\\\\{${k ** 2}\\\\}$`,\n                      statut: true\n                    },\n                    {\n                      texte: '$S=\\\\emptyset$',\n                      statut: false\n                    },\n                    {\n                      texte: `$S=\\\\{${k}\\\\}$`,\n                      statut: false\n                    }\n                  ]\n                }\n              } else {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$S=\\\\{${k ** 2}\\\\}$`,\n                      statut: true\n                    },\n                    {\n                      texte: `$S=\\\\{${2 * k}\\\\}$`,\n                      statut: false\n                    },\n                    {\n                      texte: `$S=\\\\{${k}\\\\}$`,\n                      statut: false\n                    }\n                  ]\n                }\n              }\n            } else {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\{${k}\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{${2 * k}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            }\n          }\n\n          if (k < 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: true\n                },\n                {\n                  texte: `$S=\\\\{\\\\sqrt{${-k}}\\\\}$`,\n                  statut: false\n                },\n                {\n                  texte: `$S=\\\\{${k ** 2}\\\\}$`,\n                  statut: false\n                }\n              ]\n            }\n          }\n          if (k === 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\{0\\\\}$',\n                  statut: true\n                },\n                {\n                  texte: `$S=\\\\{${k + 1}\\\\}$`,\n                  statut: false\n                },\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: false\n                }\n              ]\n            }\n          }\n\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `Résoudre dans $[0${sp(1)};${sp(1)}+\\\\infty[$ :<br>\n                ${sp(50)} $-\\\\sqrt{x}${ecritureAlgebrique(b)}=${c}$`\n        }\n        if (b > 0) {\n          texteCorr = `On isole $\\\\sqrt{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\sqrt{x}=k$.<br>\n                $\\\\begin{aligned}\n                ${b}-\\\\sqrt{x}&=${c}\\\\\\\\\n                ${b}-\\\\sqrt{x}-${miseEnEvidence(b)}&=${c}-${miseEnEvidence(b)}\\\\\\\\\n                -\\\\sqrt{x}&=${c - b}\\\\\\\\\n                \\\\sqrt{x}&=${b - c}\n                               \\\\end{aligned}$<br>`\n        } else {\n          texteCorr = `On isole $\\\\sqrt{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\sqrt{x}=k$.<br>\n                               $\\\\begin{aligned}\n                               ${b}-\\\\sqrt{x}&=${c}\\\\\\\\\n                               ${b}-\\\\sqrt{x}+${miseEnEvidence(-b)}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n                               -\\\\sqrt{x}&=${c - b}\\\\\\\\\n                               \\\\sqrt{x}&=${b - c}\n                                              \\\\end{aligned}$<br>`\n        }\n        if (k < 0) {\n          texteCorr += `L'équation est de la forme $\\\\sqrt{x}=k$ avec $k=${k}$. Comme $${k}<0$ alors l'équation n'admet pas de solution. <br>\nAinsi,   $S=\\\\emptyset$.<br>\n`\n        }\n        if (k > 0 || k === 0) {\n          texteCorr += `L'équation est de la forme $\\\\sqrt{x}=k$ avec $k=${b - c}$. Comme $${b - c}\\\\geqslant0$ alors l'équation admet une solution : $${k}^2=${k ** 2}$.<br>\n   Ainsi $S=\\\\{${k ** 2}\\\\}$.\n  `\n        }\n        break\n      case 5 :\n        b = randint(-10, 10, 0)\n        c = randint(-10, 10)\n        k = c - b\n        if (this.interactif) {\n          texte = `L'ensemble des solutions $S$ de l'équation $\\\\dfrac{1}{x}${ecritureAlgebrique(b)}=${c}$ est :\n                       `\n          if (k !== 0) {\n            if (k === 1) {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: `$S=\\\\left\\\\{${texFractionReduite(1, -k)}\\\\right\\\\}$`,\n                    statut: false\n                  },\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: false\n                  }\n                ]\n              }\n            } else {\n              if (k === -1) {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$`,\n                      statut: true\n                    },\n                    {\n                      texte: `$S=\\\\left\\\\{${texFractionReduite(1, -k)}\\\\right\\\\}$`,\n                      statut: false\n                    },\n                    {\n                      texte: '$S=\\\\emptyset$',\n                      statut: false\n                    }\n                  ]\n                }\n              } else {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$`,\n                      statut: true\n                    },\n                    {\n                      texte: `$S=\\\\left\\\\{${texFractionReduite(1, -k)}\\\\right\\\\}$`,\n                      statut: false\n                    },\n                    {\n                      texte: `$S=\\\\left\\\\{${k}\\\\right\\\\}$`,\n                      statut: false\n                    }\n                  ]\n                }\n              }\n            }\n          }\n\n          if (k === 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: true\n                },\n                {\n                  texte: '$S=\\\\left\\\\{0\\\\right\\\\}$',\n                  statut: false\n                },\n                {\n                  texte: '$S=\\\\left\\\\{-1\\\\right\\\\}$',\n                  statut: false\n                }\n              ]\n            }\n          }\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `\n                     Résoudre dans $\\\\mathbb{R}^*$ :<br>\n                    ${sp(50)} $\\\\dfrac{1}{x}${ecritureAlgebrique(b)}=${c}$`\n        }\n\n        texteCorr = `On isole $\\\\dfrac{1}{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\dfrac{1}{x}=k$.<br>\n            $\\\\begin{aligned}\n            \\\\dfrac{1}{x}${ecritureAlgebrique(b)}&=${c}\\\\\\\\\n            \\\\dfrac{1}{x}${ecritureAlgebrique(b)}+${ecritureParentheseSiNegatif(miseEnEvidence(-b))}&=${c}+${miseEnEvidence(-b)}\\\\\\\\\n            \\\\dfrac{1}{x}&=${c - b}\n                                        \\\\end{aligned}$<br>`\n\n        if (k === 0) {\n          texteCorr += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Donc l'équation n'admet pas de solution.<br>\nAinsi,   $S=\\\\emptyset$.\n`\n        }\n        if (k !== 0) {\n          texteCorr += `$k=${k}$ et $${k}\\\\neq 0$, donc l'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Donc l'équation admet une solution :\n$${texFractionReduite(1, k)}$.<br>\nAinsi $S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$.\n`\n        }\n\n        break\n      case 6 :\n        b = randint(-10, 10, 0)\n        c = randint(-10, 10)\n        k = b - c\n        if (this.interactif) {\n          texte = `L'ensemble des solutions $S$ de l'équation $${b}-\\\\dfrac{1}{x}=${c}$ est :\n                           `\n          if (k !== 0) {\n            if (k === 1) {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: `$S=\\\\left\\\\{${texFractionReduite(1, -k)}\\\\right\\\\}$`,\n                    statut: false\n                  },\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: false\n                  }\n                ]\n              }\n            } else {\n              if (k === -1) {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$`,\n                      statut: true\n                    },\n                    {\n                      texte: `$S=\\\\left\\\\{${texFractionReduite(1, -k)}\\\\right\\\\}$`,\n                      statut: false\n                    },\n                    {\n                      texte: '$S=\\\\emptyset$',\n                      statut: false\n                    }\n                  ]\n                }\n              } else {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$`,\n                      statut: true\n                    },\n                    {\n                      texte: `$S=\\\\left\\\\{${texFractionReduite(1, -k)}\\\\right\\\\}$`,\n                      statut: false\n                    },\n                    {\n                      texte: `$S=\\\\left\\\\{${k}\\\\right\\\\}$`,\n                      statut: false\n                    }\n                  ]\n                }\n              }\n            }\n          }\n\n          if (k === 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: true\n                },\n                {\n                  texte: '$S=\\\\left\\\\{0\\\\right\\\\}$',\n                  statut: false\n                },\n                {\n                  texte: '$S=\\\\left\\\\{-1\\\\right\\\\}$',\n                  statut: false\n                }\n              ]\n            }\n          }\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `\n                         Résoudre dans $\\\\mathbb{R}^*$ :<br>\n                        ${sp(50)} $${b}-\\\\dfrac{1}{x}=${c}$`\n        }\n\n        texteCorr = `On isole $\\\\dfrac{1}{x}$ dans le membre de gauche pour obtenir une équation du type $\\\\dfrac{1}{x}=k$.<br>\n                $\\\\begin{aligned}\n                ${b}-\\\\dfrac{1}{x}&=${c}\\\\\\\\\n                ${b}-\\\\dfrac{1}{x}+${ecritureParentheseSiNegatif(miseEnEvidence(-b))}&=${c}+${ecritureParentheseSiNegatif(miseEnEvidence(-b))}\\\\\\\\\n                \\\\dfrac{1}{x}&=${b - c}\n                                            \\\\end{aligned}$<br>`\n\n        if (k === 0) {\n          texteCorr += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Donc l'équation n'admet pas de solution.<br>\n    Ainsi,   $S=\\\\emptyset$.\n    `\n        }\n        if (k !== 0) {\n          texteCorr += `$k=${k}$ et $${k}\\\\neq 0$, donc l'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Donc l'équation admet une solution :\n    $${texFractionReduite(1, k)}$.<br>\n    Ainsi $S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$.\n    `\n        }\n\n        break\n    }\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","dateDePublication","ResoudreEquationsFonctionDeReference2","texte","texteCorr","k","b","c","choice","randint","calcul","ecritureAlgebrique","enonce","options","horizontal","propositions","extraireRacineCarree","sp","statut","Math","sqrt","propositionsQcm","miseEnEvidence","texNombrec","texFractionReduite","ecritureParentheseSiNegatif","listeQuestionsToContenu"],"sourceRoot":""}