{"version":3,"file":"js/36988.fefa97f96d6d9da23918.js","mappings":"gLAEO,MAAMA,EAAQ,gDAON,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,SAAW,aAChBD,KAAKE,YAAc,EACnBF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAElBJ,KAAKK,gBAAkB,WACrBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKQ,eAAiB,GACtB,MAAMC,GAAuBC,EAAAA,EAAAA,KAC3B,CACE,KACA,aACA,SACA,SACA,aACA,UACA,UACA,qBACA,aAEFV,KAAKE,aAEP,IACE,IAAWS,EAAOC,EAAdC,EAAI,EAAqBC,EAAM,EACnCD,EAAIb,KAAKE,aAAeY,EAAM,IAE9B,CACA,OAAQL,EAAqBI,IAC3B,IAAK,KACHF,EAAQ,2CACRC,EAAY,oDACZ,MACF,IAAK,aACHD,EAAQ,gDACRC,EACE,uFACFA,GAAa,uDACb,MACF,IAAK,SACHD,EAAQ,4CACRC,EACE,2DACFA,GAAa,yCACb,MACF,IAAK,aACHD,EAAQ,6CACRC,EAAY,wDACZA,GAAa,uDACb,MACF,IAAK,SACHD,EAAQ,yCACRC,EAAY,wDACZA,GAAa,yCACb,MACF,IAAK,qBACHD,EAAQ,sDACRC,EACE,+FACFA,GACE,4DACF,MACF,IAAK,YACHD,EAAQ,yDACRC,EACE,+FACFA,GACE,sFACF,MACF,IAAK,UACHD,EACE,+EACFC,EACE,6FACFA,GAAa,qDACb,MACF,IAAK,UACHD,EAAQ,4CACRC,EACE,yEACFA,GAAa,mCAI2B,IAAxCZ,KAAKM,eAAeS,QAAQJ,KAE9BX,KAAKM,eAAeU,KAAKL,GACzBX,KAAKO,iBAAiBS,KAAKJ,GAC3BC,KAEFC,KAEFG,EAAAA,EAAAA,KAAwBjB,S,gBClGb,SAASD,IAItBC,KAAKH,MAAQ,GACbG,KAAKkB,YAAa,EAclBlB,KAAKC,SAAW,GAChBD,KAAKmB,mBAAqB,GAC1BnB,KAAKoB,aAAe,GACpBpB,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKqB,QAAU,GACfrB,KAAKsB,kBAAoB,GACzBtB,KAAKQ,eAAiB,GACtBR,KAAKuB,sBAAwB,GAK7BvB,KAAKwB,QAAU,EACfxB,KAAKyB,YAAc,EAKnBzB,KAAK0B,mBAAoB,EACzB1B,KAAK2B,cAAgB,GACrB3B,KAAK4B,oBAAqB,EAC1B5B,KAAK6B,uBAAwB,EAC7B7B,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAK8B,kBAAmB,EACxB9B,KAAK+B,sBAAuB,EAC5B/B,KAAKgC,mBAAoB,EACzBhC,KAAKiC,uBAAwB,EAM7BjC,KAAKkC,QAAS,EACdlC,KAAKmC,gBAAkB,EAKvBnC,KAAKE,YAAc,GACnBF,KAAKoC,mBAAqB,EAC1BpC,KAAKqC,+BAAgC,EACrCrC,KAAKsC,qBAAsB,EAC3BtC,KAAKuC,oBAAqB,EAC1BvC,KAAKwC,MAAQ,GAEbxC,KAAKyC,YAAa,EAClBzC,KAAK0C,uBAAwB,EAE7B1C,KAAK2C,2BAA4B,EACjC3C,KAAK4C,uBAAwB,EAC7B5C,KAAK6C,6BAA8B,EAEnC7C,KAAK8C,4BAA6B,EAClC9C,KAAK+C,wBAAyB,EAC9B/C,KAAKgD,8BAA+B,EAEpChD,KAAKiD,4BAA6B,EAClCjD,KAAKkD,wBAAyB,EAC9BlD,KAAKmD,8BAA+B,EAEpCnD,KAAKoD,4BAA6B,EAClCpD,KAAKqD,wBAAyB,EAC9BrD,KAAKsD,8BAA+B,EAMpCtD,KAAKuD,cAAe,EASpBvD,KAAKwD,eAAiB,GAMtBxD,KAAKK,gBAAkB,SAAUoD,KAQjCzD,KAAK0D,oBAAsB,SAAU7C,KAAM8C,GAC/B,IAAN9C,IAASb,KAAKwD,eAAiB,IACnC,IAAII,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAI/D,KAAKwD,eAAezC,QAAQ6C,IAAmB,KAGjD5D,KAAKwD,eAAexC,KAAK4C,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/6e/6M25.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes } from '../../modules/outils.js'\nexport const titre = 'Connaître le cours sur le périmètre et l’aire'\n\n/**\n * Citer des formules de périmètre, des formules d'aire ou la définition de π\n * @author Rémi Angot\n * Référence 6M25\n */\nexport default function ConnaitreFormulesDePerimetreEtAires () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Calculer :'\n  this.nbQuestions = 4\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const listeTypeDeQuestions = combinaisonListes(\n      [\n        'pi',\n        'prectangle',\n        'pcarre',\n        'acarre',\n        'arectangle',\n        'pcercle',\n        'acercle',\n        'atrianglerectangle',\n        'atriangle'\n      ],\n      this.nbQuestions\n    )\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (listeTypeDeQuestions[i]) {\n        case 'pi':\n          texte = 'Rappeler la définition du nombre $\\\\pi$.'\n          texteCorr = \"$\\\\pi$ est la longueur d'un cercle de diamètre 1.\"\n          break\n        case 'prectangle':\n          texte = 'Donner une formule du périmètre du rectangle.'\n          texteCorr =\n            '$\\\\mathcal{P}_{\\\\text{rectangle}}=(L+l)\\\\times2=L\\\\times2+l\\\\times2=L+l+L=l$<br><br>'\n          texteCorr += 'Avec $L$ la longueur et $l$ la largeur du rectangle.'\n          break\n        case 'pcarre':\n          texte = 'Donner une formule du périmètre du carré.'\n          texteCorr =\n            '$\\\\mathcal{P}_{\\\\text{carré}}=c\\\\times4=c+c+c+c$<br><br>'\n          texteCorr += 'Avec $c$ la longueur du côté du carré.'\n          break\n        case 'arectangle':\n          texte = \"Donner une formule de l'aire du rectangle.\"\n          texteCorr = '$\\\\mathcal{A}_{\\\\text{rectangle}}=L\\\\times l$<br><br>'\n          texteCorr += 'Avec $L$ la longueur et $l$ la largeur du rectangle.'\n          break\n        case 'acarre':\n          texte = \"Donner une formule de l'aire du carré.\"\n          texteCorr = '$\\\\mathcal{A}_{\\\\text{carré}}=c\\\\times c=c^2$<br><br>'\n          texteCorr += 'Avec $c$ la longueur du côté du carré.'\n          break\n        case 'atrianglerectangle':\n          texte = \"Donner une formule de l'aire du triangle rectangle.\"\n          texteCorr =\n            '$\\\\mathcal{A}_{\\\\text{triangle rectangle}}=a\\\\times b \\\\div2=\\\\dfrac{a\\\\times b}{2}$<br><br>'\n          texteCorr +=\n            \"Avec $a$ et $b$ les longueurs des côtés de l'angle droit.\"\n          break\n        case 'atriangle':\n          texte = \"Donner une formule de l'aire d'un triangle quelconque.\"\n          texteCorr =\n            '$\\\\mathcal{A}_{\\\\text{triangle rectangle}}=b\\\\times h \\\\div2=\\\\dfrac{b\\\\times h}{2}$<br><br>'\n          texteCorr +=\n            \"Avec $b$ la longueur d'un côté et $h$ la longueur de la hauteur relative à ce côté.\"\n          break\n        case 'pcercle':\n          texte =\n            \"Donner une formule de la longueur d'un cercle (aussi appelée circonférence).\"\n          texteCorr =\n            '$\\\\mathcal{P}_{\\\\text{cercle}}=D\\\\times \\\\pi = 2\\\\times R \\\\times \\\\pi = 2\\\\pi{}R$<br><br>'\n          texteCorr += 'Avec $D$ le diamètre et $R$ le rayon de ce cercle.'\n          break\n        case 'acercle':\n          texte = \"Donner une formule de l'aire d'un disque.\"\n          texteCorr =\n            '$\\\\mathcal{A}_{\\\\text{disque}}=R\\\\times R\\\\times\\\\pi=\\\\pi R^2$<br><br>'\n          texteCorr += 'Avec $R$ le rayon de ce disque.'\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ConnaitreFormulesDePerimetreEtAires","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}