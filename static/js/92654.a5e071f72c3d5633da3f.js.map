{"version":3,"file":"js/92654.a5e071f72c3d5633da3f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/2e/can2F01.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport {\n  randint, calcul, choice, ecritureParentheseSiNegatif, texNombrec,\n  ecritureAlgebrique, rienSi1, texteEnCouleur\n} from '../../../modules/outils.js'\nexport const titre = 'Calculer une image avec le second degré'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence can2F01\n * Date de publication\n*/\nexport default function CalculImageSecondDegre () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.typeExercice = 'simple' // Cette ligne est très importante pour faire faire un exercice simple !\n  this.formatChampTexte = 'largeur15 inline'\n  this.nbQuestions = 1\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n\n  this.nouvelleVersion = function () {\n    let x, a, b, c, d, expression\n    switch (choice(['a', 'b', 'c', 'd'])) { //,\n      case 'a':\n        x = randint(1, 4)\n        a = randint(1, 2)\n        b = randint(1, 2)\n        c = randint(2, 5)\n\n        expression = `${rienSi1(a)}x^2+${rienSi1(b)}x+${c}`\n        this.question = `On considère la fonction $f$ définie par $f(x)= ${expression}$. <br>\n    Calculer $f(${x})$.`\n\n        if (a === 1 & b !== 1) {\n          this.correction = `$f(${x})=\n          ${x}^2+${b}\\\\times ${ecritureParentheseSiNegatif(x)}+${c}=\n          ${x * x}${ecritureAlgebrique(b * x)}+${c}=\n          ${a * x * x}${ecritureAlgebrique(b * x)}+${c}=\n          ${a * x * x + b * x + c}$<br>`\n          this.correction += texteEnCouleur(` Mentalement : <br>\n          On commence par calculer le carré de $${x}$, soit $${x}^2=${texNombrec(x ** 2)}$. <br>\n   On calcule $${b}\\\\times ${x}$ que l'on ajoute à $${texNombrec(a * x ** 2)}$, soit $${a * x ** 2}+${b * x}=${a * x ** 2 + b * x}$.<br>\n  Pour finir, on ajoute   $${c}$, ce qui donne $${texNombrec(a * x ** 2 + b * x)}+${c}$, soit $${texNombrec(a * x ** 2 + b * x + c)}$.<br>\n    `)\n        }\n        if (a !== 1 & b !== 1) {\n          this.correction = `$f(${x})=\n          ${a}\\\\times${x}^2+${b}\\\\times ${x}+${c}=\n          ${a}\\\\times ${x * x}${ecritureAlgebrique(b * x)}+${c}=\n          ${a * x * x}${ecritureAlgebrique(b * x)}+${c}=\n          ${a * x * x + b * x + c}$<br>`\n          this.correction += texteEnCouleur(` Mentalement : <br>\n              On commence par calculer le carré de $${x}$, soit $${x}^2=${texNombrec(x ** 2)}$. <br>\n     On multiplie ensuite cette valeur par le coefficient devant $x^2$, soit $${a}\\\\times ${texNombrec(x ** 2)}=${texNombrec(a * x ** 2)}$.<br>\n      On calcule $${b}\\\\times ${x}$ que l'on ajoute à $${texNombrec(a * x ** 2)}$, soit $${a * x ** 2}+${b * x}=${a * x ** 2 + b * x}$.<br>\n      Pour finir, on ajoute   $${c}$, ce qui donne $${texNombrec(a * x ** 2 + b * x)}+${c}$, soit $${texNombrec(a * x ** 2 + b * x + c)}$.<br>\n        `)\n        }\n        if (a === 1 & b === 1) {\n          this.correction = `$f(${x})=\n          ${x}^2+ ${x}+${c}=\n          ${x * x}+${x}+${c}=\n          ${x * x}${ecritureAlgebrique(b * x)}+${c}=\n          ${x * x + b * x + c}$<br>`\n          this.correction += texteEnCouleur(` Mentalement : <br>\n          On commence par calculer le carré de $${x}$, soit $${x}^2=${texNombrec(x ** 2)}$. <br>\n   On ajoute  $${x}$ soit $${a * x ** 2}+${x}=${x ** 2 + b * x}$.<br>\n  Pour finir, on ajoute   $${c}$, ce qui donne $${texNombrec(a * x ** 2 + b * x)}+${c}$, soit $${texNombrec(a * x ** 2 + b * x + c)}$.<br>\n    `)\n        }\n        if (a !== 1 & b === 1) {\n          this.correction = `$f(${x})=\n          ${a}\\\\times${x}^2+${b}\\\\times ${ecritureParentheseSiNegatif(x)}+${c}=\n          ${a}\\\\times ${x * x}${ecritureAlgebrique(b * x)}=\n          ${a * x * x}${ecritureAlgebrique(b * x)}+${c}=\n          ${a * x * x + b * x + c}$<br>`\n          this.correction += texteEnCouleur(` Mentalement : <br>\n          On commence par calculer le carré de $${x}$, soit $${x}^2=${texNombrec(x ** 2)}$. <br>\n On multiplie ensuite cette valeur par le coefficient devant $x^2$, soit $${a}\\\\times ${texNombrec(x ** 2)}=${texNombrec(a * x ** 2)}$.<br>\n On ajoute  $${x}$ soit $${a * x ** 2}+${x}=${a * x ** 2 + b * x}$.<br>\n  Pour finir, on ajoute   $${c}$, ce qui donne $${texNombrec(a * x ** 2 + b * x)}+${c}$, soit $${texNombrec(a * x ** 2 + b * x + c)}$.<br>\n    `)\n        }\n        this.reponse = calcul(a * x * x + b * x + c)\n        break\n      case 'b':\n        a = randint(1, 3)\n        b = randint(-2, 2, [0])\n        c = randint(1, 3)\n        d = randint(-3, 3, [0, b])\n        x = randint(-3, 3, [0])\n\n        expression = `(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(c)}x${ecritureAlgebrique(d)})`\n        this.question = `On considère la fonction $f$ définie par $f(x)= ${expression}$. <br>\n          Calculer $f(${x})$.`\n        if (a === 1 & c === 1) {\n          this.correction = `$f(${x})=\\\\left(${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(d)}\\\\right)=(${a * x}${ecritureAlgebrique(b)})(${c * x}${ecritureAlgebrique(d)})=\n          ${a * x + b}\\\\times${ecritureParentheseSiNegatif(c * x + d)}=${(a * x + b) * (c * x + d)}$<br>`\n          this.reponse = calcul((a * x + b) * (c * x + d))\n          this.correction += texteEnCouleur(` Mentalement : <br>\n          On commence par \"calculer\" la première parenthèse :  $${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}=${a * x + b}$.<br>\n           Puis la deuxième : $${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(d)}=${c * x + d}$.<br>\n        On fait le produit des nombres obtenus : $${a * x + b}\\\\times ${c * x + d}=${(a * x + b) * (c * x + d)}$.\n    `)\n        }\n        if (a !== 1 & c !== 1) {\n          this.correction = `$f(${x})=\\\\left(${rienSi1(a)}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${c}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(d)}\\\\right)=(${a * x}${ecritureAlgebrique(b)})(${c * x}${ecritureAlgebrique(d)})=\n        ${a * x + b}\\\\times${ecritureParentheseSiNegatif(c * x + d)}=${(a * x + b) * (c * x + d)}$<br>`\n          this.reponse = calcul((a * x + b) * (c * x + d))\n          this.correction += texteEnCouleur(` Mentalement : <br>\n        On commence par \"calculer\" la première parenthèse :  $${rienSi1(a)}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}=${a * x + b}$.\n        <br>Puis la deuxième : $${c}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(d)}=${c * x + d}$.<br>\n        On fait le produit des nombres obtenus : $${a * x + b}\\\\times ${ecritureParentheseSiNegatif(c * x + d)}=${(a * x + b) * (c * x + d)}$.\n    `)\n        }\n        if (a === 1 & c !== 1) {\n          this.correction = `$f(${x})=\\\\left(${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${c}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(d)}\\\\right)=(${a * x}${ecritureAlgebrique(b)})(${c * x}${ecritureAlgebrique(d)})=\n        ${a * x + b}\\\\times${ecritureParentheseSiNegatif(c * x + d)}=${(a * x + b) * (c * x + d)}$<br>`\n          this.reponse = calcul((a * x + b) * (c * x + d))\n          this.correction += texteEnCouleur(` Mentalement : <br>\n        On commence par \"calculer\" la première parenthèse :  $${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}=${a * x + b}$.\n        <br>Puis la deuxième : $${c}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(d)}=${c * x + d}$.<br>\n        On fait le produit des nombres obtenus : $${a * x + b}\\\\times ${c * x + d}=${(a * x + b) * (c * x + d)}$.\n    `)\n        }\n        if (a !== 1 & c === 1) {\n          this.correction = `$f(${x})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(d)}\\\\right)=(${a * x}${ecritureAlgebrique(b)})(${c * x}${ecritureAlgebrique(d)})=\n        ${a * x + b}\\\\times${ecritureParentheseSiNegatif(c * x + d)}=${(a * x + b) * (c * x + d)}$<br>`\n          this.reponse = calcul((a * x + b) * (c * x + d))\n          this.correction += texteEnCouleur(` Mentalement : <br>\n        On commence par \"calculer\" la première parenthèse :  $${a}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}=${a * x + b}$.\n        <br>Puis la deuxième : $${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(d)}=${c * x + d}$.<br>\n        On fait le produit des nombres obtenus : $${a * x + b}\\\\times ${ecritureParentheseSiNegatif(c * x + d)}=${(a * x + b) * (c * x + d)}$.\n    `)\n        }\n        break\n      case 'c':\n        a = randint(-3, 3, 0)\n        b = randint(1, 3)\n        x = randint(-3, 3, [0])\n\n        expression = `${a}-${rienSi1(b)}x^2`\n        this.question = `On considère la fonction $f$ définie par $f(x)= ${expression}$. <br>\n          Calculer $f(${x})$.`\n\n        this.correction = `$f(${x})=${a}- ${ecritureParentheseSiNegatif(x)}^2=${a - b * x * x}$.<br>`\n        this.reponse = calcul(a - b * x * x)\n        if (b === 1) {\n          this.correction += texteEnCouleur(` Mentalement : <br>\n          On commence par \"calculer\" le carré de $${x}$ :  $${ecritureParentheseSiNegatif(x)}^2=${x * x}$.<br>\n          On calcule alors $${a}-${x * x}=${a - x * x}$.<br>\n    `)\n        } else {\n          this.correction = `$f(${x})=${a}- ${b}\\\\times ${ecritureParentheseSiNegatif(x)}^2=${a - b * x * x}$.<br>`\n          this.correction += texteEnCouleur(` Mentalement : <br>\n    On commence par \"calculer\" le carré de $${x}$ :  $${ecritureParentheseSiNegatif(x)}^2=${x * x}$.<br>\n    Puis on multiplie le résultat par $${b}$ : $${b}\\\\times ${x ** 2}=${b * x * x}$.<br>\n    On calcule alors : $${a}-${b * x * x}=${a - b * x * x}$.`)\n        }\n        break\n      case 'd':\n        a = randint(-4, 4, [0, -1, 1])\n        b = randint(-4, 4, [0])\n        c = randint(-4, 4, [0, -1, 1])\n        d = randint(-4, 4, [0])\n        x = randint(-2, 2, [0])\n\n        expression = `(${a}x${ecritureAlgebrique(b)})^2`\n        this.question = `On considère la fonction $f$ définie par $f(x)= ${expression}$. <br>\n        Calculer $f(${x})$.`\n\n        this.correction = `$f(${x})=\n        \\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}\\\\right)^2=\n        (${a * x}${ecritureAlgebrique(b)})^2=${ecritureParentheseSiNegatif(a * x + b)}^2\n        =${(a * x + b) * (a * x + b)}$. <br>`\n        this.reponse = calcul(a * x + b) * (a * x + b)\n\n        this.correction += texteEnCouleur(` Mentalement : <br>\n          On commence par \"calculer\" l'intérieur de la parenthèse, puis on élève le résultat au carré. \n    `)\n\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","CalculImageSecondDegre","typeExercice","formatChampTexte","x","a","b","c","d","expression","choice","randint","rienSi1","question","correction","ecritureParentheseSiNegatif","ecritureAlgebrique","texteEnCouleur","texNombrec","reponse","calcul"],"sourceRoot":""}