{"version":3,"file":"js/33531.c25e2396806958f251c2.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/CM/CM018.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes } from '../../modules/outils.js'\nexport const titre = 'Somme de deux nombres mariés et un entier'\nexport const amcReady = true\nexport const interactifReady = true\nexport const interactifType = 'numerique'\nexport const amcType = 'AMCNum'\n\n/**\n * Somme de 3 nombres dont 2 ont des chiffres des unités compléments à 10\n * @author Rémi Angot\n * Référence CM018\n*/\nexport default function SommeDeDeuxNombresMariesEtUnEntier () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Calculer'\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = [1, 2]\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (\n      let i = 0, texte, texteCorr, a, b, c, u1, u2, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      u1 = randint(1, 9)\n      u2 = 10 - u1\n      a = randint(1, 4) * 10 + u1\n      b = randint(1, 4) * 10 + u2\n      c = randint(1, 100 - a - b)\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte = `$${a}+${b}+${c}=$`\n          texteCorr = `$${a}+${b}+${c}=${a + b + c}$`\n          break\n        case 2:\n          texte = `$${a}+${c}+${b}=$`\n          texteCorr = `$${a}+${c}+${b}=${a + b + c}$`\n          break\n      }\n      setReponse(this, i, a + b + c)\n      if (this.interactif) texte += ajouteChampTexte(this, i)\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","interactifReady","interactifType","amcType","SommeDeDeuxNombresMariesEtUnEntier","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","u1","u2","i","cpt","randint","setReponse","interactif","ajouteChampTexte","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}