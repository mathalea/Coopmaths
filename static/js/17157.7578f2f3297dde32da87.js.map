{"version":3,"file":"js/17157.7578f2f3297dde32da87.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6M11-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import { mathalea2d, codageAngleDroit, codeSegments, pointAdistance, polygoneAvecNom, point, translation, vecteur, rotation, similitude, afficheLongueurSegment } from '../../modules/2d.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, texNombre, creerNomDePolygone, calcul, exposant } from '../../modules/outils.js'\nimport Grandeur from '../../modules/Grandeur.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Périmètres et aires de carrés, rectangles et triangles rectangles'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\nexport const interactifType = 'mathLive'\nexport const interactifReady = true\n\n/**\n * Un carré, un rectangle et un triangle rectangle sont tracés.\n *\n * Il faut calculer les aires\n *\n * Pas de version LaTeX\n * @author Rémi Angot\n * Référence 6M11\n */\nexport default function PerimetreOuAireDeCarresRectanglesTriangles () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactif = false\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = \"Calculer l'aire des 3 figures suivantes\"\n  this.spacing = 2\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  context.isHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 2)\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    let texte = ''; let texteCorr = ''\n    const nom = creerNomDePolygone(11, 'Q')\n    this.listeQuestions = []\n    this.listeCorrections = [] // Liste de questions corrigées\n    const c = randint(2, 6)\n    const L = randint(2, 5)\n    const l = randint(2, 5, L)\n    const a = randint(2, 5)\n    const b = randint(2, 5)\n    const c2 = Math.sqrt(a * a + b * b)\n    const pIJK = calcul(a + b + c2, 1)\n    const A = point(0, 0, nom[0])\n    const B = rotation(point(c, 0), A, randint(-15, 15), nom[1])\n    const C = rotation(A, B, -90, nom[2])\n    const D = rotation(B, A, 90, nom[3])\n    const carre = polygoneAvecNom(A, B, C, D)\n    const E = point(8, 0, nom[4])\n    const F = pointAdistance(E, L, randint(-15, 15), nom[5])\n    const G = similitude(E, F, -90, l / L, nom[6])\n    const H = translation(G, vecteur(F, E), nom[7])\n    const rectangle = polygoneAvecNom(E, F, G, H)\n    const I = point(15, 0, nom[8])\n    const J = pointAdistance(I, a, randint(-25, 25), nom[9])\n    const K = similitude(I, J, -90, b / a, nom[10])\n    const triangle = polygoneAvecNom(I, J, K)\n    this.introduction = mathalea2d({ xmin: -2, xmax: 22, ymin: -3, ymax: 7, pixelsParCm: 20, scale: 0.75, mainlevee: false },\n      carre, codageAngleDroit(A, B, C), codageAngleDroit(A, D, C), codageAngleDroit(D, C, B), codageAngleDroit(B, A, D), codeSegments('//', 'blue', [A, B, C, D, A]), afficheLongueurSegment(B, A),\n      rectangle, codageAngleDroit(E, F, G), codageAngleDroit(F, G, H), codageAngleDroit(G, H, E), codageAngleDroit(H, E, F), codeSegments('/', 'red', E, F, G, H), codeSegments('||', 'blue', F, G, H, E), afficheLongueurSegment(F, E), afficheLongueurSegment(G, F),\n      triangle, codageAngleDroit(I, J, K), afficheLongueurSegment(J, I), afficheLongueurSegment(K, J), afficheLongueurSegment(I, K)\n    )\n    for (let i = 0; i < 6; i++) {\n      texte = ''\n      texteCorr = ''\n      switch (i) {\n        case 0 :\n          texte = 'Calculer le périmètre du carré en cm'\n          texteCorr += `$\\\\mathcal{P}_{${nom[0] + nom[1] + nom[2] + nom[3]}}=${c}~\\\\text{cm}+${c}~\\\\text{cm}+${c}~\\\\text{cm}+${c}~\\\\text{cm}=${4 * c\n          }~\\\\text{cm}$`\n          setReponse(this, i, new Grandeur(c * 4, 'cm'), { formatInteractif: 'longueur' })\n          if (context.isAmc) {\n            this.autoCorrection[i] = {\n              enonce: `Calculer le périmètre en cm d'un carré de côté ${c}cm.`,\n              propositions: [{ texte: texteCorr, statut: 0 }],\n              reponse: {\n                texte: 'Périmètre en cm',\n                valeur: c * 4,\n                param: { digits: 2, decimals: 0, signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 }\n              }\n            }\n          }\n          break\n\n        case 1 :\n          texte = `Calculer l'aire du carré en cm${exposant(2)}`\n\n          texteCorr += `<br>$\\\\mathcal{A}_{${nom[0] + nom[1] + nom[2] + nom[3]}}=${c}~\\\\text{cm}\\\\times${c}~\\\\text{cm}=${c * c}~\\\\text{cm}^2$`\n          setReponse(this, i, new Grandeur(c * c, 'cm^2'), { formatInteractif: 'longueur' })\n          if (context.isAmc) {\n            this.autoCorrection[i] = {\n              enonce: `Calculer l'aire en cm${exposant(2)} du carré de côté ${c}cm`,\n              propositions: [{ texte: texteCorr, statut: 0 }],\n              reponse: {\n                texte: 'Aire en cm\\\\up{2}',\n                valeur: c * c,\n                param: { digits: 2, decimals: 0, signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 }\n              }\n            }\n          }\n          break\n        case 2 :\n          texte = 'Calculer le périmètre du rectangle en cm'\n          texteCorr += `<br>$\\\\mathcal{P}_{${nom[4] + nom[5] + nom[6] + nom[7]}}=${L}~\\\\text{cm}+${l}~\\\\text{cm}+${L}~\\\\text{cm}+${l}~\\\\text{cm}=${2 * L + 2 * l\n            }~\\\\text{cm}$`\n          setReponse(this, i, new Grandeur((L + l) * 2, 'cm'), { formatInteractif: 'longueur' })\n          if (context.isAmc) {\n            this.autoCorrection[i] = {\n              enonce: `Calculer le périmètre en cm du rectangle de longueur ${L}cm et de largeur ${l}cm`,\n              propositions: [{ texte: texteCorr, statut: 0 }],\n              reponse: {\n                texte: 'Périmètre en cm',\n                valeur: (L + l) * 2,\n                param: { digits: 2, decimals: 0, signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 }\n              }\n            }\n          }\n          break\n        case 3 :\n          texte = `Calculer l'aire du rectangle en cm${exposant(2)}`\n          texteCorr += `<br>$\\\\mathcal{A}_{${nom[4] + nom[5] + nom[6] + nom[7]}}=${L}~\\\\text{cm}\\\\times${l}~\\\\text{cm}=${L * l\n          }~\\\\text{cm}^2$`\n          setReponse(this, i, new Grandeur(L * l, 'cm^2'), { formatInteractif: 'longueur' })\n          if (context.isAmc) {\n            this.autoCorrection[i] = {\n              enonce: `Calculer l'aire en cm${exposant(2)} du rectangle de longueur ${L}cm et de largeur ${l}cm`,\n              propositions: [{ texte: texteCorr, statut: 0 }],\n              reponse: {\n                texte: 'Aire en cm\\\\up{2}',\n                valeur: L * l,\n                param: { digits: 2, decimals: 0, signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 }\n              }\n            }\n          }\n          break\n        case 4 :\n          texte = 'Calculer le périmètre du triangle rectangle en cm'\n          texteCorr += `<br>$\\\\mathcal{P}_{${nom[8] + nom[9] + nom[10]}}=${a}~\\\\text{cm}+${b}~\\\\text{cm}+${texNombre(c2.toFixed(1))}~\\\\text{cm}=${pIJK}~\\\\text{cm}$`\n          setReponse(this, i, new Grandeur(pIJK, 'cm'), { formatInteractif: 'longueur' })\n          if (context.isAmc) {\n            this.autoCorrection[i] = {\n              enonce: `Calculer le périmètre en cm du triangle rectangle dont les côtés mesurent ${a}cm, ${b}cm et ${texNombre(c2.toFixed(1))}m`,\n              propositions: [{ texte: texteCorr, statut: 0 }],\n              reponse: {\n                texte: 'Périmètre en cm',\n                valeur: pIJK,\n                param: { digits: 3, decimals: 1, signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 }\n              }\n            }\n          }\n          break\n        case 5 :\n          texte = `Calculer l'aire du triangle rectangle en cm${exposant(2)}`\n          texteCorr += `<br>$\\\\mathcal{A}_{${nom[8] + nom[9] + nom[10]}}=${a}~\\\\text{cm}\\\\times${b}~\\\\text{cm}\\\\div2=${texNombre(calcul((a * b) / 2))}~\\\\text{cm}^2$`\n          setReponse(this, i, new Grandeur(calcul((a * b) / 2), 'cm^2'), { formatInteractif: 'longueur' })\n          if (context.isAmc) {\n            this.autoCorrection[i] = {\n              enonce: `Calculer l'aire en cm${exposant(2)} du triangle rectangle dont les côtés de l'angle droit mesurent ${a}cm et ${b}cm`,\n              propositions: [{ texte: texteCorr, statut: 0 }],\n              reponse: {\n                texte: 'Aire en cm\\\\up{2}',\n                valeur: calcul((a * b) / 2),\n                param: { digits: 2, decimals: 0, signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 }\n              }\n            }\n          }\n          break\n      }\n      texte += ajouteChampTexteMathLive(this, i, 'longueur')\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3,\"1 : Périmètres\\n\\\n  // 2 : Aires\\n3 : Périmètres et aires\"];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","amcType","interactifType","interactifReady","PerimetreOuAireDeCarresRectanglesTriangles","Exercice","this","interactif","consigne","spacing","nbCols","nbColsCorr","context","spacingCorr","nbQuestions","nbQuestionsModifiable","nouvelleVersion","numeroExercice","texte","texteCorr","nom","creerNomDePolygone","listeQuestions","listeCorrections","c","randint","L","l","a","b","c2","Math","sqrt","pIJK","calcul","A","point","B","rotation","C","D","carre","polygoneAvecNom","E","F","pointAdistance","G","similitude","H","translation","vecteur","rectangle","I","J","K","triangle","introduction","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","mainlevee","codageAngleDroit","codeSegments","afficheLongueurSegment","i","setReponse","Grandeur","formatInteractif","autoCorrection","enonce","propositions","statut","reponse","valeur","param","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","exposant","texNombre","toFixed","ajouteChampTexteMathLive","push","listeQuestionsToContenu","boutonAide","consigneCorrection","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}