/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_3e_3G32-4_js"],{

/***/ "./src/js/exercices/3e/3G32-4.js":
/*!***************************************!*\
  !*** ./src/js/exercices/3e/3G32-4.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Calculs_trigonometriques4)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n/* harmony import */ var _modules_3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../modules/3d.js */ \"./src/js/modules/3d.js\");\n\n\n\n\nconst titre = 'Calculer la hauteur d’une montagne'\n\n/**\n * Propose de calculer la hauteur d'une montagne à partir de deux relevés d'angle \n * @Auteur Jean-Claude Lhote\n * Référence 3G32-4\n*/\nfunction Calculs_trigonometriques4() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nb_cols = 1; // Uniquement pour la sortie LaTeX\n  this.nb_cols_corr = 1; // Uniquement pour la sortie LaTeX\n  this.sup = true;\n  this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = \"\" // Id YouTube ou url\n  this.nb_questions = 1\n  this.spacing_corr=2\n  this.spacing=2\n\n  this.nouvelle_version = function () {\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n    let distance, hauteur,alfa,baita, beta, alpha, teta, taille, index, A, B, O, H, S, C,M,R,R2,Axe,normalV,normalH,P,HP,Sph,OP,PoleNord,PoleSud, objets = [], p\n    let type_de_questions_disponibles\n    if (sortie_html) {\n      alfa='α'\n      baita='β'\n    }\n    else {\n      alfa='\\\\alpha'\n      baita='\\\\beta'\n    }\n  \n    for (let i = 0, texte, texte_corr,j, cpt = 0; i < this.nb_questions && cpt < 50;) {\n        objets=[]\n          alpha = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(25, 45)\n          j=0\n          beta = alpha+(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1,3)\n          taille = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(20,50)*100\n          distance = Math.round(taille*Math.sin((beta-alpha)*Math.PI/180)/Math.sin(alpha*Math.PI/180)/Math.sin(beta*Math.PI/180))\n          taille=Math.round(distance*Math.sin(alpha*Math.PI/180)*Math.sin(beta*Math.PI/180)/Math.sin((beta-alpha)*Math.PI/180))\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, 'A')\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(A, 5, 0, 'B')\n          H = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(A, 12, 0, 'H')\n          S = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(H, 7, 90, 'S')\n          C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.projectionOrtho)(B, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(A, S), 'C')\n          p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(A, B, H, S, C)\n          objets.push(p[1], p[0], (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(S, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A, H, S),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(B,C,S))\n          objets.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(H, A, S, 'black', 2, `${alfa}`), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(H, B, S, 'black', 2, `${baita}`))\n         \n          objets.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteSurSegment)(`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(distance)} m`, A, B, 'black', -0.5), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)(`h`, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.milieu)(H, S).x + 0.5, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.milieu)(H, S).y, 0, 'black', 2, \"middle\", true))\n\n          texte = `Un voyageur approche d'une montagne. Il aimerait en calculer la hauteur.<br>`;\n          texte += `Pour cela, il utilise un théodolite en un point $A$ qui lui permet de mesurer l'angle $${alfa}$ vertical formé par le sommet $S$ de la montagne, le point $A$ et la base de la montagne $H$.<br>`\n          texte += `Il parcourt ensuite $${distance}$ m en direction de la montagne et effectue une nouvelle mesure de l'angle $${baita}$ en un point $B$.<br>`\n          texte += `Le schéma ci-dessous n'est pas en vraie grandeur.<br>On donne : $${alfa}=${alpha}\\\\degree$, $${baita}=${beta}\\\\degree$ et $AB=${distance}$ m.<br>` + (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: -1, ymin: -1, xmax: 14, ymax: 8, pixelsParCm: 20, scale: 0.5 }, objets)+'<br>';\n\n          if (this.sup) {\n            texte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Exprimer la mesure de l'angle $\\\\widehat{BSH}$ en fonction de $${baita}$.<br>`\n            texte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j+1)}Exprimer la mesure de l'angle $\\\\widehat{ASH}$ en fonction de $${alfa}$.<br>`\n            j+=2\n          }\n          texte+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Montrer que $\\\\widehat{BSC}=${baita}-${alfa}$.<br>`\n          j++\n          if (this.sup) {\n            texte+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Dans le triangle $BCS$ exprimer $BS$ en fonction de $BC$.<br>`\n          }\n          else {\n            texte+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Exprimer $BS$ en fonction de $BC$.<br>`\n          }\n          j++\n          if (this.sup) {\n            texte+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Dans le triangle $ABC$, exprimer $BC$ en fonction de $AB$.<br>`\n          }\n          else {\n            texte+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Exprimer $BC$ en fonction de $AB$.<br>`\n          }\n          j++\n          if (this.sup){\n            texte+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}En déduire $h$ en fonction de $BS$ puis en fonction de $BC$ enfin en fonction de $AB$.<br>`\n          }\n          else {\n            texte+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}En déduire $h$ en fonction de $AB$.<br>`\n          }\n          j++\n          texte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Quelle est la hauteur de la montagne (arrondir au mètre près) ?<br>`\n          texte += `On supposera le point d'observation au niveau du sol.`\n          j=0\n          texte_corr = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: -1, ymin: -1, xmax: 14, ymax: 8, pixelsParCm: 20, scale: 0.5 }, objets)+'<br>'\n          if (this.sup) {\n            texte_corr += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Dans le triangle $BHS$ rectangle en $H$, les angles aigus sont complémentaires donc $\\\\widehat{BSH}=90-${baita}$.<br>`\n            texte_corr += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j+1)}Dans le triangle $AHS$ rectangle en $H$, pour la même raison $\\\\widehat{ASH}=90-${alfa}$.<br>`\n            j+=2\n          }\n          texte_corr+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}On sait que $\\\\widehat{BSH}=90-${baita}$ et $\\\\widehat{ASH}=90-${alfa}$.<br>Donc $\\\\widehat{BSC}=\\\\widehat{ASH}-\\\\widehat{BSH}=90-${alfa}-(90-${baita})=\\\\cancel{90}-${alfa}-\\\\cancel{90}+${baita}=${baita}-${alfa}$.<br>`\n          j++\n            texte_corr+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Dans le triangle $BCS$ rectangle en $C$, $\\\\sin(\\\\widehat{BSC})=\\\\dfrac{BC}{BS}$ d'où $BS=\\\\dfrac{BC}{\\\\sin(\\\\widehat{BSC})}=\\\\dfrac{BC}{\\\\sin(${baita}-${alfa})}$.<br>`\n          j++\n            texte_corr+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Dans le triangle $ABC$ rectangle en $C$, $\\\\sin(\\\\widehat{BAC})=\\\\dfrac{BC}{AB}$ d'où $BC=AB\\\\times \\\\sin(\\\\widehat{BAC})=AB\\\\times \\\\sin(${alfa})$.<br>`\n          j++\n\n            texte_corr+=`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Dans le triangle $BHS$ rectangle en $H$, $h=BS\\\\times \\\\sin(${baita})=\\\\dfrac{BC}{\\\\sin(${baita}-${alfa})}\\\\times \\\\sin(${baita})=\\\\dfrac{AB\\\\times \\\\sin(${alfa})}{\\\\sin(${baita}-${alfa})}\\\\times \\\\sin(${baita})$<br>`\n\n          j++\n          texte_corr += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(j)}Application numérique : $h=\\\\dfrac{${distance}\\\\times \\\\sin(${alpha})}{\\\\sin(${beta}-${alpha})}\\\\times \\\\sin(${beta})$`\n          texte_corr  +=`$=\\\\dfrac{${distance}\\\\times \\\\sin(${alpha})\\\\times \\\\sin(${beta})}{\\\\sin(${beta-alpha})}\\\\approx ${Math.round(taille)}$ m.<br>`\n  \n      if (this.liste_questions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  this.besoin_formulaire_case_a_cocher = ['Afficher un schéma et des questions intermédiaires'];\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/3e/3G32-4.js?");

/***/ })

}]);