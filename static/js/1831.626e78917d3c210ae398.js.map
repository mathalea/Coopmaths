{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","VocabulaireEtOperations","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","sup2","spacing","nouvelleVersion","decimal","expf","expn","expc","resultats","typesDeQuestionsDisponibles","parseInt","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","randint","texte","texteCorr","i","cpt","choisirExpressionNumerique","numAlpha","substring","indexOf","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1831.626e78917d3c210ae398.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenuSansNumero, randint, combinaisonListes, numAlpha } from '../../modules/outils.js'\nimport choisirExpressionNumerique from '../5e/_choisirExpressionNumerique.js'\nexport const titre = 'Traduire des phrases en calculs et réciproquement'\n\n/**\n * Mettre en relation un calcul, une traduction en français, une expression, un résultat, pour les décliner dans différents exercices.\n * Exercice sur le vocabulaire : somme,différence, produit, quotient...\n * @author Jean-Claude Lhote\n * Référence 6C13\n */\nexport default function VocabulaireEtOperations () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 4\n  this.sup2 = false\n  this.spacing = 2\n\n  this.nouvelleVersion = function () {\n    let decimal\n    let expf, expn, expc, resultats\n    let typesDeQuestionsDisponibles\n    if (this.sup < 4) typesDeQuestionsDisponibles = [parseInt(this.sup)]\n    else typesDeQuestionsDisponibles = [1, 2, 3]\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    )\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (this.sup2) decimal = 10 ** randint(1, 2)\n    else decimal = 1\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      resultats = choisirExpressionNumerique(1, decimal)\n      expf = resultats[0]\n      expn = resultats[1]\n      expc = resultats[2]\n      texte = ''\n      texteCorr = ''\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte +=\n            numAlpha(i) +\n            'Traduire la phrase par un calcul (il n’est pas demandé d’effectuer ce calcul) : '\n          expf = 'l' + expf.substring(1)\n          texte += `${expf}.`\n          texteCorr += numAlpha(i) + `${expf} s'écrit ${expn}.`\n          break\n        case 2:\n          if (expn.indexOf('ou') > 0) { expn = expn.substring(0, expn.indexOf('ou')) } // on supprime la deuxième expression fractionnaire\n          texte +=\n            numAlpha(i) + 'Traduire le calcul par une phrase en français : '\n          texte += `${expn}`\n          expf = 'l' + expf.substring(1)\n          texteCorr += numAlpha(i) + `${expn} est ${expf}.`\n          break\n        case 3:\n          texte +=\n            numAlpha(i) +\n            'Traduire la phrase par un calcul et effectuer ce calcul : '\n          expf = 'l' + expf.substring(1)\n          texte += `${expf}.`\n          expf = 'L' + expf.substring(1)\n          texteCorr += numAlpha(i) + `${expf} s'écrit ${expn}.<br>`\n          texteCorr += `${expc}.`\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Type de questions',\n    4,\n    '1 : Phrase -> Calcul\\n 2 : Calcul -> Phrase\\n 3 : Phrase -> Calcul + résultat\\n 4 : Mélange'\n  ]\n  this.besoinFormulaire2CaseACocher = ['Décimaux', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}