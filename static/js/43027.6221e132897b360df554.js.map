{"version":3,"file":"js/43027.6221e132897b360df554.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N10-1.js","webpack://mathalea/./src/js/exercices/6e/6C10.js","webpack://mathalea/./src/js/exercices/6e/6N30-1.js"],"sourcesContent":["import LireAbscisseDecimaleBis2d from '../6e/6N30-1.js'\nexport const titre = 'Lire l’abscisse décimale d’un point repéré par une fraction'\nexport { interactifReady, interactifType, amcReady, amcType } from '../6e/6C10.js'\nexport const dateDeModifImportante = '27/10/2021'\n/**\n * Clone de 6N30-1 pour les 2nde\n *\n * @author Jean-Claude Lhote\n */\nexport default function LireAbscisseDecimale2nde () {\n  LireAbscisseDecimaleBis2d.call(this)\n  this.sup = 6\n}\n","import Operation from '../../modules/operations'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListesSansChangerOrdre, texNombre, calcul, nombreDeChiffresDe } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif'\n\nexport const amcReady = true\nexport const amcType = 'AMCHybride' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\nexport const titre = 'Poser additions, soustractions et multiplications de nombres entiers'\n\n/**\n * Additions, soustractions et multiplications posées de nombres entiers\n *\n * * abcd +efg\n * * abc0-efg\n * * 1abc-def\n * * abc*d0e tables de 2 à 5\n * * abc*de tables de 5 à 9\n * @author Rémi Angot\n * Support des opérations posées en html par Jean-Claude Lhote.\n * Référence 6C10\n */\nexport default function AdditionsSoustractionsMultiplicationsPosees () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Poser et effectuer les calculs suivants.'\n  this.spacing = 2\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1) // Important sinon les opérations posées ne sont pas jolies\n  this.nbQuestions = 5\n  this.listePackages = 'xlop'\n  this.tailleDiaporama = 3\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let typesDeQuestions, reponse\n    const typesDequestionsDisponibles = [1, 2, 3, 4, 5]\n    let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(\n      typesDequestionsDisponibles,\n      this.nbQuestions\n    )\n    if (this.nbQuestions === 3) {\n      listeTypeDeQuestions = [1, 2, 5]\n    }\n    if (this.nbQuestions === 4) {\n      listeTypeDeQuestions = [1, 2, 4, 5]\n    }\n\n    for (let i = 0, texte, texteCorr, cpt = 0, a, b, c, d, e, f, g, x, y; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      this.autoCorrection[i] = {}\n      switch (typesDeQuestions) {\n        case 1: // abcd +efg\n          a =\n            randint(1, 9) * 10000 +\n            randint(5, 9) * 1000 +\n            randint(5, 9) * 100 +\n            randint(7, 9) * 10 +\n            randint(1, 9)\n          b = randint(5, 9) * 100 + randint(7, 9) * 10 + randint(1, 9)\n          texte = `$${texNombre(a)}+${b}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexteMathLive(this, i, 'inline') // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte += '$'\n          reponse = calcul(a + b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n        case 2: // abc0-efg\n          a = randint(1, 9)\n          b = randint(1, 9)\n          c = randint(1, 9)\n          e = randint(b, 9)\n          f = randint(c, 9)\n          g = randint(2, 9)\n          x = a * 1000 + b * 100 + c * 10\n          y = e * 100 + f * 10 + g\n          texte = `$${texNombre(x)}-${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexteMathLive(this, i, 'inline') // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte += '$'\n          reponse = calcul(x - y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'soustraction' })\n          break\n        case 3: // 1abc-def\n          a = randint(1, 9)\n          b = randint(1, 9)\n          c = randint(1, 9)\n          d = randint(a, 9)\n          e = randint(1, 9)\n          f = randint(c, 9)\n          x = 1000 + a * 100 + b * 10 + c\n          y = d * 100 + e * 10 + f\n          texte = `$${texNombre(x)}-${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexteMathLive(this, i, 'inline') // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte += '$'\n          reponse = calcul(x - y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'soustraction' })\n          break\n        case 4: // abc*d0e tables de 2 à 5\n          a = randint(2, 5)\n          b = randint(2, 5)\n          c = randint(2, 5)\n          d = randint(2, 5)\n          e = randint(2, 5)\n          x = 100 * a + 10 * b + c\n          y = d * 100 + e\n          texte = `$${texNombre(x)}\\\\times${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexteMathLive(this, i, 'inline') // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte += '$'\n          reponse = calcul(x * y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'multiplication' })\n          break\n        case 5: // abc*de tables de 5 à 9\n          a = randint(5, 9)\n          b = randint(5, 9)\n          c = randint(5, 9)\n          d = randint(5, 9)\n          e = randint(5, 9)\n          x = 100 * a + 10 * b + c\n          y = 10 * d + e\n          texte = `$${x}\\\\times${y}`\n          if (this.interactif && !context.isAmc) texte += '=$' + ajouteChampTexteMathLive(this, i, 'inline') // fonction à utiliser pour la version en ligne afin d'ajouter le formulaire de réponse\n          else texte += '$'\n          reponse = calcul(x * y)\n          texteCorr = Operation({ operande1: x, operande2: y, type: 'multiplication' })\n          break\n      }\n\n      if (this.questionJamaisPosee(i, a, b, c, d, e, f, g)) {\n        // Si la question n'a jamais été posée, on l'enregistre\n        this.listeQuestions.push(texte)\n        if (!context.isHtml && i === 0) {\n          texteCorr = '\\\\setlength\\\\itemsep{2em}' + texteCorr\n        } // espacement entre les questions\n        this.listeCorrections.push(texteCorr)\n        if (!context.isAmc) {\n          setReponse(this, i, reponse, { digits: 0 }) // fonction qui va renseigner this.autocorrection[i]\n        } else {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            propositions: [\n              {\n                type: 'AMCOpen',\n                propositions: [{\n                  texte: texteCorr,\n                  statut: 3\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: '',\n                  statut: '',\n                  reponse: {\n                    texte: 'Résultat',\n                    valeur: [reponse],\n                    param: {\n                      digits: nombreDeChiffresDe(reponse),\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n        }\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { calcul, choice, htmlConsigne, lettreDepuisChiffre, combinaisonListes, listeQuestionsToContenu, randint, texNombre } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { droiteGraduee2, mathalea2d } from '../../modules/2d.js'\n\nexport const titre = 'Lire l’abscisse décimale d’un point repéré par une fraction'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCOpen'\n\n/**\n * Exercice calqué sur lire abscisse fractionnaire sauf que le résultat attendu est en écriture décimale.\n * demis, quart, cinquièmes dixièmes et centièmes\n * @author Jean-Claude Lhote\n * Référence 6N30-1\n */\nexport default function LireAbscisseDecimaleBis2d () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Lire l’abscisse de chacun des points suivants et donner le résultat sous la forme d’un nombre en écriture décimale.'\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n  this.interactif = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    // numeroExercice est 0 pour l'exercice 1\n    this.sup = parseInt(this.sup)\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (this.sup === 5) {\n      typesDeQuestions = combinaisonListes([1, 2, 3, 4], this.nbQuestions)\n    } else if (this.sup === 6) {\n      typesDeQuestions = combinaisonListes([1, 2, 3, 4, 5], this.nbQuestions)\n    } else {\n      typesDeQuestions = combinaisonListes(\n        [this.sup],\n        this.nbQuestions\n      )\n    }\n    const d = []\n    this.contenu = htmlConsigne(this.consigne)\n    for (let i = 0, abs0, l1, l2, l3, x1, x2, x3, x11, x22, x33, xA, xB, xC, pas1, pas2, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n      if (context.isAmc) {\n        this.autoCorrection[i] = { propositions: [{ statut: 4, feedback: '' }] }\n      }\n      switch (typesDeQuestions[i]) {\n        case 3: // Placer des demis ou des quarts sur un axe\n          abs0 = this.sup > 5 ? randint(-4, 4) : 0\n          pas1 = 1\n          pas2 = choice([2, 4])\n          break\n\n        case 4: // Placer des cinquièmes\n          abs0 = this.sup > 5 ? randint(-4, 4) : 0\n          pas1 = 1\n          pas2 = 5\n          break\n\n        case 5: // Placer des huitièmes\n          abs0 = this.sup > 5 ? randint(-4, 4) : 0\n          pas1 = 1\n          pas2 = 8\n          break\n\n        case 1: // Placer des dixièmes\n          abs0 = this.sup > 5 ? randint(-4, 4) : randint(1, 5)\n          pas1 = 1\n          pas2 = 10\n          break\n        case 2: // Placer des centièmes\n          abs0 = this.sup > 5 ? calcul(randint(-40, 40) / 10) : calcul(randint(10, 50) / 10)\n          pas1 = 10\n          pas2 = 10\n          break\n      }\n      x1 = randint(0, 1)\n      x2 = randint(2, 3)\n      x3 = randint(4, 5)\n      x11 = randint(1, pas2 - 1)\n      x22 = randint(1, pas2 - 1)\n      x33 = randint(1, pas2 - 1)\n\n      xA = calcul(x1 + x11 / pas2)\n      xB = calcul(x2 + x22 / pas2)\n      xC = calcul(x3 + x33 / pas2)\n      d[2 * i] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        thickSecDist: 1 / pas2,\n        labelListe: [[0, `${texNombre(abs0)}`], [1, `${texNombre(calcul(abs0 + 1 / pas1))}`]],\n        pointListe: [[xA, l1], [xB, l2], [xC, l3]]\n      })\n      d[2 * i + 1] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        thickSecDist: 1 / pas2,\n        labelListe: [\n          [0, `${texNombre(abs0)}`],\n          [xA, texNombre(calcul(xA / pas1 + abs0))],\n          [xB, texNombre(calcul(xB / pas1 + abs0))],\n          [xC, texNombre(calcul(xC / pas1 + abs0))]\n        ],\n        pointListe: [[xA, l1], [xB, l2], [xC, l3]]\n\n      })\n\n      texte = mathalea2d({ xmin: -2, ymin: -1, xmax: 30, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i])\n      texteCorr = mathalea2d({ xmin: -2, ymin: -2, xmax: 30, ymax: 2, pixelsParCm: 20, scale: 0.5 }, d[2 * i + 1])\n\n      if (this.interactif && context.isHtml) {\n        setReponse(this, 3 * i, calcul(xA / pas1 + abs0))\n        setReponse(this, 3 * i + 1, calcul(xB / pas1 + abs0))\n        setReponse(this, 3 * i + 2, calcul(xC / pas1 + abs0))\n        texte += l1 + ajouteChampTexteMathLive(this, 3 * i)\n        texte += l2 + ajouteChampTexteMathLive(this, 3 * i + 1)\n        texte += l3 + ajouteChampTexteMathLive(this, 3 * i + 2)\n      } else {\n        if (context.isAmc) {\n          this.autoCorrection[i].enonce = texte\n          this.autoCorrection[i].propositions[0].texte = texteCorr\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    5,\n    '1 : Dixièmes\\n2 : Centièmes\\n3 : Demis et quarts\\n4 : Cinquièmes\\n5 : Mélange'\n  ]\n}\n"],"names":["titre","dateDeModifImportante","LireAbscisseDecimale2nde","LireAbscisseDecimaleBis2d","this","sup","amcReady","amcType","interactifReady","interactifType","AdditionsSoustractionsMultiplicationsPosees","Exercice","consigne","spacing","context","spacingCorr","nbQuestions","listePackages","tailleDiaporama","nouvelleVersion","typesDeQuestions","reponse","listeQuestions","listeCorrections","autoCorrection","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","a","b","c","d","e","f","g","x","y","i","cpt","randint","texNombre","interactif","ajouteChampTexteMathLive","calcul","Operation","operande1","operande2","type","questionJamaisPosee","push","enonce","propositions","statut","valeur","param","digits","nombreDeChiffresDe","decimals","signe","approx","setReponse","listeQuestionsToContenu","nbQuestionsModifiable","nbCols","nbColsCorr","numeroExercice","parseInt","contenu","contenuCorrection","combinaisonListes","htmlConsigne","abs0","l1","l2","l3","x1","x2","x3","x11","x22","x33","xA","xB","xC","pas1","pas2","lettreDepuisChiffre","feedback","choice","droiteGraduee2","Unite","Min","Max","axeStyle","pointTaille","pointStyle","labelsPrincipaux","thickSec","thickSecDist","labelListe","pointListe","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","indexOf","besoinFormulaireNumerique"],"sourceRoot":""}