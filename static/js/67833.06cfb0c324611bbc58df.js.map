{"version":3,"file":"js/67833.06cfb0c324611bbc58df.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R20-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureNombreRelatif, ecritureNombreRelatifc, ecritureAlgebrique } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const amcType = 'qcmMono' // qcm\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\nexport const titre = 'Addition à trou de deux entiers relatifs'\n\n/**\n* Compléter une addition à trou entre 2 nombres relatifs.\n*\n* * On peut paramétrer la distance à zéro maximale des deux termes (par défaut égale à 20)\n* * On peut choisir d'avoir une écriture simplifiée  (par défaut ce n'est pas le cas)\n* @author Rémi Angot\n* 5R20-2\n*/\nexport default function ExerciceAdditionsRelatifsATrou (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Compléter'\n  this.spacing = 2\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.sup = parseInt(this.sup)\n    this.numeroExercice = numeroExercice\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    for (let i = 0, a, b, k, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(1, this.sup)\n      b = randint(1, this.sup)\n      k = choice([[-1, -1], [-1, 1], [1, -1]]) // Les deux nombres relatifs ne peuvent pas être tous les deux positifs\n      a = a * k[0]\n      b = b * k[1]\n      if (this.sup2) {\n        texte = '$ ' + a + ' + ' + '\\\\ldots\\\\ldots\\\\ldots' + ' = ' + (a + b) + ' $'\n        texteCorr = '$ ' + a + ecritureAlgebrique(b) + ' = ' + (a + b) + ' $'\n      } else {\n        texte = '$ ' + ecritureNombreRelatif(a) + ' + ' + '\\\\ldots\\\\ldots\\\\ldots' + ' = ' + ecritureNombreRelatif(a + b) + ' $'\n        texteCorr = '$ ' + ecritureNombreRelatifc(a) + ' + ' + ecritureNombreRelatifc(b) + ' = ' + ecritureNombreRelatifc(a + b) + ' $'\n      }\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${b}$`,\n          statut: true\n        },\n        {\n          texte: `$${a + b + a}$`,\n          statut: false\n        },\n        {\n          texte: `$${-2 * a - b}$`,\n          statut: false\n        },\n        {\n          texte: `$${-b}$`,\n          statut: false\n        }\n      ]\n      if (this.interactif) {\n        texte += propositionsQcm(this, i).texte\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","ExerciceAdditionsRelatifsATrou","max","Exercice","this","sup","sup2","consigne","spacing","nouvelleVersion","numeroExercice","parseInt","listeQuestions","listeCorrections","a","b","k","texte","texteCorr","i","cpt","nbQuestions","randint","choice","ecritureAlgebrique","ecritureNombreRelatif","ecritureNombreRelatifc","autoCorrection","enonce","propositions","statut","interactif","propositionsQcm","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}