{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/2G51.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","equationcartesienne","sup","listeTypeQuestions","combinaisonListes","xA","yA","xB","yB","texte","texteCorr","i","cpt","randint","ecritureAlgebriqueSauf1","ecritureParentheseSiNegatif","ecritureAlgebrique","indexOf","push","listeQuestionsToContenu"],"mappings":"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","file":"js/9243.efbcb261f1006d0eea62.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, ecritureAlgebrique, ecritureParentheseSiNegatif, ecritureAlgebriqueSauf1 } from '../../modules/outils.js'\nexport const titre = 'Equation cartésienne de droite'\n\n/**\n * Description didactique de l'exercice\n * @author Stéphane Guyon\n * Référence\n*/\nexport default function equationcartesienne () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Déterminer l\\'équation cartésienne de la droite $(AB)$'\n  this.nbQuestions = 3\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 2 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeQuestionsDisponibles = ['cartesienne1']\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, xA, yA, xB, yB, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'cartesienne1':\n          xA = randint(-5, 5)\n          yA = randint(-5, 5)\n          xB = randint(-5, 5)\n          yB = randint(-5, 5)\n          texte = `avec les point $A$ et $B$ de coordonnées : $A(${xA};${yA})$ et $B(${xB};${yB})$ `\n          texteCorr = 'On sait qu\\'une équation cartésienne de la droite $(AB)$ est de la forme :'\n          texteCorr += ' $(AB) : ax+by+c=0$, avec $(a;b)\\\\neq (0;0)$.'\n          texteCorr += '<br>On sait aussi que dans ces conditions, un vecteur directeur de cette droite a pour coordonnées :'\n          texteCorr += ' $\\\\vec {u} \\\\begin{pmatrix}-b\\\\\\\\a\\\\end{pmatrix}$'\n          texteCorr += ' <br>Il suffit donc de trouver un vecteur directeur à cette droite pour déterminer une valeur possible pour les coefficients $a$ et $b$. <br>Or le vecteur $\\\\overrightarrow{AB}$ est un vecteur directeur directeur de la droite, dont on peut calculer les coordonnées :'\n          texteCorr += ' <br>$\\\\overrightarrow{AB}  \\\\begin{pmatrix}x_B-x_A\\\\\\\\y_B-y_A\\\\end{pmatrix}$'\n          texteCorr += ` $\\\\iff\\\\overrightarrow{AB}  \\\\begin{pmatrix} ${xB}-${xA}\\\\\\\\${yB}-${yA}\\\\end{pmatrix}$`\n          texteCorr += ` $\\\\iff\\\\overrightarrow{AB}  \\\\begin{pmatrix} ${xB - xA}\\\\\\\\${yB - yA}\\\\end{pmatrix}$`\n          texteCorr += ` <br>On en déduit donc que :$-b = ${xB - xA}$ et $a=${yB - yA}$`\n          texteCorr += ` <br>L'équation cartésienne est donc de la forme : $ ${yB - yA} x ${ecritureAlgebriqueSauf1(xA - xB)} y + c=0$ `\n          texteCorr += `<br>On cherche maintenant la valeur correspondante de $c$. <br>On utilise pour cela que $A(${xA};${yA}) \\\\in(AB)$ `\n          texteCorr += ` <br>$\\\\iff ${yB - yA} \\\\times ${ecritureParentheseSiNegatif(xA)} ${ecritureAlgebriqueSauf1(xA - xB)} \\\\times ${ecritureParentheseSiNegatif(yA)}+ c=0$ `\n          texteCorr += ` <br>$\\\\iff  ${yB * xA - yA * xA} ${ecritureAlgebrique(xA * yA - xB * yA)} + c=0$ `\n          texteCorr += ` <br>$\\\\iff  c= ${-xA * yA + xB * yA - yB * xA + yA * xA}$ `\n          texteCorr += ` <br>L'équation cartésienne est donc de la forme : $ ${yB - yA} x ${ecritureAlgebriqueSauf1(xA - xB)} y ${ecritureAlgebriqueSauf1(-xA * yA + xB * yA - yB * xA + yA * xA)}=0$ `\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n"],"sourceRoot":""}