{"version":3,"file":"js/88763.8816035e36c168f52b16.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G11-3.js","webpack://mathalea/./src/js/exercices/3e/3G31-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import MonSuperExerciceTropBeau from '../3e/3G31-1.js'\nexport const titre = 'Problèmes utilisant la trigonométrie'\n// export { interactifReady, interactifType } from '../3e/3G31-1.js'\n// export { amcReady, amcType } from '../3e/3G31-1.js'\n\n/**\n * Clone de 3G31-1 pour les 2nde\n *\n * @author Sébastien LOZANO\n */\nexport default function MonSuperExerciceTropBeau2nde () {\n  MonSuperExerciceTropBeau.call(this)\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, calcul, creerNomDePolygone, texNombre, choice } from '../../modules/outils.js'\nimport { point, labelPoint, polygone, similitude, codageAngleDroit, codeAngle, mathalea2d, afficheMesureAngle, afficheLongueurSegment, longueur, angle, texteSurSegment } from '../../modules/2d.js'\nimport { radians, degres } from '../../modules/fonctionsMaths.js'\n\nexport const titre = 'Calculer toutes les mesures d’angle d’une figure complexe'\n\n/**\n * Deux triangles rectangles accolés, on connait deux longueurs et un angle, il faut déterminer tous les autres angles\n * @author Rémi Angot\n * 3G31-1\n * Février 2021\n*/\nexport default function MonSuperExerciceTropBeau () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Calculer la mesure de tous les angles de cette figure.'\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.spacingCorr = 3\n  this.correctionDetailleeDisponible = true\n  context.isHtml ? this.correctionDetaillee = true : this.correctionDetaillee = false\n  // this.sup = 1; // Niveau de difficulté\n  // this.tailleDiaporama = 3; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestion = choice(['BA-AD-BAC', 'BA-AD-ACB'])\n    let texte, texteCorr\n\n    const B = point(0, 0, '', 'below')\n    const A = point(randint(4, 7), 0, '', 'below')\n    const C = point(0, randint(3, 7, longueur(A, B)), '', 'above') // On exclue AB pour ne pas avoir un triangle isocèle\n    const t1 = polygone(A, B, C)\n    const t1c = polygone(A, B, C)\n    t1c.color = 'blue'\n    t1c.epaisseur = 3\n    const c1 = codageAngleDroit(A, B, C)\n    const D = similitude(C, A, -90, calcul(randint(7, 12, 10) / 10), '', 'right') // On exclue 10 pour ne pas avoir un triangle isocèle\n    const t2 = polygone(C, A, D)\n    const t2c = polygone(C, A, D)\n    t2c.color = 'blue'\n    t2c.epaisseur = 3\n    const c2 = codageAngleDroit(C, A, D)\n    const nom = creerNomDePolygone(4)\n    A.nom = nom[0]\n    B.nom = nom[1]\n    C.nom = nom[2]\n    D.nom = nom[3]\n    const labels = labelPoint(A, B, C, D)\n    const BA = longueur(B, A)\n    const AD = longueur(A, D, 1)\n    const BAC = Math.ceil(angle(B, A, C))\n    let AC = calcul(BA / Math.cos(radians(BAC)), 1)\n    let ACD = Math.round(degres(Math.atan(AD / AC)))\n    let a1 = afficheMesureAngle(B, A, C, 'black', 1, BAC + '°')\n    const a2 = afficheLongueurSegment(A, B)\n    const a3 = afficheLongueurSegment(D, A)\n    const a4 = afficheLongueurSegment(A, C)\n    const a5 = codeAngle(A, C, D, 1.2)\n    a5.epaisseur = 2\n    const ACB = Math.ceil(angle(A, C, B))\n\n    const objetsMathalea = [t1, t2, c1, c2, labels]\n\n    switch (typesDeQuestion) { // Suivant le type de question, le contenu sera différent\n      case 'BA-AD-BAC':\n        if (this.sup) {\n          objetsMathalea.push(a1, a2, a3)\n        }\n        texte = mathalea2d({ xmin: -1, ymin: -1, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, objetsMathalea)\n        if (!this.sup) {\n          texte += `<br>On a $${B.nom + A.nom} = ${texNombre(BA)}$ cm, $${A.nom + D.nom} = ${texNombre(AD)}$ cm et $\\\\widehat{${B.nom + A.nom + C.nom}}=${BAC}°$.`\n        }\n        texteCorr = ''\n        if (this.correctionDetaillee) {\n          const texte1 = texteSurSegment('hypoténuse', C, A)\n          const texte2 = texteSurSegment('adjacent', A, B, 'black', 1)\n          texteCorr += mathalea2d({ xmin: -1, ymin: -2, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, t1c, t2, c1, c2, a1, a2, labels, texte1, texte2)\n          texteCorr += '<br>'\n        }\n        texteCorr += `$${C.nom + B.nom + A.nom}$ est rectangle en $${B.nom}$ donc $\\\\cos\\\\left(\\\\widehat{${B.nom + A.nom + C.nom}}\\\\right)=\\\\dfrac{${B.nom + A.nom}}{${A.nom + C.nom}}\\\\quad$ `\n        texteCorr += `soit $\\\\quad\\\\cos(${BAC}°)=\\\\dfrac{${texNombre(BA)}}{${A.nom + C.nom}}\\\\quad$ et $\\\\quad ${A.nom + C.nom}=\\\\dfrac{${texNombre(BA)}}{\\\\cos(${BAC}°)}\\\\approx${texNombre(AC)}$ cm.`\n        if (this.correctionDetaillee) {\n          const texte3 = texteSurSegment('adjacent', C, A)\n          const texte4 = texteSurSegment('opposé', A, D, 'black')\n          texteCorr += '<br><br>' + mathalea2d({ xmin: -1, ymin: -1, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, t1, t2c, c1, c2, a3, a4, a5, labels, texte3, texte4)\n        }\n        texteCorr += `<br><br>$${C.nom + A.nom + D.nom}$ est rectangle en $${A.nom}$ donc $\\\\tan\\\\left(\\\\widehat{${A.nom + C.nom + D.nom}}\\\\right)=\\\\dfrac{${A.nom + D.nom}}{${A.nom + C.nom}}\\\\quad$ `\n        texteCorr += `soit $\\\\quad\\\\tan\\\\left(\\\\widehat{${A.nom + C.nom + D.nom}}\\\\right)\\\\approx\\\\dfrac{${texNombre(AD)}}{${texNombre(AC)}}\\\\quad$ et $\\\\quad\\\\widehat{${A.nom + C.nom + D.nom}}=\\\\text{arctan}\\\\left(\\\\dfrac{${texNombre(AD)}}{${texNombre(AC)}}\\\\right)\\\\approx${ACD}$°.`\n        texteCorr += `<br><br>La somme des angles d'un triangle est égale à 180° donc $\\\\widehat{${B.nom + C.nom + A.nom}}=180°-90°-${BAC}°=${90 - BAC}°$.`\n        texteCorr += `<br>De même, $\\\\widehat{${C.nom + D.nom + A.nom}}\\\\approx 180°-90°-${ACD}°\\\\approx${90 - ACD}°$.`\n        break\n      case 'BA-AD-ACB':\n        AC = calcul(BA / Math.sin(radians(ACB)), 1)\n        ACD = Math.round(degres(Math.atan(AD / AC)))\n        a1 = afficheMesureAngle(A, C, B, 'black', 1, ACB + '°')\n        if (this.sup) {\n          objetsMathalea.push(a1, a2, a3)\n        }\n        texte = mathalea2d({ xmin: -1, ymin: -1, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, objetsMathalea)\n        if (!this.sup) {\n          texte += `<br>On a $${B.nom + A.nom} = ${texNombre(BA)}$ cm, $${A.nom + D.nom} = ${texNombre(AD)}$ cm et $\\\\widehat{${A.nom + C.nom + B.nom}}=${ACB}°$.`\n        }\n        texteCorr = ''\n        if (this.correctionDetaillee) {\n          const texte1 = texteSurSegment('hypoténuse', C, A)\n          const texte2 = texteSurSegment('opposé', A, B, 'black', 1)\n          texteCorr += mathalea2d({ xmin: -1, ymin: -2, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, t1c, t2, c1, c2, a1, a2, labels, texte1, texte2)\n          texteCorr += '<br>'\n        }\n        texteCorr += `$${C.nom + B.nom + A.nom}$ est rectangle en $${B.nom}$ donc $\\\\sin\\\\left(\\\\widehat{${A.nom + C.nom + B.nom}}\\\\right)=\\\\dfrac{${B.nom + A.nom}}{${A.nom + C.nom}}\\\\quad$ `\n        texteCorr += `soit $\\\\quad\\\\sin(${ACB}°)=\\\\dfrac{${texNombre(BA)}}{${A.nom + C.nom}}\\\\quad$ et $\\\\quad ${A.nom + C.nom}=\\\\dfrac{${texNombre(BA)}}{\\\\sin(${ACB}°)}\\\\approx${texNombre(AC)}$ cm.`\n        if (this.correctionDetaillee) {\n          const texte3 = texteSurSegment('adjacent', C, A)\n          const texte4 = texteSurSegment('opposé', A, D, 'black')\n          texteCorr += '<br><br>' + mathalea2d({ xmin: -1, ymin: -1, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, t1, t2c, c1, c2, a3, a4, a5, labels, texte3, texte4)\n        }\n        texteCorr += `<br><br>$${C.nom + A.nom + D.nom}$ est rectangle en $${A.nom}$ donc $\\\\tan\\\\left(\\\\widehat{${A.nom + C.nom + D.nom}}\\\\right)=\\\\dfrac{${A.nom + D.nom}}{${A.nom + C.nom}}\\\\quad$ `\n        texteCorr += `soit $\\\\quad\\\\tan\\\\left(\\\\widehat{${A.nom + C.nom + D.nom}}\\\\right)\\\\approx\\\\dfrac{${texNombre(AD)}}{${texNombre(AC)}}\\\\quad$ et $\\\\quad\\\\widehat{${A.nom + C.nom + D.nom}}=\\\\text{arctan}\\\\left(\\\\dfrac{${texNombre(AD)}}{${texNombre(AC)}}\\\\right)\\\\approx${ACD}$°.`\n        texteCorr += `<br><br>La somme des angles d'un triangle est égale à 180° donc $\\\\widehat{${B.nom + C.nom + A.nom}}=180°-90°-${BAC}°=${90 - BAC}°$.`\n        texteCorr += `<br>De même, $\\\\widehat{${C.nom + D.nom + A.nom}}\\\\approx 180°-90°-${ACD}°\\\\approx${90 - ACD}°$.`\n        break\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Figure codée']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","MonSuperExerciceTropBeau2nde","MonSuperExerciceTropBeau","this","Exercice","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacingCorr","correctionDetailleeDisponible","context","correctionDetaillee","video","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestion","choice","texte","texteCorr","B","point","A","randint","C","longueur","t1","polygone","t1c","color","epaisseur","c1","codageAngleDroit","D","similitude","calcul","t2","t2c","c2","nom","creerNomDePolygone","labels","labelPoint","BA","AD","BAC","Math","ceil","angle","AC","cos","radians","ACD","round","degres","atan","a1","afficheMesureAngle","a2","afficheLongueurSegment","a3","a4","a5","codeAngle","ACB","objetsMathalea","sup","push","mathalea2d","xmin","ymin","xmax","x","ymax","max","y","texNombre","texte1","texteSurSegment","texte2","texte3","texte4","sin","listeQuestionsToContenu","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}