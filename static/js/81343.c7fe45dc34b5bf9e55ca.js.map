{"version":3,"file":"js/81343.c7fe45dc34b5bf9e55ca.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { point, segmentAvecExtremites, labelPoint, arcPointPointAngle, mathalea2d, fixeBordures, texteSurSegment, texteSurArc, rotation, homothetie } from '../../modules/2d.js'\nimport { context } from '../../modules/context.js'\nimport { choice, randint, listeQuestionsToContenu, choisitLettresDifferentes, texNum, combinaisonListes } from '../../modules/outils.js'\nimport { fraction, abs, multiply, evaluate, divide, isInteger, pow, round, subtract, max } from 'mathjs'\nexport const titre = 'Homothétie (calculs)'\n// eslint-disable-next-line no-debugger\n// debugger\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '28/11/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Calculs dans une homothétie : longueurs, aires.\n * @author Frédéric PIOU\n * Référence\n*/\nexport default function calculsHomothetie () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 11 // Nombre de questions par défaut\n  this.nbCols = 0 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 0 // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 1 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = true\n  context.isHtml ? (this.spacing = 2.5) : (this.spacing = 0)\n  context.isHtml ? (this.spacingCorr = 2.5) : (this.spacingCorr = 0)\n  this.sup = 0 // Type d'exercice\n  this.sup2 = 3 // 1 : Homothéties de rapport positif, 2: de rapport négatif 3 : mélange\n  this.sup3 = 1 // Choix des valeurs\n  this.sup4 = true // Affichage des figures facultatives dans l'énoncé (en projet)\n  this.besoinFormulaireNumerique = [\n    'Type de question', 10, [\n      '0 : Mélange des types de questions',\n      '1 : Calculer le rapport',\n      '2 : Calculer une longueur image',\n      '3 : Calculer une longueur antécédent',\n      '4 : Calculer une longueur image (deux étapes)',\n      '5 : Calculer une longueur antécédent (deux étapes)',\n      '6 : Calculer une aire image',\n      '7 : Calculer une aire antécédent',\n      '8 : Calculer le rapport à partir des aires',\n      '9 : Calculer le rapport connaissant OA et AA\\'',\n      '10: Encadrer le rapport k',\n      '11: Encadrer le rapport k connaissant OA et AA\\''\n    ].join('\\n')\n  ]\n  this.besoinFormulaire2Numerique = [\n    'Signe du rapport',\n    3,\n    '1 : positif\\n2 : négatif\\n3 : mélange'\n  ]\n  this.besoinFormulaire3Numerique = [\n    'Choix des valeurs',\n    3,\n    '1 : k est décimal (0.1 < k < 4) \\n2 : k est une fraction k = a/b avec (a,b) in [1;9]\\n3 : k est une fraction et les mesures sont des entiers'\n  ]\n  this.besoinFormulaire4CaseACocher = ['Figure dans l`énoncé (1-6,9-11)', false]\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typeQuestionsDisponibles = []\n    if (this.sup === 0) {\n      typeQuestionsDisponibles = ['rapport', 'image', 'antécédent', 'image2etapes', 'antecendent2etapes', 'aireImage', 'aireAntécédent', 'aireRapport', 'rapport2', 'encadrerk', 'encadrerk2']\n    } else {\n      typeQuestionsDisponibles = [['rapport', 'image', 'antécédent', 'image2etapes', 'antecendent2etapes', 'aireImage', 'aireAntécédent', 'aireRapport', 'rapport2', 'encadrerk', 'encadrerk2'][this.sup - 1]]\n    }\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions)\n    const kEstEntier = this.sup3 > 1\n    const valeursSimples = this.sup3 === 3\n    for (let i = 0, approx, environ, melange, donnee1, donnee2, donnee3, donnees, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // Boucle principale où i+1 correspond au numéro de la question\n      const lettres = choisitLettresDifferentes(5, ['P', 'Q', 'U', 'V', 'W', 'X', 'Y', 'Z'])\n      const A = lettres[0]; const hA = lettres[1]; const O = lettres[2]; const B = lettres[3]; const hB = lettres[4]\n      const ks = fraction(choice([[1], [-1], [-1, 1]][this.sup2 - 1]))\n      let k = fraction(1, 1)\n      while (abs(k).toString() === '1') {\n        k = kEstEntier ? multiply(fraction(randint(1, 9), randint(1, 9)), ks) : multiply(fraction(choice([randint(15, 40) / 10, randint(1, 9) / 10])), ks)\n      }\n      let absk = abs(k)\n      const agrandissement = evaluate(absk > 1)\n      const kpositif = evaluate(k > 0)\n      const longueurEntiere = valeursSimples ? fraction(randint(1, 19)) : fraction(randint(11, 99))\n      let OA = multiply(agrandissement ? divide(longueurEntiere, 10) : longueurEntiere, 10 ** (valeursSimples) * absk.d ** (kEstEntier))\n      let OhA = multiply(k, OA)\n      let OB = multiply(divide(randint(10, 99, [parseInt(longueurEntiere.toString())]), fraction(10)), 10 ** (valeursSimples) * absk.d ** (kEstEntier))\n      let OhB = multiply(k, OB)\n      let AhA = subtract(OhA, OA)\n      let kAire = fraction(choice([randint(1, 4) + 0.5 + choice([0, 0.5]), randint(1, 9) / 10]))\n      let Aire = valeursSimples ? fraction(randint(10, 99)) : fraction(randint(100, 999) / 10)\n      let hAire = multiply(pow(kAire, 2), Aire)\n      let hAireArrondie = round(hAire, 2)\n      const plusgrandque = agrandissement ? '>' : '<'\n      const unAgrandissement = agrandissement ? 'un agrandissement' : 'une réduction'\n      const intervallek = agrandissement ? (kpositif ? '$k > 1$' : '$k < -1$') : (kpositif ? '$0 < k < 1$' : '$-1 < k < 0$')\n      const positif = kpositif ? 'positif' : 'négatif'\n      const signek = kpositif ? '' : '-'\n      const lopposede = kpositif ? '' : 'l\\'opposé de '\n      const lopposedu = kpositif ? 'le' : 'l\\'opposé du '\n      const derapportpositifet = this.sup4 ? '' : `de rapport ${positif} et `\n      const inNotin = kpositif ? '\\\\in' : '\\\\notin'\n      const illustrerParUneFigureAMainLevee = this.sup4 ? '' : 'Illustrer la situation par une figure à main levée.<br>'\n      let kinverse = abs(divide(1, k))\n      const OhAdivkInversed = texNum(abs(divide(OhA, kinverse.d)))\n      const OhBdivkInversed = texNum(abs(divide(OhB, kinverse.d)))\n      const largeurFigure = divide(10, max(abs(OA), abs(OhA), abs(AhA)))\n      let testFigureCorrigee = true\n      let correctionOhA = OhA\n      let correctionOA = OA\n      if (evaluate(abs(k) < 0.3)) {\n        correctionOhA = multiply(multiply(fraction(3, 10), OA), (-1) ** evaluate(k < 0))\n        // console.log(i + 1, k.toString(), 'cas1')\n      } else if (evaluate(abs(k) < 1 && abs(k) > 0.7)) {\n        correctionOhA = multiply(multiply(fraction(7, 10), OA), (-1) ** evaluate(k < 0))\n        // console.log(i + 1, k.toString(), 'cas2')\n      } else if (evaluate(abs(k) > 1 && abs(k) < 1.3)) {\n        correctionOhA = multiply(multiply(fraction(13, 10), OA), (-1) ** evaluate(k < 0))\n        // console.log(i + 1, k.toString(), 'cas3')\n      } else if (evaluate(abs(k) > 4)) {\n        correctionOA = multiply(fraction(2, 1), OA)\n        // console.log(i + 1, k.toString(), 'cas4')\n      } else {\n        testFigureCorrigee = false\n        // console.log(i + 1, k.toString(), 'cas5')\n      }\n      const figurealechelle = !(testFigureCorrigee && this.sup4) || [4, 5, 6, 7, 8].includes(listeTypeQuestions[i]) ? '' : '(La figure n\\'est pas à l\\'échelle)'\n      const figurealechelle2 = !(this.sup4) ? '' : '(La figure n\\'est pas à l\\'échelle)'\n      let figure = {\n        O: point(0, 0, `${O}`),\n        A: point(multiply(correctionOA, largeurFigure), 0, `${A}`, 'below'),\n        hA: point(multiply(correctionOhA, largeurFigure), 0, `${hA}`, kpositif ? 'below' : 'above')\n      }\n      figure = Object.assign({}, figure, {\n        B: homothetie(rotation(figure.A, figure.O, 40), figure.O, 1.2, `${B}`),\n        hB: homothetie(rotation(figure.hA, figure.O, 40), figure.O, 1.2, `${hB}`, kpositif ? 'above' : 'below')\n      })\n      kinverse = { tex: texNum(kinverse, kEstEntier), n: kinverse.n, d: kinverse.d }\n      OhA = texNum(abs(OhA))\n      const OhAtimeskinverse = (valeursSimples && !isInteger(absk)) ? `=${OhA}\\\\times ${kinverse.tex}` + (kinverse.d !== 1 ? `=\\\\dfrac{${OhA}}{${kinverse.d}}\\\\times ${kinverse.n}=${OhAdivkInversed}\\\\times ${kinverse.n}` : '') : ''\n      OhB = texNum(abs(OhB))\n      const OhBtimeskinverse = (valeursSimples && !isInteger(absk)) ? `=${OhB}\\\\times ${kinverse.tex}` + (kinverse.d !== 1 ? `=\\\\dfrac{${OhB}}{${kinverse.d}}\\\\times ${kinverse.n}=${OhBdivkInversed}\\\\times ${kinverse.n}` : '') : ''\n      hAire = texNum(hAire)\n      hAireArrondie = texNum(hAireArrondie)\n      k = texNum(k, kEstEntier)\n      kAire = texNum(kAire, kEstEntier)\n      const parentheseskAire = (absk.d === 1 || this.sup3 === 1) && kpositif ? signek + kAire : String.raw`\\left(${signek}${kAire}\\right)`\n      absk = texNum(absk, kEstEntier)\n      OA = texNum(OA)\n      AhA = texNum(abs(AhA))\n      OB = texNum(OB)\n      Aire = texNum(Aire)\n      const calculsOhA = !kpositif ? `${hA}${A} - ${O}${A} = ${AhA} - ${OA}` : agrandissement ? `${O}${A} + ${A}${hA} = ${OA} + ${AhA} ` : `${O}${A} - ${A}${hA} = ${OA} - ${AhA}`\n      figure = Object.assign({}, figure, {\n        segmentOA: segmentAvecExtremites(figure.O, figure.A),\n        segmentOhA: segmentAvecExtremites(figure.O, figure.hA),\n        segmentOB: segmentAvecExtremites(figure.O, figure.B),\n        segmentOhB: segmentAvecExtremites(figure.O, figure.hB)\n      })\n      figure = Object.assign({}, figure, {\n        arcOA: agrandissement || !kpositif ? figure.A : arcPointPointAngle(figure.O, figure.A, 60, false),\n        arcOhA: !agrandissement || !kpositif ? figure.hA : arcPointPointAngle(figure.O, figure.hA, 60, false),\n        arcOB: agrandissement || !kpositif ? figure.B : arcPointPointAngle(figure.B, figure.O, 60, false),\n        arcOhB: !agrandissement || !kpositif ? figure.hB : arcPointPointAngle(figure.hB, figure.O, 60, false),\n        arcAhA: kpositif ? figure.A : arcPointPointAngle(figure.hA, figure.A, 60, false),\n        legendeOA: agrandissement || !kpositif ? texteSurSegment(`${OA.replace('{,}', ',')} cm`, figure.A, figure.O, 'black', 0.30) : texteSurArc(`${OA.replace('{,}', ',')} cm`, figure.O, figure.A, 60, 'black', 0.30),\n        legendeOhA: !agrandissement || !kpositif ? texteSurSegment(`${OhA.replace('{,}', ',')} cm`, figure.hA, figure.O, 'black', 0.30) : texteSurArc(`${OhA.replace('{,}', ',')} cm`, figure.O, figure.hA, 60, 'black', 0.30),\n        legendeOB: agrandissement || !kpositif ? texteSurSegment(`${OB.replace('{,}', ',')} cm`, figure.O, figure.B, 'black', 0.30) : texteSurArc(`${OB.replace('{,}', ',')} cm`, figure.B, figure.O, 60, 'black', 0.30),\n        legendeOhB: !agrandissement || !kpositif ? texteSurSegment(`${OhB.replace('{,}', ',')} cm`, figure.O, figure.hB, 'black', 0.30) : texteSurArc(`${OhB.replace('{,}', ',')} cm`, figure.hB, figure.O, 60, 'black', 0.30),\n        legendeAhA: kpositif ? texteSurSegment(`${AhA.replace('{,}', ',')} cm`, figure.hA, figure.A, 'black', 0.30) : texteSurArc(`${AhA.replace('{,}', ',')} cm`, figure.hA, figure.A, 60, 'black', 0.30)\n      })\n      figure = Object.assign({}, figure, {\n        legendeOAi: agrandissement || !kpositif ? texteSurSegment('?', figure.O, figure.A, 'black', 0.30) : texteSurArc('?', figure.O, figure.A, 60, 'black', 0.30),\n        legendeOhAi: !agrandissement || !kpositif ? texteSurSegment('?', figure.O, figure.hA, 'black', 0.30) : texteSurArc('?', figure.O, figure.hA, 60, 'black', 0.30),\n        legendeOBi: agrandissement || !kpositif ? texteSurSegment('?', figure.O, figure.B, 'black', 0.30) : texteSurArc('?', figure.B, figure.O, 60, 'black', 0.30),\n        legendeOhBi: !agrandissement || !kpositif ? texteSurSegment('?', figure.O, figure.hB, 'black', 0.30) : texteSurArc('?', figure.hB, figure.O, 60, 'black', 0.30)\n      })\n      figure.arcOA.pointilles = true\n      figure.arcOhA.pointilles = true\n      figure.arcOB.pointilles = true\n      figure.arcOhB.pointilles = true\n      figure.arcAhA.pointilles = true\n      // const fscale = context.isHtml ? kpositif ? 1 : 0.7 : kpositif ? 0.7 : 0.5\n      const fscale = context.isHtml ? 1 : kpositif ? 0.7 : 0.6\n      const flabelsRapport = labelPoint(figure.O, figure.A, figure.hA)\n      let frapport = mathalea2d(Object.assign({}, fixeBordures([figure.segmentOA, figure.segmentOhA, figure.legendeOA, figure.legendeOhA]), { style: 'inline', scale: fscale }), figure.segmentOA, figure.segmentOhA, figure.arcOA, figure.arcOhA, figure.legendeOA, figure.legendeOhA, flabelsRapport)\n      frapport = { enonce: (this.sup4 ? '<br>' + frapport : ''), solution: frapport }\n      const flabelsImage = labelPoint(figure.O, figure.A, figure.hA)\n      let fImage = mathalea2d(Object.assign({}, fixeBordures([figure.A, figure.O, figure.hA, figure.segmentOA, figure.segmentOhA, figure.legendeOA, figure.legendeOhA]), { style: 'inline', scale: fscale }), figure.segmentOA, figure.segmentOhA, figure.arcOA, figure.arcOhA, figure.legendeOA, figure.legendeOhAi, flabelsImage)\n      fImage = { enonce: (this.sup4 ? fImage : ''), solution: fImage }\n      const flabelsAntecedent = labelPoint(figure.O, figure.A, figure.hA)\n      let fAntecedent = mathalea2d(Object.assign({}, fixeBordures([figure.A, figure.O, figure.hA, figure.segmentOA, figure.segmentOhA, figure.legendeOA, figure.legendeOhA]), { style: 'inline', scale: fscale }), figure.segmentOA, figure.segmentOhA, figure.arcOA, figure.arcOhA, figure.legendeOAi, figure.legendeOhA, flabelsAntecedent)\n      fAntecedent = { enonce: (this.sup4 ? fAntecedent : ''), solution: fAntecedent }\n      const flabelsImage2etapes = labelPoint(figure.O, figure.A, figure.hA, figure.B, figure.hB)\n      let fImage2etapes = mathalea2d(Object.assign({}, fixeBordures([figure.A, figure.O, figure.hA, figure.segmentOA, figure.segmentOhA, figure.B, figure.hB, figure.segmentOB, figure.segmentOhB, figure.legendeOA, figure.legendeOhA, figure.legendeOB, figure.legendeOhB]), { style: 'inline', scale: fscale }), figure.segmentOA, figure.segmentOhA, figure.segmentOB, figure.segmentOhB, figure.legendeOB, figure.arcOB, figure.legendeOhBi, figure.arcOhB, figure.legendeOA, figure.arcOA, figure.legendeOhA, figure.arcOhA, flabelsImage2etapes)\n      fImage2etapes = { enonce: (this.sup4 ? fImage2etapes : ''), solution: fImage2etapes }\n      const flabelsAntecedent2etapes = labelPoint(figure.O, figure.A, figure.hA, figure.B, figure.hB)\n      let fAntecedent2etapes = mathalea2d(Object.assign({}, fixeBordures([figure.A, figure.O, figure.hA, figure.segmentOA, figure.segmentOhA, figure.B, figure.hB, figure.segmentOB, figure.segmentOhB, figure.legendeOA, figure.legendeOhA, figure.legendeOB, figure.legendeOhB]), { style: 'inline', scale: fscale }), figure.segmentOA, figure.segmentOhA, figure.segmentOB, figure.segmentOhB, figure.legendeOBi, figure.arcOB, figure.legendeOhB, figure.arcOhB, figure.legendeOA, figure.arcOA, figure.legendeOhA, figure.arcOhA, flabelsAntecedent2etapes)\n      fAntecedent2etapes = { enonce: (this.sup4 ? fAntecedent2etapes : ''), solution: fAntecedent2etapes }\n      let frapport2 = mathalea2d(Object.assign({}, fixeBordures([figure.segmentOA, figure.segmentOhA, figure.legendeOA, figure.legendeAhA, flabelsRapport]), { style: 'inline', scale: fscale }), figure.segmentOA, figure.segmentOhA, figure.arcOA, figure.arcAhA, figure.legendeOA, figure.legendeAhA, flabelsRapport)\n      frapport2 = { enonce: (this.sup4 ? '<br>' + frapport2 : ''), solution: frapport2 }\n      switch (listeTypeQuestions[i]) {\n        case 'rapport':\n          donnees = [String.raw`${O}${hA}=${OhA}\\text{ cm}`, String.raw`${O}${A}=${OA}\\text{ cm}`]\n          melange = combinaisonListes([0, 1])\n          donnee1 = donnees[melange[0]]\n          donnee2 = donnees[melange[1]]\n          texte = String.raw`\n                    $${hA}$ est l'image de $${A}$\n                    par une homothétie ${derapportpositifet}\n                    de centre $${O}$ tel que $ {${donnee1}}$ et $ {${donnee2}}$.\n                    <br>\n                    ${illustrerParUneFigureAMainLevee}\n                    Calculer le rapport $k$ de cette homothétie ${figurealechelle}.\n                    ${frapport.enonce}\n                    `\n          texteCorr = String.raw`\n                $k=${signek}\\dfrac{${O}${hA}}{${O}${A}}=${signek}\\dfrac{${OhA}}{${OA}}=${k}$.\n                `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                  $[${O}${hA}]$ est l'image de $[${O}${A}]$\n                  et $${O} ${hA} ${plusgrandque} ${O} ${A}$\n                  donc c'est ${unAgrandissement} et on a ${intervallek}.\n                  <br> ${frapport.solution}\n                  `\n            texteCorr += String.raw`\n                  <br>\n                  Le rapport de cette homothétie est ${lopposedu} quotient\n                  de la longueur d'un segment \"à l'arrivée\"\n                  par sa longueur \"au départ\".\n                  <br>\n                  Soit $k=${signek}\\dfrac{${O}${hA}}{${O}${A}}=${signek}\\dfrac{${OhA}}{${OA}}=${k}$.\n                  `\n          }\n          break\n        case 'image':\n          texte = String.raw`\n                $${hA}$ est l'image de $${A}$ par une homothétie\n                de centre $${O}$ et de rapport $k=${k}$\n                tel que $ {${O}${A}=${OA}\\text{ cm}}$.\n                <br>\n                ${illustrerParUneFigureAMainLevee}\n                Calculer $${O}${hA}$  ${figurealechelle}.\n                <br>${fImage.enonce}\n                `\n          texteCorr = String.raw`\n                $${O}${hA}= ${absk} \\times ${OA} =  ${OhA}~\\text{cm}$.\n                `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                ${intervallek} donc $[${O}${hA}]$ est ${unAgrandissement} de $[${O}${A}]$.\n                <br>${fImage.solution}\n                `\n            texteCorr += String.raw`\n                <br>\n                Une homothétie de rapport ${positif} est\n                une transformation qui multiplie\n                toutes les longueurs par ${lopposede} son rapport.\n                <br>\n                Soit $${O}${hA}=${signek}k \\times ${O}${A}$.\n                <br>\n                Donc $${O}${hA}= ${absk} \\times ${OA} =  ${OhA}~\\text{cm}$.\n                `\n          }\n          break\n        case 'antécédent':\n          texte = String.raw`\n                $${hA}$ est l'image de $${A}$ par une\n                homothétie de centre $${O}$ et de rapport\n                $k=${k}$ tel que $ {${O}${hA}=${OhA}\\text{ cm}}$.\n                <br>\n                ${illustrerParUneFigureAMainLevee}\n                Calculer $${O}${A}$  ${figurealechelle}.\n                <br>${fAntecedent.enonce}\n                `\n          texteCorr = String.raw`\n                $${O}${A}=\\dfrac{${O}${hA}}{${absk}}=\\dfrac{${OhA}}{${absk}} = ${OA}~\\text{cm}$.\n                `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                ${intervallek} donc $[${O}${hA}]$ est ${unAgrandissement} de $[${O}${A}]$.\n                <br>${fAntecedent.solution}\n                `\n            texteCorr += String.raw`\n              <br>\n              Une homothétie de rapport ${positif} est\n              une transformation qui multiplie\n              toutes les longueurs par ${lopposede} son rapport.\n              <br>\n              Soit $${O}${hA}=${signek}k \\times  ${O}${A}$.\n              <br>\n              Donc $${O}${A}=\\dfrac{${O}${hA}}{${signek}k}=\\dfrac{${OhA}}{${absk}} ${OhAtimeskinverse} = ${OA}~\\text{cm}$.\n              `\n          }\n          break\n        case 'image2etapes':\n          donnees = [String.raw`${O}${B}=${OB}\\text{ cm}`, String.raw`${O}${hA}=${OhA}\\text{ cm}`, String.raw`${O}${A}=${OA}\\text{ cm}`]\n          melange = combinaisonListes([0, 1, 2])\n          donnee1 = donnees[melange[0]]\n          donnee2 = donnees[melange[1]]\n          donnee3 = donnees[melange[2]]\n          texte = String.raw`\n                    $${hA}$ et $${hB}$ sont les images respectives\n                    de $${A}$ et $${B}$ par une homothétie\n                    ${derapportpositifet} de centre $${O}$ tel que\n                    $ {${donnee1}}$, $ {${donnee2}}$ et $ {${donnee3}}$.\n                    <br>\n                    ${illustrerParUneFigureAMainLevee}\n                    Calculer $${O}${hB}$ ${figurealechelle2}.\n                    <br>${fImage2etapes.enonce}\n                    `\n          texteCorr = String.raw`\n                    $k=${signek}\\dfrac{${O}${hA}}{${O}${A}}=${signek}\\dfrac{${OhA}}{${OA}}=${k}$ et $${O}${hB}= ${absk} \\times ${OB} = ${OhB}~\\text{cm}$.\n                    `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                    $[${O}${hA}]$ est l'image de $[${O}${A}]$\n                    et $${O} ${hA} ${plusgrandque} ${O} ${A}$\n                    donc c'est ${unAgrandissement} et on a ${intervallek}.\n                    <br>${fImage2etapes.solution}\n                    `\n            texteCorr += String.raw`\n                    <br>        \n                    Le rapport de cette homothétie est\n                    ${lopposedu} quotient de la longueur d'un segment\n                    \"à l'arrivée\" par sa longueur \"au départ\".\n                    <br>\n                    Soit $k=${signek}\\dfrac{${O}${hA}}{${O}${A}}=${signek}\\dfrac{${OhA}}{${OA}}=${k}$.\n                    <br>\n                    $[${O}${hB}]$ est l'image de $[${O}${B}]$.\n                    <br>\n                    Or une homothétie de rapport ${positif}\n                    est une transformation qui multiplie\n                    toutes les longueurs par ${lopposede} son rapport.\n                    <br>\n                    Soit $${O}${hB}= ${signek}k \\times ${O}${B}$.\n                    <br>\n                    Donc $${O}${hB}= ${absk} \\times ${OB} = ${OhB}~\\text{cm}$.\n                    `\n          }\n          break\n        case 'antecendent2etapes':\n          donnees = [String.raw`${O}${hB}=${OhB}\\text{ cm}`, String.raw`${O}${hA}=${OhA}\\text{ cm}`, String.raw`${O}${A}=${OA}\\text{ cm}`]\n          melange = combinaisonListes([0, 1, 2])\n          donnee1 = donnees[melange[0]]\n          donnee2 = donnees[melange[1]]\n          donnee3 = donnees[melange[2]]\n          texte = String.raw`\n                      $${hA}$ et $${hB}$ sont les images respectives\n                      de $${A}$ et $${B}$ par une homothétie ${derapportpositifet}\n                      de centre $${O}$ tel que\n                      $ {${donnee1}}$, $ {${donnee2}}$ et $ {${donnee3}}$.\n                      <br>\n                      ${illustrerParUneFigureAMainLevee}\n                      Calculer $${O}${B}$ ${figurealechelle2}.\n                      <br>${fAntecedent2etapes.enonce}\n                      `\n          texteCorr = String.raw`\n                      $k=${signek}\\dfrac{${O}${hA}}{${O}${A}}=${signek}\\dfrac{${OhA}}{${OA}}=${k}$ et $${O}${B}=\\dfrac{${O}${hB}}{${absk}}=\\dfrac{${OhB}}{${absk}} = ${OB}~\\text{cm}$.\n                      `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                    $[${O}${hA}]$ est l'image de $[${O}${A}]$\n                    et $${O} ${hA} ${plusgrandque} ${O} ${A}$\n                    donc c'est ${unAgrandissement} et on a ${intervallek}.\n                    <br>${fAntecedent2etapes.solution}\n                    `\n            texteCorr += String.raw`\n                      <br>\n                      Le rapport d'une homothétie est ${lopposedu} quotient\n                      de la longueur d'un segment \"à l'arrivée\" par sa longueur \"au départ\".\n                      <br>\n                      Soit $k=${signek}\\dfrac{${O}${hA}}{${O}${A}}=${signek}\\dfrac{${OhA}}{${OA}}=${k}$.\n                      <br>\n                      $[${O}${hB}]$ est l'image de $[${O}${B}]$.\n                      <br>\n                      Or une homothétie de rapport ${positif} est\n                      une transformation qui multiplie\n                      toutes les longueurs par ${lopposede} son rapport.\n                      <br>\n                      Soit $${O}${hB}=${signek}k \\times ${O}${B}$.\n                      <br>\n                      Donc $${O}${B}=\\dfrac{${O}${hB}}{${signek}k}=\\dfrac{${OhB}}{${absk}} ${OhBtimeskinverse} = ${OB}~\\text{cm}$.\n                      `\n          }\n          break\n        case 'aireImage':\n          environ = (hAire === hAireArrondie) ? '' : 'environ'\n          approx = (environ === 'environ') ? '\\\\approx' : '='\n          texte = String.raw`\n                Une figure a pour aire $ {${Aire}\\text{ cm}^2}$.\n                <br>\n                Calculer l'aire de son image par une homothétie de rapport $${signek}${kAire}$ (arrondir au $ {\\text{mm}^2}$ près si besoin).\n                `\n          texteCorr = String.raw`\n                $ {${parentheseskAire}^2 \\times ${Aire} ${approx} ${hAireArrondie}~\\text{cm}^2}$\n                `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                Une homothétie de rapport ${positif} est une transformation qui multiplie toutes les aires par le carré de son rapport.\n                <br>\n                $${parentheseskAire}^2 \\times ${Aire} = ${hAire}$\n                <br>\n                Donc l'aire de l'image de cette figure est ${environ} $ {${hAireArrondie}~\\text{cm}^2}$.\n                `\n          }\n          break\n        case 'aireAntécédent':\n          texte = String.raw`\n                  L'image d'une figure par une homothétie de rapport $${signek}${kAire}$ a pour aire $ {${hAire}\\text{ cm}^2}$.\n                  <br>\n                  Calculer l'aire de la figure de départ.\n                  `\n          texteCorr = String.raw`\n                  $ {\\dfrac{${hAire}}{${parentheseskAire}^2} = ${Aire}~\\text{cm}^2}$\n                  `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                  Une homothétie de rapport ${positif} est une transformation qui multiplie toutes les aires par le carré de son rapport.\n                  <br>\n                  Notons $\\mathscr{A}$ l'aire de la figure de départ.\n                  <br>\n                  D'où $${parentheseskAire}^2 \\times \\mathscr{A} = ${hAire}$.\n                  <br>\n                  Puis $\\mathscr{A}=\\dfrac{${hAire}}{${parentheseskAire}^2}=${Aire}$.\n                  <br>\n                  Donc l'aire de la figure de départ est $ {${Aire}~\\text{cm}^2}$.\n                  `\n          }\n          break\n        case 'aireRapport':\n          texte = String.raw`\n                    Une figure et son image par une homothétie de rapport ${positif} ont respectivement pour aires $ {${Aire}\\text{ cm}^2}$ et $ {${hAire}\\text{ cm}^2}$.\n                    <br>\n                    Calculer le rapport de l'homothétie.\n                    `\n          texteCorr = String.raw`\n                    $ {k=${signek}\\sqrt{\\dfrac{${hAire}}{${Aire}}} = ${signek}${kAire}}$\n                    `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                    Une homothétie de rapport ${positif} est une transformation qui multiplie toutes les aires par le carré de son rapport.\n                    <br>\n                    Notons $k$ le rapport de cette homothétie.\n                    On a donc $k^2 \\times ${Aire} = ${hAire}$,\n                    ou encore $k^2=\\dfrac{${hAire}}{${Aire}}$.\n                    <br>\n                    D'où $ {k=${signek}\\sqrt{\\dfrac{${hAire}}{${Aire}}} = ${signek}${kAire}}$.\n                    `\n          }\n          break\n        case 'rapport2':\n          donnees = [String.raw`${A}${hA}=${AhA}\\text{ cm}`, String.raw`${O}${A}=${OA}\\text{ cm}`]\n          melange = combinaisonListes([0, 1])\n          donnee1 = donnees[melange[0]]\n          donnee2 = donnees[melange[1]]\n          texte = String.raw`\n                    $${hA}$ est l'image de $${A}$\n                    par une homothétie ${derapportpositifet}\n                    de centre $${O}$ tel que $ {${donnee1}}$ et $ {${donnee2}}$.\n                    <br>\n                    ${illustrerParUneFigureAMainLevee}\n                    Calculer le rapport $k$ de cette homothétie ${figurealechelle}.\n                    ${frapport2.enonce}\n                    `\n          texteCorr = String.raw`\n                $k=${signek}\\dfrac{${O}${hA}}{${O}${A}}=${signek}\\dfrac{${OhA}}{${OA}}=${k}$.\n                `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                  $${O}${hA} = ${calculsOhA} = ${OhA}\\text{ cm}$\n                  <br>\n                  $[${O}${hA}]$ est l'image de $[${O}${A}]$\n                  et $${O} ${hA} ${plusgrandque} ${O} ${A}$\n                  donc c'est ${unAgrandissement} et on a ${intervallek}.\n                  <br> ${frapport.solution}\n                  `\n            texteCorr += String.raw`\n                  <br>\n                  Le rapport de cette homothétie est ${lopposedu} quotient\n                  de la longueur d'un segment \"à l'arrivée\"\n                  par sa longueur \"au départ\".\n                  <br>\n                  Soit $k=${signek}\\dfrac{${O}${hA}}{${O}${A}}=${signek}\\dfrac{${OhA}}{${OA}}=${k}$.\n                  `\n          }\n          break\n        case 'encadrerk':\n          donnees = [String.raw`${O}${hA}=${OhA}\\text{ cm}`, String.raw`${O}${A}=${OA}\\text{ cm}`]\n          melange = combinaisonListes([0, 1])\n          donnee1 = donnees[melange[0]]\n          donnee2 = donnees[melange[1]]\n          texte = String.raw`\n                    $${hA}$ est l'image de $${A}$\n                    par une homothétie ${derapportpositifet}\n                    de centre $${O}$ tel que $ {${donnee1}}$ et $ {${donnee2}}$.\n                    <br>\n                    ${illustrerParUneFigureAMainLevee}\n                    Sans effectuer de calculs, encadrer $k$ le plus précisément possible ${figurealechelle}.\n                    ${frapport.enonce}\n                    `\n          texteCorr = String.raw`\n                $${intervallek}$.\n                `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                  $[${O}${hA}]$ est l'image de $[${O}${A}]$\n                  et $${O} ${hA} ${plusgrandque} ${O} ${A}$\n                  donc c'est ${unAgrandissement}.\n                  <br>\n                  De plus $${hA}${inNotin}[${O};${A})$ donc ${intervallek}.\n                  <br> ${frapport.solution}\n                  `\n          }\n          break\n        case 'encadrerk2':\n          donnees = [String.raw`${A}${hA}=${AhA}\\text{ cm}`, String.raw`${O}${A}=${OA}\\text{ cm}`]\n          melange = combinaisonListes([0, 1])\n          donnee1 = donnees[melange[0]]\n          donnee2 = donnees[melange[1]]\n          texte = String.raw`\n                      $${hA}$ est l'image de $${A}$\n                      par une homothétie ${derapportpositifet}\n                      de centre $${O}$ tel que $ {${donnee1}}$ et $ {${donnee2}}$.\n                      <br>\n                      ${illustrerParUneFigureAMainLevee}\n                      Sans effectuer de calculs, encadrer $k$ le plus précisément possible ${figurealechelle}.\n                      ${frapport2.enonce}\n                      `\n          texteCorr = String.raw`\n                  $${intervallek}$.\n                  `\n          if (this.correctionDetaillee) {\n            texteCorr = String.raw`\n                    $${O}${hA} = ${calculsOhA} = ${OhA}\\text{ cm}$\n                    <br>\n                    $[${O}${hA}]$ est l'image de $[${O}${A}]$\n                    et $${O} ${hA} ${plusgrandque} ${O} ${A}$\n                    donc c'est ${unAgrandissement}.\n                    <br>\n                    De plus $${hA}${inNotin}[${O};${A})$ donc ${intervallek}.\n                    <br> ${frapport.solution}\n                    `\n          }\n          break\n      }\n      if (this.questionJamaisPosee(i, k)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","dateDePublication","calculsHomothetie","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","correctionDetailleeDisponible","correctionDetaillee","context","spacing","spacingCorr","sup","sup2","sup3","sup4","besoinFormulaireNumerique","join","besoinFormulaire2Numerique","besoinFormulaire3Numerique","besoinFormulaire4CaseACocher","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","typeQuestionsDisponibles","listeTypeQuestions","combinaisonListes","kEstEntier","valeursSimples","approx","environ","melange","donnee1","donnee2","donnee3","donnees","texte","texteCorr","i","cpt","lettres","choisitLettresDifferentes","A","hA","O","B","hB","ks","fraction","choice","k","abs","toString","multiply","randint","absk","agrandissement","evaluate","kpositif","longueurEntiere","OA","divide","d","OhA","OB","parseInt","OhB","AhA","subtract","kAire","Aire","hAire","pow","hAireArrondie","round","plusgrandque","unAgrandissement","intervallek","positif","signek","lopposede","lopposedu","derapportpositifet","inNotin","illustrerParUneFigureAMainLevee","kinverse","OhAdivkInversed","texNum","OhBdivkInversed","largeurFigure","max","testFigureCorrigee","correctionOhA","correctionOA","figurealechelle","includes","figurealechelle2","figure","point","Object","assign","homothetie","rotation","tex","n","OhAtimeskinverse","isInteger","OhBtimeskinverse","parentheseskAire","String","raw","calculsOhA","segmentOA","segmentAvecExtremites","segmentOhA","segmentOB","segmentOhB","arcOA","arcPointPointAngle","arcOhA","arcOB","arcOhB","arcAhA","legendeOA","texteSurSegment","replace","texteSurArc","legendeOhA","legendeOB","legendeOhB","legendeAhA","legendeOAi","legendeOhAi","legendeOBi","legendeOhBi","pointilles","fscale","flabelsRapport","labelPoint","frapport","mathalea2d","fixeBordures","style","scale","enonce","solution","flabelsImage","fImage","flabelsAntecedent","fAntecedent","flabelsImage2etapes","fImage2etapes","flabelsAntecedent2etapes","fAntecedent2etapes","frapport2","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","mg32Editable","listeArguments","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}