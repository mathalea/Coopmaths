{"version":3,"file":"js/38523.fc9b1051960e625c6614.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/4e/can4G08.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { randint, calcul, choice, texNombrec, texFractionReduite } from '../../../modules/outils.js'\nimport {\n  mathalea2d, point, labelPoint, segment, texteParPosition, milieu, tracePoint, codageAngleDroit\n} from '../../../modules/2d.js'\nimport { fraction } from '../../../modules/fractions.js'\nexport const titre = 'Calculer une aire ou un périmètre (carré et rectangle)'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence can4G07\n * Date de publication septembre 2021\n*/\nexport default function QuestionsAiresEtPerimetres () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.typeExercice = 'simple' // Cette ligne est très importante pour faire faire un exercice simple !\n  this.date = 1635092507483\n  this.formatChampTexte = 'largeur15 inline'\n  this.nbQuestions = 1\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n\n  this.nouvelleVersion = function () {\n    let a, b, c, n, d, A, B, C, D, N, maFraction\n    const objets = []\n    switch (choice([1, 2, 3, 4, 5, 6, 7])) {\n      case 1://\n        a = randint(3, 9)\n        b = randint(0, 1)\n        this.question = `Un carré de côté ${a} cm a le même périmètre qu'un rectangle de largeur ${a - b} cm et de longueur ${a + 1} cm ? (oui ou non)`\n        if (b === 0) {\n          this.correction = `Faux car $4\\\\times ${a}$ cm$\\\\neq 2\\\\times ${a}$ cm$ + 2\\\\times ${a + 1}$ cm.`\n          this.reponse = 'non'\n        } else {\n          this.correction = `Vrai car $4\\\\times ${a}$ cm = $2\\\\times ${a - 1}$ cm $ + 2\\\\times ${a + 1}$ cm$= ${4 * a}$ cm.`\n          this.reponse = 'oui'\n        }\n        this.ignoreCasse = true\n        break\n      case 2:// aire d'un carré connaissant son perimètre\n        a = randint(2, 10)\n        this.reponse = calcul(a * a)\n        this.question = `Quelle est l'aire d'un carré en cm$^2$ dont le périmètre est $${4 * a}$ cm ? `\n        this.correction = `Le côté du carré est $${4 * a}\\\\div 4=${a}$, donc son aire est : $${a}\\\\times ${a}=${a ** 2}$ cm$^2$.`\n\n        break\n      case 3:// perimètre d'un carré connaissant son aire\n        a = randint(1, 10)\n        c = a * a\n        this.reponse = calcul(4 * a)\n        this.question = `Déterminer le périmètre (en cm) d'un carré d'aire $${c}$ cm$^2$. `\n        this.correction = `Le côté du carré est $\\\\sqrt{${c}}=${a}$. Son périmètre est donc $4\\\\times ${a}=${4 * a}$ cm.`\n        break\n\n      case 4:// côté d'un carré connaissant son perimètre\n        a = randint(5, 20) * 4\n        this.reponse = calcul(a / 4)\n        this.question = `Le périmètre d'un carré est $${a}$ cm. Quelle est la longueur (en cm) du côté du carré ? `\n        this.correction = `Le côté du carré est $${a}\\\\div 4=${a / 4}$.`\n\n        break\n      case 5:// périmètre d'une figure\n        a = randint(1, 3)//\n        b = randint(4, 7)//\n        n = randint(7, 12)\n        c = randint(1, 6) + randint(3, 9) / 10\n        d = n - c\n        A = point(0, 0, 'P')\n        B = point(7, 1, 'Q', 'below')\n        C = point(6.5, 4, 'R')\n        D = point(2, 5, 'R')\n\n        objets.push(segment(A, B), segment(B, C), segment(C, D), segment(D, A), tracePoint(A, B, C, D))\n        objets.push(texteParPosition(`${texNombrec(b)} m`, milieu(A, D).x - 0.5, milieu(A, D).y, 'milieu', 'black', 1, 'middle', true),\n          texteParPosition(`${texNombrec(a)} m`, milieu(B, C).x + 0.5, milieu(B, C).y, 'milieu', 'black', 1, 'middle', true),\n          texteParPosition(`${texNombrec(c)} m`, milieu(A, B).x, milieu(A, B).y - 0.5, 'milieu', 'black', 1, 'middle', true),\n          texteParPosition(`${texNombrec(d)} m`, milieu(C, D).x, milieu(C, D).y + 0.5, 'milieu', 'black', 1, 'middle', true))\n\n        this.question = 'Quel est le périmètre de cette figure (en m) ?<br>'\n        this.question += mathalea2d({ xmin: -1, ymin: -1, xmax: 8, ymax: 6, pixelsParCm: 20, mainlevee: true, amplitude: 0.5, scale: 0.7, style: 'margin: auto' }, objets)\n        this.correction = ` Le périmètre est donné par : $${texNombrec(a)}+${texNombrec(b)}+${texNombrec(c)}+${texNombrec(d)}=${texNombrec(a + b + c + d)}$.<br>`\n        this.reponse = a + b + c + d\n\n        break\n      case 6:// agrandissement/réduction\n        N = choice(['a', 'b', 'c'])\n        if (N === 'a') {\n          a = randint(2, 7)// aire\n          c = randint(2, 4)// coefficient\n          this.question = `Les longueurs d'un rectangle de $${a}$ cm$^2$  sont multipliées par $${c}$.<br>\n          Quelle est l'aire (en cm$^2$) du rectangle ainsi obtenu ?\n          `\n\n          this.correction = ` Si les longueurs sont multiplées par $k$, les aires sont multipliées par $k^2$, soit ici par $${c}^2=${c ** 2}$.<br>\n          Ainsi, l'aire du nouveau rectangle est : $${a}\\\\times ${c * c}=${a * c * c}$ cm $^2$.\n      <br>`\n\n          this.reponse = a * c * c\n        }\n\n        if (N === 'b') {\n          n = randint(1, 3)\n          d = randint(n + 1, 10)\n          maFraction = fraction(n, d).simplifie()\n          this.question = `Les longueurs d'un triangle sont multipliées par $${maFraction.texFraction}$.<br>\n          Par combien est multipliée son aire  ?\n          `\n\n          this.correction = ` Si les longueurs sont multiplées par $k$, les aires sont multipliées par $k^2$.<br>\n          Ainsi, l'aire a été multipliée par : $\\\\left(\\\\dfrac{${n}}{${d}}\\\\right)^2=\\\\dfrac{${n * n}}{${d * d}}$.\n      <br>`\n\n          this.reponse = fraction(n * n, d * d)\n          this.formatInteractif = 'fraction'\n        }\n        if (N === 'c') {\n          n = randint(1, 3)\n          d = randint(n + 1, 10)\n          maFraction = fraction(n, d).simplifie()\n          this.question = `L'aire d'un parallélogramme a été multipliée par $\\\\dfrac{${n * n}}{${d * d}}$.<br>\n          Par combien ont été multipliées les longueurs de ses côtés ?\n          `\n\n          this.correction = ` Si les aires sont multiplées par $k$, les longueurs sont multipliées par $\\\\sqrt{k}$.<br>\n          Ainsi, les longueurs ont été multipliées par  : $\\\\sqrt{\\\\dfrac{${n * n}}{${d * d}}}=\\\\dfrac{${n}}{${d}}$.\n      <br>`\n          this.reponse = fraction(n * n, d * d)\n          this.formatInteractif = 'fraction'\n        }\n        break\n      case 7:// longueur à trouver à partir d'une aire triangle rectangle\n        a = randint(2, 10)//\n        b = randint(1, 5) * a\n        A = point(0, 0, 'A', 'below')\n        B = point(8, 0, 'B', 'below')\n        C = point(6, 3.46, 'C')\n\n        objets.push(segment(A, B), segment(B, C), segment(C, A), labelPoint(A, B, C), tracePoint(A, B, C), codageAngleDroit(A, C, B))\n        objets.push(texteParPosition(`${texNombrec(a)} m`, milieu(B, C).x + 0.5, milieu(B, C).y + 0.5, 'milieu', 'black', 1, 'middle', true)\n        )\n\n        this.question = ` L'aire du triangle $ABC$ est $${b}$ m$^2$. Donner la longueur $AC$ (en m).<br>`\n        this.question += mathalea2d({ xmin: -1, ymin: -1, xmax: 9, ymax: 4.5, pixelsParCm: 20, mainlevee: true, amplitude: 0.5, scale: 0.7, style: 'margin: auto' }, objets)\n        this.correction = ` L'aire de ce triangle rectangle est donnée par : $\\\\dfrac{BC\\\\times AC}{2}$.<br>\n          On cherche $AC$ telle que $\\\\dfrac{${a}\\\\times AC}{2}=${b}$. <br>\n          $AC=\\\\dfrac{2\\\\times ${b}}{${a}}=${texFractionReduite(2 * b, a)}$ m.\n      <br>`\n        this.reponse = calcul(2 * b / a)\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","QuestionsAiresEtPerimetres","typeExercice","date","formatChampTexte","a","b","c","n","d","A","B","C","D","N","maFraction","objets","choice","randint","question","correction","reponse","ignoreCasse","calcul","point","segment","tracePoint","texteParPosition","texNombrec","milieu","x","y","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","mainlevee","amplitude","scale","style","fraction","simplifie","texFraction","formatInteractif","labelPoint","codageAngleDroit","texFractionReduite"],"sourceRoot":""}