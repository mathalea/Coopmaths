{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C10-5.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["amcReady","amcType","titre","Exercice_labyrinthe_multiples","Exercice","this","consigne","niveau","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","tailleDiaporama","sup3","sup","sup2","nouvelleVersion","params","texte","texteCorr","trouve","listeCorrections","listeQuestions","qcm","laby","labyrinthe","parseInt","chemin","choisitChemin","murs2d","construitMurs","chemin2d","traceChemin","monchemin","table","maximum","texte_en_couleur_et_gras","length","listeMultiples","index","i","push","combinaisonListes","a","nombres","b","k","randint","nombres2d","placeNombres","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","besoinFormulaire3Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/5031.f59189787b447f5e5ef8.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {exportQcmAmc,listeQuestionsToContenu,randint,combinaisonListes,texte_en_couleur_et_gras} from '../../modules/outils.js'\nimport {mathalea2d,labyrinthe} from '../../modules/2d.js'\nexport const amcReady = true\nexport const amcType = 3 // type de question AMC\n\nexport const titre = 'Labyrinthe de multiples'\n\n/**\n * @Auteur Jean-Claude Lhote\n * Publié le 6/12/2020\n * Ref : c3C10-2 et 6C10-5\n * Parcourir un labyrinthe de nombres en passant par les multiples du nombre choisi.\n */\n\nexport default function Exercice_labyrinthe_multiples() {\n  \"use strict\"\n  Exercice.call(this)\n  this.titre = titre;\n  this.consigne=\"\"\n  this.niveau = '6e'\n  this.nbQuestions = 1;\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  this.tailleDiaporama = 100;\nthis.sup3 = 3\n  this.sup = 9;\n  if (this.niveau = 'CM') {\n    this.sup2 = 10;\n    this.sup3 = 3;\n  }\n  else {\n    this.sup2 = 13;\n    this.sup3 = 4;\n  }\n  this.nouvelleVersion = function () {\n    this.listeCorrections=[]\n    this.listeQuestions=[]\n    /*********************************************************/\n// On ajoute cette ligne pour AMC\nthis.qcm=['6C10-5',[],'Labyrinthe de multiples',3,{}]\n/**********************************************************/\n\n    let params, texte, texteCorr, trouve\n    let laby = labyrinthe()\n    laby.niveau = parseInt(this.sup3) // Le niveau (de 1 à 6=mélange) définit le nombre d'étapes\n    laby.chemin = laby.choisitChemin(laby.niveau) // On choisi un chemin\n    laby.murs2d = laby.construitMurs(laby.chemin) // On construit le labyrinthe\n    laby.chemin2d = laby.traceChemin(laby.chemin) // On trace le chemin solution\n    let monchemin = laby.chemin\n    let table = parseInt(this.sup)\n    let maximum = parseInt(this.sup2)\n //   this.consigne=`Trouve la sortie en ne passant que par les cases contenant un multiple de $${table}$.`\n    texte = `${texte_en_couleur_et_gras(\"Trouve la sortie en ne passant que par les cases contenant un multiple de \",\"black\")}$${table}$.<br>`\n    texteCorr = `${texte_en_couleur_et_gras(`Voici le chemin en marron et la sortie était la numéro $${2 - monchemin[monchemin.length - 1][1] + 1}$.`, \"black\")}<br>`\n    // Zone de construction du tableau de nombres : Si ils sont sur monchemin et seulement si, ils doivent vérifier la consigne\n    let listeMultiples = [], index = 0\n    for (let i = 2; i <= maximum; i++){\n      listeMultiples.push(table * i)\n    }\n    listeMultiples = combinaisonListes(listeMultiples, 12)\n    for (let a=1;a<7;a++) {\n      laby.nombres.push([0,0,0])\n    }\n    for (let a = 1; a < 7; a++) {\n      for (let b = 0; b < 3; b++) {\n        trouve = false\n        for (let k = 0; k < monchemin.length; k++) {\n          if (monchemin[k][0] == a && monchemin[k][1] == b) trouve = true\n        }\n        if (!trouve) {\n          laby.nombres[a - 1][b] = randint(2, maximum) * table + randint(1, table - 1)\n        }\n        else {\n          laby.nombres[a - 1][b] = listeMultiples[index]\n          index++\n        }\n      }\n    } // Le tableau de nombre étant fait, on place les objets nombres.\n    laby.nombres2d = laby.placeNombres(laby.nombres,1.5)\n    params = { xmin: -4, ymin: 0, xmax: 22, ymax: 11, pixelsParCm: 20, scale: 0.7 }\n    texte += mathalea2d(params, laby.murs2d, laby.nombres2d)\n    texteCorr += mathalea2d(params, laby.murs2d, laby.nombres2d, laby.chemin2d)\n\n    /************************ AMC Open *****************************/\n    this.qcm[1][0]=[texte,[texteCorr],[3]]      // [question,[reponse],[nb_lignes_cadre]]\n    /****************************************************/\n\n    this.listeQuestions.push(texte);\n    this.listeCorrections.push(texteCorr);\n    listeQuestionsToContenu(this)\n   }\n  this.besoinFormulaireNumerique = [\"Table \"]\n  this.besoinFormulaire2Numerique = [\"Facteur maximum \"];\n  this.besoinFormulaire3Numerique = ['Niveau de rapidité', 6, '1 : Guépard\\n 2 : Antilope\\n 3 : Lièvre\\n 4 : Tortue\\n 5 : Escargot\\n 6 : Au hasard']\n} // Fin de l'exercice.\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}