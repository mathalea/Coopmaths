{"version":3,"file":"js/99556.0353e97037e53bad5a54.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N52-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, texteEnCouleur, texFractionSigne, texFractionReduite, reduireAxPlusB, combinaisonListesSansChangerOrdre } from '../../modules/outils.js'\nimport { fraction } from '../../modules/fractions.js'\nexport const titre = 'Résoudre des équations se ramenant au produit-nul.'\n\n/**\n * Résoudre des équations se ramenant au produit-nul\n* @author Stéphane Guyon\n* 2L12-2\n* A DEPLACER EN 2N52-4 !!!!!!!!!!!!!!!!!!!!!!!!!\n*/\nexport default function Equationspresqueproduitnulle () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.video = ''\n  this.consigne = 'Résoudre dans $\\\\mathbb R$ les équations suivantes :'\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.nbQuestions = 3\n  this.spacingCorr = 3\n  this.nbQuestions = 5\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = true\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4, 5]\n\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0, a, b, c, d, e, f, f1, f2, typesDeQuestions; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      a = randint(-9, 9, [-1, 0, 1]) // on évite a=1, -1 ou 0\n      b = randint(-9, 9, 0)\n      c = randint(-9, 9, 0)\n      d = randint(-9, 9, 0)\n      e = randint(-9, 9, [0, c, -c]) // on évite que c+e et c-e soit égal à 0 et on évite e=0\n      f = randint(-9, 9, [0, d, -d]) // on évite que d+f et d-f soit égal à 0 et on évite f=0\n\n      switch (typesDeQuestions) {\n        case 1: // (ax+b)(cx+d)+(ax+b)(ex+f)=0\n          texte = ` ($${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)})+(${reduireAxPlusB(a, b)})(${reduireAxPlusB(e, f)})=0$`\n          texteCorr = ` $(${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)})+(${reduireAxPlusB(a, b)})(${reduireAxPlusB(e, f)})=0$<br>`\n          if (this.correctionDetaillee) {\n            texteCorr += ` On observe que $(${reduireAxPlusB(a, b)})$ est un facteur commun dans les deux termes :<br>`\n            texteCorr += ` $\\\\phantom{\\\\iff} (\\\\underline{${reduireAxPlusB(a, b)}})( ${reduireAxPlusB(c, d)})+(\\\\underline{${reduireAxPlusB(a, b)})}( ${reduireAxPlusB(e, f)})=0$<br>`\n            texteCorr += ` $\\\\iff (\\\\underline{${reduireAxPlusB(a, b)}})\\\\Big(( ${reduireAxPlusB(c, d)})+(${reduireAxPlusB(e, f)})\\\\Big)=0$<br>`\n          }\n          texteCorr += ` $\\\\iff (${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c + e, d + f)})=0$<br>`\n          if (c + e === 0) {\n            texteCorr += `$\\\\iff ${reduireAxPlusB(a, b)}=0$<br>`\n            texteCorr += `$x=${texFractionSigne(-b, a)}$<br>`\n            texteCorr += `L'équation admet une unique solution : $S=\\\\left\\\\{${texFractionReduite(-b, a)}\\\\right\\\\}$.`\n          } else {\n            texteCorr += 'On reconnaît une équation produit-nul, donc on applique la propriété :<br>'\n            texteCorr += `${texteEnCouleur('Un produit est nul si et seulement si au moins un de ses facteurs est nul.')}<br>`\n            texteCorr += ` $\\\\iff ${reduireAxPlusB(a, b)}=0\\\\quad$ ou bien $\\\\quad ${reduireAxPlusB(c + e, d + f)}=0$<br>`\n            texteCorr += `$\\\\iff x=${texFractionSigne(-b, a)}\\\\quad$ ou $\\\\quad x=${texFractionSigne(-d - f, c + e)}$<br>\n                       On en déduit :  `\n            if ((-d - f) / (c + e) < -b / a) {\n              texteCorr += `$S=\\\\left\\\\{${texFractionReduite(-d - f, c + e)};${texFractionReduite(-b, a)}\\\\right\\\\}$`\n            } else {\n              texteCorr += `$S=\\\\left\\\\{${texFractionReduite(-b, a)};${texFractionReduite(-d - f, c + e)}\\\\right\\\\}$`\n            }\n          }\n\n          break\n        case 2: // (ax+b)(cx+d)+(ax+b)(ex+f)=0\n          texte = ` ($${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)})-\n                    ( ${reduireAxPlusB(a, b)})( ${reduireAxPlusB(e, f)})=0$`\n          texteCorr = ` $(${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)})-\n                    ( ${reduireAxPlusB(a, b)})( ${reduireAxPlusB(e, f)})=0$<br>`\n          if (this.correctionDetaillee) {\n            texteCorr += ` On observe que $(${reduireAxPlusB(a, b)})$ est un facteur commun dans les deux termes :<br>`\n            texteCorr += ` $\\\\phantom{\\\\iff} (\\\\underline{${reduireAxPlusB(a, b)}})( ${reduireAxPlusB(c, d)})- (\\\\underline{${reduireAxPlusB(a, b)})}( ${reduireAxPlusB(e, f)})=0$<br>`\n            texteCorr += ` $\\\\iff (\\\\underline{${reduireAxPlusB(a, b)}})\\\\Big(( ${reduireAxPlusB(c, d)})-( ${reduireAxPlusB(e, f)})\\\\Big)=0$<br>`\n          }\n          if (e > 0) texteCorr += ` $\\\\iff (${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)}${reduireAxPlusB(-e, -f)})=0$<br>`\n          else texteCorr += ` $\\\\iff (${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)}+${reduireAxPlusB(-e, -f)})=0$<br>`\n          texteCorr += ` $\\\\iff (${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c - e, d - f)})=0$<br>`\n          if (c - e === 0) {\n            texteCorr += `$\\\\iff ${reduireAxPlusB(a, b)}=0$<br>`\n            texteCorr += `$x=${texFractionSigne(-b, a)}$<br>`\n            texteCorr += `L'équation admet une unique solution : $S=\\\\left\\\\{${texFractionReduite(-b, a)}\\\\right\\\\}$.`\n          } else {\n            texteCorr += 'On reconnaît une équation produit-nul, donc on applique la propriété :<br>'\n            texteCorr += `${texteEnCouleur('Un produit est nul si et seulement si au moins un de ses facteurs est nul.')}<br>`\n            texteCorr += ` $\\\\iff ${reduireAxPlusB(a, b)}=0\\\\quad$ ou bien $\\\\quad ${reduireAxPlusB(c - e, d - f)}=0$<br>`\n            texteCorr += `$\\\\iff x=${texFractionSigne(-b, a)}\\\\quad$ ou $\\\\quad x=${texFractionSigne(-d + f, c - e)}$<br>\n                   On en déduit :  `\n            if ((-d + f) / (c - e) < -b / a) {\n              texteCorr += `$S=\\\\left\\\\{${texFractionReduite(-d + f, c - e)};${texFractionReduite(-b, a)}\\\\right\\\\}$`\n            } else {\n              texteCorr += `$S=\\\\left\\\\{${texFractionReduite(-b, a)};${texFractionReduite(-d + f, c - e)}\\\\right\\\\}$`\n            }\n          }\n\n          break\n        case 3: // (ax+b)²+(ax+b)(ex+f)=0\n          texte = ` ($${reduireAxPlusB(a, b)})^{2}+(${reduireAxPlusB(a, b)})(${reduireAxPlusB(e, f)})=0$`\n          texteCorr = ` $(${reduireAxPlusB(a, b)})^{2}+(${reduireAxPlusB(a, b)})(${reduireAxPlusB(e, f)})=0$<br>`\n          texteCorr += ` $(${reduireAxPlusB(a, b)})(${reduireAxPlusB(a, b)})+(${reduireAxPlusB(a, b)})(${reduireAxPlusB(e, f)})=0$<br>`\n          if (this.correctionDetaillee) {\n            texteCorr += ` On observe que $(${reduireAxPlusB(a, b)})$ est un facteur commun dans les deux termes :<br>`\n            texteCorr += ` $\\\\phantom{\\\\iff} (\\\\underline{${reduireAxPlusB(a, b)}})(${reduireAxPlusB(a, b)})+(\\\\underline{${reduireAxPlusB(a, b)})}( ${reduireAxPlusB(e, f)})=0$<br>`\n            texteCorr += ` $\\\\iff (\\\\underline{${reduireAxPlusB(a, b)}})\\\\Big((${reduireAxPlusB(a, b)})+(${reduireAxPlusB(e, f)})\\\\Big)=0$<br>`\n          }\n          if (e < 0) texteCorr += ` $\\\\iff (${reduireAxPlusB(a, b)})( ${reduireAxPlusB(a, b)})${reduireAxPlusB(e, f)})=0$<br>`\n          else texteCorr += ` $\\\\iff (${reduireAxPlusB(a, b)})( ${reduireAxPlusB(a, b)})+${reduireAxPlusB(e, f)})=0$<br>`\n          texteCorr += ` $\\\\iff (${reduireAxPlusB(a, b)})( ${reduireAxPlusB(a + e, b + f)})=0$<br>`\n          if (a + e === 0) {\n            texteCorr += `$\\\\iff ${reduireAxPlusB(a, b)}=0$<br>`\n            texteCorr += `$x=${texFractionSigne(-b, a)}$<br>`\n            texteCorr += `L'équation admet une unique solution : $S=\\\\left\\\\{${texFractionReduite(-b, a)}\\\\right\\\\}$.`\n          } else {\n            texteCorr += 'On reconnaît une équation produit-nul, donc on applique la propriété :<br>'\n            texteCorr += `${texteEnCouleur('Un produit est nul si et seulement si au moins un de ses facteurs est nul.')}<br>`\n            texteCorr += ` $\\\\iff ${reduireAxPlusB(a, b)}=0\\\\quad$ ou bien $\\\\quad ${reduireAxPlusB(a + e, b + f)}=0$<br>`\n            texteCorr += `$\\\\iff x=${texFractionSigne(-b, a)}\\\\quad$ ou $\\\\quad x=${texFractionSigne(-b - f, a + e)}$<br>\n               On en déduit :  `\n            if ((-b - f) / (a + e) < -b / a) {\n              texteCorr += `$S=\\\\left\\\\{${texFractionReduite(-b - f, a + e)};${texFractionReduite(-b, a)}\\\\right\\\\}$`\n            } else {\n              texteCorr += `$S=\\\\left\\\\{${texFractionReduite(-b, a)};${texFractionReduite(-b - f, a + e)}\\\\right\\\\}$`\n            }\n          }\n\n          break\n        case 4: // (ax+b)(cx+d)-(ax+b)²=0\n          texte = ` ($${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)})-(${reduireAxPlusB(a, b)})^{2}=0$`\n          texteCorr = ` ($${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)})-(${reduireAxPlusB(a, b)})^{2}=0$<br>`\n          texteCorr += ` ($${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)})-(${reduireAxPlusB(a, b)})( ${reduireAxPlusB(a, b)})=0$<br>`\n          if (this.correctionDetaillee) {\n            texteCorr += ` On observe que $(${reduireAxPlusB(a, b)})$ est un facteur commun dans les deux termes :<br>`\n            texteCorr += ` $\\\\phantom{\\\\iff} (\\\\underline{${reduireAxPlusB(a, b)}})( ${reduireAxPlusB(c, d)})-(\\\\underline{${reduireAxPlusB(a, b)})}( ${reduireAxPlusB(a, b)})=0$<br>`\n            texteCorr += ` $\\\\iff (\\\\underline{${reduireAxPlusB(a, b)}})\\\\Big(( ${reduireAxPlusB(c, d)})-( ${reduireAxPlusB(a, b)})\\\\Big)=0$<br>`\n          }\n          if (a > 0) texteCorr += ` $\\\\iff (${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)}${reduireAxPlusB(-a, -b)}))=0$<br>`\n          else texteCorr += ` $\\\\iff (${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c, d)}+${reduireAxPlusB(-a, -b)}))=0$<br>`\n          texteCorr += ` $\\\\iff (${reduireAxPlusB(a, b)})( ${reduireAxPlusB(c - a, d - b)})=0$<br>`\n          if (c - a === 0) {\n            texteCorr += `$\\\\iff ${reduireAxPlusB(a, b)}=0$<br>`\n            texteCorr += `$x=${texFractionSigne(-b, a)}$<br>`\n            texteCorr += `L'équation admet une unique solution : $S=\\\\left\\\\{${texFractionReduite(-b, a)}\\\\right\\\\}$.`\n          } else {\n            texteCorr += 'On reconnaît une équation produit-nul, donc on applique la propriété :<br>'\n            texteCorr += `${texteEnCouleur('Un produit est nul si et seulement si au moins un de ses facteurs est nul.')}<br>`\n            texteCorr += ` $\\\\iff ${reduireAxPlusB(a, b)}=0\\\\quad$ ou bien $\\\\quad ${reduireAxPlusB(c - a, d - b)}=0$<br>`\n            texteCorr += `$\\\\iff x=${texFractionSigne(-b, a)}\\\\quad$ ou $\\\\quad x=${texFractionSigne(-d + b, c - a)}$<br>\n           On en déduit :  `\n            if ((-d + b) / (c - b) < -b / a) {\n              texteCorr += `$S=\\\\left\\\\{${texFractionReduite(-d + b, c - a)};${texFractionReduite(-b, a)}\\\\right\\\\}$`\n            } else {\n              texteCorr += `$S=\\\\left\\\\{${texFractionReduite(-b, a)};${texFractionReduite(-d + b, c - a)}\\\\right\\\\}$`\n            }\n          }\n\n          break\n\n        case 5: // (ax+b)(cx+d)=(ax+b)(ex+f)\n          texte = `$(${reduireAxPlusB(a, b)})(${reduireAxPlusB(c, d)})=(${reduireAxPlusB(a, b)})(${reduireAxPlusB(e, f)})$`\n          texteCorr = 'Deux nombres sont égaux si et seulement si leur différence est nulle.<br>'\n          texteCorr += `$\\\\phantom{\\\\iff}(${reduireAxPlusB(a, b)})(${reduireAxPlusB(c, d)})=(${reduireAxPlusB(a, b)})(${reduireAxPlusB(e, f)})$<br>`\n          texteCorr += `$\\\\iff (${reduireAxPlusB(a, b)})(${reduireAxPlusB(c, d)})-(${reduireAxPlusB(a, b)})(${reduireAxPlusB(e, f)})=0$<br>`\n          if (this.correctionDetaillee) {\n            texteCorr += ` On observe que $(${reduireAxPlusB(a, b)})$ est un facteur commun dans les deux termes :<br>`\n            texteCorr += `$\\\\phantom{\\\\iff}(\\\\underline{${reduireAxPlusB(a, b)}})(${reduireAxPlusB(c, d)})-(\\\\underline{${reduireAxPlusB(a, b)}})(${reduireAxPlusB(e, f)})=0$<br>`\n            texteCorr += `$\\\\iff (\\\\underline{${reduireAxPlusB(a, b)}})\\\\Big((${reduireAxPlusB(c, d)})-(${reduireAxPlusB(e, f)})\\\\Big)=0$<br>`\n          }\n          if (e < 0) {\n            texteCorr += `$\\\\iff (${reduireAxPlusB(a, b)})(${reduireAxPlusB(c, d)}+${reduireAxPlusB(-e, -f)})=0$<br>`\n          } else {\n            texteCorr += `$\\\\iff (${reduireAxPlusB(a, b)})(${reduireAxPlusB(c, d)}${reduireAxPlusB(-e, -f)})=0$<br>`\n          }\n          texteCorr += `$\\\\iff (${reduireAxPlusB(a, b)})(${reduireAxPlusB(c - e, d - f)})=0$<br>`\n          texteCorr += `On reconnaît une équation produit-nul, donc on applique la propriété :<br>\n        ${texteEnCouleur('Un produit est nul si et seulement si au moins un de ses facteurs est nul.')}<br>`\n          texteCorr += `$(${reduireAxPlusB(a, b)})(${reduireAxPlusB(c - e, d - f)})=0$<br>`\n          texteCorr += `$\\\\iff ${reduireAxPlusB(a, b)}=0$ ou $${reduireAxPlusB(c - e, d - f)}=0$<br>`\n          if (this.correctionDetaillee) { // on ajoute les étapes de résolution si la correction détaillée est cochée.\n            texteCorr += `$\\\\iff ${reduireAxPlusB(a, 0)}=${-b}$ ou $ ${reduireAxPlusB(c - e, 0)}=${-d + f}$<br>`\n          }\n          f1 = fraction(-b, a)\n          f2 = fraction(-d + f, c - e)\n          texteCorr += `$\\\\iff x=${f1.texFraction}$ ou $ x=${f2.texFraction}$<br>On en déduit :  `\n          if (-b / a > (-d + f) / (c - e)) {\n            texteCorr += `$S=\\\\left\\\\{${f2.simplifie().texFraction};${f1.simplifie().texFraction}\\\\right\\\\}$`\n          } else if (-b / a < (-d + f) / (c - e)) {\n            texteCorr += `$S=\\\\left\\\\{${f1.simplifie().texFraction};${f2.simplifie().texFraction}\\\\right\\\\}$`\n          } else texteCorr += `$S=\\\\left\\\\{${f1.simplifie().texFraction}\\\\right\\\\}$`\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Equationspresqueproduitnulle","Exercice","this","video","consigne","nbCols","nbColsCorr","spacing","spacingCorr","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","a","b","c","d","e","f","f1","f2","typesDeQuestions","i","cpt","randint","reduireAxPlusB","texFractionSigne","texFractionReduite","texteEnCouleur","fraction","texFraction","simplifie","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}