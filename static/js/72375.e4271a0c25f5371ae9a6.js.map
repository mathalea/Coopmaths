{"version":3,"file":"js/72375.e4271a0c25f5371ae9a6.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C31-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, shuffle, texNombre, numAlpha } from '../../modules/outils.js'\nexport const titre = 'Donner des valeurs approchées d’un quotient décimal'\n\n/**\n * Donner des valeurs approchées d'un quotient décimale.\n *\n *\n * @author Rémi Angot\n * Référence 6C31-2\n * 2020-12-07\n */\nexport default function ValeurApprocheeDivisionDecimale () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Compléter les phrases suivantes.'\n  this.nbQuestions = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Une fraction irréductible avec un dénominateur qui comporte un facteur différent de 2 ou de 5\n      // aura une écriture décimale périodique infinie\n      const k1 = choice([3, 7, 11, 13])\n      const k2 = choice([3, 7, 11, 13], k1)\n      const a = choice([3, 5, 7, 11, 13], [k1, k2]) * choice([3, 5, 7, 11, 13], [k1, k2])\n      const b = k1 * k2\n      const q = Math.round(a / b, 6)\n      texte = `On sait que $${a}\\\\div${b}\\\\approx${texNombre(q)}$.`\n      const listeDeQuestions1 = [\n        [`La valeur approchée par défaut de $${a}\\\\div${b}$ au dixième près est : `, Math.floor(a / b, 1)],\n        [`La valeur approchée par excès de $${a}\\\\div${b}$ au dixième près est : `, Math.ceil(a / b, 1)],\n        [`La valeur approchée par défaut de $${a}\\\\div${b}$ au centième près est : `, Math.floor(a / b, 2)],\n        [`La troncature de $${a}\\\\div${b}$ au centième près est : `, Math.floor(a / b, 2)],\n        [`La valeur approchée par excès de $${a}\\\\div${b}$ au centième près est : `, Math.ceil(a / b, 2)],\n        [`La valeur approchée par défaut de $${a}\\\\div${b}$ au millième près est : `, Math.floor(a / b, 3)],\n        [`La troncature de $${a}\\\\div${b}$ au millième près est : `, Math.floor(a / b, 3)],\n        [`La valeur approchée par excès de $${a}\\\\div${b}$ au millième près est : `, Math.ceil(a / b, 3)]\n      ]\n      const listeDeQuestions2 = [\n        [`La valeur approchée de $${a}\\\\div${b}$ au dixième près est : `, Math.round(a / b, 1)],\n        [`La valeur approchée de $${a}\\\\div${b}$ au centième près est : `, Math.round(a / b, 2)],\n        [`La valeur approchée de $${a}\\\\div${b}$ au millième près est : `, Math.round(a / b, 3)]\n      ]\n\n      texteCorr = `On sait que $${a}\\\\div${b}\\\\approx${texNombre(q)}$.`\n      // Questions peuvent être défaut, excès ou excès, défaut ou troncature, excès ou excès, troncature\n      const choix = randint(1, 4)\n      switch (choix) {\n        case 1:\n          texte += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[0][0]}\\\\ldots`\n          texte += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[4][0]}\\\\ldots`\n          texteCorr += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[0][0]} $ ${texNombre(listeDeQuestions1[0][1])}$`\n          texteCorr += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[4][0]} $ ${texNombre(listeDeQuestions1[4][1])}$`\n          break\n        case 2:\n          texte += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[1][0]}\\\\ldots`\n          texte += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[5][0]}\\\\ldots`\n          texteCorr += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[1][0]} $ ${texNombre(listeDeQuestions1[1][1])}$`\n          texteCorr += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[5][0]} $ ${texNombre(listeDeQuestions1[5][1])}$`\n          break\n        case 3:\n          texte += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[3][0]}\\\\ldots`\n          texte += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[7][0]}\\\\ldots`\n          texteCorr += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[3][0]} $ ${texNombre(listeDeQuestions1[3][1])}$`\n          texteCorr += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[7][0]} $ ${texNombre(listeDeQuestions1[7][1])}$`\n          break\n        case 4:\n          texte += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[4][0]}\\\\ldots`\n          texte += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[7][0]}\\\\ldots`\n          texteCorr += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[4][0]} $ ${texNombre(listeDeQuestions1[4][1])}$`\n          texteCorr += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[7][0]} $ ${texNombre(listeDeQuestions1[7][1])}$`\n          break\n      }\n      shuffle(listeDeQuestions2)\n\n      texte += `<br><br> ${numAlpha(2)} ${listeDeQuestions2[0][0]}\\\\ldots`\n      texte += `<br><br> ${numAlpha(3)} ${listeDeQuestions2[1][0]}\\\\ldots`\n\n      texteCorr += `<br><br> ${numAlpha(2)} ${listeDeQuestions2[0][0]} $ ${texNombre(listeDeQuestions2[0][1])}$`\n      texteCorr += `<br><br> ${numAlpha(3)} ${listeDeQuestions2[1][0]} $ ${texNombre(listeDeQuestions2[1][1])}$`\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ValeurApprocheeDivisionDecimale","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","i","cpt","k1","choice","k2","a","b","q","Math","round","texNombre","listeDeQuestions1","floor","ceil","listeDeQuestions2","randint","numAlpha","shuffle","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}