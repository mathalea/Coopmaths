{"version":3,"sources":["webpack://mathalea/./src/js/exercices/CM/CM002.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","interactifReady","amcReady","amcType","TablesDeDivisions","tablesParDefaut","Exercice","this","sup","sup2","interactif","consigne","spacing","tailleDiaporama","nouvelleVersion","parseInt","listeQuestions","listeCorrections","tables","split","couples","creerCouples","nbQuestions","listeTypeDeQuestions","combinaisonListes","typeDeQuestions","a","b","texte","texteCorr","i","ajouteChampTexte","setReponse","choice","context","replace","push","listeQuestionsToContenu","besoinFormulaireTexte","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","propositions","length","statut","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","id","feedback","type","querySelectorAll","uicheck","classList","add","propositionsQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","texteApres","inline","numeric","digits","decimals","signe","exposant_nb_chiffres","exposant_signe","approx","reponse","valeur","exerciceInteractif","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"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","file":"js/8649.06cc9490252149cc3ef0.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, creerCouples, choice, combinaisonListes } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Tables de divisions'\nexport const interactifReady = true\nexport const amcReady = false\nexport const amcType = 4 // Question numérique\n\n/**\n * Tables de divisions classiques, à trou ou un mélange des deux.\n *\n * Par défaut ce sont les tables de 2 à 9 mais on peut choisir les tables que l'on veut\n * @Auteur Rémi Angot\n* Référence CM002\n  */\nexport default function TablesDeDivisions (tablesParDefaut = '2-3-4-5-6-7-8-9') {\n  // Diviser deux nombres\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = tablesParDefaut\n  this.sup2 = 1 // classique|a_trous|melange\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactif = true\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function () {\n    this.sup2 = parseInt(this.sup2)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (!this.sup) {\n      // Si aucune table n'est saisie\n      this.sup = '2-3-4-5-6-7-8-9'\n    }\n    let tables = []\n    if (typeof this.sup === 'number') {\n      // Si c'est un nombre c'est qu'il y a qu'une seule table\n      tables[0] = this.sup\n    } else {\n      tables = this.sup.split('-') // Sinon on crée un tableau à partir des valeurs séparées par des -\n    }\n    const couples = creerCouples(\n      tables,\n      [2, 3, 4, 5, 6, 7, 8, 9, 10],\n      this.nbQuestions\n    ) // Liste tous les couples possibles (2,3)≠(3,2)\n    const listeTypeDeQuestions = combinaisonListes(\n      ['classique', 'a_trous'],\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let typeDeQuestions = 'a_trous'\n    for (let i = 0, a, b, texte, texteCorr; i < this.nbQuestions; i++) {\n      a = couples[i][0]\n      b = couples[i][1]\n      if (this.sup2 === 1) {\n        typeDeQuestions = 'classique'\n      } else if (this.sup2 === 2) {\n        typeDeQuestions = 'a_trous'\n      } else {\n        typeDeQuestions = listeTypeDeQuestions[i]\n      }\n      if (typeDeQuestions === 'classique') {\n        // classique\n        texte = '$ ' + a * b + ' \\\\div ' + a + ' = \\\\dotfill $'\n        if (this.interactif) texte = `$ ${a * b} \\\\div ${a} = $` + ajouteChampTexte(this, i)\n        setReponse(this, i, b)\n      } else {\n        // a trous\n        if (choice([true, false])) {\n          texte = `$ ${a * b} \\\\div \\\\ldots\\\\ldots = ${b}$`\n          if (this.interactif) texte = `$ ${a * b} \\\\div $` + ajouteChampTexte(this, i) + `$ = ${a} $`\n          setReponse(this, i, b)\n        } else {\n          texte = `$ \\\\ldots\\\\ldots \\\\div ${a}  = ${b}$`\n          if (this.interactif) texte = ajouteChampTexte(this, i) + `$ \\\\div ${b} = ${a} $`\n          setReponse(this, i, a * b)\n        }\n      }\n      texteCorr = `$ ${a * b} \\\\div ${a} = ${b}$`\n      if (context.isDiaporama) {\n        texte = texte.replace('= \\\\dotfill', '')\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = [\n    'Choix des tables',\n    'Nombres séparés par des tirets'\n  ] // Texte, tooltip\n  this.besoinFormulaire2Numerique = [\n    'Style de questions',\n    3,\n    '1 : Classique\\n2: À trous\\n3: Mélangé'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposant_nb_chiffres = 0, exposant_signe = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.valeur = { digits, decimals, signe, exposant_nb_chiffres, exposant_signe, approx }\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}