{"version":3,"file":"js/94544.95475c161276fec4810f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2S30-2.js","webpack://mathalea/./src/js/exercices/5e/5S21.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import FonctionsProbabilite1 from '../5e/5S21.js'\nexport const titre = 'Calculer des probabilités dans une expérience aléatoire à une épreuve'\n// export { interactifReady, interactifType, amcReady, amcType } from '../5e/5S21.js'\n\n/**\n * Clone de 5S21 pour les 2nde\n *\n * @author Sébastien LOZANO\n */\nexport default function FonctionsProbabilite12nde () {\n  FonctionsProbabilite1.call(this)\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, simplificationDeFractionAvecEtapes, prenom, texFraction, numAlpha } from '../../modules/outils.js'\n\nexport const titre = 'Calculer des probabilités dans une expérience aléatoire à une épreuve'\n\n/**\n * Calculs de probabilités sur une expérience aléatoire à une épreuve.\n * @author Jean-Claude Lhote\n * Référence 5S21\n */\nexport default function FonctionsProbabilite1 () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 4\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  context.isHtml ? this.spacing = 2 : this.spacing = 1\n  context.isHtml ? this.spacingCorr = 3 : this.spacingCorr = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const listeIndexDisponibles = [0, 1, 2, 3, 4, 5, 6]\n    const listeIndex = combinaisonListes(listeIndexDisponibles, this.nbQuestions)\n    const listeDeLieuxChoses = [['le frigo', 'yaourts'], ['le frigo', 'desserts lactés'], ['une urne', 'boules'], ['une urne', 'jetons'], ['un paquet de bonbons', 'nounours'], ['un tiroir de la commode', 't-shirts'], ['un tas de jetons de poker', 'jetons']]\n    const qualites = [[]]\n    qualites[0] = ['à la fraise', 'à la vanille', 'à l\\'abricot', 'à l\\'ananas', 'à la cerise']\n    qualites[1] = ['au chocolat', 'à la vanille', 'au café', 'à la pistache', 'au caramel']\n    qualites[2] = ['rouges', 'vertes', 'bleues', 'noires', 'blanches']\n    qualites[3] = ['gris', 'cyans', 'roses', 'jaunes', 'violets']\n    qualites[4] = ['rouges', 'verts', 'bleus', 'noirs', 'jaunes']\n    qualites[5] = ['rouges', 'verts', 'bleus', 'noirs', 'blancs']\n    qualites[6] = ['rouges', 'verts', 'bleus', 'noirs', 'jaunes']\n    for (let i = 0, p, m, q, somme, quidam, index1, lieu, objet, article, pronom, n = [], texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      index1 = listeIndex[i]\n      if (index1 === 2) { article = 'une'; pronom = 'elles' } else { article = 'un'; pronom = 'eux' }\n      quidam = prenom()\n      lieu = listeDeLieuxChoses[index1][0]\n      objet = listeDeLieuxChoses[index1][1]\n      n[0] = randint(2, 5)\n      n[1] = randint(1, 6) + 1\n      n[2] = randint(1, 3) * 2\n      n[3] = randint(1, 4) + 2\n      n[4] = randint(2, 5)\n\n      somme = n[0] + n[1] + n[2] + n[3] + n[4]\n      m = randint(0, 4)\n      p = randint(0, 4, [m])\n      q = randint(0, 4, [p, m])\n\n      texte = `Dans ${lieu} il y a ${somme} ${objet}. ${n[0]} sont ${qualites[index1][0]}, ${n[1]} sont ${qualites[index1][1]}, ${n[2]} sont ${qualites[index1][2]}, ${n[3]} sont ${qualites[index1][3]} et ${n[4]} sont ${qualites[index1][4]}.<br> `\n      texte += `${quidam} choisit au hasard l'${article} d'entre ${pronom}.<br> `\n      texte += numAlpha(0) + ` Quelle est la probabilité que son choix tombe sur l'${article} des ${objet} ${qualites[index1][m]} ?<br>`\n      texte += numAlpha(1) + ` Quelle est la probabilité que son choix tombe sur l'${article} des ${objet} ${qualites[index1][p]} ?<br>`\n      texte += numAlpha(2) + ` Quelle est la probabilité que son choix ne tombe pas sur l'${article} des ${objet} ${qualites[index1][q]} ?<br>`\n      texte += numAlpha(3) + ` Quelle est la probabilité que son choix tombe sur l'${article} des ${objet} ${qualites[index1][m]} ou ${qualites[index1][p]}?<br>`\n      texteCorr = 'On est dans une situation d’équiprobabilité donc la probabilité est donnée par le quotient du nombre de cas favorables par le nombre de cas au total.<br>'\n      texteCorr += numAlpha(0) + ` Il y a ${n[m]} ${objet} ${qualites[index1][m]} et il y a ${somme} ${objet} possibles. La probabilité que son choix tombe sur l'${article} des ${objet} ${qualites[index1][m]} est :<br> $${texFraction(n[m], somme)}${simplificationDeFractionAvecEtapes(n[m], somme)}$.<br>`\n      texteCorr += numAlpha(1) + ` Il y a ${n[p]} ${objet} ${qualites[index1][p]} et il y a ${somme} ${objet} possibles. La probabilité que son choix tombe sur l'${article} des ${objet} ${qualites[index1][p]} est :<br> $${texFraction(n[p], somme)}${simplificationDeFractionAvecEtapes(n[p], somme)}$.<br>`\n      texteCorr += numAlpha(2) + ` Il y a ${n[q]} ${objet} ${qualites[index1][q]}, donc il y a ${somme} $-$ ${n[q]} $=$ ${somme - n[q]} autres ${objet} et il y a ${somme} ${objet} possibles. La probabilité que son choix ne tombe pas sur l'${article} des ${objet} ${qualites[index1][q]} est :<br> $${texFraction(somme - n[q], somme)}${simplificationDeFractionAvecEtapes(somme - n[q], somme)}$.<br>`\n      texteCorr += numAlpha(3) + ` La probabilité d'un événement est la somme des probabilités des issues qui le composent. Donc la probabilité que son choix tombe sur l'${article} des ${objet} ${qualites[index1][m]} ou ${qualites[index1][p]} est :<br> $${texFraction(n[m], somme)}+${texFraction(n[p], somme)}=${texFraction(n[p] + n[m], somme)}${simplificationDeFractionAvecEtapes(n[p] + n[m], somme)}$.<br>`\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","FonctionsProbabilite12nde","FonctionsProbabilite1","this","Exercice","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","context","spacing","spacingCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","listeIndex","combinaisonListes","listeDeLieuxChoses","qualites","p","m","q","somme","quidam","index1","lieu","objet","article","pronom","texte","texteCorr","i","n","cpt","prenom","randint","numAlpha","texFraction","simplificationDeFractionAvecEtapes","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}