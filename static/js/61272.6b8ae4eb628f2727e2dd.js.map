{"version":3,"file":"js/61272.6b8ae4eb628f2727e2dd.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N23-6.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport Operation from '../../modules/operations.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombre, arrondi, nombreDeChiffresDansLaPartieEntiere, nombreDeChiffresDansLaPartieDecimale, texFraction, arrondiVirgule } from '../../modules/outils.js'\nimport { setReponse, ajouteChampTexte } from '../../modules/gestionInteractif.js'\nexport const amcReady = true // Jusqu'à l'adaptation à la version 2.6\nexport const interactifReady = true\nexport const interactifType = 'numerique'\nexport const amcType = 'AMCNum' // Question numérique\nexport const titre = 'Calculer la valeur décimale d\\'une fraction'\nexport const dateDePublication = '18/11/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Calculer la valeur décimale des fractions suivantes.\n *\n * Niveau de difficulté 1 :\n * * entier divisé par 4 quotient : xx,25 ou xx,75\n * * entier divisé par 8 quotient : x,125 ou x,375 ou x,625 ou x,875\n * * entier divisé par 6 quotient : xxx,5\n * * quotient xx,xx division par 2, 3 , 4 ou 5\n * * quotient x,xxx division par 6 à 9\n * * un 0 dans le quotient\n *\n * Niveau de difficulté 2 : division par 3, 7 ou 9\n * @author Mireille Gain, s'inspirant de 6C31\n * Référence 6N23-6\n */\nexport default function DivisionFraction () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Calculer la valeur décimale des fractions suivantes.'\n  this.spacing = 2\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1) // Important sinon opdiv n'est pas joli\n  this.nbQuestions = 4\n  this.sup = 1\n  this.listePackages = 'xlop'\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let typesDeQuestionsDisponibles\n\n    parseInt(this.sup) === 1\n      ? (typesDeQuestionsDisponibles = [choice([1, 2, 3]), 4, 5])\n      : (typesDeQuestionsDisponibles = [7, 8, 9])\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let typesDeQuestions\n    for (\n      let i = 0, texte, texteCorr, cpt = 0, a, b, q;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        case 1: // fraction : entier divisé par 4 quotient : xx,25 ou xx,75\n          b = 4\n          a = (randint(2, 9) * 10 + randint(2, 9)) * 4 + choice([1, 3])\n          q = calcul(a / b)\n          break\n        case 2: // fraction : entier divisé par 8 quotient : x,125 ou x,375 ou x,625 ou x,875\n          b = 8\n          a = randint(2, 9) * 8 + choice([1, 3, 5, 7])\n          q = calcul(a / b)\n          break\n        case 3: // fraction : entier divisé par 6 quotient : xxx,5\n          b = 6\n          q = calcul(\n            randint(2, 9) * 100 + randint(2, 9) * 10 + randint(2, 9) + 0.5\n          )\n          a = q * 6\n          break\n        case 4: // fraction : entier divisé par 2\n          b = 2\n          a = randint(3, 50) * 2 + 1\n          q = calcul(a / b)\n          break\n        case 5: // fraction : entier divisé par 5\n          b = 5\n          a = randint(3, 50) * 2 + 1\n          q = calcul(a / b)\n          break\n        case 7: // dénominateur = 7\n          a = randint(2, 9) * 7 + randint(1, 6)\n          b = 7\n          q = arrondi(a / b, 3)\n          break\n        case 8: // dénominateur = 9\n          a = calcul((randint(11, 19) * 9) + randint(1, 8))\n          b = 9\n          q = arrondi(a / b, 3)\n          break\n        case 9: // dénominateur = 3\n          a = calcul((randint(11, 99) * 3) + randint(1, 2))\n          b = 3\n          q = arrondi(a / b, 3)\n      }\n      if (this.sup === 2) {\n        this.consigne =\n          'Calculer une valeur approchée au centième près des fractions suivantes.'\n      }\n      texte = `$${texFraction(texNombre(a), texNombre(b))}$`\n      if (this.sup === 1) {\n        texteCorr = Operation({ operande1: a, operande2: b, type: 'division', precision: 3 })\n        texteCorr += `<br>$${texFraction(texNombre(a), texNombre(b))}=${texNombre(q)}$`\n      } else {\n        texteCorr = Operation({ operande1: a, operande2: b, type: 'division', precision: 3 })\n        texteCorr += `<br>$${texFraction(texNombre(a), texNombre(b))}\\\\approx${arrondiVirgule(q)}$`\n      }\n      setReponse(this, i, q)\n      if (context.isHtml && this.interactif) texte += '$~=$' + ajouteChampTexte(this, i)\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte\n        this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: '' }]\n        this.autoCorrection[i].reponse.param = { digits: nombreDeChiffresDansLaPartieEntiere(q) + nombreDeChiffresDansLaPartieDecimale(q) + 2, decimals: nombreDeChiffresDansLaPartieDecimale(q) + 1, signe: false, exposantNbChiffres: 0 }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Type de questions',\n    2,\n    '1 : Déterminer le quotient exact\\n2 : Déterminer un quotient approché au centième près'\n  ]\n}\n"],"names":["amcReady","interactifReady","interactifType","amcType","titre","dateDePublication","DivisionFraction","Exercice","this","consigne","spacing","context","spacingCorr","nbQuestions","sup","listePackages","nouvelleVersion","typesDeQuestionsDisponibles","parseInt","listeQuestions","listeCorrections","autoCorrection","choice","listeTypeDeQuestions","combinaisonListes","typesDeQuestions","texte","texteCorr","a","b","q","i","cpt","randint","calcul","arrondi","texFraction","texNombre","Operation","operande1","operande2","type","precision","arrondiVirgule","setReponse","interactif","ajouteChampTexte","enonce","propositions","statut","reponse","param","digits","nombreDeChiffresDansLaPartieEntiere","nombreDeChiffresDansLaPartieDecimale","decimals","signe","exposantNbChiffres","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique"],"sourceRoot":""}