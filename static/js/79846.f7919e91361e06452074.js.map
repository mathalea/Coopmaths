{"version":3,"file":"js/79846.f7919e91361e06452074.js","mappings":"sMAKO,MAAMA,EAAQ,6DAWN,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKC,SAAW,oBAChBD,KAAKE,YAAc,EAKnBF,KAAKG,IAAM,EAEXH,KAAKI,gBAAkB,SAAUC,GAI/B,IAAIC,EAFJN,KAAKO,eAAiB,GACtBP,KAAKQ,iBAAmB,GAENF,EAAdN,KAAKG,IAAM,EAAiC,CAACM,SAAST,KAAKG,MAC5B,CAAC,EAAG,EAAG,GAC1C,MAAMO,EAAQ,GACRC,GAAuBC,EAAAA,EAAAA,KAAkBN,EAA6BN,KAAKE,aACjF,IAAIW,EAAUC,EAAYC,EACtBC,EAAUC,EACd,IAAK,IAAWC,EAAOC,EAAWC,EAAGC,EAAGC,EAAGC,EAAIC,EAAIC,EAAOC,EAAMC,EAAGC,EAAGC,EAASC,EAASC,EAA/EC,EAAI,EAA8EC,EAAM,EAAGD,EAAIhC,KAAKE,aAAe+B,EAAM,IAAK,CAKrI,OAJAvB,EAAMwB,MAAKC,EAAAA,EAAAA,KAA6BH,EAAI,IAC5Cb,EAAY,GACZC,GAAIgB,EAAAA,EAAAA,MAAS,EAAG,EAAG,GAEXzB,EAAqBqB,IAC3B,KAAK,EACHd,EAAQ,4CAERK,GAAKa,EAAAA,EAAAA,MAAS,GAAI,IAClBZ,GAAKY,EAAAA,EAAAA,MAAS,GAAI,GAAIb,GAEtBF,GAAKD,GAAKG,EAAKC,GACfF,EAAIC,EAAKC,EAAKJ,EAEdD,EAAa,oCAAmCC,EAAI,EAAI,MAAQ,kEAAkEV,EAAMsB,YAAYZ,EAAI,EAAI,UAAY,aACxK,MACF,KAAK,EACHF,EAAQ,2BAERK,GAAKa,EAAAA,EAAAA,MAAS,GAAI,IAClBZ,GAAKY,EAAAA,EAAAA,MAAS,GAAI,GAAIb,GAEtBF,GAAKD,GAAKG,EAAKC,GACfF,EAAIC,EAAKC,EAAKJ,EAEdD,EAAa,2BAA0BT,EAAMsB,4CAA4CK,KAAKC,IAAIf,EAAIC,eAAgBa,KAAKE,IAAIhB,EAAIC,uCAAwCa,KAAKC,IAAIf,EAAIC,WAAYa,KAAKE,IAAIhB,EAAIC,OACjN,MACF,KAAK,EACHN,EAAQ,yCAERO,GAAQW,EAAAA,EAAAA,MAAS,EAAG,GACpBV,GAAOU,EAAAA,EAAAA,MAAS,EAAG,GAEnBf,GAAK,EAAID,EAAIK,EACbH,EAAIF,EAAIK,GAAS,EAAIC,EAErBP,EAAa,4CAA2CC,EAAI,EAAI,MAAQ,+CAA+CK,KAASC,OAIpIC,EAAI,SAAUa,GACZ,OAAOC,EAAAA,EAAAA,IAAQrB,EAAIoB,GAAK,EAAInB,EAAImB,EAAIlB,IAEtCJ,GAAU,0CAAyCR,EAAMsB,oDASzB,IAA5BrB,EAAqBqB,IACvBhB,EAAOS,EAAQ,EACfR,EAAOQ,EAAQ,EACfZ,EAAOa,EAAO,EACdX,EAAOW,EAAO,IAEdV,EAAOqB,KAAKC,IAAIf,EAAIC,GAAM,EAC1BP,EAAOoB,KAAKE,IAAIhB,EAAIC,GAAM,EACtBJ,EAAI,GACNL,EAAOsB,KAAKK,KAAKf,GAAGN,GAAK,EAAID,IAAM,GACnCP,EAAOc,EAAEX,KAETH,EAAOwB,KAAKM,MAAMhB,GAAGN,GAAK,EAAID,IAAM,GACpCL,EAAOY,EAAEV,KAISH,EAAlBC,EAAOF,EAAO,GAAa,EACyD,EAA1EwB,KAAKE,IAAI,GAAGE,EAAAA,EAAAA,IAAwD,EAAhDJ,KAAKO,MAAMP,KAAKK,MAAM3B,EAAOF,GAAQ,IAAM,KAC7C,IAA5BF,EAAqBqB,KAEvBlB,EAAS,GAGXc,GAAIiB,EAAAA,EAAAA,KAAO,CACTC,KAAM9B,EACN+B,KAAMlC,EAAOC,EACbkC,KAAMjC,EAAOD,EACbmC,KAAMhC,EACNiC,OAAQ,EACRC,OAAQrC,EACRsC,gBAAiB,KAGnBvB,EAAUQ,KAAKC,KAAIG,EAAAA,EAAAA,IAAQ5B,EAAOC,IAAU,GAC5CgB,EAAUO,KAAKE,KAAIE,EAAAA,EAAAA,IAAQ1B,EAAOD,GAAS,GAE3CiB,EAAIS,GAAKpB,EAAIoB,GAAK,EAAInB,EAAImB,EAAIlB,EAE9BJ,IAASmC,EAAAA,EAAAA,KAAW,CAClBP,KAAM9B,EAAO,EACbiC,KAAMhC,EAAO,EACb8B,KAAMlB,EACNmB,KAAMlB,EAAU,EAChBwB,YA3GgB,GA4GhBC,MAAO,KAETC,EAAAA,EAAAA,KAAOzB,EAAGf,EAAMC,EAAM,OAAQ,IAAKW,GAAIA,GAEnC5B,KAAKyD,oBAAoBzB,EAAGZ,EAAGC,EAAGC,KACpCtB,KAAKO,eAAe2B,KAAKhB,GACzBlB,KAAKQ,iBAAiB0B,KAAKf,GAC3Ba,KAEFC,KAEFyB,EAAAA,EAAAA,KAAwB1D,OAE1BA,KAAK2D,0BAA4B,CAAC,qBAAsB,EAAG,wH,gBC9I9C,SAAS5D,IAItBC,KAAKH,MAAQ,GACbG,KAAK4D,YAAa,EAclB5D,KAAKC,SAAW,GAChBD,KAAK6D,mBAAqB,GAC1B7D,KAAK8D,aAAe,GACpB9D,KAAKO,eAAiB,GACtBP,KAAKQ,iBAAmB,GACxBR,KAAK+D,QAAU,GACf/D,KAAKgE,kBAAoB,GACzBhE,KAAKiE,eAAiB,GACtBjE,KAAKkE,sBAAwB,GAK7BlE,KAAKmE,QAAU,EACfnE,KAAKoE,YAAc,EAKnBpE,KAAKqE,mBAAoB,EACzBrE,KAAKsE,cAAgB,GACrBtE,KAAKuE,oBAAqB,EAC1BvE,KAAKwE,uBAAwB,EAC7BxE,KAAKyE,OAAS,EACdzE,KAAK0E,WAAa,EAClB1E,KAAK2E,kBAAmB,EACxB3E,KAAK4E,sBAAuB,EAC5B5E,KAAK6E,mBAAoB,EACzB7E,KAAK8E,uBAAwB,EAM7B9E,KAAK+E,QAAS,EACd/E,KAAKgF,gBAAkB,EAKvBhF,KAAKE,YAAc,GACnBF,KAAKiF,mBAAqB,EAC1BjF,KAAKkF,+BAAgC,EACrClF,KAAKmF,qBAAsB,EAC3BnF,KAAKoF,oBAAqB,EAC1BpF,KAAKqF,MAAQ,GAEbrF,KAAKsF,YAAa,EAClBtF,KAAKuF,uBAAwB,EAE7BvF,KAAK2D,2BAA4B,EACjC3D,KAAKwF,uBAAwB,EAC7BxF,KAAKyF,6BAA8B,EAEnCzF,KAAK0F,4BAA6B,EAClC1F,KAAK2F,wBAAyB,EAC9B3F,KAAK4F,8BAA+B,EAEpC5F,KAAK6F,4BAA6B,EAClC7F,KAAK8F,wBAAyB,EAC9B9F,KAAK+F,8BAA+B,EAEpC/F,KAAKgG,4BAA6B,EAClChG,KAAKiG,wBAAyB,EAC9BjG,KAAKkG,8BAA+B,EAMpClG,KAAKmG,cAAe,EASpBnG,KAAKoG,eAAiB,GAMtBpG,KAAKI,gBAAkB,SAAUC,KAQjCL,KAAKyD,oBAAsB,SAAUzB,KAAMqE,GAC/B,IAANrE,IAAShC,KAAKoG,eAAiB,IACnC,IAAIE,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIzG,KAAKoG,eAAeM,QAAQJ,IAAmB,KAGjDtG,KAAKoG,eAAelE,KAAKoE,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/1e/1E12-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, lettreMinusculeDepuisChiffre } from '../../modules/outils.js'\nimport { repere, courbe, mathalea2d } from '../../modules/2d.js'\nimport { calcule } from '../../modules/fonctionsMaths.js'\n\nexport const titre = 'Lecture graphique d\\'éléments caractéristiques d\\'un trinôme'\n\n/**\n * @author Jean-Léon Henry\n * Faire lire sur un graphique :\n * - le signe du coefficient dominant\n * - les racines\n * - les coordonnées du sommet et/ou la valeur de l'extremum\n * - les 3 trucs précédents\n * référence 1E12-1\n */\nexport default function LireElementsCarac () {\n  Exercice.call(this)\n  this.consigne = 'Lecture graphique'\n  this.nbQuestions = 5 // Nombre de questions par défaut\n  // this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  // this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  // this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  // this.video = '' // Id YouTube ou url\n  this.sup = 4\n\n  this.nouvelleVersion = function (numeroExercice) {\n    const pixelsParCm = 20\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles\n    if (this.sup < 4) typesDeQuestionsDisponibles = [parseInt(this.sup)]\n    else typesDeQuestionsDisponibles = [1, 2, 3]\n    const fName = []\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    let Ymin; let Yscale; let Ymax\n    let Xmin; let Xmax\n    for (let i = 0, texte, texteCorr, a, b, c, x1, x2, alpha, beta, f, r, svgYmin, svgYmax, F, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      fName.push(lettreMinusculeDepuisChiffre(i + 6))\n      texteCorr = ''\n      a = randint(-2, 2, 0) // On prend a au hasard quoi qu'il arrive\n      // Générons les coefficients du trinôme, la consigne, la correction\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // Signe du coefficient dominant\n          texte = 'Quel est le signe du coefficient dominant'\n          // On choisit 2 racines entières distinctes dans [-10;10]\n          x1 = randint(-10, 10)\n          x2 = randint(-10, 10, x1)// Flemme de coder la gestion d'une racine double\n          // On fabrique les coeffs à partir des racines\n          b = -a * (x1 + x2)\n          c = x1 * x2 * a\n\n          texteCorr = `La parabole est orientée vers le ${a < 0 ? 'bas' : 'haut'}, on en déduit que le coefficient dominant de $\\\\mathscr{${fName[i]}}$ est ${a < 0 ? 'négatif' : 'positif'}.`\n          break\n        case 2: // Racines\n          texte = 'Quelles sont les racines'\n          // On choisit 2 racines entières distinctes dans [-10;10]\n          x1 = randint(-10, 10)\n          x2 = randint(-10, 10, x1)// Flemme de coder la gestion d'une racine double\n          // On fabrique les coeffs à partir des racines\n          b = -a * (x1 + x2)\n          c = x1 * x2 * a\n\n          texteCorr = `La courbe de $\\\\mathscr{${fName[i]}}$ coupe l'axe horizontal aux points $(${Math.min(x1, x2)};0)$ et $(${Math.max(x1, x2)};0)$. Les deux racines sont donc $${Math.min(x1, x2)}$ et $${Math.max(x1, x2)}$.`\n          break\n        case 3: // Coordonnées du sommet\n          texte = 'Quelles sont les coordonnées du sommet'\n          // On choisit le sommet au hasard\n          alpha = randint(-9, 9)\n          beta = randint(-9, 9)\n          // On fabrique les coefficients\n          b = -2 * a * alpha\n          c = a * alpha ** 2 + beta\n\n          texteCorr = `Le sommet, c'est-à-dire le point le plus ${a > 0 ? 'bas' : 'haut'} de la parabole, a pour coordonnées $(${alpha};${beta})$.`\n          break\n      }\n      // Les coeffs sont générés, on peut donc créer la fonction\n      f = function (x) {\n        return calcule(a * x ** 2 + b * x + c)\n      }\n      texte += ` de la fonction polynomiale $\\\\mathscr{${fName[i]}}$ du second degré représentée ci-dessous ?<br>`\n      /** Génération du graphique\n       * a = randint(-2,2,0)\n       * Q1,Q2 :\n       *    deux racines dans [-9;9]\n       * Q3 :\n       *    le sommet dans le carré [-9;9]²\n      */\n\n      if (listeTypeDeQuestions[i] === 3) {\n        Xmin = alpha - 5\n        Xmax = alpha + 5\n        Ymin = beta - 5\n        Ymax = beta + 5\n      } else {\n        Xmin = Math.min(x1, x2) - 2\n        Xmax = Math.max(x1, x2) + 2\n        if (a < 0) {\n          Ymax = Math.ceil(f(-b / (2 * a)) + 2)\n          Ymin = f(Xmin)\n        } else {\n          Ymin = Math.floor(f(-b / (2 * a)) - 2)\n          Ymax = f(Xmax)\n        }\n      }\n\n      if (Ymax - Ymin < 10) Yscale = 2\n      else Yscale = Math.max(1, calcule(Math.round(Math.ceil((Ymax - Ymin) / 10) / 5) * 5)) * 2\n      if (listeTypeDeQuestions[i] === 3) {\n        // Nécessaire pour permettre la lecture graphique\n        Yscale = 1\n      }\n\n      r = repere({\n        xmin: Xmin,\n        ymin: Ymin - Yscale,\n        ymax: Ymax + Yscale,\n        xmax: Xmax,\n        xscale: 1,\n        yscale: Yscale,\n        positionLabelY: -0.8\n      })\n\n      svgYmin = Math.min(calcule(Ymin / Yscale), -1)\n      svgYmax = Math.max(calcule(Ymax / Yscale), 1)\n\n      F = x => a * x ** 2 + b * x + c\n\n      texte += mathalea2d({\n        xmin: Xmin - 1,\n        xmax: Xmax + 1,\n        ymin: svgYmin,\n        ymax: svgYmax + 2,\n        pixelsParCm,\n        scale: 0.6\n      },\n      courbe(F, Xmin, Xmax, 'blue', 1.5, r), r)\n\n      if (this.questionJamaisPosee(i, a, b, c)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de questions ', 4, '1 : Signe du coefficient dominant\\n2 : Racines\\n3 : Coordonnées du sommet\\n4 : Mélange des trois type de questions']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","LireElementsCarac","Exercice","this","consigne","nbQuestions","sup","nouvelleVersion","numeroExercice","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","parseInt","fName","listeTypeDeQuestions","combinaisonListes","Ymin","Yscale","Ymax","Xmin","Xmax","texte","texteCorr","a","b","c","x1","x2","alpha","beta","f","r","svgYmin","svgYmax","F","i","cpt","push","lettreMinusculeDepuisChiffre","randint","Math","min","max","x","calcule","ceil","floor","round","repere","xmin","ymin","ymax","xmax","xscale","yscale","positionLabelY","mathalea2d","pixelsParCm","scale","courbe","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}