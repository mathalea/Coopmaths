{"version":3,"file":"js/60141.354e066319c6afcdffb3.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G30-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, ecritureAlgebrique, ecritureParentheseSiNegatif, ecritureAlgebriqueSauf1, reduireAxPlusB } from '../../modules/outils.js'\nexport const titre = 'Déterminer une équation cartésienne de droite à partir d\\'un point et d\\'un vecteur directeur.'\n// totoche\n/**\n * Description didactique de l'exercice\n * @author Stéphane Guyon\n * Référence 2G30-4, ex 2G51-1\n*/\nexport default function equationcartesienne () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Déterminer une équation cartésienne de la droite $\\\\bm(d)$'\n  this.nbQuestions = 2\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeQuestionsDisponibles = ['cartesienne1']\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, xA, yA, xu, yu, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'cartesienne1':\n          xA = randint(-5, 5)\n          yA = randint(-5, 5)\n          xu = randint(-5, 5)\n          yu = randint(-5, 5)\n          texte = `passant par le point $A$ de coordonnées : $A(${xA};${yA})$ et ayant le vecteur $\\\\vec u \\\\begin{pmatrix}${xu}\\\\\\\\${yu}\\\\end{pmatrix}$ comme vecteur directeur.`\n          if (this.sup === 1) {\n            texte += '<br><i>On demande une rédaction utilisant un résultat de cours.</i>'\n            texteCorr = 'On sait, d\\'après le cours, que si une droite $(d)$ admet un vecteur directeur de coordonnées :'\n            texteCorr += ' $\\\\vec {u} \\\\begin{pmatrix}-b\\\\\\\\a\\\\end{pmatrix}$, '\n            texteCorr += '<br>alors une équation cartésienne de la droite $(d)$ est de la forme $ax+by+c=0$. '\n            texteCorr += `<br>Avec les données de l'énoncé, $\\\\vec u \\\\begin{pmatrix}${xu}\\\\\\\\${yu}\\\\end{pmatrix}$,`\n            texteCorr += ` <br>on en déduit donc que :$-b = ${xu}$ et $a=${yu}$.`\n            texteCorr += ` <br>L'équation cartésienne est donc de la forme : $ ${yu} x ${ecritureAlgebriqueSauf1(-xu)} y + c=0$. `\n            texteCorr += `<br>On cherche maintenant la valeur correspondante de $c$. <br>On utilise pour cela que $A(${xA};${yA}) \\\\in(d)$. `\n            texteCorr += ` <br>$\\\\iff ${yu} \\\\times ${ecritureParentheseSiNegatif(xA)} ${ecritureAlgebrique(-xu)} \\\\times ${ecritureParentheseSiNegatif(yA)}+ c=0$ `\n            texteCorr += ` <br>$\\\\iff  ${yu * xA} ${ecritureAlgebrique(-xu * yA)} + c=0$ `\n            texteCorr += ` <br>$\\\\iff  c= ${-xA * yu + yA * xu}$ `\n            if (xu === 0) { texteCorr += ` <br>Une équation cartésienne est donc de la forme : $ (d): ${reduireAxPlusB(yu, 0)} ${ecritureAlgebrique(-xA * yu + yA * xu)}=0$ ` } else {\n              if (xu === 1) { texteCorr += ` <br>Une équation cartésienne est donc de la forme : $ (d): ${reduireAxPlusB(yu, 0)}-y ${ecritureAlgebrique(-xA * yu + yA * xu)}=0$ ` }\n              if (xu === -1 & yu !== 0) { texteCorr += ` <br>Une équation cartésienne est donc de la forme : $ (d): ${reduireAxPlusB(yu, 0)}+y ${ecritureAlgebrique(-xA * yu + yA * xu)}=0$ ` }\n              if (xu === -1 & yu === 0) { texteCorr += ` <br>Une équation cartésienne est donc de la forme : $ (d): y ${ecritureAlgebrique(-xA * yu + yA * xu)}=0$ ` }\n              if (xu !== 0 & xu !== 1 & xu !== -1) { texteCorr += ` <br>Une équation cartésienne est donc de la forme : $ (d): ${reduireAxPlusB(yu, -xu)}y ${ecritureAlgebrique(-xA * yu + yA * xu)}=0$ ` }\n            }\n          }\n          if (this.sup === 2) {\n            texte += '<br><i>On demande une démonstration n\\'utilisant pas de résultat de cours.</i>'\n\n            texteCorr = '<br>Soit $M(x;y)$ un point du plan distinct de $A$.'\n            texteCorr += '<br>$M(x;y) \\\\in (d)$'\n            texteCorr += ' <br>$\\\\iff \\\\overrightarrow {AM}$ est un vecteur directeur de la droite $(d)$. '\n            texteCorr += ' <br>$\\\\iff \\\\overrightarrow {AM}$ et $\\\\vec u$ sont donc des vecteurs colinéaires. '\n            texteCorr += ' <br>$\\\\iff Det\\\\big(\\\\overrightarrow {AM};\\\\vec u\\\\big)=0$ <br>'\n            texteCorr += ' <br>$\\\\iff \\\\begin{vmatrix}x-x_A&x_u\\\\\\\\y-y_A&y_u\\\\end{vmatrix}=0$ <br>'\n            texteCorr += `<br>$\\\\iff \\\\begin{vmatrix}x-${ecritureParentheseSiNegatif(xA)}&${xu}\\\\\\\\y-${ecritureParentheseSiNegatif(yA)}&${yu}\\\\end{vmatrix}=0$<br>`\n            texteCorr += `<br>$\\\\iff (x-${ecritureParentheseSiNegatif(xA)})\\\\times ${yu}-( y-${ecritureParentheseSiNegatif(yA)}) \\\\times ${ecritureParentheseSiNegatif(xu)}=0$`\n            texteCorr += `<br>$\\\\iff ${yu} x ${ecritureAlgebriqueSauf1(-xu)} y -${ecritureParentheseSiNegatif(xA)} \\\\times ${yu} ${ecritureAlgebrique(yA)} \\\\times ${ecritureParentheseSiNegatif(xu)}=0$`\n            texteCorr += ` <br>Après réduction, une équation cartésienne est de la forme : $ (d): ${reduireAxPlusB(yu, -xu)}y ${ecritureAlgebriqueSauf1(-xA * yu + yA * xu)}=0$ `\n          }\n          break\n      }\n      if (this.questionJamaisPosee(i, xA, yA, xu, yu)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de correction :', 2, '1 : Correction avec le cours\\n2 : Correction avec la démonstration']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","equationcartesienne","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","parseInt","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","xA","yA","xu","yu","texte","texteCorr","i","cpt","randint","ecritureAlgebriqueSauf1","ecritureParentheseSiNegatif","ecritureAlgebrique","reduireAxPlusB","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}