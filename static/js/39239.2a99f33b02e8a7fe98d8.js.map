{"version":3,"file":"js/39239.2a99f33b02e8a7fe98d8.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, lettreDepuisChiffre, arrondi, texNombre, sp, nombreDeChiffresDe, nombreDeChiffresDansLaPartieDecimale } from '../../modules/outils.js'\nimport { droiteGraduee2, labelPoint, mathalea2d, point, tracePoint } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Lire l’abscisse relative d’un point'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n/**\n* Lire l'abscisse décimale d'un point\n* @author Jean-Claude Lhote et Rémi Angot\n* Référence 5R11\n*/\nexport default function LireAbscisseRelative () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Lire l'abscisse de chacun des points suivants.\"\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 4\n  this.listePackages = 'tkz-euclide'\n  const changeCoord = function (x, abs0, pas1) {\n    return (abs0 + (x - abs0) * 3 * pas1)\n  }\n\n  this.nouvelleVersion = function (numeroExercice) {\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let objets = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (this.sup === 4) { typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else { typesDeQuestions = combinaisonListes([parseInt(this.sup)], this.nbQuestions) }\n\n    for (let i = 0, abs0, l1, l2, l3, x1, x2, x3, x11, x22, x33, pas1, pas2, abs1, abs2, abs3, A, B, C, texte, texteCorr; i < this.nbQuestions; i++) {\n      objets = []\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n      switch (typesDeQuestions[i]) {\n        case 1: // Placer des décimaux relatifs sur un axe (1 décimale)\n          abs0 = randint(-6, -3)\n          pas1 = 1\n          pas2 = 10\n          break\n\n        case 2: // Placer des décimaux relatifs sur un axe (2 décimales)\n          abs0 = calcul(randint(-4, -2) / 10)\n          pas1 = 10\n          pas2 = 10\n          break\n\n        case 3: // Placer des décimaux relatifs sur un axe (3 décimales)\n          abs0 = calcul(randint(-6, -2) / 100)\n          pas1 = 100\n          pas2 = 10\n          break\n      }\n      x1 = randint(0, 2); x2 = randint(3, 4); x3 = randint(5, 6)\n      x11 = randint(1, 9); x22 = randint(1, 9); x33 = randint(1, 3)\n      abs1 = arrondi(abs0 + x1 / pas1 + x11 / pas1 / pas2, typesDeQuestions[i]) // le type de questions est égal au nombre de décimales.\n      abs2 = arrondi(abs0 + x2 / pas1 + x22 / pas1 / pas2, typesDeQuestions[i])\n      abs3 = arrondi(abs0 + x3 / pas1 + x33 / pas1 / pas2, typesDeQuestions[i])\n      objets.push(droiteGraduee2({\n        Unite: 3 * pas1,\n        Min: abs0,\n        Max: abs0 + 6.9 / pas1,\n        x: abs0,\n        y: 0,\n        thickSecDist: 1 / pas2 / pas1,\n        thickSec: true,\n        labelsPrincipaux: true,\n        thickDistance: 1 / pas1\n      }))\n\n      A = point(changeCoord(abs1, abs0, pas1), 0, l1, 'above')\n      B = point(changeCoord(abs2, abs0, pas1), 0, l2, 'above')\n      C = point(changeCoord(abs3, abs0, pas1), 0, l3, 'above')\n      objets.push(tracePoint(A, B, C), labelPoint(A, B, C))\n\n      texte = mathalea2d({ xmin: abs0 - 0.5, xmax: abs0 + 22, ymin: -1, ymax: 1, scale: 0.75 }, objets)\n      if (!context.isAmc && this.interactif) {\n        texte += `${l1}(` + ajouteChampTexteMathLive(this, 3 * i, 'largeur10 inline', { texteApres: '  )' }) + sp(20)\n        texte += ajouteChampTexteMathLive(this, 3 * i + 1, 'largeur10 inline', { texte: `${l2}(`, texteApres: '  )' }) + sp(20)\n        texte += ajouteChampTexteMathLive(this, 3 * i + 2, 'largeur10 inline', { texte: `${l3}(`, texteApres: '  )' })\n        setReponse(this, 3 * i, abs1)\n        setReponse(this, 3 * i + 1, abs2)\n        setReponse(this, 3 * i + 2, abs3)\n      } else {\n        this.autoCorrection[i] = {\n          enonce: texte,\n          propositions: [\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: texteCorr,\n                statut: '',\n                reponse: {\n                  texte: `abscisse de ${l1}`,\n                  valeur: abs1,\n                  param: {\n                    digits: nombreDeChiffresDe(abs1),\n                    decimals: nombreDeChiffresDansLaPartieDecimale(abs1),\n                    signe: true,\n                    approx: 0\n                  }\n                }\n              }]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: '',\n                statut: '',\n                reponse: {\n                  texte: `abscisse de ${l2}`,\n                  valeur: abs2,\n                  param: {\n                    digits: nombreDeChiffresDe(abs2),\n                    decimals: nombreDeChiffresDansLaPartieDecimale(abs2),\n                    signe: true,\n                    approx: 0\n                  }\n                }\n              }]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: '',\n                statut: '',\n                reponse: {\n                  texte: `abscisse de ${l3}`,\n                  valeur: abs3,\n                  param: {\n                    digits: nombreDeChiffresDe(abs3),\n                    decimals: nombreDeChiffresDansLaPartieDecimale(abs3),\n                    signe: true,\n                    approx: 0\n                  }\n                }\n              }]\n            }\n          ]\n        }\n      }\n      texteCorr = mathalea2d({ xmin: abs0 - 0.5, xmax: abs0 + 22, ymin: -1, ymax: 1, scale: 0.75 },\n        droiteGraduee2({\n          Unite: 3 * pas1,\n          Min: abs0,\n          Max: abs0 + 6.9 / pas1,\n          x: abs0,\n          y: 0,\n          thickSecDist: 1 / pas2 / pas1,\n          thickSec: true,\n          labelsPrincipaux: true,\n          thickDistance: 1 / pas1,\n          labelPointTaille: 10,\n          labelPointLargeur: 20 + 5 * typesDeQuestions[i],\n          pointListe: [[abs1, `${l1}(${texNombre(abs1)})`], [abs2, `${l2}(${texNombre(abs2)})`], [abs3, `${l3}(${texNombre(abs3)})`]]\n        }))\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, '1 : Nombre relatif à une décimale\\n2 : Nombre relatif à deux décimales\\n3 : Nombre relatif à trois décimales\\n4 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","LireAbscisseRelative","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","listePackages","changeCoord","x","abs0","pas1","nouvelleVersion","numeroExercice","typesDeQuestions","listeQuestions","listeCorrections","objets","contenu","contenuCorrection","combinaisonListes","parseInt","l1","l2","l3","x1","x2","x3","x11","x22","x33","pas2","abs1","abs2","abs3","A","B","C","texte","texteCorr","i","lettreDepuisChiffre","randint","calcul","arrondi","push","droiteGraduee2","Unite","Min","Max","y","thickSecDist","thickSec","labelsPrincipaux","thickDistance","point","tracePoint","labelPoint","mathalea2d","xmin","xmax","ymin","ymax","scale","context","interactif","ajouteChampTexteMathLive","texteApres","sp","setReponse","autoCorrection","enonce","propositions","type","statut","reponse","valeur","param","digits","nombreDeChiffresDe","decimals","nombreDeChiffresDansLaPartieDecimale","signe","approx","labelPointTaille","labelPointLargeur","pointListe","texNombre","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}