{"version":3,"file":"js/92394.499c352127f7a0fb9339.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/1e/1P10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, texFraction, arrondi, calcul, contraindreValeur } from '../../modules/outils.js'\nimport { latexParCoordonnees, mathalea2d, point, segment } from '../../modules/2d.js'\nimport { number, fraction } from 'mathjs'\nexport const titre = 'Probabilités conditionnelles'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '25/10/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\nexport const dateDeModifImportante = '24/10/2021' // Une date de modification importante au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Description didactique de l'exercice\n * @author\n * Référence\n*/\nexport default function ProbabilitésConditionnelles () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 1 // Nombre de questions par défaut\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.besoinFormulaireCaseACocher = ['Probabilités fractionnaires', false]\n  this.sup = false\n  /**\n   *\n   * @param {Number} proba La probabilité à afficher\n   * @param {Boolean} rationnel Si true alors // \\\\dfrac sinon 0,..\n   * @returns la chaine latex pour écrire la proba.\n   * version arrondie au millième\n   */\n  function texProba (proba, rationnel) {\n    return rationnel ? fraction(arrondi(proba, 3)).toLatex().replace('frac', 'dfrac') : number(arrondi(proba, 3)).toString().replace('.', '{,}')\n  }\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let objets\n    let listeTypeDeQuestions\n    this.sup2 = contraindreValeur(1, 3, this.sup2, 3)\n    if (this.sup2 === 3) {\n      listeTypeDeQuestions = combinaisonListes(['sujetE3C1', 'sujetE3C2'], this.nbQuestions)\n    } else {\n      listeTypeDeQuestions = combinaisonListes([`sujetE3C${this.sup2}`], this.nbQuestions)\n    }\n\n    // const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, a, c, ec, ce, v, av, A, B, A1, A2, A3, A4, O, k1, k2, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // Boucle principale où i+1 correspond au numéro de la question\n      objets = []\n      switch (listeTypeDeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'sujetE3C1':\n          a = randint(30, 70)// p(A)\n          v = randint(30, 70)// P_T(V)\n\n          av = randint(20, a - 5)// P(A \\cap V)\n          // ici on économise des variables qui ne servent qu'une fois en les stockant dans un tableau. (Jean-Claude Lhote)\n          O = point(0.6, 2.3)\n          A = point(5, 5)\n          B = point(5, 1)\n          A1 = point(9, 7.5)\n          A2 = point(9, 4)\n          A3 = point(9, 3)\n          A4 = point(9, 0)\n          // On met les segments d'abord pour ne pas qu'ils passent par dessus le texte.(Jean-Claude Lhote)\n          objets.push(segment(O, A, 'blue'))\n          objets.push(segment(O, B, 'blue'))\n          objets.push(segment(A, A1, 'blue'))\n          objets.push(segment(A, A2, 'blue'))\n          objets.push(segment(B, A3, 'blue'))\n          objets.push(segment(B, A4, 'blue'))\n          objets.push(latexParCoordonnees('A', 5, 5.2, 'black', 20, 12, 'white', 10)) // 1er noeud Avion) = A\n          objets.push(latexParCoordonnees('\\\\bar A', 5, 1.3, 'black', 20, 12, 'white', 10))// 1er noeud événement contraire \\bar A\n          objets.push(latexParCoordonnees('\\\\Omega', 0, 2.3))// Univers, point de départ de l'arbre Omega\n          // if (this.sup) {\n          objets.push(latexParCoordonnees(texProba(a / 100, this.sup), 2.5, 4.1, 'black', 20, 20, 'white', 6))// proba de A, ici ${a}\n          objets.push(latexParCoordonnees(texProba(1 - a / 100, this.sup), 2.5, 2.1, 'black', 20, 20, 'white', 6))// proba de \\\\bar A 1-${a}\n          // objets.push(latexParCoordonnees(`\\\\dfrac{${100 - v}}{100}`, 6.8, 6.8, 'black', 20, 20, 'white', 6))// proba de B sachant A\n          // objets.push(latexParCoordonnees(`\\\\dfrac{${v}}{100}`, 6.8, 4.9, 'black', 20, 20, 'white', 6))// proba de \\\\bar B sachant A\n          objets.push(latexParCoordonnees(texProba(1 - v / 100, this.sup), 6.8, 0.9, 'black', 20, 20, 'white', 6))// proba de \\\\bar B sachant \\\\bar A\n          objets.push(latexParCoordonnees(texProba(v / 100, this.sup), 6.8, 2.7, 'black', 20, 20, 'white', 6))// proba de B sachant \\\\bar A\n          objets.push(latexParCoordonnees(`P(A\\\\cap V)=${texProba(av / 100, this.sup)}`, 10.5, 7.8, 'red', 20, 20, 'white', 10))// proba de B \\\\cap A\n          /*  } else {\n            objets.push(latexParCoordonnees(texNombrec(a / 100), 2.5, 4, 'black', 20, 12, 'white', 6))\n            objets.push(latexParCoordonnees(texNombrec(1 - a / 100), 2.5, 2, 'black', 20, 12, 'white', 6))\n            // objets.push(latexParCoordonnees(texNombrec(1 - v / 100), 6.8, 6.5, 'black', 20, 12, 'white', 6))\n            // objets.push(latexParCoordonnees(texNombrec(v / 100), 6.8, 4.8, 'black', 20, 12, 'white', 6))\n            objets.push(latexParCoordonnees(texNombrec((100 - v) / 100), 6.8, 0.7, 'black', 20, 20, 'white', 6))// proba de \\\\bar B sachant \\\\bar A\n            objets.push(latexParCoordonnees(texNombrec(v / 100), 6.8, 2.5, 'black', 20, 20, 'white', 6))// proba de B sachant \\\\bar A\n            objets.push(latexParCoordonnees('P(A\\\\cap V)=', 10.5, 7.8, 'red', 20, 20, 'white', 10))// proba de B sachant \\\\bar A\n            objets.push(latexParCoordonnees(texNombrec(av / 100), 14.5, 7.8, 'red', 20, 20, 'white', 10))// proba de B sachant \\\\bar A\n          }\n*/\n          objets.push(latexParCoordonnees('V', 9, 7.7, 'black', 20, 12, 'white', 10)) // 2ème noeud issu de A\n          objets.push(latexParCoordonnees('\\\\bar V', 9, 4.3, 'black', 20, 12, 'white', 10))// 2ème noeud issu de A\n          objets.push(latexParCoordonnees('V', 9, 3.1, 'black', 20, 12, 'white', 10)) // 2ème noeud issu de \\bar A\n          objets.push(latexParCoordonnees('\\\\bar V', 9, 0.2, 'black', 20, 12, 'white', 10))// 2ème noeud issu de \\bar A\n\n          // p2 = texteParPoint(Number(1 - a / 100).toString(), pA1)\n          // p3 = texteParPoint((1 - v / 100).toString(), pA2)\n          // p4 = texteParPoint(Number(v / 100).toString(), pA3)\n          // Il manque le 2ème noeud avec  V et \\\\bar V\n\n          texte = 'Une agence de voyage propose deux formules week-end pour se rendre à Londres depuis Paris.'\n          texte += '<br> Les clients choisissent leur moyen de transport : train ou avion.'\n          texte += '<br> De plus, s\\'ils le souhaitent, ils peuvent compléter leur formule par l\\'option \"visites guidées\".'\n          texte += '<br> Une étude a produit les données suivantes:'\n          texte += `<br> $\\\\bullet~~ ${a}$% des clients optent pour l'avion;`\n          texte += `<br> $\\\\bullet~~$ Parmi   les clients ayant choisi le train, $${v}$ % choisissent aussi l'option \"visites guidées\".`\n          texte += `<br> $\\\\bullet~~ ${av}$% des clients ont choisi à la fois l'avion et l'option \"visites guidées\".<br>`\n          texte += '<br> On interroge au hasard un client de l\\'agence ayant souscrit à une formule week-end à Londres.'\n          texte += '<br> On considère les évènements suivants:'\n          texte += '<br> $\\\\bullet~~$ $A$ :  le client a choisi l\\'avion.'\n          texte += '<br> $\\\\bullet~~$ $V$ : le client a choisi l\\'option \"visites guidées\".<br>'\n          texte += '<br> 1. Déterminer $P_A(V)$.'\n          texte += `<br> 2.  Démontrer que la probabilité pour que le client interrogé ait choisi l'option \"visites guidées\" est environ égale à $${texProba(av / 100 + (1 - a / 100) * v / 100, false)}$.`\n          texte += '<br> 3. Calculer la probabilité pour que le client interrogé ait pris l\\'avion sachant qu\\'il n\\'a pas choisi l\\'option \"visites guidées\". Arrondir le résultat au centième.'\n          texte += '<br> 4. On interroge au hasard deux clients de manière aléatoire et indépendante.'\n          texte += '<br> Quelle est la probabilité qu\\'aucun des deux ne prennent l\\'option \"visites guidées\" ?'\n          texte += 'On donnera les résultats sous forme de valeurs approchées à $10^{-3}$ près.'\n          texteCorr = '1. De l\\'énoncé on déduit que :'\n          texteCorr += `<br> $P(A)=${texProba(a / 100, this.sup)}$`\n          texteCorr += `<br> $P_{\\\\bar{A}}(V)=${texProba(v / 100, this.sup)}$`\n          texteCorr += `<br> $P(A \\\\cap V)=${texProba(av / 100, this.sup)}$`\n          texteCorr += ' <br>On peut alors construire cet arbre pondéré : <br>'\n          // texteCorr += mathalea2d({ xmin: -5, ymin: -1, xmax: 12, ymax: 7 }, objets)\n          texteCorr += mathalea2d({ xmin: -5, ymin: -1, xmax: 18, ymax: 10 }, objets)\n          texteCorr += `<br>On a donc $P_{A}(V)=\\\\dfrac{P(A \\\\cap V)}{P(A)}=\\\\dfrac{${texProba(av / 100, this.sup)}}{${texProba(a / 100, this.sup)}}=${texFraction(av, a)} $.`\n          texteCorr += '<br><br>2. Comme $A$ et $\\\\bar A$ forment une partition de l\\'univers, d\\'après la loi des probabilités totales :'\n          texteCorr += ' <br>$P(V)=P(A \\\\cap V)+P(\\\\bar{A} \\\\cap V) . $'\n\n          texteCorr += `<br>Or $P(\\\\bar{A} \\\\cap V)=P(\\\\bar{A}) \\\\times P_{\\\\bar{A}}(V)=(1-${texProba(a / 100, this.sup)}) \\\\times ${texProba(v / 100, this.sup)}=${texProba((1 - a / 100) * v / 100, this.sup)}$.`\n          texteCorr += `<br>Donc $P(V)=${texProba(av / 100, this.sup)}+${texProba((1 - a / 100) * v / 100, this.sup)}=${texProba(av / 100 + (1 - a / 100) * v / 100, this.sup)}$.`\n          texteCorr += '<br><br>3. On a $P_{\\\\bar{V}}(A)=\\\\dfrac{P(\\\\bar{V} \\\\cap A)}{P(\\\\bar{V})}=\\\\dfrac{P(A \\\\cap \\\\bar{V})}{P(\\\\bar{V})}=\\\\dfrac{P(A) \\\\times P_A(\\\\bar{V})}{P(\\\\bar{V})}$.'\n          texteCorr += `<br>Or d'après la question précédente: $P(\\\\bar{V})=1-P(V)=1-${texProba(av / 100 + (1 - a / 100) * v / 100, this.sup)}=${texProba(1 - (av / 100 + (1 - a / 100) * v / 100), this.sup)}$`\n          texteCorr += `<br>et d'après la question $1: P_{A}(\\\\bar{V})=1-P_{A}(V)=1-${texFraction(av, a)}=${texFraction(a - av, a)}$.`\n          k1 = calcul((a - av) / a)\n          k2 = calcul(1 - (av / 100 + (1 - a / 100) * v / 100))\n          texteCorr += `<br>Donc $P_{\\\\bar{V}}(A)=\\\\dfrac{${texProba(a / 100, this.sup)} \\\\times ${texFraction(a - av, a)}}{${texProba(k2, this.sup)}} ${((a / 100) * k1) / k2 === arrondi(((a / 100) * k1) / k2, 3) ? '=' : '\\\\approx'}${texProba(((a / 100) * k1) / k2, false)}$.`\n          texteCorr += `<br><br>4. On a vu que $P(\\\\bar{V})=1-${texProba(k2, this.sup)}=${texProba(1 - k2, this.sup)}$.`\n          texteCorr += '<br>Comme les deux événements sont indépendants, en les appelant $\\\\bar {V_1}$ et $\\\\bar{V_2}$, on a : $P(\\\\bar{V_1}\\\\cap\\\\bar{V_2})=P(\\\\bar{V_1})\\\\times P(\\\\bar{V_2})$'\n          texteCorr += `<br>La probabilité cherchée est donc égale à $P(\\\\bar{V_1}\\\\cap\\\\bar{V_2})=${texProba(1 - k2, this.sup)} \\\\times ${texProba(1 - k2, this.sup)}\\\\approx${texProba((1 - k2) ** 2, false)}$.`\n          break\n        case 'sujetE3C2':\n          c = randint(30, 70)// p(C)\n          ec = randint(20, 95 - c)// P_\\bar C(E)\n          ce = randint(20, 95 - c)// P(E \\cap C)\n          O = point(0.6, 2.3)\n          A = point(5, 5)\n          B = point(5, 1)\n          A1 = point(9, 7.5)\n          A2 = point(9, 4)\n          A3 = point(9, 3)\n          A4 = point(9, 0)\n          // On met les segments d'abord pour ne pas qu'ils passent par dessus le texte.(Jean-Claude Lhote)\n          objets.push(segment(O, A, 'blue'))\n          objets.push(segment(O, B, 'blue'))\n          objets.push(segment(A, A1, 'blue'))\n          objets.push(segment(A, A2, 'blue'))\n          objets.push(segment(B, A3, 'blue'))\n          objets.push(segment(B, A4, 'blue'))\n          objets.push(latexParCoordonnees('C', 5, 5.2, 'black', 20, 12, 'white', 10)) // 1er noeud  = C\n          objets.push(latexParCoordonnees('\\\\bar C', 5, 1.3, 'black', 20, 12, 'white', 10))// 1er noeud événement contraire \\bar C\n          objets.push(latexParCoordonnees('\\\\Omega', 0, 2.3))// Univers, point de départ de l'arbre Omega\n          // if (this.sup) {\n          objets.push(latexParCoordonnees(texProba(c / 100, this.sup), 2.5, 4.1, 'black', 20, 20, 'white', 6))// proba de C, ici ${c}\n          objets.push(latexParCoordonnees(texProba(1 - c / 100, this.sup), 2.5, 2.1, 'black', 20, 20, 'white', 6))// proba de \\\\bar C 1-${c}\n          // objets.push(latexParCoordonnees(`\\\\dfrac{${100 - v}}{100}`, 6.8, 6.8, 'black', 20, 20, 'white', 6))// proba de B sachant A\n          // objets.push(latexParCoordonnees(`\\\\dfrac{${v}}{100}`, 6.8, 4.9, 'black', 20, 20, 'white', 6))// proba de \\\\bar B sachant A\n          objets.push(latexParCoordonnees(texProba(1 - ec / 100, this.sup), 6.8, 0.9, 'black', 20, 20, 'white', 6))// proba de \\\\bar E sachant \\\\bar C\n          objets.push(latexParCoordonnees(texProba(ec / 100, this.sup), 6.8, 2.7, 'black', 20, 20, 'white', 6))// proba de E sachant \\\\bar C\n          objets.push(latexParCoordonnees(`P(C\\\\cap E)=${texProba(ce / 100, this.sup)}`, 10.5, 7.8, 'red', 20, 20, 'white', 10))// proba de C \\\\cap E\n          /*  } else {\n            objets.push(latexParCoordonnees(texNombrec(a / 100), 2.5, 4, 'black', 20, 12, 'white', 6))\n            objets.push(latexParCoordonnees(texNombrec(1 - a / 100), 2.5, 2, 'black', 20, 12, 'white', 6))\n            // objets.push(latexParCoordonnees(texNombrec(1 - v / 100), 6.8, 6.5, 'black', 20, 12, 'white', 6))\n            // objets.push(latexParCoordonnees(texNombrec(v / 100), 6.8, 4.8, 'black', 20, 12, 'white', 6))\n            objets.push(latexParCoordonnees(texNombrec((100 - v) / 100), 6.8, 0.7, 'black', 20, 20, 'white', 6))// proba de \\\\bar B sachant \\\\bar A\n            objets.push(latexParCoordonnees(texNombrec(v / 100), 6.8, 2.5, 'black', 20, 20, 'white', 6))// proba de B sachant \\\\bar A\n            objets.push(latexParCoordonnees('P(A\\\\cap V)=', 10.5, 7.8, 'red', 20, 20, 'white', 10))// proba de B sachant \\\\bar A\n            objets.push(latexParCoordonnees(texNombrec(av / 100), 14.5, 7.8, 'red', 20, 20, 'white', 10))// proba de B sachant \\\\bar A\n          }\n*/\n          objets.push(latexParCoordonnees('E', 9, 7.7, 'black', 20, 12, 'white', 10)) // 2ème noeud issu de A\n          objets.push(latexParCoordonnees('\\\\bar E', 9, 4.3, 'black', 20, 12, 'white', 10))// 2ème noeud issu de A\n          objets.push(latexParCoordonnees('E', 9, 3.1, 'black', 20, 12, 'white', 10)) // 2ème noeud issu de \\bar A\n          objets.push(latexParCoordonnees('\\\\bar E', 9, 0.2, 'black', 20, 12, 'white', 10))// 2ème noeud issu de \\bar A\n          texte = 'Une chaîne de salons de coiffure propose à ses clients qui viennent pour une coupe deux prestations supplémentaires cumulables :'\n          texte += '<br>$\\\\bullet$ Une coloration naturelle à base de plantes appelée \"couleur-soin\",'\n          texte += '<br>$\\\\bullet$  Des mèches blondes pour donner du relief à la chevelure, appelées  \"effet coup de soleil\".'\n          texte += `<br><br> Il apparaît que : <br>$\\\\diamond ~~ ${c}~\\\\%$ des clients demandent une \"couleur-soin\".`\n          texte += `<br>$\\\\diamond ~~$Parmi ceux qui ne veulent pas de \"couleur soin\", $${ec}~\\\\%$ des clients demandent un \"effet coup de soleil\".`\n          texte += `<br>$\\\\diamond ~~$ Par ailleurs, $${ce}\\\\%$ des clients demandent une \"couleur soin\" et un \"effet coup de soleil\" .`\n          texte += '<br>On interroge un client au hasard.'\n          texte += '<br>On notera $C$ l\\'évènement : \"Le client souhaite une \"couleur-soin.\"'\n          texte += '<br>On notera $E$ l\\'évènement: \"Le client souhaite un \"effet coup de soleil.\"<br>'\n\n          texte += '$1.$ Donner les valeurs de $P(C)$, $P( C \\\\cap E)$ et $P_{\\\\bar{C}}(E)$.<br>'\n          texte += '$2.$ Calculer la probabilité que le client ne souhaite ni une \"couleur-soin\", ni un \"effet coup de soleil\".<br>'\n          texte += '$3.$ Calculer la probabilité qu\\'un client choisisse l\\'\"effet coup de soleil\" sachant qu\\'il a pris une \"couleur soin\"'\n          texte += '$4.$ Montrer que la probabilité de l\\'évènement $E$ est égale à $0,42$.<br>'\n          texte += '$5.$ Les évènements $C$ et $E$ sont-ils indépendants ?<br>'\n          texte += 'On donnera les résultats sous forme de valeurs approchées à $10^{-3}$ près.'\n          texteCorr = `1. D'après l'énoncé, on a :<br>$\\\\bullet~~P(C)=${texProba(c / 100, this.sup)}$.`\n          texteCorr += `<br>$\\\\bullet~~P(C \\\\cap E)=${texProba(ce / 100, this.sup)}$.`\n          texteCorr += `<br>$\\\\bullet~~P_{\\\\bar C}(E)=${texProba(ec / 100, this.sup)}$.`\n          texteCorr += '<br>Ce qui permet de construire cet arbre de probabilités : '\n          texteCorr += mathalea2d({ xmin: -5, ymin: -1, xmax: 18, ymax: 10 }, objets)\n          texteCorr += '<br>$2.$ L\\'événement  : le client ne souhaite ni une \"couleur-soin\", ni un \"effet coup de soleil\" correspond à $\\\\bar{C} \\\\cap \\\\bar{E}$'\n          texteCorr += `<br>On a $P(\\\\bar{C} \\\\cap \\\\bar{E})=P(\\\\bar{C}) \\\\times P_{\\\\bar{C}}(\\\\bar{E})=P(\\\\bar{C}) \\\\times (1-P_{\\\\bar{C}}(E))=${texProba(c / 100, false)} \\\\times ${texProba(1 - ec / 100, false)}\\\\approx ${texProba((c / 100) * (1 - ec / 100), false)}$.`\n          texteCorr += '<br>$3.$  La probabilité qu\\'un client choisisse l\\'\"effet coup de soleil\" sachant qu\\'il a pris une \"couleur soin\" est $P_{C}(E)$.'\n          texteCorr += '<br>On a alors d\\'après l\\'arbre pondéré :'\n          texteCorr += `<br>$P(C) \\\\times P_{C}(E)=${texProba(c / 100, false)} \\\\times P_{C}(E)=${texProba(ce / 100, false)}$.`\n          texteCorr += `<br>On en déduit que $P_{C}(E)=\\\\dfrac{${texProba(ce / 100, false)}}{${texProba(c / 100, false)}}\\\\approx${texProba(ce / c, false)}$.`\n          texteCorr += '<br>$4.$   On cherche $P(E)$ qui est une probabilité totale.'\n          texteCorr += '<br>Comme $C$ et $\\\\bar C$ forment une partition de l\\'univers, on peut appliquer la loi des probabilités totales :'\n          texteCorr += '<br>$P(E)=P(E \\\\cap C)+P(E \\\\cap \\\\bar{C} )$'\n          texteCorr += `<br>$P(E)=${texProba(ce / 100, false)}+${texProba(1 - c / 100, false)}\\\\times ${texProba(ec / 100, false)}$`\n          texteCorr += `<br>$P(E)\\\\approx${texProba(ce / 100 + (1 - c / 100) * ec / 100, false)}$`\n          texteCorr += '<br>$5.$   Pour savoir si les évènements $C$ et $E$ sont-indépendants, on calcule séparément : '\n          texteCorr += '<br>$P(C \\\\cap E)$ et $P(C) \\\\times P(E)$, pour tester s\\'ils sont égaux.'\n          texteCorr += `<br>On a $P(C \\\\cap E)=${texProba(ce / 100, false)}$ `\n          texteCorr += `et $P(C) \\\\times P(E)=\\\\approx${texProba(c / 100 * (ce / 100 + (1 - c / 100) * ec / 100), false)}$`\n          texteCorr += '<br>On en déduit que les évènements $C$ et $E$ ne sont pas indépendants.'\n          break\n      }\n      // Si la question n'a jamais été posée, on l'enregistre\n      if (this.questionJamaisPosee(i, texte)) { // <- laisser le i et ajouter toutes les variables qui rendent les exercices différents (par exemple a, b, c et d)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  this.besoinFormulaire2Numerique = ['Choix d\\'exercices : ', 3, '1 : Sujet 1 issu E3C\\n2 : Sujet 2 issu E3C\\n3 : Mélange']\n}\n\n// permet de repérer les points A et C sur la droite (AC)\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","dateDePublication","dateDeModifImportante","ProbabilitésConditionnelles","texProba","proba","rationnel","fraction","arrondi","toLatex","replace","number","toString","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","besoinFormulaireCaseACocher","sup","nouvelleVersion","objets","listeTypeDeQuestions","listeQuestions","listeCorrections","autoCorrection","sup2","contraindreValeur","combinaisonListes","a","c","ec","ce","v","av","A","B","A1","A2","A3","A4","O","k1","k2","texte","texteCorr","i","cpt","randint","point","push","segment","latexParCoordonnees","mathalea2d","xmin","ymin","xmax","ymax","texFraction","calcul","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}