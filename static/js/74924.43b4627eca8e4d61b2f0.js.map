{"version":3,"file":"js/74924.43b4627eca8e4d61b2f0.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/3e/can3F08.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { fraction } from '../../../modules/fractions'\nimport { randint, texFraction, miseEnEvidence, abs, ecritureAlgebrique, texFractionReduite, egal, calcul, texteCentre } from '../../../modules/outils.js'\nimport { mathalea2d, repere2, texteParPosition, segment, droite } from '../../../modules/2d.js'\nexport const titre = 'Lire graphiquement une fonction affine*'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '25/10/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora (2F10-02)\n * Référence\n*/\nexport default function LectureGraphiqueFonctionAffine2 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.typeExercice = 'simple' // Cette ligne est très importante pour faire faire un exercice simple !\n  this.nbQuestions = 1\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  this.formatChampTexte = 'largeur15 inline'\n  this.formatInteractif = 'calcul'\n  this.nouvelleVersion = function () {\n    const o = texteParPosition('O', -0.3, -0.3, 'milieu', 'black', 1)\n    let s1, s2, t\n    const a = randint(-5, 5, [0, 4]) // numérateut coefficient directeur non nul\n    const b = randint(-2, 2) // ordonnée à l'origine\n    const d = randint(2, 5, [-a, a, 2 * a, -2 * a]) // dénominateur coefficient directeur non multiple du numérateur pour éviter nombre entier\n    const r = repere2()// On définit le repère\n    const c = droite(a / d, -1, b)\n    const maFraction = fraction(a, d)\n\n    c.color = 'red'\n    c.epaisseur = 2\n    this.question = '$f$ est une fonction affine définie par $f(x)=...$<br>'\n    this.question += `${mathalea2d({\n        xmin: -7,\n        ymin: -7,\n        xmax: 7,\n        ymax: 7,\npixelsParCm: 15,\nscale: 0.6,\nstyle: 'margin: auto'\n        }, r, c, o)}`// On trace le graphique\n\n    this.reponse = [`${texFractionReduite(a, d)}x${ecritureAlgebrique(b)}`]\n    if (egal(a * 1000 / d, Math.round(a * 1000 / d))) {\n      this.reponse.push(`${calcul(a / d)}x${ecritureAlgebrique(b)}`)\n    }\n    this.correction = `<br> $f$ est de la forme \n    $f(x)=ax+b$ avec $a$ le coefficient directeur de la droite (inclinaison de la droite par rapport à l'horizontale) \n    et $b$ l'ordonnée à l'origine (ordonnée du point d'intersection entre la droite et l'axe des ordonnées).<br>\n    L'ordonnée à l'origine  est $b=${b}$ et :`\n    this.correction += texteCentre(`$a=\\\\dfrac{\\\\text{Dénivelé vertical}}{\\\\text{Déplacement horizontal}}=\n    ${texFraction(miseEnEvidence(a, 'red'), miseEnEvidence(d, 'green'))}$`)\n    this.correction += `On en déduit que la fonction $f$ est définie par : $f(x)=${maFraction.texFractionSimplifiee}x${ecritureAlgebrique(b)}$.`\n    if (a > 0) {\n      s1 = segment(0, b - a, -d, b - a, 'green')\n      s2 = segment(0, b - a, 0, b, 'red')\n    }\n    if (a < 0) {\n      s1 = segment(d, b, 0, b, 'green')\n      s2 = segment(d, b, d, b - abs(a), 'red')\n    }\n    s2.epaisseur = 2\n    s1.epaisseur = 2\n    s2.styleExtremites = '->'\n    s1.styleExtremites = '<-'\n    if (a !== 0) {\n      this.correction += `${mathalea2d({\n        xmin: -7,\n        ymin: -7,\n        xmax: 7,\n        ymax: 7,\n        pixelsParCm: 15,\n        scale: 0.6,\n        style: 'margin: auto'\n        }, r, s1, s2, t, c, o)}`\n    }// On trace le graphique\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","dateDePublication","LectureGraphiqueFonctionAffine2","typeExercice","formatChampTexte","formatInteractif","o","texteParPosition","s1","s2","a","randint","b","d","r","repere2","c","droite","maFraction","fraction","color","epaisseur","question","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","style","reponse","texFractionReduite","ecritureAlgebrique","egal","Math","round","calcul","correction","texteCentre","texFraction","miseEnEvidence","texFractionSimplifiee","segment","abs","styleExtremites","t"],"sourceRoot":""}