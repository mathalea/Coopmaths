{"version":3,"sources":["webpack://mathalea/./src/js/exercices/CM/CM000.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","interactifReady","amcReady","amcType","TablesAdditionsSoustractions","Exercice","this","sup","sup2","consigne","spacing","tailleDiaporama","interactif","nouvelleVersion","parseInt","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","nbQuestions","a","b","texte","texteCorr","i","randint","ajouteChampTexte","setReponse","texteApres","miseEnEvidence","context","replace","autoCorrection","reponse","param","digits","Math","ceil","decimals","signe","exposant_nb_chiffres","exposant_signe","approx","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","propositions","length","statut","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","id","feedback","type","querySelectorAll","uicheck","classList","add","propositionsQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","inline","numeric","valeur","exerciceInteractif","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"sPAMO,MAAMA,EAAQ,gCACRC,GAAkB,EAClBC,GAAW,EACXC,EAAU,EAUR,SAASC,IACtBC,eAAcC,MACdA,KAAKC,IAAM,GACXD,KAAKE,KAAO,EACZF,KAAKN,MAAQA,EACbM,KAAKG,SAAW,WAChBH,KAAKI,QAAU,EACfJ,KAAKK,gBAAkB,IACvBL,KAAKM,YAAa,EAClBN,KAAKL,gBAAkBA,EACvBK,KAAKH,QAAUA,EACfG,KAAKJ,SAAWA,EAEhBI,KAAKO,gBAAkB,WACrBP,KAAKC,IAAMO,SAASR,KAAKC,KACzBD,KAAKE,KAAOM,SAASR,KAAKE,MAC1BF,KAAKS,eAAiB,GACtBT,KAAKU,iBAAmB,GACxB,IAAIC,EAAuB,GACT,IAAdX,KAAKE,OACPS,GAAuBC,SACrB,CAAC,YACDZ,KAAKa,cAGS,IAAdb,KAAKE,OACPS,GAAuBC,SACrB,CAAC,mBACDZ,KAAKa,cAGS,IAAdb,KAAKE,OACPS,GAAuBC,SACrB,CAAC,gBACDZ,KAAKa,cAGS,IAAdb,KAAKE,OACPS,GAAuBC,SACrB,CAAC,uBACDZ,KAAKa,cAGS,IAAdb,KAAKE,OACPS,GAAuBC,SACrB,CAAC,WAAY,gBACbZ,KAAKa,cAGS,IAAdb,KAAKE,OACPS,GAAuBC,SACrB,CAAC,WAAY,kBAAmB,eAAgB,uBAChDZ,KAAKa,cAGT,IAAK,IAAWC,EAAGC,EAAGC,EAAOC,EAApBC,EAAI,EAA2BA,EAAIlB,KAAKa,YAAaK,IAAK,CAIjE,OAHAJ,GAAIK,SAAQ,EAAGnB,KAAKC,KACpBc,GAAII,SAAQ,EAAGnB,KAAKC,KAEZU,EAAqBO,IAC3B,IAAK,WACHF,EAAS,IAAGF,OAAOC,iBACff,KAAKM,aACPU,GAAQI,QAAiBpB,KAAMkB,EAAG,CAChCF,MAAQ,IAAGF,OAAOC,WAGtBE,EAAa,IAAGH,OAAOC,OAAOD,EAAIC,MAClCM,QAAWrB,KAAMkB,EAAGJ,EAAIC,GACxB,MACF,IAAK,kBACHC,EAAS,IAAGF,wBAAwBA,EAAIC,KACpCf,KAAKM,aACPU,GAAQI,QAAiBpB,KAAMkB,EAAG,CAChCF,MAAQ,IAAGF,QACXQ,WAAa,MAAKR,EAAIC,QAG1BE,EAAa,IAAGH,QAAOS,QAAeR,QAAQD,EAAIC,MAClDM,QAAWrB,KAAMkB,EAAGH,GACpB,MACF,IAAK,eACCD,IAAMC,IACRD,GAAIK,SAAQ,EAAGnB,KAAKC,IAAKc,IAEvBD,EAAIC,IACNA,EAAI,CAACD,EAAIA,EAAIC,GAAI,IAEnBC,EAAS,IAAGF,OAAOC,iBACff,KAAKM,aACPU,GAAQI,QAAiBpB,KAAMkB,EAAG,CAChCF,MAAQ,IAAGF,OAAOC,WAGtBE,EAAa,IAAGH,OAAOC,OAAOD,EAAIC,MAClCM,QAAWrB,KAAMkB,EAAGJ,EAAIC,GACxB,MACF,IAAK,sBACCD,IAAMC,IACRD,GAAIK,SAAQ,EAAGnB,KAAKC,IAAKc,IAEvBD,EAAIC,IACNA,EAAI,CAACD,EAAIA,EAAIC,GAAI,IAEnBC,EAAS,IAAGF,wBAAwBA,EAAIC,KACpCf,KAAKM,aACPU,GAAQI,QAAiBpB,KAAMkB,EAAG,CAChCF,MAAQ,IAAGF,QACXQ,WAAa,MAAKR,EAAIC,QAG1BE,EAAa,IAAGH,QAAOS,QAAeR,QAAQD,EAAIC,MAClDM,QAAWrB,KAAMkB,EAAGH,GAIpBS,mBACFR,EAAQA,EAAMS,QAAQ,cAAe,KAEvCzB,KAAK0B,eAAeR,GAAGS,QAAQC,MAAQ,CAAEC,OAAQC,KAAKC,KAAK,EAAI/B,KAAKC,IAAM,KAAM+B,SAAU,EAAGC,OAAO,EAAOC,qBAAsB,EAAGC,gBAAgB,EAAOC,OAAQ,GACnKpC,KAAKS,eAAe4B,KAAKrB,GACzBhB,KAAKU,iBAAiB2B,KAAKpB,IAE7BqB,SAAwBtC,OAE1BA,KAAKuC,0BAA4B,CAAC,kBAAmB,MACrDvC,KAAKwC,2BAA6B,CAChC,qBACA,EACA,0K,6BC9IW,SAASzC,IAEtBC,KAAKN,MAAQ,GACbM,KAAKG,SAAW,GAChBH,KAAKyC,mBAAqB,GAC1BzC,KAAKS,eAAiB,GACtBT,KAAKU,iBAAmB,GACxBV,KAAK0C,aAAe,GACpB1C,KAAK2C,QAAU,GACf3C,KAAK4C,kBAAoB,GACzB5C,KAAKa,YAAc,GACnBb,KAAK6C,OAAS,EACd7C,KAAK8C,WAAa,EAClB9C,KAAKI,QAAU,EACfJ,KAAK+C,YAAc,EACnB/C,KAAKgD,QAAS,EAEdhD,KAAKuC,2BAA4B,EACjCvC,KAAKiD,uBAAwB,EAC7BjD,KAAKkD,6BAA8B,EACnClD,KAAKmD,oBAAqB,EAC1BnD,KAAKoD,uBAAwB,EAC7BpD,KAAKqD,kBAAmB,EACxBrD,KAAKsD,sBAAuB,EAC5BtD,KAAKuD,mBAAoB,EACzBvD,KAAKwD,uBAAwB,EAC7BxD,KAAKyD,+BAAgC,EACrCzD,KAAK0D,qBAAsB,EAC3B1D,KAAK2D,MAAQ,GACb3D,KAAK4D,YAAa,EAClB5D,KAAKK,gBAAkB,GAMvBL,KAAK6D,mBAAoB,EACzB7D,KAAKM,YAAa,EAClBN,KAAK8D,uBAAwB,EAC7B9D,KAAK+D,KAAM,EACX/D,KAAKgE,eAAgB,EACrBhE,KAAKiE,SAAU,EACfjE,KAAK0B,eAAiB,GACtB1B,KAAKkE,sBAAwB,GAC7BlE,KAAKmE,cAAe,EACpBnE,KAAKO,gBAAkB,SAAU6D,KACjCpE,KAAKqE,cAAgB,G,6ICzChB,SAASC,EAAaC,GAC3BC,SAASC,iBAAiB,qBAAqB,KAE7CC,EAAE,gBAAgBC,WAElB,MAEMC,EAASJ,SAASK,cAAe,YAAWN,EAASH,kBACvDQ,GACFA,EAAOH,iBAAiB,SAASK,IAC/B,IAAK,IAAI5D,EAAI,EAAGA,EAAIqD,EAAS1D,YAAaK,IAAK,CAE7C,IAGI6D,EAHAC,EAAmB,EACnBC,EAAsB,EACtBC,EAA4B,EAGhC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAAS7C,eAAeR,GAAGkE,aAAaC,OAAQF,IAC9DZ,EAAS7C,eAAeR,GAAGkE,aAAaD,GAAGG,QAAQJ,IAEzD,MAAMK,EAAmBf,SAASK,cAAe,mBAAkBN,EAASH,kBAAkBlD,KAC9FqD,EAAS7C,eAAeR,GAAGkE,aAAaI,SAAQ,CAACC,EAAaC,KAC5D,MAAMC,EAAQnB,SAASK,cAAe,WAAUN,EAASH,kBAAkBlD,KAAKwE,KAC1EE,EAAQpB,SAASK,cAAe,WAAUN,EAASH,kBAAkBlD,KAAKwE,KAC5ED,EAAYH,QACdK,EAAME,MAAMC,gBAnBN,2BAoBFF,EAAMG,UACRf,IACAD,EAAiBW,KAEQ,IAAlBE,EAAMG,UACfJ,EAAME,MAAMC,gBA1BL,yBA2BPb,IACAF,EAAiBW,MAGrB,IAAIM,EAAe,WACS,IAAxBf,GAA6BD,IAAqBE,EACpDK,EAAiBU,UAAY,MAE7BV,EAAiBU,UAAY,KAC7BD,EAAe,SAEjBT,EAAiBM,MAAMK,SAAW,QAC9BnB,GAAkB,IACpBoB,OAAgB,CACdC,GAAK,aAAY7B,EAASH,kBAAkBlD,IAC5CF,MAAOuD,EAAS7C,eAAeR,GAAGkE,aAAaL,GAAgBsB,SAC/DC,KAAMN,IAIKxB,SAAS+B,iBAAkB,kBAAiBhC,EAASH,kBAC7DoB,SAAQ,SAAUgB,GACzBA,EAAQC,UAAUC,IAAI,gBAExB9B,EAAO6B,UAAUC,IAAI,kBAatB,SAASC,EAAiBpC,EAAUrD,GACzCqD,EAAS7E,MAAQ,aACjB,IAAIsB,EAAQ,GACRC,EAAY,GACZ2F,EAAS,GAeb,GAbEA,EADEpF,YACO,SAEA,eAGgCqF,IAAvCtC,EAAS7C,eAAeR,GAAG4F,QACxBvC,EAAS7C,eAAeR,GAAG4F,QAAQC,UACtCxC,EAAS7C,eAAeR,GAAGkE,cAAe4B,SAAczC,EAAS7C,eAAeR,GAAGkE,aAAcb,EAAS7C,eAAeR,GAAG4F,QAAQG,aAGtI1C,EAAS7C,eAAeR,GAAGkE,cAAe4B,SAAczC,EAAS7C,eAAeR,GAAGkE,cAqChF,SAA0BA,GAC/B,IAAI8B,GAAkB,EACtB,IAAK,IAAIhG,EAAI,EAAGA,EAAIkE,EAAaC,OAAS,EAAGnE,IAC3C,IAAK,IAAIiG,EAAIjG,EAAI,EAAGiG,EAAI/B,EAAaC,QAC/BD,EAAalE,GAAGF,QAAUoE,EAAa+B,GAAGnG,OAE5CkG,GAAkB,EACd9B,EAAalE,GAAGoE,OAClBF,EAAagC,OAAOD,EAAG,GACd/B,EAAa+B,GAAG7B,QAEzBF,EAAagC,OAAOD,EAAG,GACvB/B,EAAalE,GAAGoE,QAAS,GAEzBF,EAAagC,OAAOD,EAAG,IAGzBA,IApDNE,CAAgB9C,EAAS7C,eAAeR,GAAGkE,eACtC5D,WAAe,CACdA,YACFR,GAAU,yBAAwBuD,EAASH,kBAAkBlD,MAE7DF,GAAS,OAEX,IAAK,IAAIsG,EAAM,EAAGA,EAAM/C,EAAS7C,eAAeR,GAAGkE,aAAaC,OAAQiC,IAClE9F,YACFR,GAAU,6BAA4BuD,EAASH,sGACqBG,EAASH,kBAAkBlD,KAAKoG,sCAC5E/C,EAASH,kBAAkBlD,KAAKoG,MAAQ/C,EAAS7C,eAAeR,GAAGkE,aAAakC,GAAKtG,MAAQ4F,8BAGrH5F,GAAU,iBAAgBuD,EAAS7C,eAAeR,GAAGkE,aAAakC,GAAKtG,QAAU4F,EAE/ErC,EAAS7C,eAAeR,GAAGkE,aAAakC,GAAKhC,OAC/CrE,GAAc,sBAAqBsD,EAAS7C,eAAeR,GAAGkE,aAAakC,GAAKtG,QAAU4F,EAE1F3F,GAAc,iBAAgBsD,EAAS7C,eAAeR,GAAGkE,aAAakC,GAAKtG,QAAU4F,EAGrFpF,cACFR,GAAU,4BAA2BuD,EAASH,kBAAkBlD,aAChEF,GAAU,wBAAuBuD,EAASH,kBAAkBlD,qBAGhE,MAAO,CAAEF,MAAOA,EAAOC,UAAWA,GA+D7B,SAASG,EAAkBmD,EAAUrD,GAAG,MAAEF,EAAQ,GAAV,WAAcM,EAAa,GAA3B,OAA+BiG,GAAS,EAAxC,QAA8CC,GAAU,GAAS,IAC9G,OAAIhG,YACM,uBAAsB+F,EAAS,SAAW,uDAEzCvG,uCACcwG,EAAU,6DAA+D,uBAAuBjD,EAASH,kBAAkBlD,qBACxII,4CACmBiD,EAASH,kBAAkBlD,qCAIjD,GAUJ,SAASG,EAAYkD,EAAUrD,EAAGJ,GAAG,OAACe,EAAS,EAAV,SAAaG,EAAW,EAAxB,MAA2BC,GAAQ,EAAnC,qBAA0CC,EAAuB,EAAjE,eAAoEC,GAAiB,EAArF,OAA4FC,EAAS,GAAK,SACjHyE,IAA/BtC,EAAS7C,eAAeR,KAC1BqD,EAAS7C,eAAeR,GAAK,SAEY2F,IAAvCtC,EAAS7C,eAAeR,GAAGS,UAC7B4C,EAAS7C,eAAeR,GAAGS,QAAU,IAEvC4C,EAAS7C,eAAeR,GAAGS,QAAQ8F,OAAS3G,EAC5CyD,EAAS7C,eAAeR,GAAGS,QAAQ8F,OAAS,CAAE5F,SAAQG,WAAUC,QAAOC,uBAAsBC,iBAAgBC,UAGxG,SAASsF,EAAoBnD,GACT,IAArBA,EAAS1E,SA1DR,SAA4B0E,GACjCC,SAASC,iBAAiB,qBAAqB,KAC7C,MAAMG,EAASJ,SAASK,cAAe,YAAWN,EAASH,kBACvDQ,GACFA,EAAOH,iBAAiB,SAASK,IAGGP,EAAS1D,YAC3C,IAAK,MAAMK,KAAKqD,EAAS7C,eAAgB,CACvC,MAAM6D,EAAmBf,SAASK,cAAe,mBAAkBN,EAASH,kBAAkBlD,KAE1FsD,SAASmD,eAAgB,eAAcpD,EAASH,kBAAkBlD,KAAK0G,MAAMC,WAAW,IAAK,MAAQtD,EAAS7C,eAAeR,GAAGS,QAAQ8F,OAAOK,WAAWD,WAAW,IAAK,IAC5KtC,EAAiBU,UAAY,KAG7BV,EAAiBU,UAAY,KAG/BV,EAAiBM,MAAMK,SAAW,eAwCd6B,CAAkBxD,GACrB,IAArBA,EAAS1E,SAAeyE,EAAYC,GACf,IAArBA,EAAS1E,SAAeyE,EAAYC,K,4BC7N1C,SAASyD,EAAYC,GAEnB,MAAsB,WAAlBA,EAAOC,OACD,8KAE+BD,EAAOvI,4BAE1CuI,EAAOE,oBAGS,YAAlBF,EAAOC,OACD,2KAE0BD,EAAOvI,4BAErCuI,EAAOE,oBAGS,SAAlBF,EAAOC,OACD,uKAE8BD,EAAOvI,4BAEzCuI,EAAOE,yBALb,EAeK,SAASC,EAAoBH,GAClC,IAAII,EAAY,GACI,wBAAhBJ,EAAOK,KACTD,EAAYL,EAAW,CACrBtI,MAAO,yCACPyI,QAAU,iBAAgBF,EAAO1D,iHACjC2D,OAAQ,WAEe,aAAhBD,EAAOK,KAChBD,EAAYL,EAAW,CACrBtI,MAAO,sCACPyI,QAAU,sPAEVD,OAAQ,YAEe,gBAAhBD,EAAOK,OAChBD,EAAYL,EAAW,CACrBtI,MAAO,yCACPyI,QAAU,sPAEVD,OAAQ,aAGZ1D,SAASmD,eAAe,mBAAmB1B,UAAYoC,EACvD7D,SAASmD,eAAe,uBAAuBlD,iBAAiB,SAAS,WACvED,SAASmD,eAAe,mBAAmBY,YASxC,SAASpC,GAAiB,GAAEC,EAAF,MAAMpF,EAAQ,GAAd,KAAkBsF,EAAO,SAAY,IAEpE,GAAIF,GAAMpF,EAAO,CACf,MAAMwH,EAAQ,2BAA0BpC,gBAFtBE,GAAQ,6DAEgGF,uCACpHpF,cAENwD,SAASmD,eAAevB,GAAIH,UAAYuC,EACxChE,SAASmD,eAAgB,iBAAgBvB,KAAM3B,iBAAiB,SAAS,WACvED,SAASmD,eAAgB,kBAAiBvB,KAAMmC,a","file":"js/5309.4d57df36d16b0bd2cb5f.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, miseEnEvidence } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n// on importait amcReady de 5L10 cf commit cf25dab mais mieux vaut le déclarer explicitement\n\nexport const titre = 'Additions et de soustractions'\nexport const interactifReady = true\nexport const amcReady = true\nexport const amcType = 4\n\n\n/**\n * Additions et/ou soustractions classique et/ou à trou.\n *\n * Par défaut c'est un mélange d'additions, soustractions avec et sans trou avec des nombres jusqu'à 20.\n * @Auteur Rémi Angot\n * Référence CM000\n */\nexport default function TablesAdditionsSoustractions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 20\n  this.sup2 = 6 // additions|additions à trous|soustractions|soustractions à trous|mélange sans trou|mélange avec trou\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.tailleDiaporama = 100\n  this.interactif = true\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.sup2 = parseInt(this.sup2)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions = []\n    if (this.sup2 === 1) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['addition'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup2 === 2) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['addition_a_trou'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup2 === 3) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['soustraction'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup2 === 4) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['soustraction_a_trou'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup2 === 5) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['addition', 'soustraction'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup2 === 6) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['addition', 'addition_a_trou', 'soustraction', 'soustraction_a_trou'],\n        this.nbQuestions\n      )\n    }\n    for (let i = 0, a, b, texte, texteCorr; i < this.nbQuestions; i++) {\n      a = randint(2, this.sup)\n      b = randint(2, this.sup)\n\n      switch (listeTypeDeQuestions[i]) {\n        case 'addition':\n          texte = `$${a} + ${b} = \\\\dotfill$`\n          if (this.interactif) {\n            texte = ajouteChampTexte(this, i, {\n              texte: `$${a} + ${b} = $`\n            })\n          }\n          texteCorr = `$${a} + ${b} = ${a + b}$`\n          setReponse(this, i, a + b)\n          break\n        case 'addition_a_trou':\n          texte = `$${a} + \\\\ldots\\\\ldots = ${a + b}$`\n          if (this.interactif) {\n            texte = ajouteChampTexte(this, i, {\n              texte: `$${a}~+ $`,\n              texteApres: `$= ${a + b}$`\n            })\n          }\n          texteCorr = `$${a} + ${miseEnEvidence(b)} = ${a + b}$`\n          setReponse(this, i, b)\n          break\n        case 'soustraction':\n          if (a === b) {\n            a = randint(2, this.sup, b)\n          }\n          if (a < b) {\n            b = [a, (a = b)][0] // échange les variables a et b\n          }\n          texte = `$${a} - ${b} = \\\\dotfill$`\n          if (this.interactif) {\n            texte = ajouteChampTexte(this, i, {\n              texte: `$${a} - ${b} = $`\n            })\n          }\n          texteCorr = `$${a} - ${b} = ${a - b}$`\n          setReponse(this, i, a - b)\n          break\n        case 'soustraction_a_trou':\n          if (a === b) {\n            a = randint(2, this.sup, b)\n          }\n          if (a < b) {\n            b = [a, (a = b)][0] // échange les variables a et b\n          }\n          texte = `$${a} - \\\\ldots\\\\ldots = ${a - b}$`\n          if (this.interactif) {\n            texte = ajouteChampTexte(this, i, {\n              texte: `$${a}~- $`,\n              texteApres: `$= ${a - b}$`\n            })\n          }\n          texteCorr = `$${a} - ${miseEnEvidence(b)} = ${a - b}$`\n          setReponse(this, i, b)\n          break\n      }\n\n      if (context.isDiaporama) {\n        texte = texte.replace('= \\\\dotfill', '')\n      }\n      this.autoCorrection[i].reponse.param = { digits: Math.ceil(2 * this.sup / 100), decimals: 0, signe: false, exposant_nb_chiffres: 0, exposant_signe: false, approx: 0 }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 9999] // Texte, tooltip\n  this.besoinFormulaire2Numerique = [\n    'Style de questions',\n    6,\n    '1 : Additions\\n2: Additions à trous\\n3: Soustractions\\n4 : Soustractions à trous\\n5 : Additions et soustractions \\n6 : Additions et soustractions avec ou sans trous'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposant_nb_chiffres = 0, exposant_signe = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.valeur = { digits, decimals, signe, exposant_nb_chiffres, exposant_signe, approx }\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}