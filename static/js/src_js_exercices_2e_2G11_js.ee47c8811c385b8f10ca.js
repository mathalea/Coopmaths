/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_2e_2G11_js"],{

/***/ "./src/js/exercices/2e/2G11.js":
/*!*************************************!*\
  !*** ./src/js/exercices/2e/2G11.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Milieu)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\n\nconst titre = 'Déterminer les coordonnées milieu d’un segment dans un repère'\n\n/**\n * 2G11\n * @Auteur Stéphane Guyon\n */\nfunction Milieu() {\n    _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n\n    this.nb_questions = 2;\n    this.nb_cols = 2;\n    this.nb_cols_corr = 2;\n    this.sup = 1; // \n\n    this.nouvelle_version = function () {\n        this.liste_questions = []; // Liste de questions\n        this.liste_corrections = []; // Liste de questions corrigées\n        let type_de_questions_disponibles = [1, 2, 3, 4],type_de_questions\n        if (this.sup == 1) {\n            type_de_questions_disponibles = [1];\n        }\n        if (this.sup == 2) {\n            type_de_questions_disponibles = [2];\n        }\n        if (this.sup == 3) {\n            type_de_questions_disponibles = [3, 4];\n        }\n        let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(type_de_questions_disponibles, this.nb_questions);\n        for (let i = 0, a, ux, uy, g,s, xA, yA, xB, yB, xC, yC, xD, yD, XAB, YAB, xI0, xI1, yI0, yI1, xJ0, xJ1, yJ0, yJ1, A, B, T, L, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n            type_de_questions = liste_type_de_questions[i];\n            switch (type_de_questions) {\n                // Cas par cas, on définit le type de nombres que l'on souhaite\n                // Combien de chiffres ? Quelles valeurs ?\n                case 1:\n\n                    xA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    yA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    xB = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    yB = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    if (xB == xA && yA == yB) { xB = xB + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]); }\n\n                    XAB = (xB - xA) * (xB - xA);\n                    YAB = (yB - yA) * (yB - yA);\n                    xI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xA + xB, 2)[0];\n                    xI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xA + xB, 2)[1];\n                    yI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yA + yB, 2)[0];\n                    yI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yA + yB, 2)[1];\n\n                    g = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.grille)(-9, -9, 9, 9);\n                    A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xA, yA, 'A');\n                    B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xB, yB, 'B');\n                    a = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.axes)(-9, -9, 9, 9);\n                    s = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(A, B, 'blue');\n                    T = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B); // Repère les points avec une croix\n                    L = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B);\n                    texte = `Dans un repère orthonormé $(O,I,J)$, on donne les points suivants :`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ et $B\\\\left(${xB};${yB}\\\\right)$`;\n                    texte += `<br>Déterminer les coordonnées du point $I$ milieu du segment $[AB]$ `;\n\n                    texte_corr = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({\n                        xmin: -9,\n                        ymin: -9,\n                        xmax: 9,\n                        ymax: 9\n                    }, a, g, T, s, L);\n\n\n                    texte_corr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère orthonormé,`;\n                    texte_corr += `<br> alors les coordonnées du point $I$ milieu de $[AB]$ sont `;\n                    texte_corr += `$I\\\\left(\\\\dfrac{x_A+x_B}{2};\\\\dfrac{y_A+y_B}{2}\\\\right)$ <br>`;\n                    texte_corr += `On applique la relation à l'énoncé : `;\n                    texte_corr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(xB)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(yB)}}{2}\\\\end{cases}$`;\n                    texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(xA + xB)}}{2}\\\\\\\\y_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(yA + yB)}}{2}\\\\end{cases}$`;\n                    if (xI1 != 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$`; }\n                    if (xI1 == 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$`; }\n                    if (xI1 != 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$`; }\n                    if (xI1 == 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$`; }\n\n\n                    ;\n                    break;\n                case 2:\n\n\n                    xA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    yA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    xI = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    yI = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    if (xI == xA && yI == yA) { xI = xI + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]); }\n\n                    XAB = (xB - xA) * (xB - xA);\n                    YAB = (yB - yA) * (yB - yA);\n                    xI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xA + xB, 2)[0];\n                    xI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xA + xB, 2)[1];\n                    yI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yA + yB, 2)[0];\n                    yI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yA + yB, 2)[1];\n                    g = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.grille)(-9, -9, 9, 9);\n                    A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xA, yA, 'A', 'red');\n                    B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xB, yB, 'B', 'red');\n                    a = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.axes)(-9, -9, 9, 9);\n                    s = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(A, B, 'blue');\n                    T = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B); // Repère les points avec une croix\n                    L = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B);\n                    texte = `Dans un repère orthonormé $(O,I,J)$, on donne les points suivants :`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ et $I\\\\left(${xI};${yI}\\\\right)$`;\n                    texte += `<br>Déterminer les coordonnées du point $B$ tel que I soit le milieu du segment $[AB]$ `;\n\n\n                    texte_corr = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({\n                        xmin: -9,\n                        ymin: -9,\n                        xmax: 9,\n                        ymax: 9\n                    }, T, L, g, a, s);\n\n\n                    texte_corr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère orthonormé,`;\n                    texte_corr += ` <br>alors les coordonnées du point $I$ milieu de $[AB]$ sont `;\n                    texte_corr += `$I\\\\left(\\\\dfrac{x_A+x_B}{2};\\\\dfrac{y_A+y_B}{2}\\\\right)$ <br>`;\n                    texte_corr += `On applique la relation à l'énoncé : `;\n                    texte_corr += `$\\\\begin{cases}${xI}=\\\\dfrac{${xA}+x_B}{2} \\\\\\\\ ${yI}=\\\\dfrac{${yA}+y_B}{2}\\\\end{cases}$`;\n                    texte_corr += `$\\\\iff \\\\begin{cases}x_B=2\\\\times ${xI} -${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(xA)} \\\\\\\\ y_B=2\\\\times ${yI}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(yA)}\\\\end{cases}$`;\n                    texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_B={${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(2 * xI - xA)}}\\\\\\\\y_B=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(2 * yI - yA)}\\\\end{cases}$`;\n                    texte_corr += `<br>Au final : $B\\\\left( ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(2 * xI - xA)};${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(2 * yI - yA)}\\\\right)$`;\n                    break;\n                case 3:\n\n                    xA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    yA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    ux = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    uy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    xB = xA + ux;\n                    yB = yA + uy;\n                    xC = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    yC = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    if (xC == xA && yA == yC) { xC = xC + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]); }\n                    xD = xC + ux;\n                    yD = yC + uy;\n                    xI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xA + xD, 2)[0];\n                    xI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xA + xD, 2)[1];\n                    yI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yA + yD, 2)[0];\n                    yI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yA + yD, 2)[1];\n                    xJ0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xB + xC, 2)[0];\n                    xJ1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xB + xC, 2)[1];\n                    yJ0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yB + yC, 2)[0];\n                    yJ1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yB + yC, 2)[1];\n                    g = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.grille)(-9, -9, 9, 9);\n                    A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xA, yA, 'A', 'red');\n                    B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xB, yB, 'B', 'red');\n                    a = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.axes)(xmin = -9, ymin = -9, xmax = 9, ymax = 9, thick = .2, step = 1);\n                    s = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(A, B, 'blue');\n                    T = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B); // Repère les points avec une croix\n                    L = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B);\n\n\n                    texte = `Dans un repère orthonormé (O,I,J), on donne les 4 points suivants :<br>`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`;\n                    texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`;\n                    texte += `<br>Déterminer si le quadrilatère $ABDC$ est un parallélogramme.`;\n\n                    texte_corr = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({\n                        xmin: -9,\n                        ymin: -9,\n                        xmax: 9,\n                        ymax: 9\n                    }, T, L, g, a, s);\n\n\n                    texte_corr += `<br>On sait que ABDC est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.$`;\n                    texte_corr += `<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère :`;\n                    texte_corr += `On sait d'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d'un repère ,`;\n                    texte_corr += `<br> alors les coordonnées du point $I$ milieu de $[AD]$ sont `;\n                    texte_corr += `$I\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>`;\n                    texte_corr += `On applique la relation à l'énoncé : `;\n                    texte_corr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(xD)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(yD)}}{2}\\\\end{cases}$`;\n                    texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(xA + xD)}}{2}\\\\\\\\y_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(yA + yD)}}{2}\\\\end{cases}$`;\n                    if (xI1 != 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$`; }\n                    if (xI1 == 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$`; }\n                    if (xI1 != 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$`; }\n                    if (xI1 == 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$`; }\n                    texte_corr += `<br> Les coordonnées du point $J$ milieu de $[BC]$ sont `;\n                    texte_corr += `$J\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>`;\n                    texte_corr += `On applique la relation à l'énoncé : `;\n                    texte_corr += `$\\\\begin{cases}x_J=\\\\dfrac{${xB}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(xC)}}{2} \\\\\\\\ y_J=\\\\dfrac{${yB}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(yC)}}{2}\\\\end{cases}$`;\n                    texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_J=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(xB + xC)}}{2}\\\\\\\\y_J=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(yB + yC)}}{2}\\\\end{cases}$`;\n                    if (xJ1 != 1 && yJ1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$`; }\n                    if (xJ1 == 1 && yJ1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$`; }\n                    if (xJ1 != 1 && yJ1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$`; }\n                    if (xJ1 == 1 && yJ1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};${yJ0}\\\\right)$`; }\n                    texte_corr += `<br>On observe que $I$ et $J$ ont les mêmes coordonnées, donc les deux diagonales du quadrilatère se coupent en leur milieu.`;\n                    texte_corr += `<br>$ABDC$ est donc un parallélogramme.`;\n                    break;\n                case 4:\n\n\n\n                    xA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    yA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    ux = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    uy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    xB = xA + ux;\n                    yB = yA + uy;\n                    xC = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    yC = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    if (xC == xA && yA == yC) { xC = xC + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]); }\n                    xD = xC + ux + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 2) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    yD = yC + uy + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([-1, 1]);\n                    xI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xA + xD, 2)[0];\n                    xI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xA + xD, 2)[1];\n                    yI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yA + yD, 2)[0];\n                    yI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yA + yD, 2)[1];\n                    xJ0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xB + xC, 2)[0];\n                    xJ1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(xB + xC, 2)[1];\n                    yJ0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yB + yC, 2)[0];\n                    yJ1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.fraction_simplifiee)(yB + yC, 2)[1];\n                    g = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.grille)(-9, -9, 9, 9);\n                    A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xA, yA, 'A', 'red');\n                    B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(xB, yB, 'B', 'red');\n                    a = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.axes)(-9, -9, 9, 9);\n                    s = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(A, B, 'blue');\n                    T = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B); // Repère les points avec une croix\n                    L = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B);\n\n                    texte = `Dans un repère orthonormé (O,I,J), on donne les 4 points suivants :<br>`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`;\n                    texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`;\n                    texte += `<br>Déterminer si le quadrilatère $ABDC$ est un parallélogramme.`;\n\n                    texte_corr = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({\n                        xmin: -9,\n                        ymin: -9,\n                        xmax: 9,\n                        ymax: 9\n                    }, T, L, g, a, s);\n\n\n                    texte_corr += `<br>On sait que ABDC est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.$`;\n                    texte_corr += `<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère :`;\n                    texte_corr += `On sait d'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d'un repère ,`;\n                    texte_corr += `<br> alors les coordonnées du point $I$ milieu de $[AD]$ sont `;\n                    texte_corr += `$I\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>`;\n                    texte_corr += `On applique la relation à l'énoncé : `;\n                    texte_corr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(xD)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(yD)}}{2}\\\\end{cases}$`;\n                    texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(xA + xD)}}{2}\\\\\\\\y_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(yA + yD)}}{2}\\\\end{cases}$`;\n                    if (xI1 != 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$`; }\n                    if (xI1 == 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$`; }\n                    if (xI1 != 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$`; }\n                    if (xI1 == 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$`; }\n                    texte_corr += `<br> Les coordonnées du point $J$ milieu de $[BC]$ sont `;\n                    texte_corr += `$J\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>`;\n                    texte_corr += `On applique la relation à l'énoncé : `;\n                    texte_corr += `$\\\\begin{cases}x_J=\\\\dfrac{${xB}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(xC)}}{2} \\\\\\\\ y_J=\\\\dfrac{${yB}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecriture_parenthese_si_negatif)(yC)}}{2}\\\\end{cases}$`;\n                    texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_J=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(xB + xC)}}{2}\\\\\\\\y_J=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(yB + yC)}}{2}\\\\end{cases}$`;\n                    if (xJ1 != 1 && yJ1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$`; }\n                    if (xJ1 == 1 && yJ1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$`; }\n                    if (xJ1 != 1 && yJ1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$`; }\n                    if (xJ1 == 1 && yJ1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};${yJ0}\\\\right)$`; }\n                    texte_corr += `<br>On observe que $I$ et $J$ n'ont pas les mêmes coordonnées, donc les deux diagonales du quadrilatère ne se coupent pas en leur milieu.`;\n                    texte_corr += `<br>$ABDC$ n'est donc pas un parallélogramme.`;\n                    break;\n            }\n            if (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n                this.liste_questions.push(texte);\n                this.liste_corrections.push(texte_corr);\n                i++;\n            }\n            cpt++;\n        }\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n    };\n    this.besoin_formulaire_numerique = ['Niveau de difficulté', 3, '1 : Application directe de la formule 2 : Application indirecte de la formule 3: Caractériser un parallélogramme.'];\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/2e/2G11.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);