{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G10-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Transformations_du_plan_et_coordonnees","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","sortieHtml","spacingCorr","nouvelleVersion","numeroExercice","A","B","C","droited","droited1","droited2","O","droitedprime","pointO","Aprime","Bprime","Cprime","objets_enonce","objets_correction","listeQuestions","listeCorrections","xA","yA","xB","yB","xC","yC","xO","yO","k1","k2","xO5","xO6","xO7","xO8","xO9","xO10","xO11","xO12","xO13","xO14","yO5","yO6","yO7","yO8","yO9","yO10","yO11","yO12","yO13","yO14","k","xP","yP","bis1","bis2","xx","yy","AfficheO","t","texte","texteCorr","lettre1","lettre2","punto","transformation","parseInt","choix_transformation","combinaisonListes","j","choice","randint","point","droiteParPointEtPente","droiteHorizontaleParPoint","droiteVerticaleParPoint","isVisible","epaisseur","color","opacite","imagePointParTransformation","i","push","tracePoint","labelPoint","segment","codageAngleDroit","milieu","pointSurDroite","codeSegments","latexParCoordonnees","texNombre","afficheMesureAngle","texNombrec","calcul","vecteur","representant","texFractionReduite","repere2","xMin","yMin","xMax","yMax","grilleOpacite","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","mainlevee","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/6439.6d2ba7451653579b9fbe.js","sourcesContent":["import { codageAngleDroit, droiteParPointEtPente, droiteVerticaleParPoint, mathalea2d, point, segment, milieu, pointSurDroite, tracePoint, codeSegments, repere2, labelPoint, droiteHorizontaleParPoint, latexParCoordonnees, afficheMesureAngle, vecteur} from '../../modules/2d.js';\nimport Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenuSansNumero,randint,choice,combinaisonListes,imagePointParTransformation,texFractionReduite,calcul,texNombrec,texNombre} from '../../modules/outils.js'\nexport const titre = 'Trouver les coordonnées de l’image d’un point par une transformation du plan'\n\n/**\n * Trouver les coordonnées d'un punto transformé d'un autre par une des transformations du plan\n * @Auteur Jean-Claude Lhote\n * 3G10-1\n */\nexport default function Transformations_du_plan_et_coordonnees() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.consigne = \"\";\n\tthis.nbQuestions = 1;\n\tthis.nbQuestionsModifiable = false;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\n\tthis.sup = 1; // 1 calcul de l'hypoténuse 2 calcul d'un côté de l'angle droit \n\tsortieHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5;\n    this.nouvelleVersion = function (numeroExercice) {\n        let A,B,C,droited,droited1,droited2,O,droitedprime,pointO\n\t\tlet Aprime,Bprime,Cprime\n        let objets_enonce = []\n        let objets_correction = []\n\t\n\t\tthis.listeQuestions = [];\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tlet xA, yA, xB, yB, xC, yC, k = [], xO, yO, k1, k2;\n\t\tlet xP = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]; // ces nombres sont juste là pour compter combien il y en a... ils seront remplacés plus tard par les coordonnées utiles ou pas.\n\t\tlet yP = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]; // comme pour t, je n'utiliserai pas le premier élément pour coller aux index.\n\t\tlet xO5, xO6, xO7, xO8, xO9, xO10, xO11, xO12, xO13, xO14;\n\t\tlet yO5, yO6, yO7, yO8, yO9, yO10, yO11, yO12, yO13, yO14;\n\t\tlet bis1 = 0, bis2 = 0, xx = 0, yy = 0, AfficheO = 0, AfficheOO = 0, t = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // il y a 14 transformations mais je n'utilise pas t[0] pour coller avec les index.\n\t\tlet texte = ``, texteCorr = ``, lettre1 = [`A`, `B`, `C`], lettre2 = [`O\\'`, `A`, `B`]; // si t[i]=0 alors la transformation concernée n'existe pas, si t[i]=1, on la dessine.\n\t\tlet punto = [[]];\n\t\tlet transformation = parseInt(this.sup) - 1;\n\t\tlet listeTypeDeQuestions = [[1, 2, 3, 4], [1, 2, 3, 4, 7], [1, 2, 3, 4, 7, 8], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]];\n\t\tlet choix_transformation = combinaisonListes(listeTypeDeQuestions[transformation], 3);\n\t\tfor (let j = 0; j < 3; j++)\n\t\t\tif (choix_transformation[j] == 10)\n\t\t\t\tk[j] = choice([2, 2, 2, 2, 4, 4, 4, 4, 5, 10]) * randint(-1, 1, [0]); // rapport d'homothétie < 1 (plus ou moins  0.5, 0.25, 0.2 ou 0,1 ) avec une fréquence divisée par 4 pour 0.2 et 0.1.\n\t\t\telse\n\t\t\t\tk[j] = choice([1, 2, 2, 3, 3, 4, 4, 5, 5, 2.5]) * randint(-1, 1, [0]); // rapport d'homothétie >=1 (plus ou - 1,2,2.5, 3, 4 ou 5 avec des fréquences divisées par 2 pour 1 et 2.5) \n\n\t\txA = randint(-10, 10,0); // Point A\n\t\tyA = randint(-10, 10,-1);\n\t\txB = randint(-10, 10, [xA,0]); // Point B\n\t\tyB = randint(-10, 10,-1);\n\t\txC = randint(-10, 10,0); // Point C\n\t\tyC = randint(-10, 10, [yA, yB,-1]);\n\t\txO = randint(-3, 3, [0,-1]); // Point O' (origine du repère dans lequel les transformations sont simples (centre des rotations et punto d'intersection des axes))\n\t\tyO = randint(-3, 3, [0,-1]);\n       pointO=point(0,0,'O','above right')\n        O=point(xO,yO,\"O'\",'above left') // on crée le point O' \n        droited1=droiteParPointEtPente(O,1) // et les trois axes passant par O'\n        droited=droiteHorizontaleParPoint(O)\n        droited2=droiteParPointEtPente(O,-1)\n        droitedprime=droiteVerticaleParPoint(O)\n\t\tdroited1.isVisible=true\n\t\tdroited2.isVisible=true\n\t\tdroited.isVisible=true\n\t\tdroitedprime.isVisible=true\n\t\tdroited1.epaisseur=2\n\t\tdroited2.epaisseur=2\n\t\tdroited.epaisseur=2\n\t\tdroitedprime.epaisseur=2\n\t\tdroited1.color='green'\n\t\tdroited2.color='green'\n\t\tdroited.color='green'\n\t\tdroitedprime.color='green'\n\t\tdroited1.opacite=0.5\n\t\tdroited2.opacite=0.5\n\t\tdroited.opacite=0.5\n\t\tdroitedprime.opacite=0.5\n\n\t\tpunto[0] = imagePointParTransformation(choix_transformation[0], [xA, yA], [xO, yO], [xO, yO], k[0]);\n\t\twhile (punto[0][0] < -13 || punto[0][0] > 13 || punto[0][1] < -13 || punto[0][1] > 14) { // on teste si A est dans la fenêtre sinon on en choisit un autre\n\t\t\txA = randint(-10, 10); // Point A\n\t\t\tyA = randint(-10, 10,-1);\n\t\t\tpunto[0] = imagePointParTransformation(choix_transformation[0], [xA, yA], [xO, yO], [xO, yO], k[0]);\n\t\t}\n        A=point(xA,yA,'A')\n\t\tAprime=point(punto[0][0],punto[0][1],\"A'\")\n\t\tif (choix_transformation[1] > 4)\n\t\t\tpunto[1] = imagePointParTransformation(choix_transformation[1], [xB, yB], [xA, yA], [xA, yA], k[1]);\n\t\telse\n\t\t\tpunto[1] = imagePointParTransformation(choix_transformation[1], [xB, yB], [xO, yO]); // si c'est une symétrie, l'axe passe par O'\n\t\twhile (punto[1][0] < -13 || punto[1][0] > 13 || punto[1][1] < -13 || punto[1][1] > 14) { // on teste si on est dans les clous, sinon on choisit un autre punto B\n\t\t\txB = randint(-10, 10, [xA]); // Point B\n\t\t\tyB = randint(-10, 10,-1);\n\t\t\tif (choix_transformation[1] > 4)\n\t\t\t\tpunto[1] = imagePointParTransformation(choix_transformation[1], [xB, yB], [xA, yA], [xA, yA], k[1]);\n\t\t\telse\n\t\t\t\tpunto[1] = imagePointParTransformation(choix_transformation[1], [xB, yB], [xO, yO]); // si c'est une symétrie, l'axe passe par O'\n\t\t}\n        B=point(xB,yB,'B')\n\t\tBprime=point(punto[1][0],punto[1][1],\"B'\")\n\n\t\tif (choix_transformation[2] > 4)\n\t\t\tpunto[2] = imagePointParTransformation(choix_transformation[2], [xC, yC], [xB, yB], [xB, yB], k[2]);\n\t\telse\n\t\t\tpunto[2] = imagePointParTransformation(choix_transformation[2], [xC, yC], [xO, yO]); // si c'est une symétrie, l'axe passe par O'\n\t\twhile (punto[2][0] < -13 || punto[2][0] > 13 || punto[2][1] < -13 || punto[2][1] > 14) { // on vérifie que C est dans le repère sinon on change le punto C.\n\t\t\txC = randint(-10, 10); // Point C\n\t\t\tyC = randint(-10, 10, [yA, yB,-1]);\n\t\t\tif (choix_transformation[2] > 4)\n\t\t\t\tpunto[2] = imagePointParTransformation(choix_transformation[2], [xC, yC], [xB, yB], [xB, yB], k[2]);\n\t\t\telse\n\t\t\t\tpunto[2] = imagePointParTransformation(choix_transformation[2], [xC, yC], [xO, yO]); // si c'est une symétrie, l'axe passe par O'\n\t\t}\n        C=point(xC,yC,'C')\n\t\tCprime=point(punto[2][0],punto[2][1],\"C'\")\n\n\t\t// les puntos sont choisis, on écrit l'énoncé\t\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tswitch (choix_transformation[i]) {\n\t\t\t\tcase 1:\n\t\t\t\t\tbis1 = 1;\n\t\t\t\t\tt[1] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A),labelPoint(A))\n                        objets_correction.push(tracePoint(A,Aprime),labelPoint(A,Aprime),segment(A,Aprime,'blue'),codageAngleDroit(A,milieu(A,Aprime),pointSurDroite(droited1,-15)),codeSegments('||','red',A,milieu(A,Aprime),milieu(A,Aprime),Aprime))\n                        xP[1] = xA;\n\t\t\t\t\t\tyP[1] = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(B,Bprime),labelPoint(B,Bprime))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime),labelPoint(B,Bprime),segment(B,Bprime,'blue'),codageAngleDroit(B,milieu(B,Bprime),pointSurDroite(droited1,-15)),codeSegments('O','red',B,milieu(B,Bprime),milieu(B,Bprime),Bprime))\n\t\t\t\t\t\txP[1] = xB;\n\t\t\t\t\t\tyP[1] = yB;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(C),labelPoint(C))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime),labelPoint(C,Cprime),segment(C,Cprime,'blue'),codageAngleDroit(C,milieu(C,Cprime),pointSurDroite(droited1,-15)),codeSegments('X','red',C,milieu(C,Cprime),milieu(C,Cprime),Cprime))\n\t\t\t\t\t\txP[1] = xC;\n\t\t\t\t\t\tyP[1] = yC;\n\t\t\t\t\t}\n                    objets_enonce.push(droited1,latexParCoordonnees('(d_1)',-10,-7-xO+yO,'green',2))\n\t\t\t\t\tobjets_correction.push(droited1,latexParCoordonnees('(d_1)',-10,-7-xO+yO,'green',2))\n\t\t\t\t\t\n\t\t\t\t\ttexte += `Donner les coordonnées du symétrique de $${lettre1[i]}$ par rapport à la droite $(d_1)$.<br>`;\n\t\t\t\t\ttexteCorr += `Le symétrique de $${lettre1[i]}$ par rapport à $(d_1)$ a pour coordonnées ($${texNombre(punto[i][0])};${texNombre(punto[i][1])}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tbis2 = 1;\n\t\t\t\t\tt[2] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A),labelPoint(A))\n                        objets_correction.push(tracePoint(A,Aprime),labelPoint(A,Aprime),segment(A,Aprime,'blue'),codageAngleDroit(A,milieu(A,Aprime),pointSurDroite(droited2,-15)),codeSegments('||','red',A,milieu(A,Aprime),milieu(A,Aprime),Aprime))\n                        xP[2] = xA;\n\t\t\t\t\t\tyP[2] = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(B),labelPoint(B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime),labelPoint(B,Bprime),segment(B,Bprime,'blue'),codageAngleDroit(B,milieu(B,Bprime),pointSurDroite(droited2,-15)),codeSegments('O','red',B,milieu(B,Bprime),milieu(B,Bprime),Bprime))\n\t\t\t\t\t\txP[2] = xB;\n\t\t\t\t\t\tyP[2] = yB;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n                        objets_enonce.push(tracePoint(C),labelPoint(C))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime),labelPoint(C,Cprime),segment(C,Cprime,'blue'),codageAngleDroit(C,milieu(C,Cprime),pointSurDroite(droited2,-15)),codeSegments('X','red',C,milieu(C,Cprime),milieu(C,Cprime),Cprime))\n\t\t\t\t\txP[2] = xC;\n\t\t\t\t\t\tyP[2] = yC;\n\t\t\t\t\t}\n\t\t\t\t\tobjets_enonce.push(droited2,latexParCoordonnees('(d_2)',8,-7+xO+yO,'green',2))\n\t\t\t\t\tobjets_correction.push(droited2,latexParCoordonnees('(d_2)',8,-7+xO+yO,'green',2))\n\t\t\t\t\ttexte += `Donner les coordonnées du symétrique de $${lettre1[i]}$ par rapport à la droite $(d_2)$.<br>`;\n\t\t\t\t\ttexteCorr += `Le symétrique de $${lettre1[i]}$ par rapport à $(d_2)$ a pour coordonnées ($${texNombre(punto[i][0])};${texNombre(punto[i][1])}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\txx = 1;\n\t\t\t\t\tt[3] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A),labelPoint(A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(A,Aprime),labelPoint(A,Aprime),segment(A,Aprime,'blue'),codageAngleDroit(A,milieu(A,Aprime),pointSurDroite(droited,-15)),codeSegments('||','red',A,milieu(A,Aprime),milieu(A,Aprime),Aprime))\n\t\t\t\t\t\txP[3] = xA;\n\t\t\t\t\t\tyP[3] = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n                        objets_enonce.push(tracePoint(B),labelPoint(B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime),labelPoint(B,Bprime),segment(B,Bprime,'blue'),codageAngleDroit(B,milieu(B,Bprime),pointSurDroite(droited,-15)),codeSegments('O','red',B,milieu(B,Bprime),milieu(B,Bprime),Bprime))\n\t\t\t\t\txP[3] = xB;\n\t\t\t\t\t\tyP[3] = yB;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(C),labelPoint(C))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime),labelPoint(C,Cprime),segment(C,Cprime,'blue'),codageAngleDroit(C,milieu(C,Cprime),pointSurDroite(droited,-15)),codeSegments('X','red',C,milieu(C,Cprime),milieu(C,Cprime),Cprime))\n\t\t\t\t\t\txP[3] = xC;\n\t\t\t\t\t\tyP[3] = yC;\n\t\t\t\t\t}\n\t\t\t\t\tobjets_enonce.push(droited,latexParCoordonnees('(d)',-14,yO+1,'green',2))\n\t\t\t\t\tobjets_correction.push(droited,latexParCoordonnees('(d)',-14,yO+1,'green',2))\n\t\t\t\t\ttexte += `Donner les coordonnées du symétrique de $${lettre1[i]}$ par rapport à la droite $(d)$.<br>`;\n\t\t\t\t\ttexteCorr += `Le symétrique de $${lettre1[i]}$ par rapport à $(d)$ a pour coordonnées ($${texNombre(punto[i][0])};${texNombre(punto[i][1])}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 4:\n\t\t\t\t\tyy = 1;\n\t\t\t\t\tt[4] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A),labelPoint(A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(A,Aprime),labelPoint(A,Aprime),segment(A,Aprime,'blue'),codageAngleDroit(A,milieu(A,Aprime),pointSurDroite(droitedprime,-15)),codeSegments('||','red',A,milieu(A,Aprime),milieu(A,Aprime),Aprime))\n\t\t\t\t\t\txP[4] = xA;\n\t\t\t\t\t\tyP[4] = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(B),labelPoint(B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime),labelPoint(B,Bprime),segment(B,Bprime,'blue'),codageAngleDroit(B,milieu(B,Bprime),pointSurDroite(droitedprime,-15)),codeSegments('O','red',B,milieu(B,Bprime),milieu(B,Bprime),Bprime))\n\t\t\t\t\t\txP[4] = xB;\n\t\t\t\t\t\tyP[4] = yB;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(C),labelPoint(C))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime),labelPoint(C,Cprime),segment(C,Cprime,'blue'),codageAngleDroit(C,milieu(C,Cprime),pointSurDroite(droitedprime,-15)),codeSegments('X','red',C,milieu(C,Cprime),milieu(C,Cprime),Cprime))\n\t\t\t\t\t\txP[4] = xC;\n\t\t\t\t\t\tyP[4] = yC;\n\t\t\t\t\t}\n\t\t\t\t\tobjets_enonce.push(droitedprime,latexParCoordonnees(\"(d\\')\",xO+0.2,13,'green',2))\n\t\t\t\t\tobjets_correction.push(droitedprime)\n\t\t\t\t\ttexte += `Donner les coordonnées du symétrique de $${lettre1[i]}$ par rapport à la droite $(d\\')$.<br>`;\n\t\t\t\t\ttexteCorr += `Le symétrique de $${lettre1[i]}$ par rapport à $(d\\')$ a pour coordonnées ($${texNombre(punto[i][0])};${texNombre(punto[i][1])}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 5:\n\t\t\t\t\tAfficheO = 1;\n\t\t\t\t\tt[5] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A,O),labelPoint(A,O))\n                        objets_correction.push(tracePoint(A,Aprime,O),labelPoint(A,Aprime,O),\n\t\t\t\t\t\tsegment(O,A,'blue'),segment(O,Aprime,'blue'),afficheMesureAngle(A,O,Aprime),codeSegments('//','red',O,A,O,Aprime)\n\t\t\t\t\t\t)\n                        xP[5] = xA;\n\t\t\t\t\t\tyP[5] = yA;\n\t\t\t\t\t\txO5 = xO;\n\t\t\t\t\t\tyO5 = yO;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(B,A),labelPoint(B,A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime,A),labelPoint(B,Bprime,A),\n\t\t\t\t\t\tsegment(A,B,'blue'),segment(A,Bprime,'blue'),afficheMesureAngle(B,A,Bprime),codeSegments('O','red',A,B,A,Bprime))\n\t\t\t\t\t\txP[5] = xB;\n\t\t\t\t\t\tyP[5] = yB;\n\t\t\t\t\t\txO5 = xA;\n\t\t\t\t\t\tyO5 = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(C,B),labelPoint(C,B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime,B),labelPoint(C,Cprime,B),\n\t\t\t\t\t\tsegment(B,C,'blue'),segment(B,Cprime,'blue'),afficheMesureAngle(C,B,Cprime),codeSegments('X','red',B,C,B,Cprime))\n\t\t\t\t\t\txP[5] = xC;\n\t\t\t\t\t\tyP[5] = yC;\n\t\t\t\t\t\txO5 = xB;\n\t\t\t\t\t\tyO5 = yB;\n\t\t\t\t\t}\n\t\t\t\t\ttexte += `Donner les coordonnées de l'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 90° dans le sens anti-horaire.<br>`;\n\t\t\t\t\ttexteCorr += `L'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 90° dans le sens anti-horaire a pour coordonnées ($${texNombre(punto[i][0])};${texNombre(punto[i][1])}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 6:\n\t\t\t\t\tAfficheO = 1;\n\t\t\t\t\tt[6] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A,O),labelPoint(A,O))\n                        objets_correction.push(tracePoint(A,Aprime,O),labelPoint(A,Aprime,O),\n\t\t\t\t\t\tsegment(O,A,'blue'),segment(O,Aprime,'blue'),afficheMesureAngle(A,O,Aprime),codeSegments('//','red',O,A,O,Aprime))\n                        xP[6] = xA;\n\t\t\t\t\t\tyP[6] = yA;\n\t\t\t\t\t\txO6 = xO;\n\t\t\t\t\t\tyO6 = yO;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(B,A),labelPoint(B,A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,A),labelPoint(B,A),\n\t\t\t\t\t\tsegment(A,B,'blue'),segment(A,Bprime,'blue'),afficheMesureAngle(B,A,Bprime),codeSegments('O','red',A,B,A,Bprime))\n\t\t\t\t\t\txP[6] = xB;\n\t\t\t\t\t\tyP[6] = yB;\n\t\t\t\t\t\txO6 = xA;\n\t\t\t\t\t\tyO6 = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(C,B),labelPoint(C,B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime,B),labelPoint(C,Cprime,B),\n\t\t\t\t\t\tsegment(B,C,'blue'),segment(B,Cprime,'blue'),afficheMesureAngle(C,B,Cprime),codeSegments('X','red',B,C,B,Cprime))\n\t\t\t\t\t\txP[6] = xC;\n\t\t\t\t\t\tyP[6] = yC;\n\t\t\t\t\t\txO6 = xB;\n\t\t\t\t\t\tyO6 = yB;\n\t\t\t\t\t}\n\t\t\t\t\ttexte += `Donner les coordonnées de l'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 90° dans le sens horaire.<br>`;\n\t\t\t\t\ttexteCorr += `L'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 90° dans le sens horaire a pour coordonnées ($${texNombre(punto[i][0])};${texNombre(punto[i][1])}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 7:\n\t\t\t\t\tAfficheO = 1;\n\t\t\t\t\tt[7] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A,O),labelPoint(A,O))\n                        objets_correction.push(tracePoint(A,Aprime,O),labelPoint(A,Aprime,O),\n\t\t\t\t\t\tsegment(O,A,'blue'),segment(O,Aprime,'blue'),codeSegments('//','red',O,A,O,Aprime))\n                        xP[7] = xA;\n\t\t\t\t\t\tyP[7] = yA;\n\t\t\t\t\t\txO7 = xO;\n\t\t\t\t\t\tyO7 = yO;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n                        objets_enonce.push(tracePoint(B,A),labelPoint(B,A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime,A),labelPoint(B,Bprime,A),\n\t\t\t\t\t\tsegment(A,B,'blue'),segment(A,Bprime,'blue'),codeSegments('O','red',A,B,A,Bprime))\n\t\t\t\t\txP[7] = xB;\n\t\t\t\t\t\tyP[7] = yB;\n\t\t\t\t\t\txO7 = xA;\n\t\t\t\t\t\tyO7 = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n                        objets_enonce.push(tracePoint(C,B),labelPoint(C,B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime,B),labelPoint(C,Cprime,B),\n\t\t\t\t\t\tsegment(B,C,'blue'),segment(B,Cprime,'blue'),codeSegments('X','red',B,C,B,Cprime))\n\t\t\t\t\txP[7] = xC;\n\t\t\t\t\t\tyP[7] = yC;\n\t\t\t\t\t\txO7 = xB;\n\t\t\t\t\t\tyO7 = yB;\n\t\t\t\t\t}\n\t\t\t\t\ttexte += `Donner les coordonnées de l'image de $${lettre1[i]}$ par la symétrie de centre $${lettre2[i]}$.<br>`;\n\t\t\t\t\ttexteCorr += `L'image de $${lettre1[i]}$ par la symétrie de centre $${lettre2[i]}$ a pour coordonnées ($${texNombrec(punto[i][0])};${texNombre(punto[i][1])}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 11:\n\t\t\t\t\tAfficheO = 1;\n\t\t\t\t\tt[11] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A,O),labelPoint(A,O))\n                        objets_correction.push(tracePoint(A,Aprime,O),labelPoint(A,Aprime,O),\n\t\t\t\t\t\tsegment(O,A,'blue'),segment(O,Aprime,'blue'),afficheMesureAngle(A,O,Aprime),codeSegments('//','red',O,A,O,Aprime))\n                        xP[11] = xA;\n\t\t\t\t\t\tyP[11] = yA;\n\t\t\t\t\t\txO11 = xO;\n\t\t\t\t\t\tyO11 = yO;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(B,A),labelPoint(B,A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime,A),labelPoint(B,Bprime,A),\n\t\t\t\t\t\tsegment(A,B,'blue'),segment(A,Bprime,'blue'),afficheMesureAngle(B,A,Bprime),codeSegments('O','red',A,B,A,Bprime))\n\t\t\t\t\t\txP[11] = xB;\n\t\t\t\t\t\tyP[11] = yB;\n\t\t\t\t\t\txO11 = xA;\n\t\t\t\t\t\tyO11 = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n                        objets_enonce.push(tracePoint(C,B),labelPoint(C,B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime,B),labelPoint(C,Cprime,B),\n\t\t\t\t\t\tsegment(B,C,'blue'),segment(B,Cprime,'blue'),afficheMesureAngle(C,B,Cprime),codeSegments('X','red',B,C,B,Cprime))\n\t\t\t\t\txP[11] = xC;\n\t\t\t\t\t\tyP[11] = yC;\n\t\t\t\t\t\txO11 = xB;\n\t\t\t\t\t\tyO11 = yB;\n\t\t\t\t\t}\n\t\t\t\t\ttexte += `Donner les coordonnées de l'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 60° dans le sens anti-horaire.<br>`;\n\t\t\t\t\ttexteCorr += `L'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 60° dans le sens anti-horaire a pour coordonnées ($${texNombre(calcul(punto[i][0], 2))};${texNombre(calcul(punto[i][1], 2))}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 12:\n\t\t\t\t\tAfficheO = 1;\n\t\t\t\t\tt[12] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A,O),labelPoint(A,O))\n                        objets_correction.push(tracePoint(A,Aprime,O),labelPoint(A,Aprime,O),\n\t\t\t\t\t\tsegment(O,A,'blue'),segment(O,Aprime,'blue'),afficheMesureAngle(A,O,Aprime),codeSegments('//','red',O,A,O,Aprime))\n                        xP[12] = xA;\n\t\t\t\t\t\tyP[12] = yA;\n\t\t\t\t\t\txO12 = xO;\n\t\t\t\t\t\tyO12 = yO;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n                        objets_enonce.push(tracePoint(B,A),labelPoint(B,A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime,A),labelPoint(B,Bprime,A),\n\t\t\t\t\t\tsegment(A,B,'blue'),segment(A,Bprime,'blue'),afficheMesureAngle(B,A,Bprime),codeSegments('O','red',A,B,A,Bprime))\n\t\t\t\t\txP[12] = xB;\n\t\t\t\t\t\tyP[12] = yB;\n\t\t\t\t\t\txO12 = xA;\n\t\t\t\t\t\tyO12 = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n                        objets_enonce.push(tracePoint(C,B),labelPoint(C,B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime,B),labelPoint(C,Cprime,B),\n\t\t\t\t\t\tsegment(B,C,'blue'),segment(B,Cprime,'blue'),afficheMesureAngle(C,B,Cprime),codeSegments('X','red',B,C,B,Cprime))\n\t\t\t\t\txP[12] = xC;\n\t\t\t\t\t\tyP[12] = yC;\n\t\t\t\t\t\txO12 = xB;\n\t\t\t\t\t\tyO12 = yB;\n\t\t\t\t\t}\n\t\t\t\t\ttexte += `Donner les coordonnées de l'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 60° dans le sens horaire.<br>`;\n\t\t\t\t\ttexteCorr += `L'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 60° dans le sens horaire a pour coordonnées ($${texNombre(calcul(punto[i][0], 2))};${texNombre(calcul(punto[i][1], 2))}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 13:\n\t\t\t\t\tAfficheO = 1;\n\n\t\t\t\tcase 12:\n\t\t\t\t\tAfficheO = 1;\n\t\t\t\t\tt[13] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A,O),labelPoint(A,O))\n                        objets_correction.push(tracePoint(A,Aprime,O),labelPoint(A,Aprime,O),\n\t\t\t\t\t\tsegment(O,A,'blue'),segment(O,Aprime,'blue'),afficheMesureAngle(A,O,Aprime),codeSegments('//','red',O,A,O,Aprime))\n                        xP[13] = xA;\n\t\t\t\t\t\tyP[13] = yA;\n\t\t\t\t\t\txO13 = xO;\n\t\t\t\t\t\tyO13 = yO;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(B,A),labelPoint(B,A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime,A),labelPoint(B,Bprime,A),\n\t\t\t\t\t\tsegment(A,B,'blue'),segment(A,Bprime,'blue'),afficheMesureAngle(B,A,Bprime),codeSegments('O','red',A,B,A,Bprime))\n\t\t\t\t\t\txP[13] = xB;\n\t\t\t\t\t\tyP[13] = yB;\n\t\t\t\t\t\txO13 = xA;\n\t\t\t\t\t\tyO13 = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n                        objets_enonce.push(tracePoint(C,B),labelPoint(C,B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime,B),labelPoint(C,Cprime,B),\n\t\t\t\t\t\tsegment(B,C,'blue'),segment(B,Cprime,'blue'),afficheMesureAngle(C,B,Cprime),codeSegments('X','red',B,C,B,Cprime))\n\t\t\t\t\txP[13] = xC;\n\t\t\t\t\t\tyP[13] = yC;\n\t\t\t\t\t\txO13 = xB;\n\t\t\t\t\t\tyO13 = yB;\n\t\t\t\t\t}\n\t\t\t\t\ttexte += `Donner les coordonnées de l'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 120° dans le sens anti-horaire.<br>`;\n\t\t\t\t\ttexteCorr += `L'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 120° dans le sens anti-horaire a pour coordonnées ($${texNombre(calcul(punto[i][0], 2))};${texNombre(calcul(punto[i][1], 2))}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 14:\n\t\t\t\t\tAfficheO = 1;\n\t\t\t\t\tt[14] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A,O),labelPoint(A,O))\n                        objets_correction.push(tracePoint(A,Aprime,O),labelPoint(A,Aprime,O),\n\t\t\t\t\t\tsegment(O,A,'blue'),segment(O,Aprime,'blue'),afficheMesureAngle(A,O,Aprime),codeSegments('//','red',O,A,O,Aprime))\n                        xP[14] = xA;\n\t\t\t\t\t\tyP[14] = yA;\n\t\t\t\t\t\txO14 = xO;\n\t\t\t\t\t\tyO14 = yO;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(B,A),labelPoint(B,A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime,A),labelPoint(B,Bprime,A),\n\t\t\t\t\t\tsegment(A,B,'blue'),segment(A,Bprime,'blue'),afficheMesureAngle(B,A,Bprime),codeSegments('O','red',A,B,A,Bprime))\n\t\t\t\t\t\txP[14] = xB;\n\t\t\t\t\t\tyP[14] = yB;\n\t\t\t\t\t\txO14 = xA;\n\t\t\t\t\t\tyO14 = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(C,B),labelPoint(C,B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime,B),labelPoint(C,Cprime,B),\n\t\t\t\t\t\tsegment(B,C,'blue'),segment(B,Cprime,'blue'),afficheMesureAngle(C,B,Cprime),codeSegments('X','red',B,C,B,Cprime))\n\t\t\t\t\t\txP[14] = xC;\n\t\t\t\t\t\tyP[14] = yC;\n\t\t\t\t\t\txO14 = xB;\n\t\t\t\t\t\tyO14 = yB;\n\t\t\t\t\t}\n\t\t\t\t\ttexte += `Donner les coordonnées de l'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 120° dans le sens horaire.<br>`;\n\t\t\t\t\ttexteCorr += `L'image de $${lettre1[i]}$ par la rotation de centre $${lettre2[i]}$ et d'angle 120° dans le sens horaire a pour coordonnées ($${texNombre(calcul(punto[i][0], 2))};${texNombre(calcul(punto[i][1], 2))}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 8:\n\t\t\t\t\tAfficheO = 1;\n\t\t\t\t\tt[8] = 1;\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A,O,pointO),labelPoint(A,O,pointO),vecteur(pointO,O).representant(pointO))\n                        objets_correction.push(tracePoint(A,Aprime,O,pointO),labelPoint(A,Aprime,O,pointO),\n\t\t\t\t\t\tvecteur(pointO,O).representant(A),vecteur(pointO,O).representant(pointO))\n                        xP[8] = xA;\n\t\t\t\t\t\tyP[8] = yA;\n\t\t\t\t\t\txO8 = xO;\n\t\t\t\t\t\tyO8 = yO;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n                        objets_enonce.push(tracePoint(B,A,pointO),labelPoint(B,A,pointO),vecteur(pointO,A).representant(pointO))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime,A,pointO),labelPoint(B,Bprime,A,pointO),\n\t\t\t\t\t\tvecteur(pointO,A).representant(B),vecteur(pointO,A).representant(pointO))\n\t\t\t\t\txP[8] = xB;\n\t\t\t\t\t\tyP[8] = yB;\n\t\t\t\t\t\txO8 = xA;\n\t\t\t\t\t\tyO8 = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(C,B,pointO),labelPoint(C,B,pointO),vecteur(pointO,B).representant(pointO))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime,B,pointO),labelPoint(C,Cprime,B,pointO),\n\t\t\t\t\t\tvecteur(pointO,B).representant(C),vecteur(pointO,B).representant(pointO))\n\t\t\t\t\t\txP[8] = xC;\n\t\t\t\t\t\tyP[8] = yC;\n\t\t\t\t\t\txO8 = xB;\n\t\t\t\t\t\tyO8 = yB;\n\t\t\t\t\t}\n\t\t\t\t\t// AfficheOO=1\n\t\t\t\t\ttexte += `Donner les coordonnées de l'image de $${lettre1[i]}$ par la translation qui transforme O en ${lettre2[i]}.<br>`;\n\t\t\t\t\ttexteCorr += `L'image de $${lettre1[i]}$ par la translation qui transforme O en ${lettre2[i]} a pour coordonnées ($${texNombre(punto[i][0])};${texNombre(punto[i][1])}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 9:\n\t\t\t\t\tAfficheO = 1;\n\t\t\t\t\tt[9] = 1;\n\t\t\t\t\tk1 = k[i];\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A,O),labelPoint(A,O))\n                        objets_correction.push(tracePoint(A,Aprime,O),labelPoint(A,Aprime,O),\n\t\t\t\t\t\tsegment(O,A,'blue'),segment(O,Aprime,'orange'))\n                        xP[9] = xA;\n\t\t\t\t\t\tyP[9] = yA;\n\t\t\t\t\t\txO9 = xO;\n\t\t\t\t\t\tyO9 = yO;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n                        objets_enonce.push(tracePoint(B,A),labelPoint(B,A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime,A),labelPoint(B,Bprime,A),\n\t\t\t\t\t\tsegment(O,B,'blue'),segment(O,Bprime,'orange'))\n\n\t\t\t\t\txP[9] = xB;\n\t\t\t\t\t\tyP[9] = yB;\n\t\t\t\t\t\txO9 = xA;\n\t\t\t\t\t\tyO9 = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(C,B),labelPoint(C,B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime,B),labelPoint(C,Cprime,B),\n\t\t\t\t\t\tsegment(O,C,'blue'),segment(O,Cprime,'orange'))\n\n\t\t\t\t\t\txP[9] = xC;\n\t\t\t\t\t\tyP[9] = yC;\n\t\t\t\t\t\txO9 = xB;\n\t\t\t\t\t\tyO9 = yB;\n\t\t\t\t\t}\n\t\t\t\t\ttexte += `Donner les coordonnées de l'image de $${lettre1[i]}$ par l'homothétie de centre $${lettre2[i]}$ et de rapport $${texNombre(k[i])}$.<br>`;\n\t\t\t\t\ttexteCorr += `L'image de $${lettre1[i]}$ par l'homothétie de centre $${lettre2[i]}$ et de rapport $${texNombre(k[i])}$ a pour coordonnées ($${texNombre(punto[i][0])};${texNombre(punto[i][1])}$).<br>`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 10:\n\t\t\t\t\tAfficheO = 1;\n\t\t\t\t\tt[10] = 1;\n\t\t\t\t\tk2 = k[i];\n\t\t\t\t\tif (i == 0) {\n                        objets_enonce.push(tracePoint(A,O),labelPoint(A,O))\n                        objets_correction.push(tracePoint(A,Aprime,O),labelPoint(A,Aprime,O),\n\t\t\t\t\t\tsegment(O,A,'blue'),segment(O,Aprime,'orange'))\n                        xP[10] = xA;\n\t\t\t\t\t\tyP[10] = yA;\n\t\t\t\t\t\txO10 = xO;\n\t\t\t\t\t\tyO10 = yO;\n\t\t\t\t\t}\n\t\t\t\t\telse if (i == 1) {\n                        objets_enonce.push(tracePoint(B,A),labelPoint(B,A))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(B,Bprime,A),labelPoint(B,Bprime,A),\n\t\t\t\t\t\tsegment(A,B,'blue'),segment(A,Bprime,'orange'))\n\t\t\t\t\txP[10] = xB;\n\t\t\t\t\t\tyP[10] = yB;\n\t\t\t\t\t\txO10 = xA;\n\t\t\t\t\t\tyO10 = yA;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tobjets_enonce.push(tracePoint(C,B),labelPoint(C,B))\n\t\t\t\t\t\tobjets_correction.push(tracePoint(C,Cprime,B),labelPoint(C,Cprime,B),\n\t\t\t\t\t\tsegment(B,C,'blue'),segment(B,Cprime,'orange'))\n\t\t\t\t\t\txP[10] = xC;\n\t\t\t\t\t\tyP[10] = yC;\n\t\t\t\t\t\txO10 = xB;\n\t\t\t\t\t\tyO10 = yB;\n\t\t\t\t\t}\n\t\t\t\t\ttexte += `Donner les coordonnées de l'image de $${lettre1[i]}$ par l'homothétie de centre $${lettre2[i]}$ et de rapport $${texFractionReduite(1, k[i])}$.<br>`;\n\t\t\t\t\ttexteCorr += `L'image de $${lettre1[i]}$ par l'homothétie de centre $${lettre2[i]}$ et de rapport $${texFractionReduite(1, k[i])}$ a pour coordonnées ($${texNombre(punto[i][0])};${texNombre(punto[i][1])}$).<br>`;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\t/*\n\t\t\tbooléens permettant l'affichage des éléments si =1 et le masquage si =0\n\t\tbis1 affiche la droite de coefficient directeur 1 passant par O'\n\t\t\tbis2 affiche la droite de coefficient directeur -1 passant par O'\n\t\t\txx' affiche la droite horizontale passant par O'\n\t\t\tyy' affiche la droite verticale passant par O'\n\t\t\tAfficheO' affiche O' comme son nom l'indique.\n\t\t\tAfficheOO' affiche le vecteur OO' vecteur de translation\n\t\t    \n\t\t\t*/\n\t\t\tobjets_enonce.push(repere2({xMin:-14,yMin:-14,xMax:14,yMax:14,grilleOpacite:0.2}))\n\t\t\tobjets_correction.push(repere2({xMin:-14,yMin:-14,xMax:14,yMax:14,grilleOpacite:0.2}))\n\t\t\t\n\t\t\tthis.listeQuestions.push(texte+'<br>'+mathalea2d({xmin:-14,ymin:-14,xmax:14,ymax:14,pixelsParCm:20,scale:0.6,mainlevee:false},objets_enonce));\n\t\t\tthis.listeCorrections.push(texteCorr+'<br>'+mathalea2d({xmin:-14,ymin:-14,xmax:14,ymax:14,pixelsParCm:20,scale:0.6,mainlevee:false},objets_correction));\n\t\t\tlisteQuestionsToContenuSansNumero(this);\n\n\n\n\n\n\t};\n\tthis.besoinFormulaireNumerique = ['Transformations', 5, '1 : Symétries axiales (6ème)\\n 2 : Symétries axiales et centrales (5ème)\\n 3 : Symétries et translations (4ème)\\n 4 : Symétries, translations, rotations et homothéties\\n 5 : Les mêmes plus des rotations compliquées\\n'];\n\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}