{"version":3,"file":"js/68767.6ceb1b6b802c1d732c10.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G23-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureParentheseSiNegatif, ecritureAlgebrique } from '../../modules/outils.js'\nimport { repere2, mathalea2d, point, vecteur, nomVecteurParPosition, texteParPosition, longueur, homothetie, latexParPoint } from '../../modules/2d.js'\n\nexport const titre = 'Coordonnées de vecteurs et translations.'\n\n/**\n * Calculer les coordonnées d'un point image ou antécédent d'un autre par une translation\n * @author Stéphane Guyon légèrement modifié par Jean-Claude Lhote\n * Référence 2G23-2\n */\nexport default function TranslationEtCoordonnes () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.nbQuestions = 2\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1 //\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, r, A, B, O, I, J, j, k, s, o, ux, uy, vi, vj, xA, yA, xB, yB, posLabelA, labelA, posLabelB, labelB, nomi, nomj, nomAB, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      xA = randint(2, 8) * choice([-1, 1])\n      yA = randint(2, 8) * choice([-1, 1])\n      ux = randint(2, 8) * choice([-1, 1])\n      uy = randint(2, 8) * choice([-1, 1])\n      xB = xA + ux\n      yB = yA + uy\n      while (Math.abs(xB) < 2 || Math.abs(xB) > 8) { // On s'assure de choisir des points bien placés dans le repère.\n        xA = randint(2, 8) * choice([-1, 1])\n        ux = randint(2, 8) * choice([-1, 1])\n        xB = xA + ux\n      }\n      while (Math.abs(yB) < 2 || Math.abs(yB) > 8) { // Idem pour les ordonnées\n        yA = randint(2, 8) * choice([-1, 1])\n        uy = randint(2, 8) * choice([-1, 1])\n        yB = yA + uy\n      }\n\n      r = repere2()// On définit le repère\n      A = point(xA, yA) // On définit et on trace le point A\n      B = point(xB, yB) // On définit et on trace le point B\n      posLabelA = homothetie(B, A, -0.7 / longueur(A, B), '', 'center') // pour positionner les noms des points aux extrémités proprement\n      posLabelB = homothetie(A, B, -0.7 / longueur(A, B), '', 'center')\n      labelA = latexParPoint('A', posLabelA, 'red', 10, 12, '')\n      labelB = latexParPoint(\"A'\", posLabelB, 'red', 10, 12, '')\n\n      // t = tracePoint(A, B, 'red') // Variable qui trace les points avec une croix\n      s = vecteur(A, B).representant(A) // On trace en rouge [AB]\n      O = point(0, 0)// On définit et on trace le point O\n      o = texteParPosition('O', -0.5, -0.5, 'milieu', 'black', 1)\n      I = point(1, 0)// On définit sans tracer le point I\n      J = point(0, 1)// On définit sans tracer le point J\n      vi = vecteur(O, I) // Variable qui définit vecteur OI\n      vj = vecteur(O, J)// Variable qui définit vecteur OJ\n      k = vi.representant(O) // Variable qui trace [OI]\n      j = vj.representant(O)// Variable qui trace [OJ]\n      s.epaisseur = 2// Variable qui grossit le tracé du vecteur AB\n      s.color = 'red'\n      k.epaisseur = 2// Variable qui grossit le tracé du vecteur OI\n      j.epaisseur = 2// Variable qui grossit le tracé du vecteur OJ\n      nomi = nomVecteurParPosition('i', 0.5, -0.7, 1.5, 0)\n      nomj = nomVecteurParPosition('j', -0.7, 0.5, 1.5, 0)\n      nomAB = vecteur(A, B).representantNomme(A, \"AA'\", 1.5, 'red')\n\n      if (parseInt(this.sup) === 1) {\n        texte = 'Dans un repère orthonormé $(O,\\\\vec i,\\\\vec j)$, déterminer les coordonnées du point $A\\'$, \\'image du point '\n        texte += ` $A\\\\left(${xA};${yA}\\\\right)$ par la translation de vecteur $\\\\vec{u}\\\\left(${ux};${uy}\\\\right)$`\n        texteCorr = '<br>On sait d\\'après le cours, que si $A\\'$ est l\\'image de $A$ par la translation de vecteur $\\\\vec {u}$'\n        texteCorr += '<br>alors on a l\\'égalité : $\\\\overrightarrow{AA\\'}=\\\\vec{u}$.'\n        texteCorr += ' <br>On connaît les coordonnées de $\\\\vec {u}$ avec l\\'énoncé.'\n        texteCorr += ' <br>On calcule donc celles de $\\\\overrightarrow{AA\\'}$.'\n        texteCorr += ' <br> Soit  $A\\'(x;y)$ les coordonnées du point $A\\'$.'\n        texteCorr += '<br> On sait, d\\'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d\\'un repère,'\n        texteCorr += ' <br>alors on a  $\\\\overrightarrow{AB}\\\\begin{pmatrix}x_B-x_A  \\\\\\\\y_B-y_A\\\\end{pmatrix}$<br>'\n        texteCorr += ' <br>On applique ici aux données de l\\'énoncé :'\n        texteCorr += ` $\\\\overrightarrow{AA'}\\\\begin{pmatrix} x-${ecritureParentheseSiNegatif(xA)}  \\\\\\\\y-${ecritureParentheseSiNegatif(yA)}\\\\end{pmatrix}$<br>`\n        if (xA < 0 | yA < 0) {\n          texteCorr += ` ou encore : $\\\\overrightarrow{AA'}\\\\begin{pmatrix} x${ecritureAlgebrique(-xA)}  \\\\\\\\y${ecritureAlgebrique(-yA)}\\\\end{pmatrix}$<br>`\n        }\n        texteCorr += 'Dire que $\\\\vec{u}=\\\\overrightarrow{AA\\'}~$, '\n        texteCorr += `équivaut à résoudre : $\\\\begin{cases}x ${ecritureAlgebrique(-xA)} =${ux}\\\\\\\\ y${ecritureAlgebrique(-yA)}=${uy}\\\\end{cases}$`\n        texteCorr += `<br>ou encore : $\\\\begin{cases}x  =${ux}${ecritureAlgebrique(xA)}\\\\\\\\ y=${uy}${ecritureAlgebrique(yA)}\\\\end{cases}$`\n        texteCorr += `<br>Ce qui donne au final : $\\\\begin{cases}x  =${xB}\\\\\\\\ y=${yB}\\\\end{cases}$`\n        texteCorr += `<br>On a donc: $A'(${xB};${yB})$.`\n      } else if (parseInt(this.sup) === 2) {\n        texte = 'Dans un repère orthonormé $(O,\\\\vec i,\\\\vec j)$, déterminer les coordonnées du point $A$, dont l\\'image par la translation de vecteur '\n        texte += ` $\\\\vec{u}\\\\left(${ux};${uy}\\\\right)$ est le point $A'\\\\left(${xB};${yB}\\\\right)$ `\n        texteCorr = '<br>On sait d\\'après le cours, que si $A\\'$ est l\\'image de $A$ par la translation de vecteur $\\\\vec {u}$'\n        texteCorr += '<br>alors on a l\\'égalité : $\\\\overrightarrow{AA\\'}=\\\\vec{u}$.'\n        texteCorr += ' <br>On connaît les coordonnées de $\\\\vec {u}$ avec l\\'énoncé.'\n        texteCorr += ' <br>On calcule donc celles de $\\\\overrightarrow{AA\\'}$.'\n        texteCorr += ' <br> Soit  $A(x;y)$ les coordonnées du point $A$.'\n        texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d\\'un repère,'\n        texteCorr += ' <br>alors on a  $\\\\overrightarrow{AB}\\\\begin{pmatrix}x_B-x_A  \\\\\\\\y_B-y_A\\\\end{pmatrix}$<br>'\n        texteCorr += ' <br>On applique ici aux données de l\\'énoncé :'\n        texteCorr += ` $\\\\overrightarrow{AA'}\\\\begin{pmatrix} ${xB}-x  \\\\\\\\${yB}-y\\\\end{pmatrix}$<br>`\n        texteCorr += \"On sait d'après l'énoncé que : $\\\\vec{u}=\\\\overrightarrow{AA'}~$, \"\n        texteCorr += `cela équivaut à résoudre : $\\\\begin{cases}${xB}-x =${ux}\\\\\\\\ ${yB}-y=${uy}\\\\end{cases}$`\n        texteCorr += `<br>ou encore : $\\\\begin{cases}x  =${xB}${ecritureAlgebrique(-ux)}\\\\\\\\ y=${yB}${ecritureAlgebrique(-uy)}\\\\end{cases}$`\n        texteCorr += `<br>Ce qui donne au final : $\\\\begin{cases}x  =${xA}\\\\\\\\ y=${yA}\\\\end{cases}$`\n        texteCorr += `<br>On a donc: $A(${xA};${yA})$.`\n      }\n      texteCorr += mathalea2d({\n        xmin: -9,\n        ymin: -9,\n        xmax: 9,\n        ymax: 9\n      }, r, k, j, s, o, nomi, nomj, nomAB, labelA, labelB)// On trace le graphique\n      if (this.questionJamaisPosee(i, xA, yA, xB, yB)) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Situations différentes ', 2, '1 :Calculer les coordonnées de l\\'image d\\'un point. \\n 2 :Calculer les coordonnées de l\\'antécédent d\\'un point.']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","TranslationEtCoordonnes","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","r","A","B","O","I","J","j","k","s","o","ux","uy","vi","vj","xA","yA","xB","yB","posLabelA","labelA","posLabelB","labelB","nomi","nomj","nomAB","texte","texteCorr","i","cpt","randint","choice","Math","abs","repere2","point","homothetie","longueur","latexParPoint","vecteur","representant","texteParPosition","epaisseur","color","nomVecteurParPosition","representantNomme","parseInt","ecritureParentheseSiNegatif","ecritureAlgebrique","mathalea2d","xmin","ymin","xmax","ymax","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}