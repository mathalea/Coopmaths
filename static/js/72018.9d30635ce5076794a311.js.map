{"version":3,"file":"js/72018.9d30635ce5076794a311.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4G20-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeNombresPremiersStrictJusqua, choice, listeQuestionsToContenu, randint, texNombre, arrondi } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { cos } from '../../modules/fonctionsMaths.js'\n\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const titre = 'Arrondir une racine carrée'\n\n/**\n * * Arrondir_une_valeur\n * * 4G20-4\n * @author Mireille Gain, 27 juin 2021\n */\n\nexport default function ArrondirUneValeur () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n\n  this.nbQuestions = 3\n  this.nbCols = 3\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.interactifType = interactifType\n  this.interactifReady = interactifReady\n  this.interactif = true\n  context.isHtml ? (this.spacingCorr = 2.5) : (this.spacingCorr = 3.5)\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.autoCorrection = []\n    this.consigne = \"Arrondir chaque nombre à l'unité, puis au dixième, puis au centième.\"\n\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let n, nb, rac, angle, v\n\n    for (let i = 0, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[3 * i] = {}\n      this.autoCorrection[3 * i + 1] = {}\n      this.autoCorrection[3 * i + 2] = {}\n      if (this.sup === 1) {\n        rac = randint(2, 300, [listeNombresPremiersStrictJusqua(300)])\n        n = Math.sqrt(rac)\n        nb = `\\\\sqrt{${rac}}`\n      } else if (this.sup === 2) {\n        v = randint(11, 99) / 10\n        angle = randint(1, 89, 60)\n        if (choice([true, false])) {\n          n = v * cos(angle)\n          nb = `${texNombre(v)}\\\\cos(${angle})`\n        } else {\n          n = v / cos(angle)\n          nb = `\\\\dfrac{${texNombre(v)}}{\\\\cos(${angle})}`\n        }\n      }\n\n      texte = `$\\\\text{Quand~on~écrit~sur~la~calculatrice~} ${nb}, \\\\text{~elle~renvoie} : ${texNombre(n)}$`\n\n      texte += '<br>Arrondi à l\\'unité : '\n      texte += ajouteChampTexteMathLive(this, 3 * i)\n      texteCorr = `$\\\\text{Quand~on~écrit~sur~la~calculatrice~} ${nb}, \\\\text{~elle~renvoie} : ${texNombre(n)}$`\n      texteCorr += \"<br>Arrondi à l'unité : \"\n      texteCorr += `$${texNombre(arrondi(n, 0))}$`\n      setReponse(this, 3 * i, arrondi(n, 0))\n\n      texte += '<br>Arrondi au dixième : '\n      texte += ajouteChampTexteMathLive(this, 3 * i + 1)\n      texteCorr += '<br>Arrondi au dixième : '\n      texteCorr += `$${texNombre(arrondi(n, 1))}$`\n      setReponse(this, 3 * i + 1, arrondi(n, 1))\n\n      texte += '<br>Arrondi au centième : '\n      texte += ajouteChampTexteMathLive(this, 3 * i + 2)\n      texteCorr += '<br>Arrondi au centième : '\n      texteCorr += `$${texNombre(arrondi(n, 2))}$`\n      setReponse(this, 3 * i + 2, arrondi(n, 2))\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de nombre', 2, '1 : Racine carrée\\n 2 : Valeur avec cosinus']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["interactifReady","interactifType","titre","ArrondirUneValeur","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","interactif","context","spacingCorr","nouvelleVersion","n","nb","rac","angle","v","parseInt","autoCorrection","consigne","listeQuestions","listeCorrections","i","texte","texteCorr","cpt","randint","listeNombresPremiersStrictJusqua","Math","sqrt","choice","cos","texNombre","ajouteChampTexteMathLive","arrondi","setReponse","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}