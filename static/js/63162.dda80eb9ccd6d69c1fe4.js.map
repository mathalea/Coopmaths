{"version":3,"file":"js/63162.dda80eb9ccd6d69c1fe4.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6G41.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, creerNomDePolygone } from '../../modules/outils.js'\nimport { point, tracePoint, milieu, labelPoint, segment, translation2Points, similitude, grille, seyes, mathalea2d } from '../../modules/2d.js'\n\nexport const amcReady = true\nexport const amcType = 'AMCOpen' // type de question AMC\n\nexport const titre = 'Compléter une représentation en perspective cavalière'\n\n/**\n * fonction servant à compléter des solides, inspirée des fonctions de 6G42 et 6G43\n * référence : 6G41\n * @author Mireille Gain, s'inspirant fortement de Jean-Claude Lhote\n */\nexport default function RepresenterUnSolide () {\n  Exercice.call(this) // Héritage de la classe Exercice ()\n  this.titre = titre\n  this.nbQuestions = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.sup2 = 1\n  this.classe = 6\n  this.amcReady = amcReady\n  this.amcType = amcType\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    let typeDeQuestionsDisponibles\n\n    if (this.sup === 3) { typeDeQuestionsDisponibles = [1, 2] } else if (this.sup === 5) { typeDeQuestionsDisponibles = [1, 2, 4] } else if (this.sup === 7) { typeDeQuestionsDisponibles = [1, 2, 4, 6] } else { typeDeQuestionsDisponibles = [parseInt(this.sup)] }\n\n    const listeTypeDeQuestions = combinaisonListes(\n      typeDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let Xmin, Xmax, Ymin, Ymax, ppc, sc\n\n    // sixième : cube et pavé droit\n    if (this.classe === 6) {\n      typeDeQuestionsDisponibles = [1, 2]\n    } else if (this.classe === 5) { // cinquième : on ajoute le prisme\n      typeDeQuestionsDisponibles = [1, 2, 4]\n    } else if (this.classe === 4) { // Quatrième : on ajoute la pyramide\n      typeDeQuestionsDisponibles = [1, 2, 4, 6]\n    }\n\n    if (parseInt(this.sup2) === 1) { sc = 0.5 } else { sc = 0.8 }\n\n    let A; let B; let C; let D; let E; let F; let G; let H; let I\n    let AB; let BC; let CD; let DA; let EF; let FG; let GH; let HE; let AE; let BF; let CG; let DH; let IA; let IB; let IE; let IF; let BD; let FH\n    let coeffpersp\n    let enonce\n    let correction\n    let carreaux; let g\n    let objetsEnonce = []\n    let objetsCorrection = []; const matrace = tracePoint(I)\n\n    for (let i = 0, texte, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      const nom = creerNomDePolygone(8, 'PQ')\n      const anglepersp = choice([30, 45, -30, -45, 150, 135, -150, -135])\n      if (anglepersp % 10 === 0) { coeffpersp = 0.6 } else { coeffpersp = 0.4 }\n      objetsCorrection = []\n      objetsEnonce = []\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // cube\n          enonce = `$${nom}$ est un cube.<br>`\n          if (context.isHtml) { enonce += 'Reproduire et compléter la figure ci-dessous, en repassant de la même couleur les segments parallèles et de même longueur.<br>' }\n          correction = 'Figure complétée :<br>'\n          break\n\n        case 2: // pavé droit\n          enonce = `$${nom}$ est un pavé droit.<br>`\n          if (context.isHtml) { enonce += 'Reproduire et compléter la figure ci-dessous, en repassant de la même couleur les segments parallèles et de même longueur.<br>' }\n          correction = 'Figure complétée :<br>'\n          break\n\n        case 4: // prisme\n          enonce = 'On considère un prisme à base triangulaire.<br>Reproduire et compléter la figure ci-dessous, en repassant de la même couleur les segments parallèles et de même longueur.<br>'\n          correction = 'Figure complétée :<br>'\n          break\n\n        case 6: // pyramide\n          enonce = 'On considère une pyramide à base rectangulaire.<br>Reproduire et compléter la figure ci-dessous, en repassant de la même couleur les segments parallèles et de même longueur.<br>'\n          correction = 'Figure complétée :<br>'\n          break\n      }\n\n      switch (listeTypeDeQuestions[i] % 2) {\n        case 1:\n          A = point(6, 0, nom[0], 'left')\n          B = point(11, 0, nom[1], 'right')\n          C = point(11, 5, nom[2], 'right')\n          D = point(6, 5, nom[3], 'left')\n          E = similitude(B, A, anglepersp, coeffpersp, nom[4], 'left')\n          E.x = Math.round(E.x)\n          E.y = Math.round(E.y)\n          break\n\n        case 0:\n          A = point(5, 0, nom[0], 'left')\n          B = point(9 + randint(1, 3), 0, nom[1], 'right')\n          C = point(B.x, randint(3, 7), nom[2], 'right')\n          D = point(A.x, C.y, nom[3], 'left')\n          E = similitude(B, A, anglepersp, coeffpersp * randint(5, 12) / 10, nom[4], 'left')\n          E.x = Math.round(E.x)\n          E.y = Math.round(E.y)\n          break\n      }\n\n      F = translation2Points(E, A, B, nom[5], 'right')\n      G = translation2Points(F, B, C, nom[6], 'right')\n      H = translation2Points(G, C, D, nom[7], 'left')\n      I = milieu(D, G)\n      matrace.taille = 4\n      matrace.opacite = 0.9\n      matrace.epaisseur = 5\n      matrace.style = 'x'\n      AB = segment(A, B)\n      BC = segment(B, C)\n      CD = segment(C, D)\n      DA = segment(D, A)\n      EF = segment(E, F)\n      FG = segment(F, G)\n      GH = segment(G, H)\n      HE = segment(H, E)\n      AE = segment(A, E)\n      BF = segment(B, F)\n      CG = segment(C, G)\n      DH = segment(D, H)\n      IA = segment(A, I)\n      IB = segment(B, I)\n      IE = segment(E, I)\n      IF = segment(F, I)\n      BD = segment(B, D)\n      FH = segment(F, H)\n      AB.epaisseur = 2\n      BC.epaisseur = 2\n      CD.epaisseur = 2\n      DA.epaisseur = 2\n      EF.epaisseur = 2\n      FG.epaisseur = 2\n      GH.epaisseur = 2\n      HE.epaisseur = 2\n      AE.epaisseur = 2\n      BF.epaisseur = 2\n      CG.epaisseur = 2\n      DH.epaisseur = 2\n      IA.epaisseur = 1\n      IB.epaisseur = 1\n      IE.epaisseur = 1\n      IF.epaisseur = 1\n      BD.epaisseur = 2\n      FH.epaisseur = 2\n      AB.color = 'black'\n      BC.color = 'black'\n      CD.color = 'black'\n      DA.color = 'black'\n      EF.color = 'black'\n      FG.color = 'black'\n      GH.color = 'black'\n      HE.color = 'black'\n      AE.color = 'black'\n      BF.color = 'black'\n      CG.color = 'black'\n      IA.color = 'black'\n\n      if (G.y < C.y && G.x < C.x) {\n        CG.pointilles = true\n        GH.pointilles = true\n        FG.pointilles = true\n        IF.pointilles = true\n        FH.pointilles = true\n        CG.color = 'gray'\n        GH.color = 'gray'\n        FG.color = 'gray'\n        CG.opacite = 0.7\n        GH.opacite = 0.7\n        FG.opacite = 0.7\n      } else if (E.y > A.y && E.x > A.x) {\n        AE.pointilles = true\n        EF.pointilles = true\n        HE.pointilles = true\n        IE.pointilles = true\n        FH.pointilles = true\n        AE.color = 'gray'\n        EF.color = 'gray'\n        HE.color = 'gray'\n        AE.opacite = 0.7\n        EF.opacite = 0.7\n        HE.opacite = 0.7\n      } else if (F.x < B.x && F.y > B.y) {\n        BF.pointilles = true\n        FG.pointilles = true\n        EF.pointilles = true\n        IF.pointilles = true\n        FH.pointilles = true\n        BF.color = 'gray'\n        FG.color = 'gray'\n        EF.color = 'gray'\n        BF.opacite = 0.7\n        FG.opacite = 0.7\n        EF.opacite = 0.7\n      } else if (H.x > D.x && H.y < D.y) {\n        DH.pointilles = true\n        GH.pointilles = true\n        HE.pointilles = true\n        IE.pointilles = true\n        FH.pointilles = true\n        DH.color = 'gray'\n        GH.color = 'gray'\n        HE.color = 'gray'\n        DH.opacite = 0.7\n        GH.opacite = 0.7\n        HE.opacite = 0.7\n      }\n      Xmin = Math.min(A.x, E.x) - 1\n      Ymin = Math.min(A.y, E.y) - 1\n      Xmax = Math.max(B.x, F.x) + 2\n      Ymax = Math.max(D.y, H.y) + 1\n      ppc = 20\n\n      if (this.sup2 < 3) { g = grille(Xmin, Ymin, Xmax, Ymax, 'gray', 0.7) } else { g = '' }\n      if (parseInt(this.sup2) === 2) { carreaux = seyes(Xmin, Ymin, Xmax, Ymax); sc = 0.8 } else { carreaux = ''; sc = 0.5 }\n\n      const params = {\n        xmin: Xmin,\n        ymin: Ymin,\n        xmax: Xmax,\n        ymax: Ymax,\n        pixelsParCm: ppc,\n        scale: sc\n      }\n\n      if (listeTypeDeQuestions[i] === 1) {\n        objetsEnonce.push(AB, BC, CD, DA, AE, labelPoint(A, B, C, D, E),\n          g,\n          carreaux\n        )\n      }\n\n      if (listeTypeDeQuestions[i] === 2) {\n        objetsEnonce.push(AB, BC, CD, DA, AE, labelPoint(A, B, C, D, E),\n          g,\n          carreaux\n        )\n      }\n\n      if (listeTypeDeQuestions[i] === 4) {\n        objetsEnonce.push(AB, DA, BD, AE,\n          g,\n          carreaux\n        )\n      }\n\n      if (listeTypeDeQuestions[i] === 6) {\n        objetsEnonce.push(AB, BF, tracePoint(I, 0.5, 'red'), labelPoint(I),\n          g,\n          carreaux\n        )\n      }\n\n      enonce += mathalea2d(params, objetsEnonce)\n      if (listeTypeDeQuestions[i] === 1) {\n        AB.color = 'green'\n        BC.color = 'red'\n        CD.color = 'green'\n        DA.color = 'red'\n        EF.color = 'green'\n        FG.color = 'red'\n        GH.color = 'green'\n        HE.color = 'red'\n        AE.color = 'blue'\n        BF.color = 'blue'\n        CG.color = 'blue'\n        DH.color = 'blue'\n        objetsCorrection.push(AB, BC, CD, DA, EF, FG, GH, HE, AE, BF, CG, DH, labelPoint(A, B, C, D, E, F, G, H),\n          g,\n          carreaux\n        )\n      }\n\n      if (listeTypeDeQuestions[i] === 2) {\n        AB.color = 'green'\n        BC.color = 'red'\n        CD.color = 'green'\n        DA.color = 'red'\n        EF.color = 'green'\n        FG.color = 'red'\n        GH.color = 'green'\n        HE.color = 'red'\n        AE.color = 'blue'\n        BF.color = 'blue'\n        CG.color = 'blue'\n        DH.color = 'blue'\n        objetsCorrection.push(AB, BC, CD, DA, EF, FG, GH, HE, AE, BF, CG, DH, labelPoint(A, B, C, D, E, F, G, H),\n          g,\n          carreaux\n        )\n      }\n\n      if (listeTypeDeQuestions[i] === 4) {\n        AB.color = 'green'\n        BC.color = 'red'\n        CD.color = 'green'\n        DA.color = 'red'\n        EF.color = 'green'\n        FG.color = 'red'\n        GH.color = 'green'\n        HE.color = 'red'\n        AE.color = 'blue'\n        BF.color = 'blue'\n        CG.color = 'blue'\n        DH.color = 'blue'\n        objetsCorrection.push(AB, DA, BD, EF, HE, AE, BF, DH, FH,\n          g,\n          carreaux\n        )\n      }\n\n      if (listeTypeDeQuestions[i] === 6) {\n        AB.color = 'green'\n        BC.color = 'red'\n        CD.color = 'green'\n        DA.color = 'red'\n        EF.color = 'green'\n        FG.color = 'red'\n        GH.color = 'green'\n        HE.color = 'red'\n        AE.color = 'blue'\n        BF.color = 'blue'\n        CG.color = 'blue'\n        DH.color = 'blue'\n        objetsCorrection.push(AB, EF, AE, BF, IA, IB, IE, IF, tracePoint(I),\n          g,\n          carreaux\n        )\n      }\n\n      correction += mathalea2d(params, objetsCorrection)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(enonce + '<br>')\n        this.listeCorrections.push(correction + '<br>')\n        // Pour AMC question AmcOpen\n        this.autoCorrection[i] = { enonce: enonce, propositions: [{ texte: correction, statut: 3, feedback: '' }] }\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de solides', 3, '1 : Cubes\\n 2 : Pavés droits\\n 3 : Mélange cubes et pavés']\n\n  this.besoinFormulaire2Numerique = [\n    'Type de cahier',\n    3,\n    '1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","titre","RepresenterUnSolide","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","sup2","classe","nouvelleVersion","typeDeQuestionsDisponibles","autoCorrection","parseInt","listeTypeDeQuestions","combinaisonListes","Xmin","Xmax","Ymin","Ymax","ppc","sc","A","B","C","D","E","F","G","H","I","AB","BC","CD","DA","EF","FG","GH","HE","AE","BF","CG","DH","IA","IB","IE","IF","BD","FH","coeffpersp","enonce","correction","carreaux","g","listeQuestions","listeCorrections","objetsEnonce","objetsCorrection","matrace","tracePoint","texte","i","cpt","nom","creerNomDePolygone","anglepersp","choice","context","point","similitude","x","Math","round","y","randint","translation2Points","milieu","taille","opacite","epaisseur","style","segment","color","pointilles","min","max","grille","seyes","params","xmin","ymin","xmax","ymax","pixelsParCm","scale","push","labelPoint","mathalea2d","indexOf","propositions","statut","feedback","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}