{"version":3,"sources":["webpack://mathalea/./src/js/exercices/2e/2G11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Milieu","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","a","ux","uy","g","s","xA","yA","xB","yB","xC","yC","xD","yD","XAB","YAB","xI0","xI1","yI0","yI1","xJ0","xJ1","yJ0","yJ1","A","B","T","L","texte","texteCorr","i","cpt","randint","choice","fractionSimplifiee","grille","point","axes","segment","tracePoint","labelPoint","mathalea2d","xmin","ymin","xmax","ymax","ecritureParentheseSiNegatif","texNombre","xI","yI","thick","step","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"mMAKO,MAAMA,EAAQ,gEAMN,SAASC,IACpBC,eAAcC,MACdA,KAAKH,MAAQA,EAEbG,KAAKC,YAAc,EACnBD,KAAKE,OAAS,EACdF,KAAKG,WAAa,EAClBH,KAAKI,IAAM,EAEXJ,KAAKK,gBAAkB,WACnBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxB,IAA+CC,EAA3CC,EAA8B,CAAC,EAAG,EAAG,EAAG,GAC5B,GAAZT,KAAKI,MACLK,EAA8B,CAAC,IAEnB,GAAZT,KAAKI,MACLK,EAA8B,CAAC,IAEnB,GAAZT,KAAKI,MACLK,EAA8B,CAAC,EAAG,IAEtC,IAAIC,GAAuBC,SAAkBF,EAA6BT,KAAKC,aAC/E,IAAK,IAAWW,EAAGC,EAAIC,EAAIC,EAAEC,EAAGC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAGC,EAAGC,EAAGC,EAAGC,EAAOC,EAA5HC,EAAI,EAAmIC,EAAM,EAAGD,EAAIzC,KAAKC,aAAeyC,EAAM,IAAK,CAExL,OADAlC,EAAmBE,EAAqB+B,GAChCjC,GAGJ,KAAK,EAEDS,GAAK0B,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjC1B,GAAKyB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjCzB,GAAKwB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjCxB,GAAKuB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IAC7BzB,GAAMF,GAAMC,GAAME,IAAMD,IAAUwB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,KAElEnB,GAAON,EAAKF,IAAOE,EAAKF,GACxBS,GAAON,EAAKF,IAAOE,EAAKF,GACxBS,GAAMkB,SAAmB5B,EAAKE,EAAI,GAAG,GACrCS,GAAMiB,SAAmB5B,EAAKE,EAAI,GAAG,GACrCU,GAAMgB,SAAmB3B,EAAKE,EAAI,GAAG,GACrCU,GAAMe,SAAmB3B,EAAKE,EAAI,GAAG,GAErCL,GAAI+B,UAAQ,GAAI,EAAG,EAAG,GACtBX,GAAIY,SAAM9B,EAAIC,EAAI,KAClBkB,GAAIW,SAAM5B,EAAIC,EAAI,KAClBR,GAAIoC,UAAM,GAAI,EAAG,EAAG,GACpBhC,GAAIiC,SAAQd,EAAGC,EAAG,QAClBC,GAAIa,SAAWf,EAAGC,GAClBE,GAAIa,SAAWhB,EAAGC,GAClBG,EAAS,sEACTA,GAAU,aAAYtB,KAAMC,0BAA2BC,KAAMC,aAC7DmB,GAAU,wEAEVC,GAAYY,SAAW,CACnBC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,KAAM,GACP5C,EAAGG,EAAGsB,EAAGrB,EAAGsB,GAGfE,GAAc,6GACdA,GAAc,iEACdA,GAAc,iEACdA,GAAc,wCACdA,GAAc,8BAA6BvB,MAAMwC,SAA4BtC,2BAA4BD,MAAMuC,SAA4BrC,sBAC3IoB,GAAc,mDAAiDkB,SAAUzC,EAAKE,0BAA0BuC,SAAUxC,EAAKE,sBAC5G,GAAPQ,GAAmB,GAAPE,IAAYU,GAAc,mDAAkDb,MAAQC,cAAgBC,MAAQC,gBACjH,GAAPF,GAAmB,GAAPE,IAAYU,GAAc,2CAA0Cb,aAAeE,MAAQC,eAChG,GAAPF,GAAmB,GAAPE,IAAYU,GAAc,mDAAkDb,MAAQC,MAAQC,cACjG,GAAPD,GAAmB,GAAPE,IAAYU,GAAc,2CAA0Cb,KAAOE,cAI3F,MACJ,KAAK,EAGDZ,GAAK0B,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjC1B,GAAKyB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjCe,IAAKhB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjCgB,IAAKjB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IAC7Be,IAAM1C,GAAM2C,IAAM1C,IAAMyC,KAAUhB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,KAElEnB,GAAON,EAAKF,IAAOE,EAAKF,GACxBS,GAAON,EAAKF,IAAOE,EAAKF,GACxBS,GAAMkB,SAAmB5B,EAAKE,EAAI,GAAG,GACrCS,GAAMiB,SAAmB5B,EAAKE,EAAI,GAAG,GACrCU,GAAMgB,SAAmB3B,EAAKE,EAAI,GAAG,GACrCU,GAAMe,SAAmB3B,EAAKE,EAAI,GAAG,GACrCL,GAAI+B,UAAQ,GAAI,EAAG,EAAG,GACtBX,GAAIY,SAAM9B,EAAIC,EAAI,IAAK,OACvBkB,GAAIW,SAAM5B,EAAIC,EAAI,IAAK,OACvBR,GAAIoC,UAAM,GAAI,EAAG,EAAG,GACpBhC,GAAIiC,SAAQd,EAAGC,EAAG,QAClBC,GAAIa,SAAWf,EAAGC,GAClBE,GAAIa,SAAWhB,EAAGC,GAClBG,EAAS,sEACTA,GAAU,aAAYtB,KAAMC,0BAA2ByC,MAAMC,cAC7DrB,GAAU,0FAGVC,GAAYY,SAAW,CACnBC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,KAAM,GACPnB,EAAGC,EAAGvB,EAAGH,EAAGI,GAGfwB,GAAc,6GACdA,GAAc,iEACdA,GAAc,iEACdA,GAAc,wCACdA,GAAc,kBAAiBmB,cAAc1C,kBAAmB2C,cAAc1C,yBAC9EsB,GAAc,qCAAoCmB,QAAOF,SAA4BxC,wBAAyB2C,OAAMH,SAA4BvC,kBAChJsB,GAAc,4CAA0CkB,SAAU,EAAIC,GAAK1C,eAAeyC,SAAU,EAAIE,GAAK1C,kBAC7GsB,GAAc,6BAA2BkB,SAAU,EAAIC,GAAK1C,OAAOyC,SAAU,EAAIE,GAAK1C,cACtF,MACJ,KAAK,EAEDD,GAAK0B,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjC1B,GAAKyB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjC/B,GAAK8B,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjC9B,GAAK6B,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjCzB,EAAKF,EAAKJ,EACVO,EAAKF,EAAKJ,EACVO,GAAKsB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjCtB,GAAKqB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IAC7BvB,GAAMJ,GAAMC,GAAMI,IAAMD,IAAUsB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,KAClErB,EAAKF,EAAKR,EACVW,EAAKF,EAAKR,EACVa,GAAMkB,SAAmB5B,EAAKM,EAAI,GAAG,GACrCK,GAAMiB,SAAmB5B,EAAKM,EAAI,GAAG,GACrCM,GAAMgB,SAAmB3B,EAAKM,EAAI,GAAG,GACrCM,GAAMe,SAAmB3B,EAAKM,EAAI,GAAG,GACrCO,GAAMc,SAAmB1B,EAAKE,EAAI,GAAG,GACrCW,GAAMa,SAAmB1B,EAAKE,EAAI,GAAG,GACrCY,GAAMY,SAAmBzB,EAAKE,EAAI,GAAG,GACrCY,GAAMW,SAAmBzB,EAAKE,EAAI,GAAG,GACrCP,GAAI+B,UAAQ,GAAI,EAAG,EAAG,GACtBX,GAAIY,SAAM9B,EAAIC,EAAI,IAAK,OACvBkB,GAAIW,SAAM5B,EAAIC,EAAI,IAAK,OACvBR,GAAIoC,SAAKK,MAAQ,EAAGC,MAAQ,EAAGC,KAAO,EAAGC,KAAO,EAAGK,MAAQ,GAAIC,KAAO,GACtE9C,GAAIiC,SAAQd,EAAGC,EAAG,QAClBC,GAAIa,SAAWf,EAAGC,GAClBE,GAAIa,SAAWhB,EAAGC,GAGlBG,EAAS,0EACTA,GAAU,aAAYtB,KAAMC,yBAA0BC,KAAMC,cAC5DmB,GAAU,aAAYlB,KAAMC,yBAA0BC,KAAMC,cAC5De,GAAU,mEAEVC,GAAYY,SAAW,CACnBC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,KAAM,GACPnB,EAAGC,EAAGvB,EAAGH,EAAGI,GAGfwB,GAAc,4GACdA,GAAc,iGACdA,GAAc,+FACdA,GAAc,iEACdA,GAAc,iEACdA,GAAc,wCACdA,GAAc,8BAA6BvB,MAAMwC,SAA4BlC,2BAA4BL,MAAMuC,SAA4BjC,sBAC3IgB,GAAc,mDAAiDkB,SAAUzC,EAAKM,0BAA0BmC,SAAUxC,EAAKM,sBAC5G,GAAPI,GAAmB,GAAPE,IAAYU,GAAc,mDAAkDb,MAAQC,cAAgBC,MAAQC,gBACjH,GAAPF,GAAmB,GAAPE,IAAYU,GAAc,2CAA0Cb,aAAeE,MAAQC,eAChG,GAAPF,GAAmB,GAAPE,IAAYU,GAAc,mDAAkDb,MAAQC,MAAQC,cACjG,GAAPD,GAAmB,GAAPE,IAAYU,GAAc,2CAA0Cb,KAAOE,cAC3FW,GAAc,2DACdA,GAAc,iEACdA,GAAc,wCACdA,GAAc,8BAA6BrB,MAAMsC,SAA4BpC,2BAA4BD,MAAMqC,SAA4BnC,sBAC3IkB,GAAc,mDAAiDkB,SAAUvC,EAAKE,0BAA0BqC,SAAUtC,EAAKE,sBAC5G,GAAPU,GAAmB,GAAPE,IAAYM,GAAc,mDAAkDT,MAAQC,cAAgBC,MAAQC,gBACjH,GAAPF,GAAmB,GAAPE,IAAYM,GAAc,2CAA0CT,aAAeE,MAAQC,eAChG,GAAPF,GAAmB,GAAPE,IAAYM,GAAc,mDAAkDT,MAAQC,MAAQC,cACjG,GAAPD,GAAmB,GAAPE,IAAYM,GAAc,2CAA0CT,KAAOE,cAC3FO,GAAc,+HACdA,GAAc,0CACd,MACJ,KAAK,EAIDvB,GAAK0B,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjC1B,GAAKyB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjC/B,GAAK8B,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjC9B,GAAK6B,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjCzB,EAAKF,EAAKJ,EACVO,EAAKF,EAAKJ,EACVO,GAAKsB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IACjCtB,GAAKqB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IAC7BvB,GAAMJ,GAAMC,GAAMI,IAAMD,IAAUsB,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,KAClErB,EAAKF,EAAKR,GAAK8B,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IAC3CpB,EAAKF,EAAKR,GAAK6B,SAAQ,EAAG,IAAKC,SAAO,EAAE,EAAG,IAC3CjB,GAAMkB,SAAmB5B,EAAKM,EAAI,GAAG,GACrCK,GAAMiB,SAAmB5B,EAAKM,EAAI,GAAG,GACrCM,GAAMgB,SAAmB3B,EAAKM,EAAI,GAAG,GACrCM,GAAMe,SAAmB3B,EAAKM,EAAI,GAAG,GACrCO,GAAMc,SAAmB1B,EAAKE,EAAI,GAAG,GACrCW,GAAMa,SAAmB1B,EAAKE,EAAI,GAAG,GACrCY,GAAMY,SAAmBzB,EAAKE,EAAI,GAAG,GACrCY,GAAMW,SAAmBzB,EAAKE,EAAI,GAAG,GACrCP,GAAI+B,UAAQ,GAAI,EAAG,EAAG,GACtBX,GAAIY,SAAM9B,EAAIC,EAAI,IAAK,OACvBkB,GAAIW,SAAM5B,EAAIC,EAAI,IAAK,OACvBR,GAAIoC,UAAM,GAAI,EAAG,EAAG,GACpBhC,GAAIiC,SAAQd,EAAGC,EAAG,QAClBC,GAAIa,SAAWf,EAAGC,GAClBE,GAAIa,SAAWhB,EAAGC,GAElBG,EAAS,0EACTA,GAAU,aAAYtB,KAAMC,yBAA0BC,KAAMC,cAC5DmB,GAAU,aAAYlB,KAAMC,yBAA0BC,KAAMC,cAC5De,GAAU,mEAEVC,GAAYY,SAAW,CACnBC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,KAAM,GACPnB,EAAGC,EAAGvB,EAAGH,EAAGI,GAGfwB,GAAc,4GACdA,GAAc,iGACdA,GAAc,+FACdA,GAAc,iEACdA,GAAc,iEACdA,GAAc,wCACdA,GAAc,8BAA6BvB,MAAMwC,SAA4BlC,2BAA4BL,MAAMuC,SAA4BjC,sBAC3IgB,GAAc,mDAAiDkB,SAAUzC,EAAKM,0BAA0BmC,SAAUxC,EAAKM,sBAC5G,GAAPI,GAAmB,GAAPE,IAAYU,GAAc,mDAAkDb,MAAQC,cAAgBC,MAAQC,gBACjH,GAAPF,GAAmB,GAAPE,IAAYU,GAAc,2CAA0Cb,aAAeE,MAAQC,eAChG,GAAPF,GAAmB,GAAPE,IAAYU,GAAc,mDAAkDb,MAAQC,MAAQC,cACjG,GAAPD,GAAmB,GAAPE,IAAYU,GAAc,2CAA0Cb,KAAOE,cAC3FW,GAAc,2DACdA,GAAc,iEACdA,GAAc,wCACdA,GAAc,8BAA6BrB,MAAMsC,SAA4BpC,2BAA4BD,MAAMqC,SAA4BnC,sBAC3IkB,GAAc,mDAAiDkB,SAAUvC,EAAKE,0BAA0BqC,SAAUtC,EAAKE,sBAC5G,GAAPU,GAAmB,GAAPE,IAAYM,GAAc,mDAAkDT,MAAQC,cAAgBC,MAAQC,gBACjH,GAAPF,GAAmB,GAAPE,IAAYM,GAAc,2CAA0CT,aAAeE,MAAQC,eAChG,GAAPF,GAAmB,GAAPE,IAAYM,GAAc,mDAAkDT,MAAQC,MAAQC,cACjG,GAAPD,GAAmB,GAAPE,IAAYM,GAAc,2CAA0CT,KAAOE,cAC3FO,GAAc,4IACdA,GAAc,iDAGsB,IAAxCxC,KAAKM,eAAeyD,QAAQxB,KAC5BvC,KAAKM,eAAe0D,KAAKzB,GACzBvC,KAAKO,iBAAiByD,KAAKxB,GAC3BC,KAEJC,KAEJuB,SAAwBjE,OAE5BA,KAAKkE,0BAA4B,CAAC,uBAAwB,EAAG,uH,6BC9QlD,SAASnE,IAEtBC,KAAKH,MAAQ,GACbG,KAAKmE,SAAW,GAChBnE,KAAKoE,mBAAqB,GAC1BpE,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKqE,aAAe,GACpBrE,KAAKsE,QAAU,GACftE,KAAKuE,kBAAoB,GACzBvE,KAAKC,YAAc,GACnBD,KAAKE,OAAS,EACdF,KAAKG,WAAa,EAClBH,KAAKwE,QAAU,EACfxE,KAAKyE,YAAc,EACnBzE,KAAK0E,QAAS,EAEd1E,KAAKkE,2BAA4B,EACjClE,KAAK2E,uBAAwB,EAC7B3E,KAAK4E,6BAA8B,EACnC5E,KAAK6E,oBAAqB,EAC1B7E,KAAK8E,uBAAwB,EAC7B9E,KAAK+E,kBAAmB,EACxB/E,KAAKgF,sBAAuB,EAC5BhF,KAAKiF,mBAAoB,EACzBjF,KAAKkF,uBAAwB,EAC7BlF,KAAKmF,+BAAgC,EACrCnF,KAAKoF,qBAAsB,EAC3BpF,KAAKqF,MAAQ,GACbrF,KAAKsF,YAAa,EAClBtF,KAAKuF,gBAAkB,GAMvBvF,KAAKwF,mBAAoB,EACzBxF,KAAKyF,YAAa,EAClBzF,KAAK0F,uBAAwB,EAC7B1F,KAAK2F,KAAM,EACX3F,KAAK4F,eAAgB,EACrB5F,KAAK6F,SAAU,EACf7F,KAAK8F,eAAiB,GACtB9F,KAAK+F,sBAAwB,GAC7B/F,KAAKgG,cAAe,EACpBhG,KAAKK,gBAAkB,SAAU4F,KACjCjG,KAAKkG,cAAgB,G","file":"js/287.833d82c719c81054445e.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,ecritureParentheseSiNegatif,fractionSimplifiee,texNombre} from '../../modules/outils.js'\nimport {point,tracePoint,labelPoint,segment,axes,grille,mathalea2d,} from '../../modules/2d.js'\n\nexport const titre = 'Déterminer les coordonnées milieu d’un segment dans un repère'\n\n/**\n * 2G11\n * @author Stéphane Guyon\n */\nexport default function Milieu() {\n    Exercice.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n\n    this.nbQuestions = 2;\n    this.nbCols = 2;\n    this.nbColsCorr = 2;\n    this.sup = 1; // \n\n    this.nouvelleVersion = function () {\n        this.listeQuestions = []; // Liste de questions\n        this.listeCorrections = []; // Liste de questions corrigées\n        let typesDeQuestionsDisponibles = [1, 2, 3, 4],typesDeQuestions\n        if (this.sup == 1) {\n            typesDeQuestionsDisponibles = [1];\n        }\n        if (this.sup == 2) {\n            typesDeQuestionsDisponibles = [2];\n        }\n        if (this.sup == 3) {\n            typesDeQuestionsDisponibles = [3, 4];\n        }\n        let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions);\n        for (let i = 0, a, ux, uy, g,s, xA, yA, xB, yB, xC, yC, xD, yD, XAB, YAB, xI0, xI1, yI0, yI1, xJ0, xJ1, yJ0, yJ1, A, B, T, L, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n            typesDeQuestions = listeTypeDeQuestions[i];\n            switch (typesDeQuestions) {\n                // Cas par cas, on définit le type de nombres que l'on souhaite\n                // Combien de chiffres ? Quelles valeurs ?\n                case 1:\n\n                    xA = randint(0, 9) * choice([-1, 1]);\n                    yA = randint(0, 5) * choice([-1, 1]);\n                    xB = randint(0, 5) * choice([-1, 1]);\n                    yB = randint(0, 5) * choice([-1, 1]);\n                    if (xB == xA && yA == yB) { xB = xB + randint(1, 5) * choice([-1, 1]); }\n\n                    XAB = (xB - xA) * (xB - xA);\n                    YAB = (yB - yA) * (yB - yA);\n                    xI0 = fractionSimplifiee(xA + xB, 2)[0];\n                    xI1 = fractionSimplifiee(xA + xB, 2)[1];\n                    yI0 = fractionSimplifiee(yA + yB, 2)[0];\n                    yI1 = fractionSimplifiee(yA + yB, 2)[1];\n\n                    g = grille(-9, -9, 9, 9);\n                    A = point(xA, yA, 'A');\n                    B = point(xB, yB, 'B');\n                    a = axes(-9, -9, 9, 9);\n                    s = segment(A, B, 'blue');\n                    T = tracePoint(A, B); // Repère les points avec une croix\n                    L = labelPoint(A, B);\n                    texte = `Dans un repère orthonormé $(O,I,J)$, on donne les points suivants :`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ et $B\\\\left(${xB};${yB}\\\\right)$`;\n                    texte += `<br>Déterminer les coordonnées du point $I$ milieu du segment $[AB]$ `;\n\n                    texteCorr = mathalea2d({\n                        xmin: -9,\n                        ymin: -9,\n                        xmax: 9,\n                        ymax: 9\n                    }, a, g, T, s, L);\n\n\n                    texteCorr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère orthonormé,`;\n                    texteCorr += `<br> alors les coordonnées du point $I$ milieu de $[AB]$ sont `;\n                    texteCorr += `$I\\\\left(\\\\dfrac{x_A+x_B}{2};\\\\dfrac{y_A+y_B}{2}\\\\right)$ <br>`;\n                    texteCorr += `On applique la relation à l'énoncé : `;\n                    texteCorr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${ecritureParentheseSiNegatif(xB)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${ecritureParentheseSiNegatif(yB)}}{2}\\\\end{cases}$`;\n                    texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${texNombre(xA + xB)}}{2}\\\\\\\\y_I=\\\\dfrac{${texNombre(yA + yB)}}{2}\\\\end{cases}$`;\n                    if (xI1 != 1 && yI1 != 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$`; }\n                    if (xI1 == 1 && yI1 != 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$`; }\n                    if (xI1 != 1 && yI1 == 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$`; }\n                    if (xI1 == 1 && yI1 == 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$`; }\n\n\n                    ;\n                    break;\n                case 2:\n\n\n                    xA = randint(0, 9) * choice([-1, 1]);\n                    yA = randint(0, 5) * choice([-1, 1]);\n                    xI = randint(0, 5) * choice([-1, 1]);\n                    yI = randint(0, 5) * choice([-1, 1]);\n                    if (xI == xA && yI == yA) { xI = xI + randint(1, 5) * choice([-1, 1]); }\n\n                    XAB = (xB - xA) * (xB - xA);\n                    YAB = (yB - yA) * (yB - yA);\n                    xI0 = fractionSimplifiee(xA + xB, 2)[0];\n                    xI1 = fractionSimplifiee(xA + xB, 2)[1];\n                    yI0 = fractionSimplifiee(yA + yB, 2)[0];\n                    yI1 = fractionSimplifiee(yA + yB, 2)[1];\n                    g = grille(-9, -9, 9, 9);\n                    A = point(xA, yA, 'A', 'red');\n                    B = point(xB, yB, 'B', 'red');\n                    a = axes(-9, -9, 9, 9);\n                    s = segment(A, B, 'blue');\n                    T = tracePoint(A, B); // Repère les points avec une croix\n                    L = labelPoint(A, B);\n                    texte = `Dans un repère orthonormé $(O,I,J)$, on donne les points suivants :`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ et $I\\\\left(${xI};${yI}\\\\right)$`;\n                    texte += `<br>Déterminer les coordonnées du point $B$ tel que I soit le milieu du segment $[AB]$ `;\n\n\n                    texteCorr = mathalea2d({\n                        xmin: -9,\n                        ymin: -9,\n                        xmax: 9,\n                        ymax: 9\n                    }, T, L, g, a, s);\n\n\n                    texteCorr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère orthonormé,`;\n                    texteCorr += ` <br>alors les coordonnées du point $I$ milieu de $[AB]$ sont `;\n                    texteCorr += `$I\\\\left(\\\\dfrac{x_A+x_B}{2};\\\\dfrac{y_A+y_B}{2}\\\\right)$ <br>`;\n                    texteCorr += `On applique la relation à l'énoncé : `;\n                    texteCorr += `$\\\\begin{cases}${xI}=\\\\dfrac{${xA}+x_B}{2} \\\\\\\\ ${yI}=\\\\dfrac{${yA}+y_B}{2}\\\\end{cases}$`;\n                    texteCorr += `$\\\\iff \\\\begin{cases}x_B=2\\\\times ${xI} -${ecritureParentheseSiNegatif(xA)} \\\\\\\\ y_B=2\\\\times ${yI}-${ecritureParentheseSiNegatif(yA)}\\\\end{cases}$`;\n                    texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_B={${texNombre(2 * xI - xA)}}\\\\\\\\y_B=${texNombre(2 * yI - yA)}\\\\end{cases}$`;\n                    texteCorr += `<br>Au final : $B\\\\left( ${texNombre(2 * xI - xA)};${texNombre(2 * yI - yA)}\\\\right)$`;\n                    break;\n                case 3:\n\n                    xA = randint(0, 9) * choice([-1, 1]);\n                    yA = randint(0, 9) * choice([-1, 1]);\n                    ux = randint(1, 9) * choice([-1, 1]);\n                    uy = randint(1, 9) * choice([-1, 1]);\n                    xB = xA + ux;\n                    yB = yA + uy;\n                    xC = randint(0, 5) * choice([-1, 1]);\n                    yC = randint(0, 9) * choice([-1, 1]);\n                    if (xC == xA && yA == yC) { xC = xC + randint(1, 5) * choice([-1, 1]); }\n                    xD = xC + ux;\n                    yD = yC + uy;\n                    xI0 = fractionSimplifiee(xA + xD, 2)[0];\n                    xI1 = fractionSimplifiee(xA + xD, 2)[1];\n                    yI0 = fractionSimplifiee(yA + yD, 2)[0];\n                    yI1 = fractionSimplifiee(yA + yD, 2)[1];\n                    xJ0 = fractionSimplifiee(xB + xC, 2)[0];\n                    xJ1 = fractionSimplifiee(xB + xC, 2)[1];\n                    yJ0 = fractionSimplifiee(yB + yC, 2)[0];\n                    yJ1 = fractionSimplifiee(yB + yC, 2)[1];\n                    g = grille(-9, -9, 9, 9);\n                    A = point(xA, yA, 'A', 'red');\n                    B = point(xB, yB, 'B', 'red');\n                    a = axes(xmin = -9, ymin = -9, xmax = 9, ymax = 9, thick = .2, step = 1);\n                    s = segment(A, B, 'blue');\n                    T = tracePoint(A, B); // Repère les points avec une croix\n                    L = labelPoint(A, B);\n\n\n                    texte = `Dans un repère orthonormé (O,I,J), on donne les 4 points suivants :<br>`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`;\n                    texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`;\n                    texte += `<br>Déterminer si le quadrilatère $ABDC$ est un parallélogramme.`;\n\n                    texteCorr = mathalea2d({\n                        xmin: -9,\n                        ymin: -9,\n                        xmax: 9,\n                        ymax: 9\n                    }, T, L, g, a, s);\n\n\n                    texteCorr += `<br>On sait que ABDC est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.$`;\n                    texteCorr += `<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère :`;\n                    texteCorr += `On sait d'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d'un repère ,`;\n                    texteCorr += `<br> alors les coordonnées du point $I$ milieu de $[AD]$ sont `;\n                    texteCorr += `$I\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>`;\n                    texteCorr += `On applique la relation à l'énoncé : `;\n                    texteCorr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${ecritureParentheseSiNegatif(xD)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${ecritureParentheseSiNegatif(yD)}}{2}\\\\end{cases}$`;\n                    texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${texNombre(xA + xD)}}{2}\\\\\\\\y_I=\\\\dfrac{${texNombre(yA + yD)}}{2}\\\\end{cases}$`;\n                    if (xI1 != 1 && yI1 != 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$`; }\n                    if (xI1 == 1 && yI1 != 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$`; }\n                    if (xI1 != 1 && yI1 == 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$`; }\n                    if (xI1 == 1 && yI1 == 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$`; }\n                    texteCorr += `<br> Les coordonnées du point $J$ milieu de $[BC]$ sont `;\n                    texteCorr += `$J\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>`;\n                    texteCorr += `On applique la relation à l'énoncé : `;\n                    texteCorr += `$\\\\begin{cases}x_J=\\\\dfrac{${xB}+${ecritureParentheseSiNegatif(xC)}}{2} \\\\\\\\ y_J=\\\\dfrac{${yB}+${ecritureParentheseSiNegatif(yC)}}{2}\\\\end{cases}$`;\n                    texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_J=\\\\dfrac{${texNombre(xB + xC)}}{2}\\\\\\\\y_J=\\\\dfrac{${texNombre(yB + yC)}}{2}\\\\end{cases}$`;\n                    if (xJ1 != 1 && yJ1 != 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$`; }\n                    if (xJ1 == 1 && yJ1 != 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$`; }\n                    if (xJ1 != 1 && yJ1 == 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$`; }\n                    if (xJ1 == 1 && yJ1 == 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};${yJ0}\\\\right)$`; }\n                    texteCorr += `<br>On observe que $I$ et $J$ ont les mêmes coordonnées, donc les deux diagonales du quadrilatère se coupent en leur milieu.`;\n                    texteCorr += `<br>$ABDC$ est donc un parallélogramme.`;\n                    break;\n                case 4:\n\n\n\n                    xA = randint(0, 9) * choice([-1, 1]);\n                    yA = randint(0, 9) * choice([-1, 1]);\n                    ux = randint(1, 9) * choice([-1, 1]);\n                    uy = randint(1, 9) * choice([-1, 1]);\n                    xB = xA + ux;\n                    yB = yA + uy;\n                    xC = randint(0, 5) * choice([-1, 1]);\n                    yC = randint(0, 9) * choice([-1, 1]);\n                    if (xC == xA && yA == yC) { xC = xC + randint(1, 5) * choice([-1, 1]); }\n                    xD = xC + ux + randint(1, 2) * choice([-1, 1]);\n                    yD = yC + uy + randint(0, 1) * choice([-1, 1]);\n                    xI0 = fractionSimplifiee(xA + xD, 2)[0];\n                    xI1 = fractionSimplifiee(xA + xD, 2)[1];\n                    yI0 = fractionSimplifiee(yA + yD, 2)[0];\n                    yI1 = fractionSimplifiee(yA + yD, 2)[1];\n                    xJ0 = fractionSimplifiee(xB + xC, 2)[0];\n                    xJ1 = fractionSimplifiee(xB + xC, 2)[1];\n                    yJ0 = fractionSimplifiee(yB + yC, 2)[0];\n                    yJ1 = fractionSimplifiee(yB + yC, 2)[1];\n                    g = grille(-9, -9, 9, 9);\n                    A = point(xA, yA, 'A', 'red');\n                    B = point(xB, yB, 'B', 'red');\n                    a = axes(-9, -9, 9, 9);\n                    s = segment(A, B, 'blue');\n                    T = tracePoint(A, B); // Repère les points avec une croix\n                    L = labelPoint(A, B);\n\n                    texte = `Dans un repère orthonormé (O,I,J), on donne les 4 points suivants :<br>`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`;\n                    texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`;\n                    texte += `<br>Déterminer si le quadrilatère $ABDC$ est un parallélogramme.`;\n\n                    texteCorr = mathalea2d({\n                        xmin: -9,\n                        ymin: -9,\n                        xmax: 9,\n                        ymax: 9\n                    }, T, L, g, a, s);\n\n\n                    texteCorr += `<br>On sait que ABDC est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.$`;\n                    texteCorr += `<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère :`;\n                    texteCorr += `On sait d'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d'un repère ,`;\n                    texteCorr += `<br> alors les coordonnées du point $I$ milieu de $[AD]$ sont `;\n                    texteCorr += `$I\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>`;\n                    texteCorr += `On applique la relation à l'énoncé : `;\n                    texteCorr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${ecritureParentheseSiNegatif(xD)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${ecritureParentheseSiNegatif(yD)}}{2}\\\\end{cases}$`;\n                    texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${texNombre(xA + xD)}}{2}\\\\\\\\y_I=\\\\dfrac{${texNombre(yA + yD)}}{2}\\\\end{cases}$`;\n                    if (xI1 != 1 && yI1 != 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$`; }\n                    if (xI1 == 1 && yI1 != 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$`; }\n                    if (xI1 != 1 && yI1 == 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$`; }\n                    if (xI1 == 1 && yI1 == 1) { texteCorr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$`; }\n                    texteCorr += `<br> Les coordonnées du point $J$ milieu de $[BC]$ sont `;\n                    texteCorr += `$J\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>`;\n                    texteCorr += `On applique la relation à l'énoncé : `;\n                    texteCorr += `$\\\\begin{cases}x_J=\\\\dfrac{${xB}+${ecritureParentheseSiNegatif(xC)}}{2} \\\\\\\\ y_J=\\\\dfrac{${yB}+${ecritureParentheseSiNegatif(yC)}}{2}\\\\end{cases}$`;\n                    texteCorr += `<br>On en déduit :  $\\\\begin{cases}x_J=\\\\dfrac{${texNombre(xB + xC)}}{2}\\\\\\\\y_J=\\\\dfrac{${texNombre(yB + yC)}}{2}\\\\end{cases}$`;\n                    if (xJ1 != 1 && yJ1 != 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$`; }\n                    if (xJ1 == 1 && yJ1 != 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$`; }\n                    if (xJ1 != 1 && yJ1 == 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$`; }\n                    if (xJ1 == 1 && yJ1 == 1) { texteCorr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};${yJ0}\\\\right)$`; }\n                    texteCorr += `<br>On observe que $I$ et $J$ n'ont pas les mêmes coordonnées, donc les deux diagonales du quadrilatère ne se coupent pas en leur milieu.`;\n                    texteCorr += `<br>$ABDC$ n'est donc pas un parallélogramme.`;\n                    break;\n            }\n            if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n                this.listeQuestions.push(texte);\n                this.listeCorrections.push(texteCorr);\n                i++;\n            }\n            cpt++;\n        }\n        listeQuestionsToContenu(this);\n    };\n    this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Application directe de la formule 2 : Application indirecte de la formule 3: Caractériser un parallélogramme.'];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}