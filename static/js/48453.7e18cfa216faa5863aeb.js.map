{"version":3,"file":"js/48453.7e18cfa216faa5863aeb.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5I11.js","webpack://mathalea/./src/js/exercices/6e/6I11.js"],"sourcesContent":["/* eslint-disable camelcase */\nimport NoteLaCouleur6e from '../6e/6I11.js'\nexport const titre = 'Note la couleur (scratch) 5e'\n\nexport default function NoteLaCouleur5e () {\n  'use strict'\n  NoteLaCouleur6e.call(this)\n  this.relatif = true\n}\n","/* eslint-disable camelcase */\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { randint, choice, texteGras, modalUrl, modalPdf, contraindreValeur, listeQuestionsToContenu, combinaisonListes, texNombre } from '../../modules/outils.js'\nimport { attendre, angleScratchTo2d, clone, orienter, mathalea2d, scratchblock, creerLutin, baisseCrayon, allerA, point, texteParPositionEchelle } from '../../modules/2d.js'\nimport { noteLaCouleur, plateau2dNLC } from '../../modules/noteLaCouleur.js'\nexport const titre = 'Note la couleur (scratch)'\n\n/**\n * Note_la_couleur() Exercice inspiré de l'activité débranchée de Jean-Yves Labouche Note La Couleur\n * https://www.monclasseurdemaths.fr/profs/algorithmique-scratch/note-la-couleur/\n * Ref : 6I11\n * Publié le 11/04/2021\n * @author Jean-Claude Lhote\n * A faire : ajouter d'autres niveaux avec des instructions conditionnelles, des blocs définis...\n */\n/**\n * Fonction exercice.\n */\nexport default function NoteLaCouleur6e () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  this.typeExercice = 'Scratch'\n  this.listePackages = 'scratch3'\n  this.sup = 1\n  this.sup2 = 1\n  this.sup3 = 4\n  this.sup4 = false\n  this.relatif = false\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = true\n\n  this.nouvelleVersion = function (numeroExercice) {\n    const damier = [\n      ['Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc'],\n      ['Blanc', 'Noir', 'Jaune', 'Bleu', 'Vert', 'Orange', 'Rouge', 'Orange', 'Noir', 'Jaune', 'Gris', 'Vert', 'Rose', 'Noir', 'Jaune', 'Blanc'],\n      ['Blanc', 'Rouge', 'Bleu', 'Orange', 'Jaune', 'Rose', 'Gris', 'Jaune', 'Rose', 'Gris', 'Jaune', 'Bleu', 'Rouge', 'Gris', 'Rouge', 'Blanc'],\n      ['Blanc', 'Rose', 'Vert', 'Gris', 'Rouge', 'Noir', 'Bleu', 'Vert', 'Noir', 'Vert', 'Bleu', 'Rose', 'Gris', 'Vert', 'Orange', 'Blanc'],\n      ['Blanc', 'Vert', 'Bleu', 'Rose', 'Vert', 'Bleu', 'Orange', 'Gris', 'Rouge', 'Orange', 'Jaune', 'Gris', 'Rouge', 'Rose', 'Bleu', 'Blanc'],\n      ['Blanc', 'Noir', 'Orange', 'Rouge', 'Orange', 'Jaune', 'Rouge', 'Blanc', 'Blanc', 'Noir', 'Gris', 'Orange', 'Noir', 'Jaune', 'Rose', 'Blanc'],\n      ['Blanc', 'Rose', 'Gris', 'Noir', 'Bleu', 'Vert', 'Bleu', 'Blanc', 'Blanc', 'Rouge', 'Bleu', 'Gris', 'Vert', 'Rouge', 'Noir', 'Blanc'],\n      ['Blanc', 'Noir', 'Rouge', 'Rose', 'Vert', 'Orange', 'Rose', 'Noir', 'Orange', 'Vert', 'Jaune', 'Rose', 'Noir', 'Rose', 'Vert', 'Blanc'],\n      ['Blanc', 'Orange', 'Gris', 'Rouge', 'Jaune', 'Noir', 'Vert', 'Rouge', 'Rose', 'Noir', 'Bleu', 'Vert', 'Jaune', 'Orange', 'Gris', 'Blanc'],\n      ['Blanc', 'Bleu', 'Jaune', 'Orange', 'Vert', 'Gris', 'Jaune', 'Gris', 'Orange', 'Gris', 'Rose', 'Bleu', 'Rouge', 'Bleu', 'Orange', 'Blanc'],\n      ['Blanc', 'Rose', 'Bleu', 'Jaune', 'Rose', 'Orange', 'Rouge', 'Bleu', 'Noir', 'Jaune', 'Gris', 'Vert', 'Jaune', 'Noir', 'Rouge', 'Blanc'],\n      ['Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc']\n    ]\n    this.sup = contraindreValeur(1, 4, this.sup, 1)\n    const echelleDessin = 0.5\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    let j, test\n    let objetsEnonce = []; let objetsCorrection = []\n    const paramsCorrection = this.relatif\n      ? { xmin: -13, ymin: -10, xmax: 13, ymax: 10, pixelsParCm: 20, scale: echelleDessin }\n      : { xmin: -1, ymin: -1, xmax: 25, ymax: 19, pixelsParCm: 20, scale: echelleDessin }\n    let commandes_disponibles; const sequences_disponibles = []; let sequence; let result; let nb_couleurs; let instruction; let couleurs; let liste_instructions\n\n    let lutin, lutindepart\n    let angledepart\n    let xdepart\n    let ydepart\n    context.unitesLutinParCm = 20\n    context.pixelsParCm = 20\n    let pion\n    const typeDeQuestion = Number(this.sup2) === 1 ? combinaisonListes([1], this.nbQuestions) : Number(this.sup2) === 2 ? combinaisonListes([2], this.nbQuestions) : combinaisonListes([1, 2], this.nbQuestions)\n    const lePlateau = plateau2dNLC({ type: this.sup, melange: this.sup4, scale: echelleDessin, relatif: this.relatif, nx: 16, ny: 12, pas: 30, plateau: damier })\n    for (let q = 0; q < this.nbQuestions;) {\n      objetsCorrection = []\n      objetsEnonce = []\n      objetsEnonce.push(lePlateau)\n      objetsCorrection.push(lePlateau)\n      let texte = ''\n      let texteCorr = ''\n      let compteur = 0\n      let retour_a_la_case_depart\n      let compteur_essais_boucle\n      let compteur_essais_sequence\n      switch (typeDeQuestion[q]) {\n        case 1: {\n          commandes_disponibles = [['AV30', 'AV60', 'AV90', 'AV120', 'AV150'], ['TD90', 'TG90', 'TG90', 'TG180']]\n          for (let m = 0, ins1; m < 5; m++) {\n            for (let n = 0, ins2; n < 4; n++) {\n              ins1 = commandes_disponibles[0][m]\n              ins2 = commandes_disponibles[1][n]\n              sequences_disponibles.push([ins1, ins2, 'NLC'], [ins2, ins1, 'NLC'])\n            }\n          }\n          retour_a_la_case_depart = true\n          while (retour_a_la_case_depart) {\n            objetsEnonce.length = 1\n            lutin = creerLutin()\n            angledepart = choice([90, 0, -90, 180])\n            xdepart = -225 + randint(4, 11) * 30 + (this.relatif ? 0 : 240)\n            ydepart = -165 + randint(3, 8) * 30 + (this.relatif ? 0 : 180)\n\n            pion = noteLaCouleur({ x: xdepart, y: ydepart, orientation: angledepart, plateau: lePlateau.plateauNLC, relatif: this.relatif })\n            lutin.color = context.isHtml ? 'green' : 'black'\n            lutin.epaisseur = 2\n            lutin.pointilles = 2\n            allerA(xdepart, ydepart, lutin)\n            orienter(angleScratchTo2d(angledepart), lutin)\n            lutindepart = clone(lutin)\n            baisseCrayon(lutindepart)\n            allerA(xdepart, ydepart, lutindepart)\n            objetsEnonce.push(lutindepart)\n            baisseCrayon(lutin)\n            compteur++\n            if (compteur > 5) break\n            pion.codeScratch = ''\n            couleurs = []\n            nb_couleurs = parseInt(this.sup3)\n            liste_instructions = []\n            j = 0\n            compteur_essais_sequence = 0\n            pion.codeScratch = '\\\\begin{scratch}[print,fill,blocks,scale=0.7]\\n \\\\blockinit{quand \\\\greenflag est cliqué}\\n '\n            pion.codeScratch += `\\\\blockmove{aller à x: \\\\ovalnum{${xdepart}} y: \\\\ovalnum{${ydepart}}}\\n \\\\blockmove{s'orienter à \\\\ovalnum{${angledepart}}}\\n`\n            pion.currentIndex += pion.codeScratch.length\n            while (nb_couleurs > j && compteur_essais_sequence < 10) {\n              compteur_essais_sequence = 0\n              sequence = choice(sequences_disponibles)\n              test = pion.testSequence(sequence)\n              while (!test[0] && compteur_essais_sequence < 10) {\n                compteur_essais_sequence++\n                sequence = choice(sequences_disponibles)\n                test = pion.testSequence(sequence)\n              }\n              if (compteur_essais_sequence < 10) {\n                retour_a_la_case_depart = false\n                for (let i = 0; i < sequence.length; i++) {\n                  instruction = sequence[i]\n                  result = pion.testInstruction(instruction, lutin)\n                  if (instruction === 'NLC') {\n                    liste_instructions.push(instruction)\n                    couleurs.push(pion.nlc())\n                    j++\n                    pion.codeScratch += result[4] + '\\n'\n                    pion.currentIndex += result[4].length + 1\n                    lutin = result[5]\n                    attendre(5, lutin)\n                  } else {\n                    liste_instructions.push(instruction)\n                    pion.currentPos.x = result[1]\n                    pion.currentPos.y = result[2]\n                    pion.currentOrientation = result[3]\n                    pion.codeScratch += result[4] + '\\n'\n                    pion.currentIndex += result[4].length + 1\n                    lutin = result[5]\n                  }\n                }\n              } else {\n                angledepart = choice([90, 0, -90, 180])\n                xdepart = -225 + randint(4, 11) * 30 + (this.relatif ? 0 : 240)\n                ydepart = -165 + randint(3, 8) * 30 + (this.relatif ? 0 : 180)\n              }\n            }\n          }\n\n          break\n        }\n        case 2: { // programmes à boucles\n          commandes_disponibles = [['AV30', 'AV60', 'AV90', 'AV120'], ['TD90', 'TG90', 'TD90', 'TG180']]\n          for (let m = 0, ins1; m < 3; m++) {\n            for (let n = 0, ins2; n < 3; n++) {\n              for (let p = 0, ins3; p < 3; p++) {\n                for (let q = 0, ins4; q < 3; q++) {\n                  ins1 = commandes_disponibles[0][m]\n                  ins2 = commandes_disponibles[1][n]\n                  ins3 = commandes_disponibles[0][p]\n                  ins4 = commandes_disponibles[1][q]\n                  sequences_disponibles.push([ins1, ins2, 'NLC', ins3, ins4], [ins2, ins1, 'NLC', ins3, ins4], [ins1, ins2, 'NLC', ins4, ins3], [ins2, ins1, 'NLC', ins4, ins3],\n                    [ins1, ins2, ins3, 'NLC', ins4], [ins2, ins1, ins4, ins3, 'NLC'], [ins1, 'NLC', ins2, ins3, ins4], [ins2, 'NLC', ins1, ins4, ins3])\n                }\n              }\n            }\n          }\n\n          retour_a_la_case_depart = true\n          couleurs = []\n          nb_couleurs = parseInt(this.sup3)\n          liste_instructions = []\n          const repetitions = nb_couleurs - 1\n          while (retour_a_la_case_depart) {\n            objetsEnonce.length = 1\n            lutin = creerLutin()\n            angledepart = choice([90, 0, -90, 180])\n            xdepart = -225 + randint(4, 11) * 30 + (this.relatif ? 0 : 240)\n            ydepart = -165 + randint(3, 8) * 30 + (this.relatif ? 0 : 180)\n\n            pion = noteLaCouleur({ x: xdepart, y: ydepart, orientation: angledepart, plateau: lePlateau.plateauNLC, relatif: this.relatif })\n            pion.codeScratch = ''\n            lutin.color = context.isHtml ? 'green' : 'black'\n            lutin.epaisseur = 2\n            lutin.pointilles = 2\n            allerA(xdepart, ydepart, lutin)\n            orienter(angleScratchTo2d(angledepart), lutin)\n            lutindepart = clone(lutin)\n            objetsEnonce.push(lutindepart)\n            baisseCrayon(lutin)\n            compteur++\n            if (compteur > 5) break // 5 tentatives infructueuses -> On sort de la boucle.\n            compteur_essais_boucle = 0\n            pion.codeScratch = '\\\\begin{scratch}[print,fill,blocks,scale=0.7]\\n \\\\blockinit{quand \\\\greenflag est cliqué}\\n '\n            pion.codeScratch += `\\\\blockmove{aller à x: \\\\ovalnum{${xdepart}} y: \\\\ovalnum{${ydepart}}}\\n \\\\blockmove{s'orienter à \\\\ovalnum{${angledepart}}}\\n`\n            pion.currentIndex += pion.codeScratch.length\n            // On choisit le code à l'intérieur de la boucle\n            sequence = choice(sequences_disponibles)\n            test = pion.testBoucle(repetitions, sequence)\n            while (!test[0] && compteur_essais_boucle < 5) { // On tente 5 boucles à cette position, après on change de position.\n              compteur_essais_boucle++\n              sequence = choice(sequences_disponibles)\n              test = pion.testBoucle(repetitions, sequence)\n            }\n            if (compteur_essais_boucle < 5) {\n              retour_a_la_case_depart = false\n              pion.codeScratch += `\\\\blockrepeat{répéter \\\\ovalnum{${repetitions}} fois}{\\n`\n              liste_instructions.push('début de boucle')\n              for (let i = 0; i < sequence.length; i++) {\n                instruction = sequence[i]\n                result = pion.testInstruction(instruction, lutin)\n                if (instruction === 'NLC') {\n                  liste_instructions.push(instruction)\n                  couleurs.push(pion.nlc())\n                  pion.codeScratch += result[4] + '\\n'\n                  pion.currentIndex += result[4].length + 1\n                  lutin = result[5]\n                  attendre(5, lutin)\n                } else {\n                  liste_instructions.push(instruction)\n                  pion.currentPos.x = result[1]\n                  pion.currentPos.y = result[2]\n                  pion.currentOrientation = result[3]\n                  pion.codeScratch += result[4] + '\\n'\n                  pion.currentIndex += result[4].length + 1\n                  lutin = result[5]\n                }\n              }\n              liste_instructions.push('fin de boucle')\n              pion.codeScratch += '} \\n'\n              // on recommence n-1 fois pour faire avancer le pion et le lutin\n              for (let j = 1; j < repetitions; j++) {\n                for (let i = 0; i < sequence.length; i++) {\n                  instruction = sequence[i]\n                  result = pion.testInstruction(instruction, lutin)\n                  if (instruction === 'NLC') {\n                    couleurs.push(pion.nlc())\n                    lutin = result[5]\n                    attendre(5, lutin)\n                  } else {\n                    pion.currentPos.x = result[1]\n                    pion.currentPos.y = result[2]\n                    pion.currentOrientation = result[3]\n                    lutin = result[5]\n                  }\n                }\n              }\n              sequence = choice(sequences_disponibles)\n              test = pion.testSequence(sequence)\n              while (!test[0]) {\n                sequence = choice(sequences_disponibles)\n                test = pion.testSequence(sequence)\n              }\n              for (let i = 0; i < sequence.length; i++) {\n                instruction = sequence[i]\n                result = pion.testInstruction(instruction, lutin)\n                if (instruction === 'NLC') {\n                  liste_instructions.push(instruction)\n\n                  couleurs.push(pion.nlc())\n                  pion.codeScratch += result[4] + '\\n'\n                  pion.currentIndex += result[4].length + 1\n                  lutin = result[5]\n                  attendre(5, lutin)\n                } else {\n                  liste_instructions.push(instruction)\n                  pion.currentPos.x = result[1]\n                  pion.currentPos.y = result[2]\n                  pion.currentOrientation = result[3]\n                  pion.codeScratch += result[4] + '\\n'\n                  pion.currentIndex += result[4].length + 1\n                  lutin = result[5]\n                }\n              }\n            } else {\n              angledepart = choice([90, 0, -90, 180])\n              xdepart = -225 + randint(4, 11) * 30 + (this.relatif ? 0 : 240)\n              ydepart = -165 + randint(3, 8) * 30 + (this.relatif ? 0 : 180)\n            }\n          }\n          break\n        }\n        case 3:\n\n          break\n\n        case 4:\n\n          break\n      }\n      //  objetsEnonce.push ();\n      // objetsCorrection.push();\n\n      //      paramsEnonce = { xmin:-10, ymin: -10, xmax: 10, ymax: 10, pixelsParCm: 20, scale: 1, mainlevee: false};\n      //    texte += mathalea2d(paramsEnonce, objetsEnonce);\n      //  texteCorr += mathalea2d(paramsCorrection, objetsCorrection);\n      pion.codeScratch += '\\\\end{scratch}'\n      if (context.isHtml) {\n        texte = `Cet exercice est tiré de l'excellente activité débranchée ${modalUrl(numeroExercice, 'https://www.monclasseurdemaths.fr/profs/algorithmique-scratch/note-la-couleur/', 'Note la couleur', 'info circle')} de Jean-Yves Labouche.<br>`\n        texte += 'Il a été conçu pour étendre les possibilités de fiches proposées.<br>'\n        texte += `N'hésitez pas à vous rendre sur le site ${modalUrl(numeroExercice + 1, 'https://www.monclasseurdemaths.fr', 'Mon classeur de Maths.fr', 'info circle')} de Jean-Yves pour y découvrir la multitude de ressources qu'il propose.<br>`\n        texte += `Pour jouer, regarder les règles du jeu${modalPdf(numeroExercice + 2, '../../pdf/reglesnlc.pdf', 'Règles du jeu', 'Règles - PDF', 'file pdf')} .<br>`\n      } else { texte = '' }\n      texte += 'Exécuter le programme et trouver la succession de couleur.<br><br>'\n      if (context.isHtml) {\n        texte += '<table><tr><td>' +\n      scratchblock(pion.codeScratch) +\n      '</td><td>' + `${this.sup === 4 || this.sup === 2\n        ? 'Correspondance chiffre-couleur : <br>0=Blanc ; 1=Noir ; 2=Rouge ; 3=Bleu ; 4=Orange ; 5=Rose ; 6=Jaune ; 7=Vert ; 8=Gris<br>'\n        : ''}` +\n      mathalea2d(paramsCorrection, objetsEnonce) +\n      '</td></tr></table>'\n      } else {\n        texte += `\\\\begin{minipage}{.3 \\\\linewidth} \\n\\t ${scratchblock(pion.codeScratch)} \\n \\\\end{minipage}\n      \\\\begin{minipage}{.7 \\\\linewidth} \\n\\t ${this.sup === 4 || this.sup === 2\n        ? 'Correspondance chiffre-couleur : \\\\\\\\\\n0=Blanc, 1=Noir, 2=Rouge, 3=Bleu, 4=Orange, 5=Rose, 6=Jaune, 7=Vert, 8=Gris\\\\\\\\\\n'\n        : ''} ${mathalea2d(paramsCorrection, objetsEnonce)} \\n\\\\end{minipage}`\n        if (q < this.nbQuestions - 1 && !context.isHtml) {\n          texte += '\\n\\\\newpage'\n        }\n      }\n      texteCorr = 'On obtient la série de couleurs suivante :<br> '\n      texteCorr += `${texteGras(this.sup === 4 || this.sup === 2 ? '(' + lePlateau.traducNum(couleurs[0]) + ')' + couleurs[0] : couleurs[0])} `\n      for (let i = 1; i < couleurs.length; i++) {\n        texteCorr += `- ${texteGras(this.sup === 4 || this.sup === 2 ? '(' + lePlateau.traducNum(couleurs[i]) + ')' + couleurs[i] : couleurs[i])} `\n      }\n      lutin.animation = `<radialGradient id=\"Ball\" cx=\"8\" cy=\"-3\" r=\"20\" gradientUnits=\"userSpaceOnUse\">\n    <stop offset=\"0\" style=\"stop-color:#FFFF99\"/>\n    <stop offset=\"1\" style=\"stop-color:#FF9400\"/>\n  </radialGradient> <circle fill=\"url(#Ball)\"  r=\"12\" stroke-width=\"1\"\n   x=\"${lutin.listeTraces[0][0] * context.pixelsParCm}\"\n    y=\"${-lutin.listeTraces[0][1] * context.pixelsParCm}\">\\n\n    <animateMotion path=\"M ${lutin.listeTraces[0][0] * context.pixelsParCm} ${-lutin.listeTraces[0][1] * context.pixelsParCm} L`\n\n      for (let i = 0; i < lutin.listeTraces.length; i++) {\n        const B = point(lutin.listeTraces[i][2], lutin.listeTraces[i][3])\n        lutin.animation += ` ${B.xSVG(context.pixelsParCm)} ${B.ySVG(context.pixelsParCm)} `\n      }\n      lutin.animation += '\" begin=\"10s\" dur=\"10s\" repeatCount=\"indefinite\" />; </circle>'\n      if (this.correctionDetaillee) {\n        for (let i = 1; i < 16; i++) {\n          if (this.relatif) {\n            if (i < 7 || i > 9) {\n              objetsCorrection.push(texteParPositionEchelle(texNombre(-240 + 30 * i), -12.1 + 1.5 * i, -0.3, 'milieu', 'black', 1.2, 'middle', true, echelleDessin))\n            }\n          } else {\n            if (i !== 1) {\n              objetsCorrection.push(texteParPositionEchelle(texNombre(30 * i), 1.5 * i, -0.3, 'milieu', 'black', 1.2, 'middle', true, echelleDessin))\n            }\n          }\n        }\n        for (let i = 1; i < 12; i++) {\n          if (this.relatif) {\n            if (i < 5 || i > 7) {\n              objetsCorrection.push(texteParPositionEchelle(texNombre(-180 + 30 * i), -0.5, -9 + 1.5 * i, 'milieu', 'black', 1.2, 'middle', true, echelleDessin))\n            }\n          } else {\n            if (i !== 1) {\n              objetsCorrection.push(texteParPositionEchelle(texNombre(30 * i), -0.5, 1.5 * i, 'milieu', 'black', 1.2, 'middle', true, echelleDessin))\n            }\n          }\n        }\n      }\n      texteCorr += '<br><br>' + mathalea2d(paramsCorrection, objetsCorrection, lutin)\n      if (q < this.nbQuestions - 1 && !context.isHtml) {\n        texteCorr += '\\n\\\\newpage'\n      }\n      if (this.questionJamaisPosee(q, xdepart, ydepart, angledepart)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        q++\n      }\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de plateau', 4, '1 : Plateau couleur sans numéro\\n2 : Plateau couleur avec numéros\\n3 : Plateau noir et blanc avec nom des couleurs\\n4 : Plateau noir et blanc avec numéros']\n  this.besoinFormulaire2Numerique = ['Type de programme', 3, '1 : Avancer et tourner\\n2 : Boucles\\n3 : Mélange']\n  this.besoinFormulaire3Numerique = ['Nombre de couleurs (Maximmum 6)', 6]\n  this.besoinFormulaire4CaseACocher = ['Plateau de jeu original', false]\n}\n"],"names":["titre","NoteLaCouleur5e","NoteLaCouleur6e","this","relatif","Exercice","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","typeExercice","listePackages","sup","sup2","sup3","sup4","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","numeroExercice","contraindreValeur","echelleDessin","j","test","listeQuestions","listeCorrections","autoCorrection","objetsEnonce","objetsCorrection","paramsCorrection","xmin","ymin","xmax","ymax","pixelsParCm","scale","commandes_disponibles","sequences_disponibles","sequence","result","nb_couleurs","instruction","couleurs","liste_instructions","lutin","lutindepart","angledepart","xdepart","ydepart","pion","context","typeDeQuestion","Number","combinaisonListes","lePlateau","plateau2dNLC","type","melange","nx","ny","pas","plateau","q","push","retour_a_la_case_depart","compteur_essais_boucle","compteur_essais_sequence","texte","texteCorr","compteur","ins1","m","ins2","n","length","creerLutin","choice","randint","noteLaCouleur","x","y","orientation","plateauNLC","color","epaisseur","pointilles","allerA","orienter","angleScratchTo2d","clone","baisseCrayon","codeScratch","parseInt","currentIndex","testSequence","i","testInstruction","nlc","attendre","currentPos","currentOrientation","ins3","p","ins4","repetitions","testBoucle","modalUrl","modalPdf","scratchblock","mathalea2d","texteGras","traducNum","animation","listeTraces","B","point","xSVG","ySVG","texteParPositionEchelle","texNombre","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","besoinFormulaire3Numerique","besoinFormulaire4CaseACocher"],"sourceRoot":""}