{"version":3,"file":"js/14034.85363f4f50fe6fc5d631.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N15-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes } from '../../modules/outils.js'\n\nexport const titre = 'Utiliser la notion de valeur absolue d’une quantité'\n\n/**\n * 2N15-1, ex 2N22\n * @author Stéphane Guyon\n */\nexport default function ValeurAbsolue () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Déterminer la valeur du nombre proposé :'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1 //\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2, 3]; let typesDeQuestions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, a, b, c, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        // Cas par cas, on définit le type de nombres que l'on souhaite\n        // Combien de chiffres ? Quelles valeurs ?\n        case 1:\n\n          a = randint(1, 150) * choice([-1, 1])\n\n          texte = `$\\\\vert ${a}\\\\vert = \\\\dots$`\n          if (a > 0) { texteCorr = `$\\\\vert ${a}\\\\vert = ${a}$` } else { texteCorr = `$\\\\vert ${a}\\\\vert = ${-a}$` }\n\n          break\n        case 2:\n\n          a = randint(1, 5)\n\n          texte = `$\\\\vert \\\\pi - ${a}\\\\vert = \\\\dots$`\n          if (a > 3) { texteCorr = `On a : $\\\\pi - ${a}<0 $ donc $\\\\vert \\\\pi - ${a}\\\\vert = ${a}-\\\\pi$` } else { texteCorr = `On a : $\\\\pi - ${a}>0 $ donc $\\\\vert \\\\pi - ${a}\\\\vert = \\\\pi - ${a}$` }\n\n          break\n        case 3:\n\n          a = randint(2, 5)\n          b = randint(2, 7, 4)\n          c = Math.sqrt(b)\n\n          texte = `$\\\\vert \\\\sqrt{${b}} - ${a}\\\\vert = \\\\dots $`\n\n          if (c > a) {\n            texteCorr = `On a : $${b} > ${a * a}$ donc $\\\\sqrt{${b}} > ${a}$ <br>\n                        $\\\\sqrt{${b}}- ${a}$ est donc un nombre positif, il en resulte que  $\\\\vert \\\\sqrt{${b}} - ${a}\\\\vert = \\\\sqrt{${b}} - ${a}$`\n          } else {\n            texteCorr = `On a : $${b}< ${a * a}$ donc $\\\\sqrt{${b}} < ${a}$ <br>\n                        $\\\\sqrt{${b}}- ${a}$ est donc un nombre négatif, il en resulte que  $\\\\vert \\\\sqrt{${b}} -${a}\\\\vert = ${a}-\\\\sqrt{${b}}  $`\n          }\n\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ValeurAbsolue","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","a","b","c","texte","texteCorr","i","cpt","randint","choice","Math","sqrt","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}