{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G23-2.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","TracerTriangle2Angles","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","typeExercice","sup","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","i","cpt","c","calcul","randint","angle1","angle2","p","creerNomDePolygone","texNombre","B0","point","A1","x","B1","segment","styleExtremites","A2","B2","c2","rotation","C2","pointSurSegment","c3","C3","d1","droite","isVisible","d2","C","pointIntersectionDD","longueur","anim","Alea2iep","triangle1longueur2angles","htmlBouton","numeroExercice","indexOf","push","listeQuestionsToContenu","besoinFormulaireCaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/6036.43eaae446339953b2f37.js","sourcesContent":["import Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenu, randint, calcul, creerNomDePolygone, texNombre } from '../../modules/outils.js'\nimport { point, pointSurSegment, pointIntersectionDD, droite, segment, rotation, longueur } from '../../modules/2d.js'\nimport Alea2iep from '../../modules/Alea2iep.js'\n\nexport const titre = 'Tracer un triangle dont on connait une longueur et 2 angles'\n\n/**\n * Un nombre à 2 chiffres (non multiple de 10) + 9\n * @Auteur Rémi Angot\n * Référence 6G23-2\n */\nexport default function TracerTriangle2Angles () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.typeExercice = 'IEP'\n  this.sup = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      const c = calcul(randint(30, 70) / 10)\n      const angle1 = randint(20, 70)\n      const angle2 = randint(20, 70)\n      const p = creerNomDePolygone(3)\n      texte = `Tracer un triangle $${p}$ tel que $${p[0] + p[1]}=${texNombre(\n        c\n      )}$ cm, $\\\\widehat{${p[1] + p[0] + p[2]\n        }}=${angle1}\\\\degree$ et $\\\\widehat{${p[0] + p[1] + p[2]\n        }}=${angle2}\\\\degree$.`\n      texte += `<br> Mesurer $${p[0] + p[2]}$ et $${p[1] + p[2]}$.`\n      // const A0 = point(0, 0, p[0], 'left')\n      const B0 = point(c, 0, p[1], 'right')\n      // const s0 = segmentAvecExtremites(A0, B0)\n      // const t1 = afficheLongueurSegment(B0, A0)\n\n      const A1 = point(B0.x + 4, 0, p[0], 'left')\n      const B1 = point(A1.x + c, 0, p[1], 'right')\n      const s1 = segment(A1, B1)\n      s1.styleExtremites = '-|'\n      // const c1 = rotation(B1, A1, angle1)\n      // const C1 = pointSurSegment(c1, A1, -3)\n      // const s2 = segment(A1, C1)\n      // const t2 = afficheMesureAngle(B1, A1, C1)\n\n      const A2 = point(B1.x + 4, 0, p[0], 'left')\n      const B2 = point(A2.x + c, 0, p[1], 'right')\n      // const s3 = segment(A2, B2)\n      const c2 = rotation(B2, A2, angle1)\n      const C2 = pointSurSegment(c2, A2, -3)\n      // const s4 = segment(A2, C2)\n      const c3 = rotation(A2, B2, -angle2)\n      const C3 = pointSurSegment(c3, B2, -3)\n      // const t3 = afficheMesureAngle(A2, B2, C3)\n      // const s5 = segment(B2, C3)\n      const d1 = droite(A2, C2)\n      d1.isVisible = false\n      const d2 = droite(B2, C3)\n      d2.isVisible = false\n      const C = pointIntersectionDD(d1, d2, p[2])\n      // const l = labelPoint(A0, B0, A1, B1, A2, B2, C)\n\n      // if (sortieHtml) {\n      //   texteCorr = mathalea2d(\n      //     { xmin: -1, xmax: 3 * c + 10, ymin: -1, ymax: 10 }, s0, s1, s2, s3, s4, s5, t1, t2, t3, l)\n      //   texteCorr += '<br><br>'\n      // } else {\n      //   texteCorr = ''\n      // }\n      if (this.sup) {\n        texteCorr = ''\n      } else {\n        texteCorr = `$${p[0] + p[2]}\\\\approx${texNombre(longueur(A2, C, 1))}$ cm et $${p[1] + p[2]}\\\\approx${texNombre(longueur(B2, C, 1))}$ cm.`\n      }\n      const anim = new Alea2iep()\n      anim.triangle1longueur2angles(p, c, angle1, angle2, true, true) // description et longueur\n      texteCorr += anim.htmlBouton(this.numeroExercice, i)\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = [\"Longueurs données qu'à la fin de l'animation\"]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}