{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","amcReady","amcType","LireAbscisseEntiere2d","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","interactif","nouvelleVersion","numeroExercice","typesDeQuestions","listeQuestions","listeCorrections","autoCorrection","contenu","contenuCorrection","parseInt","combinaisonListes","d","abs0","l1","l2","l3","x1","x2","x3","pas1","i","texte","texteCorr","cpt","propositions","statut","feedback","lettreDepuisChiffre","randint","calcul","droiteGraduee2","Unite","Min","Max","axeStyle","pointTaille","pointStyle","labelsPrincipaux","thickSec","step1","labelListe","texNombre","pointListe","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","context","setReponse","ajouteChampTexteMathLive","enonce","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/85771.c2ce7d1af5e219caa1f0.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { randint, combinaisonListes, calcul, lettreDepuisChiffre, texNombre, listeQuestionsToContenu } from '../../modules/outils.js'\nimport { droiteGraduee2, mathalea2d } from '../../modules/2d.js'\nimport { context } from '../../modules/context.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Lire l’abscisse entière d’un point (grands nombres)'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCOpen'\n\n/**\n * Lire l'abscisse entière d'un point\n * @author Jean-Claude Lhote et Rémi Angot\n * référence 6N11\n */\nexport default function LireAbscisseEntiere2d () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Lire l'abscisse de chacun des points suivants.\"\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 4\n  this.interactif = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    // numeroExercice est 0 pour l'exercice 1\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (parseInt(this.sup) === 4) { typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else {\n      typesDeQuestions = combinaisonListes(\n        [parseInt(this.sup)],\n        this.nbQuestions\n      )\n    }\n    const d = []\n    for (let i = 0, abs0, l1, l2, l3, x1, x2, x3, pas1, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // La ligne suivante ne doit pas être mise après les setReponses car sinon elle les efface\n      this.autoCorrection[3 * i] = { propositions: [{ statut: 4, feedback: '' }] }\n      this.autoCorrection[3 * i + 1] = { propositions: [{ statut: 4, feedback: '' }] }\n      this.autoCorrection[3 * i + 2] = { propositions: [{ statut: 4, feedback: '' }] }\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n      switch (typesDeQuestions[i]) {\n        case 1: // Placer des entiers sur un axe (milliers)\n          abs0 = randint(1, 9) * 1000\n          pas1 = 0.001\n          break\n\n        case 2: // Placer des entiers sur un axe (dizaines de mille)\n          abs0 = randint(5, 15) * 10000\n          pas1 = 0.0001\n          break\n\n        case 3: // Placer des entiers sur un axe (centaines de mille)\n          abs0 = randint(35, 85) * 100000\n          pas1 = 0.00001\n          break\n      }\n      x1 = calcul(randint(0, 27) / 10)\n      x2 = calcul(randint(33, 47) / 10)\n      x3 = calcul(randint(53, 67) / 10)\n\n      d[2 * i] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        step1: 10,\n        labelListe: [[0, `${texNombre(abs0)}`], [1, `${texNombre(calcul(abs0 + 1 / pas1))}`]],\n        pointListe: [[x1, l1], [x2, l2], [x3, l3]]\n      })\n      d[2 * i + 1] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        step1: 10,\n        labelListe: [\n          [x1, texNombre(calcul(x1 / pas1 + abs0))],\n          [x2, texNombre(calcul(x2 / pas1 + abs0))],\n          [x3, texNombre(calcul(x3 / pas1 + abs0))]\n        ],\n        pointListe: [[x1, l1], [x2, l2], [x3, l3]]\n\n      })\n\n      texte = mathalea2d({ xmin: -2, ymin: -1, xmax: 30, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i])\n      texteCorr = mathalea2d({ xmin: -2, ymin: -2, xmax: 30, ymax: 2, pixelsParCm: 20, scale: 0.5 }, d[2 * i + 1])\n\n      if (this.interactif && context.isHtml) {\n        setReponse(this, 3 * i, calcul(x1 / pas1 + abs0))\n        setReponse(this, 3 * i + 1, calcul(x2 / pas1 + abs0))\n        setReponse(this, 3 * i + 2, calcul(x3 / pas1 + abs0))\n        texte += l1 + ajouteChampTexteMathLive(this, 3 * i)\n        texte += l2 + ajouteChampTexteMathLive(this, 3 * i + 1)\n        texte += l3 + ajouteChampTexteMathLive(this, 3 * i + 2)\n      } else {\n        if (context.isAmc) {\n          this.autoCorrection[i].enonce = texte\n          this.autoCorrection[i].propositions[0].texte = texteCorr\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    '1 : Milliers\\n2 : Dizaines de mille\\n3 : Centaines de mille\\n4 : Mélange'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}