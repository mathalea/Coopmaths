{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4G20.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","amcType","amcReady","interactifReady","interactifType","Pythagore2D","Exercice","this","interactif","nbQuestions","nbCols","nbColsCorr","typeExercice","video","nouvelleVersion","sup","parseInt","listeQuestions","listeCorrections","listeTypeDeQuestions","listeDeNomsDePolygones","reponse","consigne","combinaisonListes","texte","texteCorr","i","cpt","A1","point","B1","calcul","randint","C1","similitude","longueur","p1","polygone","isVisible","p2","rotation","A","listePoints","B","C","codage","codageAngleDroit","xmin","Math","min","x","ymin","y","xmax","max","ymax","nomDuPolygone","creerNomDePolygone","push","nomme","nommePolygone","affAB","afficheLongueurSegment","affAC","affBC","longueurAB","longueurAC","longueurBC","mesObjetsATracer","context","mathalea2d","scale","style","nom","AB","texNombre","texNombrec","sqrt","arrondi","ajouteChampTexteMathLive","setReponse","Grandeur","formatInteractif","BC","AC","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/18186.256174e954d7414bbb81.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, texNombrec, creerNomDePolygone, texNombre, arrondi } from '../../modules/outils.js'\nimport { point, polygone, nommePolygone, rotation, similitude, codageAngleDroit, afficheLongueurSegment, longueur, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport Grandeur from '../../modules/Grandeur.js'\nexport const titre = 'Calculer une longueur avec le théorème de Pythagore'\nexport const amcType = 'AMCOpenNum' // Question numérique\nexport const amcReady = true // Il reste à gérer les options numériques\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Exercices sur le théorème de Pythagore avec MathALEA2D\n * @author Rémi Angot\n * 4G20\n */\nexport default function Pythagore2D () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactif = true\n  this.interactifType = interactifType\n  this.nbQuestions = 3\n  this.nbCols = 3\n  this.nbColsCorr = 1\n  this.typeExercice = 'Calculer'\n  this.video = 'M9sceJ8gzNc'\n\n  this.nouvelleVersion = function () {\n    if (this.sup) {\n      this.sup = parseInt(this.sup)\n    }\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions = []\n    const listeDeNomsDePolygones = []\n    let reponse\n    if (this.sup === 1) {\n      this.consigne = \"Dans chaque cas, donner l'égalité de Pythagore.\"\n    } else if (this.sup === 2) {\n      this.consigne = \"Dans chaque cas, compléter l'égalité en utilisant le théorème de Pythagore.\"\n    } else {\n      this.consigne = 'Dans chaque cas, calculer la longueur manquante (si nécessaire, l\\'arrondir au millimètre près).'\n    }\n    if (this.sup === 2 || this.typeExercice === 'Calculer') {\n      listeTypeDeQuestions = combinaisonListes(['AB', 'BC', 'AC'], this.nbQuestions)\n    }\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = ''\n      texteCorr = ''\n      const A1 = point(0, 0)\n      const B1 = point(calcul(randint(22, 50) / 10), 0)\n      const C1 = similitude(B1, A1, 90, calcul(randint(22, 50) / 10) / longueur(A1, B1))\n      const p1 = polygone(A1, B1, C1)\n      p1.isVisible = false\n      const p2 = rotation(p1, A1, randint(0, 360))\n      const A = p2.listePoints[0]\n      const B = p2.listePoints[1]\n      const C = p2.listePoints[2]\n      const codage = codageAngleDroit(B, A, C)\n      const xmin = Math.min(A.x, B.x, C.x) - 1\n      const ymin = Math.min(A.y, B.y, C.y) - 1\n      const xmax = Math.max(A.x, B.x, C.x) + 1\n      const ymax = Math.max(A.y, B.y, C.y) + 1\n      const nomDuPolygone = creerNomDePolygone(3, listeDeNomsDePolygones)\n      listeDeNomsDePolygones.push(nomDuPolygone)\n      const nomme = nommePolygone(p2, nomDuPolygone)\n      const affAB = afficheLongueurSegment(B, A)\n      const affAC = afficheLongueurSegment(A, C)\n      const affBC = afficheLongueurSegment(C, B)\n      const longueurAB = longueur(A, B, 1)\n      const longueurAC = longueur(A, C, 1)\n      const longueurBC = longueur(B, C, 1)\n      const mesObjetsATracer = [codage, p2, nomme]\n\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'AB') {\n        mesObjetsATracer.push(affAC, affBC)\n      }\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'BC') {\n        mesObjetsATracer.push(affAC, affAB)\n      }\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'AC') {\n        mesObjetsATracer.push(affAB, affBC)\n      }\n\n      if (!context.isHtml) { texte = '~\\\\\\\\' }\n      texte += mathalea2d({ xmin: xmin, xmax: xmax, ymin: ymin, ymax: ymax, scale: 0.6, style: 'display: block' }, mesObjetsATracer)\n      if (this.sup === 2) {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          if (this.interactif && context.isHtml) texte += `<br>$${A.nom + B.nom}^2=\\\\ldots$`\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          if (this.interactif && context.isHtml) texte += `<br>$${B.nom + C.nom}^2=\\\\ldots$`\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          if (this.interactif && context.isHtml) texte += `<br>$${A.nom + C.nom}^2=\\\\ldots$`\n        }\n      }\n      if (!context.isHtml && !context.isAmc && i !== this.nbQuestions - 1) { texte += '\\\\columnbreak' } // pour la sortie LaTeX sauf la dernière question\n\n      texteCorr = `Le triangle $${nomDuPolygone}$ est rectangle en $${A.nom}$ donc d'après le théorème de Pythagore, on a : `\n      texteCorr += `$${B.nom + C.nom}^2=${A.nom + B.nom}^2+${A.nom + C.nom}^2$`\n      if (this.sup === 2) {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          texteCorr += ` d'où $${A.nom + B.nom}^2=${B.nom + C.nom}^2-${A.nom + C.nom}^2$.`\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          texteCorr += '.'\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          texteCorr += ` d'où $${A.nom + C.nom}^2=${B.nom + C.nom}^2-${A.nom + B.nom}^2$.`\n        }\n      }\n      if (this.typeExercice === 'Calculer') {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          let AB\n          texteCorr += ` donc $${A.nom + B.nom}^2=${B.nom + C.nom}^2-${A.nom + C.nom}^2$`\n          texteCorr += `<br> $${A.nom + B.nom}^2=${texNombre(longueurBC)}^2-${texNombre(longueurAC)}^2=${texNombrec(longueurBC ** 2 - longueurAC ** 2)}$`\n          texteCorr += `<br> $${A.nom + B.nom}=\\\\sqrt{${texNombrec(longueurBC ** 2 - longueurAC ** 2)}}$`\n          if (calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1) === calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 5)) {\n            AB = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1))\n            reponse = arrondi(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1)\n            texteCorr += `<br> $${A.nom + B.nom}=${AB}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${A.nom + B.nom}=$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          } else {\n            AB = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1))\n            reponse = arrondi(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1)\n            texteCorr += `<br> $${A.nom + B.nom}\\\\approx${AB}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${A.nom + B.nom}\\\\approx$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          }\n          context.isAmc ? setReponse(this, i, reponse) : setReponse(this, i, new Grandeur(reponse, 'cm'), { formatInteractif: 'longueur' })\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          const BC = texNombre(calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1))\n          reponse = arrondi(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1)\n          texteCorr += `<br> $${B.nom + C.nom}^2=${texNombre(longueurAB)}^2+${texNombre(longueurAC)}^2=${texNombrec(longueurAB ** 2 + longueurAC ** 2)}$`\n          texteCorr += `<br> $${B.nom + C.nom}=\\\\sqrt{${texNombrec(longueurAB ** 2 + longueurAC ** 2)}}$`\n          if (calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1) === calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 5)) {\n            texteCorr += `<br> $${B.nom + C.nom}=${BC}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${B.nom + C.nom}=$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          } else {\n            texteCorr += `<br> $${B.nom + C.nom}\\\\approx${BC}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${B.nom + C.nom}\\\\approx$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          }\n          context.isAmc ? setReponse(this, i, reponse) : setReponse(this, i, new Grandeur(reponse, 'cm'), { formatInteractif: 'longueur' })\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          const AC = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1))\n          reponse = arrondi(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1)\n          texteCorr += ` donc $${A.nom + C.nom}^2=${B.nom + C.nom}^2-${A.nom + B.nom}^2$`\n          texteCorr += `<br> $${A.nom + C.nom}^2=${texNombre(longueurBC)}^2-${texNombre(longueurAB)}^2=${texNombrec(longueurBC ** 2 - longueurAB ** 2)}$`\n          texteCorr += `<br> $${A.nom + C.nom}=\\\\sqrt{${texNombrec(longueurBC ** 2 - longueurAB ** 2)}}$`\n          if (calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1) === calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 5)) {\n            texteCorr += `<br> $${A.nom + C.nom}=${AC}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${A.nom + C.nom}=$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          } else {\n            texteCorr += `<br> $${A.nom + C.nom}\\\\approx${AC}$ cm.`\n            if (this.interactif && context.isHtml) texte += `<br>$${A.nom + C.nom}\\\\approx$` + ajouteChampTexteMathLive(this, i, 'longueur')\n          }\n          context.isAmc ? setReponse(this, i, reponse) : setReponse(this, i, new Grandeur(reponse, 'cm'), { formatInteractif: 'longueur' })\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3,\"1 : Donner l'égalité de Pythagore\\n2 : Compléter l'égalité de Pythagore\\n3 : Calculer une longueur manquante\"];\n}\n// 4G20-1\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}