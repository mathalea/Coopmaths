{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4G20.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","amcType","amcReady","interactifReady","Pythagore2D","Exercice","this","interactif","nbQuestions","nbCols","nbColsCorr","typeExercice","video","nouvelleVersion","sup","parseInt","listeQuestions","listeCorrections","listeTypeDeQuestions","listeDeNomsDePolygones","reponse","consigne","combinaisonListes","texte","texteCorr","i","cpt","A1","point","B1","calcul","randint","C1","similitude","longueur","p1","polygone","isVisible","p2","rotation","A","listePoints","B","C","codage","codageAngleDroit","xmin","Math","min","x","ymin","y","xmax","max","ymax","nomDuPolygone","creerNomDePolygone","push","nomme","nommePolygone","affAB","afficheLongueurSegment","affAC","affBC","longueurAB","longueurAC","longueurBC","mesObjetsATracer","context","mathalea2d","scale","style","nom","AB","texNombre","texNombrec","sqrt","arrondi","ajouteChampTexte","texteApres","setReponse","BC","AC","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceInteractif","exercice","document","addEventListener","button","querySelector","event","spanReponseLigne","champTexte","getElementById","value","replaceAll","valeur","toString","innerHTML","readOnly","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","propositions","length","statut","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","messageFeedback","id","feedback","type","querySelectorAll","uicheck","exerciceQcm","propositionsQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","inline","numeric","a","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","param","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","message","level","includes","div","cssIcon","remove","divTitre","messageUtilisateur","code","width"],"mappings":"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","file":"js/255.8facd933d81bae1272da.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, texNombrec, creerNomDePolygone, texNombre, arrondi } from '../../modules/outils.js'\nimport { point, polygone, nommePolygone, rotation, similitude, codageAngleDroit, afficheLongueurSegment, longueur, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Calculer une longueur avec le théorème de Pythagore'\nexport const amcType = 4 // Question numérique\nexport const amcReady = true // Il reste à gérer les options numériques\nexport const interactifReady = true\n\n/**\n * Exercices sur le théorème de Pythagore avec MathALEA2D\n * @Auteur Rémi Angot\n * 4G20\n */\nexport default function Pythagore2D () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactif = true\n  this.nbQuestions = 3\n  this.nbCols = 3\n  this.nbColsCorr = 1\n  this.typeExercice = 'Calculer'\n  this.video = 'M9sceJ8gzNc'\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions = []\n    const listeDeNomsDePolygones = []\n    let reponse\n    if (this.sup === 1) {\n      this.consigne = \"Dans chaque cas, donner l'égalité de Pythagore.\"\n    } else if (this.sup === 2) {\n      this.consigne = \"Dans chaque cas, compléter l'égalité en utilisant le théorème de Pythagore.\"\n    } else {\n      this.consigne = 'Dans chaque cas, calculer la longueur manquante.'\n    }\n    if (this.sup === 2 || this.typeExercice === 'Calculer') {\n      listeTypeDeQuestions = combinaisonListes(['AB', 'BC', 'AC'], this.nbQuestions)\n    }\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = ''\n      texteCorr = ''\n      const A1 = point(0, 0)\n      const B1 = point(calcul(randint(22, 50) / 10), 0)\n      const C1 = similitude(B1, A1, 90, calcul(randint(22, 50) / 10) / longueur(A1, B1))\n      const p1 = polygone(A1, B1, C1)\n      p1.isVisible = false\n      const p2 = rotation(p1, A1, randint(0, 360))\n      const A = p2.listePoints[0]\n      const B = p2.listePoints[1]\n      const C = p2.listePoints[2]\n      const codage = codageAngleDroit(B, A, C)\n      const xmin = Math.min(A.x, B.x, C.x) - 1\n      const ymin = Math.min(A.y, B.y, C.y) - 1\n      const xmax = Math.max(A.x, B.x, C.x) + 1\n      const ymax = Math.max(A.y, B.y, C.y) + 1\n      const nomDuPolygone = creerNomDePolygone(3, listeDeNomsDePolygones)\n      listeDeNomsDePolygones.push(nomDuPolygone)\n      const nomme = nommePolygone(p2, nomDuPolygone)\n      const affAB = afficheLongueurSegment(B, A)\n      const affAC = afficheLongueurSegment(A, C)\n      const affBC = afficheLongueurSegment(C, B)\n      const longueurAB = longueur(A, B, 1)\n      const longueurAC = longueur(A, C, 1)\n      const longueurBC = longueur(B, C, 1)\n      const mesObjetsATracer = [codage, p2, nomme]\n\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'AB') {\n        mesObjetsATracer.push(affAC, affBC)\n      }\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'BC') {\n        mesObjetsATracer.push(affAC, affAB)\n      }\n      if (this.typeExercice === 'Calculer' && listeTypeDeQuestions[i] === 'AC') {\n        mesObjetsATracer.push(affAB, affBC)\n      }\n\n      if (!context.isHtml) { texte = '~\\\\\\\\' }\n      texte += mathalea2d({ xmin: xmin, xmax: xmax, ymin: ymin, ymax: ymax, scale: 0.6, style: 'display: block' }, mesObjetsATracer)\n      if (this.sup === 2) {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          texte += `<br>$${A.nom + B.nom}^2=\\\\ldots$`\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          texte += `<br>$${B.nom + C.nom}^2=\\\\ldots$`\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          texte += `<br>$${A.nom + C.nom}^2=\\\\ldots$`\n        }\n      }\n      if (!context.isHtml && i !== this.nbQuestions - 1) { texte += '\\\\columnbreak' } // pour la sortie LaTeX sauf la dernière question\n\n      texteCorr = `Le triangle $${nomDuPolygone}$ est rectangle en $${A.nom}$ donc d'après le théorème de Pythagore, on a : `\n      texteCorr += `$${B.nom + C.nom}^2=${A.nom + B.nom}^2+${A.nom + C.nom}^2$`\n      if (this.sup === 2) {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          texteCorr += ` d'où $${A.nom + B.nom}^2=${B.nom + C.nom}^2-${A.nom + C.nom}^2$.`\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          texteCorr += '.'\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          texteCorr += ` d'où $${A.nom + C.nom}^2=${B.nom + C.nom}^2-${A.nom + B.nom}^2$.`\n        }\n      }\n      if (this.typeExercice === 'Calculer') {\n        if (listeTypeDeQuestions[i] === 'AB') {\n          let AB\n          texteCorr += ` donc $${A.nom + B.nom}^2=${B.nom + C.nom}^2-${A.nom + C.nom}^2$`\n          texteCorr += `<br> $${A.nom + B.nom}^2=${texNombre(longueurBC)}^2-${texNombre(longueurAC)}^2=${texNombrec(longueurBC ** 2 - longueurAC ** 2)}$`\n          texteCorr += `<br> $${A.nom + B.nom}=\\\\sqrt{${texNombrec(longueurBC ** 2 - longueurAC ** 2)}}$`\n          if (calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1) === calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 5)) {\n            AB = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1))\n            reponse = arrondi(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1)\n            texteCorr += `<br> $${A.nom + B.nom}=${AB}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${A.nom + B.nom} = $`, texteApres: 'cm' })\n          } else {\n            AB = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1))\n            reponse = arrondi(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1)\n           texteCorr += `<br> $${A.nom + B.nom}\\\\approx${AB}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${A.nom + B.nom}\\\\approx$`, texteApres: 'cm' })\n          }\n          setReponse(this, i, reponse)\n        }\n        if (listeTypeDeQuestions[i] === 'BC') {\n          const BC = texNombre(calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1))\n          reponse = arrondi(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1)\n          texteCorr += `<br> $${B.nom + C.nom}^2=${texNombre(longueurAB)}^2+${texNombre(longueurAC)}^2=${texNombrec(longueurAB ** 2 + longueurAC ** 2)}$`\n          texteCorr += `<br> $${B.nom + C.nom}=\\\\sqrt{${texNombrec(longueurAB ** 2 + longueurAC ** 2)}}$`\n          if (calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1) === calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 5)) {\n            texteCorr += `<br> $${B.nom + C.nom}=${BC}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${B.nom + C.nom}=$`, texteApres: 'cm' })\n          } else {\n            texteCorr += `<br> $${B.nom + C.nom}\\\\approx${BC}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${B.nom + C.nom}\\\\approx$`, texteApres: 'cm' })\n          }\n          setReponse(this, i, reponse)\n        }\n        if (listeTypeDeQuestions[i] === 'AC') {\n          const AC = texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1))\n          reponse = arrondi(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1)\n          texteCorr += ` donc $${A.nom + C.nom}^2=${B.nom + C.nom}^2-${A.nom + B.nom}^2$`\n          texteCorr += `<br> $${A.nom + C.nom}^2=${texNombre(longueurBC)}^2-${texNombre(longueurAB)}^2=${texNombrec(longueurBC ** 2 - longueurAB ** 2)}$`\n          texteCorr += `<br> $${A.nom + C.nom}=\\\\sqrt{${texNombrec(longueurBC ** 2 - longueurAB ** 2)}}$`\n          if (calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1) === calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 5)) {\n            texteCorr += `<br> $${A.nom + C.nom}=${AC}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${B.nom + C.nom}=$`, texteApres: 'cm' })\n          } else {\n            texteCorr += `<br> $${A.nom + C.nom}\\\\approx${AC}$ cm.`\n            texte += '<br>' + ajouteChampTexte(this, i, { texte: `$${A.nom + C.nom}\\\\approx$`, texteApres: 'cm' })\n          }\n          setReponse(this, i, reponse)\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3,\"1 : Donner l'égalité de Pythagore\\n2 : Compléter l'égalité de Pythagore\\n3 : Calculer une longueur manquante\"];\n}\n// 4G20-1\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.',',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n\n\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (var prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n// Module regroupant les fonctions de gestions des erreurs.\n\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} erreur\n * @param {string} [erreur.message]\n * @param {string} [erreur.level]\n * @param {string} [erreur.titre]\n */\nexport function addFeedback (container, { message = 'Une erreur est survenue', level = 'erreur', titre = 'Erreur interne' } = {}) {\n  if (!types.includes(level)) {\n    console.error(Error(`type de message inconnu : ${level}`))\n    level = 'error'\n  }\n  const cssDiv = level === 'info' ? '' : level\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = level === 'error'\n    ? 'frown outline'\n    : (level === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  addText(div, message)\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        level: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        level: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        level: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        level: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} data\n * @param {string} data.id id du div conteneur à utiliser\n * @param {string} data.texte Le texte à afficher\n * @param {string} data.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  if (!id || !texte) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message: texte, level: type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}