{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N10-3.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","chiffre_nombre_de","type_de_questions_disponibles","Exercice","this","beta","sup","nbQuestions","consigne","nbCols","nbColsCorr","sortieHtml","spacing","spacingCorr","nouvelleVersion","shuffle","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","u","d","c","mu","md","mc","mmu","mmd","mmc","randint","nb_str","toString","nb","Number","cdu","chiffre_nombre","chiffre","unites","determinant","rangs","dizaines","centaines","milliers","millions","nombre","situations","type","tranche","choice","chiffre_nombre_corr","str","rang","sortie","split","k","length","nombre_de_justif","cdu_num","nb_de","j","nb_de_reste","texNombre","enonces","push","enonce","question","correction","miseEnEvidence","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/4375.bfd65df1ee628afc976c.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,choice,shuffle,combinaisonListesSansChangerOrdre,texNombre,miseEnEvidence} from '../../modules/outils.js'\nexport const titre = 'Chiffre des ... Nombre de ...'\n\n/** \n * * Donner le chiffre des ... le nombre de ...\n * * 6N10-3\n * @author Sébastien Lozano\n */\n\nexport default function chiffre_nombre_de() {\n  'use strict';\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.beta = false;\n  this.sup = 1;\n  if (this.beta) {\n    this.nbQuestions = 6;\n  } else {\n    this.nbQuestions = 6;\n  };\n\n  this.titre = titre;\n  this.consigne = ``;\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  //this.nbQuestionsModifiable = false;\n  sortieHtml ? this.spacing = 3 : this.spacing = 2;\n  sortieHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5;\n\n  let type_de_questions_disponibles;\n\n  this.nouvelleVersion = function () {\n    if (this.beta) {\n      type_de_questions_disponibles = [0, 1, 2, 3, 4, 5];\n    } else {\n      //type_de_questions_disponibles = shuffle([choice([1,3]),choice([2,4]),0]);      \t\t\t\n      type_de_questions_disponibles = shuffle([0, 1, 2, 3, 4, 5]);\n\n    };\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    //let listeTypeDeQuestions  = combinaisonListes(type_de_questions_disponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(type_de_questions_disponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\t\t\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      let u, d, c, mu, md, mc, mmu, mmd, mmc;\n      mmc = randint(0, 9, [0]);\n      mmd = randint(0, 9, [mmc]);\n      mmu = randint(0, 9, [mmc, mmd]);\n      mc = randint(0, 9, [mmu, mmd, mmc]);\n      md = randint(0, 9, [mmu, mmd, mmc, mc]);\n      mu = randint(0, 9, [mmu, mmd, mmc, mc, md]);\n      c = randint(0, 9, [mmu, mmd, mmc, mu, md, mc]);\n      d = randint(0, 9, [mmu, mmd, mmc, mu, md, mc, c]);\n      u = randint(0, 9, [mmu, mmd, mmc, mu, md, mc, c, d]);\n      //let nb = randint(100000000,999999999);\n      //let nb_str = nb.toString();\n      let nb_str = mmc.toString() + mmd.toString() + mmu.toString() + mc.toString() + md.toString() + mu.toString() + c.toString() + d.toString() + u.toString();\n      let nb = Number(nb_str);\n      let cdu = ['unites', 'dizaines', 'centaines'];\n      let chiffre_nombre = {\n        chiffre: {\n          unites: {\n            unites: { determinant: `des`, cdu: ['unités', ''], rangs: [8] },\n            dizaines: { determinant: `des`, cdu: ['dizaines', ''], rangs: [7] },\n            centaines: { determinant: `des`, cdu: ['centaines', ''], rangs: [6] },\n          },\n          milliers: {\n            unites: { determinant: `des`, cdu: ['unités de milliers', ''], rangs: [5] },\n            dizaines: { determinant: `des`, cdu: ['dizaines de milliers', ''], rangs: [4] },\n            centaines: { determinant: `des`, cdu: ['centaines de milliers', ''], rangs: [3] },\n          },\n          millions: {\n            unites: { determinant: `des`, cdu: ['unités de millions', ''], rangs: [2] },\n            dizaines: { determinant: `des`, cdu: ['dizaines de millions', ''], rangs: [1] },\n            centaines: { determinant: `des`, cdu: ['centaines de millions', ''], rangs: [0] },\n          },\n        },\n        nombre: {\n          unites: {\n            unites: { determinant: `d'`, cdu: ['unités', 1], rangs: [0, 1, 2, 3, 4, 5, 6, 7, 8] },\n            dizaines: { determinant: `de`, cdu: ['dizaines', 10], rangs: [0, 1, 2, 3, 4, 5, 6, 7] },\n            centaines: { determinant: `de`, cdu: ['centaines', 100], rangs: [0, 1, 2, 3, 4, 5, 6] },\n          },\n          milliers: {\n            unites: { determinant: `d'`, cdu: ['unités de milliers', 1000], rangs: [0, 1, 2, 3, 4, 5] },\n            dizaines: { determinant: `de`, cdu: ['dizaines de milliers', 10000], rangs: [0, 1, 2, 3, 4] },\n            centaines: { determinant: `de`, cdu: ['centaines de milliers', 100000], rangs: [0, 1, 2, 3] },\n          },\n          millions: {\n            unites: { determinant: `d'`, cdu: ['unités de millions', 1000000], rangs: [0, 1, 2] },\n            dizaines: { determinant: `de`, cdu: ['dizaines de millions', 10000000], rangs: [0, 1] },\n            centaines: { determinant: `de`, cdu: ['centaines de millions', 100000000], rangs: [0] },\n          },\n        },\n      };\n\n      // pour les situations, autant de situations que de cas dans le switch !\n      let situations = [\n        {//case 0 --> chiffre des\n          type: 'chiffre',\n          tranche: 'unites',\n          cdu: choice(cdu),\n        },\n        {//case 1 --> chiffre des\n          type: 'chiffre',\n          tranche: 'milliers',\n          cdu: choice(cdu),\n        },\n        {//case 2 --> chiffre des\n          type: 'chiffre',\n          tranche: 'millions',\n          cdu: choice(cdu),\n        },\n        {//case 3 --> nombre de\n          type: 'nombre',\n          tranche: 'unites',\n          cdu: choice(cdu),\n        },\n        {//case 4 --> nombre de\n          type: 'nombre',\n          tranche: 'milliers',\n          cdu: choice(cdu),\n        },\n        {//case 5 --> nombre de\n          type: 'nombre',\n          tranche: 'millions',\n          cdu: choice(cdu),\n        },\n      ];\n\n      //une fonction pour la correction selon le type de question\n      function chiffre_nombre_corr(type, str, rang) {\n        let sortie;\n        if (type == 'chiffre') {\n          sortie = str.split('')[rang[0]];\n        };\n        if (type == 'nombre') {\n          sortie = str.split('')[rang[0]];\n          for (let k = 1; k < rang.length; k++) {\n            sortie += str.split('')[rang[k]]\n          };\n        };\n        return sortie;\n      };\n\n      // une fonction pour la justification supplémentaire dans le cas nombre de ...\n      function nombre_de_justif(type, str, rang, cdu_num) {\n        let sortie;\n        if (type == 'chiffre') {\n          sortie = '';\n        };\n        if (type == 'nombre') {\n          let nb_de = str.split('')[rang[0]];\n          for (let k = 1; k < rang.length; k++) {\n            nb_de += str.split('')[rang[k]]\n          };\n          let j = rang[rang.length - 1];\n          j++;\n          let nb_de_reste = '';\n          while (j != 9) {\n            nb_de_reste += str.split('')[j];\n            j++;\n          };\n          sortie = `comme $${texNombre(str)} = ${texNombre(nb_de)}\\\\times ${texNombre(cdu_num)}+${texNombre(nb_de_reste)}$ alors `;\n        };\n        return sortie;\n      };\n\n      let enonces = [];\n      for (let k = 0; k < situations.length; k++) {\n        enonces.push({\n          enonce: `\n          Dans $${texNombre(nb)}$, quel est le ${situations[k].type} ${chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].determinant} ${chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].cdu[0]} ?\t\t\t\t\t\n\t\t\t\t\t`,\n          question: ``,\n          correction: `\n          Dans $${texNombre(nb)}$,           \n          ${nombre_de_justif(situations[k].type, nb_str, chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].rangs, chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].cdu[1])}          \n          le ${situations[k].type} ${chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].determinant}  ${chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].cdu[0]} est \n          $${miseEnEvidence(texNombre(chiffre_nombre_corr(situations[k].type, nb_str, chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].rangs)))}$\t\t\t\t\t\n\t\t\t\t\t`\n        });\n      };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n            texte += `             `\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[0].correction}`;\n          };\n          break;\n        case 1:\n          texte = `${enonces[1].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[1].correction}`;\n          };\n          break;\n        case 2:\n          texte = `${enonces[2].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[2].correction}`;\n          };\n          break;\n        case 3:\n          texte = `${enonces[3].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[3].correction}`;\n          };\n          break;\n        case 4:\n          texte = `${enonces[4].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[4].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[4].correction}`;\n          };\n          break;\n        case 5:\n          texte = `${enonces[5].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[5].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[5].correction}`;\n          };\n          break;\n      };\n\n      if (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n\n  }\n  //this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  //this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\t\n};\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}