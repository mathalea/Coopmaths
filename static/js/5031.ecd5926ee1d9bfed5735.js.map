{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C10-5.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","amcType","titre","Exercice_labyrinthe_multiples","Exercice","this","consigne","niveau","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","tailleDiaporama","sup3","sup","sup2","nouvelleVersion","texte","texteCorr","trouve","listeCorrections","listeQuestions","laby","labyrinthe","parseInt","chemin","choisitChemin","murs2d","construitMurs","chemin2d","traceChemin","monchemin","table","maximum","texteEnCouleurEtGras","length","listeMultiples","index","i","push","combinaisonListes","a","nombres","b","k","randint","nombres2d","placeNombres","params","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","autoCorrection","enonce","propositions","statut","feedback","listeQuestionsToContenu","context","amc","id","besoinFormulaireNumerique","besoinFormulaire2Numerique","besoinFormulaire3Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/5031.ecd5926ee1d9bfed5735.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {exportQcmAmc,listeQuestionsToContenu,randint,combinaisonListes,texteEnCouleurEtGras} from '../../modules/outils.js'\nimport {mathalea2d,labyrinthe} from '../../modules/2d.js'\nexport const amcReady = true\nexport const amcType =3 //type de question AMC \n\nexport const titre = 'Labyrinthe de multiples'\n\n/**\n * @Auteur Jean-Claude Lhote\n * Publié le 6/12/2020\n * Ref : c3C10-2 et 6C10-5\n * Parcourir un labyrinthe de nombres en passant par les multiples du nombre choisi.\n */\n\nexport default function Exercice_labyrinthe_multiples () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.consigne = ''\n  this.niveau = '6e'\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  this.tailleDiaporama = 100\n  this.sup3 = 3\n  this.sup = 9\n  if (this.niveau = 'CM') {\n    this.sup2 = 10\n    this.sup3 = 3\n  } else {\n    this.sup2 = 13\n    this.sup3 = 4\n  }\n  this.nouvelleVersion = function () {\n    this.listeCorrections = []\n    this.listeQuestions = []\n\n    let texte, texteCorr, trouve\n    const laby = labyrinthe()\n    laby.niveau = parseInt(this.sup3) // Le niveau (de 1 à 6=mélange) définit le nombre d'étapes\n    laby.chemin = laby.choisitChemin(laby.niveau) // On choisi un chemin\n    laby.murs2d = laby.construitMurs(laby.chemin) // On construit le labyrinthe\n    laby.chemin2d = laby.traceChemin(laby.chemin) // On trace le chemin solution\n    const monchemin = laby.chemin\n    const table = parseInt(this.sup)\n    const maximum = parseInt(this.sup2)\n    //   this.consigne=`Trouve la sortie en ne passant que par les cases contenant un multiple de $${table}$.`\n    texte = `${texteEnCouleurEtGras('Trouve la sortie en ne passant que par les cases contenant un multiple de ', 'black')}$${table}$.<br>`\n    texteCorr = `${texteEnCouleurEtGras(`Voici le chemin en marron et la sortie était la numéro $${2 - monchemin[monchemin.length - 1][1] + 1}$.`, 'black')}<br>`\n    // Zone de construction du tableau de nombres : Si ils sont sur monchemin et seulement si, ils doivent vérifier la consigne\n    let listeMultiples = []; let index = 0\n    for (let i = 2; i <= maximum; i++) {\n      listeMultiples.push(table * i)\n    }\n    listeMultiples = combinaisonListes(listeMultiples, 12)\n    for (let a = 1; a < 7; a++) {\n      laby.nombres.push([0, 0, 0])\n    }\n    for (let a = 1; a < 7; a++) {\n      for (let b = 0; b < 3; b++) {\n        trouve = false\n        for (let k = 0; k < monchemin.length; k++) {\n          if (monchemin[k][0] === a && monchemin[k][1] === b) trouve = true\n        }\n        if (!trouve) {\n          laby.nombres[a - 1][b] = randint(2, maximum) * table + randint(1, table - 1)\n        } else {\n          laby.nombres[a - 1][b] = listeMultiples[index]\n          index++\n        }\n      }\n    } // Le tableau de nombre étant fait, on place les objets nombres.\n    laby.nombres2d = laby.placeNombres(laby.nombres, 1.5)\n    const params = { xmin: -4, ymin: 0, xmax: 22, ymax: 11, pixelsParCm: 20, scale: 0.7 }\n    texte += mathalea2d(params, laby.murs2d, laby.nombres2d)\n    texteCorr += mathalea2d(params, laby.murs2d, laby.nombres2d, laby.chemin2d)\n\n    /** ********************** AMC Open *****************************/\n    this.autoCorrection = [{ enonce: texte, propositions: [{ texte: texteCorr, statut: 3, feedback: '' }] }]\n    /****************************************************/\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n    /*********************************************************/\n    // On ajoute cette ligne pour AMC\n    if (context.isAmc){\n    this.amc = [this.id, this.autoCorrection, titre, amcType, {}]\n    }\n    /**********************************************************/\n  }\n  this.besoinFormulaireNumerique = ['Table ']\n  this.besoinFormulaire2Numerique = ['Facteur maximum ']\n  this.besoinFormulaire3Numerique = ['Niveau de rapidité', 6, '1 : Guépard\\n 2 : Antilope\\n 3 : Lièvre\\n 4 : Tortue\\n 5 : Escargot\\n 6 : Au hasard']\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}