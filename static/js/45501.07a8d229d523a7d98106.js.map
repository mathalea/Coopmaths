{"version":3,"file":"js/45501.07a8d229d523a7d98106.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/CM/CM009.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nimport { listeQuestionsToContenu, randint, range1, combinaisonListes, texNombrec, texNombre, calcul } from '../../modules/outils.js'\nexport const titre = 'Moitié'\nexport const amcReady = true\nexport const interactifReady = true\nexport const interactifType = 'numerique'\nexport const amcType = 'AMCNum'\n/**\n * Calculer la moitié d'un nombre pair, d'un impair inférieur à 20, d'un multiple de 200, d'un nombre de la forme a00 avec a impair, d'un nombre de la forme\n *  a,b avec a et b pairs ou 1xx avec xx un nombre pair\n * @author Rémi Angot\n * Référence CM009\n*/\nexport default function Moitie () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Calculer'\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1 // niveau de difficulté\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = range1(6)\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (\n      let i = 0, texte, texteCorr, a, b, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // Table de 2\n          a = randint(2, 9)\n          texte = `$\\\\text{La moitié de }${a * 2}$`\n          texteCorr = `$\\\\text{La moitié de }${a * 2} \\\\text{ est } ${a}$`\n          setReponse(this, i, a)\n          if (this.interactif) texte += ajouteChampTexte(this, i)\n          break\n        case 2: // Impair inférieur à 20\n          a = randint(2, 9)\n          texte = `$\\\\text{La moitié de }${a * 2 + 1}$`\n          texteCorr = `$\\\\text{La moitié de }${a * 2 + 1\n            } \\\\text{ est } ${texNombrec(a + 5 / 10)}$`\n          setReponse(this, i, calcul(a + 5 / 10))\n          if (this.interactif) texte += ajouteChampTexte(this, i)\n          break\n        case 3: // Table de 200\n          a = randint(2, 9)\n          texte = `$\\\\text{La moitié de }${texNombre(a * 2 * 100)}$`\n          texteCorr = `$\\\\text{La moitié de }${texNombre(\n            a * 2 * 100\n          )} \\\\text{ est } ${texNombre(a * 100)}$`\n          setReponse(this, i, a * 100)\n          if (this.interactif) texte += ajouteChampTexte(this, i)\n          break\n        case 4: // a00 avec a impair\n          a = randint(2, 9)\n          texte = `$\\\\text{La moitié de }${texNombre((a * 2 + 1) * 100)}$`\n          texteCorr = `$\\\\text{La moitié de }${texNombre(\n            (a * 2 + 1) * 100\n          )} \\\\text{ est } ${texNombre(a * 100 + 50)}$`\n          setReponse(this, i, a * 100 + 50)\n          if (this.interactif) texte += ajouteChampTexte(this, i)\n          break\n        case 5: // a,b avec a et b pairs\n          a = randint(2, 9)\n          b = randint(2, 9)\n          texte = `$\\\\text{La moitié de }${texNombrec(\n            a * 2 + (b * 2) / 100\n          )}$`\n          texteCorr = `$\\\\text{La moitié de }${texNombrec(\n            a * 2 + (b * 2) / 100\n          )} \\\\text{ est } ${texNombrec(a + b / 100)}$`\n          setReponse(this, i, calcul(a + b / 100))\n          if (this.interactif) texte += ajouteChampTexte(this, i)\n          break\n        case 6: // 1xx avec xx un nombre pair\n          a = randint(2, 9)\n          texte = `$\\\\text{La moitié de }${100 + a * 2}$`\n          texteCorr = `$\\\\text{La moitié de }${100 + a * 2} \\\\text{ est } ${50 + a\n            }$`\n          setReponse(this, i, 50 + a)\n          if (this.interactif) texte += ajouteChampTexte(this, i)\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","interactifReady","interactifType","amcType","Moitie","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","range1","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","i","cpt","randint","setReponse","interactif","ajouteChampTexte","texNombrec","calcul","texNombre","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}