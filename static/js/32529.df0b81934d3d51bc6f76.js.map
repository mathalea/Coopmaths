{"version":3,"file":"js/32529.df0b81934d3d51bc6f76.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N41-3.js","webpack://mathalea/./src/js/exercices/3e/3L12-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import DevelopperIdentitesRemarquables3 from '../3e/3L12-1.js'\nexport const titre = 'Développer (a-b)(a+b)'\nexport { interactifReady, interactifType } from '../3e/3L12-1.js'\n// export { amcReady, amcType } from '../3e/3L12-1.js'\n\n/**\n * Clone de 3L12-1 pour les 2nde\n *\n * @author Sébastien LOZANO\n */\nexport default function DevelopperIdentitesRemarquables32nde () {\n  DevelopperIdentitesRemarquables3.call(this)\n}\n","import Exercice from '../Exercice.js'\nimport { randint, choice, texFraction, lettreDepuisChiffre, listeQuestionsToContenuSansNumero } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Développer (a-b)(a+b)'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Développer (ax-b)(ax+b)\n* @author Jean-Claude Lhote\n* 3L12-1\n*/\nexport default function DevelopperIdentitesRemarquables3 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Développer et réduire les expressions suivantes.'\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = context.isHtml ? 3 : 2\n  this.spacingCorr = context.isHtml ? 3 : 2\n  this.nbQuestions = 5\n  this.sup = 2\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const Fractions = [[1, 2], [1, 3], [2, 3], [1, 4], [3, 4], [1, 5], [2, 5], [3, 5], [4, 5],\n      [1, 6], [5, 6], [1, 7], [2, 7], [3, 7], [4, 7], [5, 7], [6, 7], [1, 8], [3, 8], [5, 8], [7, 8],\n      [1, 9], [2, 9], [4, 9], [5, 9], [7, 9], [8, 9], [1, 10], [3, 10], [7, 10], [9, 10]]\n    for (let i = 0, ns, ds, texte, texteCorr, reponse, cpt = 0, a, b, fraction = []; i < this.nbQuestions && cpt < 50;) {\n      if (this.sup === 1) {\n        a = randint(1, 9) // coef de x est égal à 1\n        texte = `$${lettreDepuisChiffre(i + 1)} = (x-${a})(x+${a})$` // (x-a)(x+a)\n        texteCorr = `$${lettreDepuisChiffre(i + 1)} = (x-${a})(x+${a})=x^2-${a}^2=x^2-${a * a}$`\n        reponse = `x^2-${a * a}`\n      } else if (this.sup === 2) {\n        a = randint(1, 9) // (bx-a)(bx+a) avec a et b entier positifs entre 1 et 9,  b différent de 1\n        b = randint(2, 9)\n        texte = `$${lettreDepuisChiffre(i + 1)} = (${b}x-${a})(${b}x+${a})$` // b>1\n        texteCorr = `$${lettreDepuisChiffre(i + 1)} = (${b}x-${a})(${b}x+${a})=(${b}x)^2-${a}^2=${b * b}x^2-${a * a}$`\n        reponse = `${b * b}x^2-${a * a}`\n      } else { //  (bx-a)(bx+a) avec a entier et b rationnel simple\n        a = randint(1, 9)\n        fraction = choice(Fractions)\n        ns = fraction[0]\n        ds = fraction[1]\n        texte = `$${lettreDepuisChiffre(i + 1)} = \\\\left(${texFraction(ns, ds)}x-${a}\\\\right)\\\\left(${texFraction(ns, ds)}x+${a}\\\\right)$` // b>1\n        texteCorr = `$${lettreDepuisChiffre(i + 1)} = \\\\left(${texFraction(ns, ds)}x-${a}\\\\right)\\\\left(${texFraction(ns, ds)}x+${a}\\\\right)=\\\\left(${texFraction(ns, ds)}x\\\\right)^2-${a}^2=${texFraction(ns * ns, ds * ds)}x^2-${a * a}$`\n        reponse = `${texFraction(ns * ns, ds * ds)}x^2-${a * a}`\n      }\n      if (this.interactif) {\n        texte += `<br>$${lettreDepuisChiffre(i + 1)}=$` + ajouteChampTexteMathLive(this, i, 'inline largeur75')\n        texte += '<br>'\n      }\n\n      setReponse(this, i, reponse)\n      if (this.sup === 1 ? this.questionJamaisPosee(i, a) : this.sup === 2 ? this.questionJamaisPosee(i, a, b) : this.questionJamaisPosee(i, a, ns, ds)) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, ' 1 : Coefficient de x égal à 1\\n 2 : Coefficient de x supérieur à 1\\n 3 : Coefficient de x rationnel']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","DevelopperIdentitesRemarquables32nde","DevelopperIdentitesRemarquables3","this","interactifReady","interactifType","Exercice","consigne","nbCols","nbColsCorr","spacing","context","spacingCorr","nbQuestions","sup","nouvelleVersion","parseInt","listeQuestions","listeCorrections","Fractions","ns","ds","texte","texteCorr","reponse","a","b","i","cpt","fraction","randint","lettreDepuisChiffre","choice","texFraction","interactif","ajouteChampTexteMathLive","setReponse","questionJamaisPosee","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}