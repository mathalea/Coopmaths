{"version":3,"file":"js/3098.e6e322422c498189a600.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C30-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,calcul,texNombre} from '../../modules/outils.js'\n\nexport const titre = 'Encadrer avec des puissances de 10'\n\n/**\n * Encadrer par des puissances de 10\n * 4C30-1\n * @author Sébastien Lozano\n */\nexport default function Puissances_encadrement() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.sup = 4;\n  this.nbQuestions = 6;\n  this.titre = titre;\n\n  this.consigne = `Encadrer les nombres suivants par deux puissances de 10 d'exposants consécutifs.`;\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  //this.nbQuestionsModifiable = false;\n\n  let typesDeQuestionsDisponibles;\n\n  this.nouvelleVersion = function () {\n    this.sup = Number(this.sup); // attention le formulaire renvoie un string, on a besoin d'un number pour le switch !\n\n    switch (this.sup) {\n      case 1: // nombre enier positif\n        typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6];\n        //this.nbQuestions = typesDeQuestionsDisponibles.length;\n        //this.nbQuestions = 3;\n        break;\n      case 2: // nombre décimal positif\n        typesDeQuestionsDisponibles = [7, 8, 9, 10];\n        //this.nbQuestions = typesDeQuestionsDisponibles.length;\n        //this.nbQuestions = 3;\n        break;\n      case 3: // nombre décimal positif inférieur à 1\n        typesDeQuestionsDisponibles = [11, 12, 13, 14];\n        //this.nbQuestions = typesDeQuestionsDisponibles.length;\n        //this.nbQuestions = 3;\n        break;\n      case 4: // Mélange\n        typesDeQuestionsDisponibles = [\n          choice([1, 2, 3]),\n          choice([4, 5, 6]),\n          choice([7, 8]),\n          choice([9, 10]),\n          choice([11, 12]),\n          choice([13, 14]),\n        ];\n        //this.nbQuestions = typesDeQuestionsDisponibles.length;\n        break;\n    }\n\n    let listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ); // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    // let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      // nombre entier positif, entre 1 et 10, puis 10 et 100 puis ....100 000 et 1 000 000\n      let ent_pos = [];\n      for (let i = 0; i < 6; i++) {\n        ent_pos.push({\n          val: `$${texNombre(calcul(randint(10 ** i + 1, 10 ** (i + 1))))}$`,\n          puissance_inf: `$10^{${i}}$`,\n          puissance_sup: `$10^{${i + 1}}$`,\n          puissance_inf_num: `$${texNombre(calcul(10 ** i))}$`,\n          puissance_sup_num: `$${texNombre(calcul(10 ** (i + 1)))}$`,\n        });\n      }\n\n      // nombre décimal positif 1 et 10 000 avec 1,2,3 puis 4 décimales\n      let dec_pos = [];\n      for (let i = 0; i < 4; i++) {\n        dec_pos.push({\n          val: `$${texNombre(calcul(randint(10000, 100000) / 10 ** (4 - i)))}$`,\n          puissance_inf: `$10^{${i}}$`,\n          puissance_sup: `$10^{${i + 1}}$`,\n          puissance_inf_num: `$${texNombre(calcul(10 ** i))}$`,\n          puissance_sup_num: `$${texNombre(calcul(10 ** (i + 1)))}$`,\n        });\n      }\n      // nombre décimal positif inférieur à 1, entre 0,1 et 1 puis entre 0,01 et 0,1 puis 0,001 et 0,0001\n      let dec_pos_inf_un = [];\n      for (let i = 0; i < 4; i++) {\n        dec_pos_inf_un.push({\n          val: `$${texNombre(calcul(randint(10 ** (4 - i - 1) + 1, 10 ** (4 - i)) / 10000))}$`,\n          puissance_inf: `$10^{${-(i + 1)}}$`,\n          puissance_sup: `$10^{${-i}}$`,\n          puissance_inf_num: `$${texNombre(calcul(10 ** -(i + 1)))}$`,\n          puissance_sup_num: `$${texNombre(calcul(10 ** -i))}$`,\n        });\n      }\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // nombre enier positif\n          texte = `${ent_pos[0].val}`;\n          texteCorr = `${ent_pos[0].puissance_inf} $\\\\leqslant$ ${ent_pos[0].val} $\\\\leqslant$ ${ent_pos[0].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[0].puissance_inf} = ${ent_pos[0].puissance_inf_num} et ${ent_pos[0].puissance_sup} = ${ent_pos[0].puissance_sup_num}`;\n          break;\n        case 2: // nombre enier positif\n          texte = `${ent_pos[1].val}`;\n          texteCorr = `${ent_pos[1].puissance_inf} $\\\\leqslant$ ${ent_pos[1].val} $\\\\leqslant$ ${ent_pos[1].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[1].puissance_inf} = ${ent_pos[1].puissance_inf_num} et ${ent_pos[1].puissance_sup} = ${ent_pos[1].puissance_sup_num}`;\n          break;\n        case 3: // nombre enier positif\n          texte = `${ent_pos[2].val}`;\n          texteCorr = `${ent_pos[2].puissance_inf} $\\\\leqslant$ ${ent_pos[2].val} $\\\\leqslant$ ${ent_pos[2].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[2].puissance_inf} = ${ent_pos[2].puissance_inf_num} et ${ent_pos[2].puissance_sup} = ${ent_pos[2].puissance_sup_num}`;\n          break;\n        case 4: // nombre enier positif\n          texte = `${ent_pos[3].val}`;\n          texteCorr = `${ent_pos[3].puissance_inf} $\\\\leqslant$ ${ent_pos[3].val} $\\\\leqslant$ ${ent_pos[3].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[3].puissance_inf} = ${ent_pos[3].puissance_inf_num} et ${ent_pos[3].puissance_sup} = ${ent_pos[3].puissance_sup_num}`;\n          break;\n        case 5: // nombre enier positif\n          texte = `${ent_pos[4].val}`;\n          texteCorr = `${ent_pos[4].puissance_inf} $\\\\leqslant$ ${ent_pos[4].val} $\\\\leqslant$ ${ent_pos[4].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[4].puissance_inf} = ${ent_pos[4].puissance_inf_num} et ${ent_pos[4].puissance_sup} = ${ent_pos[4].puissance_sup_num}`;\n          break;\n        case 6: // nombre enier positif\n          texte = `${ent_pos[5].val}`;\n          texteCorr = `${ent_pos[5].puissance_inf} $\\\\leqslant$ ${ent_pos[5].val} $\\\\leqslant$ ${ent_pos[5].puissance_sup}`;\n          texteCorr += ` car ${ent_pos[5].puissance_inf} = ${ent_pos[5].puissance_inf_num} et ${ent_pos[5].puissance_sup} = ${ent_pos[5].puissance_sup_num}`;\n          break;\n        case 7: // nombre décimal positif\n          texte = `${dec_pos[0].val}`;\n          texteCorr = `${dec_pos[0].puissance_inf} $\\\\leqslant$ ${dec_pos[0].val} $\\\\leqslant$ ${dec_pos[0].puissance_sup}`;\n          texteCorr += ` car ${dec_pos[0].puissance_inf} = ${dec_pos[0].puissance_inf_num} et ${dec_pos[0].puissance_sup} = ${dec_pos[0].puissance_sup_num}`;\n          break;\n        case 8: // nombre décimal positif\n          texte = `${dec_pos[1].val}`;\n          texteCorr = `${dec_pos[1].puissance_inf} $\\\\leqslant$ ${dec_pos[1].val} $\\\\leqslant$ ${dec_pos[1].puissance_sup}`;\n          texteCorr += ` car ${dec_pos[1].puissance_inf} = ${dec_pos[1].puissance_inf_num} et ${dec_pos[1].puissance_sup} = ${dec_pos[1].puissance_sup_num}`;\n          break;\n        case 9: // nombre décimal positif\n          texte = `${dec_pos[2].val}`;\n          texteCorr = `${dec_pos[2].puissance_inf} $\\\\leqslant$ ${dec_pos[2].val} $\\\\leqslant$ ${dec_pos[2].puissance_sup}`;\n          texteCorr += ` car ${dec_pos[2].puissance_inf} = ${dec_pos[2].puissance_inf_num} et ${dec_pos[2].puissance_sup} = ${dec_pos[2].puissance_sup_num}`;\n          break;\n        case 10: // nombre décimal positif\n          texte = `${dec_pos[3].val}`;\n          texteCorr = `${dec_pos[3].puissance_inf} $\\\\leqslant$ ${dec_pos[3].val} $\\\\leqslant$ ${dec_pos[3].puissance_sup}`;\n          texteCorr += ` car ${dec_pos[3].puissance_inf} = ${dec_pos[3].puissance_inf_num} et ${dec_pos[3].puissance_sup} = ${dec_pos[3].puissance_sup_num}`;\n          break;\n        case 11: // nombre décimal positif inferieur à 1\n          texte = `${dec_pos_inf_un[0].val}`;\n          texteCorr = `${dec_pos_inf_un[0].puissance_inf} $\\\\leqslant$ ${dec_pos_inf_un[0].val} $\\\\leqslant$ ${dec_pos_inf_un[0].puissance_sup}`;\n          texteCorr += ` car ${dec_pos_inf_un[0].puissance_inf} = ${dec_pos_inf_un[0].puissance_inf_num} et ${dec_pos_inf_un[0].puissance_sup} = ${dec_pos_inf_un[0].puissance_sup_num}`;\n          break;\n        case 12: // nombre décimal positif inferieur à 1\n          texte = `${dec_pos_inf_un[1].val}`;\n          texteCorr = `${dec_pos_inf_un[1].puissance_inf} $\\\\leqslant$ ${dec_pos_inf_un[1].val} $\\\\leqslant$ ${dec_pos_inf_un[1].puissance_sup}`;\n          texteCorr += ` car ${dec_pos_inf_un[1].puissance_inf} = ${dec_pos_inf_un[1].puissance_inf_num} et ${dec_pos_inf_un[1].puissance_sup} = ${dec_pos_inf_un[1].puissance_sup_num}`;\n          break;\n        case 13: // nombre décimal positif inferieur à 1\n          texte = `${dec_pos_inf_un[2].val}`;\n          texteCorr = `${dec_pos_inf_un[2].puissance_inf} $\\\\leqslant$ ${dec_pos_inf_un[2].val} $\\\\leqslant$ ${dec_pos_inf_un[2].puissance_sup}`;\n          texteCorr += ` car ${dec_pos_inf_un[2].puissance_inf} = ${dec_pos_inf_un[2].puissance_inf_num} et ${dec_pos_inf_un[2].puissance_sup} = ${dec_pos_inf_un[2].puissance_sup_num}`;\n          break;\n        case 14: // nombre décimal positif inferieur à 1\n          texte = `${dec_pos_inf_un[3].val}`;\n          texteCorr = `${dec_pos_inf_un[3].puissance_inf} $\\\\leqslant$ ${dec_pos_inf_un[3].val} $\\\\leqslant$ ${dec_pos_inf_un[3].puissance_sup}`;\n          texteCorr += ` car ${dec_pos_inf_un[3].puissance_inf} = ${dec_pos_inf_un[3].puissance_inf_num} et ${dec_pos_inf_un[3].puissance_sup} = ${dec_pos_inf_un[3].puissance_sup_num}`;\n          break;\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    4,\n    \"1 : nombre entier positif\\n2 : nombre décimal positif\\n3 : nombre entier positif inférieur à un\\n4 : Mélange\",\n  ];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Puissances_encadrement","typesDeQuestionsDisponibles","Exercice","this","sup","nbQuestions","consigne","nbCols","nbColsCorr","nouvelleVersion","Number","choice","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","texte","texteCorr","i","cpt","ent_pos","push","val","texNombre","calcul","randint","puissance_inf","puissance_sup","puissance_inf_num","puissance_sup_num","dec_pos","dec_pos_inf_un","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}