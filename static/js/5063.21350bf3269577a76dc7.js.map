{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3Algo1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Instruction_conditionelle","Exercice","this","debug","sup","nbQuestions","consigne","typeExercice","nbCols","nbColsCorr","nbQuestionsModifiable","sortieHtml","spacing","spacingCorr","listePackages","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","code_tikz","code_svg","nbRepetition","sup2","xLutin","yLutin","n1","randint","n2","n3","n4","scratchblocks_Tikz","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice"],"mappings":"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","file":"js/5063.21350bf3269577a76dc7.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint} from '../../modules/outils.js'\nexport const titre = 'Instruction conditionelle'\n\n/**\n * * Instructions conditionnelles\n * * numéro de l'exo ex : 3Algo1\n * * publié le  24/11/2020\n * @author Erwan Duplessy\n */\nexport default function Instruction_conditionelle() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.debug = false;\n\tthis.sup = 1;\n\tthis.nbQuestions = 2;\n\n\tthis.titre = titre;\n\tthis.consigne = `Donner les coordonnées de la position finale du lutin.`;\n\tthis.typeExercice = \"Scratch\"\n\tthis.nbCols = 2;\n\tthis.nbColsCorr = 1;\n\tthis.nbQuestionsModifiable = false;\n\tsortieHtml ? this.spacing = 1 : this.spacing = 1;\n\tsortieHtml ? this.spacingCorr = 1 : this.spacingCorr = 1;\n\tthis.listePackages = `scratch3`;\n\t//let type_de_questions_disponibles;\t\n\tthis.nouvelleVersion = function () {\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tfunction scratchblocks_Tikz(code_svg, code_tikz) {\n\t\t\tif (sortieHtml) {\n\t\t\t\treturn code_svg;\n\t\t\t} else {\n\t\t\t\treturn code_tikz;\n\t\t\t};\n\t\t};\n\n\t\tlet texte = \"La position initiale d'un lutin dans un repère est (0,0). Dans le programme, x désigne l'abscisse, et y désigne l'ordonnée d'un lutin. <br>\"; // texte de l'énoncé\n\t\ttexte += `Une variable a été créée, elle s'appelle <code class=\"b\">(var) :: ring</code>. <br>`;\n\t\tlet texteCorr = \" \"; // texte du corrigé\n\t\tlet code_tikz = ``; // code pour dessiner les blocs en tikz\n\t\tlet code_svg = ``; // code pour dessiner les blocs en svg\n\t\tlet nbRepetition = 1; // Nombre de fois où la boucle est répétée. \n\t\tif (this.sup2) {\n\t\t\tnbRepetition = 3;\n\t\t}\n\t\tlet xLutin = 0;\n\t\tlet yLutin = 0;\n\n\t\tcode_tikz += `\\\\medskip \\\\\\\\ \\\\begin{scratch} <br>`;\n\t\tcode_svg += `<pre class='blocks'>`;\n\n\t\tlet n1 = randint(1, 10);\n\t\tlet n2 = randint(1, 10);\n\t\tlet n3 = randint(1, 10);\n\t\tlet n4 = randint(1, 10);\n\n\t\tcode_tikz += `\\\\blockmove{aller à x: \\ovalnum{0} y: \\ovalnum{0}}`;\n\t\tcode_svg += `quand le drapeau vert pressé <br>`;\n\t\tcode_svg += `Aller à x:(0) y:(0) <br>`;\n\t\tcode_svg += `mettre (var) à (${n1}) <br>`;\n\t\tcode_svg += ` si <(var) < [${n2}]> alors <br>`;\n\t\tcode_svg += ` ajouter (100) à x <br>`;\n\t\tif (this.sup > 1) {\n\t\t\tcode_svg += ` si <(var) > [${n3}]> alors <br>`;\n\t\t\tcode_svg += ` ajouter (50) à x <br>`;\n\t\t\tcode_svg += ` fin <br>`;\n\t\t}\n\t\tcode_svg += ` sinon <br>`;\n\t\tcode_svg += ` ajouter (70) à y <br>`;\n\t\tif (this.sup > 2) {\n\t\t\tcode_svg += ` si <(var) > [${n4}]> alors <br>`;\n\t\t\tcode_svg += ` ajouter (40) à y <br>`;\n\t\t\tcode_svg += ` fin <br>`;\n\t\t}\n\t\tcode_svg += ` fin <br>`;\n\n\t\tcode_svg += `</pre>`;\n\t\tcode_tikz += `\\\\end{scratch}`;\n\n\t\ttexte += scratchblocks_Tikz(code_svg, code_tikz);\n\n\n\t\tif (n1 < n2) {\n\t\t\ttexteCorr += `Comme l'inégalité \"${n1} < ${n2}\" est vraie, alors on ajoute 100 à l'abscisse du lutin. <br>`;\n\t\t\txLutin += 100;\n\t\t\tif (this.sup > 1) {\n\t\t\t\tif (n1 > n3) {\n\t\t\t\t\ttexteCorr += `Comme l'inégalité \"${n1} > ${n3}\" est vraie, alors on ajoute 50 à l'abscisse du lutin. <br>`;\n\t\t\t\t\txLutin += 50;\n\t\t\t\t} else {\n\t\t\t\t\ttexteCorr += `Comme l'inégalité \"${n1} > ${n3}\" est fausse, alors on ne change pas l'abscisse du lutin. <br>`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ttexteCorr += `Comme l'inégalité \"${n1} < ${n2}\" est fausse, alors on ajoute 70 à l'ordonnée du lutin. <br>`;\n\t\t\tyLutin += 70;\n\t\t\tif (this.sup > 2) {\n\t\t\t\tif (n1 > n4) {\n\t\t\t\t\ttexteCorr += `Comme l'inégalité \"${n1} > ${n4}\" est vraie, on ajoute 40 à l'ordonnée du lutin. <br>`;\n\t\t\t\t\tyLutin += 40;\n\t\t\t\t} else {\n\t\t\t\t\ttexteCorr += `Comme l'inégalité \"${n1} > ${n4}\" est fausse, alors on ne change pas l'ordonnée du lutin. <br>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttexteCorr += ` La position finale est donc : (${xLutin} ; ${yLutin}).`;\n\n\n\t\tthis.listeQuestions.push(texte);\n\t\tthis.listeCorrections.push(texteCorr);\n\t\tlisteQuestionsToContenu(this);\n\t};\n\tthis.besoinFormulaireNumerique = [`Variante `, 3, '1 : sans condition imbriquée\\n2 : avec une condition imbriquée\\n3 : avec deux conditions imbriquées'];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}