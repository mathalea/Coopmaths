{"version":3,"file":"js/72684.c8d936901c64e27e2390.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N22-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes } from '../../modules/outils.js'\nimport { mathalea2d } from '../../modules/2d.js'\nimport { fraction } from '../../modules/fractions.js'\nexport const titre = 'Mettre bout à bout des segments'\n\n/**\n * Représenter une somme de fracions de même dénominateur sur un segment gradué de façon adaptée.\n * @author Jean-Claude Lhote\n * 6N14-2\n */\nexport default function AjouterDesFractionsDunite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 4\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 3\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let sc, objets\n    const ppc = 20\n    if (context.isHtml) {\n      sc = 0.5\n    } else {\n      sc = 0.3\n    }\n\n    let params; let den; const num = [0, 0, 0, 0]; const f = []\n\n    const liste = combinaisonListes([5, 6, 7, 8], this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      objets = []\n      den = liste[i]\n      num[0] = randint(1, den - 1)\n      num[1] = randint(1, den - 1, num[0])\n      num[2] = randint(1, den - 1, num[1])\n      num[3] = randint(1, den - 1, [num[2], num[0]])\n      for (let j = 0; j < 4; j++) { f[j] = fraction(num[j], den) }\n\n      texte = `On place bout à bout 4 segments de longueurs respectives$ ${f[0].texFraction}$, $${f[1].texFraction}$, $${f[2].texFraction}$ et $${f[3].texFraction}$.<br>`\n      texte += 'Quelle est la longueur du segment obtenu ?'\n      texteCorr = 'Voici sur ces dessins, coloriés en rouge, les différents segments :<br>'\n      for (let j = 0; j < 4; j++) { objets.push(f[j].representation(0, 5 - j * 1.25, 5, 0, 'segment', 'red', 0, 1, 1)) }\n      params = {\n        xmin: -0.4,\n        ymin: -1.5,\n        xmax: 6,\n        ymax: 6,\n        pixelsParCm: ppc,\n        scale: 0.5\n      }\n      texteCorr += mathalea2d(params, ...objets)\n      texteCorr += '<br>Ce qui donne en les mettant bout à bout :<br>'\n      params = {\n        xmin: -0.4,\n        ymin: -1.5,\n        xmax: 20,\n        ymax: 1,\n        pixelsParCm: ppc,\n        scale: sc\n      }\n      texteCorr += mathalea2d(params, fraction(num[0] + num[1] + num[2] + num[3], den).representation(0, 0, 5, 0, 'segment', 'red', 0, 1, 0.6))\n      texteCorr += `<br>La longueur du segment ainsi obtenu est : $${fraction(num[0] + num[1] + num[2] + num[3], den).texFraction}$`\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Type de cahier',\n    3,\n    '1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","AjouterDesFractionsDunite","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","sc","objets","listeQuestions","listeCorrections","params","den","context","num","f","liste","combinaisonListes","texte","texteCorr","i","cpt","randint","j","fraction","texFraction","push","representation","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}