{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6M30.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","amcReady","amcType","interactifReady","interactifType","CalculDeVolumes","typesDeQuestionsDisponibles","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","classe","sup3","nouvelleVersion","numeroExercice","parseInt","autoCorrection","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","listeUnites","partieDecimale1","partieDecimale2","partieDecimale3","sup2","calcul","randint","texte","texteCorr","L","l","h","c","r","j","resultat","resultat2","resultat3","resultat4","volume","i","cpt","texNombre","texNombrec","Math","round","arrondi","PI","texFraction","enonce","propositions","statut","options","interactif","propositionsQcm","setReponse","Grandeur","formatInteractif","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","context","besoinFormulaire3Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/48337.9c5abbcf5f29514665ff.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, arrondi, calcul, texNombrec, texNombre, texFraction } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, propositionsQcm, setReponse } from '../../modules/gestionInteractif.js'\nimport Grandeur from '../../modules/Grandeur.js'\n\nexport const titre = 'Calculs de volumes'\nexport const amcReady = true\nexport const amcType = 1 // type de question AMC\nexport const interactifReady = true\nexport const interactifType = ['qcm', 'mathLive']\n/**\n * Calcul de volumes (cube et pavé droit).\n * @author Jean-Claude Lhote // modifié par Mireille Gain pour y ajouter les décimaux\n * référence 6M30\n */\n\nexport default function CalculDeVolumes () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Calculer, en détaillant, le volume des solides donnés. Arrondir à l'unité\"\n  this.nbQuestions = 4\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.classe = 6\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.sup3 = 2\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.interactifType = parseInt(this.sup3) === 2 ? 'mathLive' : 'qcm'\n    this.autoCorrection = []\n    if (this.classe === 6) { // sixième : cube et pavé droit\n      typesDeQuestionsDisponibles = [1, 2]\n    } else if (this.classe === 5) { // cinquième : on ajoute les prismes et le cylindre\n      typesDeQuestionsDisponibles = [1, 2, 3, 4]\n    } else if (this.classe === 4) { // Quatrième : on ajoute pyramides et cones\n      typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6]\n    } else {\n      typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7] // Troisième : on ajoute les boules.\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const listeUnites = [\n      ['~\\\\text{m}', '~\\\\text{m}^3', 'm^3'],\n      ['~\\\\text{dm}', '~\\\\text{dm}^3', 'dm^3'],\n      ['~\\\\text{cm}', '~\\\\text{cm}^3', 'cm^3'],\n      ['~\\\\text{mm}', '~\\\\text{mm}^3', 'mm^3']\n    ]\n    let partieDecimale1, partieDecimale2, partieDecimale3\n    if (this.sup2) {\n      partieDecimale1 = calcul(randint(1, 9) / 10 * randint(0, 1))\n      partieDecimale2 = calcul(randint(1, 9) / 10 * randint(0, 1))\n      partieDecimale3 = calcul(randint(1, 9) / 10 * randint(0, 1))\n    } else {\n      partieDecimale1 = 0\n      partieDecimale2 = 0\n      partieDecimale3 = 0\n    }\n    for (let i = 0, texte, texteCorr, L, l, h, c, r, j, resultat, resultat2, resultat3, resultat4, volume, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // cube\n          c = calcul(randint(2, 10) + partieDecimale1)\n          volume = c * c * c\n          j = randint(0, 3) // pour le choix de l'unité\n          texte = `Un cube de $${texNombre(c)} ${listeUnites[j][0]}$ d'arête en $${listeUnites[j][1]}$.`\n          texteCorr = `$\\\\mathcal{V}= c^3 =c \\\\times c \\\\times c = ${texNombre(c)}${listeUnites[j][0]}\\\\times${texNombre(c)}${listeUnites[j][0]}\\\\times${texNombre(c)}${listeUnites[j][0]}=${texNombrec(volume)}${listeUnites[j][1]}`\n          if (volume !== Math.round(volume)) {\n            texteCorr += `\\\\approx ${Math.round(volume)}${listeUnites[j][1]}$`\n          } else {\n            texteCorr += '$'\n          }\n          resultat = Math.round(volume)\n          if (c !== 6) resultat2 = Math.round(6 * c * c)\n          else resultat2 = Math.round(24 * c)\n          if (c !== 2) resultat3 = Math.round(4 * c)\n          else resultat3 = 24\n          resultat4 = Math.round(6 * c)\n          break\n        case 2: // pavé droit\n          if (this.sup === 1) { // sans conversion\n            j = randint(0, 3) // pour le choix de l'unité\n            l = calcul(randint(2, 5) + partieDecimale1)\n            h = calcul(randint(3, 6) + partieDecimale2)\n            L = calcul(randint(6, 10) + partieDecimale3)\n            volume = l * L * h\n            texte = `Un pavé droit de $${texNombre(l)}${listeUnites[j][0]}$ de largeur, de $${texNombre(L)}${listeUnites[j][0]}$ de longueur et de $${texNombre(h)}${listeUnites[j][0]}$ de hauteur en $${listeUnites[j][1]}$.`\n            texteCorr = `$\\\\mathcal{V}= l \\\\times L \\\\times h = ${texNombre(l)}${listeUnites[j][0]}\\\\times${texNombre(L)}${listeUnites[j][0]}\\\\times${texNombre(h)}${listeUnites[j][0]}=${texNombrec(volume)}${listeUnites[j][1]}`\n            if (volume !== Math.round(volume)) {\n              texteCorr += `\\\\approx ${Math.round(volume)}${listeUnites[j][1]}$`\n            } else {\n              texteCorr += '$'\n            }\n            resultat = Math.round(volume)\n            resultat2 = Math.round(6 * (l + L + h))\n            resultat3 = Math.round(2 * l * L + 2 * L * h + 2 * l * h)\n            resultat4 = Math.round(2 * (l + L + h))\n          } else {\n            // avec conversion\n            j = randint(1, 2) // pour le choix de l'unité  centrale\n            l = calcul(randint(2, 5) + partieDecimale1)\n            h = calcul(randint(3, 6) * 10 + partieDecimale2)\n            L = arrondi(randint(6, 10) / 10, 1)\n            volume = l * L * h\n            texte = `Un pavé droit de $${texNombre(l)}${listeUnites[j][0]}$ de largeur, de $${texNombre(L)}${listeUnites[j - 1][0]}$ de longueur et de $${texNombre(h)}${listeUnites[j + 1][0]}$ de hauteur en $${listeUnites[j][1]}$.`\n            texteCorr = `$\\\\mathcal{V}= l \\\\times L \\\\times h = ${texNombre(l)}${listeUnites[j][0]}\\\\times${texNombre(L)}${listeUnites[j - 1][0]}\\\\times${texNombre(h)}${listeUnites[j + 1][0]}=${l}${listeUnites[j][0]}\\\\times${texNombrec(L * 10)}${listeUnites[j][0]}\\\\times${texNombrec(h / 10)}${listeUnites[j][0]}=${texNombrec(volume)}${listeUnites[j][1]}`\n            if (volume !== Math.round(volume)) {\n              texteCorr += `\\\\approx ${Math.round(volume)}${listeUnites[j][1]}$`\n            } else {\n              texteCorr += '$'\n            }\n            resultat = Math.round(volume)\n            resultat2 = Math.round(6 * (l + L + h))\n            resultat3 = Math.round(2 * l * L + 2 * L * h + 2 * l * h)\n            resultat4 = Math.round(2 * (l + L + h))\n          }\n          break\n        case 3: // Cylindre\n          if (this.sup === 1) {\n            // sans conversion\n            j = randint(0, 3) // pour le choix de l'unité\n            r = randint(2, 10)\n            h = randint(2, 15)\n            volume = r * r * h * Math.PI\n            resultat = Math.round(volume)\n            resultat2 = Math.round(4 * volume)\n            resultat3 = Math.round(volume / 2)\n            resultat4 = Math.round(2 * volume)\n            texte = `Un cylindre de $${r}${listeUnites[j][0]}$ de rayon et de $${texNombre(h)}${listeUnites[j][0]}$ de hauteur en $${listeUnites[j][1]}$.`\n            texteCorr = `$\\\\mathcal{V}=\\\\pi \\\\times R ^2 \\\\times h =\\\\pi\\\\times\\\\left(${r}${listeUnites[j][0]}\\\\right)^2\\\\times${h}${listeUnites[j][0]}=${texNombrec(\n              r * r * h\n            )}\\\\pi${listeUnites[j][1]}\\\\approx${texNombrec(\n              arrondi(volume, 0)\n            )}${listeUnites[j][1]}$`\n          } else {\n            j = randint(2, 3) // pour le choix de l'unité\n            r = randint(2, 10)\n            h = randint(20, 150)\n            texte = `Un cylindre de $${r}${listeUnites[j][0]}$ de rayon et de $${texNombrec(h / 10)}${listeUnites[j - 1][0]}$ de hauteur en $${listeUnites[j][1]}$.`\n            texteCorr = `$\\\\mathcal{V}=\\\\pi \\\\times R ^2 \\\\times h =\\\\pi\\\\times\\\\left(${r}${listeUnites[j][0]}\\\\right)^2\\\\times${texNombrec(h / 10)}${listeUnites[j - 1][0]}=\\\\pi\\\\times${r * r}${listeUnites[j][0]}^2\\\\times${h}${listeUnites[j][0]}=${texNombrec(r * r * h)}\\\\pi${listeUnites[j][1]}\\\\approx${Math.round(volume)}${listeUnites[j][1]}$`\n            resultat = Math.round(volume)\n            resultat2 = Math.round(4 * volume)\n            resultat3 = Math.round(volume / 2)\n            resultat4 = Math.round(2 * volume)\n          }\n          break\n        case 4: // prisme droit\n          if (this.sup === 1) {\n            // sans conversion\n            j = randint(0, 3) // pour le choix de l'unité\n            c = calcul(randint(2, 10) + partieDecimale3)\n            h = randint(2, 5)\n            l = randint(6, 10)\n            volume = (c * h * l) / 2\n            texte = `Un prisme droit de hauteur $${texNombre(l)}${listeUnites[j][0]}$ et dont les bases sont des triangles de base $${texNombre(c)}${listeUnites[j][0]}$ et de hauteur correspondante $${h}${listeUnites[j][0]}$ en $${listeUnites[j][1]}$.`\n            texteCorr = `$\\\\mathcal{V}=\\\\mathcal{B} \\\\times h=\\\\dfrac{${texNombre(c)}${listeUnites[j][0]}\\\\times${texNombre(h)}${listeUnites[j][0]}}{2}\\\\times${texNombre(l)}${listeUnites[j][0]}=${texNombre(volume)}${listeUnites[j][1]}`\n            if (volume !== Math.round(volume)) {\n              texteCorr += `\\\\approx ${Math.round(volume)}${listeUnites[j][1]}$`\n            } else {\n              texteCorr += '$'\n            }\n            resultat = Math.round(volume)\n            resultat2 = Math.round(4 * volume)\n            resultat3 = Math.round((c + h) * l)\n            resultat4 = Math.round(2 * volume)\n          } else {\n            j = randint(1, 2) // pour le choix de l'unité\n            c = calcul(randint(2, 10) + partieDecimale3)\n            h = randint(30, 50)\n            l = arrondi(randint(5, 15) / 10, 1)\n            texte = `Un prisme droit de hauteur $${texNombre(l)}${listeUnites[j - 1][0]}$ et dont les bases sont des triangles de base $${texNombre(c)}${listeUnites[j][0]}$ et de hauteur correspondante $${h}${listeUnites[j + 1][0]}$ en $${listeUnites[j][1]}$.`\n            texteCorr = `$\\\\mathcal{V}=\\\\mathcal{B} \\\\times h=\\\\dfrac{${c}${listeUnites[j][0]}\\\\times${h}${listeUnites[j + 1][0]}}{2}\\\\times${texNombrec(l)}${listeUnites[j - 1][0]}=\\\\dfrac{${c}${listeUnites[j][0]}\\\\times${texNombrec(\n              calcul(h / 10)\n            )}${listeUnites[j][0]}}{2}\\\\times${l * 10}${listeUnites[j][0]}=${texNombre(volume)}${listeUnites[j][1]}`\n            if (volume !== Math.round(volume)) {\n              texteCorr += `\\\\approx ${Math.round(volume)}${listeUnites[j][1]}$`\n            } else {\n              texteCorr += '$'\n            }\n            resultat = Math.round(volume)\n            resultat2 = Math.round(4 * volume)\n            resultat3 = Math.round((c + h) * l)\n            resultat4 = Math.round(2 * volume)\n          }\n          break\n        case 5: // cone\n          if (this.sup === 1) {\n            // sans conversion\n            j = randint(0, 3) // pour le choix de l'unité\n            r = randint(2, 10)\n            h = randint(2, 15)\n            volume = (r * r * h * Math.PI) / 3\n            texte = `Un cône de $${r}${listeUnites[j][0]}$ de rayon et de $${texNombre(h)}${listeUnites[j][0]}$ de hauteur en $${listeUnites[j][1]}$.`\n            texteCorr = `$\\\\mathcal{V}=\\\\dfrac{1}{3} \\\\times \\\\mathcal{B} \\\\times h=\\\\dfrac{1}{3}\\\\times\\\\pi\\\\times\\\\left(${r}${listeUnites[j][0]}\\\\right)^2\\\\times${h}${listeUnites[j][0]}=${texFraction(\n              r * r * h,\n              3\n            )}\\\\pi${listeUnites[j][1]}\\\\approx${texNombrec(Math.round(volume))}${listeUnites[j][1]}$`\n            resultat = Math.round(volume)\n            resultat2 = Math.round(4 * volume)\n            resultat3 = Math.round(volume / 2)\n            resultat4 = Math.round(2 * volume)\n          } else {\n            j = randint(2, 3) // pour le choix de l'unité\n            r = randint(2, 10)\n            h = randint(20, 150)\n            volume = (r * r * h * Math.PI) / 3\n            texte = `Un cône de $${texNombre(r)}${listeUnites[j][0]}$ de rayon et de $${texNombrec(h / 10)}${listeUnites[j - 1][0]}$ de hauteur en $${listeUnites[j][1]}$.`\n            texteCorr = `$\\\\mathcal{V}=\\\\dfrac{1}{3} \\\\times \\\\mathcal{B} \\\\times h=\\\\dfrac{1}{3}\\\\times\\\\pi\\\\times\\\\left(${r}${listeUnites[j][0]}\\\\right)^2\\\\times${texNombrec(calcul(h / 10))}${listeUnites[j - 1][0]}=\\\\dfrac{1}{3}\\\\times\\\\pi\\\\times\\\\left(${r}${listeUnites[j][0]}\\\\right)^2\\\\times${texNombrec(h)}${listeUnites[j][0]}=${texFraction(r * r * h, 3)}\\\\pi\\\\approx${texNombre(Math.round(volume))}${listeUnites[j][1]}$`\n            resultat = Math.round(volume)\n            resultat2 = Math.round(4 * volume)\n            resultat3 = Math.round(volume / 2)\n            resultat4 = Math.round(2 * volume)\n          }\n          break\n        case 6: // pyramide\n          if (this.sup === 1) {\n            // sans conversion\n            j = randint(0, 3) // pour le choix de l'unité\n            c = calcul(randint(2, 10) + partieDecimale2)\n            h = randint(2, 5)\n            l = randint(6, 10)\n            volume = (c * c * h) / 3\n            texte = `Une pyramide de hauteur $${h}${listeUnites[j][0]}$ et dont la base  est un carré de $${texNombre(c)}${listeUnites[j][0]}$ de côté en $${listeUnites[j][1]}$.`\n            texteCorr = `$\\\\mathcal{V}=\\\\dfrac{1}{3} \\\\times \\\\mathcal{B} \\\\times h=\\\\dfrac{1}{3}\\\\times\\\\left(${texNombre(c)}${listeUnites[j][0]}\\\\right)^2\\\\times${h}${listeUnites[j][0]}`\n            if (calcul((c * c * h) / 3, false) === arrondi((c * c * h) / 3, 1)) {\n              texteCorr += `=${texNombrec(\n                arrondi(calcul((c * c * h) / 3), 1)\n              )}${listeUnites[j][1]}$`\n            } else {\n              texteCorr += `\\\\approx${texNombre(Math.round(volume))}${listeUnites[j][1]}$`\n            }\n            resultat = Math.round(volume)\n            resultat2 = Math.round(3 * volume)\n            resultat3 = Math.round(3 * volume / 4)\n            resultat4 = Math.round(volume / 2)\n          } else {\n            j = randint(1, 2) // pour le choix de l'unité\n            c = calcul(randint(2, 10) + partieDecimale2)\n            h = randint(30, 50)\n            l = arrondi(randint(5, 15) / 10, 1)\n            volume = (c * c * h) / 3\n            texte = `Une pyramide de hauteur $${texNombrec(h / 10)}${listeUnites[j - 1][0]}$ et dont la base  est un carré de $${texNombre(c)}${listeUnites[j][0]}$ et de hauteur correspondante $${h}${listeUnites[j + 1][0]}$ en $${listeUnites[j][1]}$.`\n            texteCorr = `$\\\\mathcal{V}=\\\\dfrac{1}{3} \\\\times \\\\mathcal{B} \\\\times h=\\\\dfrac{1}{3}\\\\times\\\\left(${texNombre(c)}${listeUnites[j][0]}\\\\right)^2\\\\times${texNombrec(h / 10)}${listeUnites[j - 1][0]}=\\\\dfrac{1}{3}\\\\times${c * c}${listeUnites[j][0]}^2\\\\times${texNombrec(h)}${listeUnites[j][0]}`\n            if (volume === Math.round(volume)) {\n              texteCorr += `=${texNombre(Math.round(volume))}${listeUnites[j][1]}$`\n            } else {\n              texteCorr += `\\\\approx${texNombre(Math.round(volume))}${listeUnites[j][1]}$`\n            }\n            resultat = Math.round(volume)\n            resultat2 = Math.round(3 * volume)\n            resultat3 = Math.round(3 * volume / 4)\n            resultat4 = Math.round(volume / 2)\n          }\n          break\n        case 7: // boule\n          j = randint(0, 3) // pour le choix de l'unité\n          r = randint(2, 10)\n          volume = (4 * Math.PI * r * r * r) / 3\n          texte = `Une boule de $${r}${listeUnites[j][0]}$ de rayon en $${listeUnites[j][1]}$.`\n          texteCorr = `$\\\\mathcal{V}=\\\\dfrac{4}{3} \\\\times \\\\pi \\\\times R^3=\\\\dfrac{4}{3}\\\\times\\\\pi\\\\times\\\\left(${r}${listeUnites[j][0]}\\\\right)^3=${texFraction(calcul(4 * r * r * r), 3)}\\\\pi${listeUnites[j][1]}\\\\approx${texNombre(Math.round(volume))}${listeUnites[j][1]}$`\n          resultat = Math.round(volume)\n          resultat2 = Math.round(3 * volume)\n          resultat3 = Math.round(4 * r * r * r / 3)\n          resultat4 = Math.round(3 * volume / 4)\n          break\n      }\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [{\n        texte: `$${texNombre(resultat)}$`,\n        statut: true\n      },\n      {\n        texte: `$${texNombre(resultat2)}$`,\n        statut: false\n      },\n      {\n        texte: `$${texNombre(resultat3)}$`,\n        statut: false\n      },\n      {\n        texte: `$${texNombre(resultat4)}$`,\n        statut: false\n      }\n      ]\n      this.autoCorrection[i].options = {}\n      if (this.interactif && this.interactifType === 'qcm') {\n        texte += propositionsQcm(this, i).texte\n      } else {\n        setReponse(this, i, new Grandeur(Math.round(volume), listeUnites[j][2]), { formatInteractif: 'longueur' })\n        texte += ajouteChampTexteMathLive(this, i, 'longueur')\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    2,\n    '1 : Sans conversions\\n2 : Avec des conversions'\n  ]\n  this.besoinFormulaire2CaseACocher = ['Avec des décimaux', false]\n  if (context.isHtml && !context.isDiaporama) this.besoinFormulaire3Numerique = ['Exercice interactif', 2, '1 : QCM\\n2 : Numérique'] // Texte, tooltip\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}