{"version":3,"file":"js/29482.afa080f32a11bb72ed3c.js","mappings":"2KACO,MAAMA,EAAQ,iCASN,SAASC,IACtBC,EAAAA,QAAAA,KAAyBC,Q,+FCRpB,MAAMH,EAAQ,mDAQN,SAASE,IAoBtB,IAAIE,EAlBJC,EAAAA,QAAAA,KAAcF,MACdA,KAAKH,MAAQA,EACbG,KAAKG,OAAQ,EACTH,KAAKG,MACPH,KAAKI,YAAc,EAEnBJ,KAAKI,YAAc,EAErBJ,KAAKK,IAAM,EACXL,KAAKM,SAAW,oCAEhBN,KAAKO,OAAS,EACdP,KAAKQ,WAAa,EAClBC,EAAAA,GAAAA,OAAiBT,KAAKU,QAAU,EAAIV,KAAKU,QAAU,EACnDD,EAAAA,GAAAA,OAAiBT,KAAKW,YAAc,IAAMX,KAAKW,YAAc,IAE7DX,KAAKY,cAAgB,SAIrBZ,KAAKa,gBAAkB,WAErB,SAASC,EAASC,EAAMC,EAAGC,EAAGC,EAAGC,GAC/B,IAAIC,EACAC,EAAQ,GAaZ,OAZIN,GACEE,IAAMC,IACRG,EAAS,sGAAqGF,KAAOH,OACrHI,GAASE,EAAAA,EAAAA,KAAYD,EAAO,UAAW,oBAErCH,IAAMF,IACRK,EAAS,sGAAqGF,KAAOF,OACrHG,GAASE,EAAAA,EAAAA,KAAYD,EAAO,UAAW,qBAGzCD,EAAS,GAEJA,EAIPnB,EADED,KAAKG,MACuB,CAAC,EAAG,EAAG,EAAG,IAEVoB,EAAAA,EAAAA,KAAQ,EAACC,EAAAA,EAAAA,KAAO,CAAC,EAAG,KAAKA,EAAAA,EAAAA,KAAO,CAAC,EAAG,MAGpExB,KAAKyB,eAAiB,GACtBzB,KAAK0B,iBAAmB,GAGxB,MAAMC,GAAuBC,EAAAA,EAAAA,KAAkC3B,EAA6BD,KAAKI,aAEjG,IAAK,IAAWiB,EAAOQ,EAAdC,EAAI,EAAqBC,EAAM,EAAGD,EAAI9B,KAAKI,aAAe2B,EAAM,IAAK,CAE5E,IAAIC,EAAOC,EAEPC,EAsCAf,EAvCAgB,EAAS,CAAC,EAAG,EAAG,GAEpB,KAAOD,EAAa,GAAM,GAAKA,EAAa,GAAM,GAChDA,GAAaE,EAAAA,EAAAA,KAAQ,GAAI,IAI3B,OADApC,KAAKK,IAAMgC,OAAOrC,KAAKK,KACfL,KAAKK,KACX,KAAK,EACH2B,EAAQ,CAAC,EAAG,EAAG,GACfG,EAAO,IAAKC,EAAAA,EAAAA,KAAQ,EAAG,GACvBD,EAAO,IAAKC,EAAAA,EAAAA,KAAQ,EAAG,EAAGD,EAAO,IACjCA,EAAO,IAAKX,EAAAA,EAAAA,KAAO,CAAC,EAAG,EAAG,EAAG,GAAI,CAACW,EAAO,GAAIA,EAAO,KACpD,MACF,KAAK,EACHH,EAAQ,EAACR,EAAAA,EAAAA,KAAO,CAAC,GAAI,KAAKA,EAAAA,EAAAA,KAAO,CAAC,GAAI,KAAKA,EAAAA,EAAAA,KAAO,CAAC,GAAI,KACvDW,EAAO,IAAKC,EAAAA,EAAAA,KAAQ,EAAG,GACvBD,EAAO,IAAKC,EAAAA,EAAAA,KAAQ,EAAG,EAAGD,EAAO,IACjCA,EAAO,IAAKX,EAAAA,EAAAA,KAAO,CAAC,EAAG,EAAG,EAAG,GAAI,CAACW,EAAO,GAAIA,EAAO,KACpD,MACF,KAAK,EACHH,EAAQ,CAAC,GAAK,GAAK,IACnBG,EAAO,IAAKC,EAAAA,EAAAA,KAAQ,EAAG,GACvBD,EAAO,IAAKC,EAAAA,EAAAA,KAAQ,EAAG,EAAGD,EAAO,IACjCA,EAAO,GAAKD,EACZ,MACF,KAAK,EACHC,EAAO,IAAKC,EAAAA,EAAAA,KAAQ,EAAG,GACvBD,EAAO,IAAKC,EAAAA,EAAAA,KAAQ,EAAG,EAAGD,EAAO,IACjCA,EAAO,IAAKX,EAAAA,EAAAA,KAAO,CAAC,EAAG,EAAG,EAAG,GAAI,CAACW,EAAO,GAAIA,EAAO,KACpDF,GAAcT,EAAAA,EAAAA,KAAO,CACnB,CAAEN,EAAG,CAAC,EAAG,EAAG,GAAIoB,GAAI,CAACH,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAClD,CAAEjB,EAAG,EAACM,EAAAA,EAAAA,KAAO,CAAC,GAAI,KAAKA,EAAAA,EAAAA,KAAO,CAAC,GAAI,KAAKA,EAAAA,EAAAA,KAAO,CAAC,GAAI,KAAMc,GAAI,CAACH,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAC5F,CAAEjB,EAAG,CAAC,GAAK,GAAK,IAAMoB,GAAI,EAACF,EAAAA,EAAAA,KAAQ,GAAI,KAAKA,EAAAA,EAAAA,KAAQ,GAAI,IAAKF,MAE/DF,EAAQC,EAAYf,EACpBiB,EAASF,EAAYK,GAKvBnB,EADe,WAAbnB,KAAKuC,KACDf,EAAAA,EAAAA,KAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAChC,WAAbxB,KAAKuC,IACR,CAAC,MAEDf,EAAAA,EAAAA,KAAO,CAAC,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,OAG7D,MAAMgB,EAAS,CACbxB,GAAGyB,EAAAA,EAAAA,KAAON,EAAO,GAAKH,EAAM,IAC5Bf,GAAGwB,EAAAA,EAAAA,KAAON,EAAO,GAAKH,EAAM,IAC5Bd,GAAGuB,EAAAA,EAAAA,KAAON,EAAO,GAAKH,EAAM,IAC5Bb,IAAKA,GAIDuB,EAAa,CACjB,CACEC,GAAK,WAAUH,EAAOrB,SAAQyB,EAAAA,EAAAA,KAAUJ,EAAOvB,gBAAe2B,EAAAA,EAAAA,KAAUJ,EAAOxB,QAAO4B,EAAAA,EAAAA,KAAUJ,EAAOtB,MACvG2B,KAAKC,EAAAA,EAAAA,KAAoB,CAACN,EAAOrB,IAAKqB,EAAOxB,GAAI,CAACwB,EAAOvB,GAAI,CAACuB,EAAOtB,IACrEF,EAAGwB,EAAOxB,EACVC,EAAGuB,EAAOvB,EACVC,EAAGsB,EAAOtB,EACVC,IAAKqB,EAAOrB,IACZL,QAAU0B,EAAOvB,IAAMuB,EAAOtB,GAAOsB,EAAOtB,IAAMsB,EAAOxB,GAE3D,CACE2B,GAAK,YAAUC,EAAAA,EAAAA,KAAUJ,EAAOxB,QAAO4B,EAAAA,EAAAA,KAAUJ,EAAOtB,eAAesB,EAAOrB,SAAQyB,EAAAA,EAAAA,KAAUJ,EAAOvB,MACvG4B,KAAKC,EAAAA,EAAAA,KAAoB,CAACN,EAAOxB,EAAGwB,EAAOrB,KAAM,CAACqB,EAAOtB,GAAI,CAACsB,EAAOvB,IACrED,EAAGwB,EAAOxB,EACVC,EAAGuB,EAAOvB,EACVC,EAAGsB,EAAOtB,EACVC,IAAKqB,EAAOrB,IACZL,QAAU0B,EAAOvB,IAAMuB,EAAOtB,GAAOsB,EAAOtB,IAAMsB,EAAOxB,GAE3D,CACE2B,GAAK,YAAUC,EAAAA,EAAAA,KAAUJ,EAAOvB,OAAOuB,EAAOrB,iBAAgByB,EAAAA,EAAAA,KAAUJ,EAAOtB,QAAO0B,EAAAA,EAAAA,KAAUJ,EAAOxB,MACvG6B,KAAKC,EAAAA,EAAAA,KAAoB,CAACN,EAAOvB,EAAGuB,EAAOtB,GAAI,CAACsB,EAAOrB,KAAM,CAACqB,EAAOxB,IACrEA,EAAGwB,EAAOxB,EACVC,EAAGuB,EAAOvB,EACVC,EAAGsB,EAAOtB,EACVC,IAAKqB,EAAOrB,IACZL,QAAU0B,EAAOvB,IAAMuB,EAAOtB,GAAOsB,EAAOtB,IAAMsB,EAAOxB,GAE3D,CACE2B,GAAK,YAAUC,EAAAA,EAAAA,KAAUJ,EAAOtB,QAAO0B,EAAAA,EAAAA,KAAUJ,EAAOxB,gBAAe4B,EAAAA,EAAAA,KAAUJ,EAAOvB,OAAOuB,EAAOrB,OACtG0B,KAAKC,EAAAA,EAAAA,KAAoB,CAACN,EAAOtB,EAAGsB,EAAOvB,GAAI,CAACuB,EAAOxB,GAAI,CAACwB,EAAOrB,MACnEH,EAAGwB,EAAOxB,EACVC,EAAGuB,EAAOvB,EACVC,EAAGsB,EAAOtB,EACVC,IAAKqB,EAAOrB,IACZL,QAAU0B,EAAOvB,IAAMuB,EAAOtB,GAAOsB,EAAOtB,IAAMsB,EAAOxB,IAI7D,IAAI+B,EACAC,EAEJ,MAAMC,EAAU,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAWS,OAAQD,IACpB,WAAblD,KAAKuC,KACPQ,EAAc,GAAEL,EAAWQ,GAAGL,MAC9BG,EAAyB,GAAEN,EAAWQ,GAAGL,gLAEzCE,EAAc,IAAGL,EAAWQ,GAAGP,MAC/BK,EAAwB,IAE1BC,EAAQG,KAAK,CACXC,OAAQN,EACRO,SAAU,GACVC,WAAa,GAAEP,OACtBN,EAAWQ,GAAGP,aACfa,EAAAA,EAAAA,KAAqB,+CACpBZ,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGhC,aAAawB,EAAWQ,GAAG/B,UAASyB,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGlC,cAAa4B,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGjC,aAC1HuC,EAAAA,EAAAA,KAAsB,mCAAiCZ,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGhC,yBACtE0B,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGhC,aAAawB,EAAWQ,GAAG/B,SAAQyB,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGhC,iBAAgB0B,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGlC,cAAa4B,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGjC,QAAO2B,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGhC,cACxMsC,EAAAA,EAAAA,KAAqB,wCACpBd,EAAWQ,GAAG/B,QAAOyB,EAAAA,EAAAA,MAAUH,EAAAA,EAAAA,KAAOJ,OAAOK,EAAWQ,GAAGjC,GAAKoB,OAAOK,EAAWQ,GAAGlC,GAAKqB,OAAOK,EAAWQ,GAAGhC,UAChHJ,EAAQ4B,EAAWQ,GAAGpC,SAAS8B,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGlC,IAAI4B,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGjC,IAAI2B,EAAAA,EAAAA,KAAUF,EAAWQ,GAAGhC,GAAIwB,EAAWQ,GAAG/B,WAM7H,OAAQQ,EAAqBG,IAC3B,KAAK,EACHT,EAAS,GAAE4B,EAAQ,GAAGI,SAClBrD,KAAKG,OACPkB,GAAS,OACTA,GAAU,iCAAgC4B,EAAQ,GAAGM,aACrDlC,GAAS,gBACTQ,EAAY,IAEZA,EAAa,GAAEoB,EAAQ,GAAGM,aAE5B,MACF,KAAK,EACHlC,EAAS,GAAE4B,EAAQ,GAAGI,SAClBrD,KAAKG,OACPkB,GAAS,OACTA,GAAU,iCAAgC4B,EAAQ,GAAGM,aACrD1B,EAAY,IAEZA,EAAa,GAAEoB,EAAQ,GAAGM,aAE5B,MACF,KAAK,EACHlC,EAAS,GAAE4B,EAAQ,GAAGI,SAClBrD,KAAKG,OACPkB,GAAS,OACTA,GAAU,iCAAgC4B,EAAQ,GAAGM,aACrD1B,EAAY,IAEZA,EAAa,GAAEoB,EAAQ,GAAGM,aAE5B,MACF,KAAK,EACHlC,EAAS,GAAE4B,EAAQ,GAAGI,SAClBrD,KAAKG,OACPkB,GAAS,OACTA,GAAU,iCAAgC4B,EAAQ,GAAGM,aACrD1B,EAAY,IAEZA,EAAa,GAAEoB,EAAQ,GAAGM,cAKY,IAAxCvD,KAAKyB,eAAegC,QAAQpC,KAC9BrB,KAAKyB,eAAe2B,KAAK/B,GACzBrB,KAAK0B,iBAAiB0B,KAAKvB,GAC3BC,KAEFC,KAEF2B,EAAAA,EAAAA,KAAwB1D,OAE1BA,KAAK2D,0BAA4B,CAAC,kBAAmB,EAAG,2E,gBC/O3C,SAASzD,IAItBF,KAAKH,MAAQ,GACbG,KAAK4D,YAAa,EAclB5D,KAAKM,SAAW,GAChBN,KAAK6D,mBAAqB,GAC1B7D,KAAK8D,aAAe,GACpB9D,KAAKyB,eAAiB,GACtBzB,KAAK0B,iBAAmB,GACxB1B,KAAK+D,QAAU,GACf/D,KAAKgE,kBAAoB,GACzBhE,KAAKiE,eAAiB,GACtBjE,KAAKkE,sBAAwB,GAK7BlE,KAAKU,QAAU,EACfV,KAAKW,YAAc,EAKnBX,KAAKmE,mBAAoB,EACzBnE,KAAKY,cAAgB,GACrBZ,KAAKoE,oBAAqB,EAC1BpE,KAAKqE,uBAAwB,EAC7BrE,KAAKO,OAAS,EACdP,KAAKQ,WAAa,EAClBR,KAAKsE,kBAAmB,EACxBtE,KAAKuE,sBAAuB,EAC5BvE,KAAKwE,mBAAoB,EACzBxE,KAAKyE,uBAAwB,EAM7BzE,KAAK0E,QAAS,EACd1E,KAAK2E,gBAAkB,EAKvB3E,KAAKI,YAAc,GACnBJ,KAAK4E,mBAAqB,EAC1B5E,KAAK6E,+BAAgC,EACrC7E,KAAK8E,qBAAsB,EAC3B9E,KAAK+E,oBAAqB,EAC1B/E,KAAKgF,MAAQ,GAEbhF,KAAKiF,YAAa,EAClBjF,KAAKkF,uBAAwB,EAE7BlF,KAAK2D,2BAA4B,EACjC3D,KAAKmF,uBAAwB,EAC7BnF,KAAKoF,6BAA8B,EAEnCpF,KAAKqF,4BAA6B,EAClCrF,KAAKsF,wBAAyB,EAC9BtF,KAAKuF,8BAA+B,EAEpCvF,KAAKwF,4BAA6B,EAClCxF,KAAKyF,wBAAyB,EAC9BzF,KAAK0F,8BAA+B,EAEpC1F,KAAK2F,4BAA6B,EAClC3F,KAAK4F,wBAAyB,EAC9B5F,KAAK6F,8BAA+B,EAMpC7F,KAAK8F,cAAe,EASpB9F,KAAK+F,eAAiB,GAMtB/F,KAAKa,gBAAkB,SAAUmF,KAQjChG,KAAKiG,oBAAsB,SAAUnE,KAAMoE,GAC/B,IAANpE,IAAS9B,KAAK+F,eAAiB,IACnC,IAAII,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAItG,KAAK+F,eAAetC,QAAQ0C,IAAmB,KAGjDnG,KAAK+F,eAAe3C,KAAK+C,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/2e/2N51-3v2.js","webpack://mathalea/./src/js/exercices/3e/3L13-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import EqResolvantesThales from '../3e/3L13-2.js'\nexport const titre = 'Équations du type x/a=b/c (v2)'\n// export { interactifReady, interactifType } from '../3e/3L13-2.js'\n// export { amcReady, amcType } from '../3e/3L13-2.js'\n\n/**\n * Clone de 3L13-2 pour les 2nde\n *\n * @author Sébastien LOZANO\n */\nexport default function EqResolvantesThales2nde () {\n  EqResolvantesThales.call(this)\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, shuffle, combinaisonListesSansChangerOrdre, calcul, texNombre, texteEnCouleurEtGras, tableauColonneLigne, warnMessage } from '../../modules/outils.js'\nexport const titre = 'Equations résolvantes pour le théorème de Thalès'\n\n/**\n * * Equations résolvantes pour le théorème de Thalès\n * * 3L13-2\n * * modification le 11/01/2021\n * @author Sébastien Lozano\n */\nexport default function EqResolvantesThales () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.debug = false\n  if (this.debug) {\n    this.nbQuestions = 4\n  } else {\n    this.nbQuestions = 2\n  };\n  this.sup = 1\n  this.consigne = 'Résoudre les équations suivantes.'\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  context.isHtml ? this.spacing = 3 : this.spacing = 2\n  context.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5\n\n  this.listePackages = 'bclogo'\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    // une fonction pour dire que c'est trivial dans ce cas\n    function trivial (bool, a, b, c, inc) {\n      let sortie\n      let texte = ''\n      if (bool) {\n        if (b === c) {\n          texte = `Dans ce cas le recours au produit en croix est superflu.<br> Par identification, on a directement $${inc}=${a}$ !`\n          sortie = warnMessage(texte, 'nombres', 'Keep Cool Guy !')\n        };\n        if (c === a) {\n          texte = `Dans ce cas le recours au produit en croix est superflu.<br> Par identification, on a directement $${inc}=${b}$ !`\n          sortie = warnMessage(texte, 'nombres', 'Keep Cool Guy !')\n        }\n      } else {\n        sortie = ''\n      };\n      return sortie\n    };\n\n    if (this.debug) {\n      typesDeQuestionsDisponibles = [0, 1, 2, 3]\n    } else {\n      typesDeQuestionsDisponibles = shuffle([choice([0, 1]), choice([2, 3])])\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    // let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // on a besoin d'un coeff pour le type de nombres\n      let coeff, masterChoix\n      let nbAlea = [1, 1, 1]\n      let cTempCase3\n      while (cTempCase3 % 2 !== 0 || cTempCase3 % 5 !== 0) {\n        cTempCase3 = randint(11, 99)\n      };\n\n      this.sup = Number(this.sup) // attention le formulaire renvoie un string, on a besoin d'un number pour le switch !\n      switch (this.sup) {\n        case 1: // entiers\n          coeff = [1, 1, 1]\n          nbAlea[0] = randint(2, 9)\n          nbAlea[1] = randint(2, 9, nbAlea[0])\n          nbAlea[2] = choice([2, 4, 5, 8], [nbAlea[0], nbAlea[1]])\n          break\n        case 2: // relatifs\n          coeff = [choice([1, -1]), choice([1, -1]), choice([1, -1])]\n          nbAlea[0] = randint(2, 9)\n          nbAlea[1] = randint(2, 9, nbAlea[0])\n          nbAlea[2] = choice([2, 4, 5, 8], [nbAlea[0], nbAlea[1]])\n          break\n        case 3: // décimaux\n          coeff = [0.1, 0.1, 0.1]\n          nbAlea[0] = randint(2, 9)\n          nbAlea[1] = randint(2, 9, nbAlea[0])\n          nbAlea[2] = cTempCase3\n          break\n        case 4: // mélange\n          nbAlea[0] = randint(2, 9)\n          nbAlea[1] = randint(2, 9, nbAlea[0])\n          nbAlea[2] = choice([2, 4, 5, 8], [nbAlea[0], nbAlea[1]])\n          masterChoix = choice([\n            { c: [1, 1, 1], na: [nbAlea[0], nbAlea[1], nbAlea[2]] },\n            { c: [choice([1, -1]), choice([1, -1]), choice([1, -1])], na: [nbAlea[0], nbAlea[1], nbAlea[2]] },\n            { c: [0.1, 0.1, 0.1], na: [randint(11, 99), randint(11, 99), cTempCase3] }\n          ])\n          coeff = masterChoix.c\n          nbAlea = masterChoix.na\n      };\n\n      let inc\n      if (this.exo === '4L15-1') {\n        inc = choice(['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'])\n      } else if (this.exo === '4P10-2') {\n        inc = ['?']\n      } else {\n        inc = choice(['x', 'y', 'GO', 'AB', 'z', 'GA', 'BU', 'ZO', 'ME'])\n      };\n\n      const params = {\n        a: calcul(nbAlea[0] * coeff[0]),\n        b: calcul(nbAlea[1] * coeff[1]),\n        c: calcul(nbAlea[2] * coeff[2]),\n        inc: inc\n      }\n\n      // pour les situations, autant de situations que de cas dans le switch !\n      const situations = [\n        {\n          eq: `\\\\dfrac{${params.inc}}{${texNombre(params.b)}}=\\\\dfrac{${texNombre(params.a)}}{${texNombre(params.c)}}`,\n          tab: tableauColonneLigne([params.inc, params.a], [params.b], [params.c]),\n          a: params.a,\n          b: params.b,\n          c: params.c,\n          inc: params.inc,\n          trivial: (params.b === params.c) || (params.c === params.a)\n        },\n        {\n          eq: `\\\\dfrac{${texNombre(params.a)}}{${texNombre(params.c)}}=\\\\dfrac{${params.inc}}{${texNombre(params.b)}}`,\n          tab: tableauColonneLigne([params.a, params.inc], [params.c], [params.b]),\n          a: params.a,\n          b: params.b,\n          c: params.c,\n          inc: params.inc,\n          trivial: (params.b === params.c) || (params.c === params.a)\n        },\n        {\n          eq: `\\\\dfrac{${texNombre(params.b)}}{${params.inc}}=\\\\dfrac{${texNombre(params.c)}}{${texNombre(params.a)}}`,\n          tab: tableauColonneLigne([params.b, params.c], [params.inc], [params.a]),\n          a: params.a,\n          b: params.b,\n          c: params.c,\n          inc: params.inc,\n          trivial: (params.b === params.c) || (params.c === params.a)\n        },\n        {\n          eq: `\\\\dfrac{${texNombre(params.c)}}{${texNombre(params.a)}}=\\\\dfrac{${texNombre(params.b)}}{${params.inc}}`,\n          tab: tableauColonneLigne([params.c, params.b], [params.a], [params.inc]),\n          a: params.a,\n          b: params.b,\n          c: params.c,\n          inc: params.inc,\n          trivial: (params.b === params.c) || (params.c === params.a)\n        }\n      ]\n\n      let enoncePlus\n      let corrPlusPremiereLigne\n\n      const enonces = []\n      for (let k = 0; k < situations.length; k++) {\n        if (this.exo === '4P10-2') {\n          enoncePlus = `${situations[k].tab}`\n          corrPlusPremiereLigne = `${situations[k].tab} <br> Le tableau ci-dessus est un tableau de proportionnalité, pour déterminer la quatrième proportionnelle il suffit par exemple de résoudre l'équation suivante : <br>`\n        } else {\n          enoncePlus = `$${situations[k].eq}$`\n          corrPlusPremiereLigne = ''\n        };\n        enonces.push({\n          enonce: enoncePlus,\n          question: '',\n          correction: `${corrPlusPremiereLigne}\n$${situations[k].eq}$<br>\n${texteEnCouleurEtGras('Les produits en croix sont égaux.')}<br>\n$${texNombre(situations[k].c)}\\\\times ${situations[k].inc} = ${texNombre(situations[k].a)}\\\\times ${texNombre(situations[k].b)}$<br>\n${texteEnCouleurEtGras(`On divise les deux membres par ${texNombre(situations[k].c)}`)}.<br>\n$\\\\dfrac{${texNombre(situations[k].c)}\\\\times ${situations[k].inc}}{${texNombre(situations[k].c)}}= \\\\dfrac{${texNombre(situations[k].a)}\\\\times ${texNombre(situations[k].b)}}{${texNombre(situations[k].c)}}$<br>\n${texteEnCouleurEtGras('On simplifie et on calcule.')}<br>\n$${situations[k].inc}=${texNombre(calcul(Number(situations[k].b) * Number(situations[k].a) / Number(situations[k].c)))}$\n${trivial(situations[k].trivial, texNombre(situations[k].a), texNombre(situations[k].b), texNombre(situations[k].c), situations[k].inc)}\n`\n        })\n      };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n        case 1:\n          texte = `${enonces[1].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[1].correction}`\n          };\n          break\n        case 2:\n          texte = `${enonces[2].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[2].correction}`\n          };\n          break\n        case 3:\n          texte = `${enonces[3].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[3].correction}`\n          };\n          break\n      };\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de nombres', 4, '1 : Entiers naturels\\n2 : Entiers relatifs\\n3 : Décimaux\\n4 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","EqResolvantesThales2nde","EqResolvantesThales","this","typesDeQuestionsDisponibles","Exercice","debug","nbQuestions","sup","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","listePackages","nouvelleVersion","trivial","bool","a","b","c","inc","sortie","texte","warnMessage","shuffle","choice","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texteCorr","i","cpt","coeff","masterChoix","cTempCase3","nbAlea","randint","Number","na","exo","params","calcul","situations","eq","texNombre","tab","tableauColonneLigne","enoncePlus","corrPlusPremiereLigne","enonces","k","length","push","enonce","question","correction","texteEnCouleurEtGras","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}