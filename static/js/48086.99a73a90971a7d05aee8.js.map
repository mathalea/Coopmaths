{"version":3,"file":"js/48086.99a73a90971a7d05aee8.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G32-1.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, texNombre, texNombrec } from '../../modules/outils.js'\nimport { tracePoint, labelPoint, afficheMesureAngle, codageAngleDroit, mathalea2d } from '../../modules/2d.js'\nimport { point3d, vecteur3d, sphere3d, arete3d, rotationV3d, demicercle3d } from '../../modules/3d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true // tant qu'il n'a pas été adapté à la version 2.6\nexport const amcType = 'AMCOpenNum' // type de question AMC\nexport const titre = 'Calcul d’un parallèle terrestre'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * propose de calculer la longueur d'un parallèle terrestre à partir de la latitde\n * @author Jean-Claude Lhote\n * Référence 3G32-1\n*/\nexport default function CalculsTrigonometriques1 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.spacingCorr = 2\n  this.spacing = 2\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let alpha; let O; let H; let M; let R; let R2; let Axe; let normalV; let normalH; let P; let HP; let Sph; let OP; let PoleNord; let PoleSud; let objets = []\n\n    for (let i = 0, texte, texteCorr, reponse, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n\n      objets = []\n      alpha = randint(30, 60)\n      O = point3d(0, 0, 0, false, 'O')\n      M = point3d(5, 0, 0, true, 'M')\n      PoleNord = point3d(0, 0, 5, false, 'N')\n      PoleSud = point3d(0, 0, -5, false, 'S')\n      R = vecteur3d(O, M)\n      Axe = arete3d(PoleSud, PoleNord)\n      normalV = vecteur3d(0, 0, 1)\n      M = rotationV3d(M, normalV, context.anglePerspective)\n      M.p2d.nom = 'M'\n      normalH = rotationV3d(R, normalV, 90)\n      P = rotationV3d(M, normalH, -alpha)\n      P.p2d.nom = 'P'\n      H = point3d(0, 0, P.z, false)\n      R2 = vecteur3d(H, P)\n      H.p2d.nom = 'H'\n      Sph = sphere3d(O, 5, 1, 3)\n      HP = arete3d(H, P)\n      OP = arete3d(O, P)\n      objets.push(Sph, Axe.p2d, HP.p2d, OP.p2d, codageAngleDroit(P.p2d, H.p2d, O.p2d), tracePoint(H.p2d, P.p2d, O.p2d, M.p2d), labelPoint(H.p2d, P.p2d, O.p2d, M.p2d))\n      objets.push(demicercle3d(H, normalV, R2, 'caché', 'red', 0), demicercle3d(H, normalV, R2, 'visible', 'red', 0))\n      objets.push(arete3d(O, M).p2d)\n      objets.push(afficheMesureAngle(M.p2d, O.p2d, P.p2d, 'black', 1.5, `${alpha}`))\n      texte = mathalea2d({ xmin: -8, ymin: -6, xmax: 8, ymax: 6, pixelsParCm: 20, scale: 0.5 }, objets) + '<br>'\n      texte += `Quelle est la longueur du $${alpha}$e parallèle Nord au kilomètre près ?`\n      texteCorr = mathalea2d({ xmin: -8, ymin: -6, xmax: 8, ymax: 6, pixelsParCm: 20, scale: 0.5 }, objets) + '<br>'\n      texteCorr += `Considérons que le $${alpha}$e parallèle Nord est un cercle. Soit $H$ le centre de ce cercle situé sur l'axe de rotation de la terre.<br>`\n      texteCorr += 'Les segments $[HP]$ et $[OM]$ sont parallèles, donc les angles alternes-internes $\\\\widehat{MOP}$ et $\\\\widehat{OPH}$ sont égaux.<br>'\n      texteCorr += 'Dans le triangle $OPH$ rectangle en $H$, $\\\\cos(\\\\widehat{OPH})=\\\\dfrac{HP}{OP}$ d\\'où $HP=OP\\\\times \\\\cos(\\\\widehat{OPH})$.<br>'\n      texteCorr += 'Le rayon de la terre étant approximativement de $6400$ km, nous pouvons calculer $HP$ :<br>'\n      texteCorr += `$HP=6400\\\\times \\\\cos(${alpha})\\\\approx ${texNombrec(6400 * Math.cos(alpha * Math.PI / 180))}$ km.<br>`\n      reponse = Math.round(2 * Math.PI * 6400 * Math.cos(alpha * Math.PI / 180))\n      texteCorr += `Calculons maintenant la longueur $L$ du $${alpha}$e parallèle : $L\\\\approx 2\\\\times \\\\pi\\\\times ${texNombrec(6400 * Math.cos(alpha * Math.PI / 180))}\\\\approx ${texNombre(reponse)}$ km.<br>`\n\n      if (this.questionJamaisPosee(i, alpha)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        if (context.isAmc) {\n          this.autoCorrection[i] = { enonce: texte, propositions: [{ texte: texteCorr, statut: 3, feedback: '' }], reponse: { texte: 'Longueur arrondie au km près', valeur: reponse, options: { digits: 0, decimals: 0 } } }\n        } else {\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline', { texte: ' $L=$', texteApres: ' km' })\n          setReponse(this, i, reponse)\n        }\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n"],"names":["amcReady","amcType","titre","interactifReady","interactifType","CalculsTrigonometriques1","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","spacingCorr","spacing","nouvelleVersion","alpha","O","H","M","R","R2","Axe","normalV","normalH","P","HP","Sph","OP","PoleNord","PoleSud","autoCorrection","listeQuestions","listeCorrections","objets","texte","texteCorr","reponse","i","cpt","randint","point3d","vecteur3d","arete3d","rotationV3d","context","p2d","nom","z","sphere3d","push","codageAngleDroit","tracePoint","labelPoint","demicercle3d","afficheMesureAngle","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","texNombrec","Math","cos","PI","round","texNombre","questionJamaisPosee","enonce","propositions","statut","feedback","valeur","options","digits","decimals","ajouteChampTexteMathLive","texteApres","setReponse","listeQuestionsToContenu"],"sourceRoot":""}