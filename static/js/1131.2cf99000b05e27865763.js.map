{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R12-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","ReperagePointDuPlan","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","sup2","quartDePlan","listePackages","nouvelleVersion","texte","texteCorr","listeQuestions","listeCorrections","contenu","contenuCorrection","listePoints","points","k","xmin","xmax","ymin","ymax","Math","pow","parseInt","nom","objets2d","listeAbs","listeOrd","i","calcul","push","X0","Y0","creerCouples","l","lettre","randint","lettreDepuisChiffre","j","point","x","y","shuffle2tableaux","console","log","texNombre","repere2","xMin","yMin","xMax","yMax","grilleSecondaire","grilleSecondaireDistance","grilleSecondaireXMin","grilleSecondaireYMin","grilleSecondaireXMax","grilleSecondaireYMax","tracePoint","labelPoint","mathalea2d","pixelsParCm","scale","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice"],"mappings":"uLAIO,MAAMA,EAAQ,oDAON,SAASC,IAEtBC,eAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,SAAW,gDAChBD,KAAKE,YAAc,EACnBF,KAAKG,uBAAwB,EAC7BH,KAAKI,OAAS,EACdJ,KAAKK,WAAa,EAClBL,KAAKM,QAAU,EACfN,KAAKO,YAAc,EACnBP,KAAKQ,IAAM,EACXR,KAAKS,MAAO,EACZT,KAAKU,aAAc,EACnBV,KAAKW,cAAgB,cAErBX,KAAKY,gBAAkB,WAGrB,IAAIC,EAAOC,EAFXd,KAAKe,eAAiB,GACtBf,KAAKgB,iBAAmB,GAExBhB,KAAKiB,QAAU,GACfjB,KAAKkB,kBAAoB,GACzB,IAAIC,EAAc,GAClB,MAAMC,EAAS,GACf,IAAIC,EAAGC,EAAMC,EAAMC,EAAMC,EACzBJ,EAAIK,KAAKC,IAAI,EAAGC,SAAS5B,KAAKQ,KAAO,GACrC,MAAMqB,EAAM,GACNC,EAAW,GACb9B,KAAKU,aACPY,EAAO,EAAGE,EAAO,EAAGD,EAAO,GAAIE,EAAO,KAEtCH,GAAQ,EAAGE,GAAQ,EAAGD,EAAO,EAAGE,EAAO,GAEzC,MAAMM,EAAW,GAAUC,EAAW,GACtC,IAAK,IAAIC,GAAIC,SAAOZ,EAAO,EAAID,GAAIY,GAAIC,SAAOX,GAAQK,SAAS5B,KAAKQ,KAAO,GAAKa,GAAIY,GAAIC,SAAOD,EAAI,EAAIZ,GACrGU,EAASI,KAAKF,GAEhB,IAAK,IAAIA,GAAIC,SAAOV,EAAO,EAAIH,GAAIY,GAAIC,SAAOT,GAAQG,SAAS5B,KAAKQ,KAAO,GAAKa,GAAIY,GAAIC,SAAOD,EAAI,EAAIZ,GACrGW,EAASG,KAAKF,GAEhB,IAAIG,GAAK,EAAWC,GAAK,EACzBlB,GAAcmB,SAAaP,EAAUC,EAAU,GAAKX,GACpD,IAAK,IAAIkB,EAAI,EAAGC,GAASC,SAAQ,EAAG,IAAKF,EAAI,EAAGA,IAC9CV,EAAIM,MAAKO,SAAoBH,EAAIC,IACjC,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAGA,IACvBvB,EAAOe,MAAKS,SAAMzB,EAAYwB,GAAG,GAAIxB,EAAYwB,GAAG,GAAId,EAAIc,GAAI,eAC5C,IAAhBvB,EAAOuB,GAAGE,IAAWT,GAAK,GACV,IAAhBhB,EAAOuB,GAAGG,IAAWT,GAAK,GAE3BD,IAAMhB,EAAO,GAAGyB,EAAI,GACpBR,IAAMjB,EAAO,GAAG0B,EAAI,IACzBC,SAAiB3B,EAAQS,GACzBmB,QAAQC,IAAI7B,GAEZP,EAAQ,wCACRC,EAAY,wCACZ,IAAK,IAAImB,EAAI,EAAGA,EAAI,EAAGA,IACrBpB,GAAU,KAAIgB,EAAII,OAClBnB,GAAc,KAAIe,EAAII,OAAMiB,SAAU9B,EAAOa,GAAGY,OAAMK,SAAU9B,EAAOa,GAAGa,SAE5EjC,GAAU,KAAIgB,EAAI,WAClBf,GAAc,KAAIe,EAAI,OAAMqB,SAAU9B,EAAO,GAAGyB,OAAMK,SAAU9B,EAAO,GAAG0B,QACtE9C,KAAKS,KACPqB,EAASK,MAAKgB,SAAQ,CACpBC,KAAM9B,EAAK,EACX+B,KAAM7B,EAAK,EACX8B,KAAM/B,EAAK,EACXgC,KAAM9B,EAAK,EACX+B,kBAAkB,EAClBC,yBAA0B,EAAEpC,EAC5BqC,qBAAsBpC,EAAK,EAC3BqC,qBAAsBnC,EAAK,EAC3BoC,qBAAsBrC,EAAK,EAC3BsC,qBAAsBpC,EAAK,KAG7BK,EAASK,MAAKgB,SAAQ,CAAEC,KAAM9B,EAAK,EAAG+B,KAAM7B,EAAK,EAAG8B,KAAM/B,EAAK,EAAGgC,KAAM9B,EAAK,KAE/E,IAAK,IAAIQ,EAAI,EAAGA,EAAI,EAAGA,IACrBH,EAASK,KAAKf,EAAOa,IAAI6B,SAAW1C,EAAOa,GAAG,QAAQ8B,SAAW3C,EAAOa,KAE1EpB,IAASmD,SAAW,CAAE1C,KAAMA,EAAK,EAAGE,KAAMA,EAAK,EAAGD,KAAMA,EAAK,EAAGE,KAAMA,EAAK,EAAGwC,YAAa,GAAIC,MAAO,KAAQpC,GAC9G9B,KAAKe,eAAeoB,KAAKtB,GACzBb,KAAKgB,iBAAiBmB,KAAKrB,IAC3BqD,SAAkCnE,OAEpCA,KAAKoE,0BAA4B,CAAC,uBAAwB,EAAG,qFAC7DpE,KAAKqE,6BAA+B,CAAC,uB,4BC5FxB,SAAStE,IAEtBC,KAAKH,MAAQ,GACbG,KAAKC,SAAW,GAChBD,KAAKsE,mBAAqB,GAC1BtE,KAAKe,eAAiB,GACtBf,KAAKgB,iBAAmB,GACxBhB,KAAKuE,aAAe,GACpBvE,KAAKiB,QAAU,GACfjB,KAAKkB,kBAAoB,GACzBlB,KAAKE,YAAc,GACnBF,KAAKI,OAAS,EACdJ,KAAKK,WAAa,EAClBL,KAAKM,QAAU,EACfN,KAAKO,YAAc,EACnBP,KAAKwE,QAAS,EAEdxE,KAAKoE,2BAA4B,EACjCpE,KAAKyE,uBAAwB,EAC7BzE,KAAK0E,6BAA8B,EACnC1E,KAAK2E,oBAAqB,EAC1B3E,KAAKG,uBAAwB,EAC7BH,KAAK4E,kBAAmB,EACxB5E,KAAK6E,sBAAuB,EAC5B7E,KAAK8E,mBAAoB,EACzB9E,KAAK+E,uBAAwB,EAC7B/E,KAAKgF,+BAAgC,EACrChF,KAAKiF,qBAAsB,EAC3BjF,KAAKkF,MAAQ,GACblF,KAAKmF,YAAa,EAClBnF,KAAKoF,gBAAkB,GAMvBpF,KAAKqF,mBAAoB,EACzBrF,KAAKsF,YAAa,EAClBtF,KAAKuF,uBAAwB,EAC7BvF,KAAKwF,KAAM,EACXxF,KAAKyF,eAAgB,EACrBzF,KAAK0F,SAAU,EACf1F,KAAK2F,eAAiB,GACtB3F,KAAK4F,sBAAwB,GAC7B5F,KAAK6F,cAAe,EACpB7F,KAAKY,gBAAkB,SAAUkF,KACjC9F,KAAKW,cAAgB,G","file":"js/1131.2cf99000b05e27865763.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenuSansNumero, creerCouples, randint, calcul, lettreDepuisChiffre, texNombre, shuffle2tableaux } from '../../modules/outils.js'\nimport { mathalea2d, point, repere2, labelPoint, tracePoint } from '../../modules/2d.js'\n\nexport const titre = 'Déterminer les coordonnées (relatives) d’un point'\n\n/**\n * Lire les coordonnées d'un point du plan avec une précision allant de l'unité à 0,25.\n * @author Jean-Claude Lhote\n * Références 5R12-2\n */\nexport default function ReperagePointDuPlan () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Donner les coordonnées des points représentés'\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n  this.sup2 = true\n  this.quartDePlan = false\n  this.listePackages = 'tkz-euclide'\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let texte, texteCorr\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    let listePoints = [];\n    const points = []\n    let k, xmin, xmax, ymin, ymax\n    k = Math.pow(2, parseInt(this.sup) - 1)\n    const nom = []\n    const objets2d = []\n    if (this.quartDePlan) {\n      xmin = 0; ymin = 0; xmax = 10; ymax = 10\n    } else {\n      xmin = -5; ymin = -5; xmax = 5; ymax = 5\n    }\n    const listeAbs = []; const listeOrd = []\n    for (let i = calcul(xmin + 1 / k); i < calcul(xmax - (parseInt(this.sup) - 1) / k); i = calcul(i + 1 / k)) {\n      listeAbs.push(i)\n    }\n    for (let i = calcul(ymin + 1 / k); i < calcul(ymax - (parseInt(this.sup) - 1) / k); i = calcul(i + 1 / k)) {\n      listeOrd.push(i)\n    }\n    let X0 = false; let Y0 = false\n    listePoints = creerCouples(listeAbs, listeOrd, 10 * k)\n    for (let l = 0, lettre = randint(1, 20); l < 5; l++) {\n      nom.push(lettreDepuisChiffre(l + lettre))\n    } for (let j = 0; j < 5; j++) {\n      points.push(point(listePoints[j][0], listePoints[j][1], nom[j], 'above left'))\n      if (points[j].x === 0) { X0 = true }\n      if (points[j].y === 0) { Y0 = true }\n    }\n    if (!X0) { points[0].x = 0 }\n    if (!Y0) { points[1].y = 0 }\n    shuffle2tableaux(points, nom)\n    console.log(points)\n\n    texte = 'Déterminer les coordonnées des points'\n    texteCorr = 'Les coordonnées des points sont :<br>'\n    for (let i = 0; i < 4; i++) {\n      texte += ` $${nom[i]}$,`\n      texteCorr += ` $${nom[i]}(${texNombre(points[i].x)};${texNombre(points[i].y)})$, `\n    }\n    texte += ` $${nom[4]}$.<br>`\n    texteCorr += ` $${nom[4]}(${texNombre(points[4].x)};${texNombre(points[4].y)})$.`\n    if (this.sup2) {\n      objets2d.push(repere2({\n        xMin: xmin-1,\n        yMin: ymin-1,\n        xMax: xmax+1,\n        yMax: ymax+1,\n        grilleSecondaire: true,\n        grilleSecondaireDistance: 1/k,\n        grilleSecondaireXMin: xmin-1,\n        grilleSecondaireYMin: ymin-1,\n        grilleSecondaireXMax: xmax+1,\n        grilleSecondaireYMax: ymax+1\n      }))\n    } else {\n      objets2d.push(repere2({ xMin: xmin-1, yMin: ymin-1, xMax: xmax+1, yMax: ymax+1 }))\n    }\n    for (let i = 0; i < 5; i++) {\n      objets2d.push(points[i], tracePoint(points[i],'red'), labelPoint(points[i]))\n    }\n    texte += mathalea2d({ xmin: xmin-1, ymin: ymin-1, xmax: xmax+1, ymax: ymax+1, pixelsParCm: 30, scale: 0.75 }, objets2d)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, \"1 : Coordonnées entières\\n2 : Coordonnées 'en demis'\\n3 : Coordonnées 'en quarts'\"]\n  this.besoinFormulaire2CaseACocher = ['Grille de lecture']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}