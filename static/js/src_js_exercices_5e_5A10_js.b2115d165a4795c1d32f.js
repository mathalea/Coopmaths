/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_5e_5A10_js"],{

/***/ "./src/js/exercices/5e/5A10.js":
/*!*************************************!*\
  !*** ./src/js/exercices/5e/5A10.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Liste_des_diviseurs_5e)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\n\n\nconst titre = 'Écrire la liste de tous les diviseurs d’un entier'\n\n/**\n * 5A10 - Division Euclidienne; diviseurs, multiples, critères de divisibilité\n * Exercice bilan\n * @author Sébastien Lozano\n */\nfunction Liste_des_diviseurs_5e() {\n\t'use strict';\n\t_ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\t//this.consigne =`Écrire la liste de tous les diviseurs d'un entier.`;\n\tthis.consigne = ``;\n\t//this.consigne += `<br>`;\n\tsortie_html ? this.spacing = 2 : this.spacing = 1;\n\tsortie_html ? this.spacing_corr = 2 : this.spacing_corr = 1;\n\tthis.nb_questions = 3;\n\t//this.correction_detaillee_disponible = true;\n\tthis.nb_cols = 1;\n\tthis.nb_cols_corr = 1;\n\n\tthis.nouvelle_version = function () {\n\t\tlet type_de_questions;\n\t\tif (sortie_html) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.bouton_aide = '';\n\t\t\t//this.bouton_aide = modal_pdf(numero_de_l_exercice,\"assets/pdf/FicheArithmetique-3A10.pdf\",\"Aide mémoire sur la division euclidienne (Sébastien Lozano)\",\"Aide mémoire\")\t\t\n\t\t\t//this.bouton_aide += modal_video('conteMathsNombresPremiers','/videos/LesNombresPremiers.mp4','Petit conte mathématique','Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.liste_questions = []; // Liste de questions\n\t\tthis.liste_corrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenu_correction = ''; // Liste de questions corrigées\n\n\t\tlet type_de_questions_disponibles = [1, 1, 2];\n\t\t//let type_de_questions_disponibles = [1];\n\t\tlet liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(type_de_questions_disponibles, this.nb_questions);\n\n\t\tfor (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n\t\t\ttype_de_questions = liste_type_de_questions[i];\n\n\t\t\tswitch (type_de_questions) {\n\t\t\t\tcase 1: // Compléter un tableau pour trouver la liste de tous les diviseurs d'un entier\n\t\t\t\t\t// on choisit un entier non premier inférieur à 99\n\t\t\t\t\tlet M = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(99));\n\t\t\t\t\t// on calcule le nombre de diviseur de M pour prévoir le nombre de lignes du tableau\n\t\t\t\t\tlet nbre_diviseurs_M = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M).length;\n\n\t\t\t\t\ttexte = `Compléter le tableau suivant et faire la liste de tous les diviseurs de ${M}`;\n\t\t\t\t\tif (!sortie_html) {\n\t\t\t\t\t\ttexte += `$\\\\medskip$`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\tif (sortie_html) {\n\t\t\t\t\t\ttexte += `$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|c|c|c|}\\n`;\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexte += `$\\\\begin{array}{|c|c|c|}\\n`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `\\\\hline\\n`;\n\t\t\t\t\ttexte += `\\\\text{Facteur n°1} & \\\\text{Facteur n°2} & \\\\text{Produit donnant } ${M} \\\\\\\\\\n`;\n\t\t\t\t\ttexte += `\\\\hline\\n`;\n\n\t\t\t\t\tif (nbre_diviseurs_M % 2 == 0) { //si il y a un nombre pair de diviseurs\n\t\t\t\t\t\tfor (let m = 0; m < ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M).length / 2); m++) {\n\t\t\t\t\t\t\ttexte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_ou_pas)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[m]) + ` & ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_ou_pas)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M).length - m - 1)]) + `& ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_ou_pas)(M)} \\\\\\\\\\n`;\n\t\t\t\t\t\t\ttexte += `\\\\hline\\n`;\n\t\t\t\t\t\t};\n\t\t\t\t\t} else { // sinon il est impair, cela n'arrive qu'avvec les carrés parfaits\n\t\t\t\t\t\tfor (let m = 0; m < (((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M).length - 1) / 2); m++) {\n\t\t\t\t\t\t\ttexte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_ou_pas)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[m]) + ` & ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_ou_pas)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M).length - m - 1)]) + `& ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_ou_pas)(M)} \\\\\\\\\\n`;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_ou_pas)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[(nbre_diviseurs_M - 1) / 2]) + ` & ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_ou_pas)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[(nbre_diviseurs_M - 1) / 2]) + `& ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_ou_pas)(M)} \\\\\\\\\\n`;\n\t\t\t\t\t\ttexte += `\\\\hline\\n`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `\\\\end{array}\\n$`;\n\n\t\t\t\t\t// correction\n\t\t\t\t\ttexte_corr = `Le tableau suivant contient tous les couples de facteurs dont le produit vaut ${M}`;\n\t\t\t\t\tif (!sortie_html) {\n\t\t\t\t\t\ttexte_corr += `$\\\\medskip$`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\tif (sortie_html) {\n\t\t\t\t\t\ttexte_corr += `$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|c|c|c|}\\n`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr += `$\\\\begin{array}{|c|c|c|}\\n`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `\\\\hline\\n`;\n\t\t\t\t\ttexte_corr += `\\\\text{Facteur n°1} & \\\\text{Facteur n°2} & \\\\text{Produit donnant } ${M} \\\\\\\\\\n`;\n\t\t\t\t\ttexte_corr += `\\\\hline\\n`;\n\n\t\t\t\t\tif (nbre_diviseurs_M % 2 == 0) { //si il y a un nombre pair de diviseurs\n\t\t\t\t\t\tfor (let m = 0; m < ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M).length / 2); m++) {\n\t\t\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[m] + ` & ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M).length - m - 1)] + `& ${M} \\\\\\\\\\n`;\n\t\t\t\t\t\t\ttexte_corr += `\\\\hline\\n`;\n\t\t\t\t\t\t};\n\t\t\t\t\t} else { // sinon il est impair, cela n'arrive qu'avvec les carrés parfaits\n\t\t\t\t\t\tfor (let m = 0; m < (((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M).length - 1) / 2); m++) {\n\t\t\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[m] + ` & ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M).length - m - 1)] + `& ${M} \\\\\\\\\\n`;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[(nbre_diviseurs_M - 1) / 2] + ` & ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[(nbre_diviseurs_M - 1) / 2] + `& ${M} \\\\\\\\\\n`;\n\t\t\t\t\t\ttexte_corr += `\\\\hline\\n`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `\\\\end{array}\\n$`;\n\t\t\t\t\tif (!sortie_html) {\n\t\t\t\t\t\ttexte_corr += `$\\\\medskip$`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\ttexte_corr += `${M} a donc ${nbre_diviseurs_M} diviseurs qui sont : `;\n\t\t\t\t\ttexte_corr += `1`;\n\t\t\t\t\tfor (let w = 1; w < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M).length; w++) {\n\t\t\t\t\t\ttexte_corr += ` ; ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(M)[w];\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `.`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // liste des diviseurs\n\t\t\t\t\t// on définit un tableau pour les choix du nombre dont on veut les diviseurs\n\t\t\t\t\t// 3 parmis 2,99 y compris les premiers et 1 parmis les entiers à 3 chiffres ayant au moins 8 diviseurs, il y en a 223 !\n\t\t\t\t\tlet tableau_de_choix = [];\n\t\t\t\t\ttableau_de_choix = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99, [tableau_de_choix[0]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99, [tableau_de_choix[0], tableau_de_choix[1]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99, [tableau_de_choix[0], tableau_de_choix[1], tableau_de_choix[2]])];\n\t\t\t\t\tlet tableau_de_choix_3chiffres = [];\n\t\t\t\t\tfor (let m = 101; m < 999; m++) {\n\t\t\t\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(m).length > 8) {\n\t\t\t\t\t\t\ttableau_de_choix_3chiffres.push(m);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\t// on ajoute un nombre à trois chiffre avec au moins 8 diviseurs dans les choix possibles\n\t\t\t\t\tlet rg_Nb_3chiffres = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, (tableau_de_choix_3chiffres.length - 1));\n\t\t\t\t\ttableau_de_choix.push(tableau_de_choix_3chiffres[rg_Nb_3chiffres]);\n\n\t\t\t\t\tlet N; // on déclare le nombre dont on va chercher les diviseurs\n\t\t\t\t\tlet rg_N; // pour tirer le rang du nombre dans le tableau des choix\n\t\t\t\t\trg_N = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, (tableau_de_choix.length - 1));\n\t\t\t\t\tN = tableau_de_choix[rg_N];\n\t\t\t\t\ttexte = `Écrire la liste de tous les diviseurs de ${N}.`;\n\t\t\t\t\ttexte_corr = `Pour trouver la liste des diviseurs de ${N} on cherche tous les produits de deux facteurs qui donnent ${N}. En écrivant toujours le plus petit facteur en premier.<br>`;\n\t\t\t\t\ttexte_corr += `Il est suffisant de chercher des diviseurs inférieurs au plus grand nombre dont le carré vaut ${N}, par exemple ici, ${Math.trunc(Math.sqrt(N))}$\\\\times $${Math.trunc(Math.sqrt(N))} = ${Math.trunc(Math.sqrt(N)) * Math.trunc(Math.sqrt(N))}<${N}`;\n\t\t\t\t\ttexte_corr += ` et ${Math.trunc(Math.sqrt(N)) + 1}$\\\\times $${Math.trunc(Math.sqrt(N)) + 1} = ${(Math.trunc(Math.sqrt(N)) + 1) * (Math.trunc(Math.sqrt(N)) + 1)}>${N} donc il suffit d'arrêter la recherche de facteur à ${Math.trunc(Math.sqrt(N))}.`;\n\t\t\t\t\ttexte_corr += ` En effet, si ${N} est le produit de deux entiers p$\\\\times $q avec p < q alors si p$\\\\times $p > ${N} c'est que q$\\\\times $q < ${N} mais dans ce cas p serait supérieur à q sinon p$\\\\times $q serait inférieur à ${N} ce qui ne doit pas être le cas.<br>`;\n\t\t\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length % 2 == 0) { //si il y a un nombre pair de diviseurs\n\t\t\t\t\t\tfor (let m = 0; m < ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length / 2); m++) {\n\t\t\t\t\t\t\ttexte_corr += `` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[m] + `$\\\\times $` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length - m - 1)] + ` = ${N}<br>`;\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let m = 0; m < (((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length - 1) / 2); m++) {\n\t\t\t\t\t\t\ttexte_corr += `` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[m] + `$\\\\times $` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length - m - 1)] + `<br>`;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexte_corr += `` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length - 1) / 2] + `$\\\\times $` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length - 1) / 2] + ` = ${N}<br>`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `Chacun des facteurs de la liste ci-dessus est un diviseur de ${N}.<br>`;\n\t\t\t\t\ttexte_corr += `La liste des diviseurs de ${N} est donc `;\n\t\t\t\t\ttexte_corr += `1`;\n\t\t\t\t\tfor (let w = 1; w < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length; w++) {\n\t\t\t\t\t\ttexte_corr += ` ; ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[w];\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `.`;\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.liste_questions.push(texte);\n\t\t\t\tthis.liste_corrections.push(texte_corr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\t};\n\t//this.besoin_formulaire_numerique = ['Règle à travailler',5,\"1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissance\\n4 : Produit de puissances de même exposant\\n5 : Mélange\"]; \n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/5e/5A10.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);