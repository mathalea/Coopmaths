{"version":3,"file":"js/71364.ea3380022f1d26e521c4.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5A12-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,shuffle,combinaisonListesSansChangerOrdre,nombreAvecEspace,texteEnCouleurEtGras,modalPdf,modalVideo,cribleEratostheneN,warnMessage} from '../../modules/outils.js'\n\nexport const titre = 'Primalité ou pas'\n\n/**\n * Justifier la non primalité réinvestissement des critères de divisibilité\n * Nombres à 3 ou 4 chiffres, un multiple de 2, de 3, de 5, de 7, de 9, de 10, sous forme d'un produit de deux nombres premiers inférieurs à 30\n * et un nombre premier inferieur à 529\n * 5A12-1\n * @author Sébastien Lozano\n */\nexport default function Premier_ou_pas_5e() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `Justifier que les nombres suivants sont premiers ou pas.`;\n\t//this.consigne += `<br>`;\t\n\tcontext.isHtml ? this.spacing = 3 : this.spacing = 2;\n\tcontext.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1;\n\tthis.nbQuestions = 7;\n\t//this.correctionDetailleeDisponible = true;\n\tthis.nbCols = 2;\n\tthis.nbColsCorr = 1;\n\tthis.sup = 1;\n\tthis.listePackages = `bclogo`;\n\n\tthis.nouvelleVersion = function (numeroExercice) {\n\t\tlet typesDeQuestions;\n\t\tif (context.isHtml) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.boutonAide = '';\n\t\t\tthis.boutonAide = modalPdf(numeroExercice, \"assets/pdf/FicheArithmetique-5A11.pdf\", \"Aide mémoire sur les nombres premiers (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\tthis.boutonAide += modalVideo('conteMathsNombresPremiers', '/videos/LesNombresPremiers.mp4', 'Petit conte mathématique - Les Nombres Premiers', 'Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenuCorrection = ''; // Liste de questions corrigées\n\n\t\tlet typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7];\n\t\ttypesDeQuestionsDisponibles = shuffle(typesDeQuestionsDisponibles); // on mélange l'ordre des questions\n\n\t\t//let typesDeQuestionsDisponibles = [1];\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions);\n\n\t\tlet string_rappel = `Cette liste des nombres premiers inférieurs à 30 pourra être utile : <br>` + cribleEratostheneN(100)[0];\n\t\tfor (let k = 1; k < cribleEratostheneN(30).length; k++) {\n\t\t\tstring_rappel += `, ` + cribleEratostheneN(30)[k];\n\t\t};\n\t\tstring_rappel += `.`;\n\t\tthis.introduction = warnMessage(string_rappel, `nombres`, `Coup de pouce`);\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\n\t\t\ttypesDeQuestions = listeTypeDeQuestions[i];\n\n\t\t\tvar N; // le nombre de la question\n\n\t\t\tswitch (typesDeQuestions) {\n\t\t\t\tcase 1: // nombre pair\n\t\t\t\t\tN = 2 * randint(51, 4999);\n\t\t\t\t\ttexte = nombreAvecEspace(N);\n\t\t\t\t\ttexteCorr = `Comme ${nombreAvecEspace(N)} est pair, il admet donc au moins trois diviseurs qui sont 1, 2 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // Multiple de 3\n\t\t\t\t\tlet sum3 = 0; // pour la valeur de la somme;\n\t\t\t\t\tN = 3 * randint(34, 3333); // on initialise avant la boucle car on a peut être de la chance\n\t\t\t\t\twhile ((N % 2 == 0) || (N % 5 == 0)) {\n\t\t\t\t\t\tN = 3 * randint(34, 3333);\n\t\t\t\t\t};\n\t\t\t\t\ttexte = nombreAvecEspace(N);\n\t\t\t\t\ttexteCorr = `Comme ` + N.toString().charAt(0);\n\t\t\t\t\tsum3 = Number(N.toString().charAt(0));\n\t\t\t\t\tfor (let k = 1; k < N.toString().length; k++) {\n\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\tsum3 += Number(N.toString().charAt(k));\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += ` = ${sum3} est un multiple de 3 donc ${nombreAvecEspace(N)} aussi, il admet donc au moins trois diviseurs qui sont 1, 3 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // Multiple de 5\n\t\t\t\t\tN = 5 * randint(20, 1999);\n\t\t\t\t\ttexte = nombreAvecEspace(N);\n\t\t\t\t\ttexteCorr = `Comme le dernier chiffre de ${nombreAvecEspace(N)} est un ${N.toString().charAt(N.toString().length - 1)} alors ${nombreAvecEspace(N)} est divisible par 5, `;\n\t\t\t\t\ttexteCorr += `il admet donc au moins trois diviseurs qui sont 1, 5 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4: // Multiple de 9\n\t\t\t\t\tlet sum9 = 0; // pour la valeur de la somme;\n\t\t\t\t\tN = 9 * randint(12, 1111); // on initialise avant la boucle car on a peut être de la chance\n\t\t\t\t\twhile ((N % 2 == 0) || (N % 5 == 0)) {\n\t\t\t\t\t\tN = 9 * randint(34, 3333);\n\t\t\t\t\t};\n\t\t\t\t\ttexte = nombreAvecEspace(N);\n\t\t\t\t\ttexteCorr = `Comme ` + N.toString().charAt(0);\n\t\t\t\t\tsum9 = Number(N.toString().charAt(0));\n\t\t\t\t\tfor (let k = 1; k < N.toString().length; k++) {\n\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\tsum9 += Number(N.toString().charAt(k));\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += ` = ${sum9} est un multiple de 9 donc ${nombreAvecEspace(N)} aussi, il admet donc au moins trois diviseurs qui sont 1, 9 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5: // multiple de 10\n\t\t\t\t\tN = 10 * randint(10, 999);\n\t\t\t\t\ttexte = nombreAvecEspace(N);\n\t\t\t\t\ttexteCorr = `Comme le nombre ${nombreAvecEspace(N)} se termine par un ${N.toString().charAt(N.toString().length - 1)} alors ${nombreAvecEspace(N)} est un multiple de 10, `;\n\t\t\t\t\ttexteCorr += `il admet donc au moins trois diviseurs qui sont 1, 10 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6: // produit de deux nombres premiers inférieurs à 30\n\t\t\t\t\t// rang du premier facteur premier\n\t\t\t\t\tlet r1 = randint(0, cribleEratostheneN(30).length - 1);\n\t\t\t\t\t// rang du second facteur premier\n\t\t\t\t\tlet r2 = randint(0, cribleEratostheneN(30).length - 1);\n\t\t\t\t\tlet prime1 = cribleEratostheneN(100)[r1]; // on tire un nombre premier inférieur à 100, il n'y en a que 25!\n\t\t\t\t\tlet prime2 = cribleEratostheneN(100)[r2]; // on tire un autre nombre premier inférieur à 100, ça peut être le même qu'avant!\n\t\t\t\t\tN = prime1 + `$\\\\times $` + prime2;\n\t\t\t\t\ttexte = N;\n\t\t\t\t\ttexteCorr = `${N} est le produit de ${prime1} et de ${prime2}, il admet donc au moins `;\n\t\t\t\t\tif (prime1 == prime2) {\n\t\t\t\t\t\ttexteCorr += `trois divisieurs qui sont 1, ${prime1} et lui-même ${N}=${nombreAvecEspace(prime1 * prime2)} `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += `quatre diviseurs qui sont 1, ${prime1}, ${prime2} et lui-même ${N}=${nombreAvecEspace(prime1 * prime2)}, `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(`${N} = ` + nombreAvecEspace(prime1 * prime2) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7: // nombre premier inférieur à 29\n\t\t\t\t\t// rang du nombre premier choisi\n\t\t\t\t\tlet r = randint(0, cribleEratostheneN(29).length - 1);\n\t\t\t\t\tN = cribleEratostheneN(29)[r]; //on choisit un nombre premier inférieur à 529\n\t\t\t\t\ttexte = N + ``;\n\t\t\t\t\tlet tab_premiers_a_tester = cribleEratostheneN(N);\n\t\t\t\t\t//texteCorr = `Testons la divisibilité de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexteCorr = `En effectuant la division euclidienne de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexteCorr += tab_premiers_a_tester[0];\n\t\t\t\t\tfor (let k = 1; k < tab_premiers_a_tester.length; k++) {\n\t\t\t\t\t\ttexteCorr += `, ` + tab_premiers_a_tester[k];\n\t\t\t\t\t};\n\t\t\t\t\t//texteCorr += `.`;\n\t\t\t\t\t// texteCorr += `<br> Aucun de ces nombres premiers ne divise ${N}, `;\n\t\t\t\t\ttexteCorr += `, le reste n'est jamais nul.`;\n\t\t\t\t\t// texteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` est donc un nombre premier.`);\n\t\t\t\t\ttexteCorr += `<br>` + texteEnCouleurEtGras(nombreAvecEspace(N) + ` est donc un nombre premier.`);\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\tlisteQuestionsToContenu(this);\n\t};\n\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Premier_ou_pas_5e","Exercice","this","consigne","context","spacing","spacingCorr","nbQuestions","nbCols","nbColsCorr","sup","listePackages","nouvelleVersion","numeroExercice","typesDeQuestions","boutonAide","modalPdf","modalVideo","listeQuestions","listeCorrections","contenu","contenuCorrection","typesDeQuestionsDisponibles","shuffle","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","string_rappel","cribleEratostheneN","k","length","introduction","warnMessage","texte","texteCorr","i","cpt","N","randint","nombreAvecEspace","texteEnCouleurEtGras","sum3","toString","charAt","Number","sum9","r1","r2","prime1","prime2","r","tab_premiers_a_tester","indexOf","push","listeQuestionsToContenu","consigneCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined"],"sourceRoot":""}