{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/2dinteractif.js","webpack://mathalea/./src/js/exercices/beta/betaExempleFigureClic.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","PointCliquable","x","y","options","ObjetMathalea2D","A","point","out","opacity","over","click","etat","svg","coeff","code","trace","tracePoint","color","couleur","epaisseur","width","taille","size","isVisible","style","id","xSVG","ySVG","radius","rayon","moi","gestionDeLaSouris","document","removeEventListener","groupe","getElementById","changeEtatPoint","key","mouseOverEffect","mouseOutEffect","addEventListener","stopCliquable","replaceWith","cloneNode","pointCliquable","args","interactifReady","interactifType","NomQuelconqueDeLaFonctionQuiCreeExercice","amcType","question","objets2d","B","randint","C","p","polygone","s1","s2","s3","push","mathalea2d","xmin","ymin","xmax","ymax","correctionInteractive","elt","cpt","s","addFeedback","message","type","listeQuestionsToContenu","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","styles","split","forEach","paire","exec","value","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","container","includes","cssDiv","div","cssIcon","remove","divTitre","test","innerHTML","messageUtilisateur","exercice","messageFeedback"],"mappings":"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","file":"js/7791.d33eb98f2de4410131ff.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import { ObjetMathalea2D, point, tracePoint } from './2d.js'\n\n/**\n * @author Rémi ANGOT\n * @param {number} x abscisse du point\n * @param {number} y ordonnée du point\n * @param {object} options over, out et click sont des ojets pour le style css des évènements de la souris, radius, width, color, size, style sont les paramètres possibles pour la trace du point\n */\nfunction PointCliquable (x, y, options) {\n  ObjetMathalea2D.call(this)\n  const A = point(x, y)\n  if (!options) options = {}\n  const out = options.out || { opacity: 0 }\n  const over = options.over || { opacity: 0.5 }\n  const click = options.click || { opacity: 1 }\n  this.etat = false // Pour récupérer si le point est affiché ou pas\n  this.svg = function (coeff) {\n    let code\n    const trace = tracePoint(A)\n    trace.color = options.color || options.couleur || 'black'\n    trace.epaisseur = options.width || options.epaisseur || 1\n    trace.taille = options.size || options.taille || 3\n    trace.isVisible = false\n    trace.style = options.style || 'x'\n    code = `<g id=\"${this.id}\">\\n`\n    code += trace.svg(coeff) + '\\n'\n    // Le cercle est la zone d'effet pour les évènements\n    // Comme fill est à none, il faut ajouter pointer-events=\"visible\" cf https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/\n    code += `<circle cx=\"${A.xSVG(coeff)}\" cy=\"${A.ySVG(coeff)}\" r=\"${(options.radius || options.rayon || 1) * coeff}\" fill=\"none\" pointer-events=\"visible\" />\\n`\n    code += '</g>'\n    return code\n  }\n  const moi = this // Pour utiliser this dans les fonctions\n  const gestionDeLaSouris = () => {\n    document.removeEventListener('exercicesAffiches', gestionDeLaSouris)\n    const groupe = document.getElementById(`${this.id}`)\n    const changeEtatPoint = (etat) => {\n      this.etat = etat\n    }\n    // On initialise avec le style de out\n    if (groupe) {\n      for (const key in out) {\n        groupe.style[key] = out[key]\n      }\n      groupe.addEventListener('mouseover', mouseOverEffect)\n      groupe.addEventListener('mouseout', mouseOutEffect)\n      groupe.addEventListener('click', mouseClick)\n      function mouseOverEffect () {\n        for (const key in over) {\n          this.style[key] = over[key]\n        }\n      }\n      function mouseOutEffect () {\n        for (const key in out) {\n          this.style[key] = out[key]\n        }\n      }\n      function mouseClick () {\n        if (moi.etat) {\n          // On désactive le point\n          groupe.addEventListener('mouseover', mouseOverEffect)\n          groupe.addEventListener('mouseout', mouseOutEffect)\n          // On lui remet le style de out\n          for (const key in out) {\n            this.style[key] = out[key]\n          }\n          moi.etat = false\n          changeEtatPoint(false)\n        } else {\n          // On désactive les listeners\n          groupe.removeEventListener('mouseover', mouseOverEffect)\n          groupe.removeEventListener('mouseout', mouseOutEffect)\n          // On applique le style de click\n          for (const key in click) {\n            this.style[key] = click[key]\n          }\n          moi.etat = true\n        }\n      }\n    }\n  }\n  document.addEventListener('exercicesAffiches', gestionDeLaSouris)\n  this.stopCliquable = () => {\n    const groupe = document.getElementById(`${this.id}`)\n    // On retire tous les listener en le remplaçant par un clone\n    groupe.replaceWith(groupe.cloneNode(true))\n  }\n}\n\nexport function pointCliquable (...args) {\n  return new PointCliquable(...args)\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint } from '../../modules/outils.js'\nimport { mathalea2d, point, polygone } from '../../modules/2d.js'\nimport { pointCliquable } from '../../modules/2dinteractif.js'\nimport { addFeedback } from '../../modules/messages.js'\nexport const titre = 'Sommets du triangle'\nexport const interactifReady = true\n// il y avait un fonctionnement avec amcType cf commit 3ae7c43\nexport const interactifType = 'custom' // La correction doit être gérée dans l'exercice avec la méthode this.correctionInteractive()\n\n/**\n * Description didactique de l'exercice\n * @author\n * Référence\n*/\nexport default function NomQuelconqueDeLaFonctionQuiCreeExercice () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactif = true\n  this.amcType = amcType\n  this.consigne = ''\n  this.nbQuestionsModifiable = false\n  // this.nbQuestions = 10\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  // this.sup = 1; // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let question\n    const objets2d = []\n    const A = point(0, 0)\n    const B = point(randint(5, 10), randint(-3, 5))\n    const C = point(randint(1, 10), randint(4, 10))\n    const p = polygone(A, B, C)\n    const s1 = pointCliquable(A.x, A.y)\n    const s2 = pointCliquable(B.x, B.y)\n    const s3 = pointCliquable(C.x, C.y)\n    objets2d.push(p, s1, s2, s3)\n\n    question = 'Clique sur les sommets du triangle.'\n    question += '<br>' + mathalea2d({ xmin: -2, ymin: -5, xmax: 10, ymax: 11 }, objets2d)\n\n    const correction = 'texte de la correction 1'\n    this.listeQuestions.push(question)\n    this.listeCorrections.push(correction)\n\n    this.correctionInteractive = (elt) => {\n      let cpt = 0\n      for (const s of [s1, s2, s3]) {\n        if (s.etat) cpt++\n        s.stopCliquable()\n      }\n      addFeedback(elt, {\n        message: `Tu as cliqué sur ${cpt} ${cpt > 1 ? 'points' : 'point'}.`,\n        type: 'positive'\n      })\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 3];\n}\n","/* global HTMLElement SVGElement Element */\n/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * Les styles doivent être écrits en camelCase dans le version JS et non CSS\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nexport function setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (const prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n\n/**\n * S'assure que elt est bien un élément du DOM et le retourne (throw sinon)\n * @param {string|HTMLElement|SVGElement|Element} elt Si c'est une string on ira chercher l'élément avec getElementById\n * @param {string} [type] pour restreindre à un type d'élément, html|svg\n * @return {HTMLElement|SVGElement|Element}\n * @throws {TypeError} Si elt n'était pas un élément du type voulu\n */\nexport function enforceElt (elt, type) {\n  if (typeof elt === 'string') {\n    elt = document.getElementById(elt)\n    if (!elt) throw Error(`Aucun élément d’id ${elt}`)\n  }\n  switch (type) {\n    case 'html':\n      if (elt instanceof HTMLElement) return elt\n      throw TypeError('HTMLElement indispensable manquant')\n    case 'svg':\n      if (elt instanceof SVGElement) return elt\n      throw TypeError('SVGElement indispensable manquant')\n    default:\n      if (elt instanceof Element) return elt\n  }\n  throw TypeError('Element indispensable manquant')\n}\n","import { addElement, addText, get } from './dom'\n/**\n * Fonctions pour gérer les messages utilisateur (feedback erreur|warning ou messages positifs)\n * @module\n */\n\n/**\n * Les types possibles\n * @type {string[]}\n */\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} feedback\n * @param {string} feedback.message\n * @param {string} [feedback.type=error]\n * @param {string} [feedback.titre]\n * @return {HTMLElement} L'élément du feedback (déjà ajouté dans le container)\n */\nexport function addFeedback (container, { message, type = 'error', titre } = {}) {\n  if (!types.includes(type)) {\n    console.error(Error(`type de message inconnu : ${type}`))\n    type = 'error'\n  }\n  if (!message) throw Error('Message obligatoire pour tout retour utilisateur')\n  const cssDiv = type === 'info' ? '' : type\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = type === 'error'\n    ? 'frown outline'\n    : (type === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  if (/<[a-zA-Z0-9_ \"']+/.test(message)) div.innerHTML += message\n  else addText(div, message)\n  return div\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        type: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'noLatex':\n      addFeedback(container, {\n        titre: 'Pas de contenu Latex pour cet exercice',\n        message: `L'exercice ${exercice} n'a, pour l'instant, pas de version Latex`,\n        type: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} feedback\n * @param {string} feedback.id id du div conteneur à utiliser\n * @param {string} feedback.message Le message à afficher\n * @param {string} feedback.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, message = '', type = 'error' } = {}) {\n  if (!id || !message) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message, type })\n  div.style.width = '400px'\n  return div\n}\n"],"sourceRoot":""}