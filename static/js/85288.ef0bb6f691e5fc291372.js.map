{"version":3,"file":"js/85288.ef0bb6f691e5fc291372.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6D12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, minToHoraire, minToHour, prenomF, prenom } from '../../modules/outils.js'\nimport { context } from '../../modules/context.js'\n\nexport const titre = 'Calculer des durées ou déterminer un horaire'\n\nexport const amcReady = true // pour définir que l'exercice peut servir à AMC\nexport const amcType = 'AMCHybride'\n\nexport const dateDeModifImportante = '02/01/2022' // Correction détaillée\n\n/**\n * Problèmes où il faut calculer la durée d'un évèbement ou un horaire.\n * Paramétrage possible :\n * * 1 : calculs de durées\n * * 2 : calculer l'heure de début\n * * 3 : calculer l'heure de fin\n * * 4 : mélange des 3 types précédents\n * @author Rémi Angot\n * Référence 6D12\n */\nexport default function CalculsDeDureesOuHoraires () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.sup = 4\n  this.spacing = 2\n  this.nbQuestions = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacingCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const typeDeContexte = combinaisonListes(\n      [1, 2, 3, 4, 5],\n      this.nbQuestions\n    )\n    let typesDeQuestions // 1 : calcul de durées // 2 : calcul de l'horaire de début // 3 : calcul de l'horaire de fin // 4 : mélange\n\n    if (this.sup < 4) {\n      // que des questions de niveau 1 ou que des questions de niveau 2\n      typesDeQuestions = combinaisonListes([this.sup], this.nbQuestions)\n    } else {\n      // un mélange équilibré de questions\n      typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions)\n    }\n\n    for (let i = 0, d1, h1, m1, d2, h2, m2, d, h, m, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // d1 : heure de début (h1 heures m1 min)\n      // d2 : heure de fin (h2 heures m2 min)\n      // d : durée\n      if (typeDeContexte[i] === 1) {\n        h1 = randint(20, 22)\n        m1 = randint(35, 58)\n        d1 = h1 * 60 + m1\n        h2 = h1 + 2\n        m2 = randint(1, m1) // pour s'assurer qu'il y a une retenue dans d2-d1\n        d2 = h2 * 60 + m2\n        d = d2 - d1\n        d1 = minToHoraire(d1)\n        d2 = minToHoraire(d2)\n        h = parseInt(d / 60)\n        m = d % 60\n        d = minToHour(d)\n\n        if (typesDeQuestions[i] === 1) {\n          texte = `La diffusion d'un film commence à ${d1} et se termine à ${d2}. Combien de temps a duré ce film ?`\n          texteCorr = `${d1}$\\\\xrightarrow{+${60 - m1}~\\\\text{min}}${(h1 + 1) % 24}~\\\\text{h} \\\\xrightarrow{+${(h2 - h1 - 1) % 24}~\\\\text{h}~${m2}~\\\\min}${h2 % 24}~\\\\text{h}~${m2}~\\\\text{min}$`\n          texteCorr += `<br>${d2} $-$ ${d1} = ${d}`\n          texteCorr += '<br>'\n          texteCorr += `Le film dure ${d}.`\n        }\n        if (typesDeQuestions[i] === 2) {\n          texte = `Un film dure ${d} et commence à ${d1}. À quelle heure se terminera-t-il ?`\n          texteCorr = `${d1} + ${d} = ${h1 + h} h ${m1 + m} min`\n          if (m1 + m > 59) texteCorr += `= ${d2}`\n          texteCorr += '<br>'\n          texteCorr += `Le film terminera à ${d2}.`\n        }\n        if (typesDeQuestions[i] === 3) {\n          texte = `Un film de ${d} termine à ${d2}. À quelle heure a-t-il commencé ?`\n          texteCorr = `$${h2 % 24}~\\\\text{h}~${m2}~\\\\text{min}`\n          if (h > 0) texteCorr += `\\\\xrightarrow{-${h}~\\\\text{h}} ${h2 - h}~\\\\text{h}~${m2}~\\\\text{min}`\n          texteCorr += `\\\\xrightarrow{-${m2}~\\\\text{min}} ${(h2 - h) % 24}~\\\\text{h} \\\\xrightarrow{-${Math.abs(m - m2)}~\\\\text{min}} ${h1}~\\\\text{h}~${m1}~\\\\text{min}$`\n          texteCorr += `<br>${d2} $-$ ${d} = ${d1}`\n          texteCorr += '<br>'\n          texteCorr += `Le film a commencé à ${d1}.`\n        }\n      }\n\n      if (typeDeContexte[i] === 2) {\n        h1 = randint(20, 23)\n        m1 = randint(35, 58)\n        d1 = h1 * 60 + m1\n        h2 = h1 + 1\n        m2 = randint(1, m1) // pour s'assurer qu'il y a une retenue dans d2-d1\n        d2 = h2 * 60 + m2\n        d = d2 - d1\n        while (d < 27 || d > 75 || d === 60) {\n          h1 = randint(20, 23)\n          m1 = randint(35, 58)\n          d1 = h1 * 60 + m1\n          h2 = h1 + 2\n          m2 = randint(1, m1) // pour s'assurer qu'il y a une retenue dans d2-d1\n          d2 = h2 * 60 + m2\n          d = d2 - d1\n        }\n        d1 = minToHoraire(d1)\n        d2 = minToHoraire(d2)\n        h = parseInt(d / 60)\n        m = d % 60\n        d = minToHour(d)\n\n        if (typesDeQuestions[i] === 1) {\n          texte = `Sur son service de streaming favori, ${prenom()} commence à regarder une série à ${d1} et celle-ci se termine à ${d2}. Combien de temps a duré l'épisode ?`\n          texteCorr = `${d1}$\\\\xrightarrow{+${60 - m1}~\\\\text{min}}${(h1 + 1) % 24}~\\\\text{h} \\\\xrightarrow{+${((h2 - h1 - 1) > 0) ? `${(h2 - h1 - 1) % 24}~\\\\text{h}` : ''}~${m2}~\\\\min}${h2 % 24}~\\\\text{h}~${m2}~\\\\text{min}$`\n          texteCorr += `<br>${d2} $-$ ${d1} = ${d}`\n          texteCorr += '<br>'\n          texteCorr += `La série a duré ${d}.`\n        }\n        if (typesDeQuestions[i] === 2) {\n          texte = `${prenom()} allume son ordinateur à ${d1} pour regarder une série de ${d}. À quelle heure la série s'achèvera-t-elle ?`\n          texteCorr = `${d1} + ${d} = ${h1 + h} h ${m1 + m} min`\n          if (m1 + m > 59) texteCorr += `= ${d2}`\n          texteCorr += '<br>'\n          texteCorr += `La série s'achèvera à ${d2}.`\n        }\n        if (typesDeQuestions[i] === 3) {\n          texte = `${prenom()} termine de regarder une série de ${d} à ${d2}. À quelle heure la série a-t-elle commencé ?`\n          texteCorr = `$${h2 % 24}~\\\\text{h}~${m2}~\\\\text{min}`\n          if (h > 0) texteCorr += `\\\\xrightarrow{-${h}~\\\\text{h}} ${h2 - h}~\\\\text{h}~${m2}~\\\\text{min}`\n          texteCorr += `\\\\xrightarrow{-${m2}~\\\\text{min}} ${(h2 - h) % 24}~\\\\text{h} \\\\xrightarrow{-${Math.abs(m - m2)}~\\\\text{min}} ${h1}~\\\\text{h}~${m1}~\\\\text{min}$`\n          texteCorr += `<br>${d2} $-$ ${d} = ${d1}`\n          texteCorr += '<br>'\n          texteCorr += `Elle a commencé à ${d1}.`\n        }\n      }\n\n      if (typeDeContexte[i] === 3) {\n        h1 = randint(8, 21)\n        m1 = randint(1, 58)\n        d1 = h1 * 60 + m1\n        h2 = h1 + randint(1, 2)\n        m2 = randint(1, 59) // pas forcément de retenue dans d2-d1\n        d2 = h2 * 60 + m2\n        d = d2 - d1\n        d1 = minToHoraire(d1)\n        d2 = minToHoraire(d2)\n        h = parseInt(d / 60)\n        m = d % 60\n        d = minToHour(d)\n\n        if (typesDeQuestions[i] === 1) {\n          texte = `Une émission télévisée est diffusée de ${d1} à ${d2}. Combien de temps dure-t-elle ?`\n          texteCorr = `${d1}$\\\\xrightarrow{+${60 - m1}~\\\\text{min}}${(h1 + 1) % 24}~\\\\text{h} \\\\xrightarrow{+${((h2 - h1 - 1) > 0) ? `${(h2 - h1 - 1) % 24}~\\\\text{h}` : ''}~${m2}~\\\\min}${h2 % 24}~\\\\text{h}~${m2}~\\\\text{min}$`\n          texteCorr += `<br>${d2} $-$ ${d1} = ${d}`\n          texteCorr += '<br>'\n          texteCorr += `L'émission dure ${d}.`\n        }\n        if (typesDeQuestions[i] === 2) {\n          texte = `Une émission télévisée de ${d} commence à ${d1}. À quelle heure s'achèvera-t-elle ?`\n          texteCorr = `${d1} + ${d} = ${h1 + h} h ${m1 + m} min`\n          if (m1 + m > 59) texteCorr += `= ${d2}`\n          texteCorr += '<br>'\n          texteCorr += `L'émission s'achèvera à ${d2}.`\n        }\n        if (typesDeQuestions[i] === 3) {\n          texte = `À ${d2}, ${prenom()} termine de regarder une émission de ${d}. À quelle heure l'émission a-t-elle commencé ?`\n          texteCorr = `$${h2 % 24}~\\\\text{h}~${m2}~\\\\text{min}`\n          if (h > 0) texteCorr += `\\\\xrightarrow{-${h}~\\\\text{h}} ${h2 - h}~\\\\text{h}~${m2}~\\\\text{min}`\n          texteCorr += `\\\\xrightarrow{-${m2}~\\\\text{min}} ${(h2 - h) % 24}~\\\\text{h} \\\\xrightarrow{-${Math.abs(m - m2)}~\\\\text{min}} ${h1}~\\\\text{h}~${m1}~\\\\text{min}$`\n          texteCorr += `<br>${d2} $-$ ${d} = ${d1}`\n          texteCorr += '<br>'\n          texteCorr += `L'émission a commencé à ${d1}.`\n        }\n      }\n\n      if (typeDeContexte[i] === 4) {\n        h1 = randint(13, 16)\n        m1 = randint(1, 58)\n        d1 = h1 * 60 + m1\n        h2 = h1 + randint(1, 2)\n        m2 = randint(1, 58) // pas forcément de retenue dans d2-d1\n        d2 = h2 * 60 + m2\n        d = d2 - d1\n        while (d < 27 || d > 75 || d === 60) {\n          h1 = randint(13, 16)\n          m1 = randint(35, 58)\n          d1 = h1 * 60 + m1\n          h2 = h1 + randint(1, 2)\n          m2 = randint(1, m1) // pour s'assurer qu'il y a une retenue dans d2-d1\n          d2 = h2 * 60 + m2\n          d = d2 - d1\n        }\n        d1 = minToHoraire(d1)\n        d2 = minToHoraire(d2)\n        h = parseInt(d / 60)\n        m = d % 60\n        d = minToHour(d)\n\n        if (typesDeQuestions[i] === 1) {\n          texte = `Un papa regarde la compétition de gymnastique de sa fille  de ${d1} à ${d2}. Quelle est la durée de cette compétition ?`\n          texteCorr = `${d1}$\\\\xrightarrow{+${60 - m1}~\\\\text{min}}${(h1 + 1) % 24}~\\\\text{h} \\\\xrightarrow{+${((h2 - h1 - 1) > 0) ? `${(h2 - h1 - 1) % 24}~\\\\text{h}` : ''}~${m2}~\\\\min}${h2 % 24}~\\\\text{h}~${m2}~\\\\text{min}$`\n          texteCorr += `<br>${d2} $-$ ${d1} = ${d}`\n          texteCorr += '<br>'\n          texteCorr += `La compétition dure ${d}.`\n        }\n        if (typesDeQuestions[i] === 2) {\n          texte = `Une compétition de gymnastique commence à ${d1} et dure ${d}. À quelle heure sera-t-elle terminée ?`\n          texteCorr = `${d1} + ${d} = ${h1 + h} h ${m1 + m} min`\n          if (m1 + m > 59) texteCorr += `= ${d2}`\n          texteCorr += '<br>'\n          texteCorr += `La compétition terminera à ${d2}.`\n        }\n        if (typesDeQuestions[i] === 3) {\n          texte = `Une compétition de gymnastique qui se termine à ${d2} a duré ${d}. À quelle heure a-t-elle commencé ?`\n          texteCorr = `$${h2 % 24}~\\\\text{h}~${m2}~\\\\text{min}`\n          if (h > 0) texteCorr += `\\\\xrightarrow{-${h}~\\\\text{h}} ${h2 - h}~\\\\text{h}~${m2}~\\\\text{min}`\n          texteCorr += `\\\\xrightarrow{-${m2}~\\\\text{min}} ${(h2 - h) % 24}~\\\\text{h} \\\\xrightarrow{-${Math.abs(m - m2)}~\\\\text{min}} ${h1}~\\\\text{h}~${m1}~\\\\text{min}$`\n          texteCorr += `<br>${d2} $-$ ${d} = ${d1}`\n          texteCorr += '<br>'\n          texteCorr += `La compétition a commencé à ${d1}.`\n        }\n      }\n\n      if (typeDeContexte[i] === 5) {\n        h1 = randint(8, 15)\n        m1 = randint(25, 58)\n        d1 = h1 * 60 + m1\n        h2 = h1 + randint(2, 5)\n        m2 = randint(1, m1) // pour s'assurer qu'il y a une retenue dans d2-d1\n        d2 = h2 * 60 + m2\n        d = d2 - d1\n        while (d < 27 || d > 75 || d === 60) {\n          h1 = randint(20, 23)\n          m1 = randint(35, 58)\n          d1 = h1 * 60 + m1\n          h2 = h1 + 2\n          m2 = randint(1, m1) // pour s'assurer qu'il y a une retenue dans d2-d1\n          d2 = h2 * 60 + m2\n          d = d2 - d1\n        }\n        d1 = minToHoraire(d1)\n        d2 = minToHoraire(d2)\n        h = parseInt(d / 60)\n        m = d % 60\n        d = minToHour(d)\n\n        if (typesDeQuestions[i] === 1) {\n          texte = `Un train part à ${d1} et arrive à destination à ${d2}. Quelle est la durée du trajet ?`\n          texteCorr = `${d1}$\\\\xrightarrow{+${60 - m1}~\\\\text{min}}${(h1 + 1) % 24}~\\\\text{h} \\\\xrightarrow{+${((h2 - h1 - 1) > 0) ? `${(h2 - h1 - 1) % 24}~\\\\text{h}` : ''}~${m2}~\\\\min}${h2 % 24}~\\\\text{h}~${m2}~\\\\text{min}$`\n          texteCorr += `<br>${d2} $-$ ${d1} = ${d}`\n          texteCorr += '<br>'\n          texteCorr += `Le trajet dure ${d}.`\n        }\n        if (typesDeQuestions[i] === 2) {\n          texte = `${prenomF()} monte dans le train à ${d1} pour un trajet qui doit durer ${d}. À quelle heure arrivera-t-elle ?`\n          texteCorr = `${d1} + ${d} = ${h1 + h} h ${m1 + m} min`\n          if (m1 + m > 59) texteCorr += `= ${d2}`\n          texteCorr += '<br>'\n          texteCorr += `Elle arrivera à ${d2}.`\n        }\n        if (typesDeQuestions[i] === 3) {\n          texte = `Un train arrive en gare à ${d2} après un trajet de ${d}. À quelle heure le voyage a-t-il commencé ?`\n          texteCorr = `$${h2 % 24}~\\\\text{h}~${m2}~\\\\text{min}`\n          if (h > 0) texteCorr += `\\\\xrightarrow{-${h}~\\\\text{h}} ${h2 - h}~\\\\text{h}~${m2}~\\\\text{min}`\n          texteCorr += `\\\\xrightarrow{-${m2}~\\\\text{min}} ${(h2 - h) % 24}~\\\\text{h} \\\\xrightarrow{-${Math.abs(m - m2)}~\\\\text{min}} ${h1}~\\\\text{h}~${m1}~\\\\text{min}$`\n          texteCorr += `<br>${d2} $-$ ${d} = ${d1}`\n          texteCorr += '<br>'\n          texteCorr += `Le voyage a commencé à ${d1}.`\n        }\n      }\n      if (context.isAmc) {\n        this.autoCorrection[i] =\n          {\n            enonce: 'Dans chacun des encadrés, montrer une démarche ou un calcul et répondre par une phrase.<br>',\n            enonceAvant: false,\n            enonceAvantUneFois: true,\n            melange: false,\n            propositions: [\n              {\n                type: 'AMCOpen',\n                propositions: [\n                  {\n                    texte: ' ',\n                    statut: 3, // (ici c'est le nombre de lignes du cadre pour la réponse de l'élève sur AMC)\n                    feedback: '',\n                    enonce: texte + '<br>', // EE : ce champ est facultatif et fonctionnel qu'en mode hybride (en mode normal, il n'y a pas d'intérêt)\n                    sanscadre: false // EE : ce champ est facultatif et permet (si true) de cacher le cadre et les lignes acceptant la réponse de l'élève\n                  }\n                ]\n              }\n            ]\n          }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    \"1 : Calcul de durées\\n2 : Calcul de l'horaire de fin\\n3 : Calcul de l'horaire de début\\n4 : Mélange\"\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","amcType","dateDeModifImportante","CalculsDeDureesOuHoraires","Exercice","this","consigne","sup","spacing","nbQuestions","nbCols","nbColsCorr","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","typeDeContexte","combinaisonListes","typesDeQuestions","d1","h1","m1","d2","h2","m2","d","h","m","texte","texteCorr","i","cpt","randint","minToHoraire","parseInt","minToHour","Math","abs","prenom","prenomF","context","enonce","enonceAvant","enonceAvantUneFois","melange","propositions","type","statut","feedback","sanscadre","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}