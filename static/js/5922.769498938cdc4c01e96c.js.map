{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5N20-0.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Problemes_additifs_fractions_5e","typesDeQuestionsDisponibles","Exercice","this","debug","sup","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","nb_vols_total","frac_vols","shuffle","destinations_vols","randint","situations","fin_enonce_situation","nom_enonce","last_question","cat1","destination","article","nom","frac","angle","calcul","arg_graph","cat2","cat3","cat4","cat5","nb_total","fig","myCodageAngle","A","O","B","args","codageAngleDroit","codeAngle","myLabelPosition","y","myTexte_vols_corr","fenetreMathalea2D","xmin","ymin","xmax","ymax","pixelsParCm","scale","O_vols","point","A_vols","c_vols","cercleCentrePoint","epaisseur","B_vols","rotation","s_OA_vols","segment","s_OB_vols","codage_AOB","C_vols","s_OC_vols","codage_BOC","D_vols","s_OD_vols","codage_COD","E_vols","s_OE_vols","codage_DOE","F_vols","s_OF_vols","codage_EOF","A_legende","L_vols_cat1","positionLabel","LL_vols_cat1","s_legende_cat1","styleExtremites","pointilles","L_vols_cat2","LL_vols_cat2","s_legende_cat2","L_vols_cat3","LL_vols_cat3","s_legende_cat3","L_vols_cat4","LL_vols_cat4","s_legende_cat4","L_vols_cat5","LL_vols_cat5","s_legende_cat5","mesAppels","labelPoint","fig_vols","mathalea2d","enonces","i_sous_question","i_sous_question_corr","k","push","enonce","texteGras","numAlpha","correction","texteEnCouleur","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"oMAIO,MAAMA,EAAQ,kDAON,SAASC,IAetB,IAAIC,EAdJC,eAAcC,MACdA,KAAKC,OAAQ,EACbD,KAAKE,IAAM,EACXF,KAAKG,YAAY,EAEjBH,KAAKJ,MAAQA,EACbI,KAAKI,SAAW,0BAEhBJ,KAAKK,OAAS,EACdL,KAAKM,WAAa,EAElBC,YAAiBP,KAAKQ,QAAU,EAChCD,YAAiBP,KAAKS,YAAc,EAIpCT,KAAKU,gBAAkB,WAEnBZ,GADEE,KAAKC,MACuB,CAAC,IAMjCD,KAAKW,eAAiB,GACtBX,KAAKY,iBAAmB,GAGxB,IAAIC,GAAuBC,SAAkChB,EAA6BE,KAAKG,aAE/F,IAAK,IAAWY,EAAOC,EAAdC,EAAI,EAAqBC,EAAM,EAAGD,EAAIjB,KAAKG,aAAee,EAAM,IAAK,CAE5E,IAeIC,EAfAC,EAAY,CACd,CAAC,EAAG,GAAI,CAAC,IAAK,IAAK,QAAS,EAAG,EAAG,MAAO,KACzC,CAAC,EAAG,GAAI,CAAC,IAAK,IAAK,QAAS,EAAG,EAAG,MAAO,KACzC,CAAC,EAAG,GAAI,CAAC,IAAK,IAAK,QAAS,EAAG,EAAG,MAAO,KACzC,CAAC,EAAG,EAAG,CAAC,IAAK,IAAK,QAAS,EAAG,EAAG,OAAQ,KACzC,CAAC,EAAG,EAAG,CAAC,IAAK,IAAK,QAAS,EAAG,EAAG,QAAS,MAG5C,GACEA,GAAYC,SAAQD,SACbA,EAAU,GAAG,IAAMA,EAAU,GAAG,IAMzC,IAAIE,EAAoB,CAAC,CAAC,KAAO,WAAY,CAAC,KAAO,QAAS,CAAC,KAAO,YAAa,CAAC,KAAO,UAAW,CAAC,KAAM,YAC7GA,GAAoBD,SAAQC,GAC5B,GACEH,GAAgBI,SAAQ,IAAK,WACtBJ,EAAgB,GAAK,GAAKA,EAAgB,GAAK,GAAKA,EAAgB,GAAK,GAGlF,MAAMK,EAAa,CACjB,CACEC,qBAAsB,qDACtBC,WAAY,OACZC,cAAe,CAAC,4BAA6B,OAAQ,oBAAqB,qBAC1EC,KAAM,CACJC,YAAaP,EAAkB,GAAG,GAAKA,EAAkB,GAAG,GAC5DQ,QAASR,EAAkB,GAAG,GAC9BS,IAAKT,EAAkB,GAAG,GAC1BU,KAAMZ,EAAU,GAChBa,OAAOC,SAAO,IAAMd,EAAU,GAAG,IACjCe,UAAWf,EAAU,GAAG,IAE1BgB,KAAM,CACJP,YAAaP,EAAkB,GAAG,GAAKA,EAAkB,GAAG,GAC5DQ,QAASR,EAAkB,GAAG,GAC9BS,IAAKT,EAAkB,GAAG,GAC1BU,KAAMZ,EAAU,GAChBa,OAAOC,SAAO,IAAMd,EAAU,GAAG,IACjCe,UAAWf,EAAU,GAAG,IAE1BiB,KAAM,CACJR,YAAaP,EAAkB,GAAG,GAAKA,EAAkB,GAAG,GAC5DQ,QAASR,EAAkB,GAAG,GAC9BS,IAAKT,EAAkB,GAAG,GAC1BU,KAAMZ,EAAU,GAChBa,OAAOC,SAAO,IAAMd,EAAU,GAAG,IACjCe,UAAWf,EAAU,GAAG,IAE1BkB,KAAM,CACJT,YAAaP,EAAkB,GAAG,GAAKA,EAAkB,GAAG,GAC5DQ,QAASR,EAAkB,GAAG,GAC9BS,IAAKT,EAAkB,GAAG,GAC1BU,KAAMZ,EAAU,GAChBa,OAAOC,SAAO,IAAMd,EAAU,GAAG,IACjCe,UAAWf,EAAU,GAAG,IAE1BmB,KAAM,CACJV,YAAaP,EAAkB,GAAG,GAAKA,EAAkB,GAAG,GAC5DQ,QAASR,EAAkB,GAAG,GAC9BS,IAAKT,EAAkB,GAAG,GAC1BU,KAAMZ,EAAU,GAChBa,OAAOC,SAAO,IAAMd,EAAU,GAAG,IACjCe,UAAWf,EAAU,GAAG,IAI1BoB,SAAUrB,EACVsB,IAAK,IAEP,GAEA,GAEA,GAEA,IAIF,SAASC,EAAeC,EAAGC,EAAGC,EAAGZ,MAAWa,IAC1C,OAAa,IAATb,GACKc,SAAiBJ,EAAGC,EAAGC,IAEvBG,SAAUL,EAAGC,EAAGX,KAAUa,GAUrC,SAASG,EAAiBC,GACxB,OAAIA,EAAI,EACC,QAEA,QAKX,SAASC,EAAmBlB,GAC1B,OAAQA,GACN,KAAK,GACH,MAAQ,6CAA4CA,mFAAuFA,2CAC7I,KAAK,GACH,MAAQ,uMACqFA,wDAC1EA,mFAAuFA,4DAE5G,KAAK,IACH,MAAQ,4CAA2CA,mFAAuFA,4CAMhJ,MAAMmB,EAAoB,CAAEC,MAAO,GAAIC,MAAO,EAAGC,KAAM,GAAIC,KAAM,EAAGC,YAAa,GAAIC,MAAO,IACtFC,GAASC,SAAM,EAAG,GACxB,IAAIC,GAASD,SAAMR,EAAkBC,KAAO,EAAG,GAC3CS,GAASC,SAAkBJ,EAAQE,EAAQ,QAC/CC,EAAOE,UAAY,EAGnB,IAAIC,GAASC,SAASL,EAAQF,EAAQnC,EAAW,GAAGI,KAAKK,OACrDkC,GAAYC,SAAQT,EAAQE,GAC5BQ,GAAYD,SAAQT,EAAQM,GAC5BK,EAAa5B,EAAcmB,EAAQF,EAAQM,EAAQzC,EAAW,GAAGI,KAAKK,MAAOT,EAAW,GAAGI,KAAKO,WAEpG,MAAMoC,GAASL,SAASD,EAAQN,EAAQnC,EAAW,GAAGY,KAAKH,OAC3D,IAAIuC,GAAYJ,SAAQT,EAAQY,GAC5BE,EAAa/B,EAAcuB,EAAQN,EAAQY,EAAQ/C,EAAW,GAAGY,KAAKH,MAAOT,EAAW,GAAGY,KAAKD,WAEpG,MAAMuC,GAASR,SAASK,EAAQZ,EAAQnC,EAAW,GAAGa,KAAKJ,OAC3D,IAAI0C,GAAYP,SAAQT,EAAQe,GAC5BE,EAAalC,EAAc6B,EAAQZ,EAAQe,EAAQlD,EAAW,GAAGa,KAAKJ,MAAOT,EAAW,GAAGa,KAAKF,WAEpG,MAAM0C,GAASX,SAASQ,EAAQf,EAAQnC,EAAW,GAAGc,KAAKL,OAC3D,IAAI6C,GAAYV,SAAQT,EAAQkB,GAC5BE,EAAarC,EAAcgC,EAAQf,EAAQkB,EAAQrD,EAAW,GAAGc,KAAKL,MAAOT,EAAW,GAAGc,KAAKH,WAEpG,MAAM6C,GAASd,SAASW,EAAQlB,EAAQnC,EAAW,GAAGe,KAAKN,OAC3D,IAAIgD,GAAYb,SAAQT,EAAQqB,GAC5BE,EAAaxC,EAAcmC,EAAQlB,EAAQqB,EAAQxD,EAAW,GAAGe,KAAKN,MAAOT,EAAW,GAAGe,KAAKJ,WAGpG,MAAMgD,GAAYvB,SAAMR,EAAkBC,KAAO,EAAG,GACpD,IAAI+B,GAAclB,SAASiB,EAAWxB,EAAQnC,EAAW,GAAGI,KAAKK,MAAQ,EAAGT,EAAW,GAAGI,KAAKG,KAC/FqD,EAAYC,cAAgBpC,EAAgBmC,EAAYlC,GACxD,IAAIoC,GAAepB,SAASL,EAAQF,EAAQnC,EAAW,GAAGI,KAAKK,MAAQ,EAAGT,EAAW,GAAGI,KAAKG,KACzFwD,GAAiBnB,SAAQgB,EAAaE,GAC1CC,EAAeC,gBAAkB,KACjCD,EAAeE,YAAa,EAE5B,IAAIC,GAAcxB,SAASkB,EAAazB,EAAQnC,EAAW,GAAGI,KAAKK,MAAQ,EAAIT,EAAW,GAAGY,KAAKH,MAAQ,EAAGT,EAAW,GAAGY,KAAKL,KAChI2D,EAAYL,cAAgBpC,EAAgByC,EAAYxC,GACxD,IAAIyC,GAAezB,SAASD,EAAQN,EAAQnC,EAAW,GAAGY,KAAKH,MAAQ,EAAGT,EAAW,GAAGY,KAAKL,KACzF6D,GAAiBxB,SAAQsB,EAAaC,GAC1CC,EAAeJ,gBAAkB,KACjCI,EAAeH,YAAa,EAE5B,IAAII,GAAc3B,SAASwB,EAAa/B,EAAQnC,EAAW,GAAGY,KAAKH,MAAQ,EAAIT,EAAW,GAAGa,KAAKJ,MAAQ,EAAGT,EAAW,GAAGa,KAAKN,KAChI8D,EAAYR,cAAgBpC,EAAgB4C,EAAY3C,GACxD,IAAI4C,GAAe5B,SAASK,EAAQZ,EAAQnC,EAAW,GAAGa,KAAKJ,MAAQ,EAAGT,EAAW,GAAGa,KAAKN,KACzFgE,GAAiB3B,SAAQyB,EAAaC,GAC1CC,EAAeP,gBAAkB,KACjCO,EAAeN,YAAa,EAE5B,IAAIO,GAAc9B,SAAS2B,EAAalC,EAAQnC,EAAW,GAAGa,KAAKJ,MAAQ,EAAIT,EAAW,GAAGc,KAAKL,MAAQ,EAAGT,EAAW,GAAGc,KAAKP,KAChIiE,EAAYX,cAAgBpC,EAAgB+C,EAAY9C,GACxD,IAAI+C,GAAe/B,SAASQ,EAAQf,EAAQnC,EAAW,GAAGc,KAAKL,MAAQ,EAAGT,EAAW,GAAGc,KAAKP,KACzFmE,GAAiB9B,SAAQ4B,EAAaC,GAC1CC,EAAeV,gBAAkB,KACjCU,EAAeT,YAAa,EAE5B,IAAIU,GAAcjC,SAAS8B,EAAarC,EAAQnC,EAAW,GAAGc,KAAKL,MAAQ,EAAIT,EAAW,GAAGe,KAAKN,MAAQ,EAAGT,EAAW,GAAGe,KAAKR,KAChIoE,EAAYd,cAAgBpC,EAAgBkD,EAAYjD,GACxD,IAAIkD,GAAelC,SAASW,EAAQlB,EAAQnC,EAAW,GAAGe,KAAKN,MAAQ,EAAGT,EAAW,GAAGe,KAAKR,KACzFsE,GAAiBjC,SAAQ+B,EAAaC,GAC1CC,EAAeb,gBAAkB,KACjCa,EAAeZ,YAAa,EAG5B,IAAIa,EAAY,CACdxC,EACAK,EACAE,EACAG,EACAG,EACAG,EACAG,EACAX,EACAG,EACAG,EACAG,EACAG,GACAqB,SAAWnB,IACXmB,SAAWb,IACXa,SAAWV,IACXU,SAAWP,IACXO,SAAWJ,GACXZ,EACAK,EACAG,EACAG,EACAG,GAEEG,GAAWC,SACbrD,EACAkD,GAEF9E,EAAW,GAAGiB,IAAM+D,EAEpB,IAAIE,EAAU,GACVC,EAAkB,EAClBC,GAAuB,EAE3B,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrBH,EAAQI,KAAK,CACXC,OAAS,wFAC6DvF,EAAWqF,GAAGpF,yCACvFuF,SAAU,qEACVA,SAAU,qDACVxF,EAAWqF,GAAGpE,uBACdwE,SAASN,uCAAqDnF,EAAWqF,GAAGnF,mBAAmBF,EAAWqF,GAAGjF,KAAKC,iCAClHoF,SAASN,uCAAqDnF,EAAWqF,GAAGnF,mBAAmBF,EAAWqF,GAAGzE,KAAKP,iCAClHoF,SAASN,oBAAkCnF,EAAWqF,GAAGlF,cAAc,MAAMH,EAAWqF,GAAGrE,YAAYhB,EAAWqF,GAAGlF,cAAc,4BACxHH,EAAWqF,GAAGnF,mBAAmBF,EAAWqF,GAAGxE,KAAKR,qCAAqCL,EAAWqF,GAAGxE,KAAKL,KAAK,OAAOR,EAAWqF,GAAGxE,KAAKL,KAAK,wCACnJR,EAAWqF,GAAGlF,cAAc,WAAWH,EAAWqF,GAAGxE,KAAKR,qDAG/DqF,WAAa,gBAChBD,SAASL,cAAgCpF,EAAWqF,GAAGjF,KAAKC,uBAAuBsB,EAAkB3B,EAAWqF,GAAGjF,KAAKK,oCACxHkF,SAAgB,kCAAiC3F,EAAWqF,GAAGnF,mBAAmBF,EAAWqF,GAAGjF,KAAKC,kCAAkCL,EAAWqF,GAAGjF,KAAKI,KAAK,OAAOR,EAAWqF,GAAGjF,KAAKI,KAAK,wCAE9LiF,SAASL,cAAgCpF,EAAWqF,GAAGzE,KAAKP,uBAAuBsB,EAAkB3B,EAAWqF,GAAGzE,KAAKH,kCACxHkF,SAAgB,kCAAiC3F,EAAWqF,GAAGnF,mBAAmBF,EAAWqF,GAAGzE,KAAKP,kCAAkCL,EAAWqF,GAAGzE,KAAKJ,KAAK,OAAOR,EAAWqF,GAAGzE,KAAKJ,KAAK,6BAE9LiF,SAASL,4BAA8CpF,EAAWqF,GAAGxE,KAAKL,KAAK,OAAOR,EAAWqF,GAAGxE,KAAKL,KAAK,WAAWR,EAAWqF,GAAGrE,uCAC9HhB,EAAWqF,GAAGxE,KAAKL,KAAK,OAAOR,EAAWqF,GAAGxE,KAAKL,KAAK,cAAcR,EAAWqF,GAAGrE,sBAAsBhB,EAAWqF,GAAGxE,KAAKL,KAAK,aAAaR,EAAWqF,GAAGrE,aAAahB,EAAWqF,GAAGxE,KAAKL,KAAK,iBAAiBR,EAAWqF,GAAGxE,KAAKL,KAAK,cAAaE,SAAOV,EAAWqF,GAAGrE,SAAWhB,EAAWqF,GAAGxE,KAAKL,KAAK,cAAcR,EAAWqF,GAAGxE,KAAKL,KAAK,OAAOR,EAAWqF,GAAGxE,KAAKL,KAAK,iBAAiBR,EAAWqF,GAAGxE,KAAKL,KAAK,cAAaE,SAAOV,EAAWqF,GAAGrE,SAAWhB,EAAWqF,GAAGxE,KAAKL,KAAK,uBAAuBR,EAAWqF,GAAGxE,KAAKL,KAAK,iBAAiBR,EAAWqF,GAAGxE,KAAKL,KAAK,UAAUR,EAAWqF,GAAGxE,KAAKL,KAAK,cAAaE,SAAOV,EAAWqF,GAAGrE,SAAWhB,EAAWqF,GAAGxE,KAAKL,KAAK,UAASE,SAAOV,EAAWqF,GAAGrE,SAAWhB,EAAWqF,GAAGxE,KAAKL,KAAK,wBAC3uBmF,SAAgB,GAAE3F,EAAWqF,GAAGlF,cAAc,WAAWH,EAAWqF,GAAGxE,KAAKR,0BAAyBK,SAAOV,EAAWqF,GAAGrE,SAAWhB,EAAWqF,GAAGxE,KAAKL,KAAK,wBAK9J,OAAQnB,EAAqBI,IAC3B,KAAK,EACHF,EAAS,GAAE2F,EAAQ,GAAGK,SAClB/G,KAAKC,OACPc,GAAS,OACTA,GAAU,iCAAgC2F,EAAQ,GAAGQ,aACrDnG,GAAS,gBACTC,EAAY,IAEZA,EAAa,GAAE0F,EAAQ,GAAGQ,cAKY,IAAxClH,KAAKW,eAAeyG,QAAQrG,KAC9Bf,KAAKW,eAAemG,KAAK/F,GACzBf,KAAKY,iBAAiBkG,KAAK9F,GAC3BC,KAEFC,KAEFmG,SAAwBrH,S,6BCrTb,SAASD,IAEtBC,KAAKJ,MAAQ,GACbI,KAAKI,SAAW,GAChBJ,KAAKsH,mBAAqB,GAC1BtH,KAAKW,eAAiB,GACtBX,KAAKY,iBAAmB,GACxBZ,KAAKuH,aAAe,GACpBvH,KAAKwH,QAAU,GACfxH,KAAKyH,kBAAoB,GACzBzH,KAAKG,YAAc,GACnBH,KAAKK,OAAS,EACdL,KAAKM,WAAa,EAClBN,KAAKQ,QAAU,EACfR,KAAKS,YAAc,EACnBT,KAAK0H,QAAS,EAEd1H,KAAK2H,2BAA4B,EACjC3H,KAAK4H,uBAAwB,EAC7B5H,KAAK6H,6BAA8B,EACnC7H,KAAK8H,oBAAqB,EAC1B9H,KAAK+H,uBAAwB,EAC7B/H,KAAKgI,kBAAmB,EACxBhI,KAAKiI,sBAAuB,EAC5BjI,KAAKkI,mBAAoB,EACzBlI,KAAKmI,uBAAwB,EAC7BnI,KAAKoI,+BAAgC,EACrCpI,KAAKqI,qBAAsB,EAC3BrI,KAAKsI,MAAQ,GACbtI,KAAKuI,YAAa,EAClBvI,KAAKwI,gBAAkB,GAMvBxI,KAAKyI,mBAAoB,EACzBzI,KAAK0I,YAAa,EAClB1I,KAAK2I,uBAAwB,EAC7B3I,KAAK4I,KAAM,EACX5I,KAAK6I,eAAgB,EACrB7I,KAAK8I,SAAU,EACf9I,KAAK+I,eAAiB,GACtB/I,KAAKgJ,sBAAwB,GAC7BhJ,KAAKiJ,cAAe,EACpBjJ,KAAKU,gBAAkB,SAAUwI,KACjClJ,KAAKmJ,cAAgB,G","file":"js/5922.769498938cdc4c01e96c.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,shuffle,combinaisonListesSansChangerOrdre,calcul,texteEnCouleur,texteGras,numAlpha} from '../../modules/outils.js'\nimport {point,labelPoint,segment,cercleCentrePoint,rotation,codageAngleDroit,codeAngle,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Résoudre un problème en utilisant des fractions'\n\n/** \n * * résoudre un problème additif de fractions niv 5e\n * * 5N20-0\n * @author Sébastien Lozano\n */\nexport default function Problemes_additifs_fractions_5e () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.debug = false\n  this.sup = 1\n  this.nbQuestions=1\n\n  this.titre = titre;\n  this.consigne = 'Calculatrice autorisée.';\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  //this.nbQuestionsModifiable = false;\n  context.isHtml ? this.spacing = 1 : this.spacing = 1\n  context.isHtml ? this.spacingCorr = 1 : this.spacingCorr = 1\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    if (this.debug) {\n      typesDeQuestionsDisponibles = [0]\n    } else {\n      // typesDeQuestionsDisponibles = shuffle([choice([1,3]),choice([2,4]),0]);\n      typesDeQuestionsDisponibles = [0]\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\t\t\n\n    //let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // on définit les fractions pour les vols et les arguments pour le graphique\n      let frac_vols = [\n        [1, 12, [1.8, ' ', 'black', 2, 1, 'red', 0.4]],\n        [1, 12, [1.8, ' ', 'black', 2, 1, 'red', 0.4]],\n        [1, 12, [1.8, ' ', 'black', 2, 1, 'red', 0.4]],\n        [1, 4, [1.8, ' ', 'black', 2, 1, 'blue', 0.4]],\n        [1, 2, [1.8, ' ', 'black', 2, 1, 'green', 0.4]]\n      ]\n      // on mélange pour l'aléatoire tant que les deux premieres fractions sont égales\n      do {\n        frac_vols = shuffle(frac_vols)\n      } while (frac_vols[0][1] == frac_vols[1][1])\n\n\n      // let q1a = randint(1,5); // indice pour faire varier la 1ere question sur la destination\n      // let q1b = randint(1,5,[q1a]); // indice pour faire varier la 2eme question sur la destination\n      let nb_vols_total\n      let destinations_vols = [['l\\'', 'Afrique'], ['l\\'', 'Asie'], ['l\\'', 'Amerique'], ['l\\'', 'Europe'], ['la', ' France']]\n      destinations_vols = shuffle(destinations_vols)\n      do {\n        nb_vols_total = randint(200, 600)\n      } while (nb_vols_total % 2 != 0 || nb_vols_total % 3 != 0 || nb_vols_total % 4 != 0)\n\n      // pour les situations\n      const situations = [\n        { // case 0 --> vols\n          fin_enonce_situation: 'vols d\\'une compagnie aérienne selon la destination',\n          nom_enonce: 'vols',\n          last_question: ['cette compagnie a affrété', 'vols', 'le nombre de vols', 'Le nombre de vols'],\n          cat1: {\n            destination: destinations_vols[0][0] + destinations_vols[0][1],\n            article: destinations_vols[0][0],\n            nom: destinations_vols[0][1],\n            frac: frac_vols[0],\n            angle: calcul(360 / frac_vols[0][1]),\n            arg_graph: frac_vols[0][2]\n          },\n          cat2: {\n            destination: destinations_vols[1][0] + destinations_vols[1][1],\n            article: destinations_vols[1][0],\n            nom: destinations_vols[1][1],\n            frac: frac_vols[1],\n            angle: calcul(360 / frac_vols[1][1]),\n            arg_graph: frac_vols[1][2]\n          },\n          cat3: {\n            destination: destinations_vols[2][0] + destinations_vols[2][1],\n            article: destinations_vols[2][0],\n            nom: destinations_vols[2][1],\n            frac: frac_vols[2],\n            angle: calcul(360 / frac_vols[2][1]),\n            arg_graph: frac_vols[2][2]\n          },\n          cat4: {\n            destination: destinations_vols[3][0] + destinations_vols[3][1],\n            article: destinations_vols[3][0],\n            nom: destinations_vols[3][1],\n            frac: frac_vols[3],\n            angle: calcul(360 / frac_vols[3][1]),\n            arg_graph: frac_vols[3][2]\n          },\n          cat5: {\n            destination: destinations_vols[4][0] + destinations_vols[4][1],\n            article: destinations_vols[4][0],\n            nom: destinations_vols[4][1],\n            frac: frac_vols[4],\n            angle: calcul(360 / frac_vols[4][1]),\n            arg_graph: frac_vols[4][2]\n          },\n          // q1a:q1a,\n          // q1b:q1b,\n          nb_total: nb_vols_total,\n          fig: ''\n        },\n        {// case 1 --> courses\n        },\n        {// case 2 --> activités sportives\n        },\n        {// case 3 -->\n        },\n        {// case 4 -->\n        }\n      ]\n      // une fonction pour gérer le codage des angles\n      function myCodageAngle (A, O, B, angle, [...args]) {\n        if (angle == 90) {\n          return codageAngleDroit(A, O, B)\n        } else {\n          return codeAngle(A, O, angle, ...args)\n        };\n      };\n\n      // une fonction pour gérer l'affichage correct de la légende\n      // param est l'ordonnée du point qui sert à la mediatrice !\n      ;\n\n      // une fonction pour positionner le label\n      // y est l'ordonnée du point\n      function myLabelPosition (y) {\n        if (y < 0) {\n          return 'below'\n        } else {\n          return 'above'\n        };\n      };\n\n      // une fonction pour gérer le texte en fonction de l'angle\n      function myTexte_vols_corr (angle) {\n        switch (angle) {\n          case 90:\n            return `du secteur est un angle droit, il mesure $${angle}\\\\degree$ sur les $360\\\\degree$ d'un tour complet, donc il représente $\\\\dfrac{${angle}}{360}$ du disque soit $\\\\dfrac{1}{4}$.`\n          case 30:\n            return `rouge apparaît 3 fois, l'angle vert vaut $180\\\\degree$ et il y a un angle droit.<br>\n\t\t\t\t\t\t\tL'angle pour un tour complet vaut $360\\\\degree$, donc l'angle rouge vaut $(360-180-90)\\\\div 3 = ${angle}\\\\degree$.<br>\n\t\t\t\t\t\t\tL'angle rouge mesure $${angle}\\\\degree$ sur les $360\\\\degree$ d'un tour complet, donc il représente $\\\\dfrac{${angle}}{360}$ du disque soit $\\\\dfrac{1}{12}$.\n\t\t\t\t\t\t\t`\n          case 180:\n            return `du secteur est un angle plat, il mesure $${angle}\\\\degree$ sur les $360\\\\degree$ d'un tour complet, donc il représente $\\\\dfrac{${angle}}{360}$ du disque soit $\\\\dfrac{1}{2}$.`\n\n        }\n      };\n\n      // on prépare la fenetre mathalea2d\n      const fenetreMathalea2D = { xmin: -10, ymin: -8, xmax: 10, ymax: 8, pixelsParCm: 20, scale: 0.5 }\n      const O_vols = point(0, 0)\n      let A_vols = point(fenetreMathalea2D.xmin + 6, 0)\n      let c_vols = cercleCentrePoint(O_vols, A_vols, 'blue')\n      c_vols.epaisseur = 2\n      // on trace les quartiers\n      //cat1\n      let B_vols = rotation(A_vols, O_vols, situations[0].cat1.angle)\n      let s_OA_vols = segment(O_vols, A_vols)\n      let s_OB_vols = segment(O_vols, B_vols)\n      let codage_AOB = myCodageAngle(A_vols, O_vols, B_vols, situations[0].cat1.angle, situations[0].cat1.arg_graph)\n      // cat2\n      const C_vols = rotation(B_vols, O_vols, situations[0].cat2.angle)\n      let s_OC_vols = segment(O_vols, C_vols)\n      let codage_BOC = myCodageAngle(B_vols, O_vols, C_vols, situations[0].cat2.angle, situations[0].cat2.arg_graph)\n      // cat3\n      const D_vols = rotation(C_vols, O_vols, situations[0].cat3.angle)\n      let s_OD_vols = segment(O_vols, D_vols)\n      let codage_COD = myCodageAngle(C_vols, O_vols, D_vols, situations[0].cat3.angle, situations[0].cat3.arg_graph)\n      // cat4\n      const E_vols = rotation(D_vols, O_vols, situations[0].cat4.angle)\n      let s_OE_vols = segment(O_vols, E_vols)\n      let codage_DOE = myCodageAngle(D_vols, O_vols, E_vols, situations[0].cat4.angle, situations[0].cat4.arg_graph)\n      // cat5\n      const F_vols = rotation(E_vols, O_vols, situations[0].cat5.angle)\n      let s_OF_vols = segment(O_vols, F_vols)\n      let codage_EOF = myCodageAngle(E_vols, O_vols, F_vols, situations[0].cat5.angle, situations[0].cat5.arg_graph)\n\n      // légende\n      const A_legende = point(fenetreMathalea2D.xmin + 4, 0)\n      let L_vols_cat1 = rotation(A_legende, O_vols, situations[0].cat1.angle / 2, situations[0].cat1.nom)\n      L_vols_cat1.positionLabel = myLabelPosition(L_vols_cat1.y)\n      let LL_vols_cat1 = rotation(A_vols, O_vols, situations[0].cat1.angle / 2, situations[0].cat1.nom)\n      let s_legende_cat1 = segment(L_vols_cat1, LL_vols_cat1)\n      s_legende_cat1.styleExtremites = '->'\n      s_legende_cat1.pointilles = true\n\n      let L_vols_cat2 = rotation(L_vols_cat1, O_vols, situations[0].cat1.angle / 2 + situations[0].cat2.angle / 2, situations[0].cat2.nom)\n      L_vols_cat2.positionLabel = myLabelPosition(L_vols_cat2.y)\n      let LL_vols_cat2 = rotation(B_vols, O_vols, situations[0].cat2.angle / 2, situations[0].cat2.nom)\n      let s_legende_cat2 = segment(L_vols_cat2, LL_vols_cat2)\n      s_legende_cat2.styleExtremites = '->'\n      s_legende_cat2.pointilles = true\n\n      let L_vols_cat3 = rotation(L_vols_cat2, O_vols, situations[0].cat2.angle / 2 + situations[0].cat3.angle / 2, situations[0].cat3.nom)\n      L_vols_cat3.positionLabel = myLabelPosition(L_vols_cat3.y)\n      let LL_vols_cat3 = rotation(C_vols, O_vols, situations[0].cat3.angle / 2, situations[0].cat3.nom)\n      let s_legende_cat3 = segment(L_vols_cat3, LL_vols_cat3)\n      s_legende_cat3.styleExtremites = '->'\n      s_legende_cat3.pointilles = true\n\n      let L_vols_cat4 = rotation(L_vols_cat3, O_vols, situations[0].cat3.angle / 2 + situations[0].cat4.angle / 2, situations[0].cat4.nom)\n      L_vols_cat4.positionLabel = myLabelPosition(L_vols_cat4.y)\n      let LL_vols_cat4 = rotation(D_vols, O_vols, situations[0].cat4.angle / 2, situations[0].cat4.nom)\n      let s_legende_cat4 = segment(L_vols_cat4, LL_vols_cat4)\n      s_legende_cat4.styleExtremites = '->'\n      s_legende_cat4.pointilles = true\n\n      let L_vols_cat5 = rotation(L_vols_cat4, O_vols, situations[0].cat4.angle / 2 + situations[0].cat5.angle / 2, situations[0].cat5.nom)\n      L_vols_cat5.positionLabel = myLabelPosition(L_vols_cat5.y)\n      let LL_vols_cat5 = rotation(E_vols, O_vols, situations[0].cat5.angle / 2, situations[0].cat5.nom)\n      let s_legende_cat5 = segment(L_vols_cat5, LL_vols_cat5)\n      s_legende_cat5.styleExtremites = '->'\n      s_legende_cat5.pointilles = true\n\n\n      let mesAppels = [\n        c_vols,\n        s_OA_vols,\n        s_OB_vols,\n        s_OC_vols,\n        s_OD_vols,\n        s_OE_vols,\n        s_OF_vols,\n        codage_AOB,\n        codage_BOC,\n        codage_COD,\n        codage_DOE,\n        codage_EOF,\n        labelPoint(L_vols_cat1),\n        labelPoint(L_vols_cat2),\n        labelPoint(L_vols_cat3),\n        labelPoint(L_vols_cat4),\n        labelPoint(L_vols_cat5),\n        s_legende_cat1,\n        s_legende_cat2,\n        s_legende_cat3,\n        s_legende_cat4,\n        s_legende_cat5\n      ]\n      let fig_vols = mathalea2d(\n        fenetreMathalea2D,\n        mesAppels\n      )\n      situations[0].fig = fig_vols\n\n      let enonces = []\n      let i_sous_question = 0\n      let i_sous_question_corr = 0\n\n      for (let k = 0; k < 1; k++) {\n        enonces.push({\n          enonce: `\n\t\t\t\t\tOn a représenté sur le diagramme circulaire ci-contre la répartition des ${situations[k].fin_enonce_situation}.<br>\n\t\t\t\t\t${texteGras('Les angles de même couleur ont la même mesure.')}<br>\n\t\t\t\t\t${texteGras('L\\'angle vert est un angle plat.')}<br>\n\t\t\t\t\t${situations[k].fig}<br>\n\t\t\t\t\t${numAlpha(i_sous_question++)} Quelle fraction représente les ${situations[k].nom_enonce} vers ${situations[k].cat1.destination} ?<br>\n\t\t\t\t\t${numAlpha(i_sous_question++)} Quelle fraction représente les ${situations[k].nom_enonce} vers ${situations[k].cat2.destination} ?<br>\n\t\t\t\t\t${numAlpha(i_sous_question++)} Sachant que ${situations[k].last_question[0]} ${situations[k].nb_total} ${situations[k].last_question[1]}\n\t\t\t\t\tet que les ${situations[k].nom_enonce} vers ${situations[k].cat3.destination} représentent $\\\\dfrac{${situations[k].cat3.frac[0]}}{${situations[k].cat3.frac[1]}}$ de ce total,\n\t\t\t\t\tcaluler ${situations[k].last_question[2]} vers ${situations[k].cat3.destination}?\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t`,\n          correction: `\n\t\t\t\t\t${numAlpha(i_sous_question_corr++)} Pour ${situations[k].cat1.destination} l'angle ${myTexte_vols_corr(situations[k].cat1.angle)}<br>\t\t\t\t\t\n\t\t\t\t\t${texteEnCouleur(`La fraction qui représente les ${situations[k].nom_enonce} vers ${situations[k].cat1.destination} vaut donc $\\\\dfrac{${situations[k].cat1.frac[0]}}{${situations[k].cat1.frac[1]}}$`)}.<br>\n\t\t\t\t\t\n\t\t\t\t\t${numAlpha(i_sous_question_corr++)} Pour ${situations[k].cat2.destination} l'angle ${myTexte_vols_corr(situations[k].cat2.angle)}<br>\t\t\t\t\n\t\t\t\t\t${texteEnCouleur(`La fraction qui représente les ${situations[k].nom_enonce} vers ${situations[k].cat2.destination} vaut donc $\\\\dfrac{${situations[k].cat2.frac[0]}}{${situations[k].cat2.frac[1]}}$`)}<br>\n\n\t\t\t\t\t${numAlpha(i_sous_question_corr++)} Calculons $\\\\dfrac{${situations[k].cat3.frac[0]}}{${situations[k].cat3.frac[1]}}$ de ${situations[k].nb_total} :<br> \n\t\t\t\t\t$\\\\dfrac{${situations[k].cat3.frac[0]}}{${situations[k].cat3.frac[1]}}\\\\times ${situations[k].nb_total} = \\\\dfrac{${situations[k].cat3.frac[0]}\\\\times ${situations[k].nb_total}}{${situations[k].cat3.frac[1]}} = \\\\dfrac{${situations[k].cat3.frac[0]}\\\\times ${calcul(situations[k].nb_total / situations[k].cat3.frac[1])}\\\\times ${situations[k].cat3.frac[1]}}{${situations[k].cat3.frac[1]}} = \\\\dfrac{${situations[k].cat3.frac[0]}\\\\times ${calcul(situations[k].nb_total / situations[k].cat3.frac[1])}\\\\times \\\\cancel{${situations[k].cat3.frac[1]}}}{\\\\cancel{${situations[k].cat3.frac[1]}}} = ${situations[k].cat3.frac[0]}\\\\times ${calcul(situations[k].nb_total / situations[k].cat3.frac[1])} = ${calcul(situations[k].nb_total / situations[k].cat3.frac[1])}$<br>\n\t\t\t\t\t${texteEnCouleur(`${situations[k].last_question[3]} vers ${situations[k].cat3.destination} vaut donc ${calcul(situations[k].nb_total / situations[k].cat3.frac[1])}.`)}\n\t\t\t\t\t`\n        })\n      };\n\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.debug) {\n            texte += '<br>';\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = '';\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  // this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\n};\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}