/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_3e_3G12_js"],{

/***/ "./src/js/exercices/3e/3G12.js":
/*!*************************************!*\
  !*** ./src/js/exercices/3e/3G12.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Pavage_et_rotation2d)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\nconst titre = 'Trouver l’image d’une figure par une rotation dans un pavage'\n\n/**\n * Publié le 16/12/2020\n * @Auteur Jean-Claude Lhote\n * Trouver l'image par sune rotation d'une figure dans un pavage\n * Ref 3G12\n */\nfunction Pavage_et_rotation2d() {\n\t\"use strict\";\n\t_ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.consigne = \"\";\n\tthis.nb_questions = 3;\n\tthis.nb_questions_modifiable = true;\n\tthis.correction_detaillee_disponible = true;\n\tthis.correction_detaillee = true;\n\tthis.nb_cols = 1;\n\tthis.nb_cols_corr = 1;\n\tthis.sup = 1; // 1 pour des pavages modestes, 2 pour des plus grand.\n\tthis.sup2 = false; // On cache les barycentres par défaut.\n\tthis.sup3 = 7;\n\tsortie_html ? (this.spacing_corr = 2.5) : (this.spacing_corr = 1.5);\n\tthis.nouvelle_version = function () {\n\t\tlet videcouples = function (tableau) {\n\t\t\tfor (let k = 0; k < tableau.length; k++) {\n\t\t\t\tif (tableau[k][0] == tableau[k][1]) {\n\t\t\t\t\ttableau.splice(k, 1);\n\t\t\t\t}\n\t\t\t\tfor (let j = k + 1; j < tableau.length; j++) {\n\t\t\t\t\tif (tableau[k][1] == tableau[j][0]) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tableau;\n\t\t};\n\t\tlet compare2polys = function (poly1, poly2) {\n\t\t\tif (comparenbsommets(poly1, poly2)) {\n\t\t\t\tif (comparesommets(poly1, poly2))\n\t\t\t\t\treturn true;\n\n\t\t\t\telse\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\telse\n\t\t\t\treturn false;\n\t\t};\n\t\tlet comparenbsommets = function (poly1, poly2) {\n\t\t\tif (poly1.listePoints.length == poly2.listePoints.length) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn false;\n\t\t};\n\n\t\tlet compare2sommets = function (sommet1, sommet2) {\n\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.egal)(sommet1.x, sommet2.x, 0.1) && (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.egal)(sommet1.y, sommet2.y, 0.1)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn false;\n\t\t};\n\t\tlet comparesommets = function (poly1, poly2) {\n\t\t\tlet trouve = false, trouves = 0;\n\t\t\tif (comparenbsommets(poly1, poly2))\n\t\t\t\tfor (let P of poly1.listePoints) {\n\t\t\t\t\tfor (let M of poly2.listePoints) {\n\t\t\t\t\t\tif (compare2sommets(M, P)) {\n\t\t\t\t\t\t\ttrouve = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (trouve)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (trouve) {\n\t\t\t\t\t\ttrouves++;\n\t\t\t\t\t\ttrouve = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttrouves -= 100;\n\t\t\t\t\t}\n\t\t\t\t\tif (trouves < 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif (trouves == poly1.listePoints.length)\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t};\n\n\t\tlet rotaccion = function (pavage, A, angle, numero) {\n\t\t\tlet poly = pavage.polygones[numero - 1];\n\t\t\tlet pol;\n\t\t\tlet result = -1;\n\t\t\tlet sympoly = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(poly, A, angle);\n\t\t\tfor (let k = 0; k < pavage.polygones.length; k++) {\n\t\t\t\tpol = pavage.polygones[k];\n\t\t\t\tif (compare2polys(sympoly, pol)) {\n\t\t\t\t\treturn k + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\n\t\tlet objets = [], objets_correction = [];\n\t\tlet taillePavage = parseInt(this.sup);\n\t\tif (taillePavage < 1 || taillePavage > 2) {\n\t\t\ttaillePavage = 1;\n\t\t}\n\t\tif (this.nb_questions > 5) {\n\t\t\ttaillePavage = 2;\n\t\t}\n\t\tthis.liste_corrections = [];\n\t\tthis.liste_questions = [];\n\t\tlet Nx, Ny, index1, A, image, couples = [], tailles = [], monpavage, fenetre;\n\t\tlet texte = \"\", texte_corr = \"\", type_de_pavage = parseInt(this.sup);\n\t\tlet nombreTentatives, nombrePavageTestes = 1;\n\t\tlet sensdirect, M, N, trace, label, P1, P2, P3, t;\n\t\tlet alphas = [[60, 120, 180], [90, 180], [60, 120, 180], [60, 120, 180, 90], [45, 90, 135, 180], [60, 120, 180], [60, 120, 180]], alpha;\n\t\tif (this.sup3 == 8) {\n\t\t\ttype_de_pavage = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 7);\n\t\t}\n\t\telse {\n\t\t\ttype_de_pavage = parseInt(this.sup3);\n\t\t}\n\t\twhile (couples.length < this.nb_questions && nombrePavageTestes < 6) {\n\t\t\tnombreTentatives = 0;\n\t\t\tmonpavage = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pavage)(); // On crée l'objet Pavage qui va s'appeler monpavage\n\t\t\ttailles = [[[3, 2], [3, 2], [2, 2], [2, 2], [2, 2], [2, 2], [3, 2]], [[4, 3], [4, 3], [3, 3], [3, 3], [3, 3], [3, 2], [5, 3]]];\n\n\t\t\tNx = tailles[taillePavage - 1][type_de_pavage - 1][0];\n\t\t\tNy = tailles[taillePavage - 1][type_de_pavage - 1][1];\n\t\t\tmonpavage.construit(type_de_pavage, Nx, Ny, 3); // On initialise toutes les propriétés de l'objet.\n\t\t\tfenetre = monpavage.fenetre;\n\t\t\t// fenetreMathalea2d = [fenetre.xmin, fenetre.ymin, fenetre.xmax, fenetre.ymax];\n\t\t\twhile (couples.length < this.nb_questions + 2 && nombreTentatives < 3) { // On cherche d pour avoir suffisamment de couples\n\t\t\t\tcouples = []; // On vide la liste des couples pour une nouvelle recherche\n\n\t\t\t\tindex1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(Math.floor(monpavage.nb_polygones / 3), Math.ceil(monpavage.nb_polygones * 2 / 3)); // On choisit 1 point dans un des polygones\n\t\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([true, false])) {\n\t\t\t\t\tA = monpavage.polygones[index1].listePoints[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, monpavage.polygones[index1].listePoints.length - 1)]; // On choisit un sommet\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tA = monpavage.barycentres[index1]; // Ou on choisit un barycentre\n\t\t\t\t}\n\t\t\t\twhile (A.x - 5 < fenetre.xmin || A.x + 5 > fenetre.xmax || A.y - 5 < fenetre.ymin || A.y + 5 > fenetre.ymax) {\n\t\t\t\t\tindex1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(Math.floor(monpavage.nb_polygones / 3), Math.ceil(monpavage.nb_polygones * 2 / 3)); // On choisit 1 point dans un des polygones\n\t\t\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([true, false])) {\n\t\t\t\t\t\tA = monpavage.polygones[index1].listePoints[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, monpavage.polygones[index1].listePoints.length - 1)]; // On choisit un sommet\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tA = monpavage.barycentres[index1]; // Ou on choisit un barycentre\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tA.nom = 'A';\n\t\t\t\tA.positionLabel = 'above left';\n\t\t\t\ttrace = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A); // la trace du centre de symétrie sera rouge et grosse\n\t\t\t\tlabel = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A);\n\t\t\t\ttrace.epaisseur = 3;\n\t\t\t\ttrace.taille = 4;\n\t\t\t\ttrace.color = 'red';\n\t\t\t\talpha = alphas[type_de_pavage - 1][(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, alphas[type_de_pavage - 1].length - 1)];\n\t\t\t\tsensdirect = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([1, -1]);\n\t\t\t\tfor (let i = 1; i <= monpavage.nb_polygones; i++) { //on crée une liste des couples (antécédents, images)\n\t\t\t\t\timage = rotaccion(monpavage, A, alpha * sensdirect, i);\n\t\t\t\t\tif (image != -1) { // si l'image du polygone i existe, on ajoute le couple à la liste\n\t\t\t\t\t\tcouples.push([i, image]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcouples = videcouples(couples); //supprime tous les couples en double (x,y)=(y,x)\n\t\t\t\tnombreTentatives++;\n\t\t\t}\n\t\t\tif (couples.length < this.nb_questions) {\n\t\t\t\tif (this.sup3 == 7) {\n\t\t\t\t\ttype_de_pavage = (type_de_pavage + 1) % 5 + 1;\n\t\t\t\t}\n\t\t\t\tnombrePavageTestes++;\n\t\t\t}\n\t\t}\n\t\tif (couples.length < this.nb_questions) {\n\t\t\tconsole.log('trop de questions, augmentez la taille du pavage');\n\t\t\treturn;\n\t\t}\n\n\t\tobjets.push(trace); // le centre est OK on pousse sa trace\n\t\tobjets.push(label); // et son label\n\t\tcouples = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)(couples); // on mélange les couples\n\t\tfor (let i = 0; i < monpavage.nb_polygones; i++) {\n\t\t\tobjets.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(i + 1), monpavage.barycentres[i].x + 0.5, monpavage.barycentres[i].y, 'milieu', 'gray', 1, 0, true));\n\t\t}\n\t\tif (this.sup2) { // Doit-on montrer les centres des figures ?\n\t\t\tfor (let i = 0; i < monpavage.nb_polygones; i++) {\n\t\t\t\tobjets.push(monpavage.tracesCentres[i]);\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < monpavage.nb_polygones; i++) { // il faut afficher tous les polygones du pavage\n\t\t\tobjets.push(monpavage.polygones[i]);\n\t\t}\n\t\ttexte = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(fenetre, objets); // monpavage.fenetre est calibrée pour faire entrer le pavage dans une feuille A4\n\t\ttexte += `<br>Dans la rotation de centre $A$ et d\\'angle ${alpha}° dans le sens `;\n\t\tif (sensdirect == 1) {\n\t\t\ttexte += `inverse des aiguilles d'une montre.<br>`;\n\t\t}\n\t\telse {\n\t\t\ttexte += `des aiguilles d'une montre.<br>`;\n\t\t}\n\t\ttexte_corr += `Dans la rotation de centre $A$ et d\\'angle ${alpha}° dans le sens `;\n\t\tif (sensdirect == 1) {\n\t\t\ttexte_corr += `inverse des aiguilles d'une montre, <br>`;\n\t\t}\n\t\telse {\n\t\t\ttexte_corr += `des aiguilles d'une montre, <br>`;\n\t\t}\n\t\tfor (let i = 0; i < this.nb_questions; i++) {\n\t\t\ttexte += `Quel est l'image de la figure $${couples[i][0]}$ ?<br>`;\n\t\t\ttexte_corr += `- l'image de la figure $${couples[i][0]}$ est la figure ${couples[i][1]}.<br>`;\n\n\t\t\tif (this.correction_detaillee) {\n\t\t\t\tt = this.nb_questions * 3;\n\t\t\t\tM = monpavage.barycentres[couples[i][0] - 1];\n\t\t\t\tN = monpavage.barycentres[couples[i][1] - 1];\n\t\t\t\tP1 = monpavage.polygones[couples[i][0] - 1];\n\t\t\t\tP1.color = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i);\n\t\t\t\tP1.couleurDeRemplissage = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i);\n\t\t\t\tP1.opaciteDeRemplissage = 0.5;\n\t\t\t\tP1.epaisseur = 2;\n\t\t\t\tP2 = monpavage.polygones[couples[i][1] - 1];\n\t\t\t\tP2.color = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i);\n\t\t\t\tP2.couleurDeRemplissage = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i);\n\t\t\t\tP2.opaciteDeRemplissage = 0.5;\n\t\t\t\tP2.epaisseur = 2;\n\t\t\t\tP3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotationAnimee)(P1, A, alpha * sensdirect, `begin=\"${i * 3}s;${i * 3 + t}s;${i * 3 + t * 2}s\" end=\"${i * 3 + 2}s;${i * 3 + t + 2}s;${i * 3 + t * 2 + 2}s\" dur=\"2s\" repeatCount=\"indefinite\" repeatDur=\"${9 * this.nb_questions}s\" id=\"poly-${i}-anim\"`);\n\t\t\t\tP3.color = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i);\n\t\t\t\tP3.epaisseur = 2;\n\t\t\t\tobjets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(M, N), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(A, M, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i)), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(A, N, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arcenciel)(i)), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(M, A, N, 0.8, '', (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arcenciel)(i), 1, 1, 'blue', 0.2, true), P1, P2, P3);\n\n\t\t\t}\n\t\t}\n\t\tif (this.correction_detaillee) {\n\t\t\ttexte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(fenetre, objets, objets_correction);\n\t\t}\n\t\tthis.liste_questions.push(texte);\n\t\tthis.liste_corrections.push(texte_corr);\n\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\t};\n\tthis.besoin_formulaire_numerique = ['Taille du pavage (la grande est automatique au-delà de 5 questions)', 2, '1 : Taille modeste\\n 2 : Grande taille'];\n\tthis.besoin_formulaire2_case_a_cocher = [\"Montrer les centres\"];\n\tthis.besoin_formulaire3_numerique = ['Choix du pavage', 8, '1 : Pavage de triangles équilatéraux\\n2 : Pavage de carrés\\n3 : Pavage d\\'hexagones réguliers\\n4 : Pavage 3².4.3.4\\n5 : Pavage 8².4\\n 6 : Pavage de losanges (hexagonal d\\'écolier)\\n7 : Pavage 6.3.6.3\\n8 : Un des sept pavages au hasard'];\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/3e/3G12.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);