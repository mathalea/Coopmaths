{"version":3,"file":"js/38698.9c0af15986dc4eac5a6f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F12-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif, texFractionReduite, lettreMinusculeDepuisChiffre } from '../../modules/outils.js'\nimport { setReponse, ajouteChampTexteMathLive } from '../../modules/gestionInteractif.js'\nimport { fraction } from '../../modules/fractions.js'\n\nexport const titre = 'Déterminer l’image d’un nombre par une fonction d’après sa forme algébrique'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n* Déterminer l'image d'un nombre par une fonction d'après sa forme algébrique\n*\n* * Niveau 1 : Fonctions affines\n* * Niveau 2 : Polynôme du second degré\n* * Niveau 3 : Quotients de fonctions affines\n* * Niveau 4 : (ax+b)(cx+d)\n* * Niveau 5 : Mélange\n* @author Rémi Angot\n* 3F12-2\n*/\nexport default function ImageFonctionAlgebrique () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = ''\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 5 // niveau de difficulté\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typesDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = ['ax+b', 'ax-b', '-ax+b', '-ax-b']\n    }\n    if (this.sup === 2) {\n      typesDeQuestionsDisponibles = ['ax2+bx+c', 'ax2+c', 'ax2+bx', '-ax2+bx-c', '-ax2-bx-c', '-ax2-bx+c', '-ax2-bx']\n    }\n    if (this.sup === 3) {\n      typesDeQuestionsDisponibles = ['a/cx+d', 'ax+b/cx+d']\n    }\n    if (this.sup === 4) {\n      typesDeQuestionsDisponibles = ['(ax+b)(cx+d)', '(ax+b)2']\n    }\n    if (this.sup === 5) {\n      typesDeQuestionsDisponibles = ['ax+b', 'ax-b', '-ax+b', 'ax2+bx+c', '-ax2+bx-c', '-ax2-bx', 'a/cx+d', 'ax+b/cx+d', '(ax+b)(cx+d)', '(ax+b)2']\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const signesDeX = combinaisonListes([true, false], this.nbQuestions)\n    for (let i = 0, texte, texteCorr, a, b, c, d, expression, nomdef, x, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      x = randint(1, 12)\n      if (signesDeX[i]) {\n        x = -1 * x\n      }\n      a = randint(2, 11)\n      b = randint(2, 11)\n      c = randint(2, 11)\n      nomdef = lettreMinusculeDepuisChiffre(6 + i) // on commence par f puis on continue dans l'ordre alphabétique\n      switch (listeTypeDeQuestions[i]) {\n        case 'ax+b':\n          expression = `${a}x+${b}`\n          texteCorr = `$${nomdef}(${x})=${a}\\\\times ${ecritureParentheseSiNegatif(x)}+${b}=${a * x}+${b}=${a * x + b}$`\n          setReponse(this, i, a * x + b)\n          break\n        case 'ax-b':\n          expression = `${a}x-${b}`\n          texteCorr = `$${nomdef}(${x})=${a}\\\\times ${ecritureParentheseSiNegatif(x)}-${b}=${a * x}-${b}=${a * x - b}$`\n          setReponse(this, i, a * x - b)\n          break\n        case '-ax+b':\n          expression = `-${a}x+${b}`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}+${b}=${-1 * a * x}+${b}=${-1 * a * x + b}$`\n          setReponse(this, i, -1 * a * x + b)\n          break\n        case '-ax-b':\n          expression = `-${a}x-${b}`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}-${b}=${-1 * a * x}-${b}=${-1 * a * x - b}$`\n          setReponse(this, i, -1 * a * x - b)\n          break\n        case 'ax2+bx+c':\n          expression = `${a}x^2+${b}x+${c}`\n          texteCorr = `$${nomdef}(${x})=${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2+${b}\\\\times ${ecritureParentheseSiNegatif(x)}+${c}=${a}\\\\times${x * x}${ecritureAlgebrique(b * x)}+${c}=${a * x * x}${ecritureAlgebrique(b * x)}+${c}=${a * x * x + b * x + c}$`\n          setReponse(this, i, a * x * x + b * x + c)\n          break\n        case 'ax2+c':\n          expression = `${a}x^2+${c}`\n          texteCorr = `$${nomdef}(${x})=${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2+${c}=${a}\\\\times${x * x}+${c}=${a * x * x}+${c}=${a * x * x + c}$`\n          setReponse(this, i, a * x * x + c)\n          break\n        case 'ax2+bx':\n          expression = `${a}x^2+${b}x`\n          texteCorr = `$${nomdef}(${x})=${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2+${b}\\\\times ${ecritureParentheseSiNegatif(x)}=${a}\\\\times${x * x}${ecritureAlgebrique(b * x)}=${a * x * x}${ecritureAlgebrique(b * x)}=${a * x * x + b * x}$`\n          setReponse(this, i, a * x * x + b * x)\n          break\n        case '-ax2+bx-c':\n          expression = `-${a}x^2+${b}x-${c}`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2+${b}\\\\times ${ecritureParentheseSiNegatif(x)}-${c}=-${a}\\\\times${x * x}${ecritureAlgebrique(b * x)}-${c}=${-1 * a * x * x}${ecritureAlgebrique(b * x)}-${c}=${-1 * a * x * x + b * x - c}$`\n          setReponse(this, i, -1 * a * x * x + b * x - c)\n          break\n        case '-ax2-bx-c':\n          expression = `-${a}x^2-${b}x-${c}`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2-${b}\\\\times ${ecritureParentheseSiNegatif(x)}-${c}=-${a}\\\\times${x * x}${ecritureAlgebrique(-1 * b * x)}-${c}=${-1 * a * x * x}${ecritureAlgebrique(-1 * b * x)}-${c}=${-1 * a * x * x - b * x - c}$`\n          setReponse(this, i, -1 * a * x * x - b * x - c)\n          break\n        case '-ax2-bx+c':\n          expression = `-${a}x^2-${b}x+${c}`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2-${b}\\\\times ${ecritureParentheseSiNegatif(x)}+${c}=-${a}\\\\times${x * x}${ecritureAlgebrique(-1 * b * x)}+${c}=${-1 * a * x * x}${ecritureAlgebrique(-1 * b * x)}+${c}=${-1 * a * x * x - b * x + c}$`\n          setReponse(this, i, -1 * a * x * x - b * x + c)\n          break\n        case '-ax2-bx':\n          expression = `-${a}x^2-${b}x`\n          texteCorr = `$${nomdef}(${x})=-${a}\\\\times ${ecritureParentheseSiNegatif(x)}^2-${b}\\\\times ${ecritureParentheseSiNegatif(x)}=-${a}\\\\times${x * x}${ecritureAlgebrique(-1 * b * x)}=${-1 * a * x * x}${ecritureAlgebrique(-1 * b * x)}=${-1 * a * x * x - b * x}$`\n          setReponse(this, i, -1 * a * x * x - b * x)\n          break\n        case 'a/cx+d':\n          d = randint(1, 11)\n          while (c * x + d === 0) {\n            c = randint(2, 11)\n          }\n          expression = `\\\\dfrac{${a}}{${c}x+${d}}`\n          texteCorr = `$${nomdef}(${x})=\\\\dfrac{${a}}{${c}\\\\times${ecritureParentheseSiNegatif(x)}+${d}}=\\\\dfrac{${a}}{${c * x}+${d}}=\\\\dfrac{${a}}{${c * x + d}}=${texFractionReduite(a, c * x + d)}$`\n          setReponse(this, i, fraction(a, c * x + d), { formatInteractif: 'fractionEgale' })\n          break\n        case 'ax+b/cx+d':\n          d = randint(1, 11)\n          while (c * x + d === 0) {\n            c = randint(2, 11)\n          }\n          while (a * x + b === 0) {\n            a = randint(2, 11)\n          }\n          expression = `\\\\dfrac{${a}x+${b}}{${c}x+${d}}`\n          texteCorr = `$${nomdef}(${x})=\\\\dfrac{${a}\\\\times${ecritureParentheseSiNegatif(x)}+${b}}{${c}\\\\times${ecritureParentheseSiNegatif(x)}+${d}}=\\\\dfrac{${a * x}+${b}}{${c * x}+${d}}=\\\\dfrac{${a * x + b}}{${c * x + d}}=${texFractionReduite(a * x + b, c * x + d)}$`\n          setReponse(this, i, fraction(a * x + b, c * x + d), { formatInteractif: 'fractionEgale' })\n          break\n        case '(ax+b)(cx+d)':\n          a = randint(-4, 4, [0, 1, -1])\n          b = randint(-4, 4, [0])\n          c = randint(-4, 4, [0, 1, -1])\n          d = randint(-4, 4, [0])\n          x = randint(-2, 2, [0])\n\n          expression = `(${a}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})`\n          texteCorr = `$${nomdef}(${x})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${c}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(d)}\\\\right)=(${a * x}${ecritureAlgebrique(b)})(${c * x}${ecritureAlgebrique(d)})=${a * x + b}\\\\times${ecritureParentheseSiNegatif(c * x + d)}=${(a * x + b) * (c * x + d)}$`\n          setReponse(this, i, (a * x + b) * (c * x + d))\n          break\n        case '(ax+b)2':\n          a = randint(-4, 4, [0, -1, 1])\n          b = randint(-4, 4, [0])\n          c = randint(-4, 4, [0, -1, 1])\n          d = randint(-4, 4, [0])\n          x = randint(-2, 2, [0])\n\n          expression = `(${a}x${ecritureAlgebrique(b)})^2`\n          texteCorr = `$${nomdef}(${x})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x)}${ecritureAlgebrique(b)}\\\\right)^2=(${a * x}${ecritureAlgebrique(b)})^2=${ecritureParentheseSiNegatif(a * x + b)}^2=${(a * x + b) * (a * x + b)}$`\n          setReponse(this, i, (a * x + b) * (a * x + b))\n          break\n      }\n\n      texte = `On considère la fonction $${nomdef}$ définie par $${nomdef}:x\\\\mapsto ${expression}$. Calculer $${nomdef}(${x})$.`\n      texte += ajouteChampTexteMathLive(this, i)\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 5, '1 : Fonctions affines\\n2 : Polynome du second degré\\n3 : Quotient\\n4 : Produit \\n5 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","ImageFonctionAlgebrique","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","numeroExercice","parseInt","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","signesDeX","texte","texteCorr","a","b","c","d","expression","nomdef","x","i","cpt","randint","lettreMinusculeDepuisChiffre","ecritureParentheseSiNegatif","setReponse","ecritureAlgebrique","texFractionReduite","fraction","formatInteractif","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}