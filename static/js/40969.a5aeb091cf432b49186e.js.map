{"version":3,"file":"js/40969.a5aeb091cf432b49186e.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5S13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, arrondi, arrondiVirgule, calcul, prenom, tirerLesDes, listeDeNotes, joursParMois, unMoisDeTemperature, nomDuMois, texNombre, texFraction } from '../../modules/outils.js'\n\nexport const titre = 'Calculer des fréquences'\n\n/**\n * Calculs de fréquences dans des séries statistiques\n* @author Jean-Claude Lhote\n* Référence 5S13\n*/\nexport default function CalculerDesFrequences () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.spacing = 1\n  this.spacingCorr = 1.5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.sup = parseInt(this.sup)\n\n    for (let i = 0, temperatures, nombreTemperatures, nombreNotes, notes, nombreDes, nombreFaces, nombreTirages, indexValeur, frequence, tirages, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      if (this.sup === 1) { // ici on lance des dés\n        nombreDes = randint(1, 2)\n        nombreFaces = choice([4, 6, 8, 10])\n        nombreTirages = choice([50, 100, 200, 500, 1000])\n        tirages = tirerLesDes(nombreTirages, nombreFaces, nombreDes) // on récupère une série rangée dans l'ordre croissant avec les effectifs correspondants\n        do { indexValeur = randint(0, tirages.length - 1) }\n        while (tirages[indexValeur][1] === 0) // on choisi au hasard l'index d'une valeur dont l'effectif est différent de 0.\n        if (nombreDes > 1) {\n          texte = `On a réalisé $${nombreTirages}$ lancers de $${nombreDes}$ dés à $${nombreFaces}$ faces.<br>`\n        } else {\n          texte = `On a réalisé $${nombreTirages}$ lancers d'un dé à $${nombreFaces}$ faces.<br>`\n        }\n        texte += 'Les résultats sont inscrits dans le tableau ci-dessous :<br><br>'\n        if (tirages.length > 12) {\n          texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // construction du tableau des effectifs 1/2\n          for (let j = 0; j <= Math.round(tirages.length / 2); j++) { texte += '|c' }\n          texte += '}\\\\hline  \\\\text{Scores}'\n          for (let j = 0; j < Math.round(tirages.length / 2); j++) { texte += '&' + tirages[j][0] }\n          texte += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}'\n          for (let j = 0; j < Math.round(tirages.length / 2); j++) { texte += '&' + tirages[j][1] }\n          texte += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>'\n\n          texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // construction du tableau des effectifs 2/2\n          for (let j = Math.round(tirages.length / 2); j <= tirages.length; j++) { texte += '|c' }\n          texte += '}\\\\hline  \\\\text{Scores}'\n          for (let j = Math.round(tirages.length / 2); j < tirages.length; j++) { texte += '&' + tirages[j][0] }\n          texte += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}'\n          for (let j = Math.round(tirages.length / 2); j < tirages.length; j++) { texte += '&' + tirages[j][1] }\n          texte += '\\\\\\\\\\\\hline\\\\end{array}$'\n        } else {\n          texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // construction du tableau des effectifs en un seul morceau\n          for (let j = 0; j <= tirages.length; j++) { texte += '|c' }\n          texte += '}\\\\hline  \\\\text{Scores}'\n          for (let j = 0; j < tirages.length; j++) { texte += '&' + tirages[j][0] }\n          texte += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}'\n          for (let j = 0; j < tirages.length; j++) { texte += '&' + tirages[j][1] }\n          texte += '\\\\\\\\\\\\hline\\\\end{array}$'\n        }\n\n        texte += '<br><br> Calculer la fréquence de la valeur ' + `$${calcul(nombreDes + indexValeur)}$.`\n        texteCorr = 'La valeur ' + `$${calcul(nombreDes + indexValeur)}$ apparaît ` + `$${tirages[indexValeur][1]}$ fois.<br>Le nombre total de lancers est $${texNombre(nombreTirages)}$.<br>`\n        texteCorr += 'La fréquence de la valeur ' + `$${calcul(nombreDes + indexValeur)}$` + ' est ' + `$${texFraction(tirages[indexValeur][1], texNombre(nombreTirages))}=${texNombre(calcul(tirages[indexValeur][1] / nombreTirages))}$<br>`\n        texteCorr += 'Soit ' + `$${texNombre(calcul(tirages[indexValeur][1] * 100 / nombreTirages))}\\\\thickspace\\\\%$.`\n      } else if (this.sup === 2) { // ici on trie des notes\n        nombreNotes = choice([8, 10, 12])\n        notes = listeDeNotes(nombreNotes, randint(0, 7), randint(13, 20)) // on récupère une liste de notes (série brute)\n        indexValeur = randint(0, notes.length - 1) // on choisi une des notes au hasard\n        frequence = 0\n        for (let j = 0; j < notes.length; j++) { // frequence va contenir l'effectif de la note choisie\n          if (notes[j] === notes[indexValeur]) { frequence++ }\n        }\n        texte = `${prenom()} a obtenu ces notes ce trimestre-ci en mathématiques :<br>`\n        texte += `$${notes[0]}$`\n        for (let j = 1; j < nombreNotes - 1; j++) { texte += `; $${notes[j]}$ ` } // On liste les notes (série brute)\n        texte += `et $${notes[nombreNotes - 1]}$.`\n\n        texte += `<br><br>Calculer la fréquence de la note $${notes[indexValeur]}$.`\n        texteCorr = `La note $${notes[indexValeur]}$ a été obtenue $${frequence}$ fois.<br> Il y a $${nombreNotes}$ notes<br>`\n        texteCorr += `Donc la fréquence de la note $${notes[indexValeur]}$ est : ` + `$${texFraction(texNombre(frequence), texNombre(nombreNotes))}$`\n        if (arrondi(frequence / nombreNotes, 3) === frequence / nombreNotes) { // valeurs exactes\n          texteCorr += `$=${arrondiVirgule(frequence / nombreNotes, 3)}$<br>` // fréquence à 3 chiffres significatifs\n          texteCorr += 'Soit ' + `$${texNombre(calcul(frequence * 100 / nombreNotes))}\\\\thickspace\\\\%$.` // fréquence en pourcentage avec 1 décimale\n        } else {\n          texteCorr += `$\\\\approx${arrondiVirgule(frequence / nombreNotes, 3)}$` // valeurs arrondies\n          texteCorr += 'Soit environ ' + `$${arrondiVirgule(calcul(frequence * 100 / nombreNotes), 1)}\\\\thickspace\\\\%$.`\n        }\n      } else { // ici on relève des températures\n        const mois = randint(1, 12)\n        const annee = randint(1980, 2019)\n        const temperaturesDeBase = [3, 5, 9, 13, 19, 24, 26, 25, 23, 18, 10, 5]\n        nombreTemperatures = joursParMois(mois)\n        temperatures = unMoisDeTemperature(temperaturesDeBase[mois - 1], mois, annee) // on récupère une série de température correspondant à 1 mois d'une année (série brute)\n        indexValeur = randint(0, temperatures.length - 1) // on choisi l'index d'une valeur au hasard\n        frequence = 0\n        for (let j = 0; j < temperatures.length; j++) {\n          if (temperatures[j] === temperatures[indexValeur]) { frequence++ } // frequence contient l'effectif de cette valeur\n        }\n        texte = `En ${nomDuMois(mois)} ${annee}, à ${choice(['Moscou', 'Berlin', 'Paris', 'Bruxelles', 'Rome', 'Belgrade'])}, on a relevé les températures suivantes<br>`\n\n        texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // On construit le tableau des températures\n        texte += '|c'\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) { texte += '|c' }\n        texte += '}\\\\hline  \\\\text{Jour}'\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) { texte += '&' + texNombre(j + 1) }\n        texte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}'\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) { texte += '&' + temperatures[j] }\n        texte += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>'\n        texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // On construit le tableau des températures\n        texte += '|c'\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) { texte += '|c' }\n        texte += '}\\\\hline  \\\\text{Jour}'\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) { texte += '&' + texNombre(j + 1) }\n        texte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}'\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) { texte += '&' + temperatures[j] }\n        texte += '\\\\\\\\\\\\hline\\\\end{array}$'\n\n        texte += '<br><br>Calculer la fréquence de la température ' + `$${temperatures[indexValeur]}^\\\\circ\\\\text{C}$.`\n        texteCorr = `En ${nomDuMois(mois)} ${annee}, à ${choice(['Moscou', 'Berlin', 'Paris', 'Bruxelles', 'Rome', 'Belgrade'])}, la température $${temperatures[indexValeur]}^\\\\circ\\\\text{C}$ a été relevée $${frequence}$ fois.<br>`\n        texteCorr += `Il y a $${joursParMois(mois)}$ jours ce mois-ci.<br> La fréquence de la température $${temperatures[indexValeur]}^\\\\circ\\\\text{C}$ est :<br>`\n        texteCorr += `$${texFraction(texNombre(frequence), texNombre(joursParMois(mois)))}$`\n        if (arrondi(frequence / nombreTemperatures, 3) === frequence / nombreTemperatures) { // valeurs exactes\n          texteCorr += `$=${arrondiVirgule(frequence / nombreTemperatures, 3)}$<br>`\n          texteCorr += 'Soit ' + `$${texNombre(calcul(frequence * 100 / nombreTemperatures))}\\\\thickspace\\\\%$.`\n        } else {\n          texteCorr += `$\\\\approx${arrondiVirgule(frequence / nombreTemperatures, 3)}$<br>` // valeurs arrondies\n          texteCorr += 'Soit environ ' + `$${arrondiVirgule(calcul(frequence * 100 / nombreTemperatures), 1)}\\\\thickspace\\\\%$.`\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de séries', 3, '1 : Lancers de dés \\n 2 : Liste de notes\\n 3 : Un mois de températures']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","CalculerDesFrequences","Exercice","this","consigne","nbQuestions","spacing","spacingCorr","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","parseInt","temperatures","nombreTemperatures","nombreNotes","notes","nombreDes","nombreFaces","nombreTirages","indexValeur","frequence","tirages","texte","texteCorr","i","cpt","randint","choice","tirerLesDes","length","j","Math","round","calcul","texNombre","texFraction","listeDeNotes","prenom","arrondi","arrondiVirgule","mois","annee","temperaturesDeBase","joursParMois","unMoisDeTemperature","nomDuMois","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}