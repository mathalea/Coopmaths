{"version":3,"file":"js/7208.d180a6ae54097d0e9c89.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/noteLaCouleur.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","\n/**\n * Classe NoteLaCouleur (objet Pion)\n * this.plateau est le tableau des couleurs de cases.\n * this.currentPos est {x,y} les coordonnées courantes du pion\n * this.currentOrientation est l'orientation courante du pion\n * this.codeScratch est le programme en code Latex du pion.\n * this.currentIndex est l'index qui parcourt le codeScratch...\n * this.nlc() retourne la couleur de la case sur laquelle est le pion\n * this.tesCoords(x,y) est une méthode qui dit si le point de coordonnées (x,y) est bien dans le plateau de jeu.\n * this.testInstruction(code) est une méthode qui dit si une instruction est valide (ne sort pas) et retourne un tableau\n * this.testSequence([...code]) est une méthode qui retourne true si la séquence d'instructions est valide.\n */\n\nimport { avance, boite, ObjetMathalea2D, segment, texteParPositionEchelle, tournerD, tournerG } from './2d.js'\nimport { randint } from './outils.js'\n\nclass NoteLaCouleur {\n  constructor ({\n    x = 15, y = 15, orientation = 90, plateau = [], relatif = true, nx = 16, ny = 12, pas = 30\n  }) {\n    this.plateauNLC = plateau\n    this.currentPos = { x: x, y: y }\n    this.currentOrientation = orientation\n    this.codeScratch = ''\n    this.currentIndex = 0\n    this.relatif = relatif\n    this.pas = pas\n    this.nx = nx\n    this.ny = ny\n    this.nlc = function () {\n      return this.plateauNLC[Math.ceil(((this.relatif ? (this.ny - 1) * this.pas >> 1 : (this.ny - 1) * this.pas) - this.currentPos.y) / this.pas)][Math.ceil(((this.relatif ? (this.nx - 1) * this.pas >> 1 : -this.pas >> 1) + this.currentPos.x) / this.pas)]\n    }\n    this.testCoords = function (x, y) {\n      if (x < (this.relatif ? (1 - this.nx) * this.pas >> 1 : this.pas >> 1) || x > (this.relatif ? this.nx * this.pas >> 1 : (this.nx - 0.5) * this.pas) || y < (this.relatif ? (1 - this.ny) * this.pas >> 1 : this.pas >> 1) || y > (this.relatif ? this.ny * this.pas >> 1 : (this.ny - 0.5) * this.pas)) return false\n      return true\n    }\n    /**\n         * méthode pour tester une instruction : retourne un tableau dont le premier élément indique si l'instruction est valide.\n         * c'est à dire qu'elle n'entraine pas une sortie de plateau.\n         * true -> l'instruction maintient le lutin sur le plateau\n         * false -> l'instruction le fait sortir du plateau\n         * Les autres éléments du tableau sont dans cet ordre :\n         * - les positions x et y du pion après l'instruction\n         * - son orientation après l'instruction\n         * - le code Latex de l'instruction\n         */\n    this.testInstruction = function (code, lutin) {\n      const avancepion = function (d, x, y, s) {\n        switch (s) {\n          case 0:\n          case 360:\n            y += d\n            break\n          case 90:\n          case -270:\n            x += d\n            break\n          case 180:\n          case -180:\n            y -= d\n            break\n          case 270:\n          case -90:\n            x -= d\n            break\n        }\n        return [x, y]\n      }\n      let x = this.currentPos.x\n      let y = this.currentPos.y\n      let orientation = this.currentOrientation\n      let latex\n      switch (code) {\n        case 'AV20':\n          [x, y] = avancepion(20, x, y, orientation)\n          latex = '\\\\blockmove{avancer de \\\\ovalnum{20} pas}'\n          if (lutin !== undefined) {\n            avance(20, lutin)\n          }\n          break\n        case 'AV30':\n          [x, y] = avancepion(30, x, y, orientation)\n          latex = '\\\\blockmove{avancer de \\\\ovalnum{30} pas}'\n          if (lutin !== undefined) {\n            avance(30, lutin)\n          }\n          break\n        case 'AV40':\n          [x, y] = avancepion(40, x, y, orientation)\n          latex = '\\\\blockmove{avancer de \\\\ovalnum{40} pas}'\n          if (lutin !== undefined) {\n            avance(40, lutin)\n          }\n          break\n        case 'AV60':\n          [x, y] = avancepion(60, x, y, orientation)\n          latex = '\\\\blockmove{avancer de \\\\ovalnum{60} pas}'\n          if (lutin !== undefined) {\n            avance(60, lutin)\n          }\n          break\n        case 'AV80':\n          [x, y] = avancepion(80, x, y, orientation)\n          latex = '\\\\blockmove{avancer de \\\\ovalnum{80} pas}'\n          if (lutin !== undefined) {\n            avance(80, lutin)\n          }\n          break\n        case 'AV90':\n          [x, y] = avancepion(90, x, y, orientation)\n          latex = '\\\\blockmove{avancer de \\\\ovalnum{90} pas}'\n          if (lutin !== undefined) {\n            avance(90, lutin)\n          }\n          break\n        case 'AV100':\n          [x, y] = avancepion(100, x, y, orientation)\n          latex = '\\\\blockmove{avancer de \\\\ovalnum{100} pas}'\n          if (lutin !== undefined) {\n            avance(100, lutin)\n          }\n          break\n        case 'AV120':\n          [x, y] = avancepion(120, x, y, orientation)\n          latex = '\\\\blockmove{avancer de \\\\ovalnum{120} pas}'\n          if (lutin !== undefined) {\n            avance(120, lutin)\n          }\n          break\n        case 'AV150':\n          [x, y] = avancepion(150, x, y, orientation)\n          latex = '\\\\blockmove{avancer de \\\\ovalnum{150} pas}'\n          if (lutin !== undefined) {\n            avance(150, lutin)\n          }\n          break\n\n        case 'TD90':\n          if (orientation === 180) orientation = -90\n          else orientation += 90\n          latex = '\\\\blockmove{tourner \\\\turnright{} de \\\\ovalnum{90} degrés}'\n          if (lutin !== undefined) {\n            tournerD(90, lutin)\n          }\n          break\n        case 'TG90':\n          if (orientation === -90) orientation = 180\n          else orientation -= 90\n          latex = '\\\\blockmove{tourner \\\\turnleft{} de \\\\ovalnum{90} degrés}'\n          if (lutin !== undefined) {\n            tournerG(90, lutin)\n          }\n          break\n        case 'TD180':\n        case 'TG180':\n          if (orientation === 0) orientation = 180\n          else if (orientation === -90) orientation = 90\n          else if (orientation === 90) orientation = -90\n          else orientation = 0\n          latex = '\\\\blockmove{tourner \\\\turnright{} de \\\\ovalnum{180} degrés}'\n          if (lutin !== undefined) {\n            tournerD(180, lutin)\n          }\n          break\n        case 'NLC':\n          latex = '\\\\blocklist{Note la couleur}'\n          break\n      }\n      if (this.testCoords(x, y)) {\n        return [true, x, y, orientation, latex, lutin]\n      } else return [false, this.currentPos.x, this.currentPos.y, this.currentOrientation, latex, lutin]\n    }\n\n    /**\n          * méthode pour tester une séquence : retourne\n          *\n          * [true,x,y,orientation] si la séquence reste dans le jeu\n          * [false,x,y,orientation] en cas de sortie de plateau.\n          */\n    this.testSequence = function (codes) {\n      let sorti = false\n      let test\n      const pionfantome = noteLaCouleur({ x: 0, y: 0, orientation: 0, plateau: this.plateauNLC, relatif: this.relatif, nx: this.nx, ny: this.ny, pas: this.pas })\n      pionfantome.currentPos.x = this.currentPos.x\n      pionfantome.currentPos.y = this.currentPos.y\n      pionfantome.currentOrientation = this.currentOrientation\n      for (let i = 0; i < codes.length; i++) {\n        test = pionfantome.testInstruction(codes[i])\n        if (!test[0]) { // si le lutin est sorti du plateau pendant l'instruction\n          sorti = true\n          break\n        } else {\n          pionfantome.currentPos.x = test[1]\n          pionfantome.currentPos.y = test[2]\n          pionfantome.currentOrientation = test[3]\n        }\n      }\n      // si il est sorti, alors la séquence est false, sinon, elle est true.\n      return [!sorti, pionfantome.currentPos.x, pionfantome.currentPos.y, pionfantome.currentOrientation]\n    }\n    /**\n       *\n       * @param {number} repetitions\n       * @param {string[]} codes la séquence d'instructions à répéter\n       * @returns {boolean} true si la boucle n'a à aucun moment fait sortir le lutin du plateau, false sinon\n       */\n    this.testBoucle = function (repetitions, codes) {\n      let sortiboucle = false\n      let test\n      const pionfantome = noteLaCouleur({ x: 0, y: 0, orientation: 0, plateau: this.plateauNLC, relatif: this.relatif, nx: this.nx, ny: this.ny, pas: this.pas })\n      pionfantome.currentPos.x = this.currentPos.x\n      pionfantome.currentPos.y = this.currentPos.y\n      pionfantome.currentOrientation = this.currentOrientation\n      for (let i = 0; i < repetitions; i++) {\n        test = pionfantome.testSequence(codes)\n        if (!test[0]) { // si le lutin est sorti pendant la séquence alors la boucle n'est pas valide.\n          sortiboucle = true\n          break\n        } else { // il n'est pas sorti, on continue le test à partir de la nouvelle position\n          pionfantome.currentPos.x = test[1]\n          pionfantome.currentPos.y = test[2]\n          pionfantome.currentOrientation = test[3]\n        }\n      }\n      // Si il est sorti, alors on retourne false en premier argument, sinon, on retourne true.\n      return [!sortiboucle, pionfantome.currentPos.x, pionfantome.currentPos.y, pionfantome.currentOrientation]\n    }\n  }\n}\nexport function noteLaCouleur ({\n  x = 15, y = 15, orientation = 90, plateau = [], relatif = true, nx = 16, ny = 12, pas = 30\n} = {}) {\n  return new NoteLaCouleur({ x: x, y: y, orientation: orientation, relatif: relatif, plateau: plateau, nx: nx, ny: ny, pas: pas })\n}\nclass Plateau2dNLC {\n  constructor ({\n    type = 1, melange = false, scale = 0.5, relatif = true, pas = 30, nx = 16, ny = 12,\n    plateau = [\n      ['Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc'],\n      ['Blanc', 'Noir', 'Jaune', 'Bleu', 'Vert', 'Orange', 'Rouge', 'Orange', 'Noir', 'Jaune', 'Gris', 'Vert', 'Rose', 'Noir', 'Jaune', 'Blanc'],\n      ['Blanc', 'Rouge', 'Bleu', 'Orange', 'Jaune', 'Rose', 'Gris', 'Jaune', 'Rose', 'Gris', 'Jaune', 'Bleu', 'Rouge', 'Gris', 'Rouge', 'Blanc'],\n      ['Blanc', 'Rose', 'Vert', 'Gris', 'Rouge', 'Noir', 'Bleu', 'Vert', 'Noir', 'Vert', 'Bleu', 'Rose', 'Gris', 'Vert', 'Orange', 'Blanc'],\n      ['Blanc', 'Vert', 'Bleu', 'Rose', 'Vert', 'Bleu', 'Orange', 'Gris', 'Rouge', 'Orange', 'Jaune', 'Gris', 'Rouge', 'Rose', 'Bleu', 'Blanc'],\n      ['Blanc', 'Noir', 'Orange', 'Rouge', 'Orange', 'Jaune', 'Rouge', 'Blanc', 'Blanc', 'Noir', 'Gris', 'Orange', 'Noir', 'Jaune', 'Rose', 'Blanc'],\n      ['Blanc', 'Rose', 'Gris', 'Noir', 'Bleu', 'Vert', 'Bleu', 'Blanc', 'Blanc', 'Rouge', 'Bleu', 'Gris', 'Vert', 'Rouge', 'Noir', 'Blanc'],\n      ['Blanc', 'Noir', 'Rouge', 'Rose', 'Vert', 'Orange', 'Rose', 'Noir', 'Orange', 'Vert', 'Jaune', 'Rose', 'Noir', 'Rose', 'Vert', 'Blanc'],\n      ['Blanc', 'Orange', 'Gris', 'Rouge', 'Jaune', 'Noir', 'Vert', 'Rouge', 'Rose', 'Noir', 'Bleu', 'Vert', 'Jaune', 'Orange', 'Gris', 'Blanc'],\n      ['Blanc', 'Bleu', 'Jaune', 'Orange', 'Vert', 'Gris', 'Jaune', 'Gris', 'Orange', 'Gris', 'Rose', 'Bleu', 'Rouge', 'Bleu', 'Orange', 'Blanc'],\n      ['Blanc', 'Rose', 'Bleu', 'Jaune', 'Rose', 'Orange', 'Rouge', 'Bleu', 'Noir', 'Jaune', 'Gris', 'Vert', 'Jaune', 'Noir', 'Rouge', 'Blanc'],\n      ['Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc', 'Blanc']\n    ]\n\n  } = {}) {\n    ObjetMathalea2D.call(this)\n    this.relatif = relatif\n    this.pas = pas\n    this.type = 1\n    this.scale = scale\n    this.nx = nx\n    this.ny = ny\n    this.plateauNLC = plateau\n    if (melange) {\n      for (let i = 0, x1, x2, y1, y2, kase; i < 20; i++) {\n        y1 = randint(1, this.ny - 2)\n        y2 = randint(1, this.ny - 2, y1)\n        x1 = randint(1, this.nx - 2)\n        x2 = randint(1, this.nx - 2)\n        kase = this.plateauNLC[y1][x1] // case est un mot réservé\n        this.plateauNLC[y1][x1] = this.plateauNLC[y2][x2]\n        this.plateauNLC[y2][x2] = kase\n      }\n    }\n    this.traducColor = function (couleur) {\n      switch (couleur) {\n        case 'Blanc':\n          return 'white'\n        case 'Bleu':\n          return 'blue'\n        case 'Noir':\n          return 'black'\n        case 'Rouge':\n          return 'red'\n        case 'Jaune':\n          return 'yellow'\n        case 'Rose':\n          return 'pink'\n        case 'Vert':\n          return 'green'\n        case 'Orange':\n          return 'orange'\n        case 'Gris':\n          return 'gray'\n      }\n    }\n    this.traducNum = function (couleur) {\n      switch (couleur) {\n        case 'Blanc':\n          return '0'\n        case 'Bleu':\n          return '3'\n        case 'Noir':\n          return '1'\n        case 'Rouge':\n          return '2'\n        case 'Jaune':\n          return '6'\n        case 'Rose':\n          return '5'\n        case 'Vert':\n          return '7'\n        case 'Orange':\n          return '4'\n        case 'Gris':\n          return '8'\n      }\n    }\n    this.traducLettres = function (couleur) {\n      switch (couleur) {\n        case 'Blanc':\n          return 'Blanc'\n        case 'Bleu':\n          return 'Bleu'\n        case 'Noir':\n          return 'Noir'\n        case 'Rouge':\n          return 'Rouge'\n        case 'Jaune':\n          return 'Jaune'\n        case 'Rose':\n          return 'Rose'\n        case 'Vert':\n          return 'Vert'\n        case 'Orange':\n          return 'Orange'\n        case 'Gris':\n          return 'Gris'\n      }\n    }\n\n    const plateau2d = []\n    let b\n    for (let X = 0; X < this.nx; X++) {\n      for (let Y = 0; Y < this.ny; Y++) {\n        switch (type) {\n          case 1:\n            b = boite({ Xmin: X * 1.5 + (this.nx >> 1) * (this.relatif ? -1.5 : 0), Ymin: Y * 1.5 + (this.ny >> 1) * (this.relatif ? -1.5 : 0), Xmax: (X + 1) * 1.5 + (this.nx >> 1) * (this.relatif ? -1.5 : 0), Ymax: (Y + 1) * 1.5 + (this.ny >> 1) * (this.relatif ? -1.5 : 0), color: 'black', opaciteDeRemplissage: 0.7, colorFill: this.traducColor(this.plateauNLC[ny - 1 - Y][X]), echelleFigure: this.scale })\n            b.opacite = 0.8\n            break\n          case 2:\n            b = boite({ Xmin: X * 1.5 + (this.nx >> 1) * (this.relatif ? -1.5 : 0), Ymin: Y * 1.5 + (this.ny >> 1) * (this.relatif ? -1.5 : 0), Xmax: (X + 1) * 1.5 + (this.nx >> 1) * (this.relatif ? -1.5 : 0), Ymax: (Y + 1) * 1.5 + (this.ny >> 1) * (this.relatif ? -1.5 : 0), color: 'black', opaciteDeRemplissage: 0.7, colorFill: this.traducColor(this.plateauNLC[ny - 1 - Y][X]), tailleTexte: 1.2, texteColor: 'black', texteOpacite: 0.8, texteIn: this.traducNum(this.plateauNLC[ny - 1 - Y][X]), echelleFigure: this.scale })\n            b.opacite = 0.8\n            break\n          case 3:\n            b = boite({ Xmin: X * 1.5 + (this.nx >> 1) * (this.relatif ? -1.5 : 0), Ymin: Y * 1.5 + (this.ny >> 1) * (this.relatif ? -1.5 : 0), Xmax: (X + 1) * 1.5 + (this.nx >> 1) * (this.relatif ? -1.5 : 0), Ymax: (Y + 1) * 1.5 + (this.ny >> 1) * (this.relatif ? -1.5 : 0), color: 'black', opaciteDeRemplissage: 1, colorFill: 'white', tailleTexte: 0.9, texteColor: 'black', texteOpacite: 0.9, texteIn: this.traducLettres(this.plateauNLC[ny - 1 - Y][X]), echelleFigure: this.scale })\n            b.opacite = 0.8\n            break\n          case 4:\n            b = boite({ Xmin: X * 1.5 + (this.nx >> 1) * (this.relatif ? -1.5 : 0), Ymin: Y * 1.5 + (this.ny >> 1) * (this.relatif ? -1.5 : 0), Xmax: (X + 1) * 1.5 + (this.nx >> 1) * (this.relatif ? -1.5 : 0), Ymax: (Y + 1) * 1.5 + (this.ny >> 1) * (this.relatif ? -1.5 : 0), color: 'black', opaciteDeRemplissage: 1, colorFill: 'white', tailleTexte: 1.2, texteColor: 'black', texteOpacite: 0.9, texteIn: this.traducNum(this.plateauNLC[ny - 1 - Y][X]), echelleFigure: this.scale })\n            b.opacite = 0.8\n            break\n        }\n        plateau2d.push(b)\n      }\n    }\n    if (this.relatif) plateau2d.push(texteParPositionEchelle(`-${this.pas}`, -1.6, -0.3, 'milieu', 'black', 1.2, 'middle', true, scale))\n    plateau2d.push(texteParPositionEchelle(`${this.pas}`, 1.5, -0.3, 'milieu', 'black', 1.2, 'middle', true, scale))\n    if (this.relatif) plateau2d.push(texteParPositionEchelle(`-${this.pas}`, -0.5, -1.5, 'milieu', 'black', 1.2, 'middle', true, scale))\n    plateau2d.push(texteParPositionEchelle(`${this.pas}`, -0.5, 1.5, 'milieu', 'black', 1.2, 'middle', true, scale))\n    plateau2d.push(texteParPositionEchelle('x', this.nx * (this.relatif ? 0.75 : 1.5) + 0.7, -(this.relatif ? 0.6 : 0.6), 'milieu', 'purple', 1.2, 'middle', true, scale))\n    plateau2d.push(texteParPositionEchelle('y', -0.3, this.ny * (this.relatif ? 0.75 : 1.5) + 0.7, 'milieu', 'purple', 1.2, 'middle', true, scale))\n    if (this.relatif) {\n      plateau2d.push(texteParPositionEchelle('+', (this.nx >> 1) * 1.5 + 0.8, 0, 'milieu', 'purple', 1.2, 'middle', true, scale))\n      plateau2d.push(texteParPositionEchelle('-', -(this.nx >> 1) * 1.5 - 0.5, 0.2, 'milieu', 'purple', 1.2, 'middle', true, scale))\n      plateau2d.push(texteParPositionEchelle('+', 0, (this.ny >> 1) * 1.5 + 0.8, 'milieu', 'purple', 1.2, 'middle', true, scale))\n      plateau2d.push(texteParPositionEchelle('-', 0, -(this.ny >> 1) * 1.5 - 0.5, 'milieu', 'purple', 1.2, 'middle', true, scale))\n    }\n    const flechey = segment(0, (this.ny >> 1) * (this.relatif ? -1.5 : 0), 0, (this.ny >> 1) * (this.relatif ? 1.5 : 3) + 0.5, 'purple')\n    flechey.styleExtremites = '->'\n    const flechex = segment((this.nx >> 1) * (this.relatif ? -1.5 : 0), 0, (this.nx >> 1) * (this.relatif ? 1.5 : 3) + 0.5, 0, 'purple')\n    flechex.styleExtremites = '->'\n    plateau2d.push(flechey)\n    plateau2d.push(flechex)\n\n    this.svg = function (coeff) {\n      let code = ''\n      for (const objet of plateau2d) {\n        code += objet.svg(coeff) + '\\n'\n      }\n      return code\n    }\n    this.tikz = function () {\n      let code = ''\n      for (const objet of plateau2d) {\n        code += objet.tikz() + '\\n'\n      }\n      return code\n    }\n  }\n}\n\nexport function plateau2dNLC (type = 1, melange = false, scale = 0.5, relatif = true) {\n  return new Plateau2dNLC(type, melange, scale, relatif)\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","NoteLaCouleur","constructor","x","y","orientation","plateau","relatif","nx","ny","pas","plateauNLC","currentPos","currentOrientation","codeScratch","currentIndex","nlc","Math","ceil","testCoords","testInstruction","code","lutin","avancepion","d","s","latex","avance","tournerD","tournerG","testSequence","codes","test","sorti","pionfantome","noteLaCouleur","length","testBoucle","repetitions","sortiboucle","Plateau2dNLC","type","melange","scale","ObjetMathalea2D","x1","x2","y1","y2","kase","randint","traducColor","couleur","traducNum","traducLettres","plateau2d","b","X","Y","boite","Xmin","Ymin","Xmax","Ymax","color","opaciteDeRemplissage","colorFill","echelleFigure","opacite","tailleTexte","texteColor","texteOpacite","texteIn","texteParPositionEchelle","flechey","segment","styleExtremites","flechex","svg","coeff","objet","tikz","plateau2dNLC"],"sourceRoot":""}