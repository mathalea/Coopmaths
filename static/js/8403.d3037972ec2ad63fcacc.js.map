{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5L10-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Tableaux_et_fonction","typesDeQuestionsDisponibles","Exercice","this","debug","sup","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","cote_inconnu_corr","cote_inconnu_corr_num","unites","grand_L","grand_L_num","petit_l","petit_l_num","unite_grand_L","unite_petit_l","txt_corr","L1","randint","L2","L3","L4","cote_inconnu","choice","cote_connu","fenetreMathalea2D","xmin","ymin","xmax","ymax","pixelsParCm","scale","A","point","B","C","D","mesAppels","polygone","figure","mathalea2d","etapeCorrective","str","sortie","situations","tableau","tableauColonneLigne","calculL1","texNombre","calculL2","calculL3","calculL4","tableau_corr","tableau_corr_p1","tableau_corr_p2","secondeQ","intro","fig","enonces","i_sous_question","i_sous_question_corr","k","length","push","enonce","numAlpha","question","correction","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/8403.d3037972ec2ad63fcacc.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListesSansChangerOrdre,texNombre,numAlpha,tableauColonneLigne} from '../../modules/outils.js'\nimport {point,polygone,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Produire une formule à partir d’un tableau'\n\n/** \n * * Traduire la dépendance entre deux grandeurs par un tableau de valeurs et produire une formule.\n * * 5L10-4\n * @author Sébastien Lozano\n */\n\nexport default function Tableaux_et_fonction() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.debug = false;\n\tthis.sup = 1;\n\tif (this.debug) {\n\t\tthis.nbQuestions = 1;\n\t} else {\n\t\tthis.nbQuestions = 1;\n\t};\n\n\tthis.titre = titre;\n\tthis.consigne = ``;\n\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\t//this.nbQuestionsModifiable = false;\n\tcontext.isHtml ? this.spacing = 3 : this.spacing = 2;\n\tcontext.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1;\n\n\tlet typesDeQuestionsDisponibles;\n\n\tthis.nouvelleVersion = function () {\n\t\tif (this.debug) {\n\t\t\ttypesDeQuestionsDisponibles = [0];\n\t\t} else {\n\t\t\t//typesDeQuestionsDisponibles = shuffle([choice([1,3]),choice([2,4]),0]);      \t\t\t\n\t\t\ttypesDeQuestionsDisponibles = [0];\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\n\t\t//let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\t\t\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\tlet L1 = randint(3, 7);\n\t\t\tlet L2 = L1 + 1;\n\t\t\tlet L3 = L2 * 2;\n\t\t\tlet L4 = L2 * 3;\n\n\t\t\tlet cote_inconnu = choice(['L']);\n\t\t\tlet cote_inconnu_corr;\n\t\t\tlet cote_inconnu_corr_num;\n\t\t\tlet cote_connu = randint(3, 7);\n\n\t\t\tlet unites;\n\t\t\tlet grand_L;\n\t\t\tlet grand_L_num;\n\t\t\tlet petit_l;\n\t\t\tlet petit_l_num;\n\t\t\tlet unite_grand_L;\n\t\t\tlet unite_petit_l;\n\t\t\tlet txt_corr;\n\t\t\tif (this.sup == 1) {//même unités\n\t\t\t\tunites = choice([['cm', 'cm'], ['m', 'm']]);\n\t\t\t\tgrand_L = [`${L1}`, `${L2}`, `${L3}`, `${L4}`];\n\t\t\t\tgrand_L_num = [`${L1}`, `${L2}`, `${L3}`, `${L4}`];\n\t\t\t\tpetit_l = [`${cote_connu}`, ``, ``, ``];\n\t\t\t\tpetit_l_num = [`${cote_connu}`, ``, ``, ``];\n\t\t\t\tunite_grand_L = unites[0];\n\t\t\t\tunite_petit_l = unites[1];\n\t\t\t\tcote_inconnu_corr = cote_inconnu;\n\t\t\t\tcote_inconnu_corr_num = `2` + cote_inconnu;\n\t\t\t\ttxt_corr = `Les unités sont les mêmes il n'est donc pas necessaire de convertir.`;\n\t\t\t};\n\t\t\tif (this.sup == 2) {// unités différentes\n\t\t\t\tunites = choice([['cm', 'm'], ['m', 'cm']]);\n\t\t\t\tif (unites[0] == 'cm') {\n\t\t\t\t\tgrand_L = [`${L1}`, `${L2}`, `${L3}`, `${L4}`];\n\t\t\t\t\tgrand_L_num = [`${L1}`, `${L2}`, `${L3}`, `${L4}`];\n\t\t\t\t\tpetit_l = [`${cote_connu}\\\\times 100`, ``, ``, ``];\n\t\t\t\t\tpetit_l_num = [`${100 * cote_connu}`, ``, ``, ``];\n\t\t\t\t\tunite_grand_L = unites[0];\n\t\t\t\t\tunite_petit_l = unites[0];\n\t\t\t\t\tcote_inconnu_corr = cote_inconnu;\n\t\t\t\t\tcote_inconnu_corr_num = `2` + cote_inconnu;\n\t\t\t\t\ttxt_corr = `Les unités sont différentes, pour plus de confort, nous pouvons les convertir dans la même unité, ici en cm.`;\n\t\t\t\t};\n\t\t\t\tif (unites[0] == 'm') {\n\t\t\t\t\tgrand_L = [`${L1}\\\\times 100`, `${L2}\\\\times 100`, `${L3}\\\\times 100`, `${L4}\\\\times 100`];\n\t\t\t\t\tgrand_L_num = [`${100 * L1}`, `${100 * L2}`, `${100 * L3}`, `${100 * L4}`];\n\t\t\t\t\tpetit_l = [`${cote_connu}`, ``, ``, ``];\n\t\t\t\t\tpetit_l_num = [`${cote_connu}`, ``, ``, ``];\n\t\t\t\t\tunite_grand_L = unites[1];\n\t\t\t\t\tunite_petit_l = unites[1];\n\t\t\t\t\tcote_inconnu_corr = cote_inconnu + `\\\\times 100`;\n\t\t\t\t\tcote_inconnu_corr_num = `200` + cote_inconnu;\n\n\t\t\t\t\ttxt_corr = `Les unités sont différentes, pour plus de confort, nous pouvons les convertir dans la même unité, ici en cm.`;\n\t\t\t\t};\n\n\t\t\t};\n\n\n\n\t\t\t// on prépare la fenetre mathalea2d\n\t\t\tlet fenetreMathalea2D = { xmin: -5, ymin: -3, xmax: 5, ymax: 3, pixelsParCm: 20, scale: 0.5 }\n\t\t\tlet A = point(-4, 2);\n\t\t\tlet B = point(-4, -2);\n\t\t\tlet C = point(4, -2);\n\t\t\tlet D = point(4, 2);\n\t\t\tlet mesAppels = [\n\t\t\t\tpolygone(A, B, C, D),\n\t\t\t];\n\t\t\tlet figure = mathalea2d(\n\t\t\t\tfenetreMathalea2D,\n\t\t\t\tmesAppels\n\t\t\t);\n\n\t\t\t// une fonction pour moduler l'affichage d'une étape dans la correction\n\t\t\tfunction etapeCorrective(str, sup) {\n\t\t\t\tlet sortie;\n\t\t\t\tif (sup == 1) {\n\t\t\t\t\tsortie = ``;\n\t\t\t\t};\n\t\t\t\tif (sup == 2) {\n\t\t\t\t\tsortie = str;\n\t\t\t\t};\n\t\t\t\treturn sortie;\n\n\t\t\t};\n\n\t\t\t// pour les situations, autant de situations que de cas dans le switch !\n\t\t\tlet situations = [\n\t\t\t\t{//case 0 -->\n\t\t\t\t\tunites: unites,\n\t\t\t\t\tcote_connu: cote_connu,\n\t\t\t\t\tcote_inconnu: cote_inconnu,\n\t\t\t\t\ttableau: tableauColonneLigne([`\\\\text{Longueur $${cote_inconnu}$ du côté (en ${unites[0]})}`, `\\\\phantom{000}${L1}\\\\phantom{000}`, `\\\\phantom{000}${L2}\\\\phantom{000}`, `\\\\phantom{000}${L3}\\\\phantom{000}`, `\\\\phantom{000}${L4}\\\\phantom{000}`], [`\\\\text{Périmètre du rectangle (en $${unites[1]}$)}`],\n\t\t\t\t\t\t['', '', '', '']\n\t\t\t\t\t),\n\t\t\t\t\tcalculL1: `Pour ${L1} ${unites[0]} : $2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L1} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${texNombre(grand_L_num[0])} \\\\; \\\\text{${unite_grand_L}}}`, this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2 * petit_l_num[0] + 2 * grand_L_num[0])} \\\\; \\\\text{${unite_grand_L}}}$.`,\n\t\t\t\t\tcalculL2: `Pour ${L2} ${unites[0]} : $2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L2} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${texNombre(grand_L_num[1])} \\\\; \\\\text{${unite_grand_L}}}`, this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2 * petit_l_num[0] + 2 * grand_L_num[1])} \\\\; \\\\text{${unite_grand_L}}}$.`,\n\t\t\t\t\tcalculL3: `Pour ${L3} ${unites[0]} : $2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L3} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${texNombre(grand_L_num[2])} \\\\; \\\\text{${unite_grand_L}}}`, this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2 * petit_l_num[0] + 2 * grand_L_num[2])} \\\\; \\\\text{${unite_grand_L}}}$.`,\n\t\t\t\t\tcalculL4: `Pour ${L4} ${unites[0]} : $2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L4} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${texNombre(grand_L_num[3])} \\\\; \\\\text{${unite_grand_L}}}`, this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2 * petit_l_num[0] + 2 * grand_L_num[3])} \\\\; \\\\text{${unite_grand_L}}}$.`,\n\t\t\t\t\ttableau_corr: tableauColonneLigne([`\\\\text{Longueur $${cote_inconnu_corr}$ du côté (en ${unite_grand_L})}`, `\\\\phantom{0}${grand_L[0]}\\\\phantom{0}`, `\\\\phantom{0}${grand_L[1]}\\\\phantom{0}`, `\\\\phantom{0}${grand_L[2]}\\\\phantom{0}`, `\\\\phantom{0}${grand_L[3]}\\\\phantom{0}`],\n\t\t\t\t\t\t[`\\\\text{Périmètre du rectangle (en ${unite_petit_l})}`],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`${texNombre(2 * petit_l_num[0] + 2 * grand_L_num[0])} \\\\; \\\\text{${unite_grand_L}}`,\n\t\t\t\t\t\t\t`${texNombre(2 * petit_l_num[0] + 2 * grand_L_num[1])} \\\\; \\\\text{${unite_grand_L}}`,\n\t\t\t\t\t\t\t`${texNombre(2 * petit_l_num[0] + 2 * grand_L_num[2])} \\\\; \\\\text{${unite_grand_L}}`,\n\t\t\t\t\t\t\t`${texNombre(2 * petit_l_num[0] + 2 * grand_L_num[3])} \\\\; \\\\text{${unite_grand_L}}`,\n\t\t\t\t\t\t],\n\t\t\t\t\t),\n\t\t\t\t\ttableau_corr_p1: tableauColonneLigne([`\\\\text{Longueur $${cote_inconnu_corr}$ du côté (en $${unite_grand_L}$)}`, `\\\\phantom{000}${grand_L[0]}\\\\phantom{000}`, `\\\\phantom{000}${grand_L[1]}\\\\phantom{000}`],//,`\\\\phantom{000}${grand_L[2]}\\\\phantom{000}`,`\\\\phantom{000}${grand_L[3]}\\\\phantom{000}`],\n\t\t\t\t\t\t[`\\\\text{Périmètre du rectangle (en ${unite_petit_l})}`],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t//`2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L1} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${texNombre(grand_L_num[0])} \\\\; \\\\text{${unite_grand_L}}}`,this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2*petit_l_num[0]+2*grand_L_num[0])} \\\\; \\\\text{${unite_grand_L}}}`,\n\t\t\t\t\t\t\t//`2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L2} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${texNombre(grand_L_num[1])} \\\\; \\\\text{${unite_grand_L}}}`,this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2*petit_l_num[0]+2*grand_L_num[1])} \\\\; \\\\text{${unite_grand_L}}}`,\n\t\t\t\t\t\t\t//`2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L3} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${grand_L_num[2]} \\\\; \\\\text{${unite_grand_L}}}`,this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2*petit_l_num[0]+2*grand_L_num[2])} \\\\; \\\\text{${unite_grand_L}}}`,\n\t\t\t\t\t\t\t//`2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L4} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${grand_L_num[3]} \\\\; \\\\text{${unite_grand_L}}}`,this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2*petit_l_num[0]+2*grand_L_num[3])} \\\\; \\\\text{${unite_grand_L}}}`,`2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L4} \\\\; \\\\text{${unites[0]}}} \\\\color{black}{ = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${grand_L_num[3]} \\\\; \\\\text{${unite_grand_L}} = \\\\color{black}{${texNombre(2*petit_l_num[0]+2*grand_L_num[3])} \\\\; \\\\text{${unite_grand_L}}}}`,\n\t\t\t\t\t\t],\n\t\t\t\t\t),\n\t\t\t\t\ttableau_corr_p2: tableauColonneLigne([`\\\\text{Longueur $${cote_inconnu_corr}$ du côté (en $${unite_grand_L}$)}`, `\\\\phantom{000}${grand_L[2]}\\\\phantom{000}`, `\\\\phantom{000}${grand_L[3]}\\\\phantom{000}`],//,`\\\\phantom{000}${grand_L[2]}\\\\phantom{000}`,`\\\\phantom{000}${grand_L[3]}\\\\phantom{000}`],\n\t\t\t\t\t\t[`\\\\text{Périmètre du rectangle (en $${unite_petit_l}$)}`],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t//`2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L1} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${grand_L_num[0]} \\\\; \\\\text{${unite_grand_L}}}`,this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2*petit_l_num[0]+2*grand_L_num[0])} \\\\; \\\\text{${unite_grand_L}}}`,\n\t\t\t\t\t\t\t//`2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L2} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${grand_L_num[1]} \\\\; \\\\text{${unite_grand_L}}}`,this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2*petit_l_num[0]+2*grand_L_num[1])} \\\\; \\\\text{${unite_grand_L}}}`,\n\t\t\t\t\t\t\t//`2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L3} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${texNombre(grand_L_num[2])} \\\\; \\\\text{${unite_grand_L}}}`,this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2*petit_l_num[0]+2*grand_L_num[2])} \\\\; \\\\text{${unite_grand_L}}}`,\n\t\t\t\t\t\t\t//`2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${L4} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${texNombre(grand_L_num[3])} \\\\; \\\\text{${unite_grand_L}}}`,this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2*petit_l_num[0]+2*grand_L_num[3])} \\\\; \\\\text{${unite_grand_L}}}`,\n\t\t\t\t\t\t],\n\t\t\t\t\t),\n\t\t\t\t\tsecondeQ: `2\\\\times \\\\color{blue}{${cote_connu} \\\\; \\\\text{${unites[1]}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${cote_inconnu} \\\\; \\\\text{${unites[0]}}} ${etapeCorrective(`\\\\color{black}{\\\\; = 2\\\\times} \\\\color{blue}{${petit_l_num[0]} \\\\; \\\\text{${unite_petit_l}}} \\\\color{black}{+2\\\\times} \\\\color{red}{${cote_inconnu_corr} \\\\; \\\\text{${unite_grand_L}}}`, this.sup)} \\\\color{black}{ \\\\;= ${texNombre(2 * petit_l_num[0])} + ${cote_inconnu_corr_num} \\\\; \\\\text{exprimé en ${unite_grand_L}}}`,\n\t\t\t\t\tintro: txt_corr,\n\t\t\t\t\tfig: figure,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tlet enonces = [];\n\t\t\tlet i_sous_question = 0;\n\t\t\tlet i_sous_question_corr = 0;\n\n\t\t\tfor (let k = 0; k < situations.length; k++) {\n\t\t\t\tenonces.push({\n\t\t\t\t\tenonce: `\n\t\t\t\t\tOn considère le rectangle ci-dessous dont l'un des côtés mesure $${situations[k].cote_connu}$ $${unites[1]}$ et l'autre mesure $${situations[k].cote_inconnu}$ $${unites[0]}$.<br>\n\t\t\t\t\t${situations[k].fig}<br>\n\t\t\t\t\t${numAlpha(i_sous_question++)} Compléter le tableau suivant :<br><br>\n\t\t\t\t\t${situations[k].tableau}<br><br>\n\t\t\t\t\t${numAlpha(i_sous_question++)} Quelle formule permet de calculer le périmètre de ce rectangle en fonction de $${situations[k].cote_inconnu}$ ?\t\t\t\t\t\t\t\t\n\t\t\t\t\t`,\n\t\t\t\t\tquestion: ``,\n\t\t\t\t\tcorrection: `\n\t\t\t\t\t${numAlpha(i_sous_question_corr++)} ${situations[k].intro}<br>\n\t\t\t\t\tIl y a plusieurs façons de calculer le périmètre d'un rectangle, par exemple : <br> $2\\\\times largeur + 2\\\\times Longueur$.<br>\n\t\t\t\t\tIci l'un des côtés mesure toujours $\\\\textcolor{blue}{${petit_l[0]}}$ $${unite_petit_l}$<br>\n\t\t\t\t\tCalculons les périmètres pour chacune des valeurs données :<br>\n\t\t\t\t\t${situations[k].calculL1}<br>\n\t\t\t\t\t${situations[k].calculL2}<br>\n\t\t\t\t\t${situations[k].calculL3}<br>\n\t\t\t\t\t${situations[k].calculL4}<br>\n\t\t\t\t\tNous pouvons alors remplir le tableau<br>\n\t\t\t\t\t${situations[k].tableau_corr}<br><br>\n\t\t\t\t\t${numAlpha(i_sous_question_corr++)} On peut généraliser le raisonnement des calculs du périmètre, et ainsi obtenir une formule.<br>\n\t\t\t\t\t$${situations[k].secondeQ}$\n\n\t\t\t\t\t`\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// autant de case que d'elements dans le tableau des situations\n\t\t\tswitch (listeTypeDeQuestions[i]) {\n\t\t\t\tcase 0:\n\t\t\t\t\ttexte = `${enonces[0].enonce}`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n\t\t\t\t\t\ttexte += `             `\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = `${enonces[0].correction}`;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\tlisteQuestionsToContenu(this);\n\n\t}\n\tthis.besoinFormulaireNumerique = ['Niveau de difficulté', 2, \"1 : les mêmes unités\\n2 : unités différentes\"];\n\t//this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\t\n};\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}