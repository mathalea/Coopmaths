{"version":3,"file":"js/44063.d6febcb1165bdc939676.js","mappings":"sSAIO,MAAMA,EAAQ,iCACRC,GAAkB,EAClBC,EAAiB,WACjBC,GAAW,EACXC,EAAU,UAEVC,EAAoB,aAOlB,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKC,YAAc,EAEnBD,KAAKE,0BAA4B,CAAC,iBAAkB,EAAG,qFACvDF,KAAKG,IAAM,EACXH,KAAKI,2BAA6B,CAAC,WAAY,EAAG,yCAClDJ,KAAKK,KAAO,EAEZL,KAAKM,gBAAkB,SAAUC,GAI/B,IAAIC,EAgBAC,EAfJ,OAJAT,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxBX,KAAKY,eAAiB,GAEdZ,KAAKG,KACX,KAAK,EACHH,KAAKa,SAAW,kDAChBL,EAAuB,CAAC,WACxB,MACF,KAAK,EACHR,KAAKa,SAAW,2DAChBL,EAAuB,CAAC,aACxB,MACF,QACER,KAAKa,SAAW,GAChBL,EAAuB,CAAC,UAAW,aAKvC,OAFAA,GAAuBM,EAAAA,EAAAA,KAAkBN,EAAsBR,KAAKC,aAE5DD,KAAKK,MACX,KAAK,EACHI,EAAuB,CAAC,WACxB,MACF,KAAK,EACHA,EAAuB,CAAC,WACxB,MACF,QACEA,EAAuB,CAAC,UAAW,WAGvCA,GAAuBK,EAAAA,EAAAA,KAAkBL,EAAsBT,KAAKC,aACpE,MAAMc,GAAcD,EAAAA,EAAAA,KAAkB,CAAC,GAAI,KAAMd,KAAKC,aAChDe,GAAsBF,EAAAA,EAAAA,KAAkB,CAAC,GAAI,KAAMd,KAAKC,aAC9D,IAAK,IAAWgB,EAAOC,EAAWC,EAAGC,EAAGC,EAAIC,EAAIC,EAAKC,EAAKC,EAAgBC,EAASC,EAAYC,EAAWC,EAAjGC,EAAI,EAAyGC,EAAM,EAAGD,EAAI9B,KAAKC,aAAe8B,EAAM,IAAK,CA0BhK,IAAIC,EAzBJhC,KAAKY,eAAekB,GAAK,GACzBX,GAAIc,EAAAA,EAAAA,KAAQ,EAAG,IACgB,MAA3BjB,EAAoBc,KAAYX,GAAKA,GAEvCC,EAD8B,cAA5BZ,EAAqBsB,IACnBG,EAAAA,EAAAA,KAAQ,EAAG,IAEXA,EAAAA,EAAAA,KAAQ,EAAG,GAEbd,EAAI,GACNE,EAAK,IACLC,EAAK,IACLC,EAAM,GACNC,EAAM,KAENH,EAAK,GACLC,EAAK,GACLC,EAAM,IACNC,EAAM,KAEiBC,EAAN,MAAnBV,EAAYe,GAA8B,GAAsB,IAChC,YAA5BrB,EAAqBqB,KACvBV,IAAS,GAEXQ,EAAa,GAAEb,EAAYe,GAAKT,EAAKF,EAAIG,MAAOF,KAChDS,EAAa,GAELG,EAARZ,EAAI,EAAW,IAAGA,KAAc,GAAEA,IAClCS,EAAWK,KAAM,GAAEnB,EAAYe,GAAKT,EAAKF,EAAIG,KAAMU,KACnDZ,EAAI,GAAM,EAAIS,EAAWK,KAAM,GAAEnB,EAAYe,GAAKP,GAAOJ,EAAIK,KAAOQ,KAASH,EAAWK,KAAM,GAAET,EAAiBF,GAAOJ,EAAIK,KAAOQ,KACnIN,EAAW,GAAEL,EAAKF,EAAIG,IACtBK,EAAaD,EACb,IAAK,IAAIS,EAAI,EAAGA,EAAIC,KAAKC,IAAIjB,GAAK,EAAGe,IACnCT,GAAY,UAASL,EAAKF,EAAIG,IAC9BK,GAAe,IAAGR,KAEpB,OAAQX,EAAqBsB,IAC3B,IAAK,UAEDb,EADe,IAAbjB,KAAKG,IACE,+BAA8ByB,MAE9B,IAAGA,KAEdV,EAAa,IAAGU,OACN,IAANR,GACFF,GAAaH,EAAYe,GAAK,EAAI,KAClCQ,EAAAA,EAAAA,IAAWtC,KAAM8B,EAAGf,EAAYe,GAAK,EAAG,CAAES,iBAAkB,kBAC7C,IAANnB,GACc,KAAnBL,EAAYe,KACdT,EAAK,GACLC,EAAK,IAEPJ,GAAc,GAAEH,EAAYe,GAAKT,EAAKF,EAAIG,MAC1CgB,EAAAA,EAAAA,IAAWtC,KAAM8B,EAAGf,EAAYe,GAAKT,EAAKF,EAAIG,EAAI,CAAEiB,iBAAkB,kBAC7DnB,EAAI,GACbF,GAAaH,EAAYe,GAAKJ,EAAU,KACxCY,EAAAA,EAAAA,IAAWtC,KAAM8B,EAAG,CAACf,EAAYe,GAAKJ,EAASX,EAAYe,GAAKH,GAAa,CAAEY,iBAAkB,mBACjF,IAAPnB,GACTF,GAAc,GAAEH,EAAYe,gBAAgBX,OAC5CmB,EAAAA,EAAAA,IAAWtC,KAAM8B,EAAI,GAAEf,EAAYe,eAAeX,KAAM,CAAEoB,iBAAkB,kBACnEnB,GAAK,IACdF,GAAc,GAAEH,EAAYe,gBAAgBJ,OAC5CY,EAAAA,EAAAA,IAAWtC,KAAM8B,EAAG,CAAE,GAAEf,EAAYe,eAAeJ,KAAa,GAAEX,EAAYe,eAAeH,MAAgB,CAAEY,iBAAkB,kBAEnI,MACF,IAAK,YACctB,EAAJ,IAAbjB,KAAKG,IAAoB,8DAAyE,GAC9FiB,EAAI,GACNH,GAAU,IAAGF,EAAYe,iBAAiBJ,MAC1CR,EAAa,IAAGH,EAAYe,iBAAiBJ,QAAcE,OAE3DX,GAAU,IAAGF,EAAYe,MAAMJ,KAC/BR,EAAa,IAAGH,EAAYe,MAAMJ,OAAaE,OAEjDU,EAAAA,EAAAA,IAAWtC,KAAM8B,EAAGD,EAAY,CAAEU,iBAAkB,iBAGpDvC,KAAKwC,aACyB,YAA5BhC,EAAqBsB,KAAkBb,IAASwB,EAAAA,EAAAA,IAAyBzC,KAAM8B,EAAG,2BACtD,cAA5BtB,EAAqBsB,KAAoBb,IAASwB,EAAAA,EAAAA,IAAyBzC,KAAM8B,EAAG,4BAEtFY,EAAAA,GAAAA,QACF1C,KAAKY,eAAekB,GAAGa,aAAe,CAAC,CAAEC,OAAQ,EAAGC,WAAW,EAAM5B,MAAOC,KAG1ElB,KAAK8C,oBAAoBhB,EAAGX,EAAGC,EAAGZ,EAAqBsB,GAAIrB,EAAqBqB,GAAIf,EAAYe,MAClG9B,KAAKU,eAAewB,KAAKjB,GACzBjB,KAAKW,iBAAiBuB,KAAKhB,GAC3BY,KAEFC,KAEFgB,EAAAA,EAAAA,KAAwB/C,S,gBCnJb,SAASD,IAItBC,KAAKR,MAAQ,GACbQ,KAAKgD,YAAa,EAclBhD,KAAKa,SAAW,GAChBb,KAAKiD,mBAAqB,GAC1BjD,KAAKkD,aAAe,GACpBlD,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxBX,KAAKmD,QAAU,GACfnD,KAAKoD,kBAAoB,GACzBpD,KAAKY,eAAiB,GACtBZ,KAAKqD,sBAAwB,GAK7BrD,KAAKsD,QAAU,EACftD,KAAKuD,YAAc,EAKnBvD,KAAKwD,mBAAoB,EACzBxD,KAAKyD,cAAgB,GACrBzD,KAAK0D,oBAAqB,EAC1B1D,KAAK2D,uBAAwB,EAC7B3D,KAAK4D,OAAS,EACd5D,KAAK6D,WAAa,EAClB7D,KAAK8D,kBAAmB,EACxB9D,KAAK+D,sBAAuB,EAC5B/D,KAAKgE,mBAAoB,EACzBhE,KAAKiE,uBAAwB,EAM7BjE,KAAKkE,QAAS,EACdlE,KAAKmE,gBAAkB,EAKvBnE,KAAKC,YAAc,GACnBD,KAAKoE,mBAAqB,EAC1BpE,KAAKqE,+BAAgC,EACrCrE,KAAKsE,qBAAsB,EAC3BtE,KAAKuE,oBAAqB,EAC1BvE,KAAKwE,MAAQ,GAEbxE,KAAKwC,YAAa,EAClBxC,KAAKyE,uBAAwB,EAE7BzE,KAAKE,2BAA4B,EACjCF,KAAK0E,uBAAwB,EAC7B1E,KAAK2E,6BAA8B,EAEnC3E,KAAKI,4BAA6B,EAClCJ,KAAK4E,wBAAyB,EAC9B5E,KAAK6E,8BAA+B,EAEpC7E,KAAK8E,4BAA6B,EAClC9E,KAAK+E,wBAAyB,EAC9B/E,KAAKgF,8BAA+B,EAEpChF,KAAKiF,4BAA6B,EAClCjF,KAAKkF,wBAAyB,EAC9BlF,KAAKmF,8BAA+B,EAMpCnF,KAAKoF,cAAe,EASpBpF,KAAKqF,eAAiB,GAMtBrF,KAAKM,gBAAkB,SAAUC,KAQjCP,KAAK8C,oBAAsB,SAAUhB,KAAMwD,GAC/B,IAANxD,IAAS9B,KAAKqF,eAAiB,IACnC,IAAIE,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAI1F,KAAKqF,eAAeM,QAAQJ,IAAmB,KAGjDvF,KAAKqF,eAAenD,KAAKqD,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/4e/4C33-0.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { randint, combinaisonListes, listeQuestionsToContenu } from '../../modules/outils.js'\nimport { setReponse, ajouteChampTexteMathLive } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Utiliser la notation puissance'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true // pour définir que l'exercice est exportable AMC\nexport const amcType = 'AMCOpen'\n\nexport const dateDePublication = '21/11/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Passer d'un produit à la notation puissance et inversement\n * @author Guillaume Valmont\n * Référence 4C33-0\n*/\nexport default function NotationPuissance () {\n  Exercice.call(this)\n  this.nbQuestions = 4\n\n  this.besoinFormulaireNumerique = ['Type de calcul', 3, '1 : Écrire sous forme de produit\\n2 : Écrire sous forme de puissance\\n3 : Mélange'] // le paramètre sera numérique de valeur max 2 (le 2 en vert)\n  this.sup = 1\n  this.besoinFormulaire2Numerique = ['Exposant', 3, '1 : Positif\\n2 : Négatif\\n3 : Mélange']\n  this.sup2 = 1\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    let listeTypeDeQuestions\n    switch (this.sup) {\n      case 1:\n        this.consigne = 'Donner la signification des écritures suivantes'\n        listeTypeDeQuestions = ['produit']\n        break\n      case 2:\n        this.consigne = 'Simplifier l\\'écriture en utilisant la notation puissance'\n        listeTypeDeQuestions = ['puissance']\n        break\n      default:\n        this.consigne = ''\n        listeTypeDeQuestions = ['produit', 'puissance']\n        break\n    }\n    listeTypeDeQuestions = combinaisonListes(listeTypeDeQuestions, this.nbQuestions)\n    let listeSignesExposants\n    switch (this.sup2) {\n      case 1:\n        listeSignesExposants = ['positif']\n        break\n      case 2:\n        listeSignesExposants = ['négatif']\n        break\n      default:\n        listeSignesExposants = ['positif', 'négatif']\n        break\n    }\n    listeSignesExposants = combinaisonListes(listeSignesExposants, this.nbQuestions)\n    const listeSignes = combinaisonListes(['', '-'], this.nbQuestions)\n    const listeSignesMantisse = combinaisonListes(['', '-'], this.nbQuestions)\n    for (let i = 0, texte, texteCorr, a, b, pl, pr, apl, apr, signeContraire, produit, produitAlt, puissance, puissances, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n      a = randint(2, 10)\n      if (listeSignesMantisse[i] === '-') a = -a\n      if (listeTypeDeQuestions[i] === 'puissance') {\n        b = randint(2, 8)\n      } else {\n        b = randint(0, 5)\n      }\n      if (a < 0) {\n        pl = '('\n        pr = ')'\n        apl = ''\n        apr = ''\n      } else {\n        pl = ''\n        pr = ''\n        apl = '('\n        apr = ')'\n      }\n      listeSignes[i] === '-' ? signeContraire = '' : signeContraire = '-'\n      if (listeSignesExposants[i] === 'négatif') {\n        b = b * -1\n      }\n      puissance = `${listeSignes[i] + pl + a + pr}^{${b}}`\n      puissances = []\n      let exp\n      b < 0 ? exp = `{${b}}` : exp = `${b}` // distinction importante pour comparer les chaînes de caractères en interactif\n      puissances.push(`${listeSignes[i] + pl + a + pr}^${exp}`) // réponse de base\n      b % 2 === 0 ? puissances.push(`${listeSignes[i] + apl + -a + apr}^${exp}`) : puissances.push(`${signeContraire + apl + -a + apr}^${exp}`) // si l'exposant est pair, on peut changer le signe de la mantisse sans changer le signe devant et s'il est impair, on peut changer les deux signes\n      produit = `${pl + a + pr}`\n      produitAlt = produit\n      for (let j = 0; j < Math.abs(b) - 1; j++) {\n        produit += `\\\\times${pl + a + pr}`\n        produitAlt += `(${a})`\n      }\n      switch (listeTypeDeQuestions[i]) {\n        case 'produit':\n          if (this.sup === 3) {\n            texte = `Donner la signification de $${puissance}$.`\n          } else {\n            texte = `$${puissance}$`\n          }\n          texteCorr = `$${puissance} = `\n          if (b === 0) {\n            texteCorr += listeSignes[i] + 1 + '$'\n            setReponse(this, i, listeSignes[i] + 1, { formatInteractif: 'ignorerCasse' })\n          } else if (b === 1) {\n            if (listeSignes[i] === '') {\n              pl = ''\n              pr = ''\n            }\n            texteCorr += `${listeSignes[i] + pl + a + pr}$`\n            setReponse(this, i, listeSignes[i] + pl + a + pr, { formatInteractif: 'ignorerCasse' })\n          } else if (b > 1) {\n            texteCorr += listeSignes[i] + produit + '$'\n            setReponse(this, i, [listeSignes[i] + produit, listeSignes[i] + produitAlt], { formatInteractif: 'ignorerCasse' })\n          } else if (b === -1) {\n            texteCorr += `${listeSignes[i]}\\\\dfrac{1}{${a}}$`\n            setReponse(this, i, `${listeSignes[i]}\\\\frac{1}{${a}}`, { formatInteractif: 'ignorerCasse' })\n          } else if (b < -1) {\n            texteCorr += `${listeSignes[i]}\\\\dfrac{1}{${produit}}$`\n            setReponse(this, i, [`${listeSignes[i]}\\\\frac{1}{${produit}}`, `${listeSignes[i]}\\\\frac{1}{${produitAlt}}`], { formatInteractif: 'ignorerCasse' })\n          }\n          break\n        case 'puissance':\n          this.sup === 3 ? texte = 'Simplifier l\\'écriture en utilisant la notation puissance : ' : texte = ''\n          if (b < 0) {\n            texte += `$${listeSignes[i]} \\\\dfrac{1}{${produit}}$`\n            texteCorr = `$${listeSignes[i]} \\\\dfrac{1}{${produit}} = ${puissance}$`\n          } else {\n            texte += `$${listeSignes[i]} ${produit}$`\n            texteCorr = `$${listeSignes[i]} ${produit} = ${puissance}$`\n          }\n          setReponse(this, i, puissances, { formatInteractif: 'ignorerCasse' })\n          break\n      }\n      if (this.interactif) { // Si l'exercice est interactif\n        if (listeTypeDeQuestions[i] === 'produit') texte += ajouteChampTexteMathLive(this, i, 'inline fixed-width-400')\n        if (listeTypeDeQuestions[i] === 'puissance') texte += ajouteChampTexteMathLive(this, i, 'inline fixed-width-150')\n      }\n      if (context.isAmc) {\n        this.autoCorrection[i].propositions = [{ statut: 1, sanscadre: true, texte: texteCorr }]\n      }\n      // Si la question n'a jamais été posée, on l'enregistre\n      if (this.questionJamaisPosee(i, a, b, listeTypeDeQuestions[i], listeSignesExposants[i], listeSignes[i])) { // <- laisser le i et ajouter toutes les variables qui rendent les exercices différents (par exemple a, b, c et d)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","dateDePublication","NotationPuissance","Exercice","this","nbQuestions","besoinFormulaireNumerique","sup","besoinFormulaire2Numerique","sup2","nouvelleVersion","numeroExercice","listeTypeDeQuestions","listeSignesExposants","listeQuestions","listeCorrections","autoCorrection","consigne","combinaisonListes","listeSignes","listeSignesMantisse","texte","texteCorr","a","b","pl","pr","apl","apr","signeContraire","produit","produitAlt","puissance","puissances","i","cpt","exp","randint","push","j","Math","abs","setReponse","formatInteractif","interactif","ajouteChampTexteMathLive","context","propositions","statut","sanscadre","questionJamaisPosee","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}