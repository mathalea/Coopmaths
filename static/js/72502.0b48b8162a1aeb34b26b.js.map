{"version":3,"file":"js/72502.0b48b8162a1aeb34b26b.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/1e/1E11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, rienSi1, ecritureAlgebrique, ecritureAlgebriqueSauf1, ecritureParentheseSiNegatif, arrondiVirgule, texFractionReduite, texFractionSigne, texFraction } from '../../modules/outils.js'\n\nexport const titre = 'Résoudre une équation du second degré'\n\n/**\n * Calcul de discriminant pour identifier la forme graphique associée (0 solution dans IR, 1 ou 2)\n * @author Rémi Angot\n * Référence 1E11\n*/\nexport default function ResoudreEquationDegre2 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre dans $\\\\mathbb{R}$ les équations suivantes.'\n  this.nbQuestions = 4\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacingCorr = 3\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    if (this.sup === 1) {\n      listeTypeDeQuestions = combinaisonListes(['solutionsEntieres', 'solutionsEntieres', 'solutionDouble', 'pasDeSolution'], this.nbQuestions)\n    }\n    if (this.sup === 2) {\n      listeTypeDeQuestions = combinaisonListes(['factorisationParx', 'pasDeSolution', 'ax2+c', 'solutionsReelles', 'solutionDouble'], this.nbQuestions)\n    }\n    for (let i = 0, texte, texteCorr, a, b, c, x1, x2, y1, k, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      if (listeTypeDeQuestions[i] === 'solutionsEntieres') {\n        // k(x-x1)(x-x2)\n        x1 = randint(-5, 2, [0])\n        x2 = randint(x1 + 1, 5, [0, -x1])\n        k = randint(-4, 4, [0])\n        a = k\n        b = -k * x1 - k * x2\n        c = k * x1 * x2\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}=0$`\n\n        texteCorr = `$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta>0$ donc l\\'équation admet deux solutions : $x_1 = \\\\dfrac{-b-\\\\sqrt{\\\\Delta}}{2a}$ et $x_2 = \\\\dfrac{-b+\\\\sqrt{\\\\Delta}}{2a}$'\n        texteCorr += `<br>$x_1 =\\\\dfrac{${-b}-\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x1}$`\n        texteCorr += `<br>$x_2 =\\\\dfrac{${-b}+\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x2}$`\n        texteCorr += `<br>L'ensemble des solutions de cette équation est : $\\\\mathcal{S}=\\\\left\\\\{${x1} ; ${x2}\\\\right\\\\}$.`\n      }\n      if (listeTypeDeQuestions[i] === 'solutionDouble') {\n        // (dx+e)^2=d^2x^2+2dex+e^2\n        const d = randint(-11, 11, [-1, 1, 0])\n        const e = randint(-11, 11, [0, -1, 1])\n        a = d * d\n        b = 2 * d * e\n        c = e * e\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}=0$`\n\n        texteCorr = `Il est possible de factoriser le membre de gauche : $(${d}x${ecritureAlgebrique(e)})^2=0$. `\n        texteCorr += `On a alors une solution double : $${texFractionSigne(-e, d)}`\n        if (e % d === 0) {\n          texteCorr += `=${-e / d}$.`\n        } else {\n          texteCorr += '$.'\n        }\n        texteCorr += '<br> Si on ne voit pas cette factorisation, on peut utiliser le discriminant.'\n        texteCorr += `<br>$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += `<br>$\\\\Delta=0$ donc l'équation admet une unique solution : $${texFraction('-b', '2a')} = ${texFractionReduite(-b, 2 * a)}$`\n        if (b % (2 * a) === 0) {\n          texteCorr += `<br>L'ensemble des solutions de cette équation est : $\\\\mathcal{S}=\\\\left\\\\{${-b / (2 * a)}\\\\right\\\\}$.`\n        } else {\n          texteCorr += `<br>L'ensemble des solutions de cette équation est : $\\\\mathcal{S}=\\\\left\\\\{${texFractionReduite(-b, 2 * a)}\\\\right\\\\}$.`\n        }\n      }\n      if (listeTypeDeQuestions[i] === 'solutionsReelles') {\n        // ax^2+bx+c\n        a = randint(-11, 11, 0)\n        b = randint(-11, 11, 0)\n        c = randint(-11, 11, 0)\n        while (b ** 2 - 4 * a * c < 0 || [1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024, 1089].includes(b ** 2 - 4 * a * c)) {\n          a = randint(-11, 11, 0)\n          b = randint(-11, 11, 0)\n          c = randint(-11, 11, 0)\n        }\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}=0$`\n\n        texteCorr = `$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta>0$ donc l\\'équation admet deux solutions : $x_1 = \\\\dfrac{-b-\\\\sqrt{\\\\Delta}}{2a}$ et $x_2 = \\\\dfrac{-b+\\\\sqrt{\\\\Delta}}{2a}$'\n        texteCorr += `<br>$x_1 =\\\\dfrac{${-b}-\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}\\\\approx ${arrondiVirgule((-b - Math.sqrt(b ** 2 - 4 * a * c)) / (2 * a), 2)}$`\n        texteCorr += `<br>$x_2 =\\\\dfrac{${-b}+\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}\\\\approx ${arrondiVirgule((-b + Math.sqrt(b ** 2 - 4 * a * c)) / (2 * a), 2)}$`\n        texteCorr += `<br>L'ensemble des solutions de cette équation est : $\\\\mathcal{S}=\\\\left\\\\{\\\\dfrac{${-b}-\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}} ; \\\\dfrac{${-b}+\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}\\\\right\\\\}$.`\n      }\n      if (listeTypeDeQuestions[i] === 'factorisationParx') {\n        // x(ax+b)=ax^2+bx\n        a = randint(-11, 11, [0, -1, 1])\n        b = randint(-11, 11, 0)\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x=0$`\n\n        texteCorr = 'On peut factoriser le membre de gauche par $x$.'\n        texteCorr += `<br>$x(${rienSi1(a)}x${ecritureAlgebrique(b)})=0$`\n        texteCorr += '<br>Si un produit est nul alors l\\'un au moins de ses facteurs est nul.'\n        texteCorr += `<br>$x=0\\\\quad$ ou $\\\\quad${rienSi1(a)}x${ecritureAlgebrique(b)}=0$`\n        texteCorr += `<br>$x=0\\\\quad$ ou $\\\\quad x=${texFractionSigne(-b, a)}$`\n        texteCorr += `<br>L'ensemble des solutions de cette équation est : $\\\\mathcal{S}=\\\\left\\\\{0 ; ${texFractionReduite(-b, a)}\\\\right\\\\}$.`\n      }\n      if (listeTypeDeQuestions[i] === 'ax2+c') {\n        // x(ax+b)=ax^2+bx\n        a = randint(-11, 11, 0)\n        c = randint(-11, 11, 0)\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebrique(c)}=0$`\n\n        texteCorr = 'Il est possible de résoudre cette équation sans effectuer le calcul du discriminant.'\n        texteCorr += `<br> $x^2=${texFractionSigne(-c, a)}$`\n        if (-c / a > 0) {\n          if ([1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024, 1089].includes(-c / a)) {\n            texteCorr += `<br>$x=\\\\sqrt{${texFractionReduite(-c, a)}}=${Math.sqrt(-c / a)}\\\\quad$ ou $\\\\quad x=-\\\\sqrt{${texFractionReduite(-c, a)}}=${-Math.sqrt(-c / a)}$`\n            texteCorr += `<br><br>L'ensemble des solutions de cette équation est : $\\\\mathcal{S}=\\\\left\\\\{${Math.sqrt(-c / a)} ; ${-Math.sqrt(-c / a)}\\\\right\\\\}$.`\n          } else if (-c % a === 0) {\n            texteCorr += `<br>$x=\\\\sqrt{${-c / a}}\\\\quad$ ou $\\\\quad x=-\\\\sqrt{${-c / a}}$`\n            texteCorr += `<br><br>L'ensemble des solutions de cette équation est : $\\\\mathcal{S}=\\\\left\\\\{\\\\sqrt{${-c / a}} ; -\\\\sqrt{${-c / a}}\\\\right\\\\}$.`\n          } else {\n            texteCorr += `<br>$x=\\\\sqrt{${texFractionReduite(-c, a)}}\\\\quad$ ou $\\\\quad x=-\\\\sqrt{${texFractionReduite(-c, a)}}$`\n            texteCorr += `<br><br>L'ensemble des solutions de cette équation est : $\\\\mathcal{S}=\\\\left\\\\{\\\\sqrt{${texFractionReduite(-c, a)}} ; -\\\\sqrt{${texFractionReduite(-c, a)}}\\\\right\\\\}$.`\n          }\n        } else {\n          texteCorr += '<br>Dans $\\\\mathbb{R}$, un carré est toujours positif donc cette équation n\\'a pas de solution.'\n          texteCorr += '<br>$\\\\mathcal{S}=\\\\emptyset$'\n        }\n      }\n      if (listeTypeDeQuestions[i] === 'pasDeSolution') {\n        k = randint(1, 5)\n        x1 = randint(-3, 3, [0])\n        y1 = randint(1, 5)\n        if (choice(['+', '-']) === '+') { // k(x-x1)^2 + y1 avec k>0 et y1>0\n          a = k\n          b = -2 * k * x1\n          c = k * x1 * x1 + y1\n        } else { // -k(x-x1)^2 -y1 avec k>0 et y1>0\n          a = -k\n          b = 2 * k * x1\n          c = -k * x1 * x1 - y1\n        }\n        texte = `$${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}=0$`\n        if (b === 0) {\n          texte = `$${rienSi1(a)}x^2${ecritureAlgebrique(c)}=0$`\n        }\n        texteCorr = `$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta<0$ donc l\\'équation n\\'admet pas de solution.'\n        texteCorr += '<br>$\\\\mathcal{S}=\\\\emptyset$'\n      }\n\n      if (this.questionJamaisPosee(i, a, b, c)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Solutions entières\\n2 : Solutions réelles et calcul du discriminant non obligatoire']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ResoudreEquationDegre2","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","spacingCorr","sup","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","combinaisonListes","texte","texteCorr","a","b","c","x1","x2","y1","k","i","cpt","randint","rienSi1","ecritureAlgebriqueSauf1","ecritureAlgebrique","ecritureParentheseSiNegatif","d","e","texFractionSigne","texFraction","texFractionReduite","includes","arrondiVirgule","Math","sqrt","choice","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}