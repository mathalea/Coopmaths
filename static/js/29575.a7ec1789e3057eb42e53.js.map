{"version":3,"file":"js/29575.a7ec1789e3057eb42e53.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N50-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import { fraction } from '../../modules/fractions'\nimport Exercice from '../Exercice.js'\nimport { randint, texNombrec, miseEnEvidence, texteGras, sp, prenom, itemize, texteEnCouleur, numAlpha, listeQuestionsToContenu, combinaisonListes, texNombre, texFractionReduite, reduireAxPlusB } from '../../modules/outils.js'\n\nexport const titre = 'Modéliser une situation  à l\\'aide d\\'une équation'\nexport const dateDePublication = '16/12/2021'\n/**\n * Description didactique de l'exercice\n * @author Gilles Mora\n * Référence\n */\nexport default function modeliserEquations () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 1\n  // this.nbQuestionsModifiable = false\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 3\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typeDeQuestionsDisponibles\n    if (this.sup === 1) {\n      typeDeQuestionsDisponibles = ['typeE1', 'typeE2', 'typeE3', 'typeE4']\n    } else if (this.sup === 2) {\n      typeDeQuestionsDisponibles = ['typeE5', 'typeE6', 'typeE7', 'typeE8']\n    } else if (this.sup === 3) {\n      typeDeQuestionsDisponibles = ['typeE1', 'typeE2', 'typeE3', 'typeE4', 'typeE5', 'typeE6', 'typeE7', 'typeE8']\n    }\n    //\n    const listeTypeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, a, b, c, d, e, N, f, j, t, res, taux, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'typeE1':\n          j = randint(10, 20) * 10// prime janvier\n          f = randint(15, 20) * 10// prime fevrier\n          b = randint(6, 9) * 10\n          a = f - j + b// augmentation\n          t = randint(3, 6)\n          taux = fraction(t, 100)\n          texte = `  Le salaire mensuel d'un commercial est composé d'un salaire fixe auquel\n                  s'ajoute une prime suivant ses objectifs.<br>\n                   Au mois de janvier, son salaire fixe est $x$ € et sa prime a été de $${j}$ €.  <br>\n                  Au mois de février son salaire fixe a augmenté de $${t}$ % et il reçoit une prime de $${f}$ €. <br>\n                  Globalement, son salaire au mois\n                  de février a augmenté de $${a}$ € par rapport à celui du mois de janvier. <br>\n                  ${numAlpha(0)} Exprimer en fonction de $x$ son salaire au mois de janvier, puis celui du mois de février.<br>\n                  ${numAlpha(1)} Déterminer le salaire du commercial au mois de janvier (arrondir à l'euro près).<br>\n              `\n\n          texteCorr = `${numAlpha(0)} Le salaire du mois de janvier en fonction de $x$ est : $x+${j}$.<br>\n            Le salaire du mois de février en fonction de $x$ est : $\\\\left(1+${taux.texFraction}\\\\right)x+${f}=${texNombrec(1 + t / 100)}x+${f}$.<br>\n            ${numAlpha(1)} Globalement, le salaire au mois\n                  de février a augmenté de $${a}$ € par rapport à celui du mois de janvier, cela signifie que le salaire du\n                   mois de janvier augmenté de $${a}$ € est donc égal au salaire du mois de février.<br>\n            Ainsi, $(x+${j})+${a}=${texNombrec(1 + t / 100)}x+${f}$<br>\n            On résout l'équation :<br>\n          ${sp(8)} $ \\\\begin{aligned}\n                        x+${texNombrec(j + a)}&=(1+${texNombrec(t / 100)})x+${f}\\\\\\\\\n                       x+${texNombrec(j + a)}&=${texNombrec(1 + t / 100)}x+${f}\\\\\\\\\n                       x+${texNombrec(j + a)}-${miseEnEvidence(texNombrec(j + a))}&=${texNombrec(1 + t / 100)}x+${f}-${miseEnEvidence(texNombrec(j + a))}\\\\\\\\\n            x&=${texNombrec(1 + t / 100)}x${texNombrec(f - j - a)}\\\\\\\\\n            x-${miseEnEvidence(texNombrec(1 + t / 100))}${miseEnEvidence('\\\\textit{x}')}&=${texNombrec(1 + t / 100)}x${texNombrec(f - j - a)}-${miseEnEvidence(texNombrec(1 + t / 100))}${miseEnEvidence('\\\\textit{x}')}\\\\\\\\\n            \\\\dfrac{${texNombrec(-t / 100)}x}{${miseEnEvidence(texNombrec(-t / 100))}}&=\\\\dfrac{${texNombrec(f - j - a)}}{${miseEnEvidence(texNombrec(-t / 100))}}\\\\\\\\\n            x&=\\\\dfrac{${texNombrec(f - j - a)}}{${texNombrec(-t / 100)}}\n            \\\\end{aligned}$<br>`\n          if (Math.round((f - j - a) / (-t / 100)) === (f - j - a) / (-t / 100)) {\n            texteCorr += ` ${sp(40)}$ \\\\begin{aligned}\n            x&= ${Math.round((f - j - a) / (-t / 100))}\n            \\\\end{aligned}$<br>`\n          } else {\n            texteCorr += ` ${sp(40)}$ \\\\begin{aligned}\n            x&\\\\simeq ${Math.round((f - j - a) / (-t / 100))}\n            \\\\end{aligned}$<br>`\n          }\n\n          texteCorr += `Puisque le salaire est composé du fixe et de la prime, le salaire de ce commercial au mois de janvier a été de :\n      $${Math.round((f - j - a) / (-t / 100))}+${j}$ €, soit  $${Math.round((f - j - a) / (-t / 100) + j)}$ €.`\n\n          break\n        case 'typeE2':\n\n          a = randint(20, 30) //\n          b = randint(a + 5, 50) //\n          c = randint(20, 35) / 100\n          d = randint(15, c - 1) / 100\n\n          texte = `  Une société de location de véhicules particulière propose deux tarifs :<br>\n                $\\\\bullet$ Tarif A : un forfait de $${a}$ € et $${texNombre(c)}$ € par km parcouru ;<br>\n                $\\\\bullet$  Tarif B : un forfait de $${b}$ € et $${texNombre(d)}$ € par km parcouru ;<br>\n          \n                       Pour combien de km (arrondi à l'unité), les deux tarifs sont-ils égaux ?<br>\n                                      `\n          texteCorr = `En notant $x$, le nombre de km parcourus, on a :<br>\n                $\\\\bullet$ Avec le tarif A, le prix à payer est : $${reduireAxPlusB(c, a)}$ ;<br>\n                $\\\\bullet$  Avec le tarif B, le prix à payer est : $${reduireAxPlusB(d, b)}$ ;<br>\n                          Les deux tarifs sont identiques lorsque : $${reduireAxPlusB(c, a)}=${reduireAxPlusB(d, b)}$.<br>\n                On résout l'équation :<br>\n                $\\\\begin{aligned}\n                ${texNombrec(c)}x+${a}&=${texNombrec(d)}x+${b}\\\\\\\\\n                 ${texNombrec(c)}x-${miseEnEvidence(texNombrec(d))}${miseEnEvidence('\\\\textit{x}')}+${a}&=${texNombrec(d)}x+${b}-${miseEnEvidence(texNombrec(d))}${miseEnEvidence('\\\\textit{x}')}\\\\\\\\\n                       ${texNombrec(c - d)}x+${a}&=${b}\\\\\\\\\n                ${texNombrec(c - d)}x+${a}-${miseEnEvidence(texNombrec(a))}&=${b}-${a}\\\\\\\\\n                ${texNombrec(c - d)}x&=${b - a}\\\\\\\\\n        \\\\dfrac{${texNombrec(c - d)}x}{${miseEnEvidence(texNombrec(c - d))}}&=\\\\dfrac{${b - a}}{${miseEnEvidence(texNombrec(c - d))}}\\\\\\\\\n        \\\\end{aligned}$<br>`\n          if (Math.round((b - a) / (c - d)) === (b - a) / (c - d)) {\n            texteCorr += ` ${sp(40)}$ \\\\begin{aligned}\n                            x&= ${Math.round((b - a) / (c - d))}\n                            \\\\end{aligned}$<br>\n                                            C'est pour une distance de $${Math.round((b - a) / (c - d))}$ km que les deux tarifs sont identiques.\n               `\n          } else {\n            texteCorr += ` ${sp(40)}$ \\\\begin{aligned}\n                            x&\\\\simeq ${Math.round((b - a) / (c - d))}\n                            \\\\end{aligned}$<br>\n                                         C'est pour une distance d'environ $${Math.round((b - a) / (c - d))}$ km que les deux tarifs sont identiques.\n                                `\n          }\n\n          break\n        case 'typeE3':\n          a = randint(4, 10) / 100 //\n          b = randint(300, 400) //\n          c = randint((a + 1) * 100, 12) / 100\n          texte = `  Une usine fabrique des bouteilles en verre. <br>\n            En notant $x$ le nombre de bouteilles fabriquées dans une journée, les coûts de fabrication en euros, sont donnés par :\n            $${texNombre(a)}x+${texNombre(b)}$.<br>\n            Ces bouteilles sont toutes revendues au tarif unitaire de $${texNombrec(c)}$ €.<br>\n            On appelle recette le produit du nombre de bouteilles vendues par le prix unitaire.<br>\n            On appelle résultat net de l'entreprise (lorsqu'elle produit et vend $x$ bouteilles), la différence entre la recette et les coûts de fabrication.<br>\n      \n      Combien de bouteilles l'entreprise doit-elle produire et vendre pour que le résultat net soit nul ?\n            <br>\n                          `\n          texteCorr = `\n      $\\\\bullet$ La recette est donnée par : $${texNombrec(c)}\\\\times x=${texNombrec(c)}x$ ;<br>\n      $\\\\bullet$ Les coûts de fabrication sont donnés par : $${texNombrec(a)}x+${texNombrec(b)}$ ;<br>\n      $\\\\bullet$ Le résultat net est donné par la différence entre la recette et les coûts, donc par :<br>\n       $${texNombrec(c)}x-(${texNombrec(a)}x+${texNombrec(b)})=${texNombrec(c)}x-${texNombrec(a)}x-${texNombrec(b)}=${texNombrec(c - a)}x-${texNombrec(b)}$.<br>\n            Le résultat est nul lorsque  : $${texNombrec(c - a)}x-${texNombrec(b)}=0$<br>\n            On résout l'équation :<br>\n           $\\\\begin{aligned}\n                  ${texNombrec(c - a)}x-${texNombrec(b)}+${miseEnEvidence(texNombre(b))}&=0+${miseEnEvidence(texNombrec(b))}\\\\\\\\\n            ${texNombrec(c - a)}x&=${texNombrec(b)}\\\\\\\\\n            \\\\dfrac{${texNombrec(c - a)}x}{${miseEnEvidence(texNombrec(c - a))}}&=\\\\dfrac{${texNombrec(b)}}{${miseEnEvidence(texNombrec(c - a))}}\\\\\\\\\n                 \\\\end{aligned}$<br>`\n          if (Math.round((b) / (c - a)) === b / (c - a)) {\n            texteCorr += `${sp(37)} $\\\\begin{aligned}\n         x&=${Math.round((b) / (c - a))}\n         \\\\end{aligned}$<br>\n            C'est pour une production de $${Math.round((b) / (c - a))}$ bouteilles  que le résultat net de l'entreprise est nul.     \n        `\n          } else {\n            texteCorr += `${sp(37)} $\\\\begin{aligned}\n        x&\\\\simeq${Math.round((b) / (c - a))}\n        \\\\end{aligned}$<br>\n           C'est pour une production d'environ $${Math.round((b) / (c - a))}$ bouteilles  que le résultat net de l'entreprise est nul.     \n       `\n          }\n\n          break\n        case 'typeE4':\n\n          a = randint(48, 55) //\n          b = randint(3, 6) //\n          N = randint(12, 25)\n          d = randint(3, 5)\n          c = N * (a + b) - d * a\n\n          texte = `  $${a}$ élèves  d'un lycée font une sortie théâtre. Ils sont accompagnés de $${b}$ adultes. <br>\n            Les élèves bénéficient d'un tarif réduit. Ils paient $${d}$ € de moins que les adultes. <br>\n            Le coût total de cette sortie (élèves $+$ adultes) est de $${c}$ €. <br>\n            En notant $x$ le tarif pour un adulte, modéliser la situation à l'aide d'une équation puis déterminer le prix de la place pour un adulte.\n      \n              `\n\n          texteCorr = `En notant $x$ le tarif pour un adulte,  celui d'un élève est $(x-${d})$ €. <br>\n            Puisque le coût total est de $${c}$ €, on obtient l'équation : <br>\n            $\\\\begin{aligned}\n            ${a}\\\\times (x-${d})+${b}\\\\times x &=${c}\\\\\\\\\n                        ${texNombrec(a)}x-${texNombrec(a * d)}+${b} x &=${c}\\\\\\\\\n            ${texNombrec(a + b)}x-${texNombrec(a * d)} &=${c}\\\\\\\\\n            ${texNombrec(a + b)}x-${texNombrec(a * d)}+${miseEnEvidence(texNombrec(a * d))} &=${c}+${miseEnEvidence(texNombrec(a * d))}\\\\\\\\\n            ${texNombrec(a + b)}x &=${texNombrec(c + a * d)}\\\\\\\\\n            \\\\dfrac{${texNombrec(a + b)}x}{${miseEnEvidence(texNombrec(a + b))}} &= \\\\dfrac{${texNombrec(c + a * d)}}{${miseEnEvidence(texNombrec(a + b))}}\\\\\\\\\n            x &= ${texNombrec((c + a * d) / (a + b))}\\\\end{aligned}$<br>\n      Le prix de la place de théâtre pour un adulte est : $${texNombrec((c + a * d) / (a + b))}$ €.\n              `\n\n          break\n        case 'typeE5':\n\n          a = randint(4, 10)\n          b = randint(2, 10)\n          c = randint(2, 10)\n          res = randint(-5, 5)\n          texte = ` ${texteGras('Voici un programme de calcul :')} `\n          texte += itemize(['Choisir un nombre', `Multiplier ce nombre par $${a}$`, `Ajouter $${b}$`, `Multiplier le résultat par $${c}$`])\n          texte += `Quel nombre doit-on choisir au départ pour obtenir $${res}$ comme résultat final ?<br>\n               On donnera le résultat sous la forme d'une fraction irréductible ou d'un nombre entier le cas échéant.`\n\n          texteCorr = `En notant $x$ le nombre choisi au départ, on obtient  :<br>\n          $\\\\bullet$ Multiplier ce nombre par $${a}$ : ${sp(6)}$${a}\\\\times x=${a}x$ ;<br>\n          $\\\\bullet$ Ajouter $${b}$ : ${sp(6)}$${a}x+${b}$ ; <br>\n          $\\\\bullet$ Multiplier le résultat par $${c}$ :${sp(6)}$${c}\\\\times (${a}x+${b})=${texNombrec(c * a)}x+${texNombrec(b * c)}$.<br>\n          <br>\n          On cherche $x$ tel que : <br>\n          $\\\\begin{aligned}\n          ${texNombrec(c * a)}x+${texNombrec(b * c)}&=${texNombrec(res)}\\\\\\\\\n         ${texNombrec(c * a)}x+${texNombrec(b * c)}-${miseEnEvidence(texNombrec(b * c))}&=${texNombrec(res)}-${miseEnEvidence(texNombrec(b * c))}\\\\\\\\\n         ${texNombrec(c * a)}x&=${texNombrec(res - b * c)}\\\\\\\\\n         \\\\dfrac{${texNombrec(c * a)}x}{${miseEnEvidence(texNombrec(c * a))}}&=\\\\dfrac{${texNombrec(res - b * c)}}{${miseEnEvidence(texNombrec(c * a))}}\\\\\\\\\n         x&=${texFractionReduite(res - b * c, c * a)}\n         \\\\end{aligned}$<br>\n           Le nombre que l'on doit choisir pour obtenir $${res}$ à la fin du programme est :  $${texFractionReduite(res - b * c, c * a)}$.        \n                     `\n          break\n        case 'typeE6':\n          a = randint(2, 10)\n          b = randint(2, 10)\n          c = randint(2, 10, [a])\n          d = prenom()\n          e = prenom()\n\n          texte = `${d} choisit un nombre, le multiplie par $${a}$ puis ajoute $${b}$.  <br>\n           ${e} choisit le même nombre, lui ajoute $${c}$, multiplie le résultat par le nombre de départ, puis soustrait le carré du nombre de départ.<br>\n            Quel nombre doivent-ils choisir au départ pour obtenir le même résultat ?`\n\n          texteCorr = `En notant $x$ le nombre choisi au départ, on obtient :<br>\n          $\\\\bullet$  avec le calcul de ${d} :\n      $${a}\\\\times x+${b}=${a}x+${b}$ ;<br>\n              $\\\\bullet$ avec celui de ${e}, on obtient : <br>\n      $(x+${c})\\\\times x-x^2=\\\\cancel{x^2}+${c}x-\\\\cancel{x^2}=${c}x$.<br>\n      <br>\n      On cherche donc $x$ tel que : <br>\n      $\\\\begin{aligned}\n      ${a}x+${b}&=${c}x\\\\\\\\\n      ${a}x+${b}-${miseEnEvidence(texNombrec(c))}${miseEnEvidence('\\\\textit{x}')}&=${c}x-${miseEnEvidence(texNombrec(c))}${miseEnEvidence('\\\\textit{x}')}\\\\\\\\\n      ${reduireAxPlusB(a - c, 0)}+${b}&=0\\\\\\\\\n      ${reduireAxPlusB(a - c, 0)}+${b}-${miseEnEvidence(b)}&=0-${miseEnEvidence(b)}\n      \\\\end{aligned}$<br>`\n          if (a - c === 1) {\n            texteCorr += `${sp(25)}$x=-${b}$<br>\n           Le nombre commun que ${d} et ${e} doivent choisir au départ pour obtenir le même résultat est : $-${b}$.\n                  `\n          } else {\n            texteCorr += ` \n            ${sp(20)}$ \\\\begin{aligned}\n           \\\\dfrac{${a - c}x}{${miseEnEvidence(a - c)}}&=\\\\dfrac{${-b}}{${miseEnEvidence(a - c)}}\\\\\\\\\n           x&=${texFractionReduite(-b, a - c)}\n           \\\\end{aligned}$<br>\n          Le nombre commun que ${d} et ${e} doivent choisir au départ pour obtenir le même résultat est : $${texFractionReduite(-b, a - c)}$.`\n          }\n          break\n\n        case 'typeE7':\n          a = randint(2, 8)\n\n          b = randint(10, 100)\n\n          texte = `On donne les deux programmes de calcul suivants :<br>\n          ${texteGras('Programme 1 :')}<br>\n                 `\n          texte += itemize(['Choisir un nombre', `Ajouter $${a}$`, 'Prendre le carré du résultat'])\n\n          texte += `<br>\n          ${texteGras('Programme 2 :')}<br>\n                      `\n          texte += itemize(['Choisir un nombre', `Multiplier par $${texNombrec(2 * a)}$ `, `Ajouter $${b}$`])\n          texte += '<br>Déterminer les nombres éventuels que l\\'on peut entrer dans ces deux programmes pour qu\\'au final ils donnent le même résultat.<br><br>'\n          texteCorr = `En notant $x$ le nombre choisi au départ : <br>\n                 \n                 On obtient avec le ${texteGras('programme 1 :')} <br>\n      $\\\\bullet$ Ajouter $${a}$ :${sp(5)} $x+${a}$ ;<br>\n      $\\\\bullet$ Prendre le carré du résultat :${sp(5)} $(x+${a})^2=x^2+2\\\\times x\\\\times ${a}+${a}^2=x^2+${texNombrec(2 * a)}x+${texNombrec(a * a)}$ ;<br>\n                  <br> On obtient avec le ${texteGras('programme 2 :')} <br>\n      $\\\\bullet$ Multiplier par $${texNombrec(2 * a)}$ :${sp(5)} $x\\\\times ${texNombrec(2 * a)}=${texNombrec(2 * a)}x$ ;<br>\n      $\\\\bullet$ Ajouter $${b}$ : ${sp(5)} $${texNombrec(2 * a)}x+${b}$.<br><br>\n      Les deux programmes donnent le même résultat lorsque : <br>\n      $\\\\begin{aligned}\n      x^2+${texNombrec(2 * a)}x+${texNombrec(a * a)}&=${texNombrec(2 * a)}x+${b}\\\\\\\\\n      x^2+${texNombrec(2 * a)}x+${texNombrec(a * a)}-${miseEnEvidence(texNombrec(2 * a))}${miseEnEvidence('\\\\textit{x}')}&=${texNombrec(2 * a)}x+${b}-${miseEnEvidence(texNombrec(2 * a))}${miseEnEvidence('\\\\textit{x}')}\\\\\\\\\n      x^2+${texNombrec(a * a)}&=${b}\\\\\\\\\n      x^2+${texNombrec(a * a)}-${miseEnEvidence(texNombrec(a * a))}&=${b}-${miseEnEvidence(texNombrec(a * a))}\\\\\\\\\n      x^2&=${texNombrec(b - a * a)}\n      \\\\end{aligned}$\n      <br>\n            `\n          if (b < a * a) {\n            texteCorr += `\n           L'équation n'a pas de solution car $${texNombrec(b - a * a)}<0$. <br>Par conséquent il n'existe pas de nombre qui donne le même résultat avec les deux programmes.\n                  `\n          } else {\n            if (b === a * a) {\n              texteCorr += `${sp(8)}$\\\\begin{aligned}x&=-${b}\\\\\\\\\n              x&=0\n              \\\\end{aligned}<br>\n           Quand on entre $0$, les deux programmes donnent le même résultat.\n                  `\n            } else {\n              if (b - a * a === 1 || b - a * a === 4 || b - a * a === 9 || b - a * a === 16 || b - a * a === 25 || b - a * a === 36 || b - a * a === 49 || b - a * a === 64 || b - a * a === 81 || b - a * a === 100) {\n                texteCorr += `${sp(10)}$x=-${Math.sqrt(b - a * a)}$ ou $x=${Math.sqrt(b - a * a)}$.<br>\n              Quand on entre $-${Math.sqrt(b - a * a)}$ ou $-${Math.sqrt(b - a * a)}$, on obtient le même résultat avec les deux programmes.\n                  `\n              } else {\n                texteCorr += `${sp(10)}$x=-\\\\sqrt{${b - a * a}}$ ou $x=\\\\sqrt{${b - a * a}}$.<br>\n              Quand on entre   $-\\\\sqrt{${b - a * a}}$ ou $\\\\sqrt{${b - a * a}}$, on obtient le même résultat avec les deux programmes.\n            `\n              }\n            }\n          }\n          break\n        case 'typeE8':\n\n          a = randint(2, 10)\n          b = randint(2, 10)\n          c = randint(2, 10)\n          d = randint(2, 10)\n\n          texte = `On donne les deux programmes de calcul suivants :<br>\n          ${texteGras('Programme 1 :')}<br>\n                   `\n          texte += itemize(['Choisir un nombre', 'Prendre l\\'opposé de ce nombre', `Multiplier par $${b}$`, `Ajouter $${a}$`])\n\n          texte += `<br>\n          ${texteGras('Programme 2 :')}<br>\n                        `\n          texte += itemize(['Choisir un nombre', `Multiplier par $${c}$ `, `Ajouter $${d}$`])\n          texte += `<br>On entre le même nombre dans chacun des deux programmes de calcul et on effectue le produit de ces deux nombres. <br>\n              Quel(s) nombre(s) doit-on entrer pour que ce produit soit nul ?<br><br>`\n          texteCorr = `En notant $x$ le nombre choisi au départ : <br>\n                   \n                   On obtient avec le ${texteGras('programme 1 :')} :<br>\n        $\\\\bullet$ Prendre l'opposé de ce nombre :${sp(10)} $-x$ <br>\n        $\\\\bullet$ Multiplier par $${b}$ :${sp(10)} $${b}\\\\times (-x)= -${b}x$ <br>\n        $\\\\bullet$ Ajouter $${a}$ :${sp(10)} $-${b}x+${a}$ <br>\n                <br> On obtient avec le ${texteGras('programme 1 :')} :<br>\n        $\\\\bullet$ Multiplier par $${c}$ :${sp(10)} $x\\\\times ${c}=${c}x$ <br>\n        $\\\\bullet$ Ajouter $${d}$ : ${sp(10)} $${c}x+${d}$<br>\n        \n        Le produit des deux nombres obtenu à l'issue de ces deux programmes est  : $(-${b}x+${a})(${c}x+${d})$<br>\n        On cherche les valeurs de $x$ pour que ce produit soit nul c'est-à-dire les solutions de l'équation : $(-${b}x+${a})(${c}x+${d})=0$.<br>\n        \n        On reconnaît une équation produit nul.<br>\n        ${texteEnCouleur('Un produit est nul si et seulement si au moins un de ses facteurs est nul.')}<br>\n        \n        $\\\\begin{aligned}\n        -${b}x+${a}=0  &${sp(2)}\\\\text{ou}${sp(2)}  ${c}x+${d}=0\\\\\\\\\n                -${b}x+${a}-${miseEnEvidence(a)}=0-${miseEnEvidence(a)}&${sp(2)}\\\\text{ou}${sp(2)} ${c}x+${d}-${miseEnEvidence(d)}=0-${miseEnEvidence(d)}\\\\\\\\\n        -${b}x=-${a}&${sp(2)}\\\\text{ou}${sp(2)}${c}x=${-d}\\\\\\\\\n        \\\\dfrac{-${b}x}{${miseEnEvidence(-b)}}=\\\\dfrac{-${a}}{${miseEnEvidence(-b)}} &${sp(2)}\\\\text{ou} ${sp(2)}\\\\dfrac{-${d}x}{${miseEnEvidence(c)}}=\\\\dfrac{-${d}}{${miseEnEvidence(c)}}\\\\\\\\\n        x=${texFractionReduite(-a, -b)}&${sp(2)}\\\\text{ou}${sp(2)}x=${texFractionReduite(-d, c)}\\\\end{aligned}$<br>\n              On obtient $0$ en faisant le produit des deux résultats de ces programmes en choisissant comme nombres au départ : $${texFractionReduite(-a, -b)}$ ou $${texFractionReduite(-d, c)}$. \n              `\n\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Choix des questions', 3, '1 : Situations concrètes\\n2 : Programmes de calculs\\n3 : Mélange']\n}","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","dateDePublication","modeliserEquations","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","typeDeQuestionsDisponibles","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","a","b","c","d","e","N","f","j","t","res","taux","texte","texteCorr","i","cpt","randint","fraction","numAlpha","texFraction","texNombrec","sp","miseEnEvidence","Math","round","texNombre","reduireAxPlusB","texteGras","itemize","texFractionReduite","prenom","sqrt","texteEnCouleur","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}