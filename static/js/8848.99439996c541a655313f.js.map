{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G21.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["amcReady","amcType","titre","Reciproque_Thales","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","sortieHtml","spacingCorr","spacing","nbCols","nbColsCorr","quatrieme","sup","sup2","listePackages","typeExercice","nouvelleVersion","numeroExercice","qcm","listeQuestions","listeCorrections","lettre1","randint","s1","lettreDepuisChiffre","lettre2","s2","lettre3","s3","lettre4","s4","lettre5","s5","k2","dist24","x2","y2","x3","y3","k","abs","dist12","Math","round","sqrt","dist13","dist15","arrondi","dist14","dist35","texte","texteCorr","s13","texNombre","s12","s15","s14","s24","s35","codeBase64","dimensionsDivMg32","miseEnEvidence","texNombrec","MG32codeBase64","mg32init","mtg32App","idDoc","giveFormula2","rename","calculate","display","push","listeQuestionsToContenu","listeQuestionsToContenuSansNumero","texFraction","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable"],"mappings":"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","file":"js/8848.99439996c541a655313f.js","sourcesContent":["import Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenu, listeQuestionsToContenuSansNumero, randint, arrondi, abs, texNombrec, lettreDepuisChiffre, texNombre, miseEnEvidence, texFraction } from '../../modules/outils.js'\n\nexport const amcReady = true\nexport const amcType = 3 // type de question AMC\n\nexport const titre = 'Contrôler si deux droites sont parallèles'\n\n/**\n * Reciproque_Thales\n * @Auteur Jean-Claude Lhote\n * 3G21\n */\nexport default function Reciproque_Thales () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  sortieHtml ? (this.spacingCorr = 3.5) : (this.spacingCorr = 1)\n  sortieHtml ? (this.spacing = 2) : (this.spacing = 1.5)\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.quatrieme = false\n  this.sup = 1\n  this.sup2 = 1\n  this.listePackages = 'tkz-euclide'\n  this.typeExercice = 'MG32'\n\n  // let s1='A',s2='B',s3='C',s4='M',s5='N'\n  // coefficient de l'homothétie compris entre -0,8 et -0,2 ou entre 0,2 et 0,8 pour éviter les constructions trop serrées\n  this.nouvelleVersion = function (numeroExercice) {\n    this.qcm = ['3G21', [], 'Contrôler si deux droites sont parallèles', 3, {}]\n    this.listeQuestions = []\n    this.listeCorrections = []\n    const lettre1 = randint(1, 26) // aleatoirisation du nom des points\n    const s1 = lettreDepuisChiffre(lettre1)\n    const lettre2 = randint(1, 26, [lettre1])\n    const s2 = lettreDepuisChiffre(lettre2)\n    const lettre3 = randint(1, 26, [lettre1, lettre2])\n    const s3 = lettreDepuisChiffre(lettre3)\n    const lettre4 = randint(1, 26, [lettre1, lettre2, lettre3])\n    const s4 = lettreDepuisChiffre(lettre4)\n    const lettre5 = randint(1, 26, [lettre1, lettre2, lettre3, lettre4])\n    const s5 = lettreDepuisChiffre(lettre5)\n    let x2 = randint(2, 4)\n    let y2 = randint(3, 5)\n    let x3 = randint(5, 6)\n    let y3 = randint(-2, 1)\n    let k = (randint(2, 8) * randint(-1, 1, [0])) / 10\n    let k2\n    if (this.sup2 == 1) { k2 = k } else if (this.sup2 == 3) { k2 = k * (1 + randint(0, 1) * 0.1) } else { k2 = k * (1 + randint(-1, 1, 0) * 0.1) }\n\n    if (this.quatrieme) {\n      k = abs(k)\n      k2 = abs(k2)\n    }\n    let dist24\n    let dist12 = Math.round(Math.sqrt(x2 * x2 + y2 * y2))\n    let dist13 = Math.round(Math.sqrt(x3 * x3 + y3 * y3))\n    while (dist12 == dist13) {\n      // éviter les triangles isocèles imbriqués qui ne nécéssitent aucun calculs.\n      x2 = randint(2, 4)\n      y2 = randint(3, 5)\n      x3 = randint(5, 6)\n      y3 = randint(-2, 1)\n      dist12 = Math.round(Math.sqrt(x2 * x2 + y2 * y2))\n      dist13 = Math.round(Math.sqrt(x3 * x3 + y3 * y3))\n    }\n    const dist15 = arrondi(dist13 * abs(k), 1)\n    const dist14 = arrondi(dist12 * abs(k2), 1)\n    let dist35\n\n    if (k < 0) {\n      dist35 = dist13 + dist15\n      dist24 = dist12 + dist14\n    } else {\n      dist35 = dist13 - dist15\n      dist24 = dist12 - dist14\n    }\n\n    let texte, texteCorr\n    // On ne garde qu'une approximation au dixième pour l'exercice\n    // mise en texte avec 1 chiffres après la virgule pour énoncé\n    const s13 = texNombre(dist13)\n    const s12 = texNombre(dist12)\n    const s15 = texNombre(dist15)\n    const s14 = texNombre(dist14)\n    const s24 = texNombre(dist24)\n    const s35 = texNombre(dist35)\n    // num1 = arrondi(dist12 * 100);\n    // den1 = arrondi(dist14 * 100);\n    // num2 = arrondi(dist13 * 100);\n    // den2 = arrondi(dist15 * 100);\n    // let fraction1 = [],\n    //   fraction2 = [];\n    //  fraction1 = fractionSimplifiee(num1, den1);\n    // fraction2 = fractionSimplifiee(num2, den2);\n    if (sortieHtml) {\n      this.typeExercice = 'MG32'\n      this.dimensionsDivMg32 = [700, 500]\n      let codeBase64\n\n      if (k < 0) {\n        codeBase64 =\n          'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAYfAAADsgAAAQEAAAAAAAAAAQAAACX#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAJBJwBANgAAAAAAAEAzAAAAAAAABwABQHYBR64UeuFAcdwo9cKPXP####8AAAABABRDRHJvaXRlRGlyZWN0aW9uRml4ZQD#####AQAAAAAQAAABAAEAAAABAT#wAAAAAAAA#####wAAAAEAD0NQb2ludExpZURyb2l0ZQD#####AQAAAAAQAAJJJwDAGAAAAAAAAAAAAAAAAAAABQABQEerQ5WBBiUAAAAC#####wAAAAEACUNEcm9pdGVBQgD#####AQAAAAASAAABAAEAAAABAAAAA#####8AAAABABZDRHJvaXRlUGVycGVuZGljdWxhaXJlAP####8BAAAAABAAAAEAAQAAAAEAAAAE#####wAAAAEACUNDZXJjbGVPQQD#####AQAAAAABAAAAAQAAAAP#####AAAAAQAQQ0ludERyb2l0ZUNlcmNsZQD#####AAAABQAAAAb#####AAAAAQAQQ1BvaW50TGllQmlwb2ludAD#####AQAAAAAQAAABBQABAAAABwAAAAkA#####wEAAAAAEAACSicAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAASAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MgABMgAAAAFAAAAAAAAAAAAAABEA#####wACeTIAATUAAAABQBQAAAAAAAAAAAARAP####8AAngzAAE2AAAAAUAYAAAAAAAAAAAAEQD#####AAJ5MwACLTH#####AAAAAQAMQ01vaW5zVW5haXJlAAAAAT#wAAAAAAAAAAAAEQD#####AAFrAAQtMC41AAAAEgAAAAE#4AAAAAAAAP####8AAAABABBDUG9pbnREYW5zUmVwZXJlAP####8BAAAAABgAAlonAAAAAAAAAAAAQAgAAAAAAAAHAAAAAAoAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAATAP####8AAAAAABgAAkInAMAwAAAAAAAAwEOAAAAAAAAHAAAAAAoAAAAOAAAADwAAAA4AAAAQAAAAEwD#####AAAAAAAYAAJDJwAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAADgAAABEAAAAOAAAAEgAAAAwA#####wAAABQAAAAOAAAAEwAAAA8A#####wAAAAAAGAACTScAwCQAAAAAAADAAAAAAAAAAAcAAAAAFQAAABcAAAAPAP####8AAAAAABgAAk4nAMAzAAAAAAAAwEMAAAAAAAAHAAAAABYAAAAX#####wAAAAEACUNQb2x5Z29uZQD#####AAAAAAACAAAABAAAABYAAAAVAAAAFAAAABYAAAAUAP####8AAAAAAAIAAAAEAAAAGQAAABQAAAAYAAAAGf####8AAAABABBDU3VyZmFjZVBvbHlnb25lAP####8BAAD#AAAABQAAABsAAAAVAP####8B#wAAAAAABQAAABr#####AAAAAQAQQ01hY3JvQXBwYXJpdGlvbgD#####AP8AAAH#####EECIoKPXCj1xQELhR64UeuECAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAZBcHBBTU4AAAAAAAEAAAAcAAAAABYA#####wD#AAAB#####xBAiLCj1wo9cUBUMKPXCj1wAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAGQXBwQUJDAAAAAAABAAAAHQD#####AAAAAQARQ01hY3JvRGlzcGFyaXRpb24A#####wD#AAAB#####xBAi+Cj1wo9cUBE4UeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAHTWFzcUFNTgAAAAAAAQAAABwAAAAXAP####8A#wAAAf####8QQIvoo9cKPXFAVPCj1wo9cAIAAAAAAAAAAAAAAAABAAAAAAAAAAAAB01hc3FBQkMAAAAAAAEAAAAd#####wAAAAEAC0NNYWNyb1BhdXNlAP####8A#wAAAf####8QQIj4o9cKPXFAX3Cj1wo9cAIAAAAAAAAAAAAAAAABAAAAAAAAAAAABVBhdXNlAAAAAAAB#####wAAAAEAEUNNYWNyb1N1aXRlTWFjcm9zAP####8A#wAAAf####8QQFHFHrhR64VAePwo9cKPXAIAAAAAAAAAAAAAAAABAAAAAAAAAAAAClRyaWFuZ2xlIDEAAAAAAAMAAAAfAAAAIgAAACEAAAAZAP####8A#wAAAf####8QQFFFHrhR64VAe3wo9cKPXAIAAAAAAAAAAAAAAAABAAAAAAAAAAAAClRyaWFuZ2xlIDIAAAAAAAMAAAAeAAAAIgAAACAAAAAO##########8='\n      } else {\n        codeBase64 =\n          'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAYfAAADsgAAAQEAAAAAAAAAAQAAACX#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAJBJwDAKAAAAAAAAEAiAAAAAAAABwABQHMxR64UeuFAcbwo9cKPXP####8AAAABABRDRHJvaXRlRGlyZWN0aW9uRml4ZQD#####AQAAAAAOAAABAAEAAAABAT#wAAAAAAAA#####wAAAAEAD0NQb2ludExpZURyb2l0ZQD#####AQAAAAAQAAJJJwDAGAAAAAAAAAAAAAAAAAAABQABQEerQ5WBBiUAAAAC#####wAAAAEACUNEcm9pdGVBQgD#####AQAAAAASAAABAAEAAAABAAAAA#####8AAAABABZDRHJvaXRlUGVycGVuZGljdWxhaXJlAP####8BAAAAAA4AAAEAAQAAAAEAAAAE#####wAAAAEACUNDZXJjbGVPQQD#####AQAAAAABAAAAAQAAAAP#####AAAAAQAQQ0ludERyb2l0ZUNlcmNsZQD#####AAAABQAAAAb#####AAAAAQAQQ1BvaW50TGllQmlwb2ludAD#####AQAAAAAOAAABBQABAAAABwAAAAkA#####wEAAAAAEAACSicAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAASAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MgABMgAAAAFAAAAAAAAAAAAAABEA#####wACeTIAATUAAAABQBQAAAAAAAAAAAARAP####8AAngzAAE2AAAAAUAYAAAAAAAAAAAAEQD#####AAJ5MwACLTH#####AAAAAQAMQ01vaW5zVW5haXJlAAAAAT#wAAAAAAAAAAAAEQD#####AAFrAAMwLjUAAAABP+AAAAAAAAD#####AAAAAQAQQ1BvaW50RGFuc1JlcGVyZQD#####AQAAAAAYAAJaJwAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAEwD#####AAAAAAAYAAJCJwDAMAAAAAAAAMBDgAAAAAAABwAAAAAKAAAADgAAAA8AAAAOAAAAEAAAABMA#####wAAAAAAGAACQycAAAAAAAAAAABACAAAAAAAAAcAAAAACgAAAA4AAAARAAAADgAAABIAAAAMAP####8AAAAUAAAADgAAABMAAAAPAP####8AAAAAABgAAk0nAMA7AAAAAAAAwDcAAAAAAAAHAAAAABUAAAAXAAAADwD#####AAAAAAAYAAJOJwDAKAAAAAAAAEAAAAAAAAAABwAAAAAWAAAAF#####8AAAABAAlDUG9seWdvbmUA#####wAAAAAAAgAAAAQAAAAWAAAAFQAAABQAAAAWAAAAFAD#####AAAAAAACAAAABAAAABkAAAAUAAAAGAAAABn#####AAAAAQAQQ1N1cmZhY2VQb2x5Z29uZQD#####AQAA#wAAAAUAAAAbAAAAFQD#####Af8AAAAAAAUAAAAa#####wAAAAEAEENNYWNyb0FwcGFyaXRpb24A#####wD#AAAB#####xBAiKCj1wo9cUBC4UeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAGQXBwQU1OAAAAAAABAAAAHAAAAAAWAP####8A#wAAAf####8QQIiwo9cKPXFAVDCj1wo9cAIAAAAAAAAAAAAAAAABAAAAAAAAAAAABkFwcEFCQwAAAAAAAQAAAB0A#####wAAAAEAEUNNYWNyb0Rpc3Bhcml0aW9uAP####8A#wAAAf####8QQIvgo9cKPXFAROFHrhR64QIAAAAAAAAAAAAAAAABAAAAAAAAAAAAB01hc3FBTU4AAAAAAAEAAAAcAAAAFwD#####AP8AAAH#####EECL6KPXCj1xQFTwo9cKPXACAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAdNYXNxQUJDAAAAAAABAAAAHf####8AAAABAAtDTWFjcm9QYXVzZQD#####AP8AAAH#####EECI+KPXCj1xQF9wo9cKPXACAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAVQYXVzZQAAAAAAAf####8AAAABABFDTWFjcm9TdWl0ZU1hY3JvcwD#####AP8AAAH#####EEBRxR64UeuFQHj8KPXCj1wCAAAAAAAAAAAAAAAAAQAAAAAAAAAAAApUcmlhbmdsZSAxAAAAAAADAAAAHwAAACIAAAAhAAAAGQD#####AP8AAAH#####EEBRRR64UeuFQHt8KPXCj1wCAAAAAAAAAAAAAAAAAQAAAAAAAAAAAApUcmlhbmdsZSAyAAAAAAADAAAAHgAAACIAAAAgAAAADv##########'\n      }\n\n      if (this.sup == 1) {\n        // AM,AB,AN,AC sont donnés pas de calculs intermédiaires\n        texte = `Dans la figure ci-dessous, $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s5}=${s15}$ cm et $${s1 + s4}=${s14}$ cm.<br>`\n        texteCorr = ''\n      } else if (this.sup == 2) {\n        // AN n'est pas donné, il faut le calculer avant.\n        texte = `Dans la figure ci-dessous, $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s3 + s5}=${s35}$ cm et $${s2 + s4}=${s24}$ cm.<br>`\n        texteCorr = ''\n        if (k > 0) {\n          // triangles imbriqués\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s1 + s3}-${s3 + s5}=${s13}-${s35}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'et que ' +\n            `$${s1 + s4}=${s1 + s2}-${s2 + s4}=${s12}-${s24}=${s14}$` +\n            ' cm.<br>'\n        } else {\n          // papillon\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s3 + s5}-${s1 + s3}=${s35}-${s13}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'et que ' +\n            `$${s1 + s4}=${s2 + s4}-${s1 + s2}=${s24}-${s12}=${s14}$` +\n            ' cm.<br>'\n        }\n      } else if (randint(1, 2) == 1) {\n        // triangles imbriqués sans figure\n        texte = `$${s1}$, $${s2}$ et $${s3}$ sont trois point distincts. $${s4} \\\\in [${s1 + s2}]$ et $${s5} \\\\in [${s1 + s3}]$ <br> $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.`\n        texteCorr = ''\n      } else {\n        // papillon sans figure\n        texte = `Les points $${s2}$, $${s1}$, $${s4}$ et $${s3}$, $${s1}$, $${s5}$ sont alignés dans cet ordre.<br>`\n        texte += `$${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.<br>`\n        texteCorr = ''\n      }\n      texte += `Les droites $(${s2 + s3})$ et $(${s4 + s5})$ sont-elles parallèles ?<br>`\n\n      texteCorr += `D'une part on a $\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s12}}{${s14}}=\\\\dfrac{${s12}\\\\times${miseEnEvidence(\n        s15\n      )}}{${s14}\\\\times${miseEnEvidence(s15)}}=\\\\dfrac{\n        ${texNombrec(arrondi(dist12 * dist15, 3))}}\n        {${s14}\\\\times${s15}}\n      $`\n      texteCorr += `<br>D'autre part on a $\\\\dfrac{${s1 + s3}}{${s1 + s5}}=\\\\dfrac{${s13}}{${s15}}=\\\\dfrac{${s13}\\\\times${miseEnEvidence(\n        s14\n      )}}{${s15}\\\\times${miseEnEvidence(s14)}}=\\\\dfrac{${texNombrec(arrondi(dist13 * dist14, 3))}}\n        {${s14}\\\\times${s15}}\n      $`\n\n      if (k != k2) {\n        // droites non parallèles\n        texteCorr += `<br>$\\\\dfrac{${s1 + s2}}{${s1 + s4}}\\\\not=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>`\n        texteCorr += `Donc d'après le théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ ne sont pas parallèles.<br>`\n      } else {\n        // droites parallèles\n        texteCorr += `<br>$\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>` // car les produits en croix sont égaux : $${s12}\\\\times${s15}=${s13}\\\\times${s14}=${texNombre(arrondi(dist12*dist15,3))}$.<br>`;\n        if (k > 0) { texteCorr += `$${s1}$,$${s4}$,$${s2}$ et $${s1}$,$${s5}$,$${s3}$ sont alignés dans le même ordre.<br>` } else { texteCorr += `$${s4}$,$${s1}$,$${s2}$ et $${s5}$,$${s1}$,$${s3}$ sont alignés dans le même ordre.<br>` }\n        texteCorr += `Donc d'après la réciproque du théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ sont parallèles.<br>`\n      }\n\n      if (this.sup < 3) {\n        this.MG32codeBase64 = codeBase64\n        this.mg32init = (mtg32App, idDoc) => {\n          mtg32App.giveFormula2(idDoc, 'x3', x3)\n          mtg32App.giveFormula2(idDoc, 'y2', y2)\n          mtg32App.giveFormula2(idDoc, 'y3', y3)\n          mtg32App.giveFormula2(idDoc, 'k', k)\n          mtg32App.rename(idDoc, \"A'\", s1)\n          mtg32App.rename(idDoc, \"B'\", s2)\n          mtg32App.rename(idDoc, \"C'\", s3)\n          mtg32App.rename(idDoc, \"M'\", s4)\n          mtg32App.rename(idDoc, \"N'\", s5)\n          mtg32App.calculate(idDoc)\n          mtg32App.display(idDoc)\n        }\n        texte += `$\\\\footnotesize{\\\\textit{Le point \\\\thickspace ${s1} peut être déplacé (si la figure est tronquée).}}$<br>`\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n      if (this.sup < 3) {\n        listeQuestionsToContenu(this)\n      } else {\n        this.typeExercice = ''\n        listeQuestionsToContenuSansNumero(this)\n      }\n    } else {\n      // sortie Latex\n      texteCorr = ''\n      if (this.sup == 1) {\n        // niveau 1 : Calcul direct\n        texte =\n          '\\\\begin{minipage}{.7 \\\\linewidth} \t\\\\vspace{0cm} Sur la figure ci-contre, on a  : \\\\begin{itemize}'\n        texte += `\\n\\t \\\\item ${s1 + s2}=${s12} cm \\n\\t \\\\item ${s1 + s3}=${s13} cm\\n\\t \\\\item ${s1 + s5}=${s15} cm\\n\\t \\\\item ${s1 + s4}=${s14} cm.<br>`\n        texte +=\n          '\\\\end{itemize}  ' +\n          `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>` +\n          '. \\\\end{minipage}'\n      } else if (this.sup == 2) {\n        // niveau 2 : Calcul intermédiaire nécessaire\n        texte =\n          '\\\\begin{minipage}{.7 \\\\linewidth} \t\\\\vspace{0cm} Sur la figure ci-contre, on a  : \\\\begin{itemize}'\n        texte += `\\n\\t \\\\item ${s1 + s2} = ${s12} cm\\n\\t \\\\item ${s1 + s3} = ${s13} cm\\n\\t \\\\item ${s3 + s5} = ${s35} cm\\n\\t \\\\item ${s2 + s4} = ${s24} cm.<br>`\n        texte +=\n          '\\\\end{itemize}  ' +\n          `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>` +\n          '. \\\\end{minipage}'\n        if (k > 0) {\n          // triangles imbriqués\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s1 + s3}-${s3 + s5}=${s13}-${s35}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'et que ' +\n            `$${s1 + s4}=${s1 + s2}-${s2 + s4}=${s12}-${s24}=${s14}$` +\n            ' cm.<br>'\n        } else {\n          // papillon\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s3 + s5}-${s1 + s3}=${s35}-${s13}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'et que ' +\n            `$${s1 + s4}=${s2 + s4}-${s1 + s2}=${s24}-${s12}=${s14}$` +\n            ' cm.<br>'\n        }\n      }\n\n      // énoncé sans figure\n      else if (randint(1, 2) == 1) {\n        // triangles imbriqués\n        texte = `$${s1}$, $${s2}$ et $${s3}$ sont trois point distincts. $${s4} \\\\in [${s1 + s2}]$ et $${s5} \\\\in [${s1 + s3}]$ <br> $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.<br>`\n        texte += `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>`\n      } else {\n        // papillon\n        texte = `Les points $${s2}$, $${s1}$, $${s4}$ et $${s3}$, $${s1}$, $${s5}$ sont alignés dans cet ordre.<br>`\n        texte += `$${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.<br>`\n        texte += `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>`\n      }\n\n      if (this.sup < 3) {\n        // on ne fait la figure que si niveau < 3\n        texte += '\\\\begin{minipage}{0.3 \\\\linewidth}'\n        // dessin de la figure\n        texte += '\\n \\\\begin{tikzpicture}[scale=0.7]' // Balise début de figure\n        texte +=\n          '\\n\\t \\\\tkzDefPoints{0/0/' +\n          s1 +\n          ',' +\n          x3 +\n          '/' +\n          y3 +\n          '/' +\n          s3 +\n          ',' +\n          x2 +\n          '/' +\n          y2 +\n          '/' +\n          s2 +\n          '}' // Placer les points du triangle principal\n        texte += '\\n\\t \\\\tkzDrawPolygon(' + s1 + ',' + s2 + ',' + s3 + ')' // Trace le triangle principal\n\n        // Définit les points M et N par homothétie de centre C et de rapport 0,3<k<0,8\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n          s1 +\n          ' ratio ' +\n          k +\n          '](' +\n          s2 +\n          ')' +\n          '\\t\\\\tkzGetPoint{' +\n          s4 +\n          '}' // Place le premier point du triangle image\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n          s1 +\n          ' ratio ' +\n          k +\n          '](' +\n          s3 +\n          ')' +\n          '\\t\\\\tkzGetPoint{' +\n          s5 +\n          '}' // Place le deuxième point du triangle image\n        texte += '\\n\\t \\\\tkzDrawSegment(' + s4 + ',' + s5 + ')' // Trace le segment\n        if (k > 0) {\n          texte += '\\n\\t \\\\tkzLabelPoints[left](' + s1 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[above left](' + s2 + ',' + s4 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[below](' + s3 + ',' + s5 + ')' // nomme les points\n\n          // Nomme les points au dessus avec above, dessous avec below...\n        } else {\n          // position papillon -> position du nom inversée et nécessité de tracer le triangle secondaire\n          texte += '\\n\\t \\\\tkzLabelPoints[below](' + s1 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[below](' + s3 + ',' + s4 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[above](' + s2 + ',' + s5 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzDrawPolygon(' + s1 + ',' + s4 + ',' + s5 + ')' // Trace le triangle secondaire\n        }\n        texte += '\\n \\\\end{tikzpicture}' // Balise de fin de figure\n        texte += '\\\\end{minipage}'\n      }\n      this.listeQuestions.push(texte) // on envoie la question\n\n      // correction\n      texteCorr += `D'une part on a $\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s12}}{${s14}}=\\\\dfrac{${s12}\\\\times${miseEnEvidence(\n        s15\n      )}}{${s14}\\\\times${miseEnEvidence(s15)}}=${texFraction(\n        texNombrec(arrondi(dist12 * dist15, 3)),\n        texNombrec(arrondi(dist14 * dist15, 4))\n      )}$`\n      texteCorr += `<br>D'autre part on a $\\\\dfrac{${s1 + s3}}{${s1 + s5}}=\\\\dfrac{${s13}}{${s15}}=\\\\dfrac{${s13}\\\\times${miseEnEvidence(\n        s14\n      )}}{${s15}\\\\times${miseEnEvidence(s14)}}=${texFraction(\n        texNombrec(arrondi(dist13 * dist14, 3)),\n        texNombrec(arrondi(dist14 * dist15, 4))\n      )}$`\n\n      if (k != k2) {\n        // droites pas parallèles\n        texteCorr += `<br>$\\\\dfrac{${s1 + s2}}{${s1 + s4}}\\\\not=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>`\n        texteCorr += `Donc d'après le théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ ne sont pas parallèles.<br>`\n      } else {\n        // droites parallèles\n        texteCorr += `<br>$\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>` // car les produits en croix sont égaux : $${s12}\\\\times${s15}=${s13}\\\\times${s14}=${texNombre(arrondi(dist12*dist15,3))}$.<br>`;\n        if (k > 0) { texteCorr += `$${s1}$,$${s4}$,$${s2}$ et $${s1}$,$${s5}$,$${s3}$ sont alignés dans le même ordre.<br>` } else { texteCorr += `$${s4}$,$${s1}$,$${s2}$ et $${s5}$,$${s1}$,$${s3}$ sont alignés dans le même ordre.<br>` }\n        texteCorr += `Donc d'après la réciproque du théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ sont parallèles.<br>`\n      }\n\n      this.qcm[1][0] = [texte, [texteCorr], [6]]\n\n      this.listeCorrections.push(texteCorr)\n\n      listeQuestionsToContenuSansNumero(this)\n    }\n  }\n\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    3,\n    '1 : Cas simple \\n 2 : Complication \\n 3 : Sans figure'\n  ]\n  this.besoinFormulaire2Numerique = [\n    'Réciproque ou contraposée ? ',\n    3,\n    '1 : Réciproque \\n 2 : Contraposée \\n 3 : Aléatoire'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}