{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C25-0.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["Algebrite","require","titre","Problemes_additifs_fractions","type_de_questions_disponibles","ListeFraction","this","sortFractions","fractions","forEach","element","TypeError","indexOf","RangeError","Math","floor","length","Error","changed","i","tmp","e","console","log","message","reduceSameDenominateur","denominateur_commun","liste_denominateurs","push","n","parseInt","run","ppcm","fractions_reduites","denominateurs_amis","fractionSimplifiee","Exercice","debug","sup","nbQuestions","consigne","nbCols","nbColsCorr","sortieHtml","spacing","spacingCorr","nouvelleVersion","choice","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","listeQuestions","listeCorrections","texte","texteCorr","cpt","frac_rangees","frac_meme_denom_rangees","nt1","nt2","nt3","dt1","dt2","dt3","n1","n2","n3","d1","d2","d3","p1","p2","p3","frac","denoms_amis","pb_3_f","denoms_cool_3","randint","prenoms","prenomM","fractionsSimp","fractionsB","f1","cat1","f2","cat2","f3","cat3","enonce","question","correction","prenomF","frac_meme_denom","currentAnnee","Date","getFullYear","calcul","texte_en_couleur_et_gras","nq1","nq2","nq3","nq4","dq1","dq2","dq3","dq4","n4","d4","pb_4_f","denoms_cool_4","prenom","f4","cat4","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/3645.27b1d34f1b925ef41abe.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {fractionSimplifiee,listeQuestionsToContenu,randint,choice,combinaisonListesSansChangerOrdre,calcul,prenomF,prenomM,prenom,texte_en_couleur_et_gras} from '../../modules/outils.js'\nconst Algebrite = require('algebrite')\n\n//import {fraction,ListeFraction} from '../../modules/Fractions.js'\n\nexport const titre = 'Problèmes additifs et de comparaison sur les rationnels'\n\n/**\n * Problèmes additifs et de comparaion sur les rationnels\n * 4C25-0\n * Mise à jour le 2021-01-30\n * @author Sébastien Lozano\n */\nexport default function Problemes_additifs_fractions() {\n  \"use strict\";\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.debug = false;\n  this.sup = 1;\n  if (this.debug) {\n    this.nbQuestions = 5;\n  } else {\n    this.nbQuestions = 2;\n  }\n  this.titre = titre;\n  this.consigne = `Justifier vos réponses aux problèmes suivants.`;\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  //this.nbQuestionsModifiable = false;\n  sortieHtml ? (this.spacing = 2) : (this.spacing = 1.5);\n  sortieHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 1.15);\n\n  let type_de_questions_disponibles;\n\n  /**\n * @class ListeFraction\n * @classdesc Classe Fraction - Méthodes utiles sur les collections de fractions\n * @author Sébastien Lozano\n */\n\nfunction ListeFraction() {\n  //'use strict'; pas de use strict avec un paramètre du reste\n  /**\n   * @constant {array} denominateurs_amis tableau de tableaux de dénominateurs qui vont bien ensemble pour les calculs\n   * le tableau [12,2,3,4,6] faisait planter 4C25-0\n   */\n  //let denominateurs_amis = [[12,2,3,4,6],[16,2,4,8],[18,2,3,6,9],[20,2,4,5,10],[24,2,3,4,8,12],[30,2,3,5,6],[32,2,16,4,8],[36,2,18,4,9],[40,2,20,4,10,5,8]]\n  let denominateurs_amis = [[16,2,4,8],[18,2,3,6,9],[20,2,4,5,10],[24,2,3,4,8,12],[30,2,3,5,6],[32,2,16,4,8],[36,2,18,4,9],[40,2,20,4,10,5,8]]\n\n /**\n  * \n  * @param  {...any} fractions contient la liste des numérateurs et denominateurs dans l'ordre n1,d1,n2,d2, ... de deux ou plus de fractions\n  * @return {array} renvoie un tableau avec les numérateurs et les dénominateurs triés selon la croissance des quotients [n_frac_min,d_frac_min,...,n_frac_max,d_frac_max]\n  * @example sortFraction(1,2,1,5,1,4,1,3) renvoie [1,5,1,4,1,3,1,2] \n  */\n let sortFractions=function(...fractions) {\n     try {\t\t\n         fractions.forEach(function(element) {\n             if (typeof element != 'number') {\n                 throw new TypeError(`${element} n'est pas un nombre !`);\n             };\n             if ( (fractions.indexOf(element)%2 == 1) && (element == 0)) {\n                 throw new RangeError(`${element} est exclu des valeurs possibles pour les dénominateurs !`)\n             };\n         });\t\n         if (Math.floor(fractions.length/2) <= 1 ) {\n             throw new Error(`Il faut au moins deux fractions !`);\n         };\n         if (fractions.length%2 != 0) {\n             throw new Error(`Il faut un nombre pair de valeurs puisque q'une fraction est représentée par son numérateur et son dénominateur`);\n         };\n         let changed;\n         do{\n              changed = false;\n              for (let i=0; i<(fractions.length-1); i+=2) {\n                 if ((fractions[i]/fractions[i+1]) > (fractions[i+2]/fractions[i+3])) {\n                     let tmp = [fractions[i],fractions[i+1]];\n                     fractions[i]=fractions[i+2];\n                     fractions[i+1] = fractions[i+3];\n                     fractions[i+2] = tmp [0];\n                     fractions[i+3] = tmp[1];\n                     changed = true;\n                 };\n              };\n         } while(changed);\n         return fractions;\n     }\n     catch (e) {\n         console.log(e.message);\n     };\n };\n\n /**\n  * fonction locale pour trouver le ppcm d'un nombre indeterminé d'entiers\n  * @param  {integer} n parametre du reste contenant une liste d'entiers\n  * * la liste d'entiers doit être passé dans un tableau\n  * @return {number} renvoie le ppcm des nombres entiers passés dans le paramètre du reste n\n  * @example ppcm(2,6,4,15) renvoie 60\n  */\n function ppcm([...n]) {\n     try {\n          n.forEach(function(element) {\n             if (typeof element != 'number') {\n                 throw new TypeError(`${element} n'est pas un nombre !`);\n             };\n         });\n         // Quoi faire sans nombres ?\n         if (n.length == 0) {\n             throw new Error(`C'est mieux avec quelques nombres !`)\n         };\n         return parseInt(Algebrite.run(`lcm(${n})`));\n\n     }\n     catch (e) {\n         console.log(e.message);\n     };\n };\n\n /**\n  * \n  * @param  {...any} fractions contient la liste des numérateurs et des dénominateurs dans l'ordre n1,d1,n2,d2, ... de deux ou plus de fractions\n  * @return {array} renvoie un tableau de numérateurs et de dénominateurs avec le même dénominateur dans l'ordre initial.\n  * * Le dénominateur choisi est toujours le ppcm\n  * * Les fractions ne sont pas réduites\n  * @example reduceSameDenominateur(1,2,1,5,2,3) renvoie [15,30,6,30,20,30]\n  */\n  function reduceSameDenominateur(...fractions) {\n     try {\t\t\n      fractions.forEach(function(element) {\n             if (typeof element != 'number') {\n                 throw new TypeError(`${element} n'est pas un nombre !`);\n             };\n             if ( (fractions.indexOf(element)%2 == 1) && (element == 0)) {\n                 throw new RangeError(`${element} est exclu des valeurs possibles pour les dénominateurs !`)\n             };\n         });\t\n         if (Math.floor(fractions.length/2) <= 1 ) {\n             throw new Error(`Il faut au moins deux fractions !`);\n         };\n         if (fractions.length%2 != 0) {\n             throw new Error(`Il faut un nombre pair de valeurs puisque q'une fraction est représentée par son numérateur et son dénominateur`);\n         };\n         let denominateur_commun;\n         let liste_denominateurs = [];\n         for (let i=0; i<fractions.length-1; i+=2) {\n             liste_denominateurs.push(fractions[i+1]);\n         };\n         denominateur_commun = ppcm(liste_denominateurs);\n         let fractions_reduites = [];\n         for (let i=0; i<fractions.length-1; i+=2) {\n             //on calcule le nouveau numérateur\n             fractions_reduites.push(fractions[i]*denominateur_commun/fractions[i+1]);\n             fractions_reduites.push(denominateur_commun);\n         };\n\n         //return [fractions,'-',liste_denominateurs,'-',denominateur_commun,'-',fractions_reduites];\n         return fractions_reduites;\n\n     }\n     catch (e) {\n         console.log(e.message);\n     };\n };\n\n this.sortFractions = sortFractions;\n this.reduceSameDenominateur = reduceSameDenominateur;\n this.denominateurs_amis = denominateurs_amis;\n this.fractionSimplifiee = fractionSimplifiee;\n};\n\n  this.nouvelleVersion = function () {\n    if (this.debug) {\n      type_de_questions_disponibles = [1, 2, 3, 4, 5];\n    } else {\n      type_de_questions_disponibles = [choice([1, 2]), choice([3, 4, 5])];\n    }\n\n    //let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(\n      type_de_questions_disponibles,\n      this.nbQuestions\n    ); // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      // on aura besoin des méthodes de la classe Fraction()\n      let frac = new ListeFraction();\n      // on récupère les dénominateurs qui vont bien\n      //let denoms_amis = frac.denominateurs_amis;\n      //C'est mieux avec ceux là, l'algo trouve plus rapidement une solution avec les contraintes à ajouter dans mathsalea_outils.js quand ça sera possible.\n      let denoms_amis = [\n        [40, 2, 20, 4, 10, 5, 8],\n        [60, 2, 30, 3, 20, 4, 15, 5, 12, 6, 10],\n        [80, 2, 40, 4, 20, 5, 16, 8, 10],\n      ];\n      // on aura besoin de ranger tout ça !\n      let frac_rangees, frac_meme_denom_rangees;\n\n      //======================================================\n      //======== \t\tAVEC 3 FRACTIONS\t\t\t  \t========\n      //======================================================\n\n      // le tableau d'objets contenant tout le necesssaire, fractions, énoncé, question ... pour les problème avec 3 fractions\n      let pb_3_f = [];\n      // les numérateurs et dénominateurs des 3 fractions attention les deux premières doivent être inférieures à 1/2 si on veut qu'elles soient toutes positives !\n      // et on veut des fractions distinctes !\n      let nt1, nt2, nt3, dt1, dt2, dt3;\n      let n1, n2, n3, d1, d2, d3;\n      // on choisit un tableau de dénominateurs qui vont bien\n      let denoms_cool_3 = denoms_amis[randint(0, denoms_amis.length - 1)];\n      while (\n        nt1 == nt2 ||\n        nt1 == nt3 ||\n        nt2 == nt3 ||\n        nt1 / dt1 >= 1 / 2 ||\n        nt2 / dt2 >= 1 / 2\n      ) {\n        n1 = randint(1, 6);\n        d1 = choice(denoms_cool_3);\n        n2 = randint(2, 10, [n1]); //on évite n1 pour pouvoir retrouver le texte de la plus grande fraction\n        d2 = choice(denoms_cool_3, [d1]);\n        n3 = d1 * d2 - n1 * d2 - n2 * d1; //la somme des trois vaut 1 !\n        d3 = d1 * d2;\n\n        nt1 = frac.fractionSimplifiee(n1, d1)[0];\n        dt1 = frac.fractionSimplifiee(n1, d1)[1];\n        nt2 = frac.fractionSimplifiee(n2, d2)[0];\n        dt2 = frac.fractionSimplifiee(n2, d2)[1];\n        nt3 = frac.fractionSimplifiee(n3, d3)[0];\n        dt3 = frac.fractionSimplifiee(n3, d3)[1];\n      }\n\n      //======================================================\n      //========= indice 0 le triathlon des neiges  ==========\n      //======================================================\n      pb_3_f.push({\n        prenoms: [prenomM()],\n        fractionsSimp: [\n          nt1,\n          dt1,\n          \"VTT\",\n          nt2,\n          dt2,\n          \"ski de fond\",\n          nt3,\n          dt3,\n          \"pied\",\n        ],\n        fractionsB: {\n          f1: [nt1, dt1],\n          cat1: \"VTT\",\n          f2: [nt2, dt2],\n          cat2: \"ski de fond\",\n          f3: [nt3, dt3],\n          cat3: \"pied\",\n        },\n        enonce: ``,\n        question: `Pour quelle discipline, la distance est-elle la plus grande ?`,\n        correction: ``,\n      });\n\n      // les 3 prénomns doivent être distincts\n      let p1, p2, p3; // les 3 prénoms\n      while (p1 == p2 || p1 == p3 || p2 == p3) {\n        p1 = prenomF();\n        p2 = prenomF();\n        p3 = prenomF();\n      }\n\n      //======================================================\n      //=========== \t\tindice 1 Miss Math\t\t ===========\n      //======================================================\n      pb_3_f.push({\n        prenoms: [],\n        fractionsSimp: [nt1, dt1, p1, nt2, dt2, p2, nt3, dt3, p3],\n        fractionsB: {\n          f1: [nt1, dt1],\n          cat1: p1,\n          f2: [nt2, dt2],\n          cat2: p2,\n          f3: [nt3, dt3],\n          cat3: p3,\n        },\n        enonce: ``,\n        question: `Qui a été élue ?`,\n        correction: ``,\n      });\n      let currentDate = new Date();\n      let currentAnnee = currentDate.getFullYear();\n\n      //======================================================\n      //====== énoncé indice 0 le triathlon des neiges  ======\n      //======================================================\n      pb_3_f[0].enonce += `Le triathlon des neiges de la vallée des loups comprend trois épreuves qui s'enchaînent : VTT, ski de fond et course à pied.`;\n      pb_3_f[0].enonce += `<br>${pb_3_f[0].prenoms[0]}, un passionné de cette épreuve, s'entraîne régulièrement sur le même circuit. `;\n      pb_3_f[0].enonce += `<br>À chaque entraînement, il parcourt le circuit de la façon suivante : $\\\\dfrac{${pb_3_f[0].fractionsB.f1[0]}}{${pb_3_f[0].fractionsB.f1[1]}}$ à ${pb_3_f[0].fractionsB.cat1}, `;\n      pb_3_f[0].enonce += `$\\\\dfrac{${pb_3_f[0].fractionsB.f2[0]}}{${pb_3_f[0].fractionsB.f2[1]}}$ à ${pb_3_f[0].fractionsB.cat2} et le reste à ${pb_3_f[0].fractionsB.cat3}.`;\n\n      //======================================================\n      //=========== énoncé indice 1 Miss Math\t\t ===========\n      //======================================================\n      pb_3_f[1].enonce = `À l'élection de Miss Math ${currentAnnee}, ${pb_3_f[1].fractionsB.cat1} a remporté $\\\\dfrac{${pb_3_f[1].fractionsB.f1[0]}}{${pb_3_f[1].fractionsB.f1[1]}}$ des suffrages, `;\n      pb_3_f[1].enonce += `${pb_3_f[1].fractionsB.cat2} $\\\\dfrac{${pb_3_f[1].fractionsB.f2[0]}}{${pb_3_f[1].fractionsB.f2[1]}}$ et `;\n      pb_3_f[1].enonce += `${pb_3_f[1].fractionsB.cat3} tous les autres.`;\n\n      //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n      let frac_meme_denom;\n      for (let i = 0; i < 2; i++) {\n        pb_3_f[\n          i\n        ].correction = `Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>`;\n\n        if (!(dt1 == dt2)) {\n          pb_3_f[\n            i\n          ].correction += `Réduisons les fractions de l'énoncé au même dénominateur :  `;\n          frac_meme_denom = frac.reduceSameDenominateur(\n            pb_3_f[i].fractionsB.f1[0],\n            pb_3_f[i].fractionsB.f1[1],\n            pb_3_f[i].fractionsB.f2[0],\n            pb_3_f[i].fractionsB.f2[1],\n            pb_3_f[i].fractionsB.f3[0],\n            pb_3_f[i].fractionsB.f3[1]\n          );\n          if (frac_meme_denom[1] == dt1) {\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f1[0]}}{${pb_3_f[i].fractionsB.f1[1]}}$ et `;\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f2[0]}}{${pb_3_f[i].fractionsB.f2[1]}} = \\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$.<br>`;\n          } else if (frac_meme_denom[1] == dt2) {\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f1[0]}}{${pb_3_f[i].fractionsB.f1[1]}} = \\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ et `;\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f2[0]}}{${pb_3_f[i].fractionsB.f2[1]}}$<br>`;\n          } else {\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f1[0]}}{${pb_3_f[i].fractionsB.f1[1]}} = \\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ et `;\n            pb_3_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_3_f[i].fractionsB.f2[0]}}{${pb_3_f[i].fractionsB.f2[1]}} = \\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$.<br>`;\n          }\n        } else {\n          frac_meme_denom = frac.reduceSameDenominateur(\n            pb_3_f[i].fractionsB.f1[0],\n            pb_3_f[i].fractionsB.f1[1],\n            pb_3_f[i].fractionsB.f2[0],\n            pb_3_f[i].fractionsB.f2[1],\n            pb_3_f[i].fractionsB.f3[0],\n            pb_3_f[i].fractionsB.f3[1]\n          );\n          pb_3_f[\n            i\n          ].correction += `Les fractions de l'énoncé ont déjà le même dénominateur.`;\n        }\n      }\n\n      //======================================================\n      //==== Correction indice 0 le triathlon des neiges  ====\n      //======================================================\n      pb_3_f[0].correction += `Calculons alors la distance à `;\n\n      //======================================================\n      //======== \t\tCorrection indice 1 Miss Math  \t========\n      //======================================================\n      pb_3_f[1].correction += `Calculons d'abord la fraction des suffrages remportés par `;\n\n      //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n      for (let i = 0; i < 2; i++) {\n        pb_3_f[i].correction += `${pb_3_f[i].fractionsB.cat3} : <br>`;\n        pb_3_f[\n          i\n        ].correction += `$1-\\\\dfrac{${pb_3_f[i].fractionsB.f1[0]}}{${pb_3_f[i].fractionsB.f1[1]}}-\\\\dfrac{${pb_3_f[i].fractionsB.f2[0]}}{${pb_3_f[i].fractionsB.f2[1]}} = `;\n        pb_3_f[\n          i\n        ].correction += `\\\\dfrac{${frac_meme_denom[1]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}} = `;\n        pb_3_f[\n          i\n        ].correction += `\\\\dfrac{${frac_meme_denom[1]}-${frac_meme_denom[0]}-${frac_meme_denom[2]}}{${frac_meme_denom[3]}} = `;\n        pb_3_f[i].correction += `\\\\dfrac{${frac_meme_denom[1] - frac_meme_denom[0] - frac_meme_denom[2]\n          }}{${frac_meme_denom[1]}}`;\n        if (!(frac_meme_denom[1] == pb_3_f[0].fractionsB.f3[1])) {\n          pb_3_f[\n            i\n          ].correction += ` = \\\\dfrac{${pb_3_f[i].fractionsB.f3[0]}}{${pb_3_f[i].fractionsB.f3[1]}}$`;\n        } else {\n          pb_3_f[i].correction += `$`;\n        }\n      }\n\n      //======================================================\n      //==== Conclusion indice 0 le triathlon des neiges  ====\n      //======================================================\n      pb_3_f[0].correction += `<br>${pb_3_f[0].prenoms[0]} fait donc $\\\\dfrac{${pb_3_f[0].fractionsB.f1[0]}}{${pb_3_f[0].fractionsB.f1[1]}}$ à ${pb_3_f[0].fractionsB.cat1}, `;\n      pb_3_f[0].correction += `$\\\\dfrac{${pb_3_f[0].fractionsB.f2[0]}}{${pb_3_f[0].fractionsB.f2[1]}}$ à ${pb_3_f[0].fractionsB.cat2} et `;\n      pb_3_f[0].correction += `$\\\\dfrac{${pb_3_f[0].fractionsB.f3[0]}}{${pb_3_f[0].fractionsB.f3[1]}}$ à ${pb_3_f[0].fractionsB.cat3}.`;\n\n      pb_3_f[0].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_3_f[0].correction += `${pb_3_f[0].prenoms[0]} fait donc $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ à ${pb_3_f[0].fractionsB.cat1}, `;\n      pb_3_f[0].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ à ${pb_3_f[0].fractionsB.cat2} et `;\n      pb_3_f[0].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ à ${pb_3_f[0].fractionsB.cat3}.`;\n\n      //let frac_rangees,frac_meme_denom_rangees;\n      if (\n        calcul(nt1 / dt1) == calcul(nt2 / dt2) &&\n        calcul(nt1 / dt1) == calcul(nt3 / dt3)\n      ) {\n        pb_3_f[0].correction += `<br> ${texte_en_couleur_et_gras(\n          `Les trois fractions sont équivalentes, ${pb_3_f[0].prenoms[0]} parcours donc la même distance dans les trois disciplines.`\n        )}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(\n          frac_meme_denom[0],\n          frac_meme_denom[1],\n          frac_meme_denom[2],\n          frac_meme_denom[3],\n          frac_meme_denom[4],\n          frac_meme_denom[5]\n        );\n        pb_3_f[0].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$.`;\n\n        frac_rangees = frac.sortFractions(\n          pb_3_f[0].fractionsB.f1[0],\n          pb_3_f[0].fractionsB.f1[1],\n          pb_3_f[0].fractionsB.f2[0],\n          pb_3_f[0].fractionsB.f2[1],\n          pb_3_f[0].fractionsB.f3[0],\n          pb_3_f[0].fractionsB.f3[1]\n        );\n\n        pb_3_f[0].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$.`;\n\n        pb_3_f[0].correction += `<br> ${texte_en_couleur_et_gras(\n          `C'est donc à ${pb_3_f[0].fractionsSimp[\n          pb_3_f[0].fractionsSimp.indexOf(frac_rangees[4]) + 2\n          ]\n          } que ${pb_3_f[0].prenoms[0]} fait la plus grande distance.`\n        )}`;\n      }\n\n      //======================================================\n      //======== \t\tConclusion indice 1 Miss Math  \t========\n      //======================================================\n      pb_3_f[1].correction += `<br>${pb_3_f[1].fractionsB.cat1} a donc remporté $\\\\dfrac{${pb_3_f[1].fractionsB.f1[0]}}{${pb_3_f[1].fractionsB.f1[1]}}$, `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat2} a remporté $\\\\dfrac{${pb_3_f[1].fractionsB.f2[0]}}{${pb_3_f[1].fractionsB.f2[1]}}$ et `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat3} $\\\\dfrac{${pb_3_f[1].fractionsB.f3[0]}}{${pb_3_f[1].fractionsB.f3[1]}}$.`;\n\n      pb_3_f[1].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat1} remporte donc $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$, `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat2} $\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ et `;\n      pb_3_f[1].correction += `${pb_3_f[1].fractionsB.cat3} $\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$.`;\n\n      if (\n        calcul(nt1 / dt1) == calcul(nt2 / dt2) &&\n        calcul(nt1 / dt1) == calcul(nt3 / dt3)\n      ) {\n        pb_3_f[1].correction += `<br> ${texte_en_couleur_et_gras(\n          `Les trois fractions sont équivalentes, les trois candidates ont donc remporté le même nombre de suffrages.`\n        )}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(\n          frac_meme_denom[0],\n          frac_meme_denom[1],\n          frac_meme_denom[2],\n          frac_meme_denom[3],\n          frac_meme_denom[4],\n          frac_meme_denom[5]\n        );\n        pb_3_f[1].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$.`;\n\n        frac_rangees = frac.sortFractions(\n          pb_3_f[1].fractionsB.f1[0],\n          pb_3_f[1].fractionsB.f1[1],\n          pb_3_f[1].fractionsB.f2[0],\n          pb_3_f[1].fractionsB.f2[1],\n          pb_3_f[1].fractionsB.f3[0],\n          pb_3_f[1].fractionsB.f3[1]\n        );\n\n        pb_3_f[1].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$.`;\n\n        pb_3_f[1].correction += `<br> ${texte_en_couleur_et_gras(\n          `C'est donc ${pb_3_f[1].fractionsSimp[\n          pb_3_f[1].fractionsSimp.indexOf(frac_rangees[4]) + 2\n          ]\n          } qui a été élue.`\n        )}`;\n      }\n\n      //======================================================\n      //======== \t\tAVEC 4 FRACTIONS\t\t\t  \t========\n      //======================================================\n\n      // le tableau d'objets contenant tout le necesssaire, fractions, énoncé, question ... pour les problème avec 4 fractions\n      let pb_4_f = [];\n      // les numérateurs et dénominateurs des 4 fractions attention les trois premières doivent être inférieures à 1/3 si on veut qu'elles soient toutes positives !\n      // et on veut des fractions distinctes\n      let nq1, nq2, nq3, nq4, dq1, dq2, dq3, dq4;\n      let n4, d4; // en plus parce qu'il y a 4 fractions\n      // on choisit un tableau de dénominateurs qui vont bien\n      let denoms_cool_4 = denoms_amis[randint(2, denoms_amis.length - 1)];\n      while (\n        nq1 == nq2 ||\n        nq1 == nq3 ||\n        nq1 == nq4 ||\n        nq2 == nq3 ||\n        nq2 == nq4 ||\n        nq3 == nq4 ||\n        nq1 / dq1 >= 1 / 3 ||\n        nq2 / dq2 >= 1 / 3 ||\n        nq3 / dq3 >= 1 / 3\n      ) {\n        n1 = randint(1, 5);\n        d1 = choice(denoms_cool_4);\n        n2 = randint(1, 11, [n1]); //on évite n1 pour pouvoir retrouver le texte de la plus grande fraction\n        d2 = choice(denoms_cool_4);\n        n3 = randint(1, 17, [n1, n2]); //on évite n1 et n2 pour pouvoir retrouver le texte de la plus grande fraction\n        d3 = choice(denoms_cool_4);\n        n4 = d1 * d2 * d3 - n1 * d2 * d3 - n2 * d1 * d3 - n3 * d1 * d2; //la somme des quatre vaut 1 !\n        d4 = d1 * d2 * d3;\n\n        nq1 = frac.fractionSimplifiee(n1, d1)[0];\n        dq1 = frac.fractionSimplifiee(n1, d1)[1];\n        nq2 = frac.fractionSimplifiee(n2, d2)[0];\n        dq2 = frac.fractionSimplifiee(n2, d2)[1];\n        nq3 = frac.fractionSimplifiee(n3, d3)[0];\n        dq3 = frac.fractionSimplifiee(n3, d3)[1];\n        nq4 = frac.fractionSimplifiee(n4, d4)[0];\n        dq4 = frac.fractionSimplifiee(n4, d4)[1];\n      }\n\n      //======================================================\n      //=========== \t\tindice 0 le mandala\t\t ===========\n      //======================================================\n      pb_4_f.push({\n        //\n        prenoms: [prenom()],\n        fractionsSimp: [\n          nq1,\n          dq1,\n          \"carmin\",\n          nq2,\n          dq2,\n          \"ocre jaune\",\n          nq3,\n          dq3,\n          \"turquoise\",\n          nq4,\n          dq4,\n          \"pourpre\",\n        ],\n        fractionsB: {\n          f1: [nq1, dq1],\n          cat1: \"carmin\",\n          f2: [nq2, dq2],\n          cat2: \"ocre jaune\",\n          f3: [nq3, dq3],\n          cat3: \"turquoise\",\n          f4: [nq4, dq4],\n          cat4: \"pourpre\",\n        },\n        enonce: ``,\n        question: `Quelle est elle la couleur qui recouvre le plus de surface ?`,\n        correction: ``,\n      });\n\n      //======================================================\n      //===========\t\tindice 1 le jardin\t \t ===========\n      //======================================================\n      pb_4_f.push({\n        // indice 1 le jardin\n        prenoms: [],\n        fractionsSimp: [\n          nq1,\n          dq1,\n          \"la culture des légumes\",\n          nq2,\n          dq2,\n          \"la culture des plantes aromatiques\",\n          nq3,\n          dq3,\n          \"une serre servant aux semis\",\n          nq4,\n          dq4,\n          \"la culture des fraisiers\",\n        ],\n        fractionsB: {\n          f1: [nq1, dq1],\n          cat1: \"la culture des légumes\",\n          f2: [nq2, dq2],\n          cat2: \"la culture des plantes aromatiques\",\n          f3: [nq3, dq3],\n          cat3: \"une serre servant aux semis\",\n          f4: [nq4, dq4],\n          cat4: \"la culture des fraisiers\",\n        },\n        enonce: ``,\n        question: `Quelle est la culture qui occupe le plus de surface ?`,\n        correction: ``,\n      });\n\n      //======================================================\n      //===========\tindice 2 le stade\t\t \t ===========\n      //======================================================\n      pb_4_f.push({\n        // indice 2 le stade\n        prenoms: [],\n        fractionsSimp: [\n          nq1,\n          dq1,\n          \"le pays organisateur\",\n          nq2,\n          dq2,\n          \"l'ensemble des supporters des deux équipes en jeu\",\n          nq3,\n          dq3,\n          \"les sponsors et officiels\",\n          nq4,\n          dq4,\n          \"les places en vente libre\",\n        ],\n        fractionsB: {\n          f1: [nq1, dq1],\n          cat1: \"le pays organisateur\",\n          f2: [nq2, dq2],\n          cat2: \"l'ensemble des supporters des deux équipes en jeu\",\n          f3: [nq3, dq3],\n          cat3: \"les sponsors et officiels\",\n          f4: [nq4, dq4],\n          cat4: \"les places en vente libre\",\n        },\n        enonce: ``,\n        question: `Quelle est la catégorie la plus importante dans le stade ?`,\n        correction: ``,\n      });\n\n      //======================================================\n      //===========\ténoncé indice 0 le mandala \t ===========\n      //======================================================\n      pb_4_f[0].enonce = `${pb_4_f[0].prenoms[0]} colorie un mandala selon les proportions suivantes :  $\\\\dfrac{${pb_4_f[0].fractionsB.f1[0]}}{${pb_4_f[0].fractionsB.f1[1]}}$ en ${pb_4_f[0].fractionsB.cat1}, `;\n      pb_4_f[0].enonce += `$\\\\dfrac{${pb_4_f[0].fractionsB.f2[0]}}{${pb_4_f[0].fractionsB.f2[1]}}$ en  ${pb_4_f[0].fractionsB.cat2}, `;\n      pb_4_f[0].enonce += `$\\\\dfrac{${pb_4_f[0].fractionsB.f3[0]}}{${pb_4_f[0].fractionsB.f3[1]}}$ en  ${pb_4_f[0].fractionsB.cat3} et `;\n      pb_4_f[0].enonce += `le reste en ${pb_4_f[0].fractionsB.cat4}.`;\n\n      //======================================================\n      //===========\ténoncé indice 1 le jardin \t ===========\n      //======================================================\n      pb_4_f[1].enonce = `Un jardin est aménagé selon les proportions suivantes :  $\\\\dfrac{${pb_4_f[1].fractionsB.f1[0]}}{${pb_4_f[1].fractionsB.f1[1]}}$ par ${pb_4_f[1].fractionsB.cat1}, `;\n      pb_4_f[1].enonce += `$\\\\dfrac{${pb_4_f[1].fractionsB.f2[0]}}{${pb_4_f[1].fractionsB.f2[1]}}$ par  ${pb_4_f[1].fractionsB.cat2}, `;\n      pb_4_f[1].enonce += `$\\\\dfrac{${pb_4_f[1].fractionsB.f3[0]}}{${pb_4_f[1].fractionsB.f3[1]}}$ par  ${pb_4_f[1].fractionsB.cat3} et `;\n      pb_4_f[1].enonce += `le reste par ${pb_4_f[1].fractionsB.cat4}.`;\n\n      //======================================================\n      //===========\ténoncé indice 2 le stade \t ===========\n      //======================================================\n      pb_4_f[2].enonce = `Pour chaque match, les places du stade sont mises en vente dans les proportions suivantes :  $\\\\dfrac{${pb_4_f[2].fractionsB.f1[0]}}{${pb_4_f[2].fractionsB.f1[1]}}$ pour ${pb_4_f[2].fractionsB.cat1}, `;\n      pb_4_f[2].enonce += `$\\\\dfrac{${pb_4_f[2].fractionsB.f2[0]}}{${pb_4_f[2].fractionsB.f2[1]}}$ pour  ${pb_4_f[2].fractionsB.cat2}, `;\n      pb_4_f[2].enonce += `$\\\\dfrac{${pb_4_f[2].fractionsB.f3[0]}}{${pb_4_f[2].fractionsB.f3[1]}}$ pour  ${pb_4_f[2].fractionsB.cat3} et `;\n      pb_4_f[2].enonce += `le reste pour ${pb_4_f[2].fractionsB.cat4}.`;\n\n      //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n\n      //let frac_meme_denom;\n      for (let i = 0; i < 3; i++) {\n        pb_4_f[\n          i\n        ].correction = `Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>`;\n\n        if (!(dq1 == dq2 && dq1 == dq3)) {\n          //pb_4_f[i].correction += `${!(dq1 == dq2 && dq1 == dq3)} - ${dq1} - ${dq2} - ${dq3} - Réduisons les fractions de l'énoncé au même dénominateur :  `;\n          pb_4_f[i].correction += `Réduisons les fractions de l'énoncé au même dénominateur :  `;\n          frac_meme_denom = frac.reduceSameDenominateur(\n            pb_4_f[i].fractionsB.f1[0],\n            pb_4_f[i].fractionsB.f1[1],\n            pb_4_f[i].fractionsB.f2[0],\n            pb_4_f[i].fractionsB.f2[1],\n            pb_4_f[i].fractionsB.f3[0],\n            pb_4_f[i].fractionsB.f3[1],\n            pb_4_f[i].fractionsB.f4[0],\n            pb_4_f[i].fractionsB.f4[1]\n          );\n          if (frac_meme_denom[1] == dq1) {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f1[0]}}{${pb_4_f[i].fractionsB.f1[1]}}$, `;\n          } else {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f1[0]}}{${pb_4_f[i].fractionsB.f1[1]}} = \\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$, `;\n          }\n          if (frac_meme_denom[1] == dq2) {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f2[0]}}{${pb_4_f[i].fractionsB.f2[1]}}$ et `;\n          } else {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f2[0]}}{${pb_4_f[i].fractionsB.f2[1]}} = \\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ et `;\n          }\n          if (frac_meme_denom[1] == dq3) {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f3[0]}}{${pb_4_f[i].fractionsB.f3[1]}}$.<br>`;\n          } else {\n            pb_4_f[\n              i\n            ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f3[0]}}{${pb_4_f[i].fractionsB.f3[1]}} = \\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$.<br>`;\n          }\n        } else {\n          frac_meme_denom = frac.reduceSameDenominateur(\n            pb_4_f[i].fractionsB.f1[0],\n            pb_4_f[i].fractionsB.f1[1],\n            pb_4_f[i].fractionsB.f2[0],\n            pb_4_f[i].fractionsB.f2[1],\n            pb_4_f[i].fractionsB.f3[0],\n            pb_4_f[i].fractionsB.f3[1],\n            pb_4_f[i].fractionsB.f4[0],\n            pb_4_f[i].fractionsB.f4[1]\n          );\n          pb_4_f[\n            i\n          ].correction += `Les fractions de l'énoncé ont déjà le même dénominateur : `;\n          pb_4_f[\n            i\n          ].correction += `$\\\\dfrac{${pb_4_f[i].fractionsB.f1[0]}}{${pb_4_f[i].fractionsB.f1[1]}}$, $\\\\dfrac{${pb_4_f[i].fractionsB.f2[0]}}{${pb_4_f[i].fractionsB.f2[1]}}$ et $\\\\dfrac{${pb_4_f[i].fractionsB.f3[0]}}{${pb_4_f[i].fractionsB.f3[1]}}$.<br>`;\n        }\n      }\n\n      //======================================================\n      //===========\tCorrection indice 0 le mandala==========\n      //======================================================\n      pb_4_f[0].correction += `Calculons alors la fraction du mandala recouverte en `;\n\n      //======================================================\n      //===========\tCorrection indice 1 le jardin===========\n      //======================================================\n      pb_4_f[1].correction += `Calculons d'abord la fraction du jardin occupée par `;\n\n      //======================================================\n      //===========\ténoncé indice 2 le stade \t ===========\n      //======================================================\n      pb_4_f[2].correction += `Calculons d'abord la fraction du stade occupée par `;\n\n      //======================================================\n      //=========== \t\tCorrection Commune  \t ===========\n      //======================================================\n      for (let i = 0; i < 3; i++) {\n        pb_4_f[i].correction += `${pb_4_f[i].fractionsB.cat3} : <br>`;\n        pb_4_f[\n          i\n        ].correction += `$1-\\\\dfrac{${pb_4_f[i].fractionsB.f1[0]}}{${pb_4_f[i].fractionsB.f1[1]}}-\\\\dfrac{${pb_4_f[i].fractionsB.f2[0]}}{${pb_4_f[i].fractionsB.f2[1]}}-\\\\dfrac{${pb_4_f[i].fractionsB.f3[0]}}{${pb_4_f[i].fractionsB.f3[1]}} = `;\n        pb_4_f[\n          i\n        ].correction += `\\\\dfrac{${frac_meme_denom[1]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}-\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}-\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}} = `;\n        pb_4_f[\n          i\n        ].correction += `\\\\dfrac{${frac_meme_denom[1]}-${frac_meme_denom[0]}-${frac_meme_denom[2]}-${frac_meme_denom[4]}}{${frac_meme_denom[1]}} = `;\n        pb_4_f[i].correction += `\\\\dfrac{${frac_meme_denom[1] -\n          frac_meme_denom[0] -\n          frac_meme_denom[2] -\n          frac_meme_denom[4]\n          }}{${frac_meme_denom[1]}}`;\n        if (!(frac_meme_denom[1] == pb_4_f[0].fractionsB.f4[1])) {\n          pb_4_f[\n            i\n          ].correction += ` = \\\\dfrac{${pb_4_f[i].fractionsB.f4[0]}}{${pb_4_f[i].fractionsB.f4[1]}}$`;\n        } else {\n          pb_4_f[i].correction += `$`;\n        }\n      }\n\n      //======================================================\n      //=========== Conclusion indice 0 le mandala ===========\n      //======================================================\n\n      pb_4_f[0].correction += `<br>Le mandala est donc colorié de la façon suivante : $\\\\dfrac{${pb_4_f[0].fractionsB.f1[0]}}{${pb_4_f[0].fractionsB.f1[1]}}$ en ${pb_4_f[0].fractionsB.cat1}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${pb_4_f[0].fractionsB.f2[0]}}{${pb_4_f[0].fractionsB.f2[1]}}$ en ${pb_4_f[0].fractionsB.cat2}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${pb_4_f[0].fractionsB.f3[0]}}{${pb_4_f[0].fractionsB.f3[1]}}$ en ${pb_4_f[0].fractionsB.cat3} et `;\n      pb_4_f[0].correction += `$\\\\dfrac{${pb_4_f[0].fractionsB.f4[0]}}{${pb_4_f[0].fractionsB.f4[1]}}$ en ${pb_4_f[0].fractionsB.cat4}.`;\n\n      pb_4_f[0].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_4_f[0].correction += `le mandala est donc colorié de la façon suivante : $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ en ${pb_4_f[0].fractionsB.cat1}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ en ${pb_4_f[0].fractionsB.cat2}, `;\n      pb_4_f[0].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ en ${pb_4_f[0].fractionsB.cat3} et `;\n      pb_4_f[0].correction += `$\\\\dfrac{${frac_meme_denom[6]}}{${frac_meme_denom[7]}}$ en ${pb_4_f[0].fractionsB.cat4}.`;\n\n      //let frac_rangees,frac_meme_denom_rangees;\n      if (\n        calcul(nq1 / dq1) == calcul(nq2 / dq2) &&\n        calcul(nq1 / dq1) == calcul(nq3 / dq3) &&\n        calcul(nq1 / dq1) == calcul(nq4 / dq4)\n      ) {\n        pb_4_f[0].correction += `<br> ${texte_en_couleur_et_gras(\n          `Les quatre fractions sont équivalentes, ${pb_4_f[0].prenoms[0]} colorie donc la même surface avec les quatre couleurs.`\n        )}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(\n          frac_meme_denom[0],\n          frac_meme_denom[1],\n          frac_meme_denom[2],\n          frac_meme_denom[3],\n          frac_meme_denom[4],\n          frac_meme_denom[5],\n          frac_meme_denom[6],\n          frac_meme_denom[7]\n        );\n        pb_4_f[0].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$, $\\\\dfrac{${frac_meme_denom_rangees[6]}}{${frac_meme_denom_rangees[7]}}$.`;\n\n        frac_rangees = frac.sortFractions(\n          pb_4_f[0].fractionsB.f1[0],\n          pb_4_f[0].fractionsB.f1[1],\n          pb_4_f[0].fractionsB.f2[0],\n          pb_4_f[0].fractionsB.f2[1],\n          pb_4_f[0].fractionsB.f3[0],\n          pb_4_f[0].fractionsB.f3[1],\n          pb_4_f[0].fractionsB.f4[0],\n          pb_4_f[0].fractionsB.f4[1]\n        );\n\n        pb_4_f[0].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$, $\\\\dfrac{${frac_rangees[6]}}{${frac_rangees[7]}}$.`;\n\n        pb_4_f[0].correction += `<br> ${texte_en_couleur_et_gras(\n          `C'est donc en ${pb_4_f[0].fractionsSimp[\n          pb_4_f[0].fractionsSimp.indexOf(frac_rangees[6]) + 2\n          ]\n          } que le mandala est le plus recouvert.`\n        )}`;\n      }\n\n      //======================================================\n      //=========== Conclusion indice 1 le jardin\t ===========\n      //======================================================\n      pb_4_f[1].correction += `<br>Le jardin est donc occupé de la façon suivante : $\\\\dfrac{${pb_4_f[1].fractionsB.f1[0]}}{${pb_4_f[1].fractionsB.f1[1]}}$ par ${pb_4_f[1].fractionsB.cat1}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${pb_4_f[1].fractionsB.f2[0]}}{${pb_4_f[1].fractionsB.f2[1]}}$ par ${pb_4_f[1].fractionsB.cat2}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${pb_4_f[1].fractionsB.f3[0]}}{${pb_4_f[1].fractionsB.f3[1]}}$ par ${pb_4_f[1].fractionsB.cat3} et `;\n      pb_4_f[1].correction += `$\\\\dfrac{${pb_4_f[1].fractionsB.f4[0]}}{${pb_4_f[1].fractionsB.f4[1]}}$ par ${pb_4_f[1].fractionsB.cat4}.`;\n\n      pb_4_f[1].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_4_f[1].correction += `le jardin est donc occupé de la façon suivante : $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ par ${pb_4_f[1].fractionsB.cat1}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ par ${pb_4_f[1].fractionsB.cat2}, `;\n      pb_4_f[1].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ par ${pb_4_f[1].fractionsB.cat3} et `;\n      pb_4_f[1].correction += `$\\\\dfrac{${frac_meme_denom[6]}}{${frac_meme_denom[7]}}$ par ${pb_4_f[1].fractionsB.cat4}.`;\n\n      //let frac_rangees,frac_meme_denom_rangees;\n      if (\n        calcul(nq1 / dq1) == calcul(nq2 / dq2) &&\n        calcul(nq1 / dq1) == calcul(nq3 / dq3) &&\n        calcul(nq1 / dq1) == calcul(nq4 / dq4)\n      ) {\n        pb_4_f[1].correction += `<br> ${texte_en_couleur_et_gras(\n          `Les quatre fractions sont équivalentes, la même surface du jardin est donc occupée par les quatre cultures.`\n        )}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(\n          frac_meme_denom[0],\n          frac_meme_denom[1],\n          frac_meme_denom[2],\n          frac_meme_denom[3],\n          frac_meme_denom[4],\n          frac_meme_denom[5],\n          frac_meme_denom[6],\n          frac_meme_denom[7]\n        );\n        pb_4_f[1].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$, $\\\\dfrac{${frac_meme_denom_rangees[6]}}{${frac_meme_denom_rangees[7]}}$.`;\n\n        frac_rangees = frac.sortFractions(\n          pb_4_f[1].fractionsB.f1[0],\n          pb_4_f[1].fractionsB.f1[1],\n          pb_4_f[1].fractionsB.f2[0],\n          pb_4_f[1].fractionsB.f2[1],\n          pb_4_f[1].fractionsB.f3[0],\n          pb_4_f[1].fractionsB.f3[1],\n          pb_4_f[1].fractionsB.f4[0],\n          pb_4_f[1].fractionsB.f4[1]\n        );\n\n        pb_4_f[1].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$, $\\\\dfrac{${frac_rangees[6]}}{${frac_rangees[7]}}$.`;\n\n        pb_4_f[1].correction += `<br> ${texte_en_couleur_et_gras(\n          `C'est donc par ${pb_4_f[1].fractionsSimp[\n          pb_4_f[1].fractionsSimp.indexOf(frac_rangees[6]) + 2\n          ]\n          } que le jardin est le plus occupé.`\n        )}`;\n      }\n\n      //======================================================\n      //=========== Conclusion indice 2 le stade\t ===========\n      //======================================================\n      pb_4_f[2].correction += `<br>Le stade est donc occupé de la façon suivante : $\\\\dfrac{${pb_4_f[2].fractionsB.f1[0]}}{${pb_4_f[2].fractionsB.f1[1]}}$ pour ${pb_4_f[2].fractionsB.cat1}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${pb_4_f[2].fractionsB.f2[0]}}{${pb_4_f[2].fractionsB.f2[1]}}$ pour ${pb_4_f[2].fractionsB.cat2}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${pb_4_f[2].fractionsB.f3[0]}}{${pb_4_f[2].fractionsB.f3[1]}}$ pour ${pb_4_f[2].fractionsB.cat3} et `;\n      pb_4_f[2].correction += `$\\\\dfrac{${pb_4_f[2].fractionsB.f4[0]}}{${pb_4_f[2].fractionsB.f4[1]}}$ pour ${pb_4_f[2].fractionsB.cat4}.`;\n\n      pb_4_f[2].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n      pb_4_f[2].correction += `le stade est donc occupé de la façon suivante : $\\\\dfrac{${frac_meme_denom[0]}}{${frac_meme_denom[1]}}$ pour ${pb_4_f[2].fractionsB.cat1}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${frac_meme_denom[2]}}{${frac_meme_denom[3]}}$ pour ${pb_4_f[2].fractionsB.cat2}, `;\n      pb_4_f[2].correction += `$\\\\dfrac{${frac_meme_denom[4]}}{${frac_meme_denom[5]}}$ pour ${pb_4_f[2].fractionsB.cat3} et `;\n      pb_4_f[2].correction += `$\\\\dfrac{${frac_meme_denom[6]}}{${frac_meme_denom[7]}}$ pour ${pb_4_f[2].fractionsB.cat4}.`;\n\n      //let frac_rangees,frac_meme_denom_rangees;\n      if (\n        calcul(nq1 / dq1) == calcul(nq2 / dq2) &&\n        calcul(nq1 / dq1) == calcul(nq3 / dq3) &&\n        calcul(nq1 / dq1) == calcul(nq4 / dq4)\n      ) {\n        pb_4_f[2].correction += `<br> ${texte_en_couleur_et_gras(\n          `Les quatre fractions sont équivalentes, chaque catégorie a donc la même importance dans le stade.`\n        )}`;\n      } else {\n        frac_meme_denom_rangees = frac.sortFractions(\n          frac_meme_denom[0],\n          frac_meme_denom[1],\n          frac_meme_denom[2],\n          frac_meme_denom[3],\n          frac_meme_denom[4],\n          frac_meme_denom[5],\n          frac_meme_denom[6],\n          frac_meme_denom[7]\n        );\n        pb_4_f[2].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $\\\\dfrac{${frac_meme_denom_rangees[0]}}{${frac_meme_denom_rangees[1]}}$, $\\\\dfrac{${frac_meme_denom_rangees[2]}}{${frac_meme_denom_rangees[3]}}$, $\\\\dfrac{${frac_meme_denom_rangees[4]}}{${frac_meme_denom_rangees[5]}}$, $\\\\dfrac{${frac_meme_denom_rangees[6]}}{${frac_meme_denom_rangees[7]}}$.`;\n\n        frac_rangees = frac.sortFractions(\n          pb_4_f[2].fractionsB.f1[0],\n          pb_4_f[2].fractionsB.f1[1],\n          pb_4_f[2].fractionsB.f2[0],\n          pb_4_f[2].fractionsB.f2[1],\n          pb_4_f[2].fractionsB.f3[0],\n          pb_4_f[2].fractionsB.f3[1],\n          pb_4_f[2].fractionsB.f4[0],\n          pb_4_f[2].fractionsB.f4[1]\n        );\n\n        pb_4_f[2].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $\\\\dfrac{${frac_rangees[0]}}{${frac_rangees[1]}}$, $\\\\dfrac{${frac_rangees[2]}}{${frac_rangees[3]}}$, $\\\\dfrac{${frac_rangees[4]}}{${frac_rangees[5]}}$, $\\\\dfrac{${frac_rangees[6]}}{${frac_rangees[7]}}$.`;\n\n        pb_4_f[2].correction += `<br> ${texte_en_couleur_et_gras(\n          `C'est donc pour ${pb_4_f[2].fractionsSimp[\n          pb_4_f[2].fractionsSimp.indexOf(frac_rangees[6]) + 2\n          ]\n          } que le nombre de places est le plus important.`\n        )}`;\n      }\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // Triathlon des neiges --> VTT, ski de fond, course\n          texte = `${pb_3_f[0].enonce} <br> ${pb_3_f[0].question}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_3_f[0].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${pb_3_f[0].correction}`;\n          }\n          break;\n        case 2: //Miss Math --> Noémie, Samia, Alexia\n          texte = `${pb_3_f[1].enonce} <br> ${pb_3_f[1].question}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_3_f[1].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${pb_3_f[1].correction}`;\n          }\n          break;\n        case 3: // Mandala --> carmin, ocre jaune, turquoise, pourpre\n          texte = `${pb_4_f[0].enonce} <br> ${pb_4_f[0].question}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_4_f[0].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${pb_4_f[0].correction}`;\n          }\n          break;\n        case 4: // Jardin --> légumes, plantes aromatiques, semis, fraisiers\n          texte = `${pb_4_f[1].enonce} <br> ${pb_4_f[1].question}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_4_f[1].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${pb_4_f[1].correction}`;\n          }\n          break;\n        case 5: // Stade --> pays organisatuers, supporters, sponsors, vente libre\n          texte = `${pb_4_f[2].enonce} <br> ${pb_4_f[2].question}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> ${pb_4_f[2].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${pb_4_f[2].correction}`;\n          }\n          break;\n      }\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  //this.besoinFormulaireNumerique = ['Niveau de difficulté',4,\"1 : nombre enier positif\\n2 : nombre décimal positif\\n3 : nombre enier positif inférieur à un\\n4 : Mélange\"];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}