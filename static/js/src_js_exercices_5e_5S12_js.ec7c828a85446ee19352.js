/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_5e_5S12_js"],{

/***/ "./src/js/exercices/5e/5S12.js":
/*!*************************************!*\
  !*** ./src/js/exercices/5e/5S12.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Construire_Un_Diagramme)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\n\nconst titre = 'Représenter des données par un diagramme'\n\n/**\n * @Auteur Jean-Claude Lhote\n * \n */\nfunction Construire_Un_Diagramme() {\n    \"use strict\"\n    _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this)\n    this.titre = titre;\n    this.nb_questions = 1;\n    this.nb_questions_modifiable = false\n    this.nb_cols = 1;\n    this.nb_cols_corr = 1;\n    this.pas_de_version_LaTeX = false\n    this.pas_de_version_HMTL = false\n    this.sup = 3;\n    this.sup2 = 1;\n    this.sup3 = 1;\n\n    //  this.sup3 = false;\n    this.nouvelle_version = function () {\n        this.liste_questions = []\n        this.liste_corrections = []\n        let type_de_questions_disponibles\n        if (this.sup3 < 5) {\n            type_de_questions_disponibles = [parseInt(this.sup3)]\n        }\n        else {\n            type_de_questions_disponibles = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 4)]\n        }\n        let liste_hachures_disponibles = [0, 1, 3, 4, 5, 6, 7, 8, 9, 10]\n        let liste_motifs = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(liste_hachures_disponibles, 4)\n        let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(type_de_questions_disponibles, this.nb_questions)\n        let N = 0, nom, texte, texte_corr;\n        let nbAnimaux = 4; // nombre d'animaux différents dans l'énoncé\n        let lstAnimauxExo = []; //liste des animaux uniquement cités dans l'exercice\n        let lstNombresAnimaux = []; // liste des effectifs de chaque animal\n        let lstVal = [10, 20]; // liste des valeurs à éviter pour les effectifs\n\n        let objets_enonce, objets_correction, params_enonce, params_correction,coef,r,lstElementGraph,g\n        let lstAnimaux = ['girafes', 'zèbres', 'gnous', 'buffles', 'gazelles', 'crocodiles', 'rhinocéros', 'léopards', 'guépards', 'hyènes', 'lycaons', 'servals', 'phacochères'];\n        let lstNomParc = ['Dramve', 'Fatenmin', 'Batderfa', 'Vihi', 'Genser', 'Barbetdou', 'Dramrendu', 'Secai', 'Cipeudram', 'Cigel', 'Lisino', 'Fohenlan',\n            'Farnfoss', 'Kinecardine', 'Zeffari', 'Barmwich', 'Swadlincote', 'Swordbreak', 'Loshull', 'Ruyron', 'Fluasall', 'Blueross', 'Vlane'];\n\n        texte = 'Dans le parc naturel de ' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(lstNomParc) + ', il y a beaucoup d’animaux. Voici un tableau qui donne le nombre d’individus de quelques espèces.<br><br>';\n        texte_corr = ''\n        let entete = ['\\\\text{Animaux}']\n        let contenutableau,A,B,T,angle, a, legende, textelegende, hachures,a0,t,alpha\n        switch (parseInt(this.sup)) {\n            case 1: nbAnimaux = 2; break;\n            case 2: nbAnimaux = 3; break;\n            case 3: nbAnimaux = 4; break;\n            default: nbAnimaux = 4;\n        }\n        switch (parseInt(this.sup2)) {\n            case 1:\n                for (let i = 0; i < nbAnimaux; i++) {\n                    N = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 50, lstVal); // choisit un nombre entre 2 et 100 sauf dans les valeurs à éviter\n                    lstNombresAnimaux.push(N);\n                    lstVal = lstVal.concat([N - 1, N, N + 1]); // valeurs à supprimer pour éviter des valeurs proches\n                }\n                break;\n            case 2:\n                for (let i = 0; i < nbAnimaux; i++) {\n                    N = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 50, lstVal); // choisit un nombre entre 2 et 100 sauf dans les valeurs à éviter\n                    lstNombresAnimaux.push(10 * N);\n                    lstVal = lstVal.concat([N - 1, N, N + 1]); // valeurs à supprimer pour éviter des valeurs proches\n                }\n                break;\n        }\n        let effectiftotal = 0\n        for (let i = 0; i < nbAnimaux; i++) {\n            effectiftotal += lstNombresAnimaux[i]\n        }\n        for (let i = 0; i < nbAnimaux; i++) {\n            nom = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(lstAnimaux, lstAnimauxExo); // choisit un animal au hasard sauf parmi ceux déjà utilisés\n            lstAnimauxExo.push(nom);\n            entete.push(`\\\\text{${nom}}`)\n        }\n        texte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tab_C_L)(entete, ['\\\\text{Effectifs}'], lstNombresAnimaux)}<br><br>`\n        objets_enonce = []\n        objets_correction = []\n\n        switch (liste_type_de_questions[0]) {\n            case 1:\n                texte += `Représenter ces données par un diagramme circulaire.<br><br>`\n                entete.push('\\\\text{Totaux}')\n                contenutableau = []\n                for (let i = 0; i < nbAnimaux; i++) {\n                    contenutableau.push(lstNombresAnimaux[i])\n                }\n                contenutableau.push(effectiftotal)\n                for (let i = 0; i < nbAnimaux; i++) {\n                    contenutableau.push((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_fraction)(lstNombresAnimaux[i], effectiftotal) + '\\\\approx ' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(lstNombresAnimaux[i] / effectiftotal, 2))\n                }\n                contenutableau.push('1')\n                for (let i = 0; i < nbAnimaux; i++) {\n                    contenutableau.push(`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_fraction)(lstNombresAnimaux[i], effectiftotal)} \\\\times 360 \\\\approx ${Math.round(lstNombresAnimaux[i] * 360 / effectiftotal)}\\\\degree`)\n                }\n                contenutableau.push(`360\\\\degree`)\n\n                texte_corr += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tab_C_L)(entete, ['\\\\text{Éffectifs}', '\\\\text{Fréquences}', '\\\\text{Angles}'], contenutableau, 3)}<br>`\n\n                A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0)\n                B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(6, 0)\n                T = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(7, 0)\n                a0 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cercleCentrePoint)(A, B,'black')\n                objets_enonce.push(a0)\n                objets_correction.push(a0)\n                alpha = 0;\n\n                t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A)\n                t.style = '+'\n                objets_enonce.push(t)\n                objets_correction.push(t)\n\n                for (let i = 0; i < nbAnimaux; i++) {\n                    angle = 360 * lstNombresAnimaux[i] / effectiftotal\n                    a = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.arc)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, alpha), A, angle, true, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i + 1), 'black', 0.7)\n                    hachures = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.motifs)(liste_motifs[i])\n                    a.hachures = hachures\n                    a.couleurDeRemplissage=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i + 1)\n                    a.couleurDesHachures=a.couleurDeRemplissage\n                    objets_correction.push(a)\n                    alpha += angle\n                    legende = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.carre)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(T, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(0, 1.5 * i)), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(T, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1, 1.5 * i)), 'black')\n                    legende.couleurDeRemplissage = a.couleurDeRemplissage\n                    legende.couleurDesHachures = a.couleurDesHachures\n                    legende.hachures = hachures\n                    legende.opaciteDeRemplissage = 0.7\n                    textelegende = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)(lstAnimauxExo[i], 8.5, i * 1.5 + .5, 0, 'black', 1.5, 'gauche', false)\n                    objets_correction.push(legende, textelegende)\n                    params_enonce = { xmin: -6.5, ymin: -6.5, xmax: 6.5, ymax: 6.5, pixelsParCm: 20, scale: 1, mainlevee: false }\n                    params_correction = { xmin: -6.5, ymin: -6.5, xmax: 20, ymax: 6.5, pixelsParCm: 20, scale: 1, mainlevee: false }\n\n                }\n                break\n            case 2:\n                texte += `Représenter ces données par un diagramme semi-circulaire.<br><br>`\n                entete.push('\\\\text{Totaux}')\n                contenutableau = []\n                for (let i = 0; i < nbAnimaux; i++) {\n                    contenutableau.push(lstNombresAnimaux[i])\n                }\n                contenutableau.push(effectiftotal)\n                for (let i = 0; i < nbAnimaux; i++) {\n                    contenutableau.push((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_fraction)(lstNombresAnimaux[i], effectiftotal) + '\\\\approx ' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(lstNombresAnimaux[i] / effectiftotal, 2))\n                }\n                contenutableau.push('1')\n                for (let i = 0; i < nbAnimaux; i++) {\n                    contenutableau.push(`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_fraction)(lstNombresAnimaux[i], effectiftotal)} \\\\times 180 \\\\approx ${Math.round(lstNombresAnimaux[i] * 180 / effectiftotal)}\\\\degree`)\n                }\n                contenutableau.push(`180\\\\degree`)\n\n                texte_corr += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tab_C_L)(entete, ['\\\\text{Éffectifs}', '\\\\text{Fréquences}', '\\\\text{Angles}'], contenutableau, 3)}<br>`\n\n                A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0)\n                B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(6, 0)\n                T = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(7, 0)\n                a0 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.arc)(B, A, 180, true, 'white', 'black')\n                objets_enonce.push(a0)\n                objets_correction.push(a0)\n                alpha = 0;\n                angle, a, legende, textelegende, hachures\n                t = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A)\n                t.style = '+'\n                objets_enonce.push(t)\n                objets_correction.push(t)\n\n                for (let i = 0; i < nbAnimaux; i++) {\n                    angle = 180 * lstNombresAnimaux[i] / effectiftotal\n                    a = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.arc)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, alpha), A, angle, true, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i + 1), 'black', 0.7)\n                    hachures = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.motifs)(liste_motifs[i])\n                    a.hachures = hachures\n                    a.couleurDeRemplissage=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i + 1)\n                    a.couleurDesHachures=a.couleurDeRemplissage\n                    objets_correction.push(a)\n                    alpha += angle\n                    legende = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.carre)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(T, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(0, 1.5 * i)), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(T, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(1, 1.5 * i)), 'black')\n                    legende.couleurDeRemplissage = a.couleurDeRemplissage\n                    legende.couleurDesHachures = a.couleurDesHachures\n                    legende.hachures = hachures\n                    legende.opaciteDeRemplissage = 0.7\n                    textelegende = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)(lstAnimauxExo[i], 8.5, i * 1.5 + .5, 0, 'black', 1.5, 'gauche', false)\n                    objets_correction.push(legende, textelegende)\n                    params_enonce = { xmin: -6.5, ymin: -0.2, xmax: 6.5, ymax: 6.5, pixelsParCm: 20, scale: 1, mainlevee: false }\n                    params_correction = { xmin: -6.5, ymin: -0.2, xmax: 20, ymax: 6.5, pixelsParCm: 20, scale: 1, mainlevee: false }\n\n                }\n                break\n            case 3:\n                texte += `Représenter ces données par un diagramme en barres.<br>`\n                coef = 1;\n                switch (parseInt(this.sup2)) {\n                    case 1:\n                        coef = 1;\n                        break;\n                    case 2:\n                        coef = 10;\n                        break;\n                }\n                 r = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.repere2)({\n                    grilleX: false,\n                    grilleY: 'pointilles',\n                    xThickListe: [],\n                    xLabelListe: [],\n                    yUnite: .1 / coef,\n                    yThickDistance: 10 * coef,\n                    yMax: 60 * coef,\n                    xMin: 0,\n                    xMax: 10,\n                    yMin: 0,\n                    axeXStyle: '',\n                    yLegende: \"Nombre d'individus\"\n                });\n\n                 lstElementGraph = []\n                for (let i = 0; i < nbAnimaux; i++) {\n                    objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceBarre)((((r.xMax - r.xMin) / (nbAnimaux + 1)) * (i + 1)), lstNombresAnimaux[i], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.premiere_lettre_en_majuscule)(lstAnimauxExo[i]), { unite: .1 / coef,couleurDeRemplissage:(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i+1),hachures:\"north east lines\" }))\n                }\n                objets_correction.push(r)\n                params_enonce = { xmin: -6.5, ymin: 0, xmax: 6.5, ymax: 0, pixelsParCm: 20, scale: 1, mainlevee: false }\n                params_correction = { xmin: -6.5, ymin: -3, xmax: 20, ymax: 7, pixelsParCm: 20, scale: 1, mainlevee: false }\n\n                break\n\n            case 4:\n                texte += `Représenter ces données par un graphique cartésien.<br>`\n                coef = 1;\n                switch (parseInt(this.sup2)) {\n                    case 1:\n                        coef = 1;\n                        break;\n                    case 2:\n                        coef = 10;\n                        break;\n                }\n                r = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.repere2)({\n                    grilleX: false,\n                    grilleY: 'pointilles',\n                    xThickListe: [],\n                    xLabelListe: [],\n                    yUnite: .1 / coef,\n                    yThickDistance: 10 * coef,\n                    yMax: 60 * coef,\n                    xMin: 0,\n                    xMax: 10,\n                    yMin: 0,\n                    axeXStyle: '',\n                    yLegende: \"Nombre d'individus\"\n                });\n\n                lstElementGraph = []\n                for (let i = 0; i < nbAnimaux; i++) {\n                lstElementGraph.push([(i+1)*2,lstNombresAnimaux[i]])  \n                objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)(lstAnimauxExo[i],(i+1)*2,-0.2,66,'black',1,'gauche')) \n                objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)((i+1)*2,-0.1,(i+1)*2,0.1))\n                }\n                g=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceGraphiqueCartesien)(lstElementGraph,r,{couleurDesPoints : 'red',\n                couleurDuTrait : 'lightgray',\n                styleDuTrait : '', //plein par défaut\n                epaisseurDuTrait : 1,\n                styleDesPoints : 'o', //croix par défaut\n                tailleDesPoints : 3})\n           \n                objets_correction.push(r,g)\n\n                params_enonce = { xmin: -6.5, ymin: 0, xmax: 6.5, ymax: 0, pixelsParCm: 20, scale: 1, mainlevee: false }\n                params_correction = { xmin: -6.5, ymin: -3, xmax: 20, ymax: 7 , pixelsParCm: 20, scale: 1, mainlevee: false }\n\n                break\n        }\n        texte += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(params_enonce, objets_enonce)\n        texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(params_correction, objets_correction)\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu_sans_numero)(this); // On envoie l'exercice à la fonction de mise en page\n    };\n    this.besoin_formulaire_numerique = [`Nombre d'espèces différentes`, 3, ` 2 espèces\\n 2 : 3 espèces\\n 3 : 4 espèces`];\n    this.besoin_formulaire2_numerique = [`Valeurs numériques`, 2, ` Entre 1 et 100\\n Entre 100 et 1 000`];\n    this.besoin_formulaire3_numerique = ['Type de diagramme', 5, '1 : Diagramme circulaire\\n2 : Diagramme semi-circulaire\\n3 : Diagramme en barres\\n4 : Diagramme cartésien\\n5 : Au hasard']\n\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/5e/5S12.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);