{"version":3,"file":"js/64292.5161f1abb91c5550629c.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/1e/1F10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes,ecritureAlgebrique,ecritureAlgebriqueSauf1,lettreMinusculeDepuisChiffre} from '../../modules/outils.js'\nimport {simplify, parse, derivative } from 'mathjs'\nconst math = { simplify: simplify, parse: parse, derivative: derivative}\nexport const titre = 'Calculs de dérivées'\n\n/**\n * Calculs de dérivés\n * @author Rémi Angot\n * Référence 1F10\n*/\nexport default function CalculsDeDerives() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"Pour chacune des fonctions suivantes, dire sur quel ensemble elle est dérivable, puis déterminer l'expression de sa fonction dérivée.\";\n  this.nbQuestions = 6;\n  this.nbCols = 2; // Nombre de colonnes pour la sortie LaTeX\n  this.nbColsCorr = 2; // Nombre de colonnes dans la correction pour la sortie LaTeX\n  this.sup = 1;\n  // On modifie les règles de simplifications par défaut de math.js pour éviter 10x+10 = 10(x+1) et -4x=(-4x)\n  let reglesDeSimplifications = math.simplify.rules.slice();\n  reglesDeSimplifications.splice(reglesDeSimplifications.findIndex(rule => rule.l == \"n1*n2 + n2\"), 1);\n  reglesDeSimplifications.splice(reglesDeSimplifications.findIndex(rule => rule.l == \"n1*n3 + n2*n3\"), 1);\n  //    reglesDeSimplifications.push({l:\"-(n1*v^2)\",r:\"-n1*v^2\"})     \n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    this.liste_valeurs = []; // Les questions sont différentes du fait du nom de la fonction, donc on stocke les valeurs\n\n    let listeTypeDeQuestions_disponibles;\n    if (this.sup == 1) {\n      listeTypeDeQuestions_disponibles = ['ax+b', 'a', 'ax2+bx+c', 'xn', 'xn+xm', '1/x', 'xn+1/x', '1/xn', 'xn+1/xm', 'racine(x)'];\n    }\n    if (this.sup == 2) {\n      listeTypeDeQuestions_disponibles = ['ax+b', 'axn', 'a/x', 'a/xn', 'racine(ax)'];\n    }\n    if (this.sup == 3) {\n      listeTypeDeQuestions_disponibles = ['ax+b', 'axn', 'a/x', 'a/xn', 'racine(ax)'];\n    }\n    let listeTypeDeQuestions = combinaisonListes(listeTypeDeQuestions_disponibles, this.nbQuestions);\n\n\n    for (let i = 0, texte, texteCorr, a, b, c, n, m, expression, ensembleDerivation, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case 'a':\n          a = randint(-10, 10, 0);\n          expression = `${a}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case 'ax+b':\n          a = randint(-10, 10, 0);\n          b = randint(-10, 10, 0);\n          expression = `${a}x  ${ecritureAlgebrique(b)}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case 'ax2+bx+c':\n          a = randint(-10, 10, 0);\n          b = randint(-10, 10, 0);\n          c = randint(-10, 10, 0);\n          expression = `${a} x^2  ${ecritureAlgebriqueSauf1(b)} x  ${ecritureAlgebrique(c)}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case 'xn':\n          n = randint(2, 10);\n          expression = `x^${n}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case 'xn+1/x':\n          n = randint(2, 10);\n          expression = `x^${n}+1/x`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case 'xn+1/xm':\n          n = randint(2, 10);\n          m = randint(2, 10, m);\n          expression = `x^${n}+1/x^${m}`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case 'xn+xm':\n          n = randint(2, 10);\n          m = randint(2, 10, m);\n          expression = `x^${n}+x^${m}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case 'axn':\n          a = randint(-10, 10, [0, 1, -1]);\n          n = randint(2, 10);\n          expression = `${a}x^${n}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case '1/x':\n          expression = `1/x`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case 'a/x':\n          a = randint(-10, 10, [0, 1]);\n          expression = `${a}/x`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case '1/xn':\n          n = randint(2, 10);\n          expression = `${1}/x^${n}`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case 'a/xn':\n          a = randint(-10, 10, [1, 0]);\n          n = randint(2, 10);\n          expression = `${a}/x^${n}`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case 'racine(x)':\n          expression = `sqrt(x)`;\n          ensembleDerivation = `[0,+\\\\infin[`;\n          break;\n        case 'racine(ax)':\n          a = randint(2, 10, [4, 9]);\n          expression = `sqrt(${a}x)`;\n          ensembleDerivation = `[0,+\\\\infin[`;\n          break;\n\n      }\n\n      texte = `$${lettreMinusculeDepuisChiffre(i + 6)}:x\\\\longmapsto ${math.parse(expression).toTex({ 'implicit': 'hide' }).replaceAll('\\\\cdot', '')}$`;\n      texteCorr = `$${lettreMinusculeDepuisChiffre(i + 6)}$ est dérivable sur $${ensembleDerivation}$ et $ ${lettreMinusculeDepuisChiffre(i + 6)}':x\\\\longmapsto ${math.simplify(math.derivative(expression, 'x'), reglesDeSimplifications).toTex({ 'implicit': 'hide' }).replaceAll('\\\\cdot', '')}$`;\n\n      texte = texte.replaceAll('frac', 'dfrac');\n      texteCorr = texteCorr.replaceAll('frac', 'dfrac');\n\n\n      if (this.liste_valeurs.indexOf(expression) == -1) {\n        this.liste_valeurs.push(expression);\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Fonctions de base \\n2 : ku']; //\\n3 : u/v, uv'];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["math","simplify","parse","derivative","titre","CalculsDeDerives","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","reglesDeSimplifications","rules","slice","splice","findIndex","rule","l","nouvelleVersion","listeTypeDeQuestions_disponibles","listeQuestions","listeCorrections","liste_valeurs","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","n","m","expression","ensembleDerivation","i","cpt","randint","ecritureAlgebrique","ecritureAlgebriqueSauf1","lettreMinusculeDepuisChiffre","toTex","replaceAll","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}