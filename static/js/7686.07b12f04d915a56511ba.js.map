{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5G30-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Egalite_d_angles","Exercice","this","sup","nbQuestions","sortieHtml","spacing","spacingCorr","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","consigne","choix","figure","randint","parseInt","A","B","C","D","E","a","ac","ce","c","AE","BD","CA","CE","c1","c2","c3","c4","c5","m1","m2","l1","enonce","correction","params","gras","objets","noms","choisitLettresDifferentes","point","similitude","rotation","droite","epaisseur","pointSurSegment","droiteParPointEtParallele","pointIntersectionDD","codeAngle","labelPoint","push","Math","round","angle","numAlpha","miseEnEvidence","xmin","min","x","ymin","y","xmax","max","ymax","scale","fig1","mathalea2d","ab","cd","ad","d","AB","BE","cA","cD","cE","c6","longueur","arrondi","fig2","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/7686.07b12f04d915a56511ba.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,arrondi,choisitLettresDifferentes,miseEnEvidence,numAlpha} from '../../modules/outils.js'\nimport {point,pointSurSegment,pointIntersectionDD,labelPoint,droite,droiteParPointEtParallele,rotation,similitude,codeAngle,longueur,angle,mathalea2d} from '../../modules/2d.js'\n\nexport const titre = 'Déterminer des angles en utilisant les cas d’égalité'\n\n/**\n * Déterminer des angles en utilisant les cas d'égalités : opposés par le sommet, alternes-internes, correspondants...\n * ref 5G30-1\n * publié le 14/11/2020\n * @Auteur Jean-Claude Lhote Inspiré d'exercices du manuel sésamath.\n */\nexport default function Egalite_d_angles() {\n\t\"use strict\";\n\tExercice.call(this);\n\tthis.sup = 1;\n\tthis.nbQuestions = 1;\n\tif (sortieHtml) {\n\t\tthis.spacing = 2;\n\t\tthis.spacingCorr = 3;\n\t}\n\telse {\n\t\tthis.spacing = 2;\n\t\tthis.spacingCorr = 2;\n\t}\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.titre = titre;\n\tthis.nouvelleVersion = function () {\n\t\tthis.listeQuestions = [];\n\t\tthis.listeCorrections = [];\n\t\tthis.consigne = \"Cet exercice est inspiré d'un exercice du manuel sésamath 5e\";\n\t\tlet figure = [], choix;\n\t\tlet fig1 = function () {\n\t\t\tlet A, B, C, D, E, a, ac, ce, c, AE, BD, CA, CE, c1, c2, c3, c4, c5, m1, m2, l1, objets = [], enonce, correction, params;\n\t\t\tlet noms = choisitLettresDifferentes(5, 'Q', true), gras;\n\t\t\tsortieHtml ? gras = \"#f15929\" : gras = `black`;\n\t\t\tA = point(0, 0, noms[0], 'above left');\n\t\t\ta = randint(45, 85);\n\t\t\tac = randint(8, 10);\n\t\t\tce = randint(7, 10, ac);\n\t\t\tC = similitude(rotation(point(1, 0), A, randint(-45, 45)), A, a, ac, noms[2], 'left');\n\t\t\tc = randint(45, 70);\n\t\t\tE = similitude(A, C, c, ce / ac, noms[4], 'above right');\n\t\t\tCA = droite(C, A);\n\t\t\tCE = droite(C, E);\n\t\t\tAE = droite(A, E, '', 'gray');\n\t\t\tAE.epaisseur = 2;\n\t\t\tB = pointSurSegment(A, C, randint(3, ac - 4), noms[1], 'above left');\n\t\t\tBD = droiteParPointEtParallele(B, AE, '', 'gray');\n\t\t\tBD.epaisseur = 2;\n\t\t\tD = pointIntersectionDD(BD, CE, noms[3], 'above right');\n\t\t\tm1 = codeAngle(E, A, C, 1, '', 'black', 2, 1, 'black', 0.1, true);\n\t\t\tm2 = codeAngle(A, C, E, 1, '', 'black', 2, 1, 'black', 0.1, true);\n\t\t\tl1 = labelPoint(A, B, C, D, E);\n\t\t\tc1 = codeAngle(D, B, A, 1, '', 'blue', 2, 1, 'blue');\n\t\t\tc2 = codeAngle(B, D, E, 1, '', 'orange', 2, 1, 'orange');\n\t\t\tc3 = codeAngle(D, E, A, 1, '', 'green', 2, 1, 'green');\n\t\t\tc4 = codeAngle(D, B, C, 1, '', 'pink', 2, 1, 'pink');\n\t\t\tc5 = codeAngle(C, D, B, 1, '', 'red', 2, 1, 'red');\n\t\t\tobjets.push(CA, CE, AE, BD, m1, m2, c1, c2, c3, c4, c5, l1);\n\t\t\ta = Math.round(angle(E, A, C));\n\t\t\tenonce = `Dans la figure ci-dessous,  les droites $(${noms[0]}${noms[4]})$ et $(${noms[1]}${noms[3]})$ sont parallèles.<br>`;\n\t\t\tenonce += `On veut déterminer la mesure des angles du quadrilatère $${noms[0]}${noms[1]}${noms[3]}${noms[4]}$ (toutes les réponses doivent être justifiées).<br>`;\n\t\t\tenonce += `${numAlpha(0)} Déterminer la mesure de l'angle $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$.<br>`;\n\t\t\tenonce += `${numAlpha(1)} En déduire la mesure de l'angle $\\\\widehat{${noms[0]}${noms[1]}${noms[3]}}$.<br>`;\n\t\t\tenonce += `${numAlpha(2)} En utilisant la question ${numAlpha(0)}, déterminer la mesure de l'angle $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}$.<br>`;\n\t\t\tenonce += `${numAlpha(3)} En déduire la mesure de l'angle $\\\\widehat{${noms[1]}${noms[3]}${noms[4]}}$.<br>`;\n\t\t\tenonce += `${numAlpha(4)} En utilisant la question ${numAlpha(2)} déterminer la mesure de l'angle $\\\\widehat{${noms[3]}${noms[4]}${noms[0]}}$.<br>`;\n\t\t\tenonce += `${numAlpha(5)} Vérifier la conjecture suivante : « La somme des angles d'un quadrilatère vaut 360°.»<br>`;\n\t\t\tcorrection = `${numAlpha(0)} Comme les droites $(${noms[0]}${noms[4]})$ et $(${noms[1]}${noms[3]})$ sont parallèles, les angles correspondants $\\\\widehat{${noms[4]}${noms[0]}${noms[1]}}$ et $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$ sont égaux, donc $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$ mesure $${a}\\\\degree$.<br>`;\n\t\t\tcorrection += `${numAlpha(1)} Les angles $\\\\widehat{${noms[0]}${noms[1]}${noms[3]}}$ et $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$ sont adjacents supplémentaires, donc $\\\\widehat{${noms[0]}${noms[1]}${noms[3]}}$ mesure $180\\\\degree-${a}\\\\degree=${miseEnEvidence(180 - a, gras)}\\\\degree$.<br>`;\n\t\t\tcorrection += `${numAlpha(2)} Dans un triangle, la somme des angles vaut $180\\\\degree$ donc $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}=180\\\\degree-\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}-\\\\widehat{${noms[1]}${noms[2]}${noms[3]}}=180\\\\degree-${a}\\\\degree-${c}\\\\degree=${180 - a - c}\\\\degree$.<br>`;\n\t\t\tcorrection += `${numAlpha(3)} Les angles $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}$ et $\\\\widehat{${noms[1]}${noms[3]}${noms[4]}}$ sont adjacents supplémentaires, donc $\\\\widehat{${noms[1]}${noms[3]}${noms[4]}}$ mesure $180\\\\degree-${180 - a - c}\\\\degree=${miseEnEvidence(a + c, gras)}\\\\degree$.<br>`;\n\t\t\tcorrection += `${numAlpha(4)} Comme les droites $(${noms[0]}${noms[4]})$ et $(${noms[1]}${noms[3]})$ sont parallèles, les angles correspondants $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}$ et $\\\\widehat{${noms[3]}${noms[4]}${noms[0]}}$ sont égaux, donc $\\\\widehat{${noms[3]}${noms[4]}${noms[0]}}$ mesure $${miseEnEvidence(180 - a - c, gras)}\\\\degree$.<br>`;\n\t\t\tcorrection += `${numAlpha(5)} La somme des angles du quadrilatère vaut donc : $${a}\\\\degree+${miseEnEvidence(180 - a, gras)}\\\\degree+${miseEnEvidence(a + c, gras)}\\\\degree+${miseEnEvidence(180 - a - c, gras)}\\\\degree=180\\\\degree+180\\\\degree=360\\\\degree$.<br>`;\n\t\t\tcorrection += `$\\\\phantom{f}$ La conjecture est finalement vraie.`;\n\t\t\tparams = { xmin: Math.min(A.x - 8, C.x - 8, E.x - 8), ymin: Math.min(A.y - 1, E.y - 1, C.y - 1), xmax: Math.max(E.x + 2, A.x + 2, C.x + 2), ymax: Math.max(C.y + 2, A.y + 2, E.y + 2), scale: 0.7 };\n\n\t\t\treturn [objets, params, enonce, correction];\n\t\t};\n\t\tlet fig2 = function () {\n\t\t\tlet A, B, C, D, E, a, ac, ab, cd, ad, d, AB, BE, CA, CE, cA, cD, cE, c3, c4, c5, c6, l1, objets = [], enonce, correction, params;\n\t\t\tlet noms = choisitLettresDifferentes(5, 'Q', true);\n\t\t\tA = point(0, 0, noms[0], 'above left');\n\t\t\tB = rotation(point(randint(8, 10), randint(1, 3)), A, randint(-40, 40), noms[1], 'right');\n\t\t\tab = longueur(A, B);\n\t\t\tac = randint(6, 8);\n\t\t\ta = randint(40, 60);\n\t\t\tC = similitude(B, A, a, ac / ab, noms[2], 'above left');\n\t\t\tCA = droite(C, A);\n\t\t\tAB = droite(A, B);\n\t\t\tD = pointSurSegment(A, B, ab / 2 + randint(-1, 1, 0) / 10, noms[3], 'below');\n\t\t\tCE = droite(C, D);\n\t\t\tcd = longueur(C, D);\n\t\t\tad = longueur(A, D);\n\t\t\tE = pointSurSegment(C, D, cd * ab / ad, noms[4], 'below right');\n\t\t\tBE = droite(B, E);\n\t\t\td = arrondi(angle(C, D, B), 0);\n\t\t\tcA = codeAngle(D, A, C, 1, '', 'black', 2, 1, 'black', 0.2, true);\n\t\t\tcD = codeAngle(C, D, B, 1, '', 'red', 2, 1, 'red', 0.2, true);\n\t\t\tcE = codeAngle(D, E, B, 1, '', 'blue', 2, 1, 'blue', 0.2, true);\n\t\t\tc4 = codeAngle(A, C, D, 1, '', 'green', 2, 1, 'green', 0.2);\n\t\t\tc5 = codeAngle(B, D, E, 1, '', 'orange', 2, 1, 'orange', 0.2);\n\t\t\tc6 = codeAngle(E, B, D, 1, '', 'pink', 2, 1, 'pink', 0.2);\n\t\t\tc3 = codeAngle(A, D, C, 1, '', 'gray', 2, 1, 'gray', 0.2);\n\t\t\tl1 = labelPoint(A, B, C, D, E);\n\t\t\tobjets.push(CA, AB, CE, BE, cA, cD, cE, c3, c4, c5, c6, l1);\n\t\t\tenonce = `La figure n'est pas en vraie grandeur. Toutes les réponses devront être justifiées.<br>`;\n\t\t\tenonce += `${numAlpha(0)} Déterminer la mesure de l'angle $\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}$.<br>`;\n\t\t\tenonce += `${numAlpha(1)} En déduire la mesure de l'angle $\\\\widehat{${noms[3]}${noms[2]}${noms[0]}}$.<br>`;\n\t\t\tenonce += `${numAlpha(2)} Déterminer si les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ sont parallèles.<br>`;\n\t\t\tenonce += `${numAlpha(3)} Si on considère que les segments $[${noms[0]}${noms[2]}]$ et $[${noms[4]}${noms[1]}]$ sont de même longueur, Déterminer la nature du quadrilatère $${noms[0]}${noms[2]}${noms[1]}${noms[4]}$.<br>`;\n\t\t\tcorrection = `${numAlpha(0)} Les angles $\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}$ et $\\\\widehat{${noms[2]}${noms[3]}${noms[1]}}$ sont adjacents supplémentaires, donc $\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}$ mesure $180\\\\degree-${d}\\\\degree=${180 - d}\\\\degree$.<br>`;\n\t\t\tcorrection += `${numAlpha(1)} Dans un triangle, la somme des angles vaut $180\\\\degree$ donc $\\\\widehat{${noms[0]}${noms[2]}${noms[3]}}=180-\\\\widehat{${noms[3]}${noms[0]}${noms[2]}}-\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}=180\\\\degree-${a}\\\\degree-${180 - d}\\\\degree=${-a + d}\\\\degree$.<br>`;\n\t\t\tcorrection += `${numAlpha(2)} Pour les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ coupées par la sécante $(${noms[2]}${noms[4]})$ les angles $\\\\widehat{${noms[0]}${noms[2]}${noms[3]}}$ et $\\\\widehat{${noms[1]}${noms[4]}${noms[3]}}$ sont des angles alternes-internes.<br>`;\n\t\t\tcorrection += `$\\\\phantom{c/}$ Or si des angles alternes-internes sont égaux, cela signifie que les droites coupées par la sécante sont parallèles.<br>`;\n\t\t\tcorrection += `$\\\\phantom{c/}$ Les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ sont donc parallèles.<br>`;\n\t\t\tcorrection += `${numAlpha(3)} Les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ sont parallèles et les segments $[${noms[0]}${noms[2]}]$ et $[${noms[4]}${noms[1]}]$ sont de même longueur.<br>`;\n\t\t\tcorrection += `$\\\\phantom{c/}$ Or, un quadrilatère qui possède des côtés opposés parallèles et de même longueur est un parallèlogramme.<br>`;\n\t\t\tcorrection += `$\\\\phantom{c/}$ Donc $${noms[0]}${noms[2]}${noms[1]}${noms[4]}$ est un parallèlogramme et $${noms[3]}$ est son centre.`;\n\t\t\tparams = { xmin: Math.min(A.x, B.x, C.x, D.x, E.x) - 1, ymin: Math.min(A.y, B.y, C.y, D.y, E.y) - 1, xmax: Math.max(A.x, B.x, C.x, D.x, E.x) + 2, ymax: Math.max(A.y, B.y, C.y, D.y, E.y) + 2 };\n\n\t\t\treturn [objets, params, enonce, correction];\n\t\t};\n\t\tif (this.sup == 3)\n\t\t\tchoix = randint(1, 2);\n\t\telse\n\t\t\tchoix = parseInt(this.sup);\n\t\tswitch (choix) {\n\t\t\tcase 1:\n\t\t\t\tfigure = fig1();\n\t\t\t\tfigure[2] += mathalea2d(figure[1], figure[0]);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tfigure = fig2();\n\t\t\t\tfigure[2] += mathalea2d(figure[1], figure[0]);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.listeQuestions.push(figure[2]);\n\t\tthis.listeCorrections.push(figure[3]);\n\t\tlisteQuestionsToContenu(this);\n\t};\n\tthis.besoinFormulaireNumerique = ['Numéro de figure', 3, '1 : Le trapèze\\n2: Le papillon\\n3: Au hasard'];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}