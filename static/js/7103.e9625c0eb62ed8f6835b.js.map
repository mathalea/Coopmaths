{"version":3,"file":"js/7103.e9625c0eb62ed8f6835b.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C22-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, ecritureParentheseSiNegatif, abs, pgcd, texFractionSigne, obtenirListeFractionsIrreductibles, texFraction } from '../../modules/outils.js'\nimport { fraction } from '../../modules/fractions.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Diviser des fractions'\nexport const amcReady = true\nexport const amcType = 'AMCOpenNum✖︎2' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n/**\n * Calcul du quotient de deux fractions. Paramétrages possibles :\n * * 1 : Nombres positifs exclusivement\n * * 2 : nombres relatifs\n * @author Jean-Claude Lhote\n * 4C22-2\n */\nexport default function ExerciceDiviserFractions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 1 // Avec ou sans relatifs\n  this.titre = titre\n  this.consigne = 'Calculer et donner le résultat sous forme irréductible'\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const listeFractions = obtenirListeFractionsIrreductibles()\n\n    const typesDeQuestionsDisponibles = [parseInt(this.sup)]\n    let nombreDeSigneMoins\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    )\n    for (\n      let i = 0,\n        ab,\n        cd,\n        a,\n        b,\n        c,\n        d,\n        p,\n        signe,\n        texte,\n        reponse,\n        texteCorr,\n        typesDeQuestions,\n        cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      do {\n        ab = choice(listeFractions)\n        cd = choice(listeFractions)\n        a = ab[0]\n        b = ab[1]\n        c = cd[0]\n        d = cd[1]\n      } while ((a * d) % (b * c) === 0)\n      p = pgcd(a * d, b * c)\n\n      switch (typesDeQuestions) {\n        case 1: // fraction / fraction tout positif\n          texte = `$${texFraction(a, b)}\\\\div${texFraction(c, d)}=$`\n          if (p === 1) {\n            texteCorr = `$${texFraction(a, b)}\\\\div${texFraction(\n              c,\n              d\n            )}=${texFraction(a, b)}\\\\times${texFraction(d, c)}=${texFraction(\n              a + '\\\\times' + d,\n              b + '\\\\times' + c\n            )}=${texFraction(a * d, b * c)}$`\n          } else {\n            texteCorr = `$${texFraction(a, b)}\\\\div${texFraction(\n              c,\n              d\n            )}=${texFraction(a, b)}\\\\times${texFraction(d, c)}=${texFraction(\n              a + '\\\\times' + d,\n              b + '\\\\times' + c\n            )}=${texFraction(a * d, b * c)}=${texFraction(\n              (a * d) / p + '\\\\times\\\\cancel{' + p + '}',\n              (b * c) / p + '\\\\times\\\\cancel{' + p + '}'\n            )}=${texFraction((a * d) / p, (b * c) / p)}$`\n          }\n          break\n\n        case 2:\n          a = a * randint(-1, 1, [0])\n          b = b * randint(-1, 1, [0])\n          c = c * randint(-1, 1, [0])\n          d = d * randint(-1, 1, [0])\n          nombreDeSigneMoins = (a < 0) + (b < 0) + (c < 0) + (d < 0)\n          if (Math.pow(-1, nombreDeSigneMoins) === 1) {\n            signe = ''\n          } else {\n            signe = '-'\n          }\n          texte = `$${texFraction(a, b)}\\\\div${texFraction(c, d)}=$`\n          texteCorr = `$${texFraction(a, b)}\\\\div${texFraction(c, d)}$`\n          a = abs(a)\n          b = abs(b)\n          c = abs(c)\n          d = abs(d)\n          p = pgcd(a * d, b * c)\n          texteCorr += `$=${signe}${texFraction(a, b)}\\\\times${texFraction(\n            d,\n            c\n          )}$`\n          texteCorr += `$=${signe}${texFraction(\n            a + '\\\\times' + ecritureParentheseSiNegatif(d),\n            b + '\\\\times' + ecritureParentheseSiNegatif(c)\n          )}$`\n          if (p === 1) {\n            texteCorr += `$=${signe}${texFractionSigne(a * d, b * c)}$`\n          } else {\n            texteCorr += `$=${signe}${texFraction(a * d, b * c)}$`\n            if (a * d !== b * c) {\n              texteCorr += `$=${signe}${texFraction(\n                (a * d) / p + '\\\\times\\\\cancel{' + p + '}',\n                (b * c) / p + '\\\\times\\\\cancel{' + p + '}'\n              )}$`\n              texteCorr += `$=${signe}${texFraction(\n                (a * d) / p,\n                (b * c) / p\n              )}$`\n            } else {\n              texteCorr += `$=${signe}1$`\n            }\n          }\n\n          break\n      }\n      reponse = fraction((signe === '-' ? -1 : 1) * a * d, b * c).simplifie()\n      if (this.questionJamaisPosee(i, a, b, c, d, typesDeQuestions)) {\n        if (context.isAmc) {\n          this.autoCorrection[i] = {\n            enonce: `Calculer $${texte.substring(1, texte.length - 1)}$ et donner le résultat sous forme irreductible`,\n            propositions: [\n              {\n                texte: texteCorr,\n                statut: 3,\n                feedback: ''\n              }\n            ],\n            reponse: {\n              texte: 'numérateur',\n              valeur: reponse.signe * Math.abs(reponse.num),\n              param: {\n                digits: 2,\n                decimals: 0,\n                exposantNbChiffres: 0,\n                exposantSigne: false,\n                signe: reponse.signe === -1,\n                approx: 0\n              }\n            },\n            reponse2: {\n              texte: 'dénominateur',\n              valeur: Math.abs(reponse.den),\n              param: {\n                digits: 2,\n                decimals: 0,\n                exposantNbChiffres: 0,\n                exposantSigne: false,\n                signe: false,\n                approx: 0\n              }\n            }\n          }\n        } else {\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, reponse, { formatInteractif: 'fraction' })\n        }\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n\n      cpt++\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    2,\n    '1 : Fractions à numérateur et dénominateur positifs \\n 2 : Fractions à numérateur et dénominateur relatifs'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","amcType","interactifReady","interactifType","ExerciceDiviserFractions","Exercice","this","sup","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","listeFractions","obtenirListeFractionsIrreductibles","typesDeQuestionsDisponibles","parseInt","nombreDeSigneMoins","listeTypeDeQuestions","combinaisonListes","ab","cd","a","b","c","d","p","signe","texte","reponse","texteCorr","typesDeQuestions","i","cpt","choice","pgcd","texFraction","randint","Math","pow","abs","ecritureParentheseSiNegatif","texFractionSigne","fraction","simplifie","questionJamaisPosee","context","autoCorrection","enonce","substring","length","propositions","statut","feedback","valeur","num","param","digits","decimals","exposantNbChiffres","exposantSigne","approx","reponse2","den","ajouteChampTexteMathLive","setReponse","formatInteractif","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}