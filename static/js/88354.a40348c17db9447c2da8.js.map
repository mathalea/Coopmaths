{"version":3,"file":"js/88354.a40348c17db9447c2da8.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C33.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, range1, combinaisonListes, miseEnEvidence, listeDesDiviseurs, nombreDeChiffresDansLaPartieEntiere, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Calculer en utilisant les priorités opératoires'\nexport const amcReady = true\nexport const interactifReady = true\nexport const interactifType = 'numerique'\nexport const amcType = 'AMCNum' // Question numérique\n\n/**\n * Plusieurs type de calcul avec des entiers.\n *\n * Sans parenthèses :\n * * a+b*c\n * * a+b÷c\n * * a÷b*c\n * * a-b*c\n * * a*b÷c\n * * a*b+c\n * * a-b+c\n * * a+b+c*d\n * * a*b+c*d\n * * a*b*c-d\n * * a*b-c÷d\n * * a*b+c÷d\n *\n * Avec parenthèses :\n * * a*(b-c)\n * * (a-b)*c\n * * (a-b)÷c\n * * a÷(b+c)\n * * (a-b)÷c\n * * a*(b-c)*d\n * * a*b*(c-d)\n * * a*(b-c*d)\n * * (a+b*c)÷d\n * * a*(b-c*d)\n * * a*b÷(c+d)\n * * a*(b÷c+d)\n * @author Rémi Angot\n * Référence 6C33\n */\nexport default function Priorites () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Calculer :'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 1\n  this.sup = 3\n  this.sup2 = false\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let questionsDisponibles = [] //\n    if (parseInt(this.sup) === 1) {\n      questionsDisponibles = range1(12)\n    } else if (parseInt(this.sup) === 2) {\n      questionsDisponibles = range1(22, range1(12))\n    } else {\n      questionsDisponibles = range1(22)\n    }\n    const listeTypeDeQuestions = combinaisonListes(\n      questionsDisponibles,\n      this.nbQuestions\n    )\n    for (\n      let i = 0, texte, texteCorr, liste, somme, a, b, c, d, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          a = randint(2, 11)\n          b = randint(2, 11)\n          c = randint(2, 11)\n          texte = `$${a}+${b}\\\\times${c}$`\n          texteCorr = `$${a}+${miseEnEvidence(b + '\\\\times' + c)}=${a}+${b * c\n            }=${a + b * c}$`\n          setReponse(this, i, a + b * c)\n          break\n        case 2:\n          a = randint(2, 11)\n          c = randint(2, 11)\n          b = c * randint(2, 11)\n          texte = `$${a}+${b}\\\\div${c}$`\n          texteCorr = `$${a}+${miseEnEvidence(b + '\\\\div' + c)}=${a}+${b / c\n            }=${a + b / c}$`\n          setReponse(this, i, a + b / c)\n          break\n        case 3:\n          b = randint(2, 11)\n          c = randint(2, 11)\n          a = b * randint(2, 11)\n          texte = `$${a}\\\\div${b}\\\\times${c}$`\n          texteCorr = `$${miseEnEvidence(a + '\\\\div' + b)}\\\\times${c}=${a / b\n            }\\\\times${c}=${(a / b) * c}$`\n          setReponse(this, i, (a / b) * c)\n          break\n        case 4:\n          b = randint(2, 11)\n          c = randint(2, 11)\n          a = b * c + randint(2, 11)\n          texte = `$${a}-${b}\\\\times${c}$`\n          texteCorr = `$${a}-${miseEnEvidence(b + '\\\\times' + c)}=${a}-${b * c\n            }=${a - b * c}$`\n          setReponse(this, i, a - b * c)\n          break\n        case 5:\n          if (choice([true, false])) {\n            // a est un multiple de c\n            c = randint(2, 6)\n            a = c * randint(2, 5)\n            b = randint(2, 6)\n          } else {\n            // b est un multiple de c\n            c = randint(2, 6)\n            b = c * randint(2, 5)\n            a = randint(2, 6)\n          }\n          texte = `$${a}\\\\times${b}\\\\div${c}$`\n          texteCorr = `$${miseEnEvidence(a + '\\\\times' + b)}\\\\div${c}=${a * b\n            }\\\\div${c}=${(a * b) / c}$`\n          setReponse(this, i, (a * b) / c)\n          break\n        case 6:\n          a = randint(2, 11)\n          b = randint(2, 11)\n          c = randint(2, 11)\n          texte = `$${a}\\\\times${b}+${c}$`\n          texteCorr = `$${miseEnEvidence(a + '\\\\times' + b)}+${c}=${a * b\n            }+${c}=${a * b + c}$`\n          setReponse(this, i, a * b + c)\n          break\n        case 7:\n          b = randint(20, 59)\n          a = b + randint(11, 29)\n          c = randint(11, 29)\n          texte = `$${a}-${b}+${c}$`\n          texteCorr = `$${miseEnEvidence(a + '-' + b)}+${c}=${a - b}+${c}=${a - b + c}$`\n          setReponse(this, i, a - b + c)\n          break\n        case 8:\n          a = randint(2, 20)\n          b = randint(2, 20)\n          c = randint(2, 11)\n          d = randint(2, 11)\n          texte = `$${a}+${b}+${c}\\\\times${d}$`\n          texteCorr = `$${a}+${b}+${miseEnEvidence(\n            c + '\\\\times' + d\n          )}=${a}+${b}+${c * d}=${a + b + c * d}$`\n          setReponse(this, i, a + b + c * d)\n          break\n        case 9:\n          a = randint(2, 11)\n          b = randint(2, 11)\n          c = randint(2, 11)\n          d = randint(2, 11)\n          texte = `$${a}\\\\times${b}+${c}\\\\times${d}$`\n          texteCorr = `$${miseEnEvidence(\n            a + '\\\\times' + b\n          )}+${miseEnEvidence(c + '\\\\times' + d)}=${a * b}+${c * d}=${a * b + c * d}$`\n          setReponse(this, i, a * b + c * d)\n          break\n        case 10:\n          a = randint(2, 5)\n          b = randint(2, 5)\n          c = randint(2, 5)\n          d = randint(2, a * b * c - 1)\n          texte = `$${a}\\\\times${b}\\\\times${c}-${d}$`\n          texteCorr = `$${miseEnEvidence(\n            a + '\\\\times' + b\n          )}\\\\times${c}-${d}=${miseEnEvidence(a * b + '\\\\times' + c)}-${d}=${a * b * c - d}$`\n          setReponse(this, i, a * b * c - d)\n          break\n        case 11:\n          a = randint(3, 11)\n          b = randint(3, 11)\n          d = randint(2, 11)\n          c = d * randint(2, 8)\n          texte = `$${a}\\\\times${b}-${c}\\\\div${d}$`\n          texteCorr = `$${miseEnEvidence(\n            a + '\\\\times' + b\n          )}-${miseEnEvidence(c + '\\\\div' + d)}=${a * b}-${c / d}=${a * b - c / d}$`\n          setReponse(this, i, a * b - c / d)\n          break\n        case 12:\n          a = randint(2, 11)\n          b = randint(2, 11)\n          d = randint(2, 11)\n          c = d * randint(2, 8)\n          texte = `$${a}\\\\times${b}+${c}\\\\div${d}$`\n          texteCorr = `$${miseEnEvidence(\n            a + '\\\\times' + b\n          )}+${miseEnEvidence(c + '\\\\div' + d)}=${a * b}+${c / d}=${a * b + c / d}$`\n          setReponse(this, i, a * b + c / d)\n          break\n        case 13:\n          a = randint(2, 11)\n          c = randint(2, 11)\n          b = c + randint(2, 11)\n          texte = `$${a}\\\\times(${b}-${c})$`\n          texteCorr = `$${a}\\\\times(${miseEnEvidence(\n            b + '-' + c\n          )})=${a}\\\\times${b - c}=${a * (b - c)}$`\n          setReponse(this, i, a * (b - c))\n          break\n        case 14:\n          b = randint(11, 39)\n          a = b + randint(2, 11)\n          c = randint(2, 11)\n          texte = `$(${a}-${b})\\\\times${c}$`\n          texteCorr = `$(${miseEnEvidence(a + '-' + b)})\\\\times${c}=${a - b\n            }\\\\times${c}=${(a - b) * c}$`\n          setReponse(this, i, (a - b) * c)\n          break\n        case 15:\n          c = randint(2, 11)\n          b = randint(11, 39)\n          a = b + c * randint(2, 9)\n          texte = `$(${a}-${b})\\\\div${c}$`\n          texteCorr = `$(${miseEnEvidence(a + '-' + b)})\\\\div${c}=${a - b\n            }\\\\div${c}=${(a - b) / c}$`\n          setReponse(this, i, (a - b) / c)\n          break\n        case 16:\n          b = randint(2, 5)\n          c = randint(2, 6)\n          a = (b + c) * randint(2, 9)\n          texte = `$${a}\\\\div(${b}+${c})$`\n          texteCorr = `$${a}\\\\div(${miseEnEvidence(b + '+' + c)})=${a}\\\\div${b + c\n            }=${a / (b + c)}$`\n          setReponse(this, i, a / (b + c))\n          break\n        case 17:\n          c = randint(2, 11)\n          b = randint(11, 39)\n          a = b + c * randint(2, 9)\n          texte = `$(${a}-${b})\\\\div${c}$`\n          texteCorr = `$(${miseEnEvidence(a + '-' + b)})\\\\div${c}=${a - b\n            }\\\\div${c}=${(a - b) / c}$`\n          setReponse(this, i, (a - b) / c)\n          break\n        case 18:\n          c = randint(11, 39)\n          b = c + randint(2, 5)\n          a = randint(2, 5)\n          d = randint(2, 5)\n          texte = `$${a}\\\\times(${b}-${c})\\\\times${d}$`\n          texteCorr = `$${a}\\\\times(${miseEnEvidence(\n            b + '-' + c\n          )})\\\\times${d}=${a}\\\\times${b - c}\\\\times${d}=${a * (b - c) * d}$`\n          setReponse(this, i, a * (b - c) * d)\n          break\n        case 19:\n          d = randint(11, 39)\n          c = d + randint(2, 5)\n          a = randint(2, 5)\n          b = randint(2, 5)\n          texte = `$${a}\\\\times${b}\\\\times(${c}-${d})$`\n          texteCorr = `$${a}\\\\times${b}\\\\times(${miseEnEvidence(\n            c + '-' + d\n          )})=${a}\\\\times${b}\\\\times${c - d}=${a * b * (c - d)}$`\n          setReponse(this, i, a * b * (c - d))\n          break\n        case 20:\n          a = randint(2, 11)\n          c = randint(2, 11)\n          d = randint(2, 11)\n          b = c * d + randint(2, 11)\n          texte = `$${a}\\\\times(${b}-${c}\\\\times${d})$`\n          texteCorr = `$${a}\\\\times(${b}-${miseEnEvidence(\n            c + '\\\\times' + d\n          )})=${a}\\\\times(${miseEnEvidence(b + '-' + c * d)})=${a}\\\\times${b - c * d\n            }=${a * (b - c * d)}$`\n          setReponse(this, i, a * (b - c * d))\n          break\n        case 21:\n          a = randint(2, 11)\n          b = randint(2, 11)\n          liste = listeDesDiviseurs(a * b)\n          if (liste.length > 2) {\n            liste.pop() // on supprime le plus grand diviseur qui est le produit\n          }\n          if (liste.length > 2) {\n            enleveElement(liste, liste[1]) // on supprime le plus petit diviseur (autre que 1)\n          }\n\n          somme = choice(liste, [1]) // la somme doit être un diviseur différent de 1\n          c = randint(1, somme - 1)\n          d = somme - c\n          texte = `$${a}\\\\times${b}\\\\div(${c}+${d})$`\n          texteCorr = `$${a}\\\\times${b}\\\\div(${miseEnEvidence(\n            c + '+' + d\n          )})=${miseEnEvidence(a + '\\\\times' + b)}\\\\div${c + d}=${a * b\n            }\\\\div${c + d}=${(a * b) / (c + d)}$`\n          setReponse(this, i, (a * b) / (c + d))\n          break\n        case 22:\n          a = randint(2, 11)\n          c = randint(2, 11)\n          b = c * randint(2, 5)\n          d = randint(2, 6)\n          texte = `$${a}\\\\times(${b}\\\\div${c}+${d})$`\n          texteCorr = `$${a}\\\\times(${miseEnEvidence(\n            b + '\\\\div' + c\n          )}+${d})=${a}\\\\times(${miseEnEvidence(\n            b / c + '+' + d\n          )})=${a}\\\\times${b / c + d}=${a * (b / c + d)}$`\n          setReponse(this, i, a * (b / c + d))\n          break\n      }\n      if (this.sup2) {\n        texte = `${lettreDepuisChiffre(i + 1)} = ${texte}`\n        // On découpe\n        const etapes = texteCorr.split('=')\n        texteCorr = ''\n        etapes.forEach(function (etape) {\n          etape = etape.replace('$', '')\n          if (context.isHtml) {\n            texteCorr += '<br>'\n          }\n          texteCorr += `${lettreDepuisChiffre(i + 1)} = $${etape}$ <br>`\n        })\n      }\n      if (this.interactif && context.isHtml) texte = texte.substring(0, texte.length - 1) + '~=$' + ajouteChampTexte(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        if (context.isAmc) {\n          this.autoCorrection[i].enonce = texte.substring(0, texte.length - 1) + '~=$'\n          this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: '' }]\n          this.autoCorrection[i].reponse.param.digits = nombreDeChiffresDansLaPartieEntiere(this.autoCorrection[i].reponse.valeur[0]) + 1\n          this.autoCorrection[i].reponse.param.decimals = 0\n        }\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Type de calculs',\n    3,\n    '1 : Sans parenthèses\\n2 : Avec parenthèses\\n3 : Mélange'\n  ]\n  this.besoinFormulaire2CaseACocher = ['Présentation des corrections en colonnes', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","interactifReady","interactifType","amcType","Priorites","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","sup2","nouvelleVersion","parseInt","listeQuestions","listeCorrections","autoCorrection","questionsDisponibles","range1","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","liste","somme","a","b","c","d","i","cpt","randint","miseEnEvidence","setReponse","choice","listeDesDiviseurs","length","pop","enleveElement","lettreDepuisChiffre","etapes","split","forEach","etape","replace","context","interactif","substring","ajouteChampTexte","indexOf","enonce","propositions","statut","reponse","param","digits","nombreDeChiffresDansLaPartieEntiere","valeur","decimals","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}