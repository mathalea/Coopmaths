/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e_6N43-4_js"],{

/***/ "./src/js/exercices/6e/6N43-4.js":
/*!***************************************!*\
  !*** ./src/js/exercices/6e/6N43-4.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ DivisibleDiviseurMultiple)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_operations_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/operations.js */ \"./src/js/modules/operations.js\");\n\n\n\nconst titre = 'Faire des phrases avec les mots : divisible, diviseur et multiple';\n/**\n * Compléter des phrases avec les mots divisible, divieur et multiple\n * @Auteur Rémi Angot\n * Référence 6N43-4\n*/\n\nfunction DivisibleDiviseurMultiple() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 6; // 6 questions au maximum\n\n  this.nbCols = 2; // Uniquement pour la sortie LaTeX\n\n  this.nbColsCorr = 2; // Uniquement pour la sortie LaTeX\n\n  this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n\n  this.video = \"\"; // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    let b = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(5, 12);\n    let q = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(11, 99);\n    let r = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, b - 1);\n    let a = b * q;\n    let a1 = b * q + r;\n    this.introduction = `À l'aide des calculs suivants, compléter les phrases suivantes avec les nombre $${a1}$, $${a}$, $${b}$ ou $${q}$.<br><br>`;\n    this.introduction += (0,_modules_operations_js__WEBPACK_IMPORTED_MODULE_2__.default)({\n      operande1: a,\n      operande2: b,\n      type: 'divisionE'\n    });\n    this.introduction += (0,_modules_operations_js__WEBPACK_IMPORTED_MODULE_2__.default)({\n      operande1: a1,\n      operande2: b,\n      type: 'divisionE'\n    });\n    let type_de_questions_disponibles = [1, 2, 3, 4, 5, 6]; // On créé 3 types de questions\n\n    let listeTypeDeQuestions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaisonListes)(type_de_questions_disponibles, this.nbQuestions); // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeDeQuestions[i]) {\n        // Suivant le type de question, le contenu sera différent\n        case 1:\n          texte = `... est divisible par ...`;\n          texteCorr = `${a} est divisible par ${b} ou ${a} est divisible par ${q}.`;\n          break;\n\n        case 2:\n          texte = `... est un diviseur de ...`;\n          texteCorr = `${b} est un diviseur de ${a} ou ${q} est un diviseur de ${a}.`;\n          break;\n\n        case 3:\n          texte = `... est un multiple de ...`;\n          texteCorr = `${a} est un multiple de ${b} ou ${a} est un multiple de ${q}.`;\n          break;\n\n        case 4:\n          texte = `... n'est pas divisible par ...`;\n          texteCorr = `${a1} n'est pas divisible par ${b} ou ${a1} n'est pas divisible par ${q}.`;\n          break;\n\n        case 5:\n          texte = `... n'est pas un diviseur de ...`;\n          texteCorr = `${b} n'est pas un diviseur de ${a1} ou ${q} n'est pas un diviseur de ${a1}.`;\n          break;\n\n        case 6:\n          texte = `... n'est pas un multiple de ...`;\n          texteCorr = `${a1} n'est pas un multiple de ${b} ou ${a1} est n'est pas un multiple de ${q}.`;\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n\n      cpt++;\n    }\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeQuestionsToContenu)(this);\n  }; //this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n\n} // python3 list-to-js.py pour faire apparaitre l'exercice dans le menu//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZXhlcmNpY2VzLzZlLzZONDMtNC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL21hdGhhbGVhLy4vc3JjL2pzL2V4ZXJjaWNlcy82ZS82TjQzLTQuanM/Y2ZlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRXhlcmNpY2UgZnJvbSAnLi4vQ2xhc3NlRXhlcmNpY2UuanMnO1xuaW1wb3J0IHtsaXN0ZVF1ZXN0aW9uc1RvQ29udGVudSxjb21iaW5haXNvbkxpc3RlcyxyYW5kaW50fSBmcm9tICcuLi8uLi9tb2R1bGVzL291dGlscy5qcydcbmltcG9ydCBPcGVyYXRpb24gZnJvbSAnLi4vLi4vbW9kdWxlcy9vcGVyYXRpb25zLmpzJztcbmV4cG9ydCBjb25zdCB0aXRyZSA9ICdGYWlyZSBkZXMgcGhyYXNlcyBhdmVjIGxlcyBtb3RzIDogZGl2aXNpYmxlLCBkaXZpc2V1ciBldCBtdWx0aXBsZSdcblxuLyoqXG4gKiBDb21wbMOpdGVyIGRlcyBwaHJhc2VzIGF2ZWMgbGVzIG1vdHMgZGl2aXNpYmxlLCBkaXZpZXVyIGV0IG11bHRpcGxlXG4gKiBAQXV0ZXVyIFLDqW1pIEFuZ290XG4gKiBSw6lmw6lyZW5jZSA2TjQzLTRcbiovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEaXZpc2libGVEaXZpc2V1ck11bHRpcGxlKCkge1xuICBFeGVyY2ljZS5jYWxsKHRoaXMpOyAvLyBIw6lyaXRhZ2UgZGUgbGEgY2xhc3NlIEV4ZXJjaWNlKClcbiAgdGhpcy50aXRyZSA9IHRpdHJlO1xuICB0aGlzLmNvbnNpZ25lID0gXCJcIjtcbiAgdGhpcy5uYlF1ZXN0aW9ucyA9IDY7IC8vIDYgcXVlc3Rpb25zIGF1IG1heGltdW1cbiAgdGhpcy5uYkNvbHMgPSAyOyAvLyBVbmlxdWVtZW50IHBvdXIgbGEgc29ydGllIExhVGVYXG4gIHRoaXMubmJDb2xzQ29yciA9IDI7IC8vIFVuaXF1ZW1lbnQgcG91ciBsYSBzb3J0aWUgTGFUZVhcbiAgdGhpcy50YWlsbGVEaWFwb3JhbWEgPSAxMDA7IC8vIFBvdXIgbGVzIGV4ZXJjaWNlcyBjaHJvbm9tw6l0csOpcy4gNTAgcGFyIGTDqWZhdXQgcG91ciBsZXMgZXhlcmNpY2VzIGF2ZWMgZHUgdGV4dGVcbiAgdGhpcy52aWRlbyA9IFwiXCIgLy8gSWQgWW91VHViZSBvdSB1cmxcblxuICB0aGlzLm5vdXZlbGxlVmVyc2lvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmxpc3RlUXVlc3Rpb25zID0gW107IC8vIExpc3RlIGRlIHF1ZXN0aW9uc1xuICAgIHRoaXMubGlzdGVDb3JyZWN0aW9ucyA9IFtdOyAvLyBMaXN0ZSBkZSBxdWVzdGlvbnMgY29ycmlnw6llc1xuICAgIGxldCBiID0gcmFuZGludCg1LDEyKTtcbiAgICBsZXQgcSA9IHJhbmRpbnQoMTEsOTkpO1xuICAgIGxldCByID0gcmFuZGludCgxLGItMSk7XG4gICAgbGV0IGEgPSBiKnE7XG4gICAgbGV0IGExID0gYipxK3I7XG4gICAgdGhpcy5pbnRyb2R1Y3Rpb24gPSBgw4AgbCdhaWRlIGRlcyBjYWxjdWxzIHN1aXZhbnRzLCBjb21wbMOpdGVyIGxlcyBwaHJhc2VzIHN1aXZhbnRlcyBhdmVjIGxlcyBub21icmUgJCR7YTF9JCwgJCR7YX0kLCAkJHtifSQgb3UgJCR7cX0kLjxicj48YnI+YFxuICAgIHRoaXMuaW50cm9kdWN0aW9uICs9IE9wZXJhdGlvbih7IG9wZXJhbmRlMSA6YSwgb3BlcmFuZGUyIDpiLCB0eXBlIDonZGl2aXNpb25FJ30pXG4gICAgdGhpcy5pbnRyb2R1Y3Rpb24gKz1PcGVyYXRpb24oeyBvcGVyYW5kZTEgOmExLCBvcGVyYW5kZTIgOmIsIHR5cGUgOidkaXZpc2lvbkUnfSlcblxuICAgIGxldCB0eXBlX2RlX3F1ZXN0aW9uc19kaXNwb25pYmxlcyA9IFsxLDIsMyw0LDUsNl07IC8vIE9uIGNyw6nDqSAzIHR5cGVzIGRlIHF1ZXN0aW9uc1xuICAgIGxldCBsaXN0ZVR5cGVEZVF1ZXN0aW9ucyA9IGNvbWJpbmFpc29uTGlzdGVzKHR5cGVfZGVfcXVlc3Rpb25zX2Rpc3BvbmlibGVzLHRoaXMubmJRdWVzdGlvbnMpOyAvLyBUb3VzIGxlcyB0eXBlcyBkZSBxdWVzdGlvbnMgc29udCBwb3PDqXMgbWFpcyBsJ29yZHJlIGRpZmbDqHJlIMOgIGNoYXF1ZSBcImN5Y2xlXCJcbiAgICBmb3IgKGxldCBpID0gMCwgdGV4dGUsIHRleHRlQ29yciwgY3B0ID0gMDsgaSA8IHRoaXMubmJRdWVzdGlvbnMgJiYgY3B0IDwgNTA7KSB7XG4gICAgICAgIC8vIEJvdWNsZSBwcmluY2lwYWxlIG/DuSBpKzEgY29ycmVzcG9uZCBhdSBudW3DqXJvIGRlIGxhIHF1ZXN0aW9uXG4gICAgICBzd2l0Y2ggKGxpc3RlVHlwZURlUXVlc3Rpb25zW2ldKSB7IC8vIFN1aXZhbnQgbGUgdHlwZSBkZSBxdWVzdGlvbiwgbGUgY29udGVudSBzZXJhIGRpZmbDqXJlbnRcbiAgICAgICAgY2FzZSAxOiBcbiAgICAgICAgICB0ZXh0ZSA9IGAuLi4gZXN0IGRpdmlzaWJsZSBwYXIgLi4uYDtcbiAgICAgICAgICB0ZXh0ZUNvcnIgPSBgJHthfSBlc3QgZGl2aXNpYmxlIHBhciAke2J9IG91ICR7YX0gZXN0IGRpdmlzaWJsZSBwYXIgJHtxfS5gO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDI6IFxuICAgICAgICAgICAgdGV4dGUgPSBgLi4uIGVzdCB1biBkaXZpc2V1ciBkZSAuLi5gO1xuICAgICAgICAgICAgdGV4dGVDb3JyID0gYCR7Yn0gZXN0IHVuIGRpdmlzZXVyIGRlICR7YX0gb3UgJHtxfSBlc3QgdW4gZGl2aXNldXIgZGUgJHthfS5gO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDM6IFxuICAgICAgICAgICAgdGV4dGUgPSBgLi4uIGVzdCB1biBtdWx0aXBsZSBkZSAuLi5gO1xuICAgICAgICAgICAgdGV4dGVDb3JyID0gYCR7YX0gZXN0IHVuIG11bHRpcGxlIGRlICR7Yn0gb3UgJHthfSBlc3QgdW4gbXVsdGlwbGUgZGUgJHtxfS5gO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDQ6IFxuICAgICAgICAgICAgdGV4dGUgPSBgLi4uIG4nZXN0IHBhcyBkaXZpc2libGUgcGFyIC4uLmA7XG4gICAgICAgICAgICB0ZXh0ZUNvcnIgPSBgJHthMX0gbidlc3QgcGFzIGRpdmlzaWJsZSBwYXIgJHtifSBvdSAke2ExfSBuJ2VzdCBwYXMgZGl2aXNpYmxlIHBhciAke3F9LmA7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNTogXG4gICAgICAgICAgICB0ZXh0ZSA9IGAuLi4gbidlc3QgcGFzIHVuIGRpdmlzZXVyIGRlIC4uLmA7XG4gICAgICAgICAgICB0ZXh0ZUNvcnIgPSBgJHtifSBuJ2VzdCBwYXMgdW4gZGl2aXNldXIgZGUgJHthMX0gb3UgJHtxfSBuJ2VzdCBwYXMgdW4gZGl2aXNldXIgZGUgJHthMX0uYDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA2OiBcbiAgICAgICAgICAgIHRleHRlID0gYC4uLiBuJ2VzdCBwYXMgdW4gbXVsdGlwbGUgZGUgLi4uYDtcbiAgICAgICAgICAgIHRleHRlQ29yciA9IGAke2ExfSBuJ2VzdCBwYXMgdW4gbXVsdGlwbGUgZGUgJHtifSBvdSAke2ExfSBlc3Qgbidlc3QgcGFzIHVuIG11bHRpcGxlIGRlICR7cX0uYDsgICAgXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5saXN0ZVF1ZXN0aW9ucy5pbmRleE9mKHRleHRlKSA9PSAtMSkge1xuICAgICAgICAvLyBTaSBsYSBxdWVzdGlvbiBuJ2EgamFtYWlzIMOpdMOpIHBvc8OpZSwgb24gZW4gY3LDqWUgdW5lIGF1dHJlXG4gICAgICAgIHRoaXMubGlzdGVRdWVzdGlvbnMucHVzaCh0ZXh0ZSk7XG4gICAgICAgIHRoaXMubGlzdGVDb3JyZWN0aW9ucy5wdXNoKHRleHRlQ29ycik7XG4gICAgICAgIGkrKztcbiAgICAgIH1cbiAgICAgIGNwdCsrO1xuICAgIH1cbiAgICBsaXN0ZVF1ZXN0aW9uc1RvQ29udGVudSh0aGlzKTtcbiAgfTtcbiAgLy90aGlzLmJlc29pbkZvcm11bGFpcmVOdW1lcmlxdWUgPSBbJ05pdmVhdSBkZSBkaWZmaWN1bHTDqScsM107XG59XG5cbi8vIHB5dGhvbjMgbGlzdC10by1qcy5weSBwb3VyIGZhaXJlIGFwcGFyYWl0cmUgbCdleGVyY2ljZSBkYW5zIGxlIG1lbnVcblxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUF4QkE7QUFDQTtBQTJCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/exercices/6e/6N43-4.js\n");

/***/ })

}]);