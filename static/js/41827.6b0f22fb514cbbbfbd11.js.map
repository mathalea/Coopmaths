{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C10-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","amcType","interactifReady","interactifType","titre","ExerciceTablesMultiplicationsEtMultiplesDe10","tablesParDefaut","Exercice","this","sup","sup2","consigne","spacing","tailleDiaporama","nouvelleVersion","parseInt","autoCorrection","tables","listeQuestions","listeCorrections","split","couples","creerCouples","nbQuestions","a","b","k1","k2","texte","texteCorr","melange","i","choice","randint","c","texNombre","enonce","propositions","texNombre2","statut","feedback","calcul","options","ordered","lastChoice","interactif","propositionsQcm","ajouteChampTexteMathLive","setReponse","replace","push","listeQuestionsToContenu","besoinFormulaireTexte","context","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/41827.6b0f22fb514cbbbfbd11.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, creerCouples, randint, choice, texNombre, texNombre2, calcul } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, propositionsQcm, setReponse } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const amcType = 'qcmMono' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = ['qcm', 'mathLive']\n\nexport const titre = 'Tables de multiplications et multiples de 10'\n\n/**\n * Les 2 facteurs peuvent terminer par aucun, 1, 2 ou 3 zéros\n * @author Rémi Angot\n* Référence 6C10-2\n */\nexport default function ExerciceTablesMultiplicationsEtMultiplesDe10 (\n  tablesParDefaut = '2-3-4-5-6-7-8-9'\n) {\n  // Multiplier deux nombres\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = tablesParDefaut\n  this.sup2 = 1\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.tailleDiaporama = 100\n\n  this.nouvelleVersion = function () {\n    this.interactifType = parseInt(this.sup2) === 2 ? 'mathLive' : 'qcm'\n    this.autoCorrection = []\n    let tables = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (!this.sup) {\n      // Si aucune table n'est saisie\n      this.sup = '2-3-4-5-6-7-8-9'\n    }\n    if (typeof this.sup === 'number') {\n      // Si c'est un nombre c'est qu'il y a qu'une seule table\n      tables[0] = this.sup\n    } else {\n      tables = this.sup.split('-') // Sinon on crée un tableau à partir des valeurs séparées par des ;\n    }\n    const couples = creerCouples(\n      tables,\n      [2, 3, 4, 5, 6, 7, 8, 9, 10],\n      this.nbQuestions\n    ) // Liste tous les couples possibles (2,3)≠(3,2)\n    for (\n      let i = 0, a, b, k1, k2, texte, texteCorr, melange;\n      i < this.nbQuestions;\n      i++\n    ) {\n      this.autoCorrection[i] = {}\n      a = couples[i][0]\n      b = couples[i][1]\n      if (a > 1) {\n        k1 = choice([1, 10, 100, 1000])\n      } else {\n        k1 = choice([10, 100, 1000])\n      }\n      k2 = choice([1, 10, 100, 1000])\n      a = k1 * a\n      b = k2 * b\n      melange = randint(0, 1)\n      if (melange === 1) {\n        // échange a et b pour que les multiplications ne soient pas toujours dans le même ordre (surtout lorsque tables n'a qu'un seul élément)\n        const c = a\n        a = b\n        b = c\n      }\n      texte =\n        '$ ' + texNombre(a) + ' \\\\times ' + texNombre(b) + ' = \\\\dotfill $'\n      texteCorr =\n        '$ ' +\n        texNombre(a) +\n        ' \\\\times ' +\n        texNombre(b) +\n        ' = ' +\n        texNombre(a * b) +\n        ' $'\n\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${texNombre2(a * b)}$`,\n          statut: true,\n          feedback: 'Correct !'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b / 10))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b * 10))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b / 100))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b * 100))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        }\n      ]\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 5\n      }\n      if (this.interactif && this.interactifType === 'qcm') {\n        texte += propositionsQcm(this, i).texte\n      } else {\n        texte += ajouteChampTexteMathLive(this, i)\n        setReponse(this, i, a * b)\n        texte = texte.replace('\\\\dotfill', '')\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = ['Choix des tables', 'Nombres séparés par des tirets'] // Texte, tooltip\n  if (context.isHtml && !context.isDiaporama) this.besoinFormulaire2Numerique = ['Exercice interactif', 2, '1 : QCM\\n2 : Numérique'] // Texte, tooltip\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}