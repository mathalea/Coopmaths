{"version":3,"file":"js/62481.2b88e8e01e9d821afe42.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4G40-1.js","webpack://mathalea/./src/js/exercices/6e/6N31-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import ArrondirUneValeur from '../6e/6N31-3.js'\nexport const titre = 'Encadrer puis arrondir une valeur comprenant un cosinus'\n\n/**\n * Encadrer puis arrondir un cosinus\n * @Auteur Mireille Gain, 9 mai 2021\n * référence 4G40-1\n */\n\nexport default function ArrondirUneValeur4e () {\n  ArrondirUneValeur.call(this)\n  this.titre = titre\n  this.sup = 4\n  this.sup2 = true\n  this.spacing = 3\n  this.besoinFormulaireNumerique = false\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeNombresPremiersStrictJusqua, shuffle2tableaux, choice, listeQuestionsToContenu, randint, troncature, calcul, texNombre, miseEnEvidence, texFraction } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nimport { cos } from '../../modules/fonctionsMaths.js'\n\nexport const amcReady = true\nexport const amcType = 'qcmMult' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\nexport const titre = 'Arrondir une valeur'\n\n/**\n * * Encadrer_puis_arrondir_une_valeur\n * * 6N31-3\n * @author Mireille Gain, s'inspirant de 6N31-1 de Sébastien Lozano\n */\n\nexport default function ArrondirUneValeur () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n\n  this.nbQuestions = 3\n  this.nbCols = 3\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.sup2 = false\n  this.interactif = true\n  context.isHtml ? (this.spacingCorr = 2.5) : (this.spacingCorr = 3.5)\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.autoCorrection = []\n    if (!context.isAmc && !this.interactif) {\n      this.consigne = \"Encadrer chaque nombre à l'unité, puis au dixième, puis au centième.<br>Dans chaque cas, mettre ensuite en évidence son arrondi.\"\n    } else {\n      this.consigne = \"Quels sont les encadrements où la valeur orange est la valeur arrondie du nombre à l'unité, au dixième et au centième ?\"\n    }\n    const tabrep = []; const tabicone = []; const preTabRep = []; let preTabIcone = []\n    let espace = ''\n    if (context.isHtml) {\n      espace = '<br>'\n    } else {\n      espace = '\\\\\\\\'\n    }\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let m, c, d, u, di, ci, mi, me, ce, de, n, den, num, nb, rac, angle, v\n\n    for (let i = 0, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n      if (this.sup === 1) {\n        m = randint(0, 9)\n        c = randint(0, 9)\n        d = randint(0, 9)\n        u = randint(2, 9)\n        di = randint(1, 9)\n        ci = randint(1, 9)\n        mi = randint(1, 9, 5)\n        me = randint(0, 1)\n        ce = randint(0, 1)\n        de = randint(0, 1)\n        n = me * m * 1000 + ce * c * 100 + de * d * 10 + u * 1 + calcul(di * 0.1 + ci * 0.01 + mi * 0.001)\n        nb = texNombre(n)\n      } else if (this.sup === 2) {\n        den = choice([7, 9, 11, 13])\n        num = randint(1, 50, [7, 9, 11, 13, 14, 18, 21, 22, 26, 27, 28, 33, 35, 36, 39, 42, 44, 45, 49])\n        n = num / den\n        nb = texFraction(num, den)\n        di = 10 * (troncature(n - troncature(n, 0), 1))\n        ci = 100 * (troncature(n - troncature(n, 1), 2))\n        mi = 1000 * (troncature(n - troncature(n, 2), 3))\n      } else if (this.sup === 3) {\n        rac = randint(2, 300, [listeNombresPremiersStrictJusqua(300)])\n        n = Math.sqrt(rac)\n        nb = `\\\\sqrt{${rac}}`\n        di = 10 * (troncature(n - troncature(n, 0), 1))\n        ci = 100 * (troncature(n - troncature(n, 1), 2))\n        mi = 1000 * (troncature(n - troncature(n, 2), 3))\n      } else if (this.sup === 4) {\n        v = randint(11, 99) / 10\n        angle = randint(1, 89, 60)\n        if (choice([true, false])) {\n          n = v * cos(angle)\n          nb = `${texNombre(v)}\\\\cos(${angle})`\n          di = 10 * (troncature(n - troncature(n, 0), 1))\n          ci = 100 * (troncature(n - troncature(n, 1), 2))\n          mi = 1000 * (troncature(n - troncature(n, 2), 3))\n        } else {\n          n = v / cos(angle)\n          nb = `\\\\dfrac{${texNombre(v)}}{\\\\cos(${angle})}`\n          di = 10 * (troncature(n - troncature(n, 0), 1))\n          ci = 100 * (troncature(n - troncature(n, 1), 2))\n          mi = 1000 * (troncature(n - troncature(n, 2), 3))\n        }\n      }\n\n      if (this.sup === 1) texte = `$${nb}$`\n      else if (this.sup === 2) texte = `$\\\\text{Quand~on~écrit~sur~la~calculatrice~} ${num}\\\\div ${den}, \\\\text{~elle~renvoie} : ${texNombre(n)}$`\n      else if (this.sup === 3) texte = `$\\\\text{Quand~on~écrit~sur~la~calculatrice~} ${nb}, \\\\text{~elle~renvoie} : ${texNombre(n)}$`\n      else if (this.sup === 4) texte = `$\\\\text{Quand~on~écrit~sur~la~calculatrice~} ${nb}, \\\\text{~elle~renvoie} : ${texNombre(n)}$`\n\n      texteCorr = \"Encadrement et arrondi à l'unité : \"\n      if (di < 5) {\n        texteCorr += `$\\\\phantom{1234567}${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n        preTabRep[0] = `$${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n        preTabRep[1] = `$${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      } else {\n        texteCorr += `$\\\\phantom{1234567}${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        preTabRep[0] = `$${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        preTabRep[1] = `$${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      }\n\n      texteCorr += '<br>Encadrement et arrondi au dixième : '\n      if (ci < 5) {\n        texteCorr += `$\\\\phantom{123}${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        preTabRep[0] = `$${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        preTabRep[1] = `$${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      } else {\n        texteCorr += `$\\\\phantom{123}${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        preTabRep[0] = `$${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        preTabRep[1] = `$${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      }\n\n      texteCorr += '<br>Encadrement et arrondi au centième : $~$'\n      if (mi < 5) {\n        texteCorr += `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        preTabRep[0] = `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        preTabRep[1] = `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      } else {\n        texteCorr += `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        preTabRep[0] = `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        preTabRep[1] = `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      }\n      this.autoCorrection[i].enonce = `Quels sont les encadrements où la valeur orange est l'arrondi de ${texte} ?\\\\\\\\ \\n Réponses possibles`\n      this.autoCorrection[i].options = { vertical: true, ordered: true }\n      this.autoCorrection[i].propositions = [\n        {\n          texte: tabrep[0],\n          statut: tabicone[0],\n          feedback: ''\n        },\n        {\n          texte: tabrep[1],\n          statut: tabicone[1],\n          feedback: ''\n        },\n        {\n          texte: tabrep[2],\n          statut: tabicone[2],\n          feedback: ''\n        },\n        {\n          texte: tabrep[3],\n          statut: tabicone[3],\n          feedback: ''\n        },\n        {\n          texte: tabrep[4],\n          statut: tabicone[4],\n          feedback: ''\n        },\n        {\n          texte: tabrep[5],\n          statut: tabicone[5],\n          feedback: ''\n        }\n      ]\n      if (this.modeQcm && !context.isAmc) {\n        texte += '<br><br>Réponses possibles : <br>  '\n        texteCorr = ''\n        // shuffle2tableaux(tabrep, tabicone);\n        for (let i = 0; i < 6; i++) {\n          texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n          if (tabicone[i] === 1) {\n            texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace\n          } else {\n            texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n          }\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        if (this.interactif) {\n          texte += propositionsQcm(this, i).texte\n        }\n        this.listeQuestions.push(texte) // Sinon on enregistre la question dans listeQuestions\n        this.listeCorrections.push(texteCorr) // On fait pareil pour la correction\n        tabrep.length = 0\n        tabicone.length = 0\n        i++ // On passe à la question suivante\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de nombre', 2, '1 : Nombre décimal\\n 2 : Fraction']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ArrondirUneValeur4e","ArrondirUneValeur","this","sup","sup2","spacing","besoinFormulaireNumerique","amcReady","amcType","interactifReady","interactifType","Exercice","nbQuestions","nbCols","nbColsCorr","interactif","context","spacingCorr","nouvelleVersion","parseInt","autoCorrection","consigne","tabrep","tabicone","preTabRep","m","c","d","u","di","ci","mi","me","ce","de","n","den","num","nb","rac","angle","v","preTabIcone","espace","listeQuestions","listeCorrections","i","texte","texteCorr","cpt","randint","calcul","texNombre","choice","texFraction","troncature","listeNombresPremiersStrictJusqua","Math","sqrt","cos","miseEnEvidence","shuffle2tableaux","push","enonce","options","vertical","ordered","propositions","statut","feedback","modeQcm","indexOf","propositionsQcm","length","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}