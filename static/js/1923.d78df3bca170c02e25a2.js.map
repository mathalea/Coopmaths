{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N41.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","amcReady","amcType","interactifReady","EgalitesEntreFractions","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nouvelleVersion","parseInt","listeQuestions","listeCorrections","listeFractions","listeTypeDeQuestions","combinaisonListes","nbQuestions","fraction","a","b","c","d","k","choix","texte","texteCorr","i","choice","modeQcm","randint","Math","max","enleveElement","texFraction","miseEnEvidence","autoCorrection","enonce","propositions","statut","abs","interactif","context","propositionsQcm","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1923.d78df3bca170c02e25a2.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, combinaisonListes, miseEnEvidence, texFraction } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const titre = 'Égalités entre fractions simples'\nexport const amcReady = true\nexport const amcType =1 // QCM \nexport const interactifReady = true\n\n/**\n * Écrire une fraction avec un nouveau dénominateur qui est un multiple de son dénominateur (ce multiple est inférieur à une valeur maximale de 11 par défaut)\n * @author Rémi Angot\n * @author Jean-claude Lhote (Mode QCM et alternance numérateur / dénominateur)\n * 5N13-2 et 6N41\n */\nexport default function EgalitesEntreFractions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 11 // Correspond au facteur commun\n  this.sup2 = 2 // alternace numérateur ou dénominateur imposé.\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.consigne = 'Compléter les égalités.'\n  this.spacing = 2\n  this.spacingCorr = 2\n\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.sup2 = parseInt(this.sup2)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const listeFractions = [\n      [1, 2],\n      [1, 3],\n      [2, 3],\n      [1, 4],\n      [3, 4],\n      [1, 5],\n      [2, 5],\n      [3, 5],\n      [4, 5],\n      [1, 6],\n      [5, 6],\n      [1, 7],\n      [2, 7],\n      [3, 7],\n      [4, 7],\n      [5, 7],\n      [6, 7],\n      [1, 8],\n      [3, 8],\n      [5, 8],\n      [7, 8],\n      [1, 9],\n      [2, 9],\n      [4, 9],\n      [5, 9],\n      [7, 9],\n      [8, 9],\n      [1, 10],\n      [3, 10],\n      [7, 10],\n      [9, 10]\n    ] // Couples de nombres premiers entre eux\n    const listeTypeDeQuestions = combinaisonListes(\n      [1, 1, 1, 1, 2],\n      this.nbQuestions\n    )\n    for (\n      let i = 0, fraction, a, b, c, d, k, choix, texte, texteCorr;\n      i < this.nbQuestions;\n      i++\n    ) {\n      if (listeTypeDeQuestions[i] === 1) {\n        // égalité entre 2 fractions\n        fraction = choice(listeFractions) //\n        a = fraction[0]\n        b = fraction[1]\n        if (this.modeQcm) {\n          k = randint(3, Math.max(this.sup, 4))\n        } else {\n          k = randint(2, Math.max(3, this.sup))\n        }\n        c = k * a\n        d = k * b\n        enleveElement(listeFractions, fraction) // Il n'y aura pas 2 fois la même fraction de départ\n        if (this.sup2 === 3) {\n          choix = i % 2\n        } else {\n          choix = this.sup2 % 2\n        }\n        switch (choix) {\n          case 0 :\n            texte = `$${texFraction(a, b)} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction('\\\\phantom{0000}', d)}$`\n            texteCorr = `$${texFraction(a, b)} = ${texFraction(a + miseEnEvidence('\\\\times' + k), b + miseEnEvidence('\\\\times' + k))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction((k - 1) * a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction((k + 1) * a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(Math.abs(d - a), d)}$`,\n                statut: false\n              }\n            ]\n            break\n          case 1 :\n            texte = `$${texFraction(a, b)} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction(c, '\\\\phantom{0000}')}$`\n            texteCorr = `$${texFraction(a, b)} = ${texFraction(a + miseEnEvidence('\\\\times' + k), b + miseEnEvidence('\\\\times' + k))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(c, b)}$`,\n                statut: false\n              },\n              {\n                texte: `$\\\\dfrac{${c}}{${(k - 1) * b}}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, (k + 1) * b)}$`,\n                statut: false\n              },\n              {\n                texte: `$\\\\dfrac{${c}}{${Math.abs(c - b)}}$`,\n                statut: false\n              }\n            ]\n\n            break\n        }\n      } else {\n        // écrire un entier sous la forme d'une fraction\n        a = randint(1, 9)\n        if (this.interactif && !context.isAmc) {\n          d = randint(3, 9, [a, 2 * a])\n        } else {\n          d = randint(2, 9)\n        }\n        c = a * d\n        if (this.sup2 === 3) {\n          choix = i % 2\n        } else {\n          choix = this.sup2 % 2\n        }\n        switch (choix) {\n          case 0 :\n            texte = `$${a} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction('\\\\phantom{0000}', d)}$`\n            if (this.interactif) {\n              texte = `$${a} = \\\\ldots$`\n            }\n            texteCorr = `$${a} = \\\\dfrac{${a}}{1} =${texFraction(a + miseEnEvidence('\\\\times' + d), '1' + miseEnEvidence('\\\\times' + d))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(d + a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(Math.abs(d - a), d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction((a + 1) * d, d)}$`,\n                statut: false\n              }\n            ]\n            break\n          case 1 :\n            texte = `$${a} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction(c, '\\\\phantom{0000}')}$`\n            if (this.interactif) {\n              texte = `$${a} = \\\\ldots$`\n            }\n            texteCorr = `$${a} = \\\\dfrac{${a}}{1} =${texFraction(a + miseEnEvidence('\\\\times' + d), '1' + miseEnEvidence('\\\\times' + d))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(c, c - a)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, a)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, c + a)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, c * a)}$`,\n                statut: false\n              }\n            ]\n\n            break\n        }\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale du facteur commun', 99]\n  this.besoinFormulaire2Numerique = ['Type de question', 3, '1 : Numérateur imposé\\n2 : Dénominateur imposé\\n3 : Alternance']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}