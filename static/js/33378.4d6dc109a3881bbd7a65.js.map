{"version":3,"file":"js/33378.4d6dc109a3881bbd7a65.js","mappings":"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","sources":["webpack://mathalea/./src/js/modules/Alea2iep.js","webpack://mathalea/./src/js/modules/iepMacros/droitesRemarquables.js","webpack://mathalea/./src/js/modules/iepMacros/parallelesEtPerpendiculaires.js","webpack://mathalea/./src/js/modules/iepMacros/parallelogrammes.js","webpack://mathalea/./src/js/modules/iepMacros/quadrilateres.js","webpack://mathalea/./src/js/modules/iepMacros/transformations.js","webpack://mathalea/./src/js/modules/iepMacros/triangles.js"],"sourcesContent":["import iepLoadPromise from 'instrumenpoche'\nimport { angleOriente, droite, homothetie, longueur, milieu, norme, point, pointAdistance, pointSurSegment, rotation, segment, translation, translation2Points, vecteur } from './2d.js'\nimport { context } from './context.js'\nimport { bissectriceAuCompas, cercleCirconscrit, hauteur, mediane, mediatriceAuCompas, mediatriceRegleEquerre } from './iepMacros/droitesRemarquables'\nimport { paralleleAuCompas, paralleleAuCompasAvecDescription, paralleleRegleEquerre2points3epoint, paralleleRegleEquerreDroitePointAvecDescription, perpendiculaireCompasPoint, perpendiculaireCompasPointSurLaDroite, perpendiculaireRegleEquerre2points3epoint, perpendiculaireRegleEquerreDroitePoint, perpendiculaireRegleEquerrePointSurLaDroite } from './iepMacros/parallelesEtPerpendiculaires.js'\nimport { parallelogramme2sommetsConsecutifsCentre, parallelogramme3sommetsConsecutifs, parallelogrammeAngleCentre, partageSegment } from './iepMacros/parallelogrammes'\nimport { carre1point1longueur } from './iepMacros/quadrilateres.js'\nimport { demiTourPoint, demiTourPolygone, homothetiePoint, homothetiePolygone, rotationPoint, rotationPolygone, symetrieAxialePoint, symetrieAxialePolygone, translationPoint, translationPolygone } from './iepMacros/transformations'\nimport { triangle1longueur2angles, triangle2longueurs1angle, triangle3longueurs, triangleEquilateral, triangleEquilateral2Sommets, triangleRectangle2Cotes, triangleRectangleCoteHypotenuse } from './iepMacros/triangles.js'\nimport { calcul } from './outils.js'\n\n/*\n * Classe parente de tous les objets Alea2iep\n *\n * @author Rémi Angot\n */\nexport default class Alea2iep {\n  constructor () {\n    this.idIEP = 0 // Identifiant pour les tracés\n    this.idHTML = 0 // Identifiant pour les div et le svg\n    this.tempo = 5 // Pause par défaut après une instruction\n    this.vitesse = 10 // Vitesse par défaut pour les déplacements d'instruments\n    this.couleur = 'blue' // Couleur par défaut\n    this.couleurCompas = 'forestgreen'\n    this.couleurTexte = 'black'\n    this.couleurPoint = 'black' // Couleur du nom des points\n    this.couleurCodage = '#f15929'\n    this.couleurTraitsDeConstruction = 'gray'\n    this.epaisseur = 2\n    this.epaisseurTraitsDeConstruction = 1\n    this.pointilles = false\n    this.liste_script = [] // Liste des instructions xml mise à jour par les méthodes\n\n    this.translationX = 0\n    this.translationY = 10 // Par défaut l'angle en haut à gauche est le point de coordonnées (0,10)\n\n    // Garde en mémoire les coordonnées extrêmes des objets créés\n    this.xMin = 0\n    this.yMin = 0\n    this.xMax = 0\n    this.yMax = 0\n\n    // Sauvegarde de l'état des instruments\n    this.regle = {\n      visibilite: false,\n      position: point(0, 0),\n      angle: 0,\n      longueur: 15,\n      zoom: 100\n    }\n\n    this.crayon = {\n      visibilite: false,\n      position: point(0, 0),\n      angle: 0,\n      zoom: 100\n    }\n\n    this.equerre = {\n      visibilite: false,\n      position: point(0, 0),\n      angle: 0,\n      zoom: 100\n    }\n\n    this.requerre = {\n      visibilite: false,\n      position: point(0, 0),\n      angle: 0,\n      zoom: 100\n    }\n\n    this.rapporteur = {\n      visibilite: false,\n      position: point(0, 0),\n      angle: 0,\n      zoom: 100\n    }\n\n    this.compas = {\n      visibilite: false,\n      position: point(0, 0),\n      angle: 0,\n      orientation: 'droite',\n      ecartement: 0,\n      leve: false,\n      zoom: 100\n    }\n\n    this.xml = ''\n  }\n  /** **** Fin du constructeur */\n\n  // Transforme les coordonnées MathALEA2D en coordonnées pour le XML d'IEP\n  x (A) {\n    const x = calcul((A.x + this.translationX) * 30, 0)\n    if (A.x > this.xMax) {\n      this.xMax = A.x\n    }\n    if (A.x < this.xMin) {\n      this.xMin = A.x\n    }\n    return x\n  }\n\n  y (A) {\n    const y = calcul((-A.y + this.translationY) * 30, 0)\n    if (A.y < this.yMin) {\n      this.yMin = A.y\n    }\n    if (A.y > this.yMax) {\n      this.yMax = A.y\n    }\n    return y\n  }\n\n  /**\n   * Renvoie le script xml\n   *\n   */\n  script () {\n    if (this.xml.length > 1) {\n      return this.xml\n    } else {\n      let codeXML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n'\n      codeXML += '<INSTRUMENPOCHE version=\"2\">\\n'\n      codeXML += this.liste_script.join('\\n')\n      codeXML += '\\n</INSTRUMENPOCHE>'\n      return codeXML\n    }\n  }\n\n  /**\n   * Renvoie le code HTML de l'animation\n   * @param {int} numeroExercice - Numéro de l'exercice\n   * @param {int} i - Numéro de la question\n   */\n  html (id1, id2) {\n    if (context.isHtml) {\n      const id = `IEP_${id1}_${id2}`\n      window.listeScriptsIep[id] = this.script() // On ajoute le script\n      const codeHTML = `<div id=\"IEPContainer${id}\" ></div>`\n      window.listeAnimationsIepACharger.push(id)\n      return codeHTML\n    }\n  }\n\n  /**\n   *\n   * @param {int} numeroExercice - Numéro de l'exercice\n   * @param {int} i - Numéro de la question\n   * @return Code HTML avec le bouton qui affiche ou masque un div avec l'animation\n   */\n  htmlBouton (id1, id2 = '') {\n    if (context.isHtml) {\n      const id = `IEP_${id1}_${id2}`\n      window.listeScriptsIep[id] = this.script() // On ajoute le script\n      const codeHTML = `<br><button class=\"ui mini compact button\" id=\"btnAnimation${id}\" onclick=\"toggleVisibilityIEP('${id}')\" style=\"margin-top:20px\"><i class=\"large play circle outline icon\"></i>Voir animation</button>\n            <div id=\"IEPContainer${id}\" style=\"display: none;\" ></div>`\n      if (!window.toggleVisibilityIEP) {\n        window.toggleVisibilityIEP = function (id) {\n          const element = document.getElementById(`IEPContainer${id}`)\n          const elementBtn = document.getElementById(`btnAnimation${id}`)\n          const xml = window.listeScriptsIep[id]\n          if (element.style.display === 'none') {\n            element.style.display = 'block'\n            element.style.marginTop = '30px'\n            elementBtn.innerHTML = '<i class=\"large stop circle outline icon\"></i>Masquer animation'\n            iepLoadPromise(element, xml, { zoom: true, autostart: true }).then(iepApp => {\n              // la figure est chargée\n            }).catch(error => { console.log(error) })\n          } else {\n            element.style.display = 'none'\n            elementBtn.innerHTML = '<i class=\"large play circle outline icon\"></i>Voir animation'\n          }\n        }\n      }\n      return codeHTML\n    } else {\n      return ''\n    }\n  }\n\n  /**\n **************************\n *** FONCTIONS COMMUNES ***\n **************************\n */\n\n  /**\n *\n * @param {int} xmin\n * @param {int} ymax\n */\n  recadre (xmin, ymax) {\n    this.translationX = 1 - xmin\n    this.translationY = ymax + 3\n  }\n\n  /**\n   *\n   * @param {int} width\n   * @param {int} height\n   */\n  taille (width, height) {\n    this.liste_script.push(`<viewBox width=\"${width}\" height=\"${height}\" />`)\n  }\n\n  /**\n   *\n   * @param {string} objet - 'regle', 'equerre', 'requerre, 'compas', 'rapporteur' ou 'crayon'\n   * @param {point} A - Point (0, 0) par défaut\n   * @param {objet} options - { tempo : 10 }\n   */\n  montrer (objet, A, { tempo = this.tempo, vitesse = this.vitesse } = {}) {\n    if (!this[objet].visibilite || this[objet].position !== A) { // On ajoute une ligne xml que si l'objet est caché ou doit apparaitre à un autre endroit\n      let codeXML = ''\n      let A1\n      if (typeof A === 'undefined') { // A1 est une copie de A ou (0,0) si A n'est pas défini\n        A1 = this[objet].position\n      } else {\n        A1 = A\n      }\n      if (this[objet].visibilite) { // S'il est déjà visible, montrer devient un déplcer\n        this.deplacer(objet, A1, { tempo: tempo, vitesse: vitesse })\n      } else {\n        codeXML = `<action objet=\"${objet}\" mouvement=\"montrer\" abscisse=\"${this.x(A1)}\" ordonnee=\"${this.y(A1)}\" tempo=\"${tempo}\" />`\n        this[objet].visibilite = true\n      }\n      this[objet].position = A1\n      this.liste_script.push(codeXML)\n    }\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  regleMontrer (A, options) {\n    this.montrer('regle', A, options)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  crayonMontrer (A, options) {\n    this.montrer('crayon', A, options)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  equerreMontrer (A, options) {\n    this.montrer('equerre', A, options)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  requerreMontrer (A, options) {\n    this.montrer('requerre', A, options)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  compasMontrer (A, options) {\n    this.montrer('compas', A, options)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  rapporteurMontrer (A, options) {\n    this.montrer('rapporteur', A, options)\n  }\n\n  /**\n   *\n   * @param {string} objet\n   * @param {objet} param1\n   */\n  masquer (objet, { tempo = this.tempo } = {}) {\n    if (this[objet].visibilite) { // On ajoute une ligne xml que si l'objet est visible\n      const codeXML = `<action objet=\"${objet}\" mouvement=\"masquer\" tempo=\"${tempo}\" />`\n      this[objet].visibilite = false\n      this.liste_script.push(codeXML)\n    }\n  }\n\n  /**\n   *\n   * @param {objet} options\n   */\n  regleMasquer (options) {\n    this.masquer('regle', options)\n  }\n\n  /**\n   *\n   * @param {objet} options\n   */\n  crayonMasquer (options) {\n    this.masquer('crayon', options)\n  }\n\n  /**\n   *\n   * @param {objet} options\n   */\n  equerreMasquer (options) {\n    this.masquer('equerre', options)\n  }\n\n  /**\n   *\n   * @param {objet} options\n   */\n  requerreMasquer (options) {\n    this.masquer('requerre', options)\n  }\n\n  /**\n   *\n   * @param {objet} options\n   */\n  compasMasquer (options) {\n    this.masquer('compas', options)\n  }\n\n  /**\n   *\n   * @param {objet} options\n   */\n  rapporteurMasquer (options) {\n    this.masquer('rapporteur', options)\n  }\n\n  /**\n *\n * @param {string} objet\n * @param {point} A\n * @param {objet} options\n */\n  deplacer (objet, A, { tempo = this.tempo, vitesse = this.vitesse } = {}) {\n    if (this[objet].position !== A) { // On n'ajoute une commande xml que s'il y a vraiment un déplacement\n      const codeXML = `<action objet=\"${objet}\" mouvement=\"translation\" abscisse=\"${this.x(A)}\" ordonnee=\"${this.y(A)}\" tempo=\"${tempo}\" vitesse=\"${vitesse}\" />`\n      this[objet].position = A\n      this.liste_script.push(codeXML)\n    }\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  regleDeplacer (A, options) {\n    this.deplacer('regle', A, options)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  texteDeplacer (id, A, { tempo = this.tempo, vitesse = this.vitesse } = {}) {\n    const codeXML = `<action objet=\"texte\" id=\"${id}\" mouvement=\"translation\" abscisse=\"${this.x(A)}\" ordonnee=\"${this.y(A)}\" tempo=\"${tempo}\" vitesse=\"${vitesse}\" />`\n    this.liste_script.push(codeXML)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  crayonDeplacer (A, options) {\n    this.deplacer('crayon', A, options)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  equerreDeplacer (A, options) {\n    this.deplacer('equerre', A, options)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  requerreDeplacer (A, options) {\n    this.deplacer('requerre', A, options)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  compasDeplacer (A, options) {\n    this.deplacer('compas', A, options)\n  }\n\n  /**\n   *\n   * @param {point} A\n   * @param {objet} options\n   */\n  rapporteurDeplacer (A, options) {\n    this.deplacer('rapporteur', A, options)\n  }\n\n  /**\n *\n * @param {string} objet\n * @param {int} angle\n * @param {objet} options\n */\n  rotation (objet, a, { tempo = this.tempo, sens = calcul(this.vitesse / 2, 0) } = {}) {\n    let angle\n    if (a.typeObjet === 'point') {\n      const d = droite(this[objet].position, a)\n      angle = d.angleAvecHorizontale\n    } else {\n      angle = a\n    }\n    if (this[objet].angle !== a) { // Si la rotation est inutile, on ne la fait pas\n      // Les angles de MathALEA2D et de IEP sont opposés !!!!!\n      const codeXML = `<action objet=\"${objet}\" mouvement=\"rotation\" angle=\"${-1 * angle}\" tempo=\"${tempo}\" sens=\"${sens}\" />`\n      this[objet].angle = angle\n      if (typeof angle === 'number' && isFinite(angle)) {\n        this.liste_script.push(codeXML)\n      } else {\n        console.log('Angle de rotation non défini pour l\\'objet .', objet)\n      }\n    }\n  }\n\n  /**\n *\n * @param {int} angle\n * @param {objet} options\n */\n  regleRotation (angle, options) {\n    this.rotation('regle', angle, options)\n  }\n\n  /**\n *\n * @param {int} angle\n * @param {objet} options\n */\n  crayonRotation (angle, options) {\n    this.rotation('crayon', angle, options)\n  }\n\n  /**\n *\n * @param {int} angle\n * @param {objet} options\n */\n  equerreRotation (angle, options) {\n    this.rotation('equerre', angle, options)\n  }\n\n  /**\n *\n * @param {int} angle\n * @param {objet} options\n */\n  requerreRotation (angle, options) {\n    this.rotation('requerre', angle, options)\n  }\n\n  /**\n *\n * @param {int} angle\n * @param {objet} options\n */\n  compasRotation (angle, options) {\n    this.rotation('compas', angle, options)\n  }\n\n  /**\n *\n * @param {int} angle\n * @param {objet} options\n */\n  rapporteurRotation (angle, options) {\n    this.rotation('rapporteur', angle, options)\n  }\n\n  /**\n *\n * @param {int} pourcentage 200 pour doubler la taille\n * @param {objet} options tempo = 0 par défaut\n */\n  regleZoom (k, { tempo = 0 } = {}) {\n    this.regle.zoom = k\n    this.liste_script.push(`<action echelle=\"${k}\" mouvement=\"zoom\" objet=\"regle\" tempo=\"${tempo}\" />`)\n  }\n\n  /**\n *\n * @param {int} pourcentage 200 pour doubler la taille\n * @param {objet} options tempo = 0 par défaut\n */\n  equerreZoom (k, { tempo = 0 } = {}) {\n    this.equerre.zoom = k\n    this.liste_script.push(`<action echelle=\"${k}\" mouvement=\"zoom\" objet=\"equerre\" tempo=\"${tempo}\" />`)\n  }\n\n  /**\n *\n * @param {int} pourcentage 200 pour doubler la taille\n * @param {objet} options tempo = 0 par défaut\n */\n  requerreZoom (k, { tempo = 0 } = {}) {\n    this.requerre.zoom = k\n    this.liste_script.push(`<action echelle=\"${k}\" mouvement=\"zoom\" objet=\"requerre\" tempo=\"${tempo}\" />`)\n  }\n\n  /**\n *\n * @param {int} pourcentage 200 pour doubler la taille\n * @param {objet} options tempo = 0 par défaut\n */\n  rapporteurZoom (k, { tempo = 0 } = {}) {\n    this.rapporteur.zoom = k\n    this.liste_script.push(`<action echelle=\"${k}\" mouvement=\"zoom\" objet=\"rapporteur\" tempo=\"${tempo}\" />`)\n  }\n\n  /**\n *\n * @param {int} pourcentage 200 pour doubler la taille\n * @param {objet} options tempo = 0 par défaut\n */\n  compasZoom (k, { tempo = 0 } = {}) {\n    this.compas.zoom = k\n    this.liste_script.push(`<action echelle=\"${k}\" mouvement=\"zoom\" objet=\"compas\" />`)\n  }\n\n  /**\n **************************\n ********* POINT **********\n **************************\n */\n\n  /**\n * Crééer un point avec la croix pour le situer et son nom en bas à droite par défaut. L'id sera sauvegardé dans l'objet point. S'il n'est pas défini alors on prend le premier entier disponible.\n * @param {point} A\n * @param {objet} options { label: A.nom, tempo: this.tempo, couleur: this.couleurPoint, couleurLabel: this.couleurTexte, id }\n *\n */\n  pointCreer (A, { dx = 0.1, dy, label = A.nom, tempo = this.tempo, couleur = this.couleurPoint, couleurLabel = this.couleurTexte, id } = {}) {\n    if (typeof id !== 'undefined') {\n      A.id = id\n    } else {\n      this.idIEP++\n      A.id = this.idIEP\n    }\n    let codeXML\n    if (label) {\n      codeXML = `<action abscisse=\"${this.x(A)}\" ordonnee=\"${this.y(A)}\" couleur=\"${couleur}\" id=\"${A.id}\" mouvement=\"creer\" objet=\"point\" tempo=\"${tempo}\"/>`\n      // codeXML += `\\n<action couleur=\"${couleurLabel}\" nom=\"${label}\" id=\"${this.idIEP}\" mouvement=\"nommer\" objet=\"point\" tempo=\"${tempo}\"  />`\n      const M = point(A.x, A.y)\n      if (typeof dx !== 'undefined') {\n        M.x += dx\n      }\n      if (typeof dy !== 'undefined') {\n        M.y += dy\n      }\n      this.textePoint(`$${label}$`, M, { tempo: 0, couleur: couleurLabel })\n    } else {\n      codeXML = `<action abscisse=\"${this.x(A)}\" ordonnee=\"${this.y(A)}\" couleur=\"${couleur}\" id=\"${A.id}\" mouvement=\"creer\" objet=\"point\" tempo=\"${tempo}\" />`\n    }\n    this.liste_script.push(codeXML)\n  }\n\n  /**\n * Création de plusieurs points\n * Le dernier argument peut être une option qui sera appliquée à tous les points\n *\n * @param  {...points} points Points séparés par des virgules\n */\n  pointsCreer (...args) {\n    if (args[args.length - 1].typeObjet === 'point') {\n      for (const point of args) {\n        this.pointCreer(point, { tempo: 0 })\n      }\n    } else {\n      const options = args[args.length - 1]\n      const enleveDernier = arr => arr.slice(0, -1)\n      for (const point of enleveDernier(args)) {\n        this.pointCreer(point, options)\n      }\n    }\n  }\n\n  /**\n * Masquer un point\n * @param {point} A\n * @param {objet} options Défaut : { tempo: 0 }\n */\n  pointMasquer (...args) {\n    const enleveDernier = arr => arr.slice(0, -1)\n    if (args[args.length - 1].typeObjet === 'point') {\n      for (const point of args) {\n        this.liste_script.push(`<action id=\"${point.id}\" mouvement=\"masquer\" objet=\"point\" tempo=\"0\" />`)\n      }\n    } else {\n      if (args[args.length - 1].tempo !== undefined) {\n        const tempo = args[args.length - 1].tempo\n        for (const point of enleveDernier(args)) {\n          this.liste_script.push(`<action id=\"${point.id}\" mouvement=\"masquer\" objet=\"point\" tempo=\"${tempo}\" />`)\n        }\n      } else {\n        for (const point of enleveDernier(args)) {\n          this.liste_script.push(`<action id=\"${point.id}\" mouvement=\"masquer\" objet=\"point\" tempo=\"0\" />`)\n        }\n      }\n    }\n  }\n\n  /**\n   * Montrer un point qui aurait été caché\n   * @param {point} A\n   * @param {objet} options Défaut ; { tempo : this.tempo }\n   */\n  pointMontrer (A, { tempo = this.tempo } = {}) {\n    this.liste_script.push(`<action id=\"${A.id}\" mouvement=\"montrer\" objet=\"point\" tempo=\"${tempo}\" />`)\n  }\n\n  /**\n   * Anime la translation d'un point\n   * @param {point} A\n   * @param {int} x Abscisse du point d'arrivée\n   * @param {int} y Ordonnée du point d'arrivée\n   * @param {objet} options Défaut : { tempo: this.tempo, vitesse: this.vitesse }\n   */\n  pointDeplacer (A, x, y, { tempo = this.tempo, vitesse = this.vitesse } = {}) {\n    const B = point(x, y)\n    this.liste_script.push(`<action abscisse=\"${this.x(B)}\" ordonnee=\"${this.y(B)}\" id=\"${A.id}\" mouvement=\"translation\" objet=\"point\" tempo=\"${tempo}\" vitesse=\"${vitesse}\" />`)\n  }\n\n  /**\n   * Ajoute un label au point\n   * @param {point} A\n   * @param {string} nom\n   * @param {objet} options dx pour le déplacement vertical du nom du point, dy pour le déplacemetn horizontal, couleur: this.couleurPoint, tempo: this.tempo\n   */\n  pointNommer (A, nom, { dx, dy, couleur = this.couleurPoint, tempo = this.tempo } = {}) {\n    // const coordonneesTexte = ''\n    const M = point(A.x, A.y)\n    if (typeof dx !== 'undefined') {\n      M.x += dx\n    }\n    if (typeof dy !== 'undefined') {\n      M.y += dy\n    }\n    this.textePoint(`$${nom}$`, M, { tempo: tempo, couleur: couleur })\n    // this.liste_script.push(`<action couleur=\"${couleur}\" nom=\"${nom}\" id=\"${A.id}\" mouvement=\"nommer\" objet=\"point\" tempo=\"${tempo}\" ${coordonneesTexte} />`)\n  }\n\n  /**\n **************************\n ********* COMPAS *********\n **************************\n */\n\n  /**\n* Change l'orientation du compas. Par défaut, elle est vers la droite. L'orientation courante du compas est sauvegardée dans this.compas.orientation\n* @param {objet} options Défaut : { tempo: this.tempo}\n*/\n  compasRetourner ({ tempo = this.tempo } = {}) {\n    const codeXML = `<action mouvement=\"retourner\" objet=\"compas\" tempo=\"${tempo}\" />`\n    if (this.compas.orientation === 'droite') {\n      this.compas.orientation = 'gauche'\n    } else {\n      this.compas.orientation = 'droite'\n    }\n    this.liste_script.push(codeXML)\n  }\n\n  /**\n*\n* @param {int} longueur écartement en cm\n* @param {objet} options Défaut : { tempo: this.tempo, vitesse: this.vitesse }\n*/\n  compasEcarter (l, { tempo = this.tempo, vitesse = this.vitesse } = {}) {\n    const codeXML = `<action ecart=\"${calcul(l * 30, 1)}\" mouvement=\"ecarter\" objet=\"compas\" tempo=\"${tempo}\" vitesse=\"${vitesse}\" />`\n    this.compas.ecartement = l\n    this.liste_script.push(codeXML)\n  }\n\n  /**\n* Fais apparaitre la règle à l'horizontale, met le compas vertical et écarte le compas le long de la règle pour lire son écartement\n* @param {int} longueur\n* @param {*} options Défaut : { tempo: this.tempo, vitesse: this.vitesse, sens : this.vitesse / 2 }\n*/\n  compasEcarterAvecRegle (l, { tempo = this.tempo, vitesse = this.vitesse, sens = this.vitesse / 2 } = {}) {\n    this.regleRotation(0, { tempo: 0, sens: sens })\n    this.regleMontrer(this.compas.position, { tempo: 0 })\n    this.regleDeplacer(this.compas.position, { tempo: 0, vitesse: vitesse })\n    this.compasMontrer()\n    this.compasRotation(0, { tempo: 0, sens: sens })\n    this.compasEcarter(l, { tempo: tempo, vitesse: vitesse, sens: sens })\n  }\n\n  /**\n*\n* @param {point} A Pointe du compas\n* @param {point} B Mine du compas\n* @param {objet} options Défaut : { tempo: this.tempo, vitesse: this.vitesse, sens : this.vitesse / 2 }\n*/\n  compasEcarter2Points (A, B, { tempo = this.tempo, vitesse = this.vitesse, sens = calcul(this.vitesse / 2) } = {}) {\n    this.compasMontrer(A)\n    this.compasDeplacer(A, { tempo: tempo, vitesse: vitesse })\n    const s = segment(A, B)\n    s.isVisible = false\n    const angle = s.angleAvecHorizontale\n    this.compasRotation(angle, { tempo: tempo, sens: sens })\n    this.compasEcarter(longueur(A, B), { tempo: tempo, vitesse: vitesse })\n  }\n\n  /**\n* Remettre le compas en position standard. Son état est sauvegardé dans le booléen this.compas.leve.\n* @param {objet} options Défaut : { tempo: this.tempo }\n*/\n  compasLever ({ tempo = this.tempo } = {}) {\n    if (!this.compas.leve) { // On ne fait rien si le compas est déjà levé\n      const codeXML = `<action mouvement=\"lever\" objet=\"compas\" tempo=\"${tempo} />`\n      this.compas.leve = true\n      this.liste_script.push(codeXML)\n    }\n  }\n\n  /**\n* Voir le compas en vue de dessus avant qu'il trace un arc de cercle\n* @param {objet} options Défaut : { tempo: this.tempo }\n*/\n  compasCoucher ({ tempo = this.tempo } = {}) {\n    if (this.compas.leve) { // On ne fait rien si le compas est déjà levé\n      const codeXML = `<action mouvement=\"coucher\" objet=\"compas\" tempo=\"${tempo}\" />`\n      this.compas.leve = false\n      this.liste_script.push(codeXML)\n    }\n  }\n\n  /**\n* Trace un arc de cercle en gardant l'écartement et le centre actuel. L'angle de départ sera choisi pour être le plus proche de l'angle actuel\n* @param {int} angle1\n* @param {int} angle2\n* @param {objet} options Défaut : { tempo: this.tempo, sens: this.vitesse / 2, epaisseur: this.epaisseur, couleur: this.couleurCompas, pointilles: this.pointilles }\n* @return {id}\n*/\n  compasTracerArc2Angles (angle1, angle2, { tempo = this.tempo, sens = calcul(this.vitesse / 2, 0), epaisseur = this.epaisseur, couleur = this.couleurCompas, pointilles = this.pointilles } = {}) {\n    const pointillesTexte = pointilles ? 'pointille=\"tiret\"' : ''\n    this.idIEP += 1\n    if (Math.abs(this.compas.angle - angle1) > Math.abs(this.compas.angle - angle2)) { // On cherche à commencer par le point le plus proche de la position courante du compas\n      [angle1, angle2] = [angle2, angle1]\n    }\n    let codeXML = `<action sens=\"${sens}\" angle=\"${-angle1}\" mouvement=\"rotation\" objet=\"compas\" tempo=\"${tempo}\" />\\n`\n    codeXML += '<action mouvement=\"lever\" objet=\"compas\" />\\n'\n    codeXML += `<action sens=\"${sens}\" angle=\"${-angle1}\" mouvement=\"rotation\" objet=\"compas\" />\\n`\n    let sensTexte\n    if (angle2 > angle1) {\n      sensTexte = sens\n    } else {\n      sensTexte = -1 * sens\n    }\n    codeXML += `<action couleur=\"${couleur}\" epaisseur=\"${epaisseur}\" sens=\"${sensTexte}\" debut=\"${-angle1}\" fin=\"${-angle2}\" mouvement=\"tracer\" objet=\"compas\"  ${pointillesTexte} id=\"${this.idIEP}\" />\\n`\n    codeXML += `<action mouvement=\"coucher\" objet=\"compas\" tempo=\"${tempo}\"/>`\n    this.compas.angle = angle2\n    this.liste_script.push(codeXML)\n    return this.idIEP\n  }\n\n  /**\n* Trace un arc de cercle autour d'un point. La longueur de l'arc est déterminée par l'option delta en degré qui est ajoutée de part et d'autre du point\n* @param {point} centre\n* @param {point} point\n* @param {objet} options Défaut : { delta: 10, tempo: this.tempo, sens: this.vitesse / 2, epaisseur: this.epaisseur, couleur: this.couleurCompas, pointilles: this.pointilles }\n* @return {id}\n*/\n  compasTracerArcCentrePoint (centre, point, { delta = 10, tempo = this.tempo, vitesse = this.vitesse, sens = calcul(this.vitesse / 2, 0), epaisseur = this.epaisseur, couleur = this.couleurCompas, pointilles = this.pointilles } = {}) {\n    this.compasMontrer()\n    this.compasDeplacer(centre, { tempo: tempo, vitesse: vitesse })\n    const s = segment(centre, point)\n    s.visibility = false\n    const angle1 = s.angleAvecHorizontale - delta\n    const angle2 = s.angleAvecHorizontale + delta\n    if ((Math.abs(this.compas.ecartement - longueur(this.compas.position, point))) > 0.1) {\n      this.compasEcarter(longueur(centre, point), { tempo: tempo, vitesse: vitesse })\n    }\n    return this.compasTracerArc2Angles(angle1, angle2, { tempo: tempo, vitesse: vitesse, epaisseur: epaisseur, sens: sens, couleur: couleur, pointilles: pointilles })\n  }\n\n  /**\n*\n* @param {point} centre\n* @param {point} point Point de départ du tracé du cercle\n* @param {objet} options Défaut : { tempo: this.tempo, sens: this.vitesse / 2, epaisseur: this.epaisseur, couleur: this.couleurCompas, pointilles: this.pointilles }\n*/\n  compasCercleCentrePoint (centre, point, { tempo = this.tempo, couleur = this.couleur, vitesse = this.vitesse, sens = calcul(this.vitesse / 2), epaisseur = this.epaisseur, pointilles = this.pointilles } = {}) {\n    this.compasEcarter2Points(centre, point, { vitesse: vitesse, tempo: tempo })\n    const d = droite(centre, point)\n    const angle1 = d.angleAvecHorizontale\n    this.compasTracerArc2Angles(angle1, angle1 + 360, { tempo: tempo, vitesse: vitesse, sens: sens, epaisseur: epaisseur, couleur: couleur, pointilles: pointilles })\n  }\n\n  /**\n **************************\n ******** REQUERRE ********\n **************************\n */\n\n  /**\n   *\n   * @param {int} déplacement en nombre de cm (le déplacement peut être positif ou négatif)\n   * @param {*} options Défaut : { tempo: this.tempo, vitesse: this.vitesse }\n   */\n  requerreGlisserEquerre (a, { tempo = this.tempo, vitesse = this.vitesse } = {}) {\n    this.liste_script.push(`<action abscisse=\"${a * 30}\" mouvement=\"glisser\" objet=\"requerre\" tempo=\"${tempo}\" vitesse=\"${vitesse}\" />`)\n  }\n\n  /**\n **************************\n ******* RAPPORTEUR *******\n **************************\n */\n\n  // Non pris en charge par le lecteur JS\n  // this.rapporteurCirculaire = function (tempo=this.tempo) {\n  // //     this.liste_script.push(`<action mouvement=\"circulaire\" objet=\"rapporteur\" tempo=\"${tempo}\"/>`)\n  // }\n  // this.rapporteurSemiCirculaire = function (tempo=this.tempo) {\n  // //     this.liste_script.push(`<action mouvement=\"semicirculaire\" objet=\"rapporteur\" tempo=\"${tempo}\"/>`)\n  // }\n\n  /**\n   * Masque la graduation externe du rapporteur (laisse l'autre graduation visible)\n   * @param {objet} options Défaut : { tempo: this.tempo }\n   */\n  rapporteurMasquerGraduationsExterieures ({ tempo = this.tempo } = {}) {\n    this.liste_script.push(`<action mouvement=\"masquer_nombres\" objet=\"rapporteur\" tempo=\"${tempo}\"/>`)\n  }\n\n  /**\n   * Montre la graduation extérieure si elle avait été précédemment cachée\n   * @param {objet} options Défaut : { tempo: this.tempo }\n   */\n  rapporteurMontrerGraduationsExterieures ({ tempo = this.tempo } = {}) {\n    this.liste_script.push(`<action mouvement=\"montrer_nombres\" objet=\"rapporteur\" tempo=\"${tempo}\"/>`)\n  }\n\n  /**\n   * Masque la graduation interne du rapporteur (laisse l'autre graduation visible)\n   * @param {objet} options Défaut : { tempo: this.tempo }\n   */\n  rapporteurMasquerGraduationsInterieures ({ tempo = this.tempo } = {}) {\n    this.liste_script.push(`<action mouvement=\"vide\" objet=\"rapporteur\" tempo=\"${tempo}\"/>`)\n  }\n\n  /**\n   * Montre la graduation interne si elle avait été précédemment cachée\n   * @param {objet} options Défaut : { tempo: this.tempo }\n   */\n  rapporteurMontrerGraduationsInterieures ({ tempo = this.tempo } = {}) {\n    this.liste_script.push(`<action mouvement=\"graduations\" objet=\"rapporteur\" tempo=\"${tempo}\"/>`)\n  }\n\n  /**\n * Met le rapporteur en position avec le centre en A et le 0 de droite alogné avec le point B\n * @param {point} A\n * @param {point} B\n * @param {objet} options Défaut : { tempo: this.tempo, vitesse: this.vitesse, sens : this.vitesse / 2 }\n */\n  rapporteurDeplacerRotation2Points (A, B, { tempo = this.tempo, vitesse = this.vitesse, sens = calcul(this.vitesse / 2) } = {}) {\n    const d = droite(A, B)\n    d.isVisible = false\n    this.rapporteurMontrer()\n    this.rapporteurDeplacer(A, { tempo: tempo, vitesse: vitesse })\n    this.rapporteurRotation(d.angleAvecHorizontale, { tempo: tempo, vitesse: vitesse, sens: sens })\n  }\n\n  /**\n * Fais une petite marque (couleur et épaisseur d'un trait de construction) sur une graduation du rapporteur\n * @param {int} angle\n * @param {objet} options Défaut : { tempo: this.tempo, vitesse: this.vitesse, couleur: this.couleurTraitsDeConstruction, epaisseur: this.epaisseurTraitsDeConstruction }\n */\n  rapporteurCrayonMarqueAngle (angle, { tempo = this.tempo, vitesse = this.vitesse, couleur = this.couleurTraitsDeConstruction, epaisseur = this.epaisseurTraitsDeConstruction } = {}) {\n    const O = this.rapporteur.position\n    const M = pointAdistance(O, 5.2, angle + this.rapporteur.angle)\n    const N = pointAdistance(O, 5.5, angle + this.rapporteur.angle)\n    this.crayonMontrer()\n    this.crayonDeplacer(M, { tempo: tempo, vitesse: vitesse })\n    this.tracer(N, { tempo: tempo, vitesse: vitesse, couleur: couleur, epaisseur: epaisseur })\n  }\n\n  /**\n * Le crayon va faire une marque sur la graduation du rapporteur, le rapporteur va se cacher et on trace une demi-droite dont on peut choisir la \"longueur\" (par défaut 90% de celle de la règle)\n * @param {point} A Centre du rapporteur\n * @param {point} B Point avec lequel le 0 de droite sera aligné\n * @param {int} angle\n * @param {objet} options { longueur: 0.9 * this.regle.longueur, couleur: this.couleur, tempo: this.tempo, vitesse: this.vitesse, sens : this.vitesse / 2, epaisseur: this.epaisseur, pointilles: this.pointilles }\n */\n  rapporteurTracerDemiDroiteAngle (A, B, angle, { longueur = 0.9 * this.regle.longueur, couleur = this.couleur, tempo = this.tempo, vitesse = this.vitesse, sens = calcul(this.vitesse / 2), epaisseur = this.epaisseur, pointilles = this.pointilles } = {}) {\n    if (angle > 0) {\n      this.rapporteurDeplacerRotation2Points(A, B, { tempo: tempo, vitesse: vitesse, sens: sens })\n      this.rapporteurCrayonMarqueAngle(angle, { tempo: tempo, vitesse: vitesse, sens: sens })\n    } else {\n      const B2 = rotation(B, A, 180)\n      this.rapporteurDeplacerRotation2Points(A, B2, { tempo: tempo, vitesse: vitesse, sens: sens })\n      this.rapporteurCrayonMarqueAngle(180 - Math.abs(angle), { tempo: tempo, vitesse: vitesse, sens: sens })\n    }\n    const d = droite(A, B)\n    d.isVisible = false\n    const M = pointAdistance(A, calcul(5.2 * this.rapporteur.zoom / 100, 1), d.angleAvecHorizontale + angle)\n    this.rapporteurMasquer({ tempo: tempo })\n    this.regleDemiDroiteOriginePoint(A, M, { longueur: longueur, couleur: couleur, tempo: tempo, vitesse: vitesse, sens: sens, epaisseur: epaisseur, pointilles: pointilles })\n  }\n\n  /**\n **************************\n ********* REGLE **********\n **************************\n */\n\n  /**\n * Masquer les graduations sur la règle\n * @param {objet} options Défaut : { tempo: this.tempo }\n */\n  regleMasquerGraduations ({ tempo = this.tempo } = {}) {\n    this.liste_script.push(`<action mouvement=\"vide\" objet=\"regle\" tempo=\"${tempo}\"/>`)\n  }\n\n  /**\n * Montrer les graduations sur la règle si elles avaient été masquées\n * @param {objet} options Défaut : { tempo: this.tempo }\n */\n  regleMontrerGraduations ({ tempo = this.tempo } = {}) {\n    this.liste_script.push(`<action mouvement=\"graduations\" objet=\"regle\" tempo=\"${tempo}\"/>`)\n  }\n\n  /**\n   * Modifie la taille de la règle\n   * @param {int} longueur\n   * @param {objet} options Défaut : { tempo: this.tempo }\n   */\n  regleModifierLongueur (longueur = 20, { tempo = this.tempo } = {}) {\n    this.regle.longueur = longueur\n    this.liste_script.push(`<action mouvement=\"modifier_longueur\" objet=\"regle\" longueur=\"${longueur}\" tempo=\"${tempo}\"/>`)\n  }\n\n  /**\n * Trace une demi-droite d'origine O passant par A (ou en direction de A si les points sont trop éloignés)\n * @param {point} O Origine\n * @param {point} A Direction\n * @param {objet} options Défaut {longueur: this.regle.longueur, tempo : this.tempo, vitesse: this.vitesse, sens: this.vitesse / 2}\n */\n  regleDemiDroiteOriginePoint (O, A, options = {}) {\n    if (!options.longueur) {\n      options.longueur = this.regle.longueur\n    }\n    const M = pointSurSegment(O, A, options.longueur)\n    this.regleSegment(O, M, options)\n  }\n\n  /**\n   * Trace une droite passanrt par les points A et B\n   * @param {point} A\n   * @param {point} B\n   * @param {objet} options Défaut {longueur: this.regle.longueur, tempo : this.tempo, vitesse: this.vitesse, sens: this.vitesse / 2}\n   */\n  regleDroite (A, B, options = {}) {\n    if (!options.longueur) {\n      options.longueur = this.regle.longueur\n    }\n    const M = homothetie(B, A, calcul((-options.longueur * 0.5 + longueur(A, B) * 0.5) / longueur(A, B)))\n    const N = homothetie(A, B, calcul((-options.longueur * 0.5 + longueur(A, B) * 0.5) / longueur(A, B)))\n    if (this.x(A) <= this.x(B)) {\n      this.regleMontrer(M)\n      this.regleRotation(N, options)\n      this.regleSegment(M, N, options)\n    } else {\n      this.regleMontrer(N)\n      this.regleRotation(M, options)\n      this.regleSegment(N, M, options)\n    }\n  }\n\n  /**\n * Avec la règle, on prolonge le segment de l cm du coté de la 2e extrémité si l est positif sinon du côté de la première extrémité\n * @param {point} A\n * @param {point} B\n * @param {objet} options Défaut {longueur: 3, tempo: this.tempo, vitesse: this.vitesse, sens: this.vitesse / 2}\n */\n  regleProlongerSegment (A, B, options = {}) {\n    if (!options.longueur) {\n      options.longueur = this.regle.longueur - 3\n    }\n    if (options.longueur > 0) {\n      const B1 = pointSurSegment(B, A, 3)\n      const B2 = pointSurSegment(B, A, -options.longueur)\n      this.regleSegment(B1, B2, options)\n    } else {\n      const A1 = pointSurSegment(A, B, 3)\n      const A2 = pointSurSegment(A, B, options.longueur)\n      this.regleSegment(A1, A2, options)\n    }\n  }\n\n  /**\n **************************\n ********* TRAITS *********\n **************************\n */\n\n  /**\n * Le crayon trace un trait de sa position courante jusqu'au point B\n * @param {point} B\n * @param {objet} options Défaut { tempo: this.tempo, vitesse: this.vitesse, epaisseur: this.epaisseur, couleur: this.couleur, pointilles: this.pointilles, vecteur: false }\n * @return {id} id utilisée pour le tracé\n */\n  tracer (B, { tempo = this.tempo, vitesse = this.vitesse, epaisseur = this.epaisseur, couleur = this.couleur, pointilles = this.pointilles, vecteur = false } = {}) {\n    const pointillesTexte = pointilles ? 'pointille=\"tiret\"' : ''\n    const vecteurTexte = vecteur ? 'style=\"vecteur\"' : ''\n    this.idIEP += 1\n    const codeXML = `<action abscisse=\"${this.x(B)}\" ordonnee=\"${this.y(B)}\" epaisseur=\"${epaisseur}\" couleur=\"${couleur}\" mouvement=\"tracer\" objet=\"crayon\" tempo=\"${tempo}\" vitesse=\"${vitesse}\"  ${pointillesTexte} ${vecteurTexte} id=\"${this.idIEP}\" />`\n    this.crayon.position = B\n    this.liste_script.push(codeXML)\n    return this.idIEP\n  }\n\n  /**\n   * Trace au crayon le segment [AB]\n   * @param {point} A Première extrémité\n   * @param {point} B Deuxième extrémité\n   * @param {*} options\n   * @return {id} id utilisée pour le tracé\n   */\n  trait (A, B, options = {}) {\n    this.crayonDeplacer(A, options)\n    return this.tracer(B, options)\n  }\n\n  /**\n   * Trace au crayon le segment [AB] sans tempo et avec une vitesse multipliée par 1 000\n   * @param {point} A Première extrémité\n   * @param {point} B Deuxième extrémité\n   * @param {*} options\n   * @return {id} id utilisée pour le tracé\n   */\n  traitRapide (A, B, options = {}) {\n    options.tempo = 0\n    options.vitesse = 10000\n    this.crayonDeplacer(A, options)\n    return this.tracer(B, options)\n  }\n\n  /**\n * Masque le trait d'id fourni\n * @param {int} id\n * @param {objet} options Défaut : { tempo: 0, vitesse: 200 }\n */\n  traitMasquer (id, { tempo = 0, vitesse = 200 } = {}) {\n    this.liste_script.push(`<action mouvement=\"masquer\" objet=\"trait\" id=\"${id}\" vitesse=\"${vitesse}\" />`)\n  }\n\n  /**\n   *\n   * @param {segment/point} Segment à tracer ou première extrémité\n   * @param {objet/point} options ou deuxième extrémité\n   * @param {objet} options si les deux premiers arguments étaient des points\n   * @returns {id} identifiant utilisé pour le trait\n   */\n  regleSegment (arg1, arg2, arg3) {\n    let A, B, options, id\n    if (arg1.typeObjet === 'segment') {\n      A = arg1.extremite1\n      B = arg1.extremite2\n      options = arg2\n    } else {\n      A = arg1\n      B = arg2\n      options = arg3\n    }\n    if (A.x <= B.x) { // Toujours avoir la règle de gauche à droite\n      this.regleMontrer(A, options)\n      this.regleRotation(B, options)\n    } else {\n      this.regleMontrer(B, options)\n      this.regleRotation(A, options)\n    }\n    if (longueur(this.crayon.position, A) < longueur(this.crayon.position, B)) { // Le crayon ira au point le plus proche\n      this.crayonMontrer(A, options)\n      id = this.tracer(B, options)\n    } else {\n      this.crayonMontrer(B, options)\n      id = this.tracer(A, options)\n    }\n    return id\n  }\n\n  /**\n   * Trace un polygone avec les options par défaut que l'on ne peut pas changer ici\n   * @param  {...points} sommets du polygonne séparés par des virgules\n   */\n  polygoneTracer (...sommets) {\n    for (let i = 0; i < sommets.length - 1; i++) {\n      this.regleSegment(sommets[i], sommets[i + 1])\n    }\n    this.regleSegment(sommets[sommets.length - 1], sommets[0])\n  }\n\n  /**\n   * Trace un polygone avec traitRapide()\n   * @param  {...points} sommets du polygonne séparés par des virgules\n   */\n  polygoneRapide (...sommets) {\n    for (let i = 0; i < sommets.length - 1; i++) {\n      this.traitRapide(sommets[i], sommets[i + 1])\n    }\n    this.traitRapide(sommets[sommets.length - 1], sommets[0])\n  }\n\n  /**\n **************************\n ********* TEXTE **********\n **************************\n */\n\n  /**\n   * Ecris un texte collé au point. On peut choisir un fond, un cadre, l'opacité du fond, la police...\n   * @param {string} texte\n   * @param {point} A\n   * @param {objet} options Défaut : { tempo: this.tempo, police: false, couleur: this.couleurTexte, couleurFond, opaciteFond, couleurCadre, epaisseurCadre, marge, margeGauche, margeDroite, margeHaut, margeBas }\n   * @return {id}\n   */\n  textePoint (texte, A, { tempo = this.tempo, police = false, couleur = this.couleurTexte, taille, couleurFond, opaciteFond, couleurCadre, epaisseurCadre, marge, margeGauche, margeDroite, margeHaut, margeBas } = {}) {\n    this.idIEP++\n    const policeTexte = police ? `police=\"${police}\"` : ''\n    let options = ''\n    if (typeof couleurFond !== 'undefined') {\n      options += ` couleur_fond=\"${couleurFond}\"`\n    }\n    if (typeof opaciteFond !== 'undefined') {\n      options += ` opacite_fond=\"${opaciteFond}\"`\n    }\n    if (typeof couleurCadre !== 'undefined') {\n      options += ` couleur_cadre=\"${couleurCadre}\"`\n    }\n    if (typeof epaisseurCadre !== 'undefined') {\n      options += ` epaisseur_cadre=\"${epaisseurCadre}\"`\n    }\n    if (typeof marge !== 'undefined') {\n      options += ` marge=\"${marge}\"`\n    }\n    if (typeof margeGauche !== 'undefined') {\n      options += ` marge_gauche=\"${margeGauche}\"`\n    }\n    if (typeof margeDroite !== 'undefined') {\n      options += ` marge_droite=\"${margeDroite}\"`\n    }\n    if (typeof margeBas !== 'undefined') {\n      options += ` marge_bas=\"${margeBas}\"`\n    }\n    if (typeof margeHaut !== 'undefined') {\n      options += ` marge_haut=\"${margeHaut}\"`\n    }\n    if (typeof taille !== 'undefined') {\n      options += ` taille=\"${taille}\"`\n    }\n    let codeXML = `<action abscisse=\"${this.x(A)}\" ordonnee=\"${this.y(A)}\" id=\"${this.idIEP}\" mouvement=\"creer\" objet=\"texte\" />`\n    codeXML += `\\n<action ${policeTexte} couleur=\"${couleur}\" texte=\"${texte}\" id=\"${this.idIEP}\" mouvement=\"ecrire\" objet=\"texte\" ${options} tempo=\"${tempo}\" />`\n    this.liste_script.push(codeXML)\n    return this.idIEP\n  }\n\n  /**\n   * Ecris un texte collé au point de coordonnées (x,y). On peut choisir un fond, un cadre, l'opacité du fond, la police...\n   * @param {string} texte\n   * @param {int} x Abscisse du coin en haut à gauche\n   * @param {int} y Ordonnée du coin en haut à gauche\n   * @param {objet} options Défaut : { tempo: this.tempo, police: false, couleur: this.couleurTexte, couleurFond, opaciteFond, couleurCadre, epaisseurCadre, marge, margeGauche, margeDroite, margeHaut, margeBas }\n   */\n  textePosition (texte, x, y, options) {\n    const A = point(x, y)\n    return this.textePoint(texte, A, options)\n  }\n\n  longueurSegment (A, B, dy, options) {\n    const l = calcul(longueur(A, B, 1))\n    const v = vecteur(A, B)\n    const w = vecteur(-v.y * dy / norme(v), v.x * dy / norme(v))\n    const ancrage = translation(translation(pointSurSegment(A, B, l / 2 - 0.7), w), vecteur(0, 1))\n    return this.textePoint(`${l} cm`, ancrage, options)\n  }\n\n  mesureAngle (A, O, B) {\n    const a = angleOriente(A, O, B)\n    const C = translation(homothetie(rotation(A, O, a / 2), O, 1.3 / longueur(O, A)), vecteur(-0.2, 0.5))\n    return this.textePoint(Math.abs(a) + '°', C)\n  }\n\n  /**\n * Masque le trait d'id fourni\n * @param {array} id\n * @param {objet} options Défaut : { tempo: 0 }\n */\n  texteMasquer (...args) {\n    const enleveDernier = arr => arr.slice(0, -1)\n    if (Number.isNaN(args[args.length - 1])) {\n      if (args[args.length - 1].tempo !== undefined) {\n        const tempo = args[args.length - 1].tempo\n        for (const texte of enleveDernier(args)) {\n          this.liste_script.push(`<action mouvement=\"masquer\" objet=\"texte\" id=\"${texte}\" tempo=\"${tempo}\" />`)\n        }\n      } else {\n        for (const texte of enleveDernier(args)) {\n          this.liste_script.push(`<action mouvement=\"masquer\" objet=\"texte\" id=\"${texte}\" tempo=\"0\" />`)\n        }\n      }\n    } else {\n      for (const texte of args) {\n        this.liste_script.push(`<action mouvement=\"masquer\" objet=\"texte\" id=\"${texte}\" tempo=\"0\" />`)\n      }\n    }\n  }\n\n  /**\n   * Change la couleur d'un texte déjà créé dont on donne l'id retourné par this.textePoint ou this.textePosition\n   * Nécessité de redonner le texte car on réécrit le texte dans une autre couleur.\n   * @param {string} texte\n   * @param {number} id\n   * @param {string} couleur\n   */\n  texteChangeCouleur (texte, id, couleur) {\n    this.liste_script.push(`\\n<action couleur=\"${couleur}\" texte=\"${texte}\" id=\"${id}\" mouvement=\"ecrire\" objet=\"texte\" />`)\n  }\n\n  /**\n   * Met l'animation en pause forçant l'utilisateur à appuyer sur lecture pour voir la suite\n   */\n  pause () {\n    this.liste_script.push('<action mouvement=\"pause\" />')\n  }\n\n  /**\n **************************\n ******* CODAGES **********\n **************************\n */\n\n  /**\n   *\n   * @param {segment/point} Segment à coder ou première extrémité\n   * @param {objet/point} options ou deuxième extrémité\n   * @param {objet} options si les deux premiers arguments étaient des points. Défaut : { tempo: this.tempo, couleur: this.couleurCodage, codage: '//', }\n   * @return {id}\n  */\n  segmentCodage (arg1, arg2 = {}, arg3 = {}) {\n    let s\n    let options = {}\n    if (arg1.typeObjet === 'segment') {\n      s = arg1\n      options = arg2\n    } else {\n      s = segment(arg1, arg2)\n      options = { ...arg3 }\n    }\n    if (options.tempo === undefined) {\n      options.tempo = this.tempo\n    }\n    if (options.couleur === undefined) {\n      options.couleur = this.couleurCodage\n    }\n    if (options.codage === undefined) {\n      options.codage = '\\\\'\n    }\n    this.idIEP++\n    const id = this.idIEP\n    const M = milieu(s.extremite1, s.extremite2)\n    const codeXML = `<action abscisse=\"${this.x(M)}\" ordonnee=\"${this.y(M)}\" forme=\"${options.codage}\"  couleur=\"${options.couleur}\" id=\"${id}\" tempo=\"${options.tempo}\" mouvement=\"creer\" objet=\"longueur\" />`\n    this.liste_script.push(codeXML)\n    return id\n  }\n\n  /**\n   *\n   * @param {int} id Identifiant du codage\n   * @param {objet} options Défaut : { tempo: this.tempo }\n   */\n  segmentCodageMasquer (id, { tempo = this.tempo } = {}) {\n    this.liste_script.push(`<action id=\"${id}\" mouvement=\"masquer\" objet=\"longueur\" tempo=\"${tempo}\" />`)\n  }\n\n  /**\n   *\n   * @param {int} id Identifiant du codage\n   * @param {objet} options Défaut : { tempo: this.tempo }\n   */\n  segmentCodageMontrer (id, { tempo = this.tempo } = {}) {\n    this.liste_script.push(`<action id=\"${id}\" mouvement=\"montrer\" objet=\"longueur\" tempo=\"${tempo}\" />`)\n  }\n\n  /**\n   * Trace le petit carré au crayon\n   * @param {point} A Point sur un côté de l'angle\n   * @param {point} B Sommet de l'angle\n   * @param {point} C Point sur un côté de l'angle\n   * @param {objet} options Défaut : {longueur : 0.3, couleur: this.couleurCodage}\n   * @return {array} [idTrait1, idTrait2]\n   */\n  codageAngleDroit (A, B, C, options = {}) {\n    this.crayonMontrer()\n    if (options.longueur === undefined) {\n      options.longueur = 0.3\n    }\n    if (options.couleur === undefined) {\n      options.couleur = this.couleurCodage\n    }\n    const C1 = pointSurSegment(B, C, options.longueur)\n    const A1 = pointSurSegment(B, A, options.longueur)\n    const M = translation2Points(A1, B, C1)\n    const options1 = { ...options } // On recopie options pour ouvoir en changer le tempo du premier tracé\n    options1.tempo = 0\n    const trait1 = this.trait(C1, M, options1)\n    const trait2 = this.trait(M, A1, options)\n    return [trait1, trait2]\n  }\n\n  /**\n   * Masque le codage d'un angle droit\n   * @param {int} id Identifiant du codage d'un angle droit\n   * @param {objet} options Défaut { tempo: 0 }\n   */\n  codageAngleDroitMasquer (id, { tempo = 0 } = {}) {\n    this.traitMasquer(id[0], { tempo: tempo })\n    this.traitMasquer(id[1], { tempo: tempo })\n  }\n\n  /**\n   * Code un angle. L'option codage peut être \"simple\", \"/\", \"//\", \"///\", \"O\"\n   * \"double\", \"double/\", \"double//\", \"double///\", \"doubleO\"\n   * \"triple\", \"triple/\", \"triple//\", \"triple///\", \"tripleO\"\n   * \"plein\", \"plein/\", \"plein//\", \"plein///\", \"pleinO\"\n   * @param {point} A Point sur un côté de l'angle\n   * @param {point} B Sommet de l'angle\n   * @param {point} C Point sur un côté de l'angle\n   * @param {objet} options Défaut : { rayon : 1, couleur: this.couleurCodage, codage: 'plein'}\n   * @return {id} L'identifiant correspond à l'identifiant des 3 points de l'angle séparés par _\n   */\n  angleCodage (B, A, C, { couleur = this.couleurCodage, codage = 'plein', rayon = 1, tempo = this.tempo } = {}) {\n    const id = B.id + '_' + A.id + '_' + C.id\n    const d1 = droite(A, B)\n    const d2 = droite(A, C)\n    d1.isVisible = false\n    d2.isVisible = false\n    const angle1 = -d1.angleAvecHorizontale\n    const angle2 = -d2.angleAvecHorizontale\n    const codeXML = `<action abscisse=\"${this.x(A)}\" ordonnee=\"${this.y(A)}\" rayon=\"${rayon * 30}\" angle1=\"${angle1}\" angle2=\"${angle2}\" forme=\"${codage}\"  couleur=\"${couleur}\" id=\"${id}\" tempo=\"${tempo}\" mouvement=\"creer\" objet=\"angle\" />`\n    this.liste_script.push(codeXML)\n    return id\n  }\n\n  /**\n   * Masque un codage préalablement créé\n   * @param {point} A\n   * @param {point} B\n   * @param {point} C\n   * @param {objet} options Défaut { tempo: 0 }\n   */\n  angleCodageMasquer (B, A, C, { tempo = 0 } = {}) {\n    const id = B.id + '_' + A.id + '_' + C.id\n    this.liste_script.push(`<action id=\"${id}\" mouvement=\"masquer\" objet=\"angle\" tempo=\"${tempo}\" />`)\n  }\n\n  /**\n   * Montre un codage préalablement créé\n   * @param {point} A\n   * @param {point} B\n   * @param {point} C\n   * @param {objet} options Défaut { tempo: 0 }\n   */\n  angleCodageMontrer (B, A, C, { tempo = 0 } = {}) {\n    const id = B.id + '_' + A.id + '_' + C.id\n    this.liste_script.push(`<action id=\"${id}\" mouvement=\"montrer\" objet=\"angle\" tempo=\"${tempo}\" />`)\n  }\n\n  /**\n   * Affiche une image (donnée par son URL) au point A\n   * @param {string} url\n   * @returns {id}\n   */\n  image (url, A = point(0, 0)) {\n    this.idIEP++\n    let codeXML\n    codeXML = `<action id=\"${this.idIEP}\" url=\"${url}\" mouvement=\"chargement\" objet=\"image\" />`\n    codeXML += `\\n<action abscisse=\"${this.x(A)}\" ordonnee=\"${this.y(A)}\" id=\"${this.idIEP}\" mouvement=\"translation\" objet=\"image\" vitesse=\"100000\" />`\n    this.liste_script.push(codeXML)\n    return this.idIEP\n  }\n}\n\nAlea2iep.prototype.symetrieAxialePoint = symetrieAxialePoint\nAlea2iep.prototype.parallelogramme3sommetsConsecutifs = parallelogramme3sommetsConsecutifs\nAlea2iep.prototype.parallelogramme2sommetsConsecutifsCentre = parallelogramme2sommetsConsecutifsCentre\nAlea2iep.prototype.parallelogrammeAngleCentre = parallelogrammeAngleCentre\nAlea2iep.prototype.partageSegment = partageSegment\nAlea2iep.prototype.paralleleRegleEquerre2points3epoint = paralleleRegleEquerre2points3epoint\nAlea2iep.prototype.paralleleRegleEquerre2points3epoint = paralleleRegleEquerre2points3epoint\nAlea2iep.prototype.perpendiculaireRegleEquerre2points3epoint = perpendiculaireRegleEquerre2points3epoint\nAlea2iep.prototype.perpendiculaireRegleEquerreDroitePoint = perpendiculaireRegleEquerreDroitePoint\nAlea2iep.prototype.perpendiculaireRegleEquerrePointSurLaDroite = perpendiculaireRegleEquerrePointSurLaDroite\nAlea2iep.prototype.perpendiculaireCompasPointSurLaDroite = perpendiculaireCompasPointSurLaDroite\nAlea2iep.prototype.perpendiculaireCompasPoint = perpendiculaireCompasPoint\nAlea2iep.prototype.paralleleRegleEquerreDroitePointAvecDescription = paralleleRegleEquerreDroitePointAvecDescription\nAlea2iep.prototype.paralleleAuCompasAvecDescription = paralleleAuCompasAvecDescription\nAlea2iep.prototype.paralleleAuCompas = paralleleAuCompas\nAlea2iep.prototype.mediatriceAuCompas = mediatriceAuCompas\nAlea2iep.prototype.mediatriceRegleEquerre = mediatriceRegleEquerre\nAlea2iep.prototype.hauteur = hauteur\nAlea2iep.prototype.mediane = mediane\nAlea2iep.prototype.bissectriceAuCompas = bissectriceAuCompas\nAlea2iep.prototype.cercleCirconscrit = cercleCirconscrit\nAlea2iep.prototype.triangle3longueurs = triangle3longueurs\nAlea2iep.prototype.triangleRectangleCoteHypotenuse = triangleRectangleCoteHypotenuse\nAlea2iep.prototype.triangleRectangle2Cotes = triangleRectangle2Cotes\nAlea2iep.prototype.triangle1longueur2angles = triangle1longueur2angles\nAlea2iep.prototype.triangle2longueurs1angle = triangle2longueurs1angle\nAlea2iep.prototype.triangleEquilateral2Sommets = triangleEquilateral2Sommets\nAlea2iep.prototype.triangleEquilateral = triangleEquilateral\nAlea2iep.prototype.carre1point1longueur = carre1point1longueur\nAlea2iep.prototype.rotationPoint = rotationPoint\nAlea2iep.prototype.translationPoint = translationPoint\nAlea2iep.prototype.demiTourPoint = demiTourPoint\nAlea2iep.prototype.homothetiePoint = homothetiePoint\nAlea2iep.prototype.rotationPolygone = rotationPolygone\nAlea2iep.prototype.symetrieAxialePolygone = symetrieAxialePolygone\nAlea2iep.prototype.translationPolygone = translationPolygone\nAlea2iep.prototype.demiTourPolygone = demiTourPolygone\nAlea2iep.prototype.homothetiePolygone = homothetiePolygone\n","import { angleOriente, centreCercleCirconscrit, droite, longueur, milieu, pointSurSegment, projectionOrtho, rotation } from '../2d.js'\nimport { calcul } from '../outils'\n\n/**\n * Trace la médiatrice de [AB] au compas. Le paramétrage des longueurs correspond à la distance entre le milieu du segment et le point d'intersection des arcs de cercles\n *\n * @param {point} A\n * @param {point} B\n * @param {objet} options Défaut : {longueur1: 3, longueur2: 3, codage: 'X', couleurCodage : this.couleurCodage, couleurCompas: this.couleurCompas, coderFigure: true}\n * @return {array} [arc1, arc2, arc3, arc4, codage1?, codage2?, codageCarre?]\n  */\nexport const mediatriceAuCompas = function (A, B, options = {}) {\n  if (options.longueur1 === undefined) {\n    options.longueur1 = 3\n  }\n  if (options.longueur2 === undefined) {\n    options.longueur2 = -3\n  }\n  if (options.codage === undefined) {\n    options.codage = 'X'\n  }\n  if (options.couleurCodage === undefined) {\n    options.couleurCodage = this.couleurCodage\n  }\n  if (options.couleurCompas === undefined) {\n    options.couleurCompas = this.couleurCompas\n  }\n  if (options.coderFigure === undefined) {\n    options.coderFigure = true\n  }\n  const O = milieu(A, B)\n  const O2 = rotation(A, O, -90)\n  const M = pointSurSegment(O, O2, options.longueur1)\n  const N = pointSurSegment(O, O2, options.longueur2)\n  this.compasMontrer()\n  this.compasDeplacer(A, options)\n  let arc1, arc2, arc3, arc4\n  if (options.longueur1 === -1 * options.longueur2) { // Si la distance est la même des deux côtés, on peut faire les arcs de part et d'autre\n    this.compasEcarter(longueur(A, M), { vitesse: options.vitesse, sens: options.vitesse })\n    arc1 = this.compasTracerArcCentrePoint(A, M, { delta: options.delta, couleur: options.couleurCompas, sens: options.sens, vitesse: options.vitesse, tempo: options.tempo })\n    arc2 = this.compasTracerArcCentrePoint(A, N, { delta: options.delta, couleur: options.couleurCompas, sens: options.sens, vitesse: options.vitesse, tempo: options.tempo })\n    arc4 = this.compasTracerArcCentrePoint(B, N, { delta: options.delta, couleur: options.couleurCompas, sens: options.sens, vitesse: options.vitesse, tempo: options.tempo })\n    arc3 = this.compasTracerArcCentrePoint(B, M, { delta: options.delta, couleur: options.couleurCompas, sens: options.sens, vitesse: options.vitesse, tempo: options.tempo })\n  } else {\n    this.compasEcarter(longueur(A, M), options)\n    arc1 = this.compasTracerArcCentrePoint(A, M, { delta: options.delta, couleur: options.couleurCompas, sens: options.sens, vitesse: options.vitesse, tempo: options.tempo })\n    arc2 = this.compasTracerArcCentrePoint(B, M, { delta: options.delta, couleur: options.couleurCompas, sens: options.sens, vitesse: options.vitesse, tempo: options.tempo })\n    arc3 = this.compasTracerArcCentrePoint(B, N, { delta: options.delta, couleur: options.couleurCompas, sens: options.sens, vitesse: options.vitesse, tempo: options.tempo })\n    arc4 = this.compasTracerArcCentrePoint(A, N, { delta: options.delta, couleur: options.couleurCompas, sens: options.sens, vitesse: options.vitesse, tempo: options.tempo })\n  }\n  this.compasMasquer()\n  if (M.x <= N.x) {\n    this.regleDroite(M, N, options)\n  } else {\n    this.regleDroite(N, M, options)\n  }\n  this.regleMasquer()\n  if (options.coderFigure) {\n    const codage1 = this.segmentCodage(A, O, { codage: options.codage, couleur: options.couleurCodage, tempo: options.tempo })\n    const codage2 = this.segmentCodage(O, B, { codage: options.codage, couleur: options.couleurCodage, tempo: options.tempo })\n    const codageCarre = this.codageAngleDroit(A, O, O2, { couleur: options.couleurCodage, tempo: options.tempo, vitesse: options.vitesse })\n    return [arc1, arc2, arc3, arc4, codage1, codage2, codageCarre]\n  } else {\n    return [arc1, arc2, arc3, arc4]\n  }\n}\n/**\n     * Trace la médiatrice du segment [AB] avec la méthode Règle + équerre.\n     * @param {point} A\n     * @param {point} B\n     * @param {booléen} codage\n     */\nexport const mediatriceRegleEquerre = function (A, B, codage = 'X') {\n  const O = milieu(A, B)\n  this.regleMontrer()\n  this.regleDeplacer(A)\n  this.regleRotation(B)\n  this.crayonMontrer()\n  const O2 = rotation(A, O, -90)\n  const O3 = rotation(A, O, 90)\n  const M = pointSurSegment(O, O2, 0.2)\n  const N = pointSurSegment(O, O3, 0.2)\n  if (this.y(M) > this.y(N)) {\n    this.trait(O, M)\n  } else {\n    this.trait(O, N)\n  }\n  this.regleMasquer()\n  if (this.x(A) < this.x(B)) {\n    this.equerreDeplacer(A)\n    this.equerreMontrer()\n    this.equerreRotation(B)\n  } else {\n    this.equerreDeplacer(B)\n    this.equerreMontrer()\n    this.equerreRotation(A)\n  }\n  this.equerreDeplacer(O)\n  this.crayonDeplacer(O)\n  this.trait(O, O2)\n  this.equerreMasquer()\n  this.regleDroite(O2, O3)\n  this.regleMasquer()\n  this.segmentCodage(A, O, codage)\n  this.segmentCodage(O, B, codage)\n  this.codageAngleDroit(A, O, O2)\n}\n/**\n     * Trace la hauteur issue de C dans un triangle ABC. Prolonge si besoin le segment [AB] pour avoir le pied de la hauteur et le codage de l'angle droit.\n     * @param {point} A 1er point de la base\n     * @param {point} B 2e point de la base\n     * @param {point} C Sommet dont est issue la hauteur\n     * @param {booléen} codage angle droit ajouté si true\n     */\nexport const hauteur = function (A, B, C, codage = true) {\n  const d = droite(A, B)\n  d.isVisible = false\n  const H = projectionOrtho(C, d)\n  let G, D\n  if (this.x(A) < this.x(B)) {\n    G = A\n    D = B\n  } else {\n    G = B\n    D = A\n  }\n  if (this.x(H) < this.x(G)) { // si le pied de la hauteur est trop à gauche\n    this.regleProlongerSegment(D, G, longueur(G, H) + 2, this.couleur, this.tempo, this.vitesse, this.epaisseurTraitsDeConstruction, true)\n  }\n  if (this.x(H) > this.x(D)) { // si le pied de la hauteur est trop à droite\n    this.regleProlongerSegment(G, D, longueur(D, H) + 2, this.couleur, this.tempo, this.vitesse, this.epaisseurTraitsDeConstruction, true)\n  }\n  if (this.x(H) < this.x(G) || this.x(H) > this.x(D)) {\n    this.regleMasquer()\n  }\n  if (this.x(A) < this.x(B)) {\n    this.equerreDeplacer(A)\n    this.equerreMontrer()\n    this.equerreRotation(B)\n  } else {\n    this.equerreDeplacer(B)\n    this.equerreMontrer()\n    this.equerreRotation(A)\n  }\n  this.equerreDeplacer(H)\n  this.crayonMontrer()\n  this.crayonDeplacer(H)\n  this.trait(H, C)\n  this.equerreMasquer()\n  if (codage) {\n    this.codageAngleDroit(A, H, C)\n  }\n  this.crayonMasquer()\n}\n/**\n   * Trace la médiane issue de C passant par le milieu de [AB]\n   * @param {point} A\n   * @param {point} B\n   * @param {point} C\n   * @param {objet} options\n   */\nexport const mediane = function (A, B, C, options = {}) {\n  if (options.codage === undefined) {\n    options.codage = 'X'\n  }\n  if (options.couleurTraitsDeConstruction === undefined) {\n    options.couleurTraitsDeConstruction = this.couleurTraitsDeConstruction\n  }\n  if (options.epaisseurTraitsDeConstruction === undefined) {\n    options.epaisseurTraitsDeConstruction = this.epaisseurTraitsDeConstruction\n  }\n  const O = milieu(A, B)\n  this.regleMontrer(A, options)\n  this.regleRotation(B, options)\n  this.crayonMontrer()\n  const O2 = rotation(A, O, -90)\n  const O3 = rotation(A, O, 90)\n  const M = pointSurSegment(O, O2, 0.2)\n  const N = pointSurSegment(O, O3, 0.2)\n  if (M.y > N.y) {\n    this.trait(O, M, { vitesse: options.vitesse, tempo: options.tempo, couleur: options.couleurTraitsDeConstruction, epaisseur: options.epaisseurTraitsDeConstruction })\n  } else {\n    this.trait(O, N, { vitesse: options.vitesse, tempo: options.tempo, couleur: options.couleurTraitsDeConstruction, epaisseur: options.epaisseurTraitsDeConstruction })\n  }\n  this.regleSegment(O, C, options)\n  if (options.codage) {\n    this.segmentCodage(A, O, options)\n    this.segmentCodage(O, B, options)\n  }\n}\n/**\n   * Trace la bissectrice de l'angle ABC au compas.\n   * @param {point} A\n   * @param {point} B\n   * @param {point} C\n   * @param {objet} param3\n   * @returns {objet} {arc1, arc2, arc3, arc4}\n   */\nexport const bissectriceAuCompas = function (A, B, C, { codage = '/', l = 2, couleur = this.couleur, tempo = this.tempo, vitesse = this.vitesse, sens = calcul(this.vitesse / 2, 0), epaisseur = this.epaisseur, pointilles = this.pointilles, couleurCodage = this.couleurCodage, masquerTraitsDeConstructions = true } = {}) {\n  const A1 = pointSurSegment(B, A, l)\n  const C1 = pointSurSegment(B, C, l)\n  // const demiangle = calcul(angleOriente(A, B, C) / 2);\n  const angle = angleOriente(A, B, C)\n  const M = rotation(B, A1, -(180 - angle))\n  const options = { couleur: couleur, tempo: tempo, vitesse: vitesse, sens: sens, pointilles: false }\n  const arc1 = this.compasTracerArcCentrePoint(B, A1, options)\n  const arc2 = this.compasTracerArcCentrePoint(B, C1, options)\n  const arc3 = this.compasTracerArcCentrePoint(A1, M, options)\n  const arc4 = this.compasTracerArcCentrePoint(C1, M, options)\n  this.compasMasquer()\n  this.regleDemiDroiteOriginePoint(B, M, { longueur: longueur(B, A), couleur: couleur, tempo: tempo, vitesse: vitesse, sens: sens, epaisseur: epaisseur, pointilles: pointilles })\n  this.regleMasquer()\n  this.crayonMasquer()\n  if (codage) {\n    this.angleCodage(A, B, M, { couleur: couleurCodage, codage: codage, tempo: tempo })\n    this.angleCodage(M, B, C, { couleur: couleurCodage, codage: codage, tempo: tempo })\n  }\n  if (masquerTraitsDeConstructions) {\n    this.traitMasquer(arc1)\n    this.traitMasquer(arc2)\n    this.traitMasquer(arc3)\n    this.traitMasquer(arc4)\n  }\n  return { arc1: arc1, arc2: arc2, arc3: arc3, arc4: arc4 }\n}\n/**\n   * Construit les 3 médiatrices des côtés du triangle ABC puis le cercle circonscrit au triangle\n   * @param {point} A\n   * @param {point} B\n   * @param {point} C\n   * @param {objet} options\n   */\nexport const cercleCirconscrit = function (A, B, C, options = {}) {\n  if (options.couleur === undefined) {\n    options.couleur = this.couleur\n  }\n  if (options.couleurMediatrice === undefined) {\n    options.couleurMediatrice = options.couleur\n  }\n  if (options.couleurCercle === undefined) {\n    options.couleurCercle = options.couleur\n  }\n  options.codage = 'X'\n  options.couleur = options.couleurMediatrice\n  const m1 = this.mediatriceAuCompas(A, B, options)\n  this.traitMasquer(m1[0]) // On cache les arcs de cercle une fois la médiatrice tracée\n  this.traitMasquer(m1[1])\n  this.traitMasquer(m1[2])\n  this.traitMasquer(m1[3])\n  options.codage = '||'\n  const m2 = this.mediatriceAuCompas(B, C, options)\n  this.traitMasquer(m2[0])\n  this.traitMasquer(m2[1])\n  this.traitMasquer(m2[2])\n  this.traitMasquer(m2[3])\n  options.codage = '///'\n  const m3 = this.mediatriceAuCompas(A, C, options)\n  this.traitMasquer(m3[0])\n  this.traitMasquer(m3[1])\n  this.traitMasquer(m3[2])\n  this.traitMasquer(m3[3])\n  const O = centreCercleCirconscrit(A, B, C)\n  options.couleur = options.couleurCercle\n  this.compasCercleCentrePoint(O, A, options)\n}\n","import { droite, projectionOrtho, pointSurSegment, droiteParPointEtParallele, longueur, appartientDroite, homothetie, rotation, angleOriente, pointSurDroite, similitude, translation, point, vecteur, translation2Points, estSurDroite, cercle, pointIntersectionLC, droiteParPointEtPerpendiculaire } from '../2d'\nimport { calcul } from '../outils'\n\n/**\n   * Trace la parallèle à (AB) passant par C avec la règle et l'équerre. Peut prolonger le segment [AB] si le pied de la hauteur est trop éloigné des extrémités du segment\n   * @param {point} A\n   * @param {point} B\n   * @param {point} C\n   * @param {*} options\n   */\nexport const paralleleRegleEquerre2points3epoint = function (A, B, C, options) {\n  let G, D, H1\n  // G est le point le plus à gauche, D le plus à droite et H le projeté de C sur (AB)\n  // H1 est un point de (AB) à gauche de H, c'est là où seront la règle et l'équerre avant de glisser\n  if (A.x < B.x) {\n    G = A\n    D = B\n  } else {\n    G = B\n    D = A\n  }\n  const d = droite(A, B)\n  const H = projectionOrtho(C, d)\n  if (H.x < D.x) {\n    H1 = pointSurSegment(H, D, -2) // H1 sera plus à gauche que H\n  } else if (H.x > D.x) {\n    H1 = pointSurSegment(H, D, 2)\n  } else {\n    H1 = pointSurSegment(H, G, 2)\n  }\n  const C1 = projectionOrtho(H1, droiteParPointEtParallele(C, d))\n  // C1 est le point d'arrivée de l'équerre après avoir glissé\n  const M = pointSurSegment(C1, C, 6)\n  // Le tracé de la parallèle ne fera que 6 cm pour ne pas dépassr de l'équerre. M est la fin de ce tracé\n\n  if (H.x < G.x && longueur(H, G) > 3) { // Si le pied de la hauteur est trop à gauche\n    this.regleProlongerSegment(D, G)\n    this.regleMasquer()\n  }\n  if (H.x > D.x && longueur(H, D) > 3) { // Si le pied de la hauteur est trop à gauche\n    this.regleProlongerSegment(G, D)\n  }\n\n  this.equerreMontrer(H1)\n  if (M.x > C1.x) {\n    this.equerreRotation(d.angleAvecHorizontale - 90)\n  } else {\n    this.equerreRotation(d.angleAvecHorizontale + 90)\n  }\n  if (H1.y > C1.y) {\n    if (this.regle.visibilite) {\n      this.regleDeplacer(H1, { vitesse: this.vitesse, tempo: 0 })\n      this.regleRotation(C1, { sens: this.vitesse / 2, tempo: 0 })\n    } else {\n      this.regleDeplacer(H1, { vitesse: 1000, tempo: 0 })\n      this.regleRotation(C1, { sens: 1000, tempo: 0 })\n    }\n  } else {\n    const C12 = pointSurSegment(C1, H1, -2) // On monte un peu plus la règle pour que ça soit plus crédible\n    if (this.regle.visibilite) {\n      this.regleDeplacer(C12, { vitesse: this.vitesse, tempo: 0 })\n      this.regleRotation(H1, { sens: this.vitesse / 2, tempo: 0 })\n    } else {\n      this.regleDeplacer(C12, { vitesse: 1000, tempo: 0 })\n      this.regleRotation(H1, { sens: 1000, tempo: 0 })\n    }\n  }\n  this.regleMontrer()\n  this.equerreDeplacer(C1, options)\n  this.crayonMontrer()\n  this.crayonDeplacer(C1, options)\n  this.tracer(M, options)\n}\n/**\n   * Trace la perpendiculaire à (AB) passant par C avec la règle et l'équerre. Peut prolonger le segment [AB] si le pied de la hauteur est trop éloigné des extrémités du segment\n   * Description désactivée par défaut.\n   * @param {point} A\n   * @param {point} B\n   * @param {point} C\n   * @param {*} options\n   */\nexport const perpendiculaireRegleEquerre2points3epoint = function (A, B, C, description = false) {\n  const longueurRegle = this.regle.longueur\n  const zoomEquerre = this.equerre.zoom\n  const d = droite(A, B)\n  d.nom = `(${A.nom}${B.nom})`\n  let dist\n  if (A.nom === undefined) A.nom = 'A'\n  if (B.nom === undefined) B.nom = 'B'\n  if (appartientDroite(C, A, B)) {\n    const H = rotation(C, C, 0)\n    const dd = droiteParPointEtPerpendiculaire(C, d)\n    C = pointIntersectionLC(dd, cercle(H, 5.5), 1)\n    dist = 7.5\n  } else {\n    const H = projectionOrtho(C, d)\n    dist = longueur(H, C) + 2\n  }\n  this.equerreZoom(calcul(dist * 100 / 7.5))\n  this.regleModifierLongueur(Math.max(dist * 2, 15))\n  const P1 = homothetie(A, B, 1.2)\n  const P2 = homothetie(B, A, 1.2)\n  this.traitRapide(P1, P2)\n  this.pointsCreer(A, B, C)\n  this.perpendiculaireRegleEquerreDroitePoint(d, C, description)\n  this.equerreZoom(zoomEquerre)\n  this.regleModifierLongueur(longueurRegle)\n}\n\n/**\n * Construit à la règle et à l'équerre la perpendiculaire à une droite d passant par un point P n'appartenant pas à d.\n * description désactivable.\n * @param {droite} d\n * @param {point} P\n * @param {boolean} description\n */\nexport const perpendiculaireRegleEquerreDroitePoint = function (d, P, description) {\n  if (!estSurDroite(P, d)) {\n    const H = projectionOrtho(P, d)\n    const A = rotation(P, H, 90)\n    const B = rotation(A, H, 180)\n    const P3 = homothetie(P, H, 1.2)\n    const alpha = angleOriente(point(10000, H.y), H, B)\n    if (description) this.textePosition(`1. Placer un côté de l'angle droit de l'équerre sur la droite ${d.nom} et l'autre côté de l'angle droit passant par le point ${P.nom}.`, 0, 10, { couleur: 'lightblue' })\n    this.equerreRotation(alpha)\n    this.equerreMontrer(H)\n    if (description) this.textePosition(`2. Tracer le segment de droite passant par le point ${P.nom}`, 0, 9.3, { couleur: 'lightblue' })\n    this.crayonMontrer(P)\n    this.tracer(H)\n    this.equerreMasquer()\n    if (description) this.textePosition(`3. Prolonger la perpendiculaire à ${d.nom} à la règle.`, 0, 8.6, { couleur: 'lightblue' })\n    this.regleMontrer(P3)\n    this.regleRotation(alpha - 90)\n    this.crayonDeplacer(P3)\n    this.tracer(rotation(P3, H, 180))\n    if (description) this.textePosition('4. Coder l\\'angle droit.', 0, 7.9, { couleur: 'lightblue' })\n    this.regleMasquer()\n    this.codageAngleDroit(A, H, P)\n  } else {\n    const H = P\n    const C = cercle(P, 6)\n    const A = pointSurDroite(d, -10000)\n    const B = pointSurDroite(d, 10000)\n    let P3 = rotation(pointIntersectionLC(d, C, 1), P, 90)\n    if (P3.y < P.y) P3 = rotation(P3, P, 180)\n    const alpha = angleOriente(point(10000, H.y), H, B)\n    if (description) this.textePosition(`1. Placer un côté de l'angle droit de l'équerre sur la droite ${d.nom} avec l'angle droit au point ${P.nom}.`, 0, 10, { couleur: 'lightblue' })\n    this.equerreRotation(alpha)\n    this.equerreMontrer(H)\n    if (description) this.textePosition('2. Tracer le long de l\\'autre côté de l\\'angle droit de l\\'équerre', 0, 9.3, { couleur: 'lightblue' })\n    this.crayonMontrer(P3)\n    this.tracer(H)\n    this.equerreMasquer()\n    if (description) this.textePosition(`3. Prolonger la perpendiculaire à ${d.nom} à la règle.`, 0, 8.6, { couleur: 'lightblue' })\n    this.regleMontrer(P3)\n    this.regleRotation(alpha - 90)\n    this.crayonDeplacer(P3)\n    this.tracer(rotation(P3, H, 180))\n    if (description) this.textePosition('4. Coder l\\'angle droit.', 0, 7.9, { couleur: 'lightblue' })\n    this.regleMasquer()\n    this.codageAngleDroit(A, H, P3)\n  }\n}\n/**\n * Trace la perpendiculaire à une droite passant par un point de cette droite à l'équerre et à la règle.\n * @param {droite} d\n * @param {number} x  // pour choisir le point sur d : l'abscisse de A\n * @param {boolean} description\n */\nexport const perpendiculaireRegleEquerrePointSurLaDroite = function (d, x, description) {\n  const A = pointSurDroite(d, x, 'A')\n  const B = pointSurDroite(d, x + 5)\n  const P1 = rotation(B, A, 90)\n  const P2 = rotation(P1, A, 180)\n  if (d.nom === undefined) {\n    d.nom = '(d)'\n  }\n  this.traitRapide(pointSurDroite(d, -20), pointSurDroite(d, 20))\n  this.pointCreer(A)\n  if (description) this.textePosition(`1. Placer un côté de l'angle droit de l'équerre sur la droite ${d.nom}.`, 0, 10, { couleur: 'lightblue' })\n  this.equerreRotation(d.angleAvecHorizontale)\n  this.equerreMontrer(B)\n  if (description) {\n    this.textePosition(`2. Faire glisser l'équerre sur la droite jusqu'au point ${A.nom}`, 0, 9.3, { couleur: 'lightblue' })\n  }\n  this.equerreDeplacer(A)\n  if (description) this.textePosition('3. Tracer le long de l\\'autre côté de l\\'angle droit de l\\'équerre.', 0, 8.6, { couleur: 'lightblue' })\n  this.crayonMontrer(A)\n  this.tracer(P1)\n  this.equerreMasquer()\n  if (description) this.textePosition(`4. Prolonger la perpendiculaire à ${d.nom} à la règle.`, 0, 7.9, { couleur: 'lightblue' })\n  this.regleRotation(d.angleAvecHorizontale - 90)\n  this.regleMontrer(P1)\n  this.crayonDeplacer(P1)\n  this.tracer(P2)\n  if (description) this.textePosition('4. Coder l\\'angle droit.', 0, 7.2, { couleur: 'lightblue' })\n  this.regleMasquer()\n  this.codageAngleDroit(P1, A, B)\n}\n/**\n * Trace la perpendiculaire à une droite passant par un point de cette droite au compas.\n * @param {droite} d\n * @param {number} x // pour choisir le point sur d : l'abscisse de A\n * @param {boolean} description\n */\nexport const perpendiculaireCompasPointSurLaDroite = function (d, x, description) {\n  const A = pointSurDroite(d, x, 'A')\n  const B = pointSurDroite(d, x + 3, 'B')\n  const C = pointSurDroite(d, x - 3, 'C')\n  const P1 = similitude(B, A, 90, 1.2)\n  const P2 = similitude(B, A, -90, 1.2)\n  if (d.nom === undefined) {\n    d.nom = '(d)'\n  }\n  this.traitRapide(pointSurDroite(d, -20), pointSurDroite(d, 20))\n  this.pointCreer(A)\n  if (description) this.textePosition('1. Avec le compas, marquer deux points B et C de part et d\\'autre de A, tels que AB=AC.', 0, 10, { couleur: 'lightblue' })\n  this.compasEcarter2Points(A, B)\n  this.compasTracerArcCentrePoint(A, B, { couleur: 'lightgray', epaisseur: 1 })\n  this.compasTracerArcCentrePoint(A, C, { couleur: 'lightgray', epaisseur: 1 })\n  this.pointsCreer(B, C, { tempo: 10 })\n  if (description) {\n    this.textePosition('2. Choisir un écartement de compas supérieur à la longueur AB.', 0, 9.3, { couleur: 'lightblue' })\n  }\n  this.compasEcarter2Points(B, P1)\n  if (description) this.textePosition('3. Tracer un arc de cercle de centre B avec cet écartement.', 0, 8.6, { couleur: 'lightblue' })\n  this.compasTracerArcCentrePoint(B, P1, { couleur: 'lightgray', epaisseur: 1 })\n  if (description) this.textePosition('4. Tracer un arc de cercle de centre C en conservant le même écartement.', 0, 7.9, { couleur: 'lightblue' })\n  this.compasTracerArcCentrePoint(C, P1, { couleur: 'lightgray', epaisseur: 1 })\n  this.compasMasquer()\n  if (description) {\n    this.textePosition('4. Tracer la droite qui passe par le point d\\'intersection des arcs de cercle et par le point A.', 0, 7.2, { couleur: 'lightblue' })\n  }\n  this.regleRotation(d.angleAvecHorizontale - 90)\n  const P11 = homothetie(P1, A, 1.1)\n  const P12 = homothetie(P2, A, 1.1)\n  this.regleMontrer(P11)\n  this.crayonMontrer(P11)\n  this.tracer(P12)\n  if (description) this.textePosition('5. Coder l\\'angle droit.', 0, 6.5, { couleur: 'lightblue' })\n  this.regleMasquer()\n  this.codageAngleDroit(P1, A, B)\n}\n/**\n * Trace la perpendiculaire à une droite passant par un point n'appartenant pas à cette droite au compas.\n * @param {droite} d\n * @param {number} x // pour choisir le point sur d : l'abscisse de A\n * @param {boolean} description\n */\nexport const perpendiculaireCompasPoint = function (d, A, description) {\n  const H = projectionOrtho(A, d)\n  const B = similitude(A, H, -90, 1.2, 'B')\n  const C = homothetie(B, H, -0.7, 'C')\n  const D = rotation(A, H, 180)\n  const P1 = homothetie(A, H, 1.2)\n  const P2 = homothetie(A, H, -1.2)\n  if (d.nom === '') {\n    d.nom = '(d)'\n  }\n  if (A.nom === '') {\n    A.nom = 'A'\n  }\n  this.traitRapide(pointSurDroite(d, -20), pointSurDroite(d, 20))\n  this.textePoint(d.nom, translation(pointSurDroite(d, 0), vecteur(0, -0.5)))\n  this.pointCreer(A)\n  if (description) this.textePosition(`1. Choisir deux points B et C sur la droite ${d.nom}.`, 0, 11, { couleur: 'lightblue', tempo: 20 })\n  this.tempo = 20\n  this.pointCreer(B)\n  this.pointCreer(C)\n  if (description) this.textePosition(`2. Tracer un arc de cercle de centre B passant par A et un autre de centre C passant par ${A.nom}.`, 0, 10.3, { couleur: 'lightblue', tempo: 20 })\n  this.compasEcarter2Points(B, A)\n  this.compasTracerArcCentrePoint(B, D, { couleur: 'lightgray', epaisseur: 1 })\n  this.compasEcarter2Points(C, A)\n  this.compasTracerArcCentrePoint(C, D, { couleur: 'lightgray', epaisseur: 1 })\n  if (description) this.textePosition(`3. Ces deux arcs de cercle se recoupent en un point qui est le symétrique de ${A.nom} par rapport à ${d.nom}`, 0, 9.6, { couleur: 'lightblue', tempo: 20 })\n  this.compasMasquer()\n  if (description) this.textePosition('4. Tracer la droite qui passe par le point d\\'intersection des arcs de cercle et par le point A.', 0, 8.9, { couleur: 'lightblue', tempo: 20 })\n  this.regleRotation(d.angleAvecHorizontale - 90)\n  this.regleMontrer(P1)\n  this.crayonMontrer(P1)\n  this.tracer(P2)\n  if (description) this.textePosition('5. Coder l\\'angle droit.', 0, 8.2, { couleur: 'lightblue', tempo: 20 })\n  this.regleMasquer()\n  this.codageAngleDroit(P1, H, B)\n}\n/**\n   * Trace la parallèlee à (AB) passant par C avec la règle et l'équerre.\n   * Cette macro réalise la construction en décrivant ce qu'elle fait à chaque étape\n   * @param {point} A\n   * @param {point} B\n   * @param {point} M\n   * @param {boolean} dessus\n   * @param {*} options\n   */\nexport const paralleleRegleEquerreDroitePointAvecDescription = function (A, B, M, dessus, description = true) {\n  A.nom = 'A'\n  B.nom = 'B'\n  M.nom = 'M'\n  const AA = homothetie(A, B, 2)\n  const BB = homothetie(B, A, 2)\n  const d = droite(A, B)\n  const dd = rotation(d, A, 90)\n  const H = projectionOrtho(M, dd)\n  const N = homothetie(M, H, 1.5)\n  const P = homothetie(H, M, 2)\n  this.tempo = 10\n  this.pointsCreer(A, B, M)\n  this.pointMasquer(AA, BB)\n  this.traitRapide(AA, BB)\n  this.textePosition('Parallèle à une droite passant par un point (règle et équerre)', -10, 10.7, { couleur: 'green', taille: 4, tempo: 20 })\n  if (description) this.textePosition('On veut construire la parallèle à (AB) passant par M à la règle et à l\\'equerre.', -10, 10, { couleur: 'red', taille: 4, tempo: 50 })\n  if (description) this.textePosition('1. Placer l\\'équerre un côté de l\\'angle droit le long de la droite (AB).', -9, 9.3, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  this.equerreMontrer(A)\n  this.equerreRotation(d.angleAvecHorizontale + (dessus ? -90 : 0), { tempo: 20 })\n  if (description) this.textePosition('2. Placer ensuite la règle contre l\\'autre côté de l\\'angle droit de l\\'équerre.', -9, 8.6, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  this.regleRotation(d.angleAvecHorizontale - 90)\n  this.regleMontrer(AA)\n  this.regleDeplacer(homothetie(rotation(B, A, 90), A, 1.5), { tempo: 20 })\n  if (description) this.textePosition('Remarque : On peut tracer des pointillés pour matérialiser la position de la règle.', -9.5, 7.9, { couleur: 'pink', taille: 2, tempo: 10 })\n  this.crayonMontrer(A)\n  this.tracer(homothetie(rotation(B, A, dessus ? 90 : -90), A, 1.5), { pointilles: true })\n  if (description) this.textePosition('3. Faire glisser l\\'équerre le long de la règle jusqu\\'au point M.', -9, 7.2, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  if (!dessus) {\n    this.equerreRotation(d.angleAvecHorizontale - 90)\n  }\n  this.equerreDeplacer(H, { tempo: 20 })\n  if (description) this.textePosition('4. Tracer le segment de droite passant par M.', -9, 6.5, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  this.crayonDeplacer(H)\n  this.tracer(N)\n  this.equerreMasquer()\n  if (description) this.textePosition('5. Placer la règle sur ce segment et prolonger la parallèle à (AB).', -9, 5.8, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  this.regleDeplacer(P)\n  this.regleRotation(d.angleAvecHorizontale)\n  this.tracer(P)\n  this.regleMasquer()\n  if (description) this.textePosition('6. Pour finir, coder la figure.', -9, 5.1, { couleur: 'lightblue', taille: 2, tempo: 20 })\n  this.codageAngleDroit(B, A, H)\n  this.codageAngleDroit(A, H, M)\n  this.crayonMasquer()\n}\n\n/**\n *\n * @param {point} A\n * @param {point} B\n * @param {point} C\n * @param {boolean} description\n */\nexport const paralleleAuCompasAvecDescription = function (A, B, C, description = true) {\n  const D = translation2Points(C, A, B, 'D')\n  A.nom = 'A'\n  B.nom = 'B'\n  C.nom = 'C'\n  const AA = homothetie(A, B, 1.5)\n  const BB = homothetie(B, A, 1.5)\n  const N = homothetie(C, D, 1.5)\n  const P = homothetie(D, C, 1.5)\n  this.tempo = 10\n  this.pointsCreer(A, B, C)\n  this.traitRapide(AA, BB)\n  this.textePosition('Parallèle à une droite passant par un point (compas et règle)', -10, 10.7, { couleur: 'green', taille: 4, tempo: 20 })\n  if (description) this.textePosition('On veut construire la parallèle à (AB) passant par C à la règle et au compas.', -10, 10, { couleur: 'red', taille: 4, tempo: 30 })\n  if (description) this.textePosition('1. Prendre avec le compas l\\'écartement correspondant à la longueur AB.', -9, 9.3, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  this.compasEcarter2Points(A, B)\n  if (description) this.textePosition('2. Reporter cette longueur à partir du point C.', -9, 8.6, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  this.compasTracerArcCentrePoint(C, D, { couleur: 'lightgray', epaisseur: 1 })\n  if (description) this.textePosition('3. Prendre ensuite avec le compas l\\'écartement correspondant à la longueur AC.', -9, 7.9, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  this.compasEcarter2Points(A, C)\n  if (description) this.textePosition('4. Reporter cette longueur à partir du point B.', -9, 7.2, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  this.compasTracerArcCentrePoint(B, D, { couleur: 'lightgray', epaisseur: 1 })\n  this.compasMasquer()\n  if (description) this.textePosition('5. Noter D, le point d\\'intersection des deux arcs de cercle.', -9, 6.5, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  this.pointCreer(D)\n  if (description) this.textePosition('6. Tracer la droite passant par C et D.', -9, 5.8, { couleur: 'lightblue', taille: 2, tempo: 10 })\n  this.regleSegment(N, P)\n  this.regleMasquer()\n  this.crayonMasquer()\n}\n\n/**\n *\n * @param {point} A\n * @param {point} B\n * @param {point} C\n * @param {boolean} description\n */\nexport const paralleleAuCompas = function (A, B, C) {\n  const D = translation2Points(C, A, B)\n  const N = homothetie(C, D, 1.5)\n  const P = homothetie(D, C, 1.5)\n  this.compasEcarter2Points(A, B)\n  this.compasTracerArcCentrePoint(C, D)\n  this.compasEcarter2Points(A, C)\n  this.compasTracerArcCentrePoint(B, D)\n  this.compasMasquer()\n  // this.pointCreer(D)\n  this.regleSegment(N, P)\n  return D\n}\n","/**\n ************************************************\n ************** PARALLELOGRAMMES ****************\n ************************************************\n */\n\nimport { translation2Points, longueur, pointSurSegment, similitude, pointAdistance, droite, homothetie } from '../2d'\n\n/**\n   * Trace un parallélogramme à partir de la donnée de 3 sommets consécutifs\n   * @param {point} A\n   * @param {point} B\n   * @param {point} C\n   * @param {string} nomD\n   * @param {boolean} description\n   * @param {boolean} csDejaTraces À true (par défaut), les 2 côtés seront faits immédiatement, sinon, on les tracera à la règle.\n   */\nexport function parallelogramme3sommetsConsecutifs (A, B, C, nomD = '', description = true, csDejaTraces = true) {\n  const D = translation2Points(C, B, A)\n  D.nom = nomD\n  const xMin = Math.min(A.x, B.x, C.x, D.x)\n  const yMin = Math.min(A.y, B.y, C.y, D.y)\n  // const xMax = Math.max(A.x, B.x, C.x, D.x)\n  // const yMax = Math.max(A.y, B.y, C.y, D.y)\n  this.traitRapide(A, B)\n  this.traitRapide(B, C)\n  this.pointCreer(A, A.nom, 0)\n  this.pointCreer(B, B.nom, 0)\n  this.pointCreer(C, C.nom, 0)\n  this.textePosition(`${A.nom + B.nom + C.nom + D.nom} est un parallélogramme donc ses côtés opposés sont de même longueur.`, xMin - 1, yMin - 1)\n  this.compasEcarter2Points(B, A)\n  this.textePosition(`${B.nom + A.nom} = ${C.nom + D.nom}`, xMin - 1, yMin - 2)\n  this.compasTracerArcCentrePoint(C, D)\n  this.compasEcarter2Points(B, C)\n  this.textePosition(`${B.nom + C.nom} = ${A.nom + D.nom}`, xMin - 1, yMin - 3)\n  this.compasTracerArcCentrePoint(A, D, 10)\n  this.pointCreer(D)\n  this.compasMasquer()\n  this.regleSegment(C, D)\n  this.regleSegment(D, A)\n  this.regleMasquer()\n  this.crayonMasquer()\n  this.segmentCodage(A, B, { codage: '///', couleur: this.couleurCodage, tempo: 0 })\n  this.segmentCodage(D, C, { codage: '///', couleur: this.couleurCodage, tempo: 0 })\n  this.segmentCodage(B, C, { codage: '//', couleur: this.couleurCodage, tempo: 0 })\n  this.segmentCodage(A, D, { codage: '//', couleur: this.couleurCodage, tempo: 0 })\n}\n/**\n     * Trace le parallélogramme ABCD de centre O à partir de [AB] et O.\n     * @param {point} A\n     * @param {point} B\n     * @param {point} O\n     * @param {string} nomC\n     * @param {string} nomD\n     * @param {boolean} description\n     */\nexport function parallelogramme2sommetsConsecutifsCentre (A, B, O, nomC = '', nomD = '', description = true) {\n  const C = translation2Points(O, A, O)\n  C.nom = nomC\n  const D = translation2Points(O, B, O)\n  D.nom = nomD\n  const nom = A.nom + B.nom + C.nom + D.nom\n  if (longueur(A, C) > 12 || longueur(B, D) > 12) {\n    this.regleModifierLongueur(30)\n  }\n  const xMin = Math.min(A.x, B.x, C.x, D.x)\n  const yMin = Math.min(A.y, B.y, C.y, D.y)\n  // const xMax = Math.max(A.x, B.x, C.x, D.x)\n  // const yMax = Math.max(A.y, B.y, C.y, D.y)\n  this.traitRapide(A, B)\n  this.pointCreer(A, { tempo: 0 })\n  this.pointCreer(B, { tempo: 0 })\n  this.pointCreer(O, { tempo: 0 })\n  if (description && nom.length === 4) {\n    this.textePosition(`${A.nom + B.nom + C.nom + D.nom} est un parallélogramme donc ses diagonales se coupent en leur milieu.`, xMin - 1, yMin - 1)\n  }\n  this.pointilles = true\n  this.epaisseur = 1\n  this.couleur = this.couleurTraitsDeConstruction\n  this.regleDemiDroiteOriginePoint(A, O, { longueur: longueur(A, C) + 3 })\n  this.regleMasquer()\n  this.crayonMasquer()\n  this.compasEcarter2Points(A, O)\n  if (description && nom.length === 4) {\n    this.textePosition(`${A.nom + O.nom} = ${O.nom + C.nom}`, xMin - 1, yMin - 2)\n  }\n  this.pointilles = false\n  this.compasTracerArcCentrePoint(O, C)\n  this.compasMasquer()\n  this.pointilles = true\n  this.regleDemiDroiteOriginePoint(B, O, { longueur: longueur(B, D) + 3 })\n  this.regleMasquer()\n  this.crayonMasquer()\n  this.pointilles = false\n  this.compasEcarter2Points(B, O)\n  if (description && nom.length === 4) {\n    this.textePosition(`${B.nom + O.nom} = ${O.nom + D.nom}`, xMin - 1, yMin - 3)\n  }\n  this.compasTracerArcCentrePoint(O, D)\n  this.compasMasquer()\n  this.couleur = 'blue'\n  this.epaisseur = 3\n  this.pointCreer(D)\n  this.regleSegment(A, D)\n  this.regleSegment(D, C)\n  this.regleSegment(C, B)\n  this.regleMasquer()\n  this.compasMasquer()\n  this.crayonMasquer()\n  this.segmentCodage(A, O, { codage: '//', couleur: this.couleurCodage, tempo: 0 })\n  this.segmentCodage(O, C, { codage: '//', couleur: this.couleurCodage, tempo: 0 })\n  this.segmentCodage(B, O, { codage: 'O', couleur: this.couleurCodage, tempo: 0 })\n  this.segmentCodage(O, D, { codage: 'O', couleur: this.couleurCodage, tempo: 0 })\n}\n/**\n     * Trace la parallélogramme ABCD de centre O en partant de [AD), [AB) et O (mais sans voir la position de B et D au départ)\n     * @param {point} D\n     * @param {point} A\n     * @param {point} B\n     * @param {point} O\n     */\nexport function parallelogrammeAngleCentre (D, A, B, O) {\n  const B1 = pointSurSegment(A, B, longueur(A, B) + 2)\n  const D1 = pointSurSegment(A, D, longueur(A, D) + 2)\n  const C = translation2Points(B, A, D)\n  this.traitRapide(A, B1)\n  this.traitRapide(A, D1)\n  this.pointCreer(O, { tempo: 0 })\n  this.pointCreer(A, { tempo: 0 })\n  this.regleDemiDroiteOriginePoint(A, O, { couleur: this.couleurTraitsDeConstruction, epaisseur: 1, pointilles: true })\n  this.pointilles = false\n  this.regleMasquer()\n  this.crayonMasquer()\n  this.compasEcarter2Points(A, O)\n  this.compasTracerArcCentrePoint(O, C, { couleur: this.couleurTraitsDeConstruction })\n  this.compasMasquer()\n  this.paralleleRegleEquerre2points3epoint(B1, A, C, { couleur: this.couleurTraitsDeConstruction, epaisseur: 1 })\n  this.equerreMasquer()\n  this.regleDroite(C, D, { couleur: this.couleurTraitsDeConstruction, epaisseur: 1 })\n  this.paralleleRegleEquerre2points3epoint(A, D1, C, { couleur: this.couleurTraitsDeConstruction, epaisseur: 1 })\n  this.equerreMasquer()\n  this.regleDroite(C, B, { couleur: this.couleurTraitsDeConstruction, epaisseur: 1 })\n  this.pointCreer(D, { tempo: 0 })\n  this.pointCreer(B, { tempo: 0 })\n  this.pointCreer(C, { tempo: 0 })\n  this.regleSegment(B, C)\n  this.regleSegment(C, D)\n  this.regleMasquer()\n  this.crayonMasquer()\n}\n/**\n     * Macro pour placer le point M sur un segment [AB] tel que AM = n/d AB\n     * @param {point} A\n     * @param {point} B\n     * @param {int} n numérateur\n     * @param {int} d dénominateur\n     * @param {object} options { distance: 1, monAngle: 40, nom: '', nommerGraduations: false }\n     * @returns M\n     */\nexport function partageSegment (A, B, n, d, { distance = 1, monAngle = 40, nom = '', nommerGraduations = false } = {}) {\n  this.traitRapide(A, B)\n  this.regleMasquerGraduations()\n  this.regleMontrer(A)\n  const y = similitude(B, A, monAngle, (Math.max(n, d) + 1) * distance / longueur(A, B))\n  this.regleSegment(A, y)\n  this.regleMasquer()\n  this.crayonMasquer()\n  const Ax = [A]\n  for (let i = 1; i <= Math.max(n, d); i++) {\n    Ax.push(pointAdistance(A, distance * i, monAngle + droite(A, B).angleAvecHorizontale))\n    this.compasTracerArcCentrePoint(Ax[i - 1], Ax[i])\n    if (nommerGraduations) this.pointCreer(Ax[i], { label: A.nom + '_' + i, dx: -1, dy: 0.5 })\n  }\n  this.compasMasquer()\n  this.regleSegment(Ax[d], B)\n  this.regleMasquer()\n  this.crayonMasquer()\n  const m = this.paralleleAuCompas(Ax[d], B, Ax[n])\n  const M = homothetie(B, A, n / d)\n  if (m.y > M.y) this.regleProlongerSegment(m, M, { longueur: 1 })\n  this.regleSegment(A, M, { couleur: 'red', epaisseur: 3 })\n  if (nom) this.pointCreer(M, { label: nom })\n  this.regleMasquer()\n  this.crayonMasquer()\n  return M\n}\n","import { point, pointAdistance, rotation, pointSurSegment, polygoneAvecNom } from '../2d'\nimport { randint } from '../outils'\n\n/**\n   * Macro crée par Sophie Desruelle\n   * @param {objet} A\n   * @param {number} c\n   * @returns polygoneAvecNom\n   */\nexport const carre1point1longueur = function (nom, A, c) {\n  const interligne = 1\n  A = point(5, 0, nom[0])\n  const B = pointAdistance(A, c, randint(-20, 20), nom[1])\n  const C = rotation(A, B, -90, nom[2])\n  const D = rotation(B, A, 90, nom[3])\n  const E = pointSurSegment(A, D, c + 2, 'E')\n  const F = pointSurSegment(D, C, c + 2, 'F')\n  this.equerreZoom((c + 3) * 100 / 7.5)\n  this.tempo = 20\n\n  this.textePosition(`1) On veut construire un carré dont les côtés mesurent ${c} cm, donc on commence par tracer un segment, ici [${nom[0] + nom[1]}], de cette longueur.`, 0, -2)\n\n  this.pointCreer(A, { tempo: 0 }) // On coupe la pause pour ne pas voir le déplacement du point\n  this.pointNommer(A, A.nom, { dx: -0.5, dy: 0 }) // On déplace le label du point A vers la gauche\n  this.regleSegment(A, B)\n  this.pointCreer(B)\n  this.regleMasquer()\n  this.longueurSegment(A, B, -1)\n\n  this.textePosition(`2) Un carré possède 4 angles droits, donc on trace la perpendiculaire à (${nom[0] + nom[1]}) passant par ${nom[0]}.`, 0, -2 - 1 * interligne)\n\n  this.equerreMontrer()\n  this.equerreDeplacer(A)\n  this.equerreRotation(B)\n  this.trait(A, E)\n  this.equerreMasquer()\n  this.codageAngleDroit(B, A, D)\n\n  this.textePosition(`3) Les 4 côtés d'un carré sont de la même longueur, donc on place le point ${nom[3]} sur cette perpendiculaire, à ${c} cm de ${nom[0]}.`, 0, -2 - 2 * interligne)\n\n  this.regleSegment(A, D)\n  this.pointCreer(D, { tempo: 0 })\n  this.pointNommer(D, D.nom, { dx: -0.7, dy: 0.5 })\n  this.regleMasquer()\n  this.segmentCodage(A, B)\n  this.segmentCodage(A, D)\n\n  this.textePosition(`4) De même, on trace la perpendiculaire à (${nom[0] + nom[3]}) passant par ${nom[3]}, puis on place le point ${nom[2]} sur cette perpendiculaire, à ${c} cm de ${nom[3]}.`, 0, -2 - 3 * interligne)\n\n  this.equerreMontrer()\n  this.equerreDeplacer(D)\n  this.equerreRotation(A)\n  this.trait(D, F)\n  this.equerreMasquer()\n  this.codageAngleDroit(A, D, C)\n\n  this.regleSegment(D, C)\n  this.pointCreer(C, { tempo: 0 })\n  this.pointNommer(C, C.nom, { dx: 0, dy: 0.9 })\n  this.regleMasquer()\n  this.segmentCodage(D, C)\n\n  this.textePosition(`5) On trace le segment [${nom[1] + nom[2]}].`, 0, -2 - 4 * interligne)\n\n  this.regleSegment(C, B)\n  this.regleMasquer()\n  this.segmentCodage(B, C)\n\n  this.textePosition(`6) On vérifie que ${nom[1] + nom[2]} = ${c} cm et que les deux derniers angles tracés sont droits.`, 0, -2 - 5 * interligne)\n\n  this.equerreMontrer(C, { tempo: 0 })\n  this.equerreRotation(D)\n  this.equerreMasquer()\n  this.codageAngleDroit(D, C, B)\n\n  this.equerreMontrer(B, { tempo: 0 })\n  this.equerreRotation(C)\n  this.equerreMasquer()\n  this.codageAngleDroit(C, B, A)\n  return polygoneAvecNom(A, B, C, D)\n}\n","import { longueur, homothetie, vecteur, symetrieAxiale, milieu, rotation, translation } from '../2d'\nimport { randint, arrondi, texNombre, calcul } from '../outils'\n\n/**\n   *\n   * @param {objet} p point dont on construit l'image et qui doit être tracé.\n   * @param {objet} d axe de symétrie.\n   * @param {string} nom nom de l'image\n   * @param {objet} options couleur et couleurCodage\n   * @author Liouba Leroux et Jean-Claude Lhote\n   */\nexport function symetrieAxialePoint (p, d, nom, { couleur = this.couleur, couleurCodage = this.couleurCodage, codage = '//' } = {}) {\n  this.epaisseur = 0.5 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n  this.couleur = 'grey'\n  if (nom === undefined || nom === '') {\n    nom = p.nom + \"'\"\n  }\n  const image = symetrieAxiale(p, d, nom) // on définit le point image (pour le viser avec la règle on ajoute une apostrophe au nom)\n  if (longueur(p, image) !== 0) {\n    const M = milieu(p, image) // on crée le point milieu\n    const N = rotation(p, M, 90)\n    const D = rotation(N, M, 180)\n    this.regleMasquerGraduations()\n    this.perpendiculaireRegleEquerre2points3epoint(N, D, p)\n    this.compasEcarter2Points(M, p)\n    this.compasTracerArcCentrePoint(M, image)\n    this.regleSegment(p, image)\n    this.regleMasquer()\n    this.equerreMasquer()\n    this.segmentCodage(p, M, { codage: codage, couleur: couleurCodage })\n    this.segmentCodage(image, M, { codage: codage, couleur: couleurCodage })\n    this.crayonMasquer()\n    this.compasMasquer()\n  }\n  this.pointCreer(image, { couleur: couleur, couleurLabel: couleur }) // on construit l'image\n}\n\n/**\n   *\n   * @param {objet} p  le point dont on veut construire l'image\n   * @param {objet} centre le centre de la rotation\n   * @param {number} angle l'angle de la rotation\n   * @param {string} nom le nom de l'image (si pas précisé ce sera le nom de l'antécédent avec un ')\n   * @param {objet} param4 options couleur et couleurCodage\n   * @author Jean-Claude Lhote\n   */\nexport const rotationPoint = function (p, centre, angle, nom, { couleur = this.couleur, couleurCodage = this.couleurCodage, codage = true } = {}) {\n  this.epaisseur = 0.5 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n  this.couleur = 'grey'\n  if (nom === undefined || nom === '') {\n    nom = p.nom + \"'\"\n  }\n  const image = rotation(p, centre, angle, nom) // on définit le point image (pour le viser avec la règle on ajoute une apostrophe au nom)\n  this.regleSegment(centre, p) // On trace le support du rapporteur\n  this.rapporteurMontrer(centre)\n  this.rapporteurTracerDemiDroiteAngle(centre, p, angle) // On trace le deuxième côté\n  this.regleMasquer()\n  this.rapporteurMasquer()\n  this.compasEcarter2Points(centre, p) // on prend l'écartement du compas\n  this.compasTracerArcCentrePoint(centre, image) // On fait l'arc qui coupe la demi-droite\n  this.compasMasquer()\n  this.pointCreer(image, { couleur: couleur, couleurLabel: couleur }) // On marque le point image (qui est nommé)\n  if (codage) {\n    if (Math.abs(angle) === 90) {\n      this.codageAngleDroit(p, centre, image, { couleur: couleurCodage })\n    } else {\n      this.angleCodage(p, centre, image, { couleur: couleurCodage })\n      this.textePoint(Math.abs(angle) + '°', translation(homothetie(rotation(p, centre, angle / 2), centre, 1.3 / longueur(centre, p)), vecteur(-0.2, 0.5)))\n    }\n  }\n}\n\n//   /**\n//  *\n//  * @param {objet} p point dont on construit l'image et qui doit être tracé.\n//  * @param {objet} d axe de symétrie.\n//  * @param {string} nom nom de l'image\n//  * @param {objet} options couleur et couleurCodage\n//  * @author Liouba Leroux et Jean-Claude Lhote\n//  */\n//   this.symetrieAxialePoint = function (p, d, nom, { couleur = this.couleur, couleurCodage = this.couleurCodage, codage = '//' } = {}) {\n//     this.epaisseur = 0.5 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n//     this.couleur = 'grey'\n//     if (nom === undefined || nom === '') {\n//       nom = p.nom + \"'\"\n//     }\n//     const image = symetrieAxiale(p, d, nom) // on définit le point image (pour le viser avec la règle on ajoute une apostrophe au nom)\n//     if (longueur(p, image) !== 0) {\n//       const M = milieu(p, image) // on crée le point milieu\n//       const N = rotation(p, M, 90)\n//       const D = rotation(N, M, 180)\n//       this.regleMasquerGraduations()\n//       this.perpendiculaireRegleEquerre2points3epoint(N, D, p)\n//       this.compasEcarter2Points(M, p)\n//       this.compasTracerArcCentrePoint(M, image)\n//       this.regleSegment(p, image)\n//       this.regleMasquer()\n//       this.equerreMasquer()\n//       this.segmentCodage(p, M, { codage: codage, couleur: couleurCodage })\n//       this.segmentCodage(image, M, { codage: codage, couleur: couleurCodage })\n//       this.crayonMasquer()\n//       this.compasMasquer()\n//     }\n//     this.pointCreer(image, { couleur: couleur, couleurLabel: couleur }) // on construit l'image\n//   }\n\n/**\n   *\n   * @param {objet} p  le point dont on veut construire l'image\n   * @param {objet} le point de départ de la translation\n   * @param {objet} le point d'arrivée de la translation\n   * @param {string} nom le nom de l'image (si pas précisé ce sera le nom de l'antécédent avec un ')\n   * @param {objet} param4 options couleur et couleurCodage\n   * @author Jean-Claude Lhote\n   */\nexport const translationPoint = function (p, A, B, nom, { couleur = 'black', couleurCodage = this.couleurCodage } = {}) {\n  const v = vecteur(A, B)\n  this.epaisseur = 0.5 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n  this.couleur = 'grey'\n  if (nom === undefined || nom === '') {\n    nom = p.nom + \"'\"\n  }\n  const image = translation(p, v, nom) // on définit le point image (pour le viser avec la règle on ajoute une apostrophe au nom)\n  if (longueur(A, p) !== 0) { // si le point de départ A est l'antécédent, alors le point d'arrivée B est l'image... pas besoin de construction\n    this.compasEcarter2Points(A, p)\n    this.compasTracerArcCentrePoint(B, image)\n    this.compasEcarter2Points(A, B)\n    this.compasTracerArcCentrePoint(p, image)\n  }\n  this.compasMasquer()\n  this.pointCreer(image, { couleur: couleur, couleurLabel: couleur })\n  const choix1 = randint(0, 4)\n  const choix2 = randint(0, 4, choix1)\n  const marques = ['/', '//', '///', 'O', '\\\\\\\\']\n  const marque1 = marques[choix1]\n  const marque2 = marques[choix2]\n  this.couleur = 'green'\n  this.traitRapide(p, image)\n  this.traitRapide(A, B)\n  this.segmentCodage(p, image, { codage: marque1, couleur: couleurCodage })\n  this.segmentCodage(A, B, { codage: marque1, couleur: couleurCodage })\n  this.couleur = 'red'\n  this.traitRapide(B, image)\n  this.traitRapide(A, p)\n  this.segmentCodage(B, image, { codage: marque2, couleur: couleurCodage })\n  this.segmentCodage(A, p, { codage: marque2, couleur: couleurCodage })\n}\n\n/**\n   *\n   * @param {objet} p  le point dont on veut construire l'image\n   * @param {objet} centre le centre de symétrie\n   * @param {string} nom le nom de l'image (si pas précisé ce sera le nom de l'antécédent avec un ')\n   * @param {objet} param3 options couleur, couleurCodage et codage\n   * @author Jean-Claude Lhote\n   */\nexport const demiTourPoint = function (p, centre, nom, { couleur = 'black', couleurCodage = this.couleurCodage, codage = '//' } = {}) {\n  this.epaisseur = 0.5 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n  this.couleur = 'grey'\n  if (nom === undefined || nom === '') {\n    nom = p.nom + \"'\"\n  }\n  const image = rotation(p, centre, 180, nom) // on définit le point image (pour le viser avec la règle on ajoute une apostrophe au nom)\n  this.compasEcarter2Points(centre, p)\n  this.compasTracerArcCentrePoint(centre, image)\n  this.compasMasquer()\n  this.crayonDeplacer(p)\n  this.regleSegment(p, image)\n  this.couleur = couleur\n  this.epaisseur = 2\n  this.pointCreer(image, { couleur: couleur, couleurLabel: couleur }) // on construit l'image\n  this.regleMasquer()\n  this.crayonMasquer()\n  this.segmentCodage(p, centre, { codage: codage, couleur: couleurCodage })\n  this.segmentCodage(centre, image, { codage: codage, couleur: couleurCodage })\n}\n\n/**\n   *\n   * @param {objet} p polygone dont on doit construire l'image\n   * @param {objet} centre de l'homothétie\n   * @param {number} k rapport de l'homothétie\n   * @param {array} noms tableau contenant les différents noms des sommets dans le même ordre que ceux de p. Si vide, alors on ajoute ' à ceux de p\n   * @param {objet} param4 options (couleur)\n   */\nexport const homothetiePoint = function (p, centre, k, nom, { couleur = this.couleur, positionTexte = { x: 0, y: 0 } } = {}) {\n  this.epaisseur = 1 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n  const couleurSave = this.couleur\n  this.couleur = 'grey'\n  let t\n  if (nom === undefined || nom === '') {\n    nom = p.nom + \"'\"\n  }\n  const image = homothetie(p, centre, k, nom) // on définit le point image (pour le viser avec la règle on ajoute une apostrophe au nom)\n  if (k > 0) {\n    t = this.textePosition(`Comme le rapport est positif alors les points ${p.nom} et ${image.nom} sont du même côté de ${centre.nom}`, positionTexte.x, positionTexte.y, { taille: 15 })\n  } else {\n    t = this.textePosition(`Comme le rapport est négatif alors ${centre.nom} est entre les points ${p.nom} et ${image.nom}`, positionTexte.x, positionTexte.y, { taille: 15 })\n  }\n  this.regleSegment(p, centre)\n  const l = arrondi(longueur(p, centre), 1)\n  const lprime = arrondi(calcul(l * Math.abs(k)))\n  const t1 = this.textePosition(`La mesure de ${centre.nom}${p.nom} est ${texNombre(arrondi(l, 1))} cm et le rapport de l'homothetie est ${texNombre(k)}`, positionTexte.x, positionTexte.y - 1, { taille: 15 })\n  const t2 = this.textePosition(`donc ${centre.nom}${image.nom} mesure ${texNombre(l)} cm × ${texNombre(Math.abs(k))} = ${texNombre(lprime)} cm`, positionTexte.x, positionTexte.y - 2, { taille: 15 })\n  this.regleSegment(centre, image)\n  this.pointCreer(image, { couleur: couleur, couleurLabel: couleur }) // on construit l'image\n  this.regleMasquer()\n  this.crayonMasquer()\n  this.pause()\n  this.texteMasquer(t1)\n  this.texteMasquer(t2)\n  this.texteMasquer(t)\n  this.couleur = couleurSave\n}\n/**\n   *\n   * @param {objet} p le polygone qui est déjà tracé\n   * @param {objet} centre le centre de la rotation\n   * @param {number} angle l'angle de rotation\n   * @author Jean-Claude Lhote\n   * @param {objet} param4 options couleur et couleurCodage\n  */\nexport const rotationPolygone = function (p, centre, angle, noms = [], { couleur = this.couleur, couleurCodage = this.couleurCodage } = {}) {\n  let nom\n  const p2 = rotation(p, centre, angle) // Pour tracer la figure image à la fin de l'animation avec polygoneRapide\n  this.epaisseur = 0.5 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n  this.couleur = 'grey'\n  let i = 0; let codage\n  for (const sommet of p.listePoints) { // On répète la construction pour chaque sommet du polygone\n    if (noms[i] !== undefined) {\n      nom = noms[i]\n    } else {\n      nom = sommet.nom + \"'\"\n    }\n    if (i < 1) {\n      codage = true\n    } else {\n      codage = false\n    }\n    if (longueur(centre, sommet) !== 0) {\n      this.rotationPoint(sommet, centre, angle, nom, { couleur: couleur, couleurCodage: couleurCodage, codage: codage })\n    }\n    i++\n  }\n  this.epaisseur = 2\n  this.couleur = couleur\n  this.polygoneRapide(...p2.listePoints) // on trace le polygone image en bleu épaisseur 2\n}\n\n/**\n   *\n   * @param {objet} p polygone dont on construit l'image et qui doit être tracé avec ses points nommés.\n   * @param {objet} d axe de symétrie.\n   * @param {string} noms tableau contenant les noms des sommets dans le même ordre que p\n   * @param {objet} param3 options couleur et couleurCodage\n   * @author Liouba Leroux et Jean-Claude Lhote\n   */\nexport const symetrieAxialePolygone = function (p, d, noms = [], { couleur = this.couleur, couleurCodage = this.couleurCodage } = {}) {\n  let nom\n  const p2 = symetrieAxiale(p, d) // Pour tracer la figure image à la fin de l'animation avec polygoneRapide\n  // const N = homothetie(milieu(p.listePoints[0], p2.listePoints[0]), milieu(p.listePoints[1], p2.listePoints[1]), 1.23456) // créer unh point de l'axe de symétrie pour les alignements et les mesure d'angles\n  this.epaisseur = 0.5 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n  this.couleur = 'grey'\n  let i = 0\n  const marques = ['/', '//', '///', 'O', '\\\\\\\\']\n  for (const sommet of p.listePoints) { // On répète la construction pour chaque sommet du polygone\n    if (noms[i] !== undefined) {\n      nom = noms[i]\n    } else {\n      nom = sommet.nom + \"'\"\n    }\n    this.symetrieAxialePoint(sommet, d, nom, { couleur: couleur, couleurCodage: couleurCodage, codage: marques[i] })\n    i++\n  }\n  this.compasMasquer()\n  this.crayonMasquer()\n  this.epaisseur = 2\n  this.couleur = couleur\n  this.polygoneRapide(...p2.listePoints) // on trace le polygone image en bleu épaisseur 2\n  this.polygoneRapide(p2)\n}\n\n/**\n   *\n   * @param {objet} p polygone dont on construit l'image\n   * @param {objet} A point de départ de la translation\n   * @param {objet} B point d'arrivée de la translation\n   * @param {string} noms tableau contenant les noms des sommets dans le même ordre que p\n * @param {objet} param3 options couleur et couleurCodage\n * @author Jean-Claude Lhote\n*/\nexport const translationPolygone = function (p, A, B, noms = [], { couleur = this.couleur, couleurCodage = this.couleurCodage, codage = 'O' } = {}) {\n  let nom\n  const v = vecteur(A, B)\n  const p2 = translation(p, v) // Pour tracer la figure image à la fin de l'animation avec polygoneRapide\n  this.epaisseur = 0.5 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n  this.couleur = 'grey'\n  let i = 0\n  for (const sommet of p.listePoints) { // On répète la construction pour chaque sommet du polygone\n    if (noms[i] !== undefined) {\n      nom = noms[i]\n    } else {\n      nom = sommet.nom + \"'\"\n    }\n    this.translationPoint(sommet, A, B, nom, { couleur: couleur, couleurCodage: couleurCodage, codage: codage })\n  }\n  this.epaisseur = 2\n  this.couleur = couleur\n  this.polygoneRapide(...p2.listePoints) // on trace le polygone image en bleu épaisseur 2\n  this.polygoneRapide(p2)\n  i++\n}\n/**\n   *\n   * @param {objet} p  le polygone dont on veut construire l'image qui doit être tracé\n   * @param {objet} centre le centre de symétrie\n   * @param {array} noms les noms des sommets images (si pas précisé ce sera le nom de l'antécédent avec un ')\n   * @param {objet} param3 options couleur et couleurCodage\n   * @author Jean-Claude Lhote\n   */\nexport const demiTourPolygone = function (p, centre, noms = [], { couleur = this.couleur, couleurCodage = this.couleurCodage } = {}) {\n  const p2 = rotation(p, centre, 180) // Pour tracer la figure image à la fin de l'animation avec polygoneRapide\n  this.epaisseur = 0.5 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n  this.couleur = 'grey'\n  let nom\n  let i = 0\n  const marques = ['/', '//', '///', 'O', '\\\\\\\\']\n  for (const sommet of p.listePoints) { // On répète la construction pour chaque sommet du polygone\n    if (noms[i] !== undefined) {\n      nom = noms[i]\n    } else {\n      nom = sommet.nom + \"'\"\n    }\n    this.demiTourPoint(sommet, centre, nom, { couleur: couleur, couleurCodage: couleurCodage, codage: marques[i] })\n    i++\n  }\n  this.epaisseur = 2\n  this.couleur = couleur\n  this.polygoneRapide(...p2.listePoints) // on trace le polygone image en bleu épaisseur 2\n  this.polygoneRapide(p2)// figure svg de l'exercice\n}\n\n/**\n   *\n   * @param {objet} p polygone dont on doit construire l'image\n   * @param {objet} centre de l'homothétie\n   * @param {number} k rapport de l'homothétie\n   * @param {array} noms tableau contenant les différents noms des sommets dans le même ordre que ceux de p. Si vide, alors on ajoute ' à ceux de p\n   * @param {objet} param4 options (couleur)\n   */\nexport const homothetiePolygone = function (p, centre, k, noms = [], { couleur = this.couleur } = {}) {\n  let nom\n  const p2 = homothetie(p, centre, k) // Pour tracer la figure image à la fin de l'animation avec polygoneRapide\n  this.epaisseur = 1 // épaisseur et couleur de crayon de papier bien taillé pour la construction\n  this.couleur = 'grey'\n  const t = this.textePosition('Comme k est ' + (k >= 0 ? 'positif' : 'négatif') + ' alors ' + (k >= 0 ? 'les figures sont du même côté de ' + centre.nom : centre.nom + ' est entre les figures'), 0, 0, { taille: 15 })\n  let i = 0\n  for (const sommet of p.listePoints) { // On répète la construction pour chaque sommet du polygone\n    if (noms[i] !== undefined) {\n      nom = noms[i]\n    } else {\n      nom = sommet.nom + \"'\"\n    }\n    this.homothetiePoint(sommet, centre, k, nom, { couleur: couleur })\n    i++\n  }\n  this.epaisseur = 2\n  this.couleur = couleur\n  this.polygoneRapide(...p2.listePoints) // on trace le polygone image en bleu épaisseur 2\n  this.texteMasquer(t)\n}\n","import { nombreAvecEspace, randint } from '../outils'\nimport { cercle, droite, droiteParPointEtPerpendiculaire, homothetie, longueur, point, pointAdistance, pointIntersectionDD, pointIntersectionLC, pointSurSegment, rotation, triangle2points2longueurs } from '../2d.js'\n\n/**\n   * Macro de construction d'un triangle à partir de ses 3 dimensions. Le premier point aura pour coordonnées (6,0).\n   * @param {string} ABC Une chaine de caractère de 3 lettre\n   * @param {*} AB Distance entre le 1er et le 2e sommet\n   * @param {*} AC Distance entre le 1er et le 3e sommet\n   * @param {*} BC Distance entre le 2e et le 3e sommet\n   * @param {boolean} description Affichage d'un texte descriptif des étapes de la construction\n   * @return {array} [A, B, C] les 3 sommets du triangle (objets MathALEA2D)\n   */\nexport const triangle3longueurs = function (ABC, AB, AC, BC, description = true) {\n  const A = point(6, 0)\n  const B = pointAdistance(A, AB, randint(-20, 20))\n  const p = triangle2points2longueurs(A, B, AC, BC)\n  const C = p.listePoints[2]\n  if (ABC.length !== 3) {\n    description = false\n  } else {\n    A.nom = ABC[0]\n    B.nom = ABC[1]\n    C.nom = ABC[2]\n  }\n\n  if (description) this.textePosition(`${A.nom + B.nom} = ${nombreAvecEspace(AB)} cm`, 0, -2)\n  this.pointCreer(A)\n  // this.regleRotation(droite(A,B).angleAvecHorizontale)\n  // this.regleMontrer(A)\n  this.regleSegment(A, B)\n  this.pointCreer(B)\n  this.crayonMasquer()\n  if (description) this.textePosition(`${A.nom + C.nom} = ${nombreAvecEspace(AC)} cm donc ${C.nom} appartient au cercle de centre ${A.nom} et de rayon ${nombreAvecEspace(AC)} cm.`, 0, -3)\n  this.couleur = 'forestgreen'\n  this.epaisseur = 2\n  this.compasMontrer(A)\n  this.compasEcarterAvecRegle(AC)\n  this.compasTracerArcCentrePoint(A, C, 40)\n  if (description) this.textePosition(`${B.nom + C.nom} = ${nombreAvecEspace(BC)} cm donc ${C.nom} appartient au cercle de centre ${B.nom} et de rayon ${nombreAvecEspace(BC)} cm.`, 0, -4)\n  this.compasDeplacer(B)\n  this.compasEcarterAvecRegle(BC)\n  this.compasTracerArcCentrePoint(B, C)\n  this.compasMasquer()\n  this.couleur = 'blue'\n  this.epaisseur = 3\n  if (description) this.textePosition(`Le point ${C.nom} est à une intersection des deux cercles.`, 0, -5)\n  this.pointCreer(C)\n  this.regleSegment(B, C)\n  this.regleSegment(C, A)\n  this.crayonMasquer()\n  this.regleMasquer()\n  return [A, B, C]\n}\n/**\n     * Macro de construction d'un triangle rectangle (l'angle droit est le 2e point dans l'ordre du nom)\n     *  à partir de la donnée de la longueur d'un côté et de la longueur de l'hypoténuse.\n     *  Le premier sommet aura pour coordonnées (6, 0)\n     * @param {string} ABC Une chaine de caractère de 3 lettre\n     * @param {*} AB Distance entre le 1er et le 2e sommet\n     * @param {*} AC Distance entre le 1er et le 3e sommet (hypoténuse)\n     * @param {boolean} description Affichage d'un texte descriptif des étapes de la construction\n     * @return {array} [A, B, C] les 3 sommets du triangle (objets MathALEA2D)\n     */\nexport const triangleRectangleCoteHypotenuse = function (ABC, AB, AC, description = true) { // Triangle rectangle en B\n  const A = point(6, 0)\n  const B = pointAdistance(A, AB, randint(-20, 20))\n  const dAB = droite(A, B)\n  dAB.isVisible = false\n  const dBC = droiteParPointEtPerpendiculaire(B, dAB)\n  dBC.isVisible = false\n  const cAC = cercle(A, AC)\n  cAC.isVisible = false\n  const C = pointIntersectionLC(dBC, cAC)\n  const c = homothetie(C, B, 1.2)\n  if (ABC.length !== 3) {\n    description = false\n  } else {\n    A.nom = ABC[0]\n    B.nom = ABC[1]\n    C.nom = ABC[2]\n  }\n\n  if (longueur(A, C) > 8) this.equerreZoom(150)\n  if (description) this.textePosition(`${A.nom + B.nom} = ${nombreAvecEspace(AB)} cm`, 0, -2)\n  this.equerreRotation(dAB.angleAvecHorizontale)\n  this.pointCreer(A)\n  this.regleSegment(A, B)\n  this.pointCreer(B)\n  if (description) this.textePosition(`${A.nom + B.nom + C.nom} est un triangle rectangle en ${B.nom} donc ${C.nom} appartient à la perpendiculaire à (${A.nom + B.nom}) passant par ${B.nom}.`, 0, -3)\n  this.equerreMontrer(A)\n  this.equerreDeplacer(B)\n  this.tracer(c)\n  this.equerreMasquer()\n  this.codageAngleDroit(A, B, C)\n  this.crayonMasquer()\n  if (description) this.textePosition(`${A.nom + C.nom} = ${nombreAvecEspace(AC)} cm donc ${C.nom} appartient au cercle de centre ${A.nom} et de rayon ${nombreAvecEspace(AC)} cm.`, 0, -4)\n  this.compasMontrer(A)\n  this.compasEcarterAvecRegle(AC)\n  this.couleur = 'forestgreen'\n  this.epaisseur = 2\n  this.compasTracerArcCentrePoint(A, C)\n  this.couleur = 'blue'\n  this.epaisseur = 2\n  if (description) this.textePosition(`${C.nom} est à une intersection de la perpendiculaire et du cercle.`, 0, -5)\n  this.crayonMontrer(C)\n  this.pointCreer(C)\n  this.compasMasquer()\n  this.regleSegment(A, C)\n  this.regleMasquer()\n  this.crayonMasquer()\n  return [A, B, C]\n}\n\n/**\n     * Macro de construction d'un triangle rectangle (l'angle droit est le 2e point dans l'ordre du nom)\n     *  à partir de la donnée de la longueur des deux côtés de l'angle droit.\n     *  Le premier sommet aura pour coordonnées (6, 0)\n     * @param {string} ABC Une chaine de caractère de 3 lettre\n     * @param {*} AB Distance entre le 1er et le 2e sommet\n     * @param {*} AC Distance entre le 1er et le 3e sommet (hypoténuse)\n     * @param {boolean} description Affichage d'un texte descriptif des étapes de la construction\n     * @return {array} [A, B, C] les 3 sommets du triangle (objets MathALEA2D)\n     */\nexport const triangleRectangle2Cotes = function (ABC, AB, BC, description = true) { // Triangle rectangle en B\n  const A = point(6, 0)\n  const B = pointAdistance(A, AB, randint(-20, 20))\n  const dAB = droite(A, B)\n  dAB.isVisible = false\n  const dBC = droiteParPointEtPerpendiculaire(B, dAB)\n  dBC.isVisible = false\n  const cBC = cercle(B, BC)\n  cBC.isVisible = false\n  const C = pointIntersectionLC(dBC, cBC)\n  const c = homothetie(C, B, 1.2)\n  if (ABC.length !== 3) {\n    description = false\n  } else {\n    A.nom = ABC[0]\n    B.nom = ABC[1]\n    C.nom = ABC[2]\n  }\n\n  if (longueur(A, C) > 8) this.equerreZoom(150)\n  if (description) this.textePosition(`${A.nom + B.nom} = ${nombreAvecEspace(AB)} cm`, 0, -2)\n  this.equerreRotation(dAB.angleAvecHorizontale)\n  this.pointCreer(A)\n  this.regleSegment(A, B)\n  this.pointCreer(B)\n  if (description) this.textePosition(`${A.nom + B.nom + C.nom} est un triangle rectangle en ${B.nom} donc ${C.nom} appartient à la perpendiculaire à (${A.nom + B.nom}) passant par ${B.nom}.`, 0, -3)\n  this.equerreMontrer(A)\n  this.equerreDeplacer(B)\n  this.tracer(c)\n  this.equerreMasquer()\n  this.codageAngleDroit(A, B, C)\n  if (description) this.textePosition(`${B.nom + C.nom} = ${nombreAvecEspace(BC)} cm donc ${C.nom} est à ${nombreAvecEspace(BC)} cm de ${B.nom} sur la perpendiculaire à (${A.nom + B.nom}) passant par ${B.nom}.`, 0, -4)\n  this.regleMontrer(B)\n  this.regleRotation(C)\n  this.crayonDeplacer(C)\n  this.pointCreer(C)\n  this.couleur = 'blue'\n  this.epaisseur = 2\n  this.compasMasquer()\n  this.regleSegment(A, C)\n  this.regleMasquer()\n  this.crayonMasquer()\n\n  return [A, B, C]\n}\n/**\n     * Macro de construction d'un triangle à partir d'une longueur et des 2 angles adajcents au côté connu. Le premier point aura pour coordonnées (6,0).\n     * @param {string} ABC Une chaine de caractère de 3 lettre\n     * @param {*} AB Distance entre le 1er et le 2e sommet\n     * @param {*} BAC Angle au 1er sommet\n     * @param {*} CBA Angle au 2e sommet\n     * @param {boolean} description Affichage d'un texte descriptif des étapes de la construction\n     * @return {array} [A, B, C] les 3 sommets du triangle (objets MathALEA2D)\n     */\nexport const triangle1longueur2angles = function (NOM, AB, BAC, CBA, description = true, mesure = false) {\n  const angle = randint(-20, 20)\n  const a1 = BAC\n  const a2 = CBA\n  const A = point(6, 0)\n  const B = pointAdistance(A, AB, angle)\n  const D = pointAdistance(A, 5.2, a1 + angle)\n  const D2 = pointSurSegment(A, D, 10)\n  const D1 = pointSurSegment(D, D2, 0.4)\n  const E = pointAdistance(B, 3, 180 - a2 + angle)\n  const E2 = pointSurSegment(B, E, 10)\n  const E1 = pointSurSegment(E, E2, -0.4)\n  const F = pointAdistance(B, 5.2, 180 - a2 + angle)\n  const F1 = pointSurSegment(F, E2, 0.4)\n  const d = rotation(droite(A, B), A, a1)\n  D.isVisible = false\n  const d2 = rotation(droite(B, A), B, -a2)\n  d2.isVisible = false\n  const C = pointIntersectionDD(d, d2)\n  if (NOM.length !== 3) {\n    description = false\n  } else {\n    A.nom = NOM[0]\n    B.nom = NOM[1]\n    C.nom = NOM[2]\n  }\n  this.couleur = 'blue'\n  this.epaisseur = 3\n  this.pointCreer(A)\n  if (description) this.textePosition(`On trace le côté [${A.nom + B.nom}] de ${nombreAvecEspace(AB)} cm.`, 0, -4)\n  this.regleSegment(A, B)\n  this.pointCreer(B)\n  this.couleur = 'grey'\n  this.epaisseur = 1\n  this.rapporteurMontrer(A)\n  this.rapporteurDeplacer(A)\n  this.rapporteurRotation(angle)\n  if (description) this.textePosition(`On place un repère à ${a1} degrés pour tracer la demi-droite [${A.nom + C.nom}).`, 0, -5)\n  this.epaisseur = 3\n  this.trait(D, D1, 20)\n  this.epaisseur = 1\n  this.rapporteurMasquer()\n  this.regleSegment(A, D2)\n  this.regleMasquer()\n  this.angleCodage(B, A, C)\n  this.rapporteurMontrer(A)\n  this.rapporteurDeplacer(B)\n  if (description) this.textePosition(`On place un repère à ${a2} degrés pour tracer la demi-droite [${B.nom + C.nom}).`, 0, -6)\n  this.epaisseur = 3\n  this.trait(E, E1, 10)\n  this.trait(F, F1, 20)\n  this.epaisseur = 1\n  this.rapporteurMasquer()\n  this.regleMontrer(B)\n  this.regleSegment(B, E2)\n  this.angleCodage(C, B, A)\n  this.pointCreer(C, '', 0)\n  this.pointNommer(C, C.nom, -0.5, 1)\n  this.couleur = 'blue'\n  this.epaisseur = 3\n  this.regleSegment(B, C)\n  this.regleSegment(C, A)\n  this.regleMasquer()\n  this.crayonMasquer()\n  if (description && mesure) this.textePosition(`On peut mesurer ${A.nom + C.nom} ≈ ${nombreAvecEspace(longueur(A, C, 1))} cm et ${B.nom + C.nom} ≈ ${nombreAvecEspace(longueur(B, C, 1))} cm.`, 0, -7)\n\n  return [A, B, C]\n}\n/**\n     * Macro de construction d'un triangle à partir des longueurs des deux côtés d'un angle Le premier point a pour coordonnées (6,0).\n     * @param {string} ABC Une chaine de caractère de 3 lettre\n     * @param {*} AB Distance entre le 1er et le 2e sommet\n     * @param {*} AC Distance entre le 1er et le 3e sommet\n     * @param {*} BAC Angle au 1er sommet\n     * @param {boolean} description Affichage d'un texte descriptif des étapes de la construction\n     * @return {array} [A, B, C] les 3 sommets du triangle (objets MathALEA2D)\n     */\nexport const triangle2longueurs1angle = function (NOM, AB, AC, BAC, description = true, mesure = false) {\n  const angle = randint(-20, 20)\n  const a1 = BAC\n  const A = point(6, 0)\n  const B = pointAdistance(A, AB, angle)\n  const D = pointAdistance(A, 5.2, a1 + angle)\n  const D2 = pointSurSegment(A, D, 10)\n  const D1 = pointSurSegment(D, D2, 0.4)\n  const C = pointSurSegment(A, D2, AC)\n  if (NOM.length !== 3) {\n    description = false\n  } else {\n    A.nom = NOM[0]\n    B.nom = NOM[1]\n    C.nom = NOM[2]\n  }\n  this.couleur = 'blue'\n  this.epaisseur = 3\n  this.pointCreer(A)\n  if (description) this.textePosition(`On trace le côté [${A.nom + B.nom}] de ${nombreAvecEspace(AB)} cm.`, 0, -4)\n  this.regleSegment(A, B)\n  this.pointCreer(B)\n  this.couleur = 'grey'\n  this.epaisseur = 1\n  this.rapporteurMontrer(A)\n  this.rapporteurDeplacer(A)\n  this.rapporteurRotation(angle)\n  if (description) this.textePosition(`On place un repère à ${a1} degrés pour tracer la demi-droite [${A.nom + C.nom}).`, 0, -5)\n  this.epaisseur = 3\n  this.trait(D, D1, 20)\n  this.epaisseur = 1\n  this.rapporteurMasquer()\n  this.regleSegment(A, D2)\n  this.angleCodage(B, A, C)\n  this.rapporteurMasquer()\n  if (description) this.textePosition(`On place le point ${C.nom} sur la demi-droite [${A.nom + C.nom}) à ${AC} cm de ${A.nom}.`, 0, -6)\n  this.epaisseur = 3\n  this.couleur = 'blue'\n  this.crayonDeplacer(C)\n  this.pointCreer(C)\n  this.regleSegment(A, C)\n  this.crayonMasquer()\n  if (description) this.textePosition(`On trace le côté [${B.nom + C.nom}].`, 0, -7)\n  this.regleMontrer(C)\n  this.crayonMontrer(C)\n  this.regleSegment(C, B)\n  this.regleMasquer()\n  this.crayonMasquer()\n  return [A, B, C]\n}\n\n/**\n     * Trace un triangle équilatéral à partir de la donnée de 2 points\n     * @param {point} A\n     * @param {point} B\n     * @param {string} nomC\n     * @return {array} [A, B, C]\n     */\nexport const triangleEquilateral2Sommets = function (A, B, nomC = '') {\n  const C = rotation(B, A, 60)\n  C.nom = nomC\n  this.traitRapide(A, B)\n  this.pointCreer(A, A.nom, 0)\n  this.pointCreer(B, B.nom, 0)\n  this.compasEcarter2Points(A, B)\n  this.compasTracerArcCentrePoint(A, C)\n  this.compasTracerArcCentrePoint(B, C)\n  this.pointCreer(C)\n  this.compasMasquer()\n  this.regleSegment(A, C)\n  this.regleSegment(C, B)\n  this.regleMasquer()\n  this.crayonMasquer()\n  this.segmentCodage(A, B)\n  this.segmentCodage(A, C)\n  this.segmentCodage(B, C)\n  return [A, B, C]\n}\n/**\n     * Trace un triangle équilatéral à partir de la donnée de la longueur du côté. Le premier point a pour coordonnées (6;0)\n     * @param {string} NOM\n     * @param {number} AB\n     * @return {array} [A, B, C]\n     */\n\nexport const triangleEquilateral = function (NOM, AB) {\n  const A = point(6, 0)\n  const B = pointAdistance(A, AB, randint(-20, 20))\n  const C = rotation(B, A, 60)\n  if (NOM.length === 3) {\n    A.nom = NOM[0]\n    B.nom = NOM[1]\n    C.nom = NOM[2]\n  }\n  this.regleSegment(A, B)\n  this.pointCreer(A)\n  this.pointCreer(B)\n  this.compasEcarter2Points(A, B)\n  this.compasTracerArcCentrePoint(A, C)\n  this.compasTracerArcCentrePoint(B, C)\n  this.pointCreer(C)\n  this.compasMasquer()\n  this.regleSegment(A, C)\n  this.regleSegment(C, B)\n  this.regleMasquer()\n  this.crayonMasquer()\n  this.segmentCodage(A, B)\n  this.segmentCodage(A, C)\n  this.segmentCodage(B, C)\n  return [A, B, C]\n}\n"],"names":["Alea2iep","constructor","this","idIEP","idHTML","tempo","vitesse","couleur","couleurCompas","couleurTexte","couleurPoint","couleurCodage","couleurTraitsDeConstruction","epaisseur","epaisseurTraitsDeConstruction","pointilles","liste_script","translationX","translationY","xMin","yMin","xMax","yMax","regle","visibilite","position","point","angle","longueur","zoom","crayon","equerre","requerre","rapporteur","compas","orientation","ecartement","leve","xml","x","A","calcul","y","script","length","codeXML","join","html","id1","id2","context","id","window","listeScriptsIep","codeHTML","listeAnimationsIepACharger","push","htmlBouton","toggleVisibilityIEP","element","document","getElementById","elementBtn","style","display","marginTop","innerHTML","iepLoadPromise","autostart","then","iepApp","catch","error","console","log","recadre","xmin","ymax","taille","width","height","montrer","objet","A1","deplacer","regleMontrer","options","crayonMontrer","equerreMontrer","requerreMontrer","compasMontrer","rapporteurMontrer","masquer","regleMasquer","crayonMasquer","equerreMasquer","requerreMasquer","compasMasquer","rapporteurMasquer","regleDeplacer","texteDeplacer","crayonDeplacer","equerreDeplacer","requerreDeplacer","compasDeplacer","rapporteurDeplacer","rotation","a","sens","typeObjet","droite","angleAvecHorizontale","isFinite","regleRotation","crayonRotation","equerreRotation","requerreRotation","compasRotation","rapporteurRotation","regleZoom","k","equerreZoom","requerreZoom","rapporteurZoom","compasZoom","pointCreer","dx","dy","label","nom","couleurLabel","M","textePoint","pointsCreer","args","enleveDernier","arr","slice","pointMasquer","undefined","pointMontrer","pointDeplacer","B","pointNommer","compasRetourner","compasEcarter","l","compasEcarterAvecRegle","compasEcarter2Points","s","segment","isVisible","compasLever","compasCoucher","compasTracerArc2Angles","angle1","angle2","pointillesTexte","Math","abs","sensTexte","compasTracerArcCentrePoint","centre","delta","visibility","compasCercleCentrePoint","requerreGlisserEquerre","rapporteurMasquerGraduationsExterieures","rapporteurMontrerGraduationsExterieures","rapporteurMasquerGraduationsInterieures","rapporteurMontrerGraduationsInterieures","rapporteurDeplacerRotation2Points","d","rapporteurCrayonMarqueAngle","O","pointAdistance","N","tracer","rapporteurTracerDemiDroiteAngle","B2","regleDemiDroiteOriginePoint","regleMasquerGraduations","regleMontrerGraduations","regleModifierLongueur","pointSurSegment","regleSegment","regleDroite","homothetie","regleProlongerSegment","B1","A2","vecteur","vecteurTexte","trait","traitRapide","traitMasquer","arg1","arg2","arg3","extremite1","extremite2","polygoneTracer","sommets","i","polygoneRapide","texte","police","couleurFond","opaciteFond","couleurCadre","epaisseurCadre","marge","margeGauche","margeDroite","margeHaut","margeBas","policeTexte","textePosition","longueurSegment","v","w","norme","ancrage","translation","mesureAngle","angleOriente","C","texteMasquer","Number","isNaN","texteChangeCouleur","pause","segmentCodage","codage","milieu","segmentCodageMasquer","segmentCodageMontrer","codageAngleDroit","C1","translation2Points","options1","codageAngleDroitMasquer","angleCodage","rayon","d1","d2","angleCodageMasquer","angleCodageMontrer","image","url","prototype","symetrieAxialePoint","parallelogramme3sommetsConsecutifs","parallelogramme2sommetsConsecutifsCentre","parallelogrammeAngleCentre","partageSegment","paralleleRegleEquerre2points3epoint","perpendiculaireRegleEquerre2points3epoint","perpendiculaireRegleEquerreDroitePoint","perpendiculaireRegleEquerrePointSurLaDroite","perpendiculaireCompasPointSurLaDroite","perpendiculaireCompasPoint","paralleleRegleEquerreDroitePointAvecDescription","paralleleAuCompasAvecDescription","paralleleAuCompas","mediatriceAuCompas","mediatriceRegleEquerre","hauteur","mediane","bissectriceAuCompas","cercleCirconscrit","triangle3longueurs","triangleRectangleCoteHypotenuse","triangleRectangle2Cotes","triangle1longueur2angles","triangle2longueurs1angle","triangleEquilateral2Sommets","triangleEquilateral","carre1point1longueur","rotationPoint","translationPoint","demiTourPoint","homothetiePoint","rotationPolygone","symetrieAxialePolygone","translationPolygone","demiTourPolygone","homothetiePolygone","longueur1","longueur2","coderFigure","O2","arc1","arc2","arc3","arc4","O3","H","projectionOrtho","G","D","masquerTraitsDeConstructions","couleurMediatrice","couleurCercle","m1","m2","m3","centreCercleCirconscrit","H1","droiteParPointEtParallele","C12","description","longueurRegle","zoomEquerre","dist","appartientDroite","dd","droiteParPointEtPerpendiculaire","pointIntersectionLC","cercle","max","P1","P2","P","estSurDroite","pointSurDroite","P3","alpha","similitude","P11","P12","dessus","AA","BB","nomD","csDejaTraces","min","nomC","D1","n","distance","monAngle","nommerGraduations","Ax","m","c","randint","E","F","polygoneAvecNom","p","symetrieAxiale","choix1","choix2","marques","marque1","marque2","positionTexte","couleurSave","t","arrondi","lprime","t1","texNombre","t2","noms","p2","sommet","listePoints","ABC","AB","AC","BC","triangle2points2longueurs","nombreAvecEspace","dAB","dBC","cAC","cBC","NOM","BAC","CBA","mesure","a1","a2","D2","E2","E1","F1","pointIntersectionDD"],"sourceRoot":""}