{"version":3,"file":"js/93061.2ea01d35473ce1766b6e.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R20.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureNombreRelatif, ecritureNombreRelatifc, ecritureAlgebrique, texNombre } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, propositionsQcm, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\n\nexport const amcReady = true\nexport const amcType = 'qcmMono' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = ['qcm', 'mathlive']\n\nexport const titre = 'Addition de deux entiers relatifs'\n\n/**\n* Additionner deux relatifs inférieurs à la valeur maximale en paramètre qui est par défaut à 20.\n*\n* Paramètre supplémentaire ; utilisation des écritures simplifiées\n* @author Rémi Angot\n* 5R20\n*/\nexport default function ExerciceAdditionsRelatifs (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.consigne = 'Calculer :'\n  this.spacing = 2\n  this.modeQcm = false\n  this.sup3 = false\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.interactifType = this.sup3 ? 'qcm' : 'mathLive'\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    for (let i = 0, a, b, k, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(1, this.sup)\n      b = randint(1, this.sup)\n      k = choice([[-1, -1], [-1, 1], [1, -1]]) // Les deux nombres relatifs ne peuvent pas être tous les deux positifs\n      a = a * k[0]\n      b = b * k[1]\n      if (this.sup2) {\n        texte = `$ ${texNombre(a)}${ecritureAlgebrique(b)} = \\\\dotfill $`\n        texteCorr = `$ ${a}${ecritureAlgebrique(b)} = ${a + b} $`\n      } else {\n        texte = '$ ' + ecritureNombreRelatif(a) + ' + ' + ecritureNombreRelatif(b) + ' = \\\\dotfill $'\n        texteCorr = '$ ' + ecritureNombreRelatifc(a) + ' + ' + ecritureNombreRelatifc(b) + ' = ' + ecritureNombreRelatifc(a + b) + ' $'\n      }\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].options = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${a + b}$`,\n          statut: true\n        },\n        {\n          texte: `$${a - b}$`,\n          statut: false\n        },\n        {\n          texte: `$${-a + b}$`,\n          statut: false\n        },\n        {\n          texte: `$${-a - b}$`,\n          statut: false\n        }\n      ]\n      if (this.sup3) {\n        texte += propositionsQcm(this, i).texte\n      } else {\n        texte = texte.replace('\\\\dotfill $', '$' + ajouteChampTexteMathLive(this, i))\n        setReponse(this, i, a + b)\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n  if (context.isHtml) this.besoinFormulaire3CaseACocher = ['QCM']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","ExerciceAdditionsRelatifs","max","Exercice","this","sup","sup2","consigne","spacing","modeQcm","sup3","nouvelleVersion","parseInt","listeQuestions","listeCorrections","autoCorrection","a","b","k","texte","texteCorr","i","cpt","nbQuestions","randint","choice","texNombre","ecritureAlgebrique","ecritureNombreRelatif","ecritureNombreRelatifc","options","enonce","propositions","statut","propositionsQcm","replace","ajouteChampTexteMathLive","setReponse","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","context","besoinFormulaire3CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}