{"version":3,"file":"js/8310.5cd6c343b11ffa36a3bc.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5S21-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["/* eslint-disable camelcase */\n\nimport Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, texNombrec } from '../../modules/outils.js'\nexport const titre = 'Probabilités simples'\n/**\n * Description didactique de l'exercice\n * @author Rémi Angot et Matthieu Devillers\n * Référence 5S21-1\n * Publié le 1/5/2021\n*/\nexport default function ProbabilitesSimples () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = 'Probabilités simples'\n  this.consigne = ''\n  this.nbQuestionsModifiable = false\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  // this.sup = 1  // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const pG = randint(20, 60) // pG est un pourcentage\n    const pN = randint(10, 100 - pG - 10)\n    // const pP = 100 - pG - pN\n    const sport = choice(['hand-ball', 'football', 'rugby', 'basket', 'volley-ball', 'water-polo', 'baseball'])\n    this.consigne = `Lors d'un match de ${sport}, l'équipe qui reçoit un adversaire a une probabilité de ${texNombrec(pG / 100)} de gagner son match`\n    this.consigne += ` et ${texNombrec(pN / 100)} de faire un match nul.`\n\n    const question1 = 'Quelle est la probabilité, pour cette équipe, de ne pas perdre le match ?'\n    let correction1 = 'Ne pas perdre un match, c\\'est, soit le gagner, soit faire un match nul, la probabilité est donc : <br> <br>'\n    correction1 += '$\\\\text{P(\"Ne pas perdre le match\")} = \\\\text{P(\"Gagner le match\") + } \\\\text{P(\"Match nul\")}$ <br>'\n    correction1 += `$\\\\phantom{\\\\text{P(\"Ne pas perdre le match\")}} = ${texNombrec(pG / 100)} + ${texNombrec(pN / 100)}$ <br> `\n    correction1 += `$\\\\phantom{\\\\text{P(\"Ne pas perdre le match\")}}= ${texNombrec((pG + pN) / 100)}$  <br>`\n    const question2 = 'Quelle est la probabilité, pour cette équipe, de perdre le match ?'\n    let correction2 = 'L\\'évènement \"Perdre le match\" est l\\'évènement contraire de \"Ne pas perdre le match\", on peut donc affirmer que : <br> <br>'\n    correction2 += '$ \\\\text{P(\"Perdre le match\") + } \\\\text{P(\"Ne pas perdre le match\")} = 1$ <br>'\n    correction2 += '$ \\\\phantom{\\\\text{P(\"Ne pas perdre le match\") + }} \\\\text{P(\"Perdre le match\")} = 1 - \\\\text{P(\"Ne pas perdre le match\")}$ <br>'\n    correction2 += `$ \\\\phantom{\\\\text{P(\"Ne pas perdre le match\") + }} \\\\text{P(\"Perdre le match\")} = 1 - ${texNombrec((pG + pN) / 100)}$  <br>`\n    correction2 += `$ \\\\phantom{\\\\text{P(\"Ne pas perdre le match\") + }} \\\\text{P(\"Perdre le match\")} = ${texNombrec(1 - (pG + pN) / 100)}$ <br>`\n\n    this.listeQuestions.push(question1, question2)\n    this.listeCorrections.push(correction1, correction2)\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 3]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ProbabilitesSimples","Exercice","this","consigne","nbQuestionsModifiable","nbCols","nbColsCorr","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","pG","randint","pN","sport","choice","texNombrec","correction1","correction2","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}