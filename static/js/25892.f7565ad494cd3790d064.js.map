{"version":3,"file":"js/25892.f7565ad494cd3790d064.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6M20.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import { longueur, segment, mathalea2d, afficheLongueurSegment, afficheCoteSegment, codageAngleDroit, polygoneAvecNom, triangle2points1hauteur, point, rotation } from '../../modules/2d.js'\nimport { combinaisonListesSansChangerOrdre, creerNomDePolygone, listeQuestionsToContenu, randint, shuffle, texNombre, calcul } from '../../modules/outils.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Calculer l\\'aire de triangles'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n/**\n * Calculer l'aire de 3 triangles dont une hauteur est tracée.\n *\n * Une figure dynamique est disponible sur laquelle on peut déplacer le pied de la hauteur.\n *\n * @author Rémi Angot conversion mathalea2d Jean-Claude Lhote\n * Référence 6M20\n */\nexport default function AireDeTriangles () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.titre = titre\n  this.consigne =\n    \"Calculer l'aire des 3 triangles suivants.\"\n  this.spacing = 2\n  // eslint-disable-next-line no-undef\n  context.isHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 2)\n  this.nbQuestions = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nbQuestionsModifiable = false\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.listeQuestions = []\n    this.autoCorrection = []\n    const tableauDesCotes = shuffle([5, 6, 7, 8, 9]) // pour s'assurer que les 3 côtés sont différents\n    const tableauDesHauteurs = shuffle([3, 4, 5, 6]) // pour s'assurer que les 3 hauteurs sont différents\n    const cotes = combinaisonListesSansChangerOrdre(tableauDesCotes, this.nbQuestions)\n    const hauteurs = combinaisonListesSansChangerOrdre(tableauDesHauteurs, this.nbQuestions)\n    let triH; const A = point(0, 0); let B; let C; let H; let triangle; let polynom; let hauteurpoly; let d\n    const objetsEnonce = []; const objetsCorrection = []; let xmin; let xmax; let ymin; let ymax\n    let texte = ''; let texteCorr = ''\n\n    const nom = creerNomDePolygone(4 * this.nbQuestions, 'Q')\n\n    for (let i = 0; i < this.nbQuestions; i++) {\n      objetsEnonce.length = 0\n      objetsCorrection.length = 0\n      A.nom = nom[i * 4]\n      B = rotation(point(cotes[i], 0), A, randint(-60, 60), nom[i * 4 + 1])\n      if (i % 3 === 2) {\n        d = longueur(A, B) + randint(6, 9) / 3\n      } else {\n        d = calcul(randint(6, longueur(A, B) * 10 - 6) / 10)\n      }\n      triH = triangle2points1hauteur(A, B, hauteurs[i], d, 2)\n      H = triH.pied\n      H.nom = nom[i * 4 + 3]\n      triangle = triH.triangle\n      C = triangle.listePoints[2]\n      C.nom = nom[i * 4 + 2]\n      polynom = polygoneAvecNom(A, H, B, C)\n      hauteurpoly = segment(C, H)\n      hauteurpoly.pointilles = 2\n      xmin = Math.min(A.x, B.x, C.x, H.x) - 1.5\n      xmax = Math.max(A.x, B.x, C.x, H.x) + 1.5\n      ymin = Math.min(A.y, B.y, C.y, H.y) - 2\n      ymax = Math.max(A.y, B.y, C.y, H.y) + 1.5\n      objetsEnonce.push(polynom[0], polynom[1], hauteurpoly, afficheCoteSegment(segment(B, A), '', 1), afficheLongueurSegment(A, C, 'black', 0.5), afficheLongueurSegment(C, B, 'black', 0.5), afficheLongueurSegment(C, H, 'black', 0.3), codageAngleDroit(A, H, C))\n      objetsCorrection.push(polynom[0], polynom[1], hauteurpoly, afficheCoteSegment(segment(B, A), '', 1), afficheLongueurSegment(C, H, 'black', 0.3), codageAngleDroit(A, H, C))\n      texte = mathalea2d({ xmin: xmin, xmax: xmax, ymin: ymin, ymax: ymax, pixelsParCm: 20, scale: 0.5, mainlevee: false }, objetsEnonce) + '<br>'\n      if (this.correctionDetaillee) { texteCorr = mathalea2d({ xmin: xmin, xmax: xmax, ymin: ymin, ymax: ymax, pixelsParCm: 20, scale: 0.5, mainlevee: false }, objetsCorrection) + '<br>' } else texteCorr = ''\n      texteCorr += `$\\\\mathcal{A}_{${A.nom}${B.nom}${C.nom}}=\\\\dfrac{1}{2}\\\\times ${A.nom}${B.nom}\\\\times ${H.nom}${C.nom}=\\\\dfrac{1}{2}\\\\times${cotes[i]}~\\\\text{cm}\\\\times ${hauteurs[i]}~\\\\text{cm}=${texNombre(\n      calcul((cotes[i] * hauteurs[i]) / 2)\n    )}~\\\\text{cm}^2$`\n      setReponse(this, i, calcul((cotes[i] * hauteurs[i]) / 2))\n      texte += ajouteChampTexteMathLive(this, i)\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","AireDeTriangles","Exercice","this","consigne","spacing","context","spacingCorr","nbQuestions","nbCols","nbColsCorr","nbQuestionsModifiable","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","numeroExercice","listeCorrections","listeQuestions","autoCorrection","tableauDesCotes","shuffle","tableauDesHauteurs","cotes","combinaisonListesSansChangerOrdre","hauteurs","triH","A","point","B","C","H","triangle","polynom","hauteurpoly","d","objetsEnonce","objetsCorrection","xmin","xmax","ymin","ymax","texte","texteCorr","nom","creerNomDePolygone","i","length","rotation","randint","longueur","calcul","triangle2points1hauteur","pied","listePoints","polygoneAvecNom","segment","pointilles","Math","min","x","max","y","push","afficheCoteSegment","afficheLongueurSegment","codageAngleDroit","mathalea2d","pixelsParCm","scale","mainlevee","texNombre","setReponse","ajouteChampTexteMathLive","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}