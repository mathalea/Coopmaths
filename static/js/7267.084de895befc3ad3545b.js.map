{"version":3,"file":"js/7267.084de895befc3ad3545b.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R20-5.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, ecritureAlgebrique } from '../../modules/outils.js'\nexport const titre = 'Additions de deux entiers relatifs dans un tableau à double entrée'\n\n/**\n* Effectuer des additions de relatifs dans un tableau à double entrée\n*\n* @author Rémi Angot\n* 5R20-5\n*/\nexport default function ExerciceTableauAdditionsRelatifs () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Calculer'\n  this.spacing = 1\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const listeSignes1 = combinaisonListes([-1, 1], 4)\n    let a1 = randint(2, 9)\n    let a2 = randint(2, 9, a1)\n    let a3 = randint(2, 9, [a1, a2])\n    let a4 = randint(2, 9, [a1, a2, a3])\n    let b1 = randint(2, 9)\n    let b2 = randint(2, 9, b1)\n    let b3 = randint(2, 9, [b1, b2])\n    let b4 = randint(2, 9, [b1, b2, b3])\n    a1 *= listeSignes1[0]\n    a2 *= listeSignes1[1]\n    a3 *= listeSignes1[2]\n    a4 *= listeSignes1[3]\n    b1 *= listeSignes1[0]\n    b2 *= listeSignes1[1]\n    b3 *= listeSignes1[2]\n    b4 *= listeSignes1[3]\n\n    const texte = `$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c|c|c|c|c|}\n    \\\\hline\n    + & ${ecritureAlgebrique(a1)} & ${ecritureAlgebrique(a2)} & ${ecritureAlgebrique(a3)} & ${ecritureAlgebrique(a4)} \\\\\\\\\n    \\\\hline\n    ${ecritureAlgebrique(b1)} &  &  & &  \\\\\\\\\n    \\\\hline\n    ${ecritureAlgebrique(b2)} & & & & \\\\\\\\\n    \\\\hline\n    ${ecritureAlgebrique(b3)} & & & & \\\\\\\\\n    \\\\hline\n    ${ecritureAlgebrique(b4)} & & & & \\\\\\\\\n    \\\\hline\n    \\\\end{array}$`\n\n    const texteCorr = `$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c|c|c|c|c|}\n    \\\\hline\n    + & ${ecritureAlgebrique(a1)} & ${ecritureAlgebrique(a2)} & ${ecritureAlgebrique(a3)} & ${ecritureAlgebrique(a4)} \\\\\\\\\n    \\\\hline\n    ${ecritureAlgebrique(b1)} & ${ecritureAlgebrique(a1 + b1)} & ${ecritureAlgebrique(a2 + b1)} & ${ecritureAlgebrique(a3 + b1)} & ${ecritureAlgebrique(a4 + b1)} \\\\\\\\\n    \\\\hline\n    ${ecritureAlgebrique(b2)} & ${ecritureAlgebrique(a1 + b2)} & ${ecritureAlgebrique(a2 + b2)} & ${ecritureAlgebrique(a3 + b2)} & ${ecritureAlgebrique(a4 + b2)} \\\\\\\\\n    \\\\hline\n    ${ecritureAlgebrique(b3)} & ${ecritureAlgebrique(a1 + b3)} & ${ecritureAlgebrique(a2 + b3)} & ${ecritureAlgebrique(a3 + b3)} & ${ecritureAlgebrique(a4 + b3)} \\\\\\\\\n    \\\\hline\n    ${ecritureAlgebrique(b4)} & ${ecritureAlgebrique(a1 + b4)} & ${ecritureAlgebrique(a2 + b4)} & ${ecritureAlgebrique(a3 + b4)} & ${ecritureAlgebrique(a4 + b4)} \\\\\\\\\n    \\\\hline\n\\\\end{array}$`\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ExerciceTableauAdditionsRelatifs","Exercice","this","consigne","spacing","nbQuestions","nbQuestionsModifiable","nouvelleVersion","listeQuestions","listeCorrections","listeSignes1","combinaisonListes","a1","randint","a2","a3","a4","b1","b2","b3","b4","texte","ecritureAlgebrique","texteCorr","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}