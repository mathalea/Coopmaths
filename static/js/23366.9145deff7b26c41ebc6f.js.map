{"version":3,"file":"js/23366.9145deff7b26c41ebc6f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/c3/canc3C05.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { context } from '../../../modules/context'\nimport { propositionsQcm } from '../../../modules/gestionInteractif'\nimport { choice, listeQuestionsToContenu, randint, texNombre, texteEnCouleur } from '../../../modules/outils'\nimport Exercice from '../../Exercice'\nexport const titre = 'Déterminer si un nombre est pair (V/F)'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\nexport const amcReady = true\nexport const amcType = 'qcmMono'\nexport const dateDePublication = '20/11/2021'\n\n/*!\n * @author Jean-Claude Lhote\n * Référence canc3C05\n */\nexport default function PariteDunNombre () {\n  Exercice.call(this)\n  this.nbQuestions = 1\n  this.formatChampTexte = 'largeur15 inline'\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let a, b, c, d, e, f, g, texte, texteCorr\n    switch (choice([1, 2, 3, 4, 5])) {\n      case 1:\n        a = randint(10, 20) * 10\n        b = randint(0, 9)\n        c = randint(30, 60) * 10\n        d = randint(1, 9)\n        e = a + b\n        f = c + d\n        g = e + f\n        texte = `Le nombre $${e}+${f}$ est-il pair ?`\n        texteCorr = `$${e}$ est un nombre ${e % 2 === 0 ? 'pair' : 'impair'} car il a $${b}$ comme chiffre des unités.<br>`\n        texteCorr += `$${f}$ est un nombre ${f % 2 === 0 ? 'pair' : 'impair'} car il a $${d}$ comme chiffre des unités.<br>`\n        texteCorr += `La somme ${e % 2 === 0 && f % 2 === 0 ? 'de deux nombres pairs' : e % 2 === 1 && f % 2 === 1 ? 'de deux nombres impairs' : 'd\\'un nombre impair et d\\'un nombre pair'} est ${g % 2 === 0 ? 'paire' : 'impaire'}.<br>`\n        texteCorr += texteEnCouleur(`Mentalement on ajoute seulement les chiffres des unités des deux nombres : $${b}+${d}=${b + d}$`)\n        texteCorr += `<br>Donc le nombre $${e}+${f}$ est ${g % 2 === 0 ? 'pair' : 'impair'}.`\n        break\n      case 2:\n        a = randint(10, 20) * 10\n        b = randint(1, 9)\n        c = randint(10, 20) * 10\n        d = randint(1, 4) * 2 + 1\n        if (choice([true, false])) {\n          e = a + b\n          f = c + d\n        } else {\n          f = a + b\n          e = c + d\n        }\n        g = e * f\n        texte = `Le nombre $${e}\\\\times ${f}$ est-il pair ?`\n        texteCorr = `$${e}\\\\times ${f}$ est un nombre ${g % 2 === 0 ? 'pair' : 'impair'}.<br>En effet, son chiffre des unités s'obtient en multipliant le chiffre des unités de ${e} et celui de ${f}.<br>`\n        texteCorr += `Donc le chiffre des unités de $${e} \\\\times ${f}$ est celui de $${e % 10}\\\\times ${f % 10}=${b * d}$ soit $${g % 10}$.<br>`\n        break\n      case 3:\n        a = choice([randint(101, 109) * 4, randint(111, 119) * 4, randint(121, 129) * 4])\n        b = choice([0, 2])\n        e = a + b\n        g = e >> 1\n        texte = `Le nombre $${e}\\\\div 2$ est-il pair ?`\n        texteCorr = `On va retirer le plus grand multiple de 20 possible de $${e}$ :<br>`\n        texteCorr += `Dans ${e} il va $${Math.floor(e / 20)}\\\\times 20=${e - e % 20}$ et il reste ${e % 20}.<br>`\n        texteCorr += `Si on divise $${e % 20}$ par $2$ on trouve $${texNombre((e % 20) / 2)}$ qui est un nombre ${g % 2 === 0 ? 'pair' : 'impair'}.<br>`\n        texteCorr += `Or, $${e}\\\\div 2= (${e - e % 20} + ${e % 20})\\\\div 2 =${(e - e % 20) >> 1} + ${(e % 20) >> 1}=${e >> 1}$.<br>`\n        texteCorr += `Donc le nombre $${e}\\\\div 2$ est ${g % 2 === 0 ? 'pair' : 'impair'}.`\n        break\n      case 4:\n        a = randint(10, 20) * 10\n        b = randint(0, 9)\n        c = randint(30, 60) * 10\n        d = randint(1, 9)\n        e = a + b\n        f = c + d\n        g = f - e\n        texte = `Le nombre $${f}-${e}$ est-il pair ?`\n        texteCorr = `$${f}$ est un nombre ${f % 2 === 0 ? 'pair' : 'impair'} car il a $${d}$ comme chiffre des unités.<br>`\n        texteCorr += `$${e}$ est un nombre ${e % 2 === 0 ? 'pair' : 'impair'} car il a $${b}$ comme chiffre des unités.<br>`\n        texteCorr += `La différence ${e % 2 === 0 && f % 2 === 0 ? 'de deux nombres pairs' : e % 2 === 1 && f % 2 === 1 ? 'de deux nombres impairs' : 'd\\'un nombre impair et d\\'un nombre pair'} est ${g % 2 === 0 ? 'paire' : 'impaire'}.<br>`\n        texteCorr += texteEnCouleur(`Mentalement on soustrait les chiffres des unités des deux nombres ${d < b ? '(en empruntant une dizaine à $' + f + '$) ' : ''} : $${d < b ? d + 10 : d} - ${b}=${g % 10}$`)\n        texteCorr += `<br>Donc le nombre $${f}-${e}$ est ${g % 2 === 0 ? 'pair' : 'impair'}.`\n        break\n      case 5:\n        a = randint(3, 7)\n        b = a % 2 === 0 ? randint(1, 4) * 2 + 1 : randint(2, 9)\n        g = b ** a\n        texte = `Le nombre $${b}`\n        for (let i = 1; i < a; i++) {\n          texte += `\\\\times ${b}`\n        }\n        texte += '$ est-il pair ?'\n        if (b % 2 === 0) {\n          texteCorr = `$${b}$ est un nombre pair. Le produit de deux nombres pairs est un nombre pair.<br>`\n          texteCorr += 'Ainsi, les multiplications successives donnent toujours un résultat pair.<br>'\n          texteCorr += `Donc ${texte.replace('L', 'l').replace('est-il', 'est').replace('?', '')}.`\n        } else {\n          texteCorr = `$${b}$ est un nombre impair. Le produit de deux nombres impairs est un nombre impair.<br>`\n          texteCorr += 'Ainsi, les multiplications successives donnent toujours un résultat impair.<br>'\n          texteCorr += `Donc ${texte.replace('L', 'l').replace('est-il', 'est').replace('?', '').replace('pair', 'impair')}.`\n        }\n        break\n    }\n    this.autoCorrection[0] = {\n      enonce: texte,\n      options: { vertical: true },\n      propositions: [\n        {\n          texte: 'Oui',\n          statut: g % 2 === 0\n        },\n        {\n          texte: 'Non',\n          statut: g % 2 === 1\n        }\n      ]\n    }\n    if (!context.isAmc) {\n      texte += propositionsQcm(this, 0).texte\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","dateDePublication","PariteDunNombre","formatChampTexte","a","b","c","d","e","f","g","texte","texteCorr","choice","randint","texteEnCouleur","Math","floor","texNombre","replace","enonce","options","vertical","propositions","statut","context","propositionsQcm","listeQuestionsToContenu"],"sourceRoot":""}