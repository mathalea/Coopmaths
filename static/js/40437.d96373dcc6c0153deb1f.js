"use strict";(self.webpackChunkmathalea=self.webpackChunkmathalea||[]).push([[40437,25523],{40437:(e,t,s)=>{s.r(t),s.d(t,{titre:()=>a,interactifReady:()=>l,interactifType:()=>c,amcReady:()=>$,amcType:()=>p,default:()=>v});var n=s(25523),i=s(22380),r=s(25482),o=s(11945),u=s(3923);const a="Résoudre des problèmes de proportionnalité en utilisant la proportionnalité simple",l=!0,c="mathLive",$="true",p="AMCNum";let m,h=!1;const d=[[3,4],[3,5],[3,7],[6,7],[3,8],[7,8],[7,9],[3,10],[7,10],[9,10],[3,11],[6,11],[7,11],[9,11],[7,12],[9,12],[11,12],[3,13],[6,13],[7,13],[9,13],[11,13],[12,13]];function b(e,t){const s=[[]],n=[[]],i=[[]];s[0]=["articles","outils","accessoires","pièces d'outillage","pinceaux","ampoules","tournevis","spatules","raccords de tuyaux"],n[0]=["un seul article","un seul outil","un seul accessoire","une seule pièce d'outillage","un seul pinceau","une seule ampoule","un seul tournevis","une seule spatule","un seul raccord de tuyaux"],s[1]=["poissons rouges","cannetons","perruches","phasmes","colliers anti-puces","souris","lapereaux","paquets de graines"],n[1]=["un seul poisson rouge","un seul canneton","une seule perruche","un seul phasme","un seul collier anti-puces","une seule souris","un seul lapereau","un seul paquet de graines"],s[2]=["sets de tables","verres","assiettes","os à mâcher","dosettes de café","packs de lait","paquets de pâtes"],n[2]=["un seul set de table","un seul verre","une seule assiette","un seul os à mâcher","une seule dosette de café","un seul pack de lait","un seul paquet de pâtes"],s[3]=["mangues","ananas","fruits de la passion","melons","paquets de madeleines de Commercy","bergamotes","bredeles","pots de cancoillotte"],n[3]=["une seule mangue","un seul ananas","un seul fruit de la passion","un seul melon","un seul paquet de madeleines de Commercy","une seule bergamote","un seul bredele","un seul pot de cancoillotte"],s[4]=["cartes","livres","gravures","puzzles","maquettes","roches","jeux de société"],n[4]=["une seule carte","un seul livre","une seule gravure","un seul puzzle","une seule maquette","une seule roche","un seul jeu de société"],i[0]=[5,4,1.25,3,.5,1.5,2,6,4.5],i[1]=[1.5,7,20,2.5,25,2,15,8],i[2]=[1.25,1.5,2,.5,5,4.5,3],i[3]=[2,2.5,1.25,1.5,4,7,12,3],i[4]=[.5,5,7,13.5,10,15,20];const u=(0,r.nSR)(0,4),a=[(0,r.sTI)(),(0,r.nHh)()],l=(0,r.nSR)(0,s[u].length-1),c=s[u][l],$=i[u][l]*(1+.2*(0,r.nSR)(1,2)*(0,r.nSR)(-1,1)),p=d[m][0],b=d[m][1];let K;K=h?(0,r.n0o)(p*(0,r.nSR)(2,5)):(0,r.n0o)(p*$,2);let k,q=!1;for(;!1===q;)k=p*(0,r.nSR)(2,5),k!==b&&(q=!0);const f=`${a[0]} a repéré, ${["dans un magasin de bricolage","dans une animalerie","au supermarché local","à l'épicerie","dans la boutique du musée"][u]}, des ${c} qui l'intéressent.<br>\n  Elle lit que ${p} ${c} coûtent ${(0,r.i6h)(K)} €. Elle veut en acheter ${b}.<br>\n  Combien va-t-elle dépenser ?`+(0,o.G5)(e,t,"largeur25 inline",{texteApres:" €"}),g=`Commençons par trouver le prix d'${n[u][l]}. <br>Si ${p} ${c} coûtent ${(0,r.i6h)(K)} €, alors ${n[u][l]} coûte ${(0,r.pRK)(p)} fois moins cher.<br>${(0,r.i6h)(K)} € $\\div $ ${(0,r.pRK)(p)} = ${(0,r.i6h)(K/p)} € <br>`+(0,r.PH8)(" Conclusion intermédiaire : ","black")+`${n[u][l]} coûte ${(0,r.pRK)((0,r.i6h)(K/p),"blue")} €.<br>`+`Cherchons maintenant le prix de ${b} ${c}. <br>`+`${b} ${c}, c'est ${(0,r.pRK)(b)} fois plus qu'${n[u][l]}. <br>`+`${b} ${c} coûtent donc ${(0,r.pRK)(b)} fois plus que ${(0,r.pRK)((0,r.i6h)(K/p),"blue")} €, le prix d'${n[u][l]}.`+`<br> ${(0,r.pRK)((0,r.i6h)(K/p),"blue")} € $\\times$ ${(0,r.pRK)(b)} = ${(0,r.i6h)(K*b/p)} €<br>`+` ${(0,r.PH8)("Conclusion :","black")} ${b} ${c} coûtent ${(0,r.i6h)(K*b/p)} €.`;return(0,o.Iq)(e,t,(0,r.n0o)(K*b/p)),{qtexte:f,qtexteCorr:g}}function K(e,t){const s=[{ingredient:"farine",recettes:["gateau au citron","gauffres","crêpes","cake"],quantites_par_pers:[20,25,30,35,40,50]},{ingredient:"sucre",recettes:["gateau","mousse au chocolat","pain perdu","riz au lait"],quantites_par_pers:[15,20,25,30,35]},{ingredient:"chocolat",recettes:["gateau","mousse au chocolat","flan","riz au lait"],quantites_par_pers:[10,15,20,25,30,35]},{ingredient:"beurre",recettes:["gateau","mousse au chocolat"],quantites_par_pers:[10,12,15,18]}],n=d[m][0],i=d[m][1],a=(0,r.nSR)(0,3),l=(0,r.nSR)(0,s[a].recettes.length-1),c=(0,r.nSR)(0,s[a].quantites_par_pers.length-1),$=(0,r.n0o)(s[a].quantites_par_pers[c]*n),p=(0,r.n0o)(s[a].quantites_par_pers[c]*i),h=[(0,r.sTI)(),(0,r.nHh)()],b=`${h[0]} lit sur sa recette de ${s[a].recettes[l]}${"multi"===(0,u.sY)()?"<br>":" "}pour ${n} personnes qu'il faut ${(0,r.k$K)($)} g de ${s[a].ingredient}. <br>Elle veut adapter sa recette pour ${i} personnes.<br> Quelle masse de ${s[a].ingredient} doit-elle prévoir ?`+(0,o.G5)(e,t,"largeur25 inline",{texteApres:" g"}),K=`Commençons par trouver la masse de ${s[a].ingredient} pour une personne. <br> ${n} personnes, c'est ${(0,r.pRK)(n)} fois 1 personne. il faut donc ${(0,r.pRK)(n)} fois moins que ${(0,r.k$K)($)} g pour 1 personne.<br>${(0,r.k$K)($)} g $\\div $ ${(0,r.pRK)(n)} = ${s[a].quantites_par_pers[c]} g <br>`+(0,r.PH8)(" Conclusion intermédiaire :","black")+` il faut ${(0,r.pRK)(s[a].quantites_par_pers[c],"blue")} g de ${s[a].ingredient} pour 1 personne. <br>`+` Cherchons maintenant la quantité nécessaire pour ${i} personnes. <br>`+` ${i} personnes, c'est ${(0,r.pRK)(i)} fois 1 personne. <br>`+`Donc, il faut ${(0,r.pRK)(i)} fois plus que ${s[a].quantites_par_pers[c]} g de ${s[a].ingredient} que pour 1 personne pour faire sa recette.`+`<br> ${(0,r.pRK)(s[a].quantites_par_pers[c],"blue")} g $\\times$ ${(0,r.pRK)(i)} = ${p} g <br>\n${(0,r.PH8)("Conclusion : ","black")} ${h[0]} doit utiliser ${p} g de ${s[a].ingredient} pour ${i} personnes. `;return(0,o.Iq)(e,t,p),{qtexte:b,qtexteCorr:K}}function k(e,t){let s;const n=[{solute:"sirop",volumeUnitaire:[12,15,18,20],unite_solute:"cL",unite_solvant:["L","L"]},{solute:"nettoyant pour sol",volumeUnitaire:[5,8,10,12],unite_solute:"cL",unite_solvant:["L","L"]},{solute:"médicament",volumeUnitaire:[3,3.5,4,4.5,5,7.5],unite_solute:"mL",unite_solvant:["dL","dL"]},{solute:"produit pour piscine",volumeUnitaire:[1,1.2,.8,1.5],unite_solute:"L",unite_solvant:["dizaine de mètres cubes","dizaines de mètres cubes"]}],i=d[m][0],a=d[m][1],l=(0,r.nSR)(0,3),c=(0,r.nSR)(0,n[l].volumeUnitaire.length-1);let $;$=h?i*(0,r.nSR)(2,5):n[l].volumeUnitaire[c]*i,s=a<2?n[l].unite_solvant[0]:n[l].unite_solvant[1];const p=(0,r.k$K)(a),b=(0,r.k$K)(i),K=`Il est indiqué sur la bouteille de ${n[l].solute} qu'il faut ${"multi"===(0,u.sY)()?"<br>":" "} ${(0,r.k$K)($)} ${n[l].unite_solute} de  ${n[l].solute} pour ${b} ${n[l].unite_solvant[1]} d'eau.<br> On veut utiliser ${p} ${s} d'eau.<br> Quel volume de ${n[l].solute} doit-on prévoir ? `+(0,o.G5)(e,t,"largeur25 inline",{texteApres:" "+n[l].unite_solute}),k=`Commençons par trouver combien est-ce qu'il faut de ${n[l].solute} pour 1 ${n[l].unite_solvant[0]} d'eau. <br> ${i} ${n[l].unite_solvant[1]} d'eau, c'est ${(0,r.pRK)(i)} fois 1 ${n[l].unite_solvant[0]} d'eau. Pour 1 ${n[l].unite_solvant[0]} d'eau, il faut donc ${(0,r.pRK)(i)} fois moins que ${(0,r.k$K)($)} ${n[l].unite_solute}.<br>${(0,r.k$K)($)} ${n[l].unite_solute} $\\div $ ${(0,r.pRK)(i)} = ${(0,r.k$K)($/i)} ${n[l].unite_solute} <br>`+(0,r.PH8)(" Conclusion intermédiaire :","black")+` il faut ${(0,r.pRK)((0,r.k$K)($/i),"blue")} ${n[l].unite_solute} de ${n[l].solute} pour 1 ${n[l].unite_solvant[0]} d'eau. <br>`+` Cherchons maintenant la quantité nécessaire pour ${p} ${s} d'eau. <br>`+` ${p} ${s} d'eau, c'est ${(0,r.pRK)(p)} fois 1 ${n[l].unite_solvant[0]} d'eau.`+` Il faut donc ${(0,r.pRK)(p)} fois plus de ${n[l].solute} que ${(0,r.k$K)($/i)} ${n[l].unite_solute} :`+`<br> ${(0,r.pRK)((0,r.k$K)($/i),"blue")} ${n[l].unite_solute} $\\times$ ${(0,r.pRK)(p)} = ${(0,r.k$K)($/i*a)} ${n[l].unite_solute}<br>`+`${(0,r.PH8)("Conclusion :","black")} il faut prévoir ${(0,r.k$K)($/i*a)} ${n[l].unite_solute} de  ${n[l].solute}.`;return(0,o.Iq)(e,t,(0,r.n0o)($/i*a)),{qtexte:K,qtexteCorr:k}}function q(e,t){const s=[{locomotion:"piéton",vitesse:[3,4,5,6]},{locomotion:"cycliste",vitesse:[12,15,16,17,18,20,22]},{locomotion:"camion",vitesse:[75,77,80,82,85]},{locomotion:"train",vitesse:[125,150,175,185,195]}];let n;n=h?1:(0,r.nSR)(1,19,[10])/10;const i=(0,r.nSR)(0,3),u=d[m][0],a=d[m][1],l=(0,r.nSR)(0,s[i].vitesse.length-1),c=`Un ${s[i].locomotion} parcourt en moyenne $${(0,r.k$K)(s[i].vitesse[l]*u*n)}$ km en ${u} heures.\n  <br> Quelle distance va-t-il parcourir, à la même vitesse, en ${a} heures ?`+(0,o.G5)(e,t,"largeur25 inline",{texteApres:" km"}),$=`Commençons par trouver quelle est la distance parcourue en 1h. <br>\n  1 h, c'est ${(0,r.pRK)(u)} fois moins que ${u} h. \n   En 1 h, le ${s[i].locomotion} parcourt donc une distance ${(0,r.pRK)(u)} fois moins grande qu'en ${u} h.<br>$${(0,r.k$K)(s[i].vitesse[l]*n*u)}$ km $\\div $ ${(0,r.pRK)(u)} = ${(0,r.k$K)(s[i].vitesse[l]*n)} km <br>`+(0,r.PH8)(" Conclusion intermédiaire :","black")+` en 1h, le ${s[i].locomotion} parcourt ${(0,r.pRK)((0,r.k$K)(s[i].vitesse[l]*n),"blue")} km. <br>`+` Cherchons maintenant la distance parcourue en ${a} h. <br>`+` ${a} h, c'est ${(0,r.pRK)(a)} fois 1 h.`+` Le ${s[i].locomotion} parcourt donc ${(0,r.pRK)(a)} fois plus de distance qu'en 1 h.`+`<br> ${(0,r.pRK)((0,r.k$K)(s[i].vitesse[l]*n),"blue")} km $\\times$ ${(0,r.pRK)(a)} = $${(0,r.k$K)(s[i].vitesse[l]*a*n)}$ km <br>`+`${(0,r.PH8)("Conclusion :","black")} le ${s[i].locomotion} parcourra en moyenne $${(0,r.k$K)(s[i].vitesse[l]*a*n)}$ km en ${a} h.`;return(0,o.Iq)(e,t,(0,r.n0o)(s[i].vitesse[l]*a*n)),{qtexte:c,qtexteCorr:$}}function f(e,t){const s=d[m][0];let n=s*(0,r.nSR)(2,5);h||(n*=(0,r.nSR)(1,19,[10])/10);const i=d[m][1],u=[(0,r.sTI)(),(0,r.nHh)()],a=`Sur une carte sur laquelle ${s} cm représente ${(0,r.k$K)(n)} km dans la réalité, <br>\n  ${u[0]} mesure son trajet et elle trouve une distance de ${i} cm. <br>À quelle distance cela correspond dans la réalité ?`+(0,o.G5)(e,t,"largeur25 inline",{texteApres:" km"}),l=`Commençons par trouver à combien de km dans la réalité, 1 cm sur la carte correspond. <br>\n  1 cm, c'est ${(0,r.pRK)(s)} fois moins que ${s} cm.<br>${(0,r.k$K)(n)} km $\\div $ ${(0,r.pRK)(s)} = ${(0,r.k$K)(n/s)} km <br>`+(0,r.PH8)(" Conclusion intermédiaire :","black")+` 1 cm sur la carte correspond donc à ${(0,r.pRK)((0,r.k$K)(n/s),"blue")} km dans la réalité. <br> Cherchons maintenant la distance réelle de son trajet. <br>`+` ${i} cm, c'est ${(0,r.pRK)(i)} fois 1 cm.`+`<br> ${(0,r.pRK)((0,r.k$K)(n/s),"blue")} km $\\times$ ${(0,r.pRK)(i)} = ${(0,r.k$K)(i*n/s)} km<br>`+`${(0,r.PH8)("Conclusion :","black")} son trajet correspond en réalité à une distance de ${(0,r.k$K)(i*n/s)} km.`;return(0,o.Iq)(e,t,(0,r.n0o)(i*n/s)),{qtexte:a,qtexteCorr:l}}function g(e,t){const s=[{matiere:"de la peinture",unite:"L",qtt_matiere_unitaire:[.5,1,1.5,2],qtt_surface:[2,3,5]},{matiere:"du gazon",unite:"kg",qtt_matiere_unitaire:[2.5,3,5,10],qtt_surface:[25,40,50]},{matiere:"du carrelage",unite:"carreaux",qtt_matiere_unitaire:[25,30,50,100],qtt_surface:[2,4]}];let n;n=h?s.length-1:(0,r.nSR)(0,s.length-1);const i=(0,r.nSR)(0,s[n].qtt_matiere_unitaire.length-1),u=(0,r.nSR)(0,s[n].qtt_surface.length-1),a=[.25,.5,.75,1.25,1.5,2,3,4,5],l=(0,r.nSR)(0,a.length-1);let c,$,p;h?(p=d[m][0],c=p*(0,r.nSR)(2,5),$=d[m][1]):(p=s[n].qtt_surface[u],c=s[n].qtt_matiere_unitaire[i],$=(0,r.n0o)(a[l]*s[n].qtt_surface[u]));const b=[(0,r.sTI)(),(0,r.nHh)()],K=(0,r.k$K)(c),k=`${b[0]} doit acheter ${s[n].matiere}. <br>Sur la notice, il est indiqué de prévoir ${K} ${s[n].unite} pour ${(0,r.k$K)(p)} m$^2$. <br> Combien doit-elle en acheter pour une surface de ${(0,r.k$K)($)} m$^2$ ?`+(0,o.G5)(e,t,"largeur25 inline",{texteApres:" "+s[n].unite}),q=`Commençons par trouver combien de ${s[n].unite} il faut prévoir pour 1 m$^2$. <br>\n  1 m$^2$, c'est ${(0,r.pRK)((0,r.k$K)(p))} fois moins que ${(0,r.k$K)(p)} m$^2$.<br>${K} ${s[n].unite} $\\div $ ${(0,r.pRK)((0,r.k$K)(p))} = ${(0,r.k$K)(c/p)} ${s[n].unite} <br>`+(0,r.PH8)(" Conclusion intermédiaire :","black")+` on a donc besoin de ${(0,r.pRK)((0,r.k$K)(c/p),"blue")} ${s[n].unite} pour recouvrir 1 m$^2$ . <br>`+` Cherchons maintenant la quantité de ${s[n].unite} nécessaire pour recouvrir ${(0,r.k$K)($)} m$^2$. <br>`+` ${(0,r.k$K)($)} m$^2$, c'est ${(0,r.pRK)((0,r.k$K)($))} fois plus que 1 m$^2$.`+`<br> ${(0,r.pRK)((0,r.k$K)(c/p),"blue")} ${s[n].unite} $\\times$ ${(0,r.pRK)((0,r.k$K)($))} = ${(0,r.k$K)(c*$/p)} ${s[n].unite}<br>`+`${(0,r.PH8)("Conclusion :","black")} ${b[0]} aura besoin de ${(0,r.k$K)(c*$/p)} ${s[n].unite} pour recouvrir ${(0,r.k$K)($)} m$^2$.`;return(0,o.Iq)(e,t,(0,r.n0o)(c*$/p)),{qtexte:k,qtexteCorr:q}}function v(){let e;n.default.call(this),i.Do.isHtml?this.spacing=2:this.spacing=1,i.Do.isHtml?this.spacingCorr=2:this.spacingCorr=1,this.nbQuestions=6,this.nbCols=1,this.nbColsCorr=1,this.besoinFormulaireCaseACocher=["Version simplifiée ne comportant que des nombres entiers"],this.sup=!1,this.besoinFormulaire2Texte=["Type de questions","Nombres séparés par des tirets\n1 : Achat\n2 : Recette\n3 : Dilution\n4 : Distance\n5 : Échelle\n6 : Surface"],this.nouvelleVersion=function(){this.consigne=1===this.nbQuestions?"Répondre à la question posée en justifiant.":"Répondre aux questions posées en justifiant.",this.listeQuestions=[],this.listeCorrections=[],this.autoCorrection=[];let t=[];if(this.sup2)if("number"==typeof this.sup2)t[0]=(0,r.QmD)(1,6,this.sup2,6);else{t=this.sup2.split("-");for(let e=0;e<t.length;e++)t[e]=(0,r.QmD)(1,6,parseInt(t[e]),6)}else t=(0,r.BAU)(1,6);const s=(0,r.SRM)(t,this.nbQuestions);let n=0;for(let i=0;i<this.nbQuestions&&n<50;){switch(m=(0,r.nSR)(0,d.length-1),h=!!this.sup,parseInt(s[i])){case 1:e=b(this,i);break;case 2:e=K(this,i);break;case 3:e=k(this,i);break;case 4:e=q(this,i);break;case 5:e=f(this,i);break;case 6:e=g(this,i)}this.questionJamaisPosee(i,s[i],this.autoCorrection[i].reponse.valeur[0],this.autoCorrection[i].enonce)&&(this.listeQuestions.push(e.qtexte),this.listeCorrections.push(e.qtexteCorr),i++),n++}(0,r.K1R)(this)}}},25523:(e,t,s)=>{function n(){this.titre="",this.boutonAide=!1,this.consigne="",this.consigneCorrection="",this.introduction="",this.listeQuestions=[],this.listeCorrections=[],this.contenu="",this.contenuCorrection="",this.autoCorrection=[],this.tableauSolutionsDuQcm=[],this.spacing=1,this.spacingCorr=1,this.pasDeVersionLatex=!1,this.listePackages=[],this.consigneModifiable=!0,this.nbQuestionsModifiable=!0,this.nbCols=1,this.nbColsCorr=1,this.nbColsModifiable=!0,this.nbColsCorrModifiable=!0,this.spacingModifiable=!0,this.spacingCorrModifiable=!0,this.beamer=!1,this.tailleDiaporama=1,this.nbQuestions=10,this.pointsParQuestions=1,this.correctionDetailleeDisponible=!1,this.correctionDetaillee=!0,this.correctionIsCachee=!1,this.video="",this.interactif=!1,this.interactifObligatoire=!1,this.besoinFormulaireNumerique=!1,this.besoinFormulaireTexte=!1,this.besoinFormulaireCaseACocher=!1,this.besoinFormulaire2Numerique=!1,this.besoinFormulaire2Texte=!1,this.besoinFormulaire2CaseACocher=!1,this.besoinFormulaire3Numerique=!1,this.besoinFormulaire3Texte=!1,this.besoinFormulaire3CaseACocher=!1,this.besoinFormulaire4Numerique=!1,this.besoinFormulaire4Texte=!1,this.besoinFormulaire4CaseACocher=!1,this.mg32Editable=!1,this.listeArguments=[],this.nouvelleVersion=function(e){},this.questionJamaisPosee=function(e,...t){0===e&&(this.listeArguments=[]);let s="";for(const n of t)void 0!==n&&(s+=n.toString());return!(this.listeArguments.indexOf(s)>-1)&&(this.listeArguments.push(s),!0)}}s.r(t),s.d(t,{default:()=>n})}}]);
//# sourceMappingURL=40437.d96373dcc6c0153deb1f.js.map