{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N11-4.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Ranger_ordre_croissant_decroissant","type_de_questions_disponibles","Exercice","this","beta","sup","nbQuestions","nbCols","nbColsCorr","sortieHtml","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","c1","randint","c2","c3","c4","c5","situations","ordre","symbole","miseEnEvidence","n1","Number","toString","n2","n3","n4","n5","n6","myOrdre","tab","sort","a","b","reverse","enonces","nombres","nombres_ranges","k","length","shuffle","forEach","element","push","enonce","texNombre","question","correction","texteEnCouleur_et_gras","indexOf","listeQuestionsToContenu","consigne","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/5752.07cb4e1978f88597998f.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,shuffle,combinaisonListesSansChangerOrdre,texNombre,miseEnEvidence,texteEnCouleur_et_gras} from '../../modules/outils.js'\nexport const titre = 'Ranger une liste de nombres entiers dans l’ordre croissant ou décroissant'\n\n/** \n* * Ranger une liste de nombres dans l'odre croissant ou décroissant\n* * 6N11-4\n* @author Sébastien Lozano\n*/\n\nexport default function Ranger_ordre_croissant_decroissant() {\n  'use strict';\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.beta = false;\n  this.sup = 1;\n  if (this.beta) {\n    this.nbQuestions = 2;\n  } else {\n    this.nbQuestions = 2;\n  };\n\n  this.titre = titre;\n  //this.consigne = `Classer les nombres suivants dans l'ordre indiqué.`;\t\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  //this.nbQuestionsModifiable = false;\n  sortieHtml ? this.spacing = 3 : this.spacing = 2;\n  sortieHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5;\n\n  let type_de_questions_disponibles;\n\n  this.nouvelleVersion = function () {\n    if (this.beta) {\n      type_de_questions_disponibles = [0, 1];\n    } else {\n      //type_de_questions_disponibles = shuffle([choice([1,3]),choice([2,4]),0]);      \t\t\t\n      type_de_questions_disponibles = [0, 1];\n    };\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    //let listeTypeDeQuestions  = combinaisonListes(type_de_questions_disponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(type_de_questions_disponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\t\t\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // les chiffres\n      let c1 = randint(1, 9);\n      let c2 = randint(1, 9, [c1]);\n      let c3 = randint(1, 9, [c1, c2]);\n      let c4 = randint(1, 9, [c1, c2, c3]);\n      let c5 = randint(1, 9, [c1, c2, c3, c4]);\n\n      // pour les situations, autant de situations que de cas dans le switch !\n      let situations = [\n        {//case 0 -->\n          ordre: 'croissant',\n          symbole: `$${miseEnEvidence('<')}$`,\n          n1: Number(c1.toString() + c2.toString() + c3.toString() + c4.toString() + c5.toString()),\n          n2: Number(c1.toString() + c3.toString() + c2.toString() + c4.toString() + c5.toString()),\n          n3: Number(c1.toString() + c2.toString() + c5.toString() + c4.toString() + c3.toString()),\n          n4: Number(c1.toString() + randint(0, 9).toString() + randint(0, 9).toString() + randint(0, 9).toString()),\n          n5: Number('1'.toString() + randint(0, 9).toString() + randint(0, 9).toString() + randint(0, 9).toString() + randint(0, 9).toString() + randint(0, 9).toString()),\n          n6: Number(c1.toString() + c2.toString() + randint(0, 9).toString() + randint(0, 9).toString() + randint(0, 9).toString()),\n        },\n        {//case 1 -->\n          ordre: 'décroissant',\n          symbole: `$${miseEnEvidence('>')}$`,\n          n1: Number(c1.toString() + c2.toString() + c3.toString() + c4.toString() + c5.toString()),\n          n2: Number(c1.toString() + c3.toString() + c2.toString() + c4.toString() + c5.toString()),\n          n3: Number(c1.toString() + c2.toString() + c5.toString() + c4.toString() + c3.toString()),\n          n4: Number(c1.toString() + randint(0, 9).toString() + randint(0, 9).toString() + randint(0, 9).toString()),\n          n5: Number('1'.toString() + randint(0, 9).toString() + randint(0, 9).toString() + randint(0, 9).toString() + randint(0, 9).toString() + randint(0, 9).toString()),\n          n6: Number(c1.toString() + c2.toString() + randint(0, 9).toString() + randint(0, 9).toString() + randint(0, 9).toString()),\n        },\n      ];\n\n      // une fonction pour gérer l'ordre\n      function myOrdre(ordre, tab) {\n        tab.sort((a, b) => a - b);\n        switch (ordre) {\n          case 'croissant':\n            return tab;\n          case 'décroissant':\n            return tab.reverse();\n        };\n      };\n\n      let enonces = [];\n      let nombres = [];\n      let nombres_ranges = [];\n      for (let k = 0; k < situations.length; k++) {\n        nombres = shuffle([situations[k].n1, situations[k].n2, situations[k].n3, situations[k].n4, situations[k].n5, situations[k].n6]);\n        nombres_ranges = [];\n        nombres.forEach(element => {\n          nombres_ranges.push(element);\n        });\n        myOrdre(situations[k].ordre, nombres_ranges);\n        enonces.push({\n          enonce: `Classer les nombres suivants dans l'ordre ${situations[k].ordre} :<br>\n        $${texNombre(nombres[0])}$   ;   $${texNombre(nombres[1])}$   ;   $${texNombre(nombres[2])}$   ;   $${texNombre(nombres[3])}$   ;   $${texNombre(nombres[4])}$   ;   $${texNombre(nombres[5])}$          \n        `,\n          question: ``,\n          correction: `Les nombres rangés dans l'ordre ${texteEnCouleur_et_gras(situations[k].ordre)} :<br>\n        $${texNombre(nombres_ranges[0])}$   ${situations[k].symbole}   $${texNombre(nombres_ranges[1])}$   ${situations[k].symbole}   $${texNombre(nombres_ranges[2])}$   ${situations[k].symbole}   $${texNombre(nombres_ranges[3])}$   ${situations[k].symbole}   $${texNombre(nombres_ranges[4])}$   ${situations[k].symbole}   $${texNombre(nombres_ranges[5])}$\n        `\n        });\n      };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n            texte += `             `\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[0].correction}`;\n          };\n          break;\n        case 1:\n          texte = `${enonces[1].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[1].correction}`;\n          };\n          break;\n      };\n\n      if (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  }\n  //this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  //this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\t\n};\n\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}