{"version":3,"file":"js/66209.0e161656c1b6236c25ca.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3L11-6.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, choice, combinaisonListes, randint, lettreDepuisChiffre, ecritureAlgebrique, rienSi1, miseEnEvidence, sp } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Factoriser une expression complexe'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n// Il y a un problème avec l'ordre de la multiplication\n\n/**\n* Factoriser avec un facteur commun évident des expressions complexes\n* Publié le 22/05/2021\n* @author Lhote Jean-Claude\n* 3L11-6\n*/\nexport default function FactoriserUneExpression3e () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Factoriser les expressions suivantes.'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = true\n  this.spacing = context.isHtml ? 3 : 2\n  this.spacingCorr = context.isHtml ? 3 : 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles\n    if (parseInt(this.sup) === 1) {\n      typesDeQuestionsDisponibles = ['c(ax+b)+x(ax+b)', 'c(ax+b)-x(ax+b)', 'x(ax+b)+c(ax+b)', 'x(ax+b)-c(ax+b)']\n    } else if (parseInt(this.sup) === 2) {\n      typesDeQuestionsDisponibles = ['(ax+b)(cx+d)+(ax+b)(ex+f)', '(ax+b)(cx+d)-(ax+b)(ex+f)', '(cx+d)(ax+b)+(ax+b)(ex+f)', '(cx+d)(ax+b)-(ax+b)(ex+f)', '(ax+b)(cx+d)+(ex+f)(ax+b)', '(ax+b)(cx+d)-(ex+f)(ax+b)', '(cx+d)(ax+b)+(ex+f)(ax+b)', '(cx+d)(ax+b)-(ex+f)(ax+b)']\n    } else {\n      typesDeQuestionsDisponibles = ['c(ax+b)+x(ax+b)', 'c(ax+b)-x(ax+b)', 'x(ax+b)+c(ax+b)', 'x(ax+b)-c(ax+b)', '(ax+b)(cx+d)+(ax+b)(ex+f)', '(ax+b)(cx+d)-(ax+b)(ex+f)', '(cx+d)(ax+b)+(ax+b)(ex+f)', '(cx+d)(ax+b)-(ax+b)(ex+f)', '(ax+b)(cx+d)+(ex+f)(ax+b)', '(ax+b)(cx+d)-(ex+f)(ax+b)', '(cx+d)(ax+b)+(ex+f)(ax+b)', '(cx+d)(ax+b)-(ex+f)(ax+b)']\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, reponse, a, b, c, d, e, f, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      a = randint(1, 3)\n      b = randint(1, 5) * choice([-1, 1])\n      c = randint(2, 5)\n      d = randint(2, 5, c) * choice([-1, 1])\n      e = randint(1, 6, c)\n      f = randint(1, 5, Math.abs(d)) * choice([-1, 1])\n      switch (listeTypeDeQuestions[i]) {\n        case 'c(ax+b)+x(ax+b)':\n          texte = `$${lettreDepuisChiffre(i + 1)} = ${c}(${rienSi1(a)}x${ecritureAlgebrique(b)})+x(${rienSi1(a)}x${ecritureAlgebrique(b)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `${sp(2)}On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$\\\\phantom{ABC}=${miseEnEvidence(c, 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}+${miseEnEvidence('x', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}$`\n            texteCorr += `<br>$\\\\phantom{ABC}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + '+x)', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c}+x)$<br>`\n          }\n          reponse = [`(${c}+x)(${rienSi1(a)}x${ecritureAlgebrique(b)})`, `(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c}+x)`]\n          break\n        case 'c(ax+b)-x(ax+b)':\n          texte = `$${lettreDepuisChiffre(i + 1)} = ${c}(${rienSi1(a)}x${ecritureAlgebrique(b)})-x(${rienSi1(a)}x${ecritureAlgebrique(b)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `${sp(2)}On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$\\\\phantom{ABC}=${miseEnEvidence(c, 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}-${miseEnEvidence('x', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}$`\n            texteCorr += `<br>$\\\\phantom{ABC}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + '-x)', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c}-x)$<br>`\n          }\n          reponse = [`(${c}-x)(${rienSi1(a)}x${ecritureAlgebrique(b)})`, `(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c}-x)`]\n          break\n        case 'x(ax+b)+c(ax+b)':\n          texte = `$${lettreDepuisChiffre(i + 1)} = x(${rienSi1(a)}x${ecritureAlgebrique(b)})+${c}(${rienSi1(a)}x${ecritureAlgebrique(b)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `${sp(2)}On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$\\\\phantom{ABC}=${miseEnEvidence('x', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}+${miseEnEvidence(c, 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}$`\n            texteCorr += `<br>$\\\\phantom{ABC}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(x+' + c + ')', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(x+${c})$<br>`\n          }\n          reponse = [`(x+${c})(${rienSi1(a)}x${ecritureAlgebrique(b)})`, `(${rienSi1(a)}x${ecritureAlgebrique(b)})(x+${c})`]\n          break\n        case 'x(ax+b)-c(ax+b)':\n          texte = `$${lettreDepuisChiffre(i + 1)} = x(${rienSi1(a)}x${ecritureAlgebrique(b)})-${c}(${rienSi1(a)}x${ecritureAlgebrique(b)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `${sp(2)}On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$\\\\phantom{ABC}=${miseEnEvidence('x', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}-${miseEnEvidence(c, 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}$`\n            texteCorr += `<br>$\\\\phantom{ABC}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(x-' + c + ')', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(x-${c})$<br>`\n          }\n          reponse = [`(x-${c})(${rienSi1(a)}x${ecritureAlgebrique(b)})`, `(${rienSi1(a)}x${ecritureAlgebrique(b)})(x-${c})`]\n          break\n        case '(ax+b)(cx+d)+(ax+b)(ex+f)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})+(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(e)}x${ecritureAlgebrique(f)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `<br>On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + ')', 'blue')}+${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '+' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(c + e) + 'x' + ecritureAlgebrique(d + f) + ')', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c + e}x${ecritureAlgebrique(d + f)})$<br>`\n          }\n          reponse = [`(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c + e}x${ecritureAlgebrique(d + f)})`, `(${c + e}x${ecritureAlgebrique(d + f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})`]\n          break\n        case '(ax+b)(cx+d)-(ax+b)(ex+f)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})-(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(e)}x${ecritureAlgebrique(f)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `<br>On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + ')', 'blue')}-${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '-(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + '))', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '-' + rienSi1(e) + 'x' + ecritureAlgebrique(-f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(c - e) + 'x' + ecritureAlgebrique(d - f) + ')', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})$<br>`\n          }\n          reponse = [`(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})`, `(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})`]\n          break\n        case '(cx+d)(ax+b)+(ax+b)(ex+f)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=(${c}x${ecritureAlgebrique(d)})(${rienSi1(a)}x${ecritureAlgebrique(b)})+(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(e)}x${ecritureAlgebrique(f)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `<br>On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + ')', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}+${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '+' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(c + e) + 'x' + ecritureAlgebrique(d + f) + ')', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c + e}x${ecritureAlgebrique(d + f)})$<br>`\n          }\n          reponse = [`(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c + e}x${ecritureAlgebrique(d + f)})`, `(${c + e}x${ecritureAlgebrique(d + f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})`]\n          break\n        case '(cx+d)(ax+b)-(ax+b)(ex+f)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=(${c}x${ecritureAlgebrique(d)})(${rienSi1(a)}x${ecritureAlgebrique(b)})-(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(e)}x${ecritureAlgebrique(f)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `<br>On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + ')', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}-${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '-(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + '))', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '-' + rienSi1(e) + 'x' + ecritureAlgebrique(-f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(c - e) + 'x' + ecritureAlgebrique(d - f) + ')', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})$<br>`\n          }\n          reponse = [`(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})`, `(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})`]\n          break\n        case '(ax+b)(cx+d)+(ex+f)(ax+b)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})+(${rienSi1(e)}x${ecritureAlgebrique(f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `<br>On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + ')', 'blue')}+${miseEnEvidence('(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '+' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(c + e) + 'x' + ecritureAlgebrique(d + f) + ')', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c + e}x${ecritureAlgebrique(d + f)})$<br>`\n          }\n          reponse = [`(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c + e}x${ecritureAlgebrique(d + f)})`, `(${c + e}x${ecritureAlgebrique(d + f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})`]\n          break\n        case '(ax+b)(cx+d)-(ex+f)(ax+b)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})-(${rienSi1(e)}x${ecritureAlgebrique(f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `<br>On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + ')', 'blue')}-${miseEnEvidence('(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '-(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + '))', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '-' + rienSi1(e) + 'x' + ecritureAlgebrique(-f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(c - e) + 'x' + ecritureAlgebrique(d - f) + ')', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})$<br>`\n          }\n          reponse = [`(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})`, `(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})`]\n          break\n        case '(cx+d)(ax+b)+(ex+f)(ax+b)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=(${c}x${ecritureAlgebrique(d)})(${rienSi1(a)}x${ecritureAlgebrique(b)})+(${rienSi1(e)}x${ecritureAlgebrique(f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `<br>On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + ')', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}+${miseEnEvidence('(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '+' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(c + e) + 'x' + ecritureAlgebrique(d + f) + ')', 'blue')}$<br>`\n          } else {\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c + e}x${ecritureAlgebrique(d + f)})$<br>`\n          }\n          reponse = [`(${c + e}x${ecritureAlgebrique(d + f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})`, `(${rienSi1(a)}x${ecritureAlgebrique(b)})(${c + e}x${ecritureAlgebrique(d + f)})`]\n          break\n        case '(cx+d)(ax+b)-(ex+f)(ax+b)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=(${c}x${ecritureAlgebrique(d)})(${rienSi1(a)}x${ecritureAlgebrique(b)})-(${rienSi1(e)}x${ecritureAlgebrique(f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})$`\n          texteCorr = texte\n          if (this.correctionDetaillee) {\n            texteCorr += `<br>On remarque que $(${rienSi1(a)}x${ecritureAlgebrique(b)})$ est un facteur commun.`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + ')', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}-${miseEnEvidence('(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + ')', 'blue')}${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '-(' + rienSi1(e) + 'x' + ecritureAlgebrique(f) + '))', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + c + 'x' + ecritureAlgebrique(d) + '-' + rienSi1(e) + 'x' + ecritureAlgebrique(-f) + ')', 'blue')}$`\n            texteCorr += `<br>$${lettreDepuisChiffre(i + 1)}=${miseEnEvidence('(' + rienSi1(a) + 'x' + ecritureAlgebrique(b) + ')')}${miseEnEvidence('(' + rienSi1(c - e) + 'x' + ecritureAlgebrique(d - f) + ')', 'blue')}$<br>`\n          } else {\n            reponse = [`(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})(${rienSi1(a)}x${ecritureAlgebrique(b)})`, `(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})`]\n            texteCorr += `<br>$\\\\phantom{ABC}=(${rienSi1(a)}x${ecritureAlgebrique(b)})(${rienSi1(c - e)}x${ecritureAlgebrique(d - f)})$<br>`\n          }\n          break\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      setReponse(this, i, reponse)\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de facteur commun', 3, '1 : Facteurs non communs simples\\n2 : Facteurs non communs de la forme ax + b\\n3 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","FactoriserUneExpression3e","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","correctionDetailleeDisponible","correctionDetaillee","spacing","context","spacingCorr","nouvelleVersion","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","parseInt","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","reponse","a","b","c","d","e","f","i","cpt","randint","choice","Math","abs","lettreDepuisChiffre","rienSi1","ecritureAlgebrique","sp","miseEnEvidence","ajouteChampTexteMathLive","setReponse","indexOf","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}