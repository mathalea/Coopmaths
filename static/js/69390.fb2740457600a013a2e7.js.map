{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta2G13.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","calculer_coordonnees_vecteurs","sup","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","ux","uy","xA","yA","xB","yB","texte","texteCorr","i","cpt","randint","choice","r","repere2","A","point","B","t","tracePoint","l","labelPoint","color","mathalea2d","xmin","ymin","xmax","ymax","ecritureParentheseSiNegatif","indexOf","push","listeQuestionsToContenu"],"mappings":"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","file":"js/69390.fb2740457600a013a2e7.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,ecritureParentheseSiNegatif} from '../../modules/outils.js'\nimport { repere2, courbe2, mathalea2d, point, tracePoint, labelPoint } from '../../modules/2d.js'\n\nexport const titre = 'Déterminer les coordonnées d’un vecteur.'\n\n/**\n * @author Stéphane Guyon\n */\nexport default function calculer_coordonnees_vecteurs() {\n    Exercice.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n\n    this.nbQuestions = 2;\n    this.nbCols = 2;\n    this.nbColsCorr = 2;\n    this.sup = 1; // \n    this.nouvelleVersion = function () {\n        this.listeQuestions = []; // Liste de questions\n        this.listeCorrections = []; // Liste de questions corrigées\n        let typesDeQuestionsDisponibles = [1];\n        let typesDeQuestions\n\n        let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions);\n        for (let i = 0, ux, uy, xA, yA, xB, yB, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n            typesDeQuestions = listeTypeDeQuestions[i];\n            switch (typesDeQuestions) {\n                // Cas par cas, on définit le type de nombres que l'on souhaite\n                // Combien de chiffres ? Quelles valeurs ?\n                case 1:\n\n\n                    xA = randint(0, 5) * choice([-1, 1]);\n                    yA = randint(0, 5) * choice([-1, 1]);\n                    ux = randint(1, 5) * choice([-1, 1]);\n                    uy = randint(1, 5) * choice([-1, 1]);\n                    xB = xA + ux;\n\n                    yB = yA + uy;\n\n\n                    texte = `Dans un repère orthonormé $(O,\\\\vec i,\\\\vec j)$, on donne les points suivants :`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ et $B\\\\left(${xB};${yB}\\\\right)$`;\n                    texte += `<br>Déterminer les coordonnées du vecteur $\\\\overrightarrow{AB}$ `;\n                    r = repere2()//On définit le repère  \n                    A = point(xA, yA)\n                    B = point(xB, yB)                     \n                    t = tracePoint(A, B,'red') // Variable qui trace les points avec une croix\n                    l = labelPoint(A,B)// Variable qui trace les nom s A et B\n                    l.color='red'                    \n                    texte += mathalea2d({\n                      xmin: -6,\n                      ymin: -6,\n                      xmax: 6,\n                      ymax: 6\n                    }, r, t,l);// On trace le graphique\n\n\n\n                    texteCorr = `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère,`;\n                    texteCorr += ` <br>alors on a : $\\\\overrightarrow{AB}\\\\begin{pmatrix}x_B-x_A  \\\\\\\\y_B-y_A\\\\end{pmatrix}$<br>`;\n                    texteCorr += ` <br>On applique ici aux données de l'énoncé :`;\n                    texteCorr += ` $\\\\overrightarrow{AB}\\\\begin{pmatrix}${xB}-${ecritureParentheseSiNegatif(xA)}  \\\\\\\\${yB}-${ecritureParentheseSiNegatif(yA)}\\\\end{pmatrix}$<br>`;\n                    texteCorr += `Ce qui donne au final : $\\\\overrightarrow{AB}\\\\begin{pmatrix}${xB - xA}  \\\\\\\\${yB - yA}\\\\end{pmatrix}$<br>`;\n\n                    break;\n                case 2:\n\n\n\n                    break;\n\n\n            }\n            if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n                this.listeQuestions.push(texte);\n                this.listeCorrections.push(texteCorr);\n                i++;\n            }\n            cpt++;\n        }\n        listeQuestionsToContenu(this);\n    };\n   \n}\n"],"sourceRoot":""}