{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/_Construire_un_triangle_avec_cible.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["ConstruireUnTriangleAvecCible","Exercice","this","titre","nbQuestions","nbCols","nbColsCorr","sup","classe","typeExercice","nouvelleVersion","IEP","listeQuestions","listeCorrections","celluleAleaRonde","rang","lettreDepuisChiffre","randint","Number","toString","typesDeQuestionsDisponibles","cible","cellule","result","A","B","C","CC","lAB","lBC","lAC","cA","cB","T","TT","dBC","dAC","dAB","objetsEnonceml","objetsEnonce","objetsCorrection","paramsEnonceml","paramsEnonce","paramsCorrection","nom","sommets","montriangle","range1","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","Alea2iep","creerNomDePolygone","push","point","calcul","pointAdistance","positionLabel","cercle","pointIntersectionCC","x","y","dansLaCibleRonde","cibleRonde","taille","segmentAvecExtremites","labelPoint","afficheLongueurSegment","traceCompas","triangle3longueurs","droite","droiteParPointEtPerpendiculaire","pointIntersectionLC","codageAngleDroit","triangleRectangle2Cotes","codeSegments","segmentCodage","codage","triangleEquilateral","similitude","codeAngle","texteParPoint","nombreAvecEspace","Math","round","angle","afficheMesureAngle","triangle2longueurs1angle","rotation","pointIntersectionDD","triangle1longueur2angles","triangleRectangleCoteHypotenuse","longueur","polygoneAvecNom","xmin","min","ymin","xmax","max","ymax","pixelsParCm","scale","mainlevee","amplitude","mathalea2d","htmlBouton","numeroExercice","indexOf","listeQuestionsToContenu","besoinFormulaire2Numerique","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"0LAUe,SAASA,IAEtBC,eAAcC,MACdA,KAAKC,MAAQ,oDACbD,KAAKE,YAAc,EACnBF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKK,KAAM,EACXL,KAAKM,OAAS,EACdN,KAAKO,aAAe,MAEpBP,KAAKQ,gBAAkB,WACrB,IAAIC,EACJT,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxB,MAAMC,EAAmB,SAAUC,GAGjC,OAFeC,UAAoBC,SAAQ,EAAG,IAC9BC,QAAOD,SAAQ,EAAGF,IAAOI,YAI3C,IAAIC,EAA6BC,EAAOC,EAASC,EAAQC,EAAGC,EAAGC,EAAGC,EAAIC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAGC,EAAIC,EAAKC,EAAKC,EAAKC,EAAgBC,EAAcC,EAAkBC,EAAgBC,EAAcC,EAAkBC,EAAKC,EAASC,EAC1M1B,EAAH,IAAhBlB,KAAKM,QAA4CuC,SAAO,IACzBA,SAAO,GAC1C,MAAMC,GAAuBC,SAAkB7B,EAA6BlB,KAAKE,aACjF,IAAK,IAAW8C,EAAOC,EAAdC,EAAI,EAAqBC,EAAM,EAAGD,EAAIlD,KAAKE,aAAeiD,EAAM,IAAK,CAC5E1C,EAAM,IAAI2C,IACVf,EAAe,GACfD,EAAiB,GACjBE,EAAmB,GACnBU,EAAQ,0JACRC,EAAY,oDACZP,GAAMW,SAAmB,EAAG,MAC5BV,EAAU,GACV,IAAK,IAAIO,EAAI,EAAGA,EAAI,EAAGA,IAAKP,EAAQW,KAAKZ,EAAIQ,IAE7C,OADA5B,GAAIiC,SAAM,EAAG,EAAGZ,EAAQ,GAAI,QACpBG,EAAqBI,IAC3B,KAAK,EACHtB,GAAMb,SAAQ,GAAI,IAClBY,GAAM6B,UAAOzC,SAAQ,GAAI,GAAIa,GAAO,IACpCF,GAAM8B,UAAOzC,SAAQ,GAAI,IAAM,IAC/Ba,GAAM4B,SAAO5B,EAAM,IACnBL,GAAIkC,SAAenC,EAAGI,GAAKX,UAAS,GAAI,IAAK4B,EAAQ,IACrDpB,EAAEmC,cAAgB,QAClB7B,GAAK8B,SAAOrC,EAAGM,GACfE,GAAK6B,SAAOpC,EAAGI,GACfH,GAAIoC,SAAoB/B,EAAIC,EAAIa,EAAQ,GAAI,GAC5CnB,EAAEkC,cAAgB,QAClBjC,GAAK8B,SAAM/B,EAAEqC,GAAI9C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAIS,EAAEsC,GAAI/C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAI4B,EAAQ,IAC/GvB,EAAUR,EAAiB,GAC3BS,GAAS0C,SAAiBvC,EAAEqC,EAAGrC,EAAEsC,EAAG,EAAG,GAAK1C,GAC5CD,GAAQ6C,SAAW,CAAEH,EAAGxC,EAAO,GAAIyC,EAAGzC,EAAO,GAAIR,KAAM,EAAGoD,OAAQ,KAClE5B,EAAaiB,KAAKnC,GAAO+C,SAAsB5C,EAAGC,IAAI4C,SAAW7C,EAAGC,IACpEa,EAAekB,MAAKc,SAAuB7C,EAAGD,IAAI8C,SAAuB5C,EAAGD,EAAG,QAAS,IAAI6C,SAAuB9C,EAAGE,EAAG,QAAS,IAClIc,EAAiBgB,KAAKnC,GAAOkD,SAAY/C,EAAGE,EAAG,GAAI,OAAQ,EAAG,IAAI6C,SAAY9C,EAAGC,EAAG,GAAI,OAAQ,EAAG,IAAI4C,SAAuB7C,EAAGD,IAAI8C,SAAuB5C,EAAGD,IAAI6C,SAAuB9C,EAAGE,IAC7LyB,GAAa,iFACbA,GAAc,YAAWN,EAAQ,gCAAgCvB,SACjEX,EAAI6D,mBAAmB5B,EAAKhB,EAAKE,EAAKD,GAAK,GAC3C,MACF,KAAK,EACHA,GAAMZ,SAAQ,GAAI,IAAM,GACxBW,GAAM8B,UAAOzC,SAAQ,GAAI,IAAM,IAC/BQ,GAAIkC,SAAenC,EAAGI,GAAKX,UAAS,GAAI,IAAK4B,EAAQ,IACrDpB,EAAEmC,cAAgB,QAClB5B,GAAK6B,SAAOpC,EAAGI,GACfQ,GAAMoC,SAAOjD,EAAGC,GAChBU,GAAMuC,SAAgCjD,EAAGY,GACzCX,GAAIiD,SAAoBxC,EAAKH,EAAIa,EAAQ,GAAI,GAC7CnB,EAAEkC,cAAgB,QAClBjC,GAAK8B,SAAM/B,EAAEqC,GAAI9C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAIS,EAAEsC,GAAI/C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAI4B,EAAQ,IAC/GvB,EAAUR,EAAiB,GAC3BS,GAAS0C,SAAiBvC,EAAEqC,EAAGrC,EAAEsC,EAAG,EAAG,GAAK1C,GAC5CD,GAAQ6C,SAAW,CAAEH,EAAGxC,EAAO,GAAIyC,EAAGzC,EAAO,GAAIR,KAAM,EAAGoD,OAAQ,KAClE5B,EAAaiB,KAAKnC,GAAO+C,SAAsB5C,EAAGC,IAAI4C,SAAW7C,EAAGC,IACpEa,EAAekB,MAAKc,SAAuB7C,EAAGD,IAAI8C,SAAuB5C,EAAGD,EAAG,QAAS,IAAImD,SAAiBpD,EAAGC,EAAGE,IACnHa,EAAiBgB,KAAKnC,GAAOkD,SAAY9C,EAAGC,EAAG,GAAI,OAAQ,EAAG,IAAIkD,SAAiBpD,EAAGC,EAAGC,IAAI4C,SAAuB7C,EAAGD,IAAI8C,SAAuB5C,EAAGD,IACrJ0B,GAAa,4FACbA,GAAc,YAAWN,EAAQ,gCAAgCvB,SAEjEX,EAAIkE,wBAAwBjC,EAAKhB,EAAKC,GAAK,GAC3C,MACF,KAAK,EACHA,GAAM6B,UAAOzC,SAAQ,GAAI,IAAM,IAC/BW,GAAM8B,UAAOzC,SAAQ,GAAI,IAAM,IAC/Ba,EAAMF,EACNH,GAAIkC,SAAenC,EAAGI,GAAKX,UAAS,GAAI,IAAK4B,EAAQ,IACrDpB,EAAEmC,cAAgB,QAClB7B,GAAK8B,SAAOrC,EAAGM,GACfE,GAAK6B,SAAOpC,EAAGI,GACfH,GAAIoC,SAAoB/B,EAAIC,EAAIa,EAAQ,GAAI,GAC5CnB,EAAEkC,cAAgB,QAClBjC,GAAK8B,SAAM/B,EAAEqC,GAAI9C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAIS,EAAEsC,GAAI/C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAI4B,EAAQ,IAC/GvB,EAAUR,EAAiB,GAC3BS,GAAS0C,SAAiBvC,EAAEqC,EAAGrC,EAAEsC,EAAG,EAAG,GAAK1C,GAC5CD,GAAQ6C,SAAW,CAAEH,EAAGxC,EAAO,GAAIyC,EAAGzC,EAAO,GAAIR,KAAM,EAAGoD,OAAQ,KAClE5B,EAAaiB,KAAKnC,GAAO+C,SAAsB5C,EAAGC,IAAI4C,SAAW7C,EAAGC,IACpEa,EAAekB,MAAKc,SAAuB7C,EAAGD,IAAI8C,SAAuB5C,EAAGD,EAAG,QAAS,IAAIqD,SAAa,KAAM,QAAStD,EAAGC,EAAGD,EAAGG,IACjIa,EAAiBgB,KAAKnC,GAAOkD,SAAY/C,EAAGE,EAAG,GAAI,OAAQ,EAAG,IAAI6C,SAAY9C,EAAGC,EAAG,GAAI,OAAQ,EAAG,IAAI4C,SAAuB7C,EAAGD,IAAI8C,SAAuB5C,EAAGD,IAAIqD,SAAa,KAAM,QAAStD,EAAGC,EAAGD,EAAGE,IAAI4C,SAAuB9C,EAAGE,IACtOyB,GAAa,iFACbA,GAAc,YAAWN,EAAQ,gCAAgCvB,SACjEwB,EAAcnC,EAAI6D,mBAAmB5B,EAAKhB,EAAKE,EAAKD,GAAK,GACzDlB,EAAIoE,cAAcjC,EAAY,GAAIA,EAAY,GAAI,CAAEkC,OAAQ,SAC5DrE,EAAIoE,cAAcjC,EAAY,GAAIA,EAAY,GAAI,CAAEkC,OAAQ,SAC5D,MACF,KAAK,EACHpD,GAAM8B,UAAOzC,SAAQ,GAAI,IAAM,IAC/BY,EAAMD,EACNH,GAAIkC,SAAenC,EAAGI,GAAKX,UAAS,GAAI,IAAK4B,EAAQ,IACrDpB,EAAEmC,cAAgB,QAClB5B,GAAK6B,SAAOpC,EAAGI,GACfQ,GAAMoC,SAAOjD,EAAGC,GAChBU,GAAMuC,SAAgCjD,EAAGY,GACzCX,GAAIiD,SAAoBxC,EAAKH,EAAIa,EAAQ,GAAI,GAC7CnB,EAAEkC,cAAgB,QAClBjC,GAAK8B,SAAM/B,EAAEqC,GAAI9C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAIS,EAAEsC,GAAI/C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAI4B,EAAQ,IAC/GvB,EAAUR,EAAiB,GAC3BS,GAAS0C,SAAiBvC,EAAEqC,EAAGrC,EAAEsC,EAAG,EAAG,GAAK1C,GAC5CD,GAAQ6C,SAAW,CAAEH,EAAGxC,EAAO,GAAIyC,EAAGzC,EAAO,GAAIR,KAAM,EAAGoD,OAAQ,KAClE5B,EAAaiB,KAAKnC,GAAO+C,SAAsB5C,EAAGC,IAAI4C,SAAW7C,EAAGC,IACpEa,EAAekB,MAAKc,SAAuB7C,EAAGD,IAAIsD,SAAa,KAAM,QAAStD,EAAGC,EAAGA,EAAGE,IAAKiD,SAAiBpD,EAAGC,EAAGE,IACnHa,EAAiBgB,KAAKnC,GAAOkD,SAAY9C,EAAGC,EAAG,GAAI,OAAQ,EAAG,IAAIkD,SAAiBpD,EAAGC,EAAGC,IAAI4C,SAAuB7C,EAAGD,IAAIsD,SAAa,KAAM,QAAStD,EAAGC,EAAGA,EAAGC,IAChKyB,GAAa,iFACbA,GAAc,YAAWN,EAAQ,gCAAgCvB,SACjEwB,EAAcnC,EAAIkE,wBAAwBjC,EAAKhB,EAAKA,GAAK,GACzDjB,EAAIoE,cAAcjC,EAAY,GAAIA,EAAY,GAAI,CAAEkC,OAAQ,SAC5DrE,EAAIoE,cAAcjC,EAAY,GAAIA,EAAY,GAAI,CAAEkC,OAAQ,SAC5D,MACF,KAAK,EACHpD,GAAM8B,UAAOzC,SAAQ,GAAI,IAAM,IAC/Ba,EAAMF,EACNC,EAAMD,EACNH,GAAIkC,SAAenC,EAAGI,GAAKX,UAAS,GAAI,IAAK4B,EAAQ,IACrDpB,EAAEmC,cAAgB,QAClB7B,GAAK8B,SAAOrC,EAAGM,GACfE,GAAK6B,SAAOpC,EAAGI,GACfH,GAAIoC,SAAoB/B,EAAIC,EAAIa,EAAQ,GAAI,GAC5CnB,EAAEkC,cAAgB,QAClBjC,GAAK8B,SAAM/B,EAAEqC,GAAI9C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAIS,EAAEsC,GAAI/C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAI4B,EAAQ,IAC/GvB,EAAUR,EAAiB,GAC3BS,GAAS0C,SAAiBvC,EAAEqC,EAAGrC,EAAEsC,EAAG,EAAG,GAAK1C,GAC5CD,GAAQ6C,SAAW,CAAEH,EAAGxC,EAAO,GAAIyC,EAAGzC,EAAO,GAAIR,KAAM,EAAGoD,OAAQ,KAClE5B,EAAaiB,KAAKnC,GAAO+C,SAAsB5C,EAAGC,IAAI4C,SAAW7C,EAAGC,IACpEa,EAAekB,MAAKc,SAAuB7C,EAAGD,IAAIsD,SAAa,KAAM,QAAStD,EAAGC,EAAGA,EAAGE,EAAIH,EAAGG,IAC9Fa,EAAiBgB,KAAKnC,GAAOkD,SAAY/C,EAAGE,EAAG,GAAI,OAAQ,EAAG,IAAI6C,SAAY9C,EAAGC,EAAG,GAAI,OAAQ,EAAG,IAAI4C,SAAuB7C,EAAGD,IAAIsD,SAAa,KAAM,QAAStD,EAAGC,EAAGA,EAAGC,EAAGF,EAAGE,IAChLyB,GAAa,iFACbA,GAAc,YAAWN,EAAQ,gCAAgCvB,SACjEX,EAAIsE,oBAAoBrC,EAAKhB,GAAK,GAClC,MACF,KAAK,EACHA,GAAM8B,UAAOzC,SAAQ,GAAI,IAAM,IAC/Ba,GAAMb,SAAQ,GAAI,IAAM,GACxBQ,GAAIkC,SAAenC,EAAGI,GAAKX,UAAS,GAAI,IAAK4B,EAAQ,GAAI,SACzDnB,GAAIwD,SAAWzD,EAAGD,EAAoB,GAAjBP,SAAQ,EAAG,IAASa,EAAMF,EAAKiB,EAAQ,GAAI,SAChElB,GAAK8B,SAAM/B,EAAEqC,GAAI9C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAIS,EAAEsC,GAAI/C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAI4B,EAAQ,IAC/GvB,EAAUR,EAAiB,GAC3BS,GAAS0C,SAAiBvC,EAAEqC,EAAGrC,EAAEsC,EAAG,EAAG,GAAK1C,GAC5CD,GAAQ6C,SAAW,CAAEH,EAAGxC,EAAO,GAAIyC,EAAGzC,EAAO,GAAIR,KAAM,EAAGoD,OAAQ,KAClE5B,EAAaiB,KAAKnC,GAAO+C,SAAsB5C,EAAGC,IAAI4C,SAAW7C,EAAGC,IACpEa,EAAekB,MAAK2B,SAAU1D,EAAGD,EAAGG,EAAI,MAAM2C,SAAuB7C,EAAGD,IAAI4D,UAAcC,SAAiBC,KAAKC,OAAMC,SAAM/D,EAAGD,EAAGE,KAAO,KAAKwD,SAAWzD,EAAGD,GAAGgE,SAAM/D,EAAGD,EAAGE,GAAK,EAAG,EAAIE,EAAM,MAAO0C,SAAuB9C,EAAGE,EAAG,QAAS,IAC1Oc,EAAiBgB,KAAKnC,GAAOiD,SAAuB7C,EAAGD,IAAIiE,SAAmBhE,EAAGD,EAAGE,EAAG,QAAS,IAAI4C,SAAuB9C,EAAGE,EAAG,QAAS,IAC1IyB,GAAa,qFACbA,GAAc,YAAWN,EAAQ,gCAAgCvB,SACjEX,EAAI+E,yBAAyB9C,EAAKhB,EAAKE,EAAKwD,KAAKC,OAAMC,SAAM/D,EAAGD,EAAGE,KAAK,GACxE,MACF,KAAK,EACHE,GAAM8B,UAAOzC,SAAQ,GAAI,IAAM,IAC/BQ,GAAIkC,SAAenC,EAAGI,GAAKX,UAAS,GAAI,IAAK4B,EAAQ,IACrDpB,EAAEmC,cAAgB,QAClBvB,GAAMoC,SAAOjD,EAAGC,GAChBW,GAAMuD,SAAStD,EAAKb,EAAoB,GAAjBP,SAAQ,EAAG,KAClCkB,GAAMwD,SAAStD,EAAKZ,EAAqB,IAAjBR,SAAQ,EAAG,KACnCS,GAAIkE,SAAoBxD,EAAKD,EAAKU,EAAQ,IAC1CnB,EAAEkC,cAAgB,QAClBjC,GAAK8B,SAAM/B,EAAEqC,GAAI9C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAIS,EAAEsC,GAAI/C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAI4B,EAAQ,IAC/GvB,EAAUR,EAAiB,GAC3BS,GAAS0C,SAAiBvC,EAAEqC,EAAGrC,EAAEsC,EAAG,EAAG,GAAK1C,GAC5CD,GAAQ6C,SAAW,CAAEH,EAAGxC,EAAO,GAAIyC,EAAGzC,EAAO,GAAIR,KAAM,EAAGoD,OAAQ,KAClE5B,EAAaiB,KAAKnC,GAAO+C,SAAsB5C,EAAGC,IAAI4C,SAAW7C,EAAGC,IACpEa,EAAekB,MAAK2B,SAAU1D,EAAGD,EAAGG,EAAI,MAAMyD,UAAcC,SAAiBC,KAAKC,OAAMC,SAAM/D,EAAGD,EAAGE,KAAO,KAAKwD,SAAWzD,EAAGD,GAAGgE,SAAM/D,EAAGD,EAAGE,GAAK,EAAG,EAAIE,EAAM,MAAOuD,SAAU3D,EAAGC,EAAGE,EAAI,MAAMyD,UAAcC,SAAiBC,KAAKC,OAAMC,SAAMhE,EAAGC,EAAGC,KAAO,KAAKwD,SAAW1D,EAAGC,IAAI+D,SAAMhE,EAAGC,EAAGC,GAAK,EAAG,EAAIE,EAAM,MAClTY,EAAiBgB,KAAKnC,GAAOiD,SAAuB7C,EAAGD,IAAIiE,SAAmBhE,EAAGD,EAAGE,EAAG,QAAS,IAAI+D,SAAmBjE,EAAGC,EAAGC,EAAG,QAAS,IACzIyB,GAAa,iEACbA,GAAc,YAAWN,EAAQ,gCAAgCvB,SACjEX,EAAIkF,yBAAyBhD,EAASjB,EAAK0D,KAAKC,OAAMC,SAAM/D,EAAGD,EAAGE,IAAK4D,KAAKC,OAAMC,SAAMhE,EAAGC,EAAGC,KAC9F,MACF,KAAK,EACHI,GAAMb,SAAQ,GAAI,IAAM,GACxBW,GAAM8B,UAAOzC,SAAQ,GAAI,IAAM,IAC/BQ,GAAIkC,SAAenC,EAAGI,GAAKX,UAAS,GAAI,IAAK4B,EAAQ,IACrDpB,EAAEmC,cAAgB,QAClB7B,GAAK8B,SAAOrC,EAAGM,GACfO,GAAMoC,SAAOjD,EAAGC,GAChBU,GAAMuC,SAAgCjD,EAAGY,GACzCX,GAAIiD,SAAoBxC,EAAKJ,EAAIc,EAAQ,GAAI,GAC7CnB,EAAEkC,cAAgB,QAClBjC,GAAK8B,SAAM/B,EAAEqC,GAAI9C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAIS,EAAEsC,GAAI/C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAI4B,EAAQ,IAC/GvB,EAAUR,EAAiB,GAC3BS,GAAS0C,SAAiBvC,EAAEqC,EAAGrC,EAAEsC,EAAG,EAAG,GAAK1C,GAC5CD,GAAQ6C,SAAW,CAAEH,EAAGxC,EAAO,GAAIyC,EAAGzC,EAAO,GAAIR,KAAM,EAAGoD,OAAQ,KAClE5B,EAAaiB,KAAKnC,GAAO+C,SAAsB5C,EAAGC,IAAI4C,SAAW7C,EAAGC,IACpEa,EAAekB,MAAKc,SAAuB7C,EAAGD,IAAI8C,SAAuB9C,EAAGE,EAAG,QAAS,IAAIkD,SAAiBpD,EAAGC,EAAGE,IACnHa,EAAiBgB,KAAKnC,GAAOkD,SAAY/C,EAAGE,EAAG,GAAI,OAAQ,EAAG,IAAIkD,SAAiBpD,EAAGC,EAAGC,IAAI4C,SAAuB7C,EAAGD,IAAI8C,SAAuB9C,EAAGE,IACrJyB,GAAa,4FACbA,GAAc,YAAWN,EAAQ,gCAAgCvB,SACjEX,EAAImF,gCAAgClD,EAAKhB,EAAKE,GAAK,GACnD,MACF,KAAK,EACHF,GAAM8B,UAAOzC,SAAQ,GAAI,IAAM,IAC/BQ,GAAIkC,SAAenC,EAAGI,GAAKX,UAAS,GAAI,IAAK4B,EAAQ,IACrDpB,EAAEmC,cAAgB,QAClBvB,GAAMoC,SAAOjD,EAAGC,GAChBW,GAAMuD,SAAStD,EAAKb,EAAoB,GAAjBP,SAAQ,EAAG,KAClCkB,GAAMwD,SAAStD,EAAKZ,EAAqB,IAAjBR,SAAQ,EAAG,KACnCS,GAAIkE,SAAoBxD,EAAKD,EAAKU,EAAQ,IAC1Cf,GAAMiE,SAASvE,EAAGE,GAClBA,EAAEkC,cAAgB,QAClBjC,GAAK8B,SAAM/B,EAAEqC,GAAI9C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAIS,EAAEsC,GAAI/C,UAAS,EAAG,EAAG,EAAE,GAAI,EAAG,EAAG,EAAG,IAAM,GAAI4B,EAAQ,IAC/GvB,EAAUR,EAAiB,GAC3BS,GAAS0C,SAAiBvC,EAAEqC,EAAGrC,EAAEsC,EAAG,EAAG,GAAK1C,GAC5CD,GAAQ6C,SAAW,CAAEH,EAAGxC,EAAO,GAAIyC,EAAGzC,EAAO,GAAIR,KAAM,EAAGoD,OAAQ,KAClE5B,EAAaiB,KAAKnC,GAAO+C,SAAsB5C,EAAGC,IAAI4C,SAAW7C,EAAGC,IACpEa,EAAekB,MAAK2B,SAAU1D,EAAGD,EAAGG,EAAI,MAAM2C,SAAuB7C,EAAGD,IAAI4D,UAAcC,SAAiBC,KAAKC,OAAMC,SAAM/D,EAAGD,EAAGE,KAAO,KAAKwD,SAAWzD,EAAGD,GAAGgE,SAAM/D,EAAGD,EAAGE,GAAK,EAAG,EAAIE,EAAM,MAAOuD,SAAU3D,EAAGG,EAAIF,EAAG,MAAM2D,UAAcC,SAAiBC,KAAKC,OAAMC,SAAMhE,EAAGE,EAAGD,KAAO,KAAKyD,SAAW1D,EAAGG,GAAI6D,SAAMhE,EAAGG,EAAIF,GAAK,EAAG,EAAIK,EAAM,MACjVU,EAAiBgB,KAAKnC,GAAOiD,SAAuB7C,EAAGD,IAAIiE,SAAmBhE,EAAGD,EAAGE,EAAG,QAAS,IAAI+D,SAAmBjE,EAAGC,EAAGC,EAAG,QAAS,IAAI+D,SAAmBjE,EAAGE,EAAGD,EAAG,QAAS,IAClL0B,GAAc,mEAAkEN,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,uBAAuBA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,qBAAqBA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,iBAAiBA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,WAAWyC,KAAKC,OAAMC,SAAM/D,EAAGD,EAAGE,OAAO4D,KAAKC,OAAMC,SAAM/D,EAAGC,EAAGF,OAAO8D,KAAKC,OAAMC,SAAMhE,EAAGC,EAAGC,mFACnXyB,GAAc,YAAWN,EAAQ,gCAAgCvB,SACjEX,EAAIkF,yBAAyBjD,EAAKhB,EAAK0D,KAAKC,OAAMC,SAAM/D,EAAGD,EAAGE,IAAK4D,KAAKC,OAAMC,SAAM9D,EAAGD,EAAGD,KAAK,GAEnGS,GAAI+D,SAAgBxE,EAAGC,EAAGC,GAC1BQ,GAAK8D,SAAgBxE,EAAGC,EAAGE,GAC3BW,EAAekB,KAAKtB,EAAG,GAAIA,EAAG,IAC9BM,EAAiBgB,KAAKvB,EAAE,GAAIA,EAAE,IAC9BQ,EAAiB,CAAEwD,KAAMX,KAAKY,IAAI1E,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,EAAGrC,EAAEqC,EAAI,GAAIoC,KAAMb,KAAKY,IAAI1E,EAAEwC,EAAI,EAAGvC,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,GAAIoC,KAAMd,KAAKe,IAAI7E,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,EAAGrC,EAAEqC,EAAI,GAAIuC,KAAMhB,KAAKe,IAAI7E,EAAEwC,EAAI,EAAGvC,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,GAAIuC,YAAa,GAAIC,MAAO,IAAMC,WAAW,EAAMC,UAAW,IACzPhE,EAAe,CAAEuD,KAAMX,KAAKY,IAAI1E,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,EAAGrC,EAAEqC,EAAI,GAAIoC,KAAMb,KAAKY,IAAI1E,EAAEwC,EAAI,EAAGvC,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,GAAIoC,KAAMd,KAAKe,IAAI7E,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,EAAGrC,EAAEqC,EAAI,GAAIuC,KAAMhB,KAAKe,IAAI7E,EAAEwC,EAAI,EAAGvC,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,GAAIuC,YAAa,GAAIC,MAAO,EAAGC,WAAW,EAAOC,UAAW,GACrP/D,EAAmB,CAAEsD,KAAMX,KAAKY,IAAI1E,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,EAAGrC,EAAEqC,EAAI,GAAIoC,KAAMb,KAAKY,IAAI1E,EAAEwC,EAAI,EAAGvC,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,GAAIoC,KAAMd,KAAKe,IAAI7E,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,EAAGrC,EAAEqC,EAAI,GAAIuC,KAAMhB,KAAKe,IAAI7E,EAAEwC,EAAI,EAAGvC,EAAEuC,EAAI,EAAGtC,EAAEsC,EAAI,GAAIuC,YAAa,GAAIC,MAAO,GACzNtD,IAASyD,SAAWlE,EAAgBH,IAAkBqE,SAAWjE,EAAcH,GAC/EY,IAAawD,SAAWhE,EAAkBH,GAC1CW,GAAa,OAASxC,EAAIiG,WAAW1G,KAAK2G,eAAgBzD,IACd,IAAxClD,KAAKU,eAAekG,QAAQ5D,KAE9BhD,KAAKU,eAAe4C,KAAKN,GACzBhD,KAAKW,iBAAiB2C,KAAKL,GAC3BC,KAEFC,KAEF0D,SAAwB7G,OAG1BA,KAAK8G,2BAA6B,CAChC,iBACA,EACA,4F,6BC9PW,SAAS/G,IAEtBC,KAAKC,MAAQ,GACbD,KAAK+G,SAAW,GAChB/G,KAAKgH,mBAAqB,GAC1BhH,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxBX,KAAKiH,aAAe,GACpBjH,KAAKkH,QAAU,GACflH,KAAKmH,kBAAoB,GACzBnH,KAAKE,YAAc,GACnBF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKoH,QAAU,EACfpH,KAAKqH,YAAc,EACnBrH,KAAKsH,QAAS,EAEdtH,KAAKuH,2BAA4B,EACjCvH,KAAKwH,uBAAwB,EAC7BxH,KAAKyH,6BAA8B,EACnCzH,KAAK8G,4BAA6B,EAClC9G,KAAK0H,wBAAyB,EAC9B1H,KAAK2H,8BAA+B,EACpC3H,KAAK4H,4BAA6B,EAClC5H,KAAK6H,wBAAyB,EAC9B7H,KAAK8H,8BAA+B,EACpC9H,KAAK+H,oBAAqB,EAC1B/H,KAAKgI,uBAAwB,EAC7BhI,KAAKiI,kBAAmB,EACxBjI,KAAKkI,sBAAuB,EAC5BlI,KAAKmI,mBAAoB,EACzBnI,KAAKoI,uBAAwB,EAC7BpI,KAAKqI,+BAAgC,EACrCrI,KAAKsI,qBAAsB,EAC3BtI,KAAKuI,MAAQ,GACbvI,KAAKwI,YAAa,EAClBxI,KAAKyI,gBAAkB,GAMvBzI,KAAK0I,mBAAoB,EACzB1I,KAAK2I,YAAa,EAClB3I,KAAK4I,uBAAwB,EAC7B5I,KAAK6I,KAAM,EACX7I,KAAK8I,eAAgB,EACrB9I,KAAK+I,SAAU,EACf/I,KAAKgJ,eAAiB,GACtBhJ,KAAKiJ,sBAAwB,GAC7BjJ,KAAKkJ,cAAe,EACpBlJ,KAAKQ,gBAAkB,SAAUmG,KACjC3G,KAAKmJ,cAAgB,G","file":"js/97306.2ae6baafdcc80d58bc7b.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, creerNomDePolygone, lettreDepuisChiffre, nombreAvecEspace, range1 } from '../../modules/outils.js'\nimport { codeSegments, point, pointIntersectionDD, longueur, pointAdistance, labelPoint, droite, droiteParPointEtPerpendiculaire, segmentAvecExtremites, polygoneAvecNom, cercle, pointIntersectionLC, pointIntersectionCC, traceCompas, dansLaCibleRonde, cibleRonde, rotation, similitude, codageAngleDroit, afficheLongueurSegment, afficheMesureAngle, codeAngle, texteParPoint, angle, mathalea2d } from '../../modules/2d.js'\nimport Alea2iep from '../../modules/Alea2iep.js'\n\n/**\n * publié le 1/12/2020\n * @author Jean-Claude Lhote\n * Réfrence 6G21-1 et ... (exercice en 5e ? pas encore fait)\n */\nexport default function ConstruireUnTriangleAvecCible () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = 'Construire un triangle avec cible auto-corrective'\n  this.nbQuestions = 4\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = false\n  this.classe = 6\n  this.typeExercice = 'IEP'\n\n  this.nouvelleVersion = function () {\n    let IEP\n    this.listeQuestions = []\n    this.listeCorrections = []\n    const celluleAleaRonde = function (rang) {\n      const lettre = lettreDepuisChiffre(randint(1, 8))\n      const chiffre = Number(randint(1, rang)).toString()\n      return lettre + chiffre\n    }\n\n    let typesDeQuestionsDisponibles, cible, cellule, result, A, B, C, CC, lAB, lBC, lAC, cA, cB, T, TT, dBC, dAC, dAB, objetsEnonceml, objetsEnonce, objetsCorrection, paramsEnonceml, paramsEnonce, paramsCorrection, nom, sommets, montriangle\n    if (this.classe === 6) typesDeQuestionsDisponibles = range1(6)\n    else typesDeQuestionsDisponibles = range1(9)\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      IEP = new Alea2iep()\n      objetsEnonce = []\n      objetsEnonceml = []\n      objetsCorrection = []\n      texte = 'Le triangle ci-dessous a été réalisé à main levée.<br>Construire ce triangle avec les instruments de géométrie en respectant les mesures indiquées.<br>'\n      texteCorr = 'Voici la construction que tu devais réaliser.<br>'\n      nom = creerNomDePolygone(3, 'PQ')\n      sommets = []\n      for (let i = 0; i < 3; i++) sommets.push(nom[i])\n      A = point(0, 0, sommets[0], 'left')\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // triangle quelconque par ses trois longueurs\n          lAC = randint(35, 45)\n          lBC = calcul(randint(35, 45, lAC) / 10)\n          lAB = calcul(randint(46, 60) / 10)\n          lAC = calcul(lAC / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cA = cercle(A, lAC)\n          cB = cercle(B, lBC)\n          C = pointIntersectionCC(cA, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), afficheLongueurSegment(C, B, 'black', 1), afficheLongueurSegment(A, C, 'black', 1))\n          objetsCorrection.push(cible, traceCompas(A, C, 30, 'gray', 1, 2), traceCompas(B, C, 30, 'gray', 1, 2), afficheLongueurSegment(B, A), afficheLongueurSegment(C, B), afficheLongueurSegment(A, C))\n          texteCorr += 'Pour cette construction, nous avons utilisé le compas et la règle graduée.<br>'\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangle3longueurs(nom, lAB, lAC, lBC, true)\n          break\n        case 2: // triangle ABC rectangle en B dont on connait AB et BC\n          lBC = randint(70, 80) / 10\n          lAB = calcul(randint(46, 60) / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cB = cercle(B, lBC)\n          dAB = droite(A, B)\n          dBC = droiteParPointEtPerpendiculaire(B, dAB)\n          C = pointIntersectionLC(dBC, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), afficheLongueurSegment(C, B, 'black', 1), codageAngleDroit(A, B, CC))\n          objetsCorrection.push(cible, traceCompas(B, C, 30, 'gray', 1, 2), codageAngleDroit(A, B, C), afficheLongueurSegment(B, A), afficheLongueurSegment(C, B))\n          texteCorr += 'Pour cette construction, nous avons utilisé la règle graduée, l\\'équerre et le compas.<br>'\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n\n          IEP.triangleRectangle2Cotes(nom, lAB, lBC, true)\n          break\n        case 3: // triangle ABC isocèle en A\n          lBC = calcul(randint(35, 45) / 10)\n          lAB = calcul(randint(46, 60) / 10)\n          lAC = lAB\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cA = cercle(A, lAC)\n          cB = cercle(B, lBC)\n          C = pointIntersectionCC(cA, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), afficheLongueurSegment(C, B, 'black', 1), codeSegments('||', 'black', A, B, A, CC))\n          objetsCorrection.push(cible, traceCompas(A, C, 30, 'gray', 1, 2), traceCompas(B, C, 30, 'gray', 1, 2), afficheLongueurSegment(B, A), afficheLongueurSegment(C, B), codeSegments('||', 'black', A, B, A, C), afficheLongueurSegment(A, C))\n          texteCorr += 'Pour cette construction, nous avons utilisé le compas et la règle graduée.<br>'\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          montriangle = IEP.triangle3longueurs(nom, lAB, lAC, lBC, true)\n          IEP.segmentCodage(montriangle[0], montriangle[1], { codage: '\\\\\\\\' })\n          IEP.segmentCodage(montriangle[0], montriangle[2], { codage: '\\\\\\\\' })\n          break\n        case 4: // triangle ABC recatangle isocèle en B\n          lAB = calcul(randint(46, 60) / 10)\n          lBC = lAB\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cB = cercle(B, lBC)\n          dAB = droite(A, B)\n          dBC = droiteParPointEtPerpendiculaire(B, dAB)\n          C = pointIntersectionLC(dBC, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), codeSegments('||', 'black', A, B, B, CC), codageAngleDroit(A, B, CC))\n          objetsCorrection.push(cible, traceCompas(B, C, 30, 'gray', 1, 2), codageAngleDroit(A, B, C), afficheLongueurSegment(B, A), codeSegments('||', 'black', A, B, B, C))\n          texteCorr += 'Pour cette construction, nous avons utilisé l\\'équerre et la règle graduée.<br>'\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          montriangle = IEP.triangleRectangle2Cotes(nom, lAB, lAB, true)\n          IEP.segmentCodage(montriangle[0], montriangle[1], { codage: '\\\\\\\\' })\n          IEP.segmentCodage(montriangle[1], montriangle[2], { codage: '\\\\\\\\' })\n          break\n        case 5: // triangle équilatéral\n          lAB = calcul(randint(46, 60) / 10)\n          lAC = lAB\n          lBC = lAB\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cA = cercle(A, lAC)\n          cB = cercle(B, lBC)\n          C = pointIntersectionCC(cA, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), codeSegments('||', 'black', A, B, B, CC, A, CC))\n          objetsCorrection.push(cible, traceCompas(A, C, 30, 'gray', 1, 2), traceCompas(B, C, 30, 'gray', 1, 2), afficheLongueurSegment(B, A), codeSegments('||', 'black', A, B, B, C, A, C))\n          texteCorr += 'Pour cette construction, nous avons utilisé le compas et la règle graduée.<br>'\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangleEquilateral(nom, lAB, true)\n          break\n        case 6: // triangle ABC dont on connait AB et AC et l'angle BAC\n          lAB = calcul(randint(46, 60) / 10)\n          lAC = randint(40, 60) / 10\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1], 'right')\n          C = similitude(B, A, randint(8, 24) * 5, lAC / lAB, sommets[2], 'above')\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(codeAngle(B, A, CC, 1.1), afficheLongueurSegment(B, A), texteParPoint(nombreAvecEspace(Math.round(angle(B, A, C))) + '°', similitude(B, A, angle(B, A, C) / 2, 1 / lAB + 0.1)), afficheLongueurSegment(A, C, 'black', 1))\n          objetsCorrection.push(cible, afficheLongueurSegment(B, A), afficheMesureAngle(B, A, C, 'black', 1), afficheLongueurSegment(A, C, 'black', 1))\n          texteCorr += 'Pour cette construction, nous avons utilisé le rapporteur et la règle graduée.<br>'\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangle2longueurs1angle(nom, lAB, lAC, Math.round(angle(B, A, C)), true)\n          break\n        case 7: // triangle ABC dont ont connais AB et les deux angles adjacents\n          lAB = calcul(randint(46, 60) / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          dAB = droite(A, B)\n          dAC = rotation(dAB, A, randint(8, 14) * 5)\n          dBC = rotation(dAB, B, -randint(8, 12) * 5)\n          C = pointIntersectionDD(dAC, dBC, sommets[2])\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(codeAngle(B, A, CC, 1.1), texteParPoint(nombreAvecEspace(Math.round(angle(B, A, C))) + '°', similitude(B, A, angle(B, A, C) / 2, 1 / lAB + 0.1)), codeAngle(A, B, CC, 1.1), texteParPoint(nombreAvecEspace(Math.round(angle(A, B, C))) + '°', similitude(A, B, -angle(A, B, C) / 2, 1 / lAB + 0.1)))\n          objetsCorrection.push(cible, afficheLongueurSegment(B, A), afficheMesureAngle(B, A, C, 'black', 1), afficheMesureAngle(A, B, C, 'black', 1))\n          texteCorr += 'Pour cette construction, nous avons utilisé le rapporteur.<br>'\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangle1longueur2angles(sommets, lAB, Math.round(angle(B, A, C)), Math.round(angle(A, B, C)))\n          break\n        case 8: // triangle ABC rectangle en B dont on connait AB et l'hypoténuse AC\n          lAC = randint(70, 80) / 10\n          lAB = calcul(randint(46, 60) / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cA = cercle(A, lAC)\n          dAB = droite(A, B)\n          dBC = droiteParPointEtPerpendiculaire(B, dAB)\n          C = pointIntersectionLC(dBC, cA, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), afficheLongueurSegment(A, C, 'black', 1), codageAngleDroit(A, B, CC))\n          objetsCorrection.push(cible, traceCompas(A, C, 30, 'gray', 1, 2), codageAngleDroit(A, B, C), afficheLongueurSegment(B, A), afficheLongueurSegment(A, C))\n          texteCorr += 'Pour cette construction, nous avons utilisé la règle graduée, l\\'équerre et le compas.<br>'\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangleRectangleCoteHypotenuse(nom, lAB, lAC, true)\n          break\n        case 9: // triangle ABC dont ont connais AB un angle adjacent et l'angle opposé\n          lAB = calcul(randint(46, 60) / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          dAB = droite(A, B)\n          dAC = rotation(dAB, A, randint(8, 14) * 5)\n          dBC = rotation(dAB, B, -randint(8, 12) * 5)\n          C = pointIntersectionDD(dAC, dBC, sommets[2])\n          lAC = longueur(A, C)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(codeAngle(B, A, CC, 1.1), afficheLongueurSegment(B, A), texteParPoint(nombreAvecEspace(Math.round(angle(B, A, C))) + '°', similitude(B, A, angle(B, A, C) / 2, 1 / lAB + 0.1)), codeAngle(A, CC, B, 1.1), texteParPoint(nombreAvecEspace(Math.round(angle(A, C, B))) + '°', similitude(A, CC, angle(A, CC, B) / 2, 1 / lAC + 0.1)))\n          objetsCorrection.push(cible, afficheLongueurSegment(B, A), afficheMesureAngle(B, A, C, 'black', 1), afficheMesureAngle(A, B, C, 'black', 1), afficheMesureAngle(A, C, B, 'black', 1))\n          texteCorr += `Pour cette construction, il a fallu calculer l'angle $\\\\widehat{${sommets[0] + sommets[1] + sommets[2]}}$.<br>$\\\\widehat{${sommets[0] + sommets[1] + sommets[2]}}=180-\\\\widehat{${sommets[1] + sommets[0] + sommets[2]}}-\\\\widehat{${sommets[0] + sommets[2] + sommets[1]}}=180-${Math.round(angle(B, A, C))}-${Math.round(angle(B, C, A))}=${Math.round(angle(A, B, C))}$.<br>Nous avons utilisé le rapporteur pour effectuer cette construction.<br>`\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangle1longueur2angles(nom, lAB, Math.round(angle(B, A, C)), Math.round(angle(C, B, A)), true)\n      }\n      T = polygoneAvecNom(A, B, C)\n      TT = polygoneAvecNom(A, B, CC)\n      objetsEnonceml.push(TT[0], TT[1])\n      objetsCorrection.push(T[0], T[1])\n      paramsEnonceml = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 3), ymin: Math.min(A.y - 1, B.y - 1, C.y - 3), xmax: Math.max(A.x + 1, B.x + 1, C.x + 3), ymax: Math.max(A.y + 1, B.y + 1, C.y + 3), pixelsParCm: 20, scale: 0.58, mainlevee: true, amplitude: 0.3 }\n      paramsEnonce = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 3), ymin: Math.min(A.y - 1, B.y - 1, C.y - 3), xmax: Math.max(A.x + 1, B.x + 1, C.x + 3), ymax: Math.max(A.y + 1, B.y + 1, C.y + 3), pixelsParCm: 30, scale: 1, mainlevee: false, amplitude: 1 }\n      paramsCorrection = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 3), ymin: Math.min(A.y - 1, B.y - 1, C.y - 3), xmax: Math.max(A.x + 1, B.x + 1, C.x + 3), ymax: Math.max(A.y + 1, B.y + 1, C.y + 3), pixelsParCm: 30, scale: 1 }\n      texte += mathalea2d(paramsEnonceml, objetsEnonceml) + mathalea2d(paramsEnonce, objetsEnonce)\n      texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n      texteCorr += '<br>' + IEP.htmlBouton(this.numeroExercice, i)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  this.besoinFormulaire2Numerique = [\n    'Type de cahier',\n    3,\n    '1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}