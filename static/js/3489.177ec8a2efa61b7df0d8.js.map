{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G23-1.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","amcType","interactifReady","titre","MesurerUnAngle","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","video","nouvelleVersion","angle","anglerot","Apos","Bpos","Cpos","p","texte","texteCorr","A","B","C","s2","s1","bis","parseInt","listeQuestions","listeCorrections","signes","labels","secteur","xMin","xMax","yMin","yMax","objetsEnonce","objetsCorrection","secteur0","i","push","choice","randint","lettreDepuisChiffre","interactif","point","rotation","texteParPoint","similitude","homothetie","demiDroite","pointSurSegment","labelPoint","afficheMesureAngle","Math","min","x","max","y","context","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","autoCorrection","enonce","propositions","abs","statut","round","options","ordered","lastChoice","propositionsQcm","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceInteractif","exercice","document","addEventListener","button","querySelector","event","spanReponseLigne","champTexte","getElementById","value","replaceAll","reponse","valeur","toString","innerHTML","readOnly","style","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","length","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","messageFeedback","id","message","feedback","type","querySelectorAll","uicheck","exerciceQcm","espace","undefined","shuffleJusqua","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","a","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","param","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","includes","div","cssIcon","remove","divTitre","test","messageUtilisateur","code","width"],"mappings":"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","file":"js/3489.177ec8a2efa61b7df0d8.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { point, labelPoint, rotation, mathalea2d, afficheMesureAngle, homothetie, demiDroite, texteParPoint, similitude, pointSurSegment } from '../../modules/2d.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType =1 // QCM \nexport const interactifReady = true\n\nexport const titre = 'Mesurer un angle'\n\n/**\n * Construire un angle\n * @Auteur Jean-Claude Lhote\n * Référence 6G23\n */\nexport default function MesurerUnAngle () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbQuestionsModifiable = true\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1\n  this.video = 'TEzu9uky56M'\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let angle; let anglerot; let Apos; let Bpos; let Cpos; let p; let texte; let texteCorr; let A; let B; let C; let s2; let s1; let bis; const signes = []\n    let labels, secteur, xMin, xMax, yMin, yMax, objetsEnonce, objetsCorrection, secteur0\n\n    for (let i = 0; i < this.nbQuestions; i++) {\n      signes.push(choice([-1, 1]))\n      if (this.sup === 1) {\n        angle = randint(2, 16, 9) * 10\n      } else if (this.sup === 2) {\n        angle = randint(4, 32, 18) * 5\n      } else {\n        angle = randint(20, 160, 90)\n      }\n      anglerot = randint(-180, 180)\n      angle = signes[i] * angle\n      p = [choice(['x', 'y', 'z', 't']), lettreDepuisChiffre(randint(1, 16)), choice(['s', 'u', 'v', 'w'])]\n      if (this.interactif) {\n        texte = `Estime la mesure de l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$ sans instrument.<br>`\n      } else {\n        texte = `Mesure l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$.<br>`\n      }\n      A = point(0, 0)\n      B = point(6, 0)\n      B = rotation(B, A, anglerot)\n\n      // texte, A, orientation = \"milieu\", color = 'black', scale = 1, ancrageDeRotation = \"middle\", math_on = false\n      Bpos = texteParPoint(p[0], similitude(A, homothetie(B, A, 0.95), signes[i] * 90, 0.1), 'milieu', 'black', 1, 'middle', true)\n      s1 = demiDroite(A, B)\n      C = rotation(B, A, angle)\n      bis = rotation(B, A, angle / 2)\n      Apos = texteParPoint(p[1], pointSurSegment(A, bis, -0.5), 'milieu', 'black', 1, 'middle', true)\n      Cpos = texteParPoint(p[2], similitude(A, homothetie(C, A, 0.95), -signes[i] * 90, 0.1), 'milieu', 'black', 1, 'middle', true)\n      s2 = demiDroite(A, C)\n      labels = labelPoint(A, B, C)\n      secteur = afficheMesureAngle(B, A, C)\n      secteur0 = afficheMesureAngle(B, A, C, 'black', 1.5, ' ')\n      texteCorr = ''\n      xMin = Math.min(A.x, C.x, B.x) - 1\n      xMax = Math.max(A.x, C.x, B.x) + 1\n      yMin = Math.min(A.y, C.y, B.y) - 1\n      yMax = Math.max(A.y, C.y, B.y) + 1\n      context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n      objetsEnonce = [s1, s2, labels, Apos, Bpos, Cpos, secteur0]\n      objetsCorrection = [s1, s2, labels, Apos, Bpos, Cpos, secteur]\n      texte += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.8 }, objetsEnonce)\n      texteCorr += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection)\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${Math.abs(angle)}\\\\degree$`,\n          statut: true\n        },\n        {\n          texte: `$${Math.abs(180 - angle)}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: `$${Math.abs(angle / 2)}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: `$${Math.abs(Math.round((180 + angle) / 2))}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: '$180\\\\degree$',\n          statut: false\n        },\n        {\n          texte: '$90\\\\degree$',\n          statut: false\n        }\n      ]\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 6\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Précision de l\\'angle', 3, '1 : Angle à 10°\\n2 : Angle à 5°\\n3 : Angle à 1°']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              message: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.',',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n\n\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (var prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n// Module regroupant les fonctions de gestions des erreurs.\n\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} feedback\n * @param {string} [feedback.message]\n * @param {string} [feedback.type]\n * @param {string} [feedback.titre]\n */\nexport function addFeedback (container, { message = 'Une erreur est survenue', type = 'erreur', titre } = {}) {\n  if (!types.includes(type)) {\n    console.error(Error(`type de message inconnu : ${type}`))\n    type = 'error'\n  }\n  const cssDiv = type === 'info' ? '' : type\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = type === 'error'\n    ? 'frown outline'\n    : (type === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  if (/<[a-zA-Z0-9_ \"']+/.test(message)) div.innerHTML += message\n  else addText(div, message)\n  return div\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        type: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} feedback\n * @param {string} feedback.id id du div conteneur à utiliser\n * @param {string} feedback.message Le message à afficher\n * @param {string} feedback.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, message = '', type = 'error' } = {}) {\n  if (!id || !message) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message, type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}