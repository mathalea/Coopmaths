{"version":3,"file":"js/82224.c7d28fde0bbd6c1f3f97.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5G11-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,calcul,choisitLettresDifferentes,lettreDepuisChiffre,arcenciel} from '../../modules/outils.js'\nimport {point,tracePoint,labelPoint,codageMilieu,segment,traceCompas,dansLaCibleCarree,cibleCarree,rotation,longueur,mathalea2d} from '../../modules/2d.js'\n\n\nexport const titre = 'Construire le symétrique d’un point avec cible auto-corrective'\n\n/**\n * Construction de symétrique avec dispositif d'auto-correction aléatoire\n * Ref 5G11-3\n * @author Jean-Claude Lhote\n * Publié le 30/11/2020\n */\nexport default function Construire_symetrique_point_5e() {\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.consigne = \"\";\n\tthis.nbQuestions = 1;\n\tthis.nbQuestionsModifiable = false;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.sup = 3;\n\tthis.nouvelleVersion = function () {\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tlet result = [0, 0], texteCorr = \"\", nbpoints = parseInt(this.sup);\n\t\tlet celluleAlea = function (rang) {\n\t\t\tlet lettre = lettreDepuisChiffre(randint(1, rang));\n\t\t\tlet chiffre = Number(randint(1, rang)).toString();\n\t\t\treturn lettre + chiffre;\n\t\t};\n\t\t// On prépare la figure...\n\t\tlet O = point(0, 0, 'O');\n\t\tlet marks = ['/', '//', '///', 'x', 'o', 'S', 'V'];\n\t\tlet noms = choisitLettresDifferentes(nbpoints, 'QO', true);\n\t\tthis.consigne = `Construire le symétrique des points $${noms[0]}$`;\n\t\tfor (let i = 1; i < nbpoints - 1; i++) {\n\t\t\tthis.consigne += `, $${noms[i]}$`;\n\t\t}\n\t\tthis.consigne += ` et $${noms[nbpoints - 1]}$ par rapport à $O$.`;\n\t\tlet cibles = [], M = [], N = [], objetsEnonce = [], objetsCorrection = []; //cibles, M point marqués, N symétrique de M\n\t\tlet cellules = [];\n\t\tlet xMin, yMin, xMax, yMax, nontrouve, assezloin;\n\t\t[xMin, yMin, xMax, yMax] = [0, 0, 0, 0];\n\t\tfor (let i = 0; i < nbpoints; i++) { //On place les cibles.\n\t\t\tN.push(point(calcul(randint(-80, 80, 0) / 10), calcul(randint(-80, 80, 0) / 10), noms[i] + \"\\'\"));\n\t\t\tnontrouve = true;\n\t\t\twhile (longueur(N[i], O) < 3 || nontrouve) {\n\t\t\t\tnontrouve = true;\n\t\t\t\tif (longueur(N[i], O) < 3) {\n\t\t\t\t\tN[i].x = calcul(randint(-80, 80, 0) / 10);\n\t\t\t\t\tN[i].y = calcul(randint(-80, 80, 0) / 10);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tassezloin = true;\n\t\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\t\tif (longueur(N[i], N[j]) < 4.5)\n\t\t\t\t\t\t\tassezloin = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (assezloin == false) { //éloigner les points donc les grilles\n\t\t\t\t\t\tN[i].x = calcul(randint(-80, 80, 0) / 10);\n\t\t\t\t\t\tN[i].y = calcul(randint(-80, 80, 0) / 10);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tnontrouve = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tobjetsEnonce.push(tracePoint(O), labelPoint(O));\n\t\tobjetsCorrection.push(tracePoint(O), labelPoint(O));\n\n\t\tfor (let i = 0; i < nbpoints; i++) {\n\t\t\tcellules.push(celluleAlea(4));\n\t\t\tresult = dansLaCibleCarree(N[i].x, N[i].y, 4, 0.6, cellules[i]);\n\t\t\tlet cible = cibleCarree({ x: result[0], y: result[1], rang: 4, num: i + 1, taille: 0.6 });\n\t\t\tcible.taille = 0.6;\n\t\t\tcible.color = 'orange';\n\t\t\tcible.opacite = 0.7;\n\t\t\tcibles.push(cible);\n\t\t}\n\t\tfor (let i = 0; i < nbpoints; i++) {\n\t\t\tM.push(rotation(N[i], O, 180, noms[i]));\n\t\t\tobjetsEnonce.push(tracePoint(M[i]), labelPoint(M[i]), cibles[i]);\n\t\t\tobjetsCorrection.push(tracePoint(M[i], N[i]), labelPoint(M[i], N[i]), cibles[i]);\n\t\t\tobjetsCorrection.push(segment(M[i], N[i], arcenciel(i)), codageMilieu(M[i], N[i], arcenciel(i + 5), marks[i]));\n\t\t\tobjetsCorrection.push(traceCompas(O, N[i], 20));\n\t\t\ttexteCorr += `$${noms[i]}\\'$, le symétrique du point $${noms[i]}$ est dans la case ${cellules[i]} de la grille ${i + 1}.<br>`;\n\t\t}\n\n\t\tfor (let i = 0; i < nbpoints; i++) {\n\t\t\txMin = Math.min(xMin, N[i].x - 3, M[i].x - 3);\n\t\t\tyMin = Math.min(yMin, N[i].y - 3, M[i].y - 3);\n\t\t\txMax = Math.max(xMax, N[i].x + 3, M[i].x + 3);\n\t\t\tyMax = Math.max(yMax, N[i].y + 3, M[i].y + 3);\n\t\t}\n\n\t\tlet fenetreMathalea2d = [xMin, yMin, xMax, yMax];\n\n\t\tthis.listeQuestions.push(mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsEnonce));\n\t\tthis.listeCorrections.push(texteCorr + mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection));\n\t\tlisteQuestionsToContenu(this);\n\n\t\t//  let nonchoisi,coords=[],x,y,objetsEnonce=[],objetsCorrection=[],nomd,label_pos\n\t};\n\tthis.besoinFormulaireNumerique = ['Nombre de points (1 à 5)', 5, \"1\\n2\\n3\\n4\\n5\"];\n\t// this.besoinFormulaire2CaseACocher = [\"Avec des points de part et d'autre\"];\t\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Construire_symetrique_point_5e","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","result","texteCorr","nbpoints","parseInt","O","point","marks","noms","choisitLettresDifferentes","i","xMin","yMin","xMax","yMax","nontrouve","assezloin","cibles","M","N","objetsEnonce","objetsCorrection","cellules","push","calcul","randint","longueur","x","y","j","tracePoint","labelPoint","rang","lettreDepuisChiffre","Number","toString","dansLaCibleCarree","cible","cibleCarree","num","taille","color","opacite","rotation","segment","arcenciel","codageMilieu","traceCompas","Math","min","max","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}