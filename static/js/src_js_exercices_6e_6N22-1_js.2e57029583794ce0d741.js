/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e_6N22-1_js"],{

/***/ "./src/js/exercices/6e/6N22-1.js":
/*!***************************************!*\
  !*** ./src/js/exercices/6e/6N22-1.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Rapports_sur_un_segment)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n/* harmony import */ var _modules_Fractions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../modules/Fractions.js */ \"./src/js/modules/Fractions.js\");\n\n\n\n\nconst titre = 'Rapport de deux longueurs sur un segment'\n\n/** \n * * Exprimer un rapport de longueurs sur un segment\n * * 6N22-1\n * @author Sébastien Lozano\n */\n\nfunction Rapports_sur_un_segment() {\n  'use strict';\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.beta = false;\n  if (this.beta) {\n    this.nb_questions = 2;\n  } else {\n    this.nb_questions = 2;\n  };\n\n  this.titre = titre;\n  this.consigne = `Sur tous les axes, les graduations sont régulières.`;\n\n  this.nb_cols = 1;\n  this.nb_cols_corr = 1;\n  //this.nb_questions_modifiable = false;\n  sortie_html ? this.spacing = 3 : this.spacing = 2;\n  sortie_html ? this.spacing_corr = 2.5 : this.spacing_corr = 1.5;\n\n  let type_de_questions_disponibles;\n\n  this.nouvelle_version = function () {\n    if (this.beta) {\n      type_de_questions_disponibles = [0, 1];\n    } else {\n      //type_de_questions_disponibles = shuffle([choice([1,3]),choice([2,4]),0]);      \t\t\t\n      type_de_questions_disponibles = [0, 1];\n    };\n\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n\n    //let liste_type_de_questions  = combinaison_listes(type_de_questions_disponibles,this.nb_questions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(type_de_questions_disponibles, this.nb_questions) // Tous les types de questions sont posées --> à remettre comme ci dessus\t\t\n\n    for (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n      // une fonction pour le singulier pluriel\n      function sing_plur(nombre, singulier, pluriel) {\n        if (nombre > 1) {\n          return pluriel\n        } else {\n          return singulier\n        };\n      };\n\n      // on choisit deux entiers pour former les fractions\n      let entier_max = 9;\n      let m = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, entier_max);\n      let n = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, entier_max, m); // on évite l'autre pour éviter la fraction 1\n      let params = {\n        xmin: -0.4,\n        ymin: -2,\n        xmax: 15 * entier_max,// pour éviter un cadrage trop large\n        ymax: 1,\n        pixelsParCm: 20,\n        scale: 1,\n      }\n      // on colle la figure à l'énoncé\n      let y_enonce = -1.2;\n\n      // on a parfois des figure trop petites ou trop grandes\n      //\n      let rayon;\n      rayon = 5;\n      // if (m<n) {\n      //   rayon = 15\n      // } else {\n      //   rayon = 15/Math.ceil(m/n)\n      // };\n\n      //on choisit de façon aléatoire un triplet de noms pour les points\n      let noms_choix = [['A', 'B', 'C'], ['D', 'E', 'F'], ['I', 'J', 'K'], ['L', 'M', 'N']]\n      let noms = noms_choix[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, noms_choix.length - 1)];\n\n      // pour les situations, autant de situations que de cas dans le switch !\n      let situations = [\n        {//case 0 --> m < n\n          m: Math.min(m, n),\n          n: Math.max(m, n),\n          rapport: `\\\\dfrac{${noms[0] + noms[1]}}{${noms[0] + noms[2]}}`,\n          rapport_inverse: `\\\\dfrac{${noms[0] + noms[2]}}{${noms[0] + noms[1]}}`,\n          fig: (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(\n            params,\n            (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_3__.fraction)(Math.min(m, n), Math.max(m, n)).representation(0, 0, rayon, 0, 'segment', '', noms[0], noms[1], 1, noms[2]),\n          ),\n          segment_corr1: `\\\\textcolor{red}{[${noms[0] + noms[2]}]}`,\n          longueur_corr1: `\\\\textcolor{red}{${noms[0] + noms[2]}}`,\n          m_color_corr: `\\\\textcolor{red}{${Math.min(m, n)}}`,\n          n_color_corr: `\\\\textcolor{blue}{${Math.max(m, n)}}`,\n          fig_corr1: (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(\n            params,\n            (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_3__.fraction)(Math.min(m, n), Math.max(m, n)).representation(0, y_enonce, rayon, 0, 'segment', 'red', noms[0], noms[1], 1, noms[2]),\n          ),\n          segment_corr2: `\\\\textcolor{blue}{[${noms[0] + noms[1]}]}`,\n          longueur_corr2: `\\\\textcolor{blue}{${noms[0] + noms[1]}}`,\n          fig_corr2: (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(\n            params,\n            (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_3__.fraction)(Math.max(m, n), Math.min(m, n)).representation(0, y_enonce, (Math.min(m, n) / Math.max(m, n)) * rayon, 0, 'segment', 'blue', noms[0], noms[2], 1, noms[1]),\n          )\n        },\n        {//case 1 --> m > n\n          m: Math.max(m, n),\n          n: Math.min(m, n),\n          rapport: `\\\\dfrac{${noms[0] + noms[1]}}{${noms[0] + noms[2]}}`,\n          rapport_inverse: `\\\\dfrac{${noms[0] + noms[2]}}{${noms[0] + noms[1]}}`,\n          fig: (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(\n            params,\n            (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_3__.fraction)(Math.max(m, n), Math.min(m, n)).representation(0, 0, 5, 0, 'segment', '', noms[0], noms[1], 1, noms[2]),\n          ),\n          segment_corr1: `\\\\textcolor{red}{[${noms[0] + noms[2]}]}`,\n          longueur_corr1: `\\\\textcolor{red}{${noms[0] + noms[2]}}`,\n          m_color_corr: `\\\\textcolor{red}{${Math.max(m, n)}}`,\n          n_color_corr: `\\\\textcolor{blue}{${Math.min(m, n)}}`,\n          fig_corr1: (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(\n            params,\n            (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_3__.fraction)(Math.max(m, n), Math.min(m, n)).representation(0, y_enonce, 5, 0, 'segment', 'red', noms[0], noms[1], 1, noms[2]),\n          ),\n          segment_corr2: `\\\\textcolor{blue}{[${noms[0] + noms[1]}]}`,\n          longueur_corr2: `\\\\textcolor{blue}{${noms[0] + noms[1]}}`,\n          fig_corr2: (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(\n            params,\n            (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_3__.fraction)(Math.min(m, n), Math.max(m, n)).representation(0, y_enonce, (Math.max(m, n) / Math.min(m, n)) * 5, 0, 'segment', 'blue', noms[0], noms[2], 1, noms[1]),\n          )\n        },\n\n      ];\n\n      let enonces = [];\n      for (let k = 0; k < situations.length; k++) {\n        enonces.push({\n          enonce: `\n          Exprimer les rapports suivants $${situations[k].rapport}$ et $${situations[k].rapport_inverse}$.\n          <br>\n          ${situations[k].fig}     \t\t\t\n\t\t\t\t\t`,\n          question: ``,\n          correction: `\n          Les graduations étant régulières, comptons le nombre de graduations pour chaque segment :<br>\n          ${situations[k].fig_corr1}<br>\n          Le segment $${situations[k].segment_corr1}$ compte $${situations[k].m_color_corr}$ ${sing_plur(situations[k].m, 'graduation', 'graduations')}.<br>\n          ${situations[k].fig_corr2}<br>\n          Le segment $${situations[k].segment_corr2}$ compte $${situations[k].n_color_corr}$ ${sing_plur(situations[k].n, 'graduation', 'graduations')}.<br><br>\n          Donc $\\\\dfrac{${situations[k].longueur_corr2}}{${situations[k].longueur_corr1}}=\\\\dfrac{${situations[k].n_color_corr}}{${situations[k].m_color_corr}}$\n          et $\\\\dfrac{${situations[k].longueur_corr1}}{${situations[k].longueur_corr2}}=\\\\dfrac{${situations[k].m_color_corr}}{${situations[k].n_color_corr}}$<br><br>\n          $\\\\textbf{D'où $\\\\mathbf{${situations[k].rapport}=}${(0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_3__.fraction)(situations[k].n, situations[k].m).texFractionSimplifiee}$ et $\\\\mathbf{${situations[k].rapport_inverse}=}${(0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_3__.fraction)(situations[k].m, situations[k].n).texFractionSimplifiee}$}$<br>\n\n\t\t\t\t\t`\n        });\n      };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (liste_type_de_questions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n            texte += `             `\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[0].correction}`;\n          };\n          break;\n        case 1:\n          texte = `${enonces[1].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[1].correction}`;\n          };\n          break;\n        case 2:\n          texte = `${enonces[2].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[2].correction}`;\n          };\n          break;\n        case 3:\n          texte = `${enonces[3].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[3].correction}`;\n          };\n          break;\n        case 4:\n          texte = `${enonces[4].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[4].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[4].correction}`;\n          };\n          break;\n      };\n\n      if (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\n  }\n  //this.besoin_formulaire_numerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  //this.besoin_formulaire2_case_a_cocher = [\"Avec des équations du second degré\"];\t\n};\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/6N22-1.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);