{"version":3,"file":"js/24542.9b85888d17edb25b314f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N23-5.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, texFraction, calcul, choice, texNombre2 } from '../../modules/outils.js'\nimport { fraction } from '../../modules/fractions.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 'qcmMono' // QCM\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\nexport const titre = 'Donner une écriture fractionnaire'\n\n/**\n * Donner la fraction correspondant à un nombre ou à un calcul\n * @author Jean-Claude Lhote\n * Ref 6N23-5\n * Publié le 10/03/2021\n */\nexport default function SensDeLaFraction () {\n  Exercice.call(this)\n  this.nbQuestions = 4\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    const typeDeQuestionsDisponibles = [1, 2, 3, 4]\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, a, b, f, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = ''\n      texteCorr = ''\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          a = randint(10, 25)\n          b = randint(10, 25, a)\n          texte = `Le quotient de $${a}$ par $${b}$ s'écrit en écriture fractionnaire : $${texFraction(\n              '\\\\phantom{00000}',\n              '\\\\phantom{00000}'\n            )}$`\n          texteCorr = `Le quotient de $${a}$ par $${b}$ s'écrit $${texFraction(a, b)}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texFraction(a, b)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texFraction(b, a)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(Math.abs(a - b), b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a + b, b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a * 10, b)}$`,\n              statut: false\n            }\n          ]\n          break\n\n        case 2:\n          a = randint(10, 25)\n          b = randint(10, 25, a)\n          texte = `Le nombre qui, multiplié par $${b}$, donne $${a}$ s'écrit en écriture fractionnaire : $${texFraction(\n              '\\\\phantom{00000}',\n              '\\\\phantom{00000}'\n            )}$`\n          texteCorr = `Le nombre qui, multiplié par $${b}$, donne $${a}$ s'écrit $${texFraction(a, b)}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texFraction(a, b)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texFraction(b, a)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(Math.abs(a - b), b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a + b, b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a * 10, b)}$`,\n              statut: false\n            }\n          ]\n          break\n\n        case 3:\n          a = randint(10, 25)\n          b = randint(10, 25, a)\n          texte = `$${a}\\\\div ${b}$ s'écrit en écriture fractionnaire : $${texFraction(\n              '\\\\phantom{00000}',\n              '\\\\phantom{00000}'\n            )}$`\n          texteCorr = `$${a}\\\\div ${b}$ s'écrit  $${texFraction(a, b)}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${texFraction(a, b)}$`,\n              statut: true\n            },\n            {\n              texte: `$${texFraction(b, a)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(Math.abs(a - b), b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a + b, b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a * 10, b)}$`,\n              statut: false\n            }\n          ]\n          break\n\n        case 4:\n\n          a = randint(1, 5) * 2 + 1\n          b = choice([2, 4, 5, 10])\n          a += b\n          if (Number.isInteger(a / b)) {\n            a++\n          }\n          f = fraction(a, b)\n\n          texte = `Le nombre $${texNombre2(calcul(a / b))}$ s'écrit en écriture fractionnaire : $${texFraction(\n            '\\\\phantom{00000}',\n            '\\\\phantom{00000}'\n          )}$`\n          texteCorr = `Le nombre $${texNombre2(calcul(a / b))}$ s'écrit  $${f.fractionDecimale().texFraction}$`\n          if (f.fractionDecimale().texFraction !== f.texFractionSimplifiee) {\n            texteCorr += ` ou $${f.texFractionSimplifiee}$.`\n          } else texte += '.'\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${f.fractionDecimale().texFraction}$`,\n              statut: true\n            },\n            {\n              texte: `$${texFraction(b, a)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a, b * 10)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(a * 10, b)}$`,\n              statut: false\n            },\n            {\n              texte: `$${texFraction(Math.floor(a / b), fraction(calcul((a / b - Math.floor(a / b))) * 100, 100).fractionDecimale().n)}$`,\n              statut: false\n            }\n          ]\n          break\n      }\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 5\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n        texte = texte.replace(`$${texFraction('\\\\phantom{00000}', '\\\\phantom{00000}')}$`, '')\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n\n  // this.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits carreaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","SensDeLaFraction","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","f","i","cpt","randint","texFraction","enonce","propositions","statut","Math","abs","choice","Number","isInteger","fraction","texNombre2","calcul","fractionDecimale","texFractionSimplifiee","floor","n","options","ordered","lastChoice","interactif","propositionsQcm","replace","indexOf","push","listeQuestionsToContenu","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}