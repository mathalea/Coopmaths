{"version":3,"file":"js/18386.c2b5c99a708637841927.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/_Thales2D.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, calcul, texNombrec, creerNomDePolygone, texNombre, creerBoutonMathalea2d, nombreDeChiffresDansLaPartieEntiere, texteGras } from '../../modules/outils.js'\nimport { point, pointSurSegment, pointAdistance, polygone, triangle2points2longueurs, homothetie, similitude, texteParPoint, longueur, angle, angleOriente, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport Grandeur from '../../modules/Grandeur'\n\nexport const amcReady = true\nexport const amcType = 'AMCOpenNum'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const titre = 'Calculer des longueurs avec le théorème de Thalès'\n\n/**\n * Calcul de longueurs avec le théorème de Thalès\n * @author Rémi Angot\n * Utilisée dans 4G30 et 3G20\n*/\nexport default function Thales2D () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1 // Triangles imbriqués / configuration papillon / les 2\n  this.vspace = -0.5 // Monter un peu l'énoncé pour gagner de la place dans la sortie PDF\n\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeDeNomsDePolygones = []\n    this.autoCorrection = []\n\n    const premiereQuestionPapillon = randint(0, 1) // Pour alterner les configurations et savoir par laquelle on commence\n    let reponse\n\n    for (let i = 0, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // this.autoCorrection[i] = {}\n      if ((i + 1) % 3 === 0) { // Toutes les 3 questions, on repart à zéro sur les noms des polygones\n        listeDeNomsDePolygones = []\n      }\n      const nomDesPoints = creerNomDePolygone(5, listeDeNomsDePolygones)\n      listeDeNomsDePolygones.push(nomDesPoints)\n      const nomA = nomDesPoints[0]\n      const nomB = nomDesPoints[1]\n      const nomC = nomDesPoints[2]\n      const nomM = nomDesPoints[3]\n      const nomN = nomDesPoints[4]\n      const ab = randint(5, 10)\n      const ac = randint(5, 10, ab)\n      const bc = randint(Math.max(ab - ac, ac - ab) + 1, ab + ac - 1, [ab, ac]) // Pas de triangle isocèle ou équilatéral\n      const A = point(0, 0, nomA)\n      const B = pointAdistance(A, ab, nomB)\n      const ABC = triangle2points2longueurs(A, B, ac, bc)\n      ABC.id = `M2D_${numeroExercice}_${i}_1`\n      const C = ABC.listePoints[2]\n      C.nom = nomC\n      let k = calcul(randint(3, 8, 5) / 10)\n      if (parseInt(this.sup) === 2) {\n        k *= -1\n        this.vspace = -0.5 // Monter un peu l'énoncé pour gagner de la place dans la sortie PDF\n      }\n      if (parseInt(this.sup) === 3 && ((i + premiereQuestionPapillon) % 2 === 0)) {\n        k *= -1\n        this.vspace = -0.5 // Monter un peu l'énoncé pour gagner de la place dans la sortie PDF\n      }\n      const M = homothetie(A, C, k)\n      const N = homothetie(B, C, k)\n      const MNC = polygone(M, N, C)\n      MNC.id = `M2D_${numeroExercice}_${i}_2`\n      const m = pointSurSegment(M, N, -0.5)\n      const n = pointSurSegment(N, M, -0.5)\n      const marqueNomM = texteParPoint(nomM, m, 'milieu', 'black', 1, 'middle', true)\n      const marqueNomN = texteParPoint(nomN, n, 'milieu', 'black', 1, 'middle', true)\n      const a = pointSurSegment(A, B, -0.5)\n      const b = pointSurSegment(B, A, -0.5)\n      const marqueNomA = texteParPoint(nomA, a, 'milieu', 'black', 1, 'middle', true)\n      const marqueNomB = texteParPoint(nomB, b, 'milieu', 'black', 1, 'middle', true)\n      let c\n      if (k < 0) {\n        if (angle(A, C, N) < angle(N, C, A)) {\n          c = similitude(A, C, -angleOriente(A, C, N) / 2, 1 / longueur(A, C))\n        } else {\n          c = similitude(A, C, -angleOriente(N, C, A) / 2, 1 / longueur(A, C) * 0.5)\n        }\n      } else {\n        c = similitude(A, C, -180 + angleOriente(A, C, B) / 2, 1 / longueur(A, C) * 0.5)\n      }\n      const marqueNomC = texteParPoint(nomC, c, 'milieu', 'black', 1, 'middle', true)\n\n      if (!context.isHtml) {\n        texte = '\\\\begin{minipage}{.5\\\\linewidth}\\n'\n      } else {\n        texte = ''\n      }\n      texte += `Sur la figure suivante, $${nomA + nomC}=${ac}~\\\\text{cm}$, $${nomA + nomB}=${ab}~\\\\text{cm}$, $${nomC + nomM}=${texNombrec(Math.abs(k) * ac)}~\\\\text{cm}$, $${nomC + nomN}=${texNombrec(Math.abs(k) * bc)}~\\\\text{cm}$ et $(${nomA + nomB})//(${nomM + nomN})$.<br>`\n      if (!this.interactif) {\n        texte += `Calculer $${nomM + nomN}$ et $${nomC + nomB}$.<br><br>`\n      }\n      if (!context.isHtml) {\n        texte += '\\\\end{minipage}\\n'\n        texte += '\\\\begin{minipage}{.5\\\\linewidth}\\n'\n        texte += '\\\\centering'\n      }\n      texte += mathalea2d({\n        xmin: Math.min(A.x, B.x, C.x, M.x, N.x) - 1.5,\n        ymin: Math.min(A.y, B.y, C.y, M.y, N.y) - 0.8,\n        xmax: Math.max(A.x, B.x, C.x, M.x, N.x) + 1.5,\n        ymax: Math.max(A.y, B.y, C.y, M.y, N.y) + 0.8,\n        scale: 0.5\n      },\n\n      ABC, MNC, marqueNomA, marqueNomB, marqueNomC, marqueNomM, marqueNomN\n      )\n\n      if (!context.isHtml) {\n        texte += '\\\\end{minipage}\\n'\n      }\n\n      const epaisseurTriangle = (k < 0) ? 2 : 6 // En cas de configuration papillon il est inutile de changer l'épaisseur\n      const boutonAideMathalea2d = creerBoutonMathalea2d(numeroExercice + '_' + i,\n        `if (!document.getElementById('M2D_${numeroExercice}_${i}_1').dataset.colorie == true || (document.getElementById('M2D_${numeroExercice}_${i}_1').dataset.colorie == 'false')){\n          document.getElementById('M2D_${numeroExercice}_${i}_1').style.stroke = 'blue';\n          document.getElementById('M2D_${numeroExercice}_${i}_2').style.stroke = 'red';\n          document.getElementById('M2D_${numeroExercice}_${i}_1').style.opacity = .5;\n          document.getElementById('M2D_${numeroExercice}_${i}_1').style.strokeWidth = ${epaisseurTriangle};\n          document.getElementById('M2D_${numeroExercice}_${i}_2').style.opacity = 1;\n          document.getElementById('M2D_${numeroExercice}_${i}_2').style.strokeWidth = 2;\n          document.getElementById('M2D_${numeroExercice}_${i}_1').dataset.colorie = true;\n          document.getElementById('btnMathALEA2d_${numeroExercice}_${i}').classList.add('active');\n        } else {\n          document.getElementById('M2D_${numeroExercice}_${i}_1').style.stroke = 'black';\n          document.getElementById('M2D_${numeroExercice}_${i}_2').style.stroke = 'black';\n          document.getElementById('M2D_${numeroExercice}_${i}_1').style.opacity = 1;\n          document.getElementById('M2D_${numeroExercice}_${i}_1').style.strokeWidth = 1;\n          document.getElementById('M2D_${numeroExercice}_${i}_2').style.opacity = 1;\n          document.getElementById('M2D_${numeroExercice}_${i}_2').style.strokeWidth = 1;\n          document.getElementById('M2D_${numeroExercice}_${i}_1').dataset.colorie = false;\n          document.getElementById('btnMathALEA2d_${numeroExercice}_${i}').classList.remove('active');\n  \n        }\n        `,\n        'Mettre en couleur les 2 triangles')\n\n      if (k > 0) {\n        texteCorr = `Dans le triangle $${nomA + nomB + nomC}$ :\n       <br> $\\\\leadsto$ $${nomM}\\\\in${'[' + nomC + nomA + ']'}$,\n       <br> $\\\\leadsto$ $${nomN}\\\\in${'[' + nomC + nomB + ']'}$,\n       <br> $\\\\leadsto$  $(${nomA + nomB})//(${nomM + nomN})$,\n       <br> donc d'après le théorème de Thalès, les triangles $${nomA + nomB + nomC}$ et $${nomM + nomN + nomC}$ ont des longueurs proportionnelles.`\n      } else {\n        texteCorr = `Les droites $(${nomA + nomM})$ et $(${nomB + nomN})$ sont sécantes en $${nomC}$ et $(${nomA + nomB})//(${nomM + nomN})$ <br> donc d'après le théorème de Thalès, les triangles $${nomA + nomB + nomC}$ et $${nomM + nomN + nomC}$ ont des longueurs proportionnelles.`\n      }\n      // texteCorr = `$(${nomA+nomB})//(${nomM+nomN})$, les points $${nomC}$, $${nomM}$, $${nomA}$ et $${nomC}$, $${nomN}$, $${nomB}$ sont alignés dans le même ordre  donc d'après le théorème de Thalès, les triangles $${nomA+nomB+nomC}$ et $${nomM+nomN+nomC}$ ont des longueurs proportionnelles.`;\n      texteCorr += '<br><br>'\n      if (context.isHtml) {\n        texteCorr += `$\\\\dfrac{\\\\color{red}${nomC + nomM}}{\\\\color{blue}${nomC + nomA}}=\\\\dfrac{\\\\color{red}${nomC + nomN}}{\\\\color{blue}${nomC + nomB}}=\\\\dfrac{\\\\color{red}${nomM + nomN}}{\\\\color{blue}${nomA + nomB}}$`\n      } else {\n        texteCorr += `$\\\\dfrac{${nomC + nomM}}{${nomC + nomA}}=\\\\dfrac{${nomC + nomN}}{${nomC + nomB}}=\\\\dfrac{${nomM + nomN}}{${nomA + nomB}}$`\n      }\n      texteCorr += '<br><br>'\n      texteCorr += `$\\\\dfrac{${texNombrec(Math.abs(k) * ac)}}{${texNombre(ac)}}=\\\\dfrac{${texNombrec(Math.abs(k) * bc)}}{${nomC + nomB}}=\\\\dfrac{${nomM + nomN}}{${texNombre(ab)}}$`\n      texteCorr += '<br><br>'\n      if (this.correctionDetaillee) {\n        texteCorr += texteGras(`Calcul de ${nomM + nomN} : `)\n        texteCorr += '<br><br>'\n        texteCorr += `On utilise l'égalité $\\\\dfrac{${texNombrec(Math.abs(k) * ac)}}{${texNombre(ac)}}=\\\\dfrac{${nomM + nomN}}{${texNombre(ab)}}$.`\n        texteCorr += '<br><br>'\n        texteCorr += 'Les produits en croix sont égaux,'\n        texteCorr += '<br><br>'\n        texteCorr += `donc $${texNombrec(Math.abs(k) * ac)}\\\\times ${texNombre(ab)}=${nomM + nomN}\\\\times ${texNombre(ac)}$.`\n        texteCorr += '<br><br>'\n        texteCorr += `On divise les deux membres par ${texNombre(ac)}.`\n        texteCorr += '<br><br>'\n      }\n      texteCorr += `$${nomM + nomN}=\\\\dfrac{${texNombrec(Math.abs(k) * ac)}\\\\times${texNombre(ab)}}{${texNombre(ac)}}=${texNombrec(Math.abs(k) * ab)}$ cm`\n      texteCorr += '<br><br>'\n      if (this.correctionDetaillee) {\n        texteCorr += texteGras(`Calcul de ${nomC + nomB} : `)\n        texteCorr += '<br><br>'\n        texteCorr += `On utilise l'égalité $\\\\dfrac{${texNombrec(Math.abs(k) * bc)}}{${nomC + nomB}}=\\\\dfrac{${texNombrec(Math.abs(k) * ac)}}{${texNombre(ac)}}$.`\n        texteCorr += '<br><br>'\n        texteCorr += 'Les produits en croix sont égaux,'\n        texteCorr += '<br><br>'\n        texteCorr += `donc $${texNombrec(Math.abs(k) * ac)}\\\\times ${nomC + nomB}=${texNombre(ac)}\\\\times ${texNombrec(Math.abs(k) * bc)}$.`\n        texteCorr += '<br><br>'\n        texteCorr += `On divise les deux membres par ${texNombrec(Math.abs(k) * ac)}.`\n        texteCorr += '<br><br>'\n      }\n      texteCorr += `$${nomC + nomB}=\\\\dfrac{${texNombrec(Math.abs(k) * bc)}\\\\times${texNombre(ac)}}{${texNombrec(Math.abs(k) * ac)}}=${texNombrec(bc)}$ cm`\n      reponse = bc\n      if (context.isHtml) {\n        texte += `<br><div style=\"display: inline-block;margin-top:20px;\">${boutonAideMathalea2d}</div>`\n      }\n\n      if (this.interactif && context.isHtml) {\n        texte += '<br><br><em>Il faut saisir une unité.</em>'\n        texte += `<br><br>$${nomM + nomN} = $`\n        setReponse(this, i * 2, new Grandeur(calcul(Math.abs(k) * ab), 'cm'), { formatInteractif: 'longueur' }) // 2 réponses par question donc 2i et 2i + 1 ainsi elles restent ordonnées\n        texte += ajouteChampTexteMathLive(this, i * 2, 'longueur')\n        texte += `$${nomC + nomB} = $`\n        texte += ajouteChampTexteMathLive(this, i * 2 + 1, 'longueur')\n        setReponse(this, i * 2 + 1, new Grandeur(bc, 'cm'), { formatInteractif: 'longueur' })\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        if (context.isAmc) {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            propositions: [{ texte: texteCorr, statut: 4, feedback: '' }],\n            reponse: { valeur: [reponse], param: { digits: Math.max(2, nombreDeChiffresDansLaPartieEntiere(reponse)) + 1, decimals: 1, signe: false, exposantNbChiffres: 0 } }\n          }\n        }\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Configuration', 3, '1 : Triangles imbriqués\\n2 : Papillon\\n3 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","Thales2D","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","vspace","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","listeDeNomsDePolygones","autoCorrection","premiereQuestionPapillon","randint","reponse","i","texte","texteCorr","cpt","nomDesPoints","creerNomDePolygone","push","nomA","nomB","nomC","nomM","nomN","ab","ac","bc","Math","max","A","point","B","pointAdistance","ABC","triangle2points2longueurs","id","C","listePoints","nom","k","calcul","parseInt","M","homothetie","N","MNC","polygone","m","pointSurSegment","n","marqueNomM","texteParPoint","marqueNomN","a","b","marqueNomA","marqueNomB","c","angle","similitude","angleOriente","longueur","marqueNomC","context","texNombrec","abs","interactif","mathalea2d","xmin","min","x","ymin","y","xmax","ymax","scale","epaisseurTriangle","boutonAideMathalea2d","creerBoutonMathalea2d","texNombre","texteGras","setReponse","Grandeur","formatInteractif","ajouteChampTexteMathLive","indexOf","enonce","propositions","statut","feedback","valeur","param","digits","nombreDeChiffresDansLaPartieEntiere","decimals","signe","exposantNbChiffres","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}