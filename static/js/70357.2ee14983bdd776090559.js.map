{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5G24-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","TrianglesEgaux","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","spacing","nouvelleVersion","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","texte","texteCorr","i","cpt","l1","randint","l2","l3","A","point","B","pointAdistance","p1","triangle2points2longueurs","C","listePoints","O","barycentre","v","vecteur","Math","max","abs","x","O2","translation","temp","isVisible","p2","rotation","D","E","F","code1","codeSegment","code2","code3","code4","code5","code6","codeA1","codeAngle","codeA2","codeA3","codeA4","codeA5","codeA6","nom1","creerNomDePolygone","nom2","nommeP1","nommePolygone","nommeP2","mathalea2d","xmin","min","ymin","y","xmax","ymax","scale","texteEnCouleur","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/70357.2ee14983bdd776090559.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { point, pointAdistance, rotation, similitude, translation, vecteur, barycentre, codeSegment, codeAngle, nommePolygone, mathalea2d, triangle2points2longueurs, longueur, angle, polygone } from '../../modules/2d.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, creerNomDePolygone, choisitLettresDifferentes, shuffleLettres, texteEnCouleur } from '../../modules/outils.js'\nexport const titre = 'Justifier que deux triangles sont égaux'\n\n/**\n * Deux triangles égaux sont codés, il faut reconnaitre les côtés homologues\n * @author Rémi Angot\n * Référence 5G24-1\n*/\nexport default function TrianglesEgaux () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Les triangles sont-ils égaux ? Si ils sont égaux, justifier la réponse.'\n  this.nbQuestions = 4\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté \n  this.tailleDiaporama = 50 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.spacing = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeQuestionsDisponibles = ['CCC', 'CAC', 'ACA', 'AAA', 'CC']\n\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      let l1 = randint(40, 70)\n      let l2 = randint(40, 80, l1)\n      let l3 = randint(40, l1 + l2 - 10, [l1, l2])\n      l1 /= 10\n      l2 /= 10\n      l3 /= 10\n      const A = point(0, 0)\n      const B = pointAdistance(A, l1)\n      const p1 = triangle2points2longueurs(A, B, l2, l3)\n      const C = p1.listePoints[2]\n      const O = barycentre(p1)\n      const v = vecteur(Math.max(Math.abs(A.x - B.x), Math.abs(C.x - B.x), Math.abs(A.x - C.x)) + 4, 0)\n      const O2 = translation(O, v)\n      const temp = translation(p1, v)\n      temp.isVisible = false\n      const p2 = rotation(temp, O2, randint(0, 360))\n      const D = p2.listePoints[0]\n      const E = p2.listePoints[1]\n      const F = p2.listePoints[2]\n      const code1 = codeSegment(A, B, '|')\n      const code2 = codeSegment(D, E, '|')\n      const code3 = codeSegment(B, C, '||')\n      const code4 = codeSegment(E, F, '||')\n      const code5 = codeSegment(C, A, '|||')\n      const code6 = codeSegment(F, D, '|||')\n      const codeA1 = codeAngle(A, B, C)\n      const codeA2 = codeAngle(D, E, F)\n      const codeA3 = codeAngle(B, C, A, 0.8, 'X')\n      const codeA4 = codeAngle(E, F, D, 0.8, 'X')\n      const codeA5 = codeAngle(C, A, B, 0.8, '||')\n      const codeA6 = codeAngle(F, D, E, 0.8, '||')\n      const nom1 = creerNomDePolygone(3)\n      const nom2 = creerNomDePolygone(3, nom1)\n      const nommeP1 = nommePolygone(p1, nom1)\n      const nommeP2 = nommePolygone(p2, nom2)\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'CCC':\n          texte = '<br>' + mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, code3, code4, code5, code6, nommeP1, nommeP2)\n          texteCorr = 'Ces deux triangles sont égaux car ils ont leurs trois côtés de même longueur 2 à 2 (CCC).'\n          break\n        case 'CAC':\n          texte = '<br>' + mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, code3, code4, codeA1, codeA2, nommeP1, nommeP2)\n          texteCorr = 'Ces deux triangles sont égaux car ils ont ont un angle de même mesure compris entre deux côtés de même longueur 2 à 2 (CAC). '\n          break\n        case 'ACA':\n          texte = '<br>' + mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, codeA1, codeA2, codeA5, codeA6, nommeP1, nommeP2)\n          texteCorr = 'Ces deux triangles sont égaux car ils ont un côté de même longueur compris entre deux angles de même mesure 2 à 2 (ACA). '\n          break\n        case 'AAA':\n          texte = '<br>' + mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, codeA1, codeA2, codeA3, codeA4, codeA5, codeA6, nommeP1, nommeP2)\n          texteCorr = `Ces deux triangles ne sont pas égaux. Ils ont la même forme mais leurs longueurs peuvent être différentes. On dit qu'ils sont ${texteEnCouleur('semblables')}`\n          break\n        case 'CC':\n          texte = '<br>' + mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, code5, code6, nommeP1, nommeP2)\n          texteCorr = 'Ces deux triangles ne sont pas égaux.'\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}