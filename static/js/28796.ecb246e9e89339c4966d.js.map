{"version":3,"file":"js/28796.ecb246e9e89339c4966d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaModele30_constructions_géométriques.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes } from '../../modules/outils.js'\nimport { point, tracePoint, labelPoint, carre, rotation, mathalea2d, segmentAvecExtremites, pointAdistance, triangle2points2longueurs } from '../../modules/2d.js'\nexport const titre = 'Nom de l\\'exercice'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '25/10/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\nexport const dateDeModifImportante = '24/10/2021' // Une date de modification importante au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Description didactique de l'exercice\n * @author\n * Référence\n*/\nexport default function NomExercice () {\n  Exercice.call(this)\n  this.consigne = 'consigne'\n  this.nbQuestions = 1 // Ici le nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1 // Le nombre de colonne pour la correction LaTeX\n\n  this.nouvelleVersion = function (numeroExercice) {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    const typesDeQuestionsDisponibles = [1] // tableau à compléter par valeurs possibles des types de questions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    let A, B, C, D, kare, triangle\n    let objetsEnonce, objetsEnonceml, objetsCorrection, paramsEnonce, paramsEnonceml, paramsCorrection\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      objetsEnonce = [] // on initialise le tableau des objets Mathalea2d de l'enoncé\n      objetsEnonceml = [] // Idem pour l'enoncé à main levée si besoin\n      objetsCorrection = [] // Idem pour la correction\n\n      texte = 'Construire le carré $ABCD$.<br>'\n      texteCorr = 'Pour cette construction on peut utiliser la règle et l\\'équerre.<br>'\n      switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n        case 1:\n          A = point(0, 0, 'A', 'below') // 'below' indique l'étiquette avec son nom sera en-dessous du point.\n          // Laisse ta souris sur point pour savoir ce que fait cette fonction !\n          // Garde en tête cette possibilité pour la suite et préviens sur le Slack si rien ne s'affiche pour une fonction alors que tu aurais bien aimé ;)\n\n          // Les quatre lignes ci-dessous proposent une façon très efficace d'avoir des positions aléatoires des points de façon contrôlée\n          B = pointAdistance(A, randint(30, 60) / 10, randint(0, 40), 'B') // Crée le point B à une distance comprise entre 3 et 6 unités du point A de façon à ce que le vecteur AB forme un angle entre 0 et 40° avec l'horizontale\n          triangle = triangle2points2longueurs(A, B, randint(40, 60) / 10, randint(30, 50) / 10) // Crée un triangle à partir des point A et B et dont le troisième est à une certaine distance de A et de B\n          C = triangle.listePoints[2] // On met le troisième point du triangle créé précédemment dans la variable C\n          C.nom = 'C' // On nomme ce troisième point 'C'\n\n          D = rotation(B, A, -90, 'D', 'above') // Laisse ta souris sur carre pour voir ce que fait cette fonction !\n          objetsEnonce.push(triangle, segmentAvecExtremites(C, D)) // Quand on veut afficher des objets, on commence par les push dans la liste associée\n          objetsEnonce.push(tracePoint(A, B)) // Place une croix à l'emplacement de A et de B\n          objetsEnonce.push(labelPoint(A, C)) // Place une étiquette 'A' ou 'C' dans la position définie précédemment ('below' et 'above' par défaut)\n          kare = carre(C, D) // Laisse ta souris sur carre pour voir ce que fait cette fonction !\n          kare.epaisseur = 2\n          objetsEnonceml.push(kare)\n\n          // On copie tout le contenu de objetsEnonce et de objetsEnonceml dans objetsCorrection\n          objetsEnonce.forEach(objet => {\n            objetsCorrection.push(objet)\n          })\n          objetsEnonceml.forEach(objet => {\n            objetsCorrection.push(objet)\n          })\n          // ici sont créés les texte, tex_corr, objets mathalea2d divers entrant dans le contenu de l'exercice\n          break\n\n        case 2:\n          // Idem Cas1 mais avec d'autres texte, texteCorr...\n          break\n\n        case 3:\n\n          break\n\n        case 4:\n\n          break\n      }\n      // Les lignes ci-dessous permettent d'avoir un affichage aux dimensions optimisées\n      const xmin = Math.min(A.x, B.x, C.x, D.x, kare.listePoints[2].x, kare.listePoints[3].x) - 2\n      const xmax = Math.max(A.x, B.x, C.x, D.x, kare.listePoints[2].x, kare.listePoints[3].x) + 2\n      const ymin = Math.min(A.y, B.y, C.y, D.y, kare.listePoints[2].y, kare.listePoints[3].y) - 2\n      const ymax = Math.max(A.y, B.y, C.y, D.y, kare.listePoints[2].y, kare.listePoints[3].y) + 2\n      // paramètres de la fenêtre Mathalea2d pour l'énoncé normal\n      paramsEnonce = { xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax, pixelsParCm: 20, scale: 1 }\n      // paramètres de la fenêtre Mathalea2d pour l'énoncé main levée\n      paramsEnonceml = { xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax, pixelsParCm: 20, scale: 1, mainlevee: true, amplitude: 1 }\n      // paramètres de la fenêtre Mathalea2d pour la correction\n      paramsCorrection = paramsEnonce\n      // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n      texte += mathalea2d(paramsEnonce, objetsEnonce) + mathalea2d(paramsEnonceml, objetsEnonceml)\n      // On ajoute au texte de la correction, la figure de la correction\n      texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n      // Si la question n'a jamais été posée, on l'enregistre\n      if (this.questionJamaisPosee(i, objetsEnonce)) { // <- laisser le i et ajouter toutes les variables qui rendent les exercices différents (par exemple a, b, c et d)\n        // Dans cet exercice, on n'utilise pas a, b, c et d mais A, B, C et D alors remplace-les !\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","dateDePublication","dateDeModifImportante","NomExercice","listeTypeDeQuestions","combinaisonListes","A","B","C","D","kare","triangle","objetsEnonce","objetsEnonceml","objetsCorrection","paramsEnonce","paramsEnonceml","paramsCorrection","texte","texteCorr","cpt","point","pointAdistance","randint","triangle2points2longueurs","listePoints","nom","rotation","segmentAvecExtremites","tracePoint","labelPoint","carre","epaisseur","forEach","objet","xmin","Math","min","x","xmax","max","ymin","y","ymax","pixelsParCm","scale","mainlevee","amplitude","mathalea2d","listeQuestionsToContenu"],"sourceRoot":""}