{"version":3,"file":"js/32215.6cb1ad506b5928ad2b36.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/2e/can2F09.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { listeQuestionsToContenu, extraireRacineCarree, randint, sp, calcul, choice, texFractionReduite } from '../../../modules/outils.js'\nimport { propositionsQcm } from '../../../modules/gestionInteractif.js'\nexport const titre = 'Résoudre une équation avec une fonction de référence'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '27/12/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence\n*/\nexport default function ResoudreEquationsFonctionDeReference () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 1\n  this.tailleDiaporama = 1\n  this.spacing = 2\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let texte, texteCorr, a, k, b, c\n    switch (choice([1, 1, 2, 3])) { //\n      case 1 :\n        a = calcul(randint(0, 10) ** 2)\n        b = choice([2, 3, 5, 7, 10, 11, 13, 14, 15, 17, 19, 21, 23])\n        c = choice([-1, -2, -3, -5, -7, -10, -11, -13, -14, -15, -4, -9, -16, -25, -36, -49, -64, -81, -100])\n        k = choice([a, a, b, b, c])\n        if (this.interactif) {\n          texte = `L'ensemble des solutions $S$ de l'équation $x^2=${k}$ est :\n               `\n          if (k === a) {\n            if (k === 0) {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: '$S=\\\\{0\\\\}$',\n                    statut: true\n                  },\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: false\n                  },\n                  {\n                    texte: '$S=\\\\{1\\\\}$',\n                    statut: false\n                  }\n                ]\n              }\n            } else {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\{-${Math.sqrt(k)};${Math.sqrt(k)}\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: `$S=\\\\{${Math.sqrt(k)}\\\\}$`,\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{${k}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            }\n          }\n          if (k === b) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: `$S=\\\\{-\\\\sqrt{${k}};\\\\sqrt{${k}}\\\\}$`,\n                  statut: true\n                },\n                {\n                  texte: `$S=\\\\{\\\\sqrt{${k}}\\\\}$`,\n                  statut: false\n                },\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: false\n                }\n              ]\n            }\n          }\n          if (k === c) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: true\n                },\n                {\n                  texte: `$S=\\\\{-\\\\sqrt{${-k}};\\\\sqrt{${-k}}\\\\}$`,\n                  statut: false\n                },\n                {\n                  texte: `$S=\\\\{\\\\sqrt{${-k}}\\\\}$`,\n                  statut: false\n                }\n              ]\n            }\n          }\n\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `Résoudre dans $\\\\mathbb{R}$ :<br>\n      ${sp(50)} $x^2=${k}$`\n        }\n\n        texteCorr = ''\n        if (k > 0) {\n          texteCorr += `L'équation est de la forme $x^2=k$ avec $k=${k}$. Comme  $${k}>0$ alors l'équation admet deux solutions : $-\\\\sqrt{${k}}$ et $\\\\sqrt{${k}}$.<br>\n          `\n          if (extraireRacineCarree(k)[1] === k) {\n            if (k === 1) {\n              texteCorr += `Comme $-\\\\sqrt{${k}}=-${Math.sqrt(k)}$ et $\\\\sqrt{${k}}=${Math.sqrt(k)}$ alors\n          les solutions de l'équation peuvent s'écrire plus simplement : $-${Math.sqrt(k)}$ et $${Math.sqrt(k)}$.<br>\n          Ainsi,  $S=\\\\{-${Math.sqrt(k)}${sp(1)};${sp(1)}${Math.sqrt(k)}\\\\}$.`\n            } else {\n              texteCorr += `Ainsi, $S=\\\\{-\\\\sqrt{${k}}${sp(1)};${sp(1)}\\\\sqrt{${k}}\\\\}$.`\n            }\n          } else {\n            if (k === a) {\n              texteCorr += `Comme $-\\\\sqrt{${k}}=-${Math.sqrt(k)}$ et $\\\\sqrt{${k}}=${Math.sqrt(k)}$ alors\n          les solutions de l'équation peuvent s'écrire plus simplement : $-${Math.sqrt(k)}$ et $${Math.sqrt(k)}$.<br>\n          Ainsi,  $S=\\\\{-${Math.sqrt(k)}${sp(1)};${sp(1)}${Math.sqrt(k)}\\\\}$.`\n            } else {\n              texteCorr += `Comme $-\\\\sqrt{${k}}=-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $\\\\sqrt{${k}}=${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ alors\n              les solutions de l'équation peuvent s'écrire plus simplement : $-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$ et $${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}$.<br>\n              Ainsi,  $S=\\\\{-${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}${sp(1)};${sp(1)}${extraireRacineCarree(k)[0]}\\\\sqrt{${extraireRacineCarree(k)[1]}}\\\\}$.`\n            }\n          }\n        } else {\n          if (k === 0) {\n            texteCorr += `L'équation est de la forme $x^2=k$ avec $k=${k}$. Comme $k=${k}$ alors L'équation admet une unique solution : $0$.<br>\n          Ainsi, $S=\\\\{0\\\\}$.`\n          } else {\n            texteCorr += `L'équation est de la forme $x^2=k$. Comme $k=${k}$ et $${k}<0$, alors l'équation n'admet aucune solution.<br>\n            Ainsi, $S=\\\\emptyset$.`\n          }\n        }\n        break\n      case 2 :\n        k = randint(-5, 10)\n        if (this.interactif) {\n          texte = `L'ensemble des solutions $S$ de l'équation $\\\\sqrt{x}=${k}$ est :\n                 `\n          if (k > 0) {\n            if (k !== 1) {\n              if (k !== 1) {\n                if (k === 2) {\n                  this.autoCorrection[0] = {\n                    enonce: texte,\n                    options: { horizontal: true },\n                    propositions: [\n                      {\n                        texte: `$S=\\\\{${k ** 2}\\\\}$`,\n                        statut: true\n                      },\n                      {\n                        texte: '$S=\\\\emptyset$',\n                        statut: false\n                      },\n                      {\n                        texte: `$S=\\\\{${k}\\\\}$`,\n                        statut: false\n                      }\n                    ]\n                  }\n                } else {\n                  this.autoCorrection[0] = {\n                    enonce: texte,\n                    options: { horizontal: true },\n                    propositions: [\n                      {\n                        texte: `$S=\\\\{${k ** 2}\\\\}$`,\n                        statut: true\n                      },\n                      {\n                        texte: `$S=\\\\{${2 * k}\\\\}$`,\n                        statut: false\n                      },\n                      {\n                        texte: `$S=\\\\{${k}\\\\}$`,\n                        statut: false\n                      }\n                    ]\n                  }\n                }\n              }\n            } else {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\{${k}\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\{${2 * k}\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            }\n          }\n\n          if (k < 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: true\n                },\n                {\n                  texte: `$S=\\\\{\\\\sqrt{${-k}}\\\\}$`,\n                  statut: false\n                },\n                {\n                  texte: `$S=\\\\{${k ** 2}\\\\}$`,\n                  statut: false\n                }\n              ]\n            }\n          }\n          if (k === 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\{0\\\\}$',\n                  statut: true\n                },\n                {\n                  texte: `$S=\\\\{${k + 1}\\\\}$`,\n                  statut: false\n                },\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: false\n                }\n              ]\n            }\n          }\n\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `Résoudre dans $[0${sp(1)};${sp(1)}+\\\\infty[$ :<br>\n              ${sp(50)} $\\\\sqrt{x}=${k}$`\n        }\n\n        texteCorr = `Pour tout réel $x$ positif ou nul, l'équation $\\\\sqrt{x}=k$ admet :<br>\n            $\\\\bullet~$ une solution  si $k\\\\geqslant 0$ : $k^2$ ;<br>\n            $\\\\bullet~$  aucune solution si $k<0$.<br>\n           `\n\n        if (k < 0) {\n          texteCorr += `L'équation est de la forme $\\\\sqrt{x}=k$. Comme $k=${k}$ et $${k}<0$ alors l'équation n'admet pas de solution.<br>\n          Ainsi,   $S=\\\\emptyset$.\n          `\n        }\n        if (k > 0 || k === 0) {\n          texteCorr += `$k=${k}$ et $${k}>0$ donc l'équation admet une solution : $${k}^2=${k ** 2}$.<br>\n           Ainsi $S=\\\\{${k ** 2}\\\\}$.\n          `\n        }\n        break\n\n      case 3 :\n        k = randint(-10, 10)\n        if (this.interactif) {\n          texte = `L'ensemble des solutions $S$ de l'équation $\\\\dfrac{1}{x}=${k}$ est :\n                   `\n          if (k !== 0) {\n            if (k === 1) {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: `$S=\\\\left\\\\{${texFractionReduite(1, -k)}\\\\right\\\\}$`,\n                    statut: false\n                  },\n                  {\n                    texte: '$S=\\\\emptyset$',\n                    statut: false\n                  }\n                ]\n              }\n            } else {\n              this.autoCorrection[0] = {\n                enonce: texte,\n                options: { horizontal: true },\n                propositions: [\n                  {\n                    texte: `$S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$`,\n                    statut: true\n                  },\n                  {\n                    texte: `$S=\\\\left\\\\{${texFractionReduite(1, -k)}\\\\right\\\\}$`,\n                    statut: false\n                  },\n                  {\n                    texte: `$S=\\\\left\\\\{${k}\\\\right\\\\}$`,\n                    statut: false\n                  }\n                ]\n              }\n            }\n          }\n          if (k === 0) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: '$S=\\\\emptyset$',\n                  statut: true\n                },\n                {\n                  texte: '$S=\\\\left\\\\{0\\\\right\\\\}$',\n                  statut: false\n                },\n                {\n                  texte: '$S=\\\\left\\\\{-1\\\\right\\\\}$',\n                  statut: false\n                }\n              ]\n            }\n          }\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `Résoudre dans $\\\\mathbb{R}^*$ :<br>\n                ${sp(50)} $\\\\dfrac{1}{x}=${k}$`\n        }\n\n        texteCorr = `L'équation $\\\\dfrac{1}{x}=k$ admet :<br>\n          $\\\\bullet~$ une unique solution si $k\\\\neq 0$ : $\\\\dfrac{1}{k}$.<br>\n          $\\\\bullet~$ aucune solution si $k= 0$.<br>`\n\n        if (k === 0) {\n          texteCorr += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Comme $k=${k}$, alors l'équation n'admet pas de solution.<br>\n            Ainsi,   $S=\\\\emptyset$.\n            `\n        }\n        if (k !== 0) {\n          texteCorr += `L'équation est de la forme $\\\\dfrac{1}{x}=k$ avec $k=${k}$. Comme $${k}\\\\neq 0$ alors l'équation admet une solution :\n            $${texFractionReduite(1, k)}$.<br>\n           Ainsi $S=\\\\left\\\\{${texFractionReduite(1, k)}\\\\right\\\\}$.\n          `\n        }\n\n        break\n    }\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","dateDePublication","ResoudreEquationsFonctionDeReference","texte","texteCorr","a","k","b","c","choice","calcul","randint","enonce","options","horizontal","propositions","statut","Math","sqrt","propositionsQcm","sp","extraireRacineCarree","texFractionReduite","listeQuestionsToContenu"],"sourceRoot":""}