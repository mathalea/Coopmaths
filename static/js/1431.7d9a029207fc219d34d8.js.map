{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N13.js","webpack://mathalea/./src/js/exercices/6e/_Exercice_conversions.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Exercice_6N13","Exercice_conversions","this","sup","niveau","Exercice","sup2","consigne","spacing","correction_avec_des_fractions","nouvelleVersion","listeQuestions","listeCorrections","prefixe_multi","prefixe_div","a","k","div","resultat","unite","typesDeQuestions","texte","texteCorr","liste_unite_info","i","cpt","nbQuestions","randint","choice","arrondi","context","calcul","toString","texNombre","texTexte","texNombrec","texFraction","unite1","ecart","unite2","Math","pow","indexOf","replace","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1431.7d9a029207fc219d34d8.js","sourcesContent":["import Exercice_conversions from './_Exercice_conversions.js';\n\nexport const titre = 'Conversions de longueurs, masses, contenance, prix ou unités informatiques'\n\n/**\n * @author Rémi Angot\n * référence 6N13\n */\nexport default function Exercice_6N13() {\n  Exercice_conversions.call(this);\n  this.sup = 1;\n  this.titre = titre;\n\n}\n","  import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,arrondi,texNombre,texNombrec,texFraction,texTexte,calcul} from '../../modules/outils.js'\n/**\n * Conversions  mètres, litres, grammes, octets (et euros pour la version LaTeX) en utilisant le préfixe pour déterminer la multiplication ou division à faire.\n *\n * * 1 : De da, h, k vers l'unité de référence\n * * 2 : De d, c, m vers l'unité de référence\n * * 3 : Multiplications ou divisions vers l'unité de référence\n * * 4 : Conversions d'octets\n * * 5 : Un mélange de toutes les conversions\n * * Paramètre supplémentaire : utiliser des nombres décimaux (par défaut tous les nombres sont entiers)\n * @author Rémi Angot\n */\nexport default function Exercice_conversions(niveau = 1) {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.sup = niveau; // Niveau de difficulté de l'exercice\n  this.sup2 = false; // Avec des nombres décimaux ou pas\n  this.titre =\n    \"Conversions de longueurs, masses, contenance, prix ou unités informatiques\";\n  this.consigne = \"Compléter\";\n  this.spacing = 2;\n  this.correction_avec_des_fractions = false;\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let prefixe_multi = [\n      [\"da\", 10],\n      [\"h\", 100],\n      [\"k\", 1000],\n    ]; //['M',1000000],['G',1000000000],['T',1000000000000]];\n    let prefixe_div = [\n      [\"d\", 10],\n      [\"c\", 100],\n      [\"m\", 1000],\n    ]; //['$\\\\mu{}$',1000000]];\n    for (let i = 0,\n      a,\n      k,\n      div,\n      resultat,\n      unite,\n      typesDeQuestions,\n      texte,\n      texteCorr,\n      liste_unite_info,\n      cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      if (this.sup < 5) {\n        typesDeQuestions = this.sup;\n      } else {\n        typesDeQuestions = randint(1, 4);\n      }\n      k = randint(0, 2); // Choix du préfixe\n      if (typesDeQuestions == 1) {\n        // niveau 1\n        div = false; // Il n'y aura pas de division\n      } else if (typesDeQuestions == 2) {\n        // niveau 2\n        div = true; // Avec des divisions\n      } else if (typesDeQuestions == 3) {\n        div = choice([true, false]); // Avec des multiplications ou des divisions\n      } else if (typesDeQuestions == 4) {\n        liste_unite_info = [\"o\", \"ko\", \"Mo\", \"Go\", \"To\"];\n      }\n\n      if (this.sup2) {\n        // Si la case pour les nombres décimaux est cochée\n        a = choice([\n          arrondi(randint(1, 19) + randint(1, 9) / 10, 1),\n          arrondi(randint(1, 9) / 10, 1),\n          arrondi(randint(1, 9) / 100, 2),\n          arrondi(randint(1, 9) + randint(1, 9) / 10 + randint(1, 9) / 100, 2),\n        ]);\n        // XX,X 0,X 0,0X X,XX\n      } else {\n        a = choice([\n          randint(1, 9),\n          randint(1, 9) * 10,\n          randint(1, 9) * 100,\n          randint(1, 9) * 10 + randint(1, 9),\n        ]);\n        // X, X0, X00, XX\n      }\n\n      if (!div && typesDeQuestions < 4) {\n        // Si il faut multiplier pour convertir\n        if (k < 2) {\n          // Choix de l'unité\n          unite = choice([\"m\", \"L\", \"g\"]);\n        } else if (k == 2) {\n          if (context.isHtml) {\n            unite = choice([\"m\", \"L\", \"g\"]); // pas de signe € pour KaTeX\n          } else {\n            unite = choice([\"m\", \"L\", \"g\", \"€\"]);\n          }\n        } else {\n          unite = \"o\";\n        }\n        resultat = calcul(a * prefixe_multi[k][1]).toString(); // Utilise Algebrite pour avoir le résultat exact même avec des décimaux\n        texte =\n          \"$ \" +\n          texNombre(a) +\n          texTexte(prefixe_multi[k][0] + unite) +\n          \" = \\\\dotfill \" +\n          texTexte(unite) +\n          \"$\";\n        texteCorr =\n          \"$ \" +\n          texNombre(a) +\n          texTexte(prefixe_multi[k][0] + unite) +\n          \" =  \" +\n          texNombre(a) +\n          \"\\\\times\" +\n          texNombre(prefixe_multi[k][1]) +\n          texTexte(unite) +\n          \" = \" +\n          texNombrec(resultat) +\n          texTexte(unite) +\n          \"$\";\n      } else if (div &&\n        typesDeQuestions < 4 &&\n        this.correction_avec_des_fractions) {\n        unite = choice([\"m\", \"L\", \"g\"]);\n        resultat = calcul(a / prefixe_div[k][1]).toString(); // Attention aux notations scientifiques pour 10e-8\n        texte =\n          \"$ \" +\n          texNombre(a) +\n          texTexte(prefixe_div[k][0] + unite) +\n          \" = \\\\dotfill \" +\n          texTexte(unite) +\n          \"$\";\n        texteCorr =\n          \"$ \" +\n          texNombre(a) +\n          texTexte(prefixe_div[k][0] + unite) +\n          \" =  \" +\n          texFraction(texNombre(a), texNombre(prefixe_div[k][1])) +\n          texTexte(unite) +\n          \" = \" +\n          texNombre(resultat) +\n          texTexte(unite) +\n          \"$\";\n      } else if (div && typesDeQuestions < 4) {\n        unite = choice([\"m\", \"L\", \"g\"]);\n        resultat = calcul(a / prefixe_div[k][1]).toString(); // Attention aux notations scientifiques pour 10e-8\n        texte =\n          \"$ \" +\n          texNombre(a) +\n          texTexte(prefixe_div[k][0] + unite) +\n          \" = \\\\dotfill \" +\n          texTexte(unite) +\n          \"$\";\n        texteCorr =\n          \"$ \" +\n          texNombre(a) +\n          texTexte(prefixe_div[k][0] + unite) +\n          \" =  \" +\n          texNombre(a) +\n          \"\\\\div\" +\n          texNombre(prefixe_div[k][1]) +\n          texTexte(unite) +\n          \" = \" +\n          texNombrec(resultat) +\n          texTexte(unite) +\n          \"$\";\n      } else {\n        // pour type de question = 4\n        let unite1 = randint(0, 3);\n        let ecart = randint(1, 2); // nombre de multiplication par 1000 pour passer de l'un à l'autre\n        if (ecart > 4 - unite1) {\n          ecart = 4 - unite1;\n        }\n        let unite2 = unite1 + ecart;\n        if (randint(0, 1) > 0) {\n          resultat = calcul(a * Math.pow(10, 3 * ecart));\n          texte =\n            \"$ \" +\n            texNombre(a) +\n            texTexte(liste_unite_info[unite2]) +\n            \" = \\\\dotfill \" +\n            texTexte(liste_unite_info[unite1]) +\n            \"$\";\n          texteCorr =\n            \"$ \" +\n            texNombre(a) +\n            texTexte(liste_unite_info[unite2]) +\n            \" =  \" +\n            texNombre(a) +\n            \"\\\\times\" +\n            texNombre(Math.pow(10, 3 * ecart)) +\n            texTexte(liste_unite_info[unite1]) +\n            \" = \" +\n            texNombrec(resultat) +\n            texTexte(liste_unite_info[unite1]) +\n            \"$\";\n        } else {\n          resultat = calcul(a / Math.pow(10, 3 * ecart));\n          texte =\n            \"$ \" +\n            texNombre(a) +\n            texTexte(liste_unite_info[unite1]) +\n            \" = \\\\dotfill \" +\n            texTexte(liste_unite_info[unite2]) +\n            \"$\";\n          texteCorr =\n            \"$ \" +\n            texNombre(a) +\n            texTexte(liste_unite_info[unite1]) +\n            \" =  \" +\n            texNombre(a) +\n            \"\\\\div\" +\n            texNombre(Math.pow(10, 3 * ecart)) +\n            texTexte(liste_unite_info[unite2]) +\n            \" = \" +\n            texNombrec(resultat) +\n            texTexte(liste_unite_info[unite2]) +\n            \"$\";\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        if (context.isDiaporama) {\n          texte = texte.replace(\"= \\\\dotfill\", \"\\\\text{ en }\");\n        }\n        if (context.isHtml) {\n          texte = texte.replace(\n            \"\\\\dotfill\",\n            \"................................................\"\n          );\n        }\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    5,\n    \"1 : De da, h, k vers l'unité de référence\\n\\\n2 : De d, c, m vers l'unité de référence\\n3 : Multiplications ou divisions vers l'unité de référence\\n4 : Conversions avec les octets\\n5: Toutes les conversions\",\n  ];\n  this.besoinFormulaire2CaseACocher = [\"Avec des nombres décimaux\"];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}