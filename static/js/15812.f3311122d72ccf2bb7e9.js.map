{"version":3,"file":"js/15812.f3311122d72ccf2bb7e9.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3S15.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureParentheseSiNegatif, prenom, listeDeNotes, unMoisDeTemperature, nomDuMois, texNombre } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Calculer des étendues'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Calculer des étendues de séries statistiques\n* @author Jean-Claude Lhote\n* Référence 3S15\n*/\nexport default function CalculerEtendues () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.nbColsCorr = 1\n  this.nbCols = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, nombreNotes, notes, min, max, temperatures, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      if (this.sup === 1) { // ici on trie des notes\n        nombreNotes = randint(8, 12)\n        notes = listeDeNotes(nombreNotes, randint(0, 7), randint(13, 20)) // on récupère une série de notes (série brute)\n        min = 20\n        max = 0\n        for (let j = 0; j < nombreNotes; j++) { // On cherche la note minimum et la note maximum\n          min = Math.min(notes[j], min)\n          max = Math.max(notes[j], max)\n        }\n        texte = `${prenom()} a obtenu ces notes ce trimestre-ci en mathématiques :<br>`\n        texte += `$${notes[0]}$`\n        for (let j = 1; j < nombreNotes - 1; j++) { texte += `; $${notes[j]}$ ` } // On liste les notes\n        texte += `et $${notes[nombreNotes - 1]}$.<br>`\n        texte += 'Calculer l\\'étendue de cette série de notes.'\n        texteCorr = `La note la plus basse est : $${min}$.<br>La note la plus haute est $${max}$<br>`\n        texteCorr += 'Donc l\\'étendue de cette série est : ' + `$${texNombre(max)}-${texNombre(min)}=${texNombre(max - min)}$`\n      } else { // ici on relève des températures\n        const mois = randint(1, 12)\n        const annee = randint(1980, 2019)\n        const temperaturesDeBase = [3, 5, 9, 13, 19, 24, 26, 25, 23, 18, 10, 5]\n        temperatures = unMoisDeTemperature(temperaturesDeBase[mois - 1], mois, annee) // série brute de un mois de température\n        max = 0\n        min = 20\n        texte = `En ${nomDuMois(mois)} ${annee}, à ${choice(['Moscou', 'Berlin', 'Paris', 'Bruxelles', 'Rome', 'Belgrade'])}, on a relevé les températures suivantes<br>`\n\n        texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // tableau des températures 1/2\n        texte += '|c'\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) { texte += '|c' }\n        texte += '}\\\\hline  \\\\text{Jour}'\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) { texte += '&' + texNombre(j + 1) }\n        texte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}'\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) { // on cherche le minimum et le maximum\n          texte += '&' + temperatures[j]\n          min = Math.min(temperatures[j], min)\n          max = Math.max(temperatures[j], max)\n        }\n        texte += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>'\n\n        texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // tableau des températures 2/2\n        texte += '|c'\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) { texte += '|c' }\n        texte += '}\\\\hline  \\\\text{Jour}'\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) { texte += '&' + texNombre(j + 1) }\n        texte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}'\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) { // on cherche le minimum et le maximum\n          texte += '&' + temperatures[j]\n          min = Math.min(temperatures[j], min)\n          max = Math.max(temperatures[j], max)\n        }\n        texte += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>'\n\n        texte += 'Calculer l\\'amplitude thermique de ce mois (l\\'étendue de la série).'\n        texteCorr = `En ${nomDuMois(mois)} ${annee}, la température minimale est ` + `$${min}^\\\\circ\\\\text{C}$.<br>La température maximale est $${max}^\\\\circ\\\\text{C}$.<br> L'amplitude thermique est :<br>`\n        texteCorr += `$${texNombre(max)}-${ecritureParentheseSiNegatif(min)}$`\n        if (min < 0) { texteCorr += `$\\\\thickspace~=${texNombre(max)}+${texNombre(-min)}$` }\n        texteCorr += `$\\\\thickspace=${texNombre(max - min)}^\\\\circ\\\\text{C}$`\n      }\n      setReponse(this, i, max - min)\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de séries', 2, ' 1 : Série de notes\\n 2 : Série de températures']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","CalculerEtendues","Exercice","this","consigne","nbQuestions","spacing","spacingCorr","nbColsCorr","nbCols","sup","nouvelleVersion","parseInt","listeQuestions","listeCorrections","nombreNotes","notes","min","max","temperatures","texte","texteCorr","i","cpt","randint","listeDeNotes","j","Math","prenom","texNombre","mois","annee","temperaturesDeBase","unMoisDeTemperature","nomDuMois","choice","round","length","ecritureParentheseSiNegatif","setReponse","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}