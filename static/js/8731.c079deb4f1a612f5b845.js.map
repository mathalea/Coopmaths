{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3A11-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Premier_ou_pas_critere_par7_par11","Exercice","this","consigne","context","spacing","spacingCorr","nbQuestions","nbCols","nbColsCorr","listePackages","nouvelleVersion","numeroExercice","typesDeQuestions","boutonAide","modalPdf","modalVideo","listeQuestions","listeCorrections","contenu","contenuCorrection","typesDeQuestionsDisponibles","shuffle","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","string_rappel_b","itemize","cribleEratostheneN","k","length","introduction","warnMessage","texte","texteCorr","i","cpt","N","randint","nombreAvecEspace","texteEnCouleurEtGras","sum","toString","charAt","Number","N_longueur","N1","N1_longueur","sum1","substring","even_sum","odd_sum","m","Math","abs","r1","r2","prime1","prime2","r","tab_premiers_a_tester","trunc","sqrt","indexOf","push","listeQuestionsToContenu","consigneCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable"],"mappings":"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","file":"js/8731.c079deb4f1a612f5b845.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,shuffle,combinaisonListesSansChangerOrdre,nombreAvecEspace,texteEnCouleurEtGras,itemize,modalPdf,modalVideo,cribleEratostheneN,warnMessage} from '../../modules/outils.js'\nexport const titre = 'Primalité ou pas - Variante avec les critères de divisibilité par 7 et par 11'\n\n/**\n * 3A11-1 justifier la non primalité réinvestissement des critères de divisibilité\n * Nombres à 3 ou 4 chiffres, un multiple de 2, de 3, de 5, de 7, de 11, sous forme d'un produit de deux nombres premiers inférieurs à 100\n * et un nombre premier inferieur à 529\n * variante de 3A11 avec les critères par 7 et 11 en plus\n * @author Sébastien Lozano\n */\nexport default function Premier_ou_pas_critere_par7_par11() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `Justifier que les nombres suivants sont premiers ou pas. Penser aux critères de divisibilité.`;\n\t//this.consigne += `<br>`;\n\tcontext.isHtml ? this.spacing = 3 : this.spacing = 2;\n\tcontext.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1;\n\tthis.nbQuestions = 7;\n\t//this.correctionDetailleeDisponible = true;\n\tthis.nbCols = 2;\n\tthis.nbColsCorr = 1;\n\tthis.listePackages = `bclogo`;\n\n\tthis.nouvelleVersion = function (numeroExercice) {\n\t\tlet typesDeQuestions;\n\t\tif (context.isHtml) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.boutonAide = '';\n\t\t\tthis.boutonAide = modalPdf(numeroExercice, \"assets/pdf/FicheArithmetique-3A11.pdf\", \"Aide mémoire sur les nombres premiers (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\tthis.boutonAide += modalVideo('conteMathsNombresPremiers', '/videos/LesNombresPremiers.mp4', 'Petit conte mathématique - Les Nombres Premiers', 'Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenuCorrection = ''; // Liste de questions corrigées\n\n\t\tlet typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7];\n\t\ttypesDeQuestionsDisponibles = shuffle(typesDeQuestionsDisponibles); // on mélange l'ordre des questions\n\n\t\t//let typesDeQuestionsDisponibles = [1];\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions);\n\n\t\tlet string_rappel_b = `Ces critères de divisibilité pourront être utiles :`;\n\t\tif (context.isHtml) {\n\t\t\tstring_rappel_b += `<br>`;\n\t\t\tstring_rappel_b += `- Un nombre est divisible par 7 si la somme de son nombre de dizaines et de cinq fois son chiffre des unités l’est.<br>`;\n\t\t\tstring_rappel_b += `- Un nombre est divisible par 11 si la différence entre la somme de ses chiffres de rangs pairs et la somme de ses chiffres de rangs impairs est nulle ou égale à un multiple de 11.`;\n\t\t\tstring_rappel_b += `<br> <br>`;\n\t\t} else {\n\t\t\tstring_rappel_b += itemize([\n\t\t\t\t`Un nombre est divisible par 7 si la somme de son nombre de dizaines et de cinq fois son chiffre des unités l’est.`,\n\t\t\t\t`Un nombre est divisible par 11 si la différence entre la somme de ses chiffres de rangs pairs et la somme de ses chiffres de rangs impairs est nulle ou égale à un multiple de 11.`\n\t\t\t]);\n\t\t\tstring_rappel_b += `\\\\par\\\\vspace{0.5cm}`;\n\t\t};\n\t\tstring_rappel_b += `Ainsi que cette liste des nombres premiers inférieurs à 100 : `;\n\t\tif (context.isHtml) {\n\t\t\tstring_rappel_b += `<br>`;\n\t\t} else {\n\t\t\tstring_rappel_b += `\\\\par\\\\vspace{0.25cm}`;\n\t\t};\n\t\tstring_rappel_b += cribleEratostheneN(100)[0];\n\t\tfor (let k = 1; k < cribleEratostheneN(100).length; k++) {\n\t\t\tstring_rappel_b += `, ` + cribleEratostheneN(100)[k];\n\t\t};\n\t\tstring_rappel_b += `.`;\n\n\t\tthis.introduction = warnMessage(string_rappel_b, `nombres`, `Coup de pouce`);\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\ttypesDeQuestions = listeTypeDeQuestions[i];\n\n\t\t\tvar N; // le nombre de la question\n\n\t\t\tswitch (typesDeQuestions) {\n\t\t\t\tcase 1: // nombre pair\n\t\t\t\t\tN = 2 * randint(51, 4999);\n\t\t\t\t\ttexte = nombreAvecEspace(N);\n\t\t\t\t\ttexteCorr = `Comme ${nombreAvecEspace(N)} est pair, il admet donc au moins trois diviseurs qui sont 1, 2 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // Multiple de 3\n\t\t\t\t\tlet sum = 0; // pour la valeur de la somme;\n\t\t\t\t\tN = 3 * randint(34, 3333); // on initialise avant la boucle car on a peut être de la chance\n\t\t\t\t\twhile ((N % 2 == 0) || (N % 5 == 0)) {\n\t\t\t\t\t\tN = 3 * randint(34, 3333);\n\t\t\t\t\t};\n\t\t\t\t\ttexte = nombreAvecEspace(N);\n\t\t\t\t\ttexteCorr = `Comme ` + N.toString().charAt(0);\n\t\t\t\t\tsum = Number(N.toString().charAt(0));\n\t\t\t\t\tfor (let k = 1; k < N.toString().length; k++) {\n\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\tsum += Number(N.toString().charAt(k));\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += ` = ${sum} est un multiple de 3 donc ${nombreAvecEspace(N)} aussi, il admet donc au moins trois diviseurs qui sont 1, 3 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // Multiple de 5\n\t\t\t\t\tN = 5 * randint(20, 1999);\n\t\t\t\t\ttexte = nombreAvecEspace(N);\n\t\t\t\t\ttexteCorr = `Comme le dernier chiffre de ${nombreAvecEspace(N)} est un ${N.toString().charAt(N.toString().length - 1)} alors ${nombreAvecEspace(N)} est divisible par 5, `;\n\t\t\t\t\ttexteCorr += `il admet donc au moins trois diviseurs qui sont 1, 5 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4: // Multiple de 7\n\t\t\t\t\tlet N_longueur; // pour la taille du string N\n\t\t\t\t\tlet N1; // pour la repetiton du critère\n\t\t\t\t\tlet N1_longueur; // pour la taille du string N1\n\t\t\t\t\tlet sum1; // pour la somme de la répétition du critère\n\t\t\t\t\tN = 7 * randint(15, 1428);\n\t\t\t\t\ttexte = nombreAvecEspace(N);\n\t\t\t\t\tN_longueur = N.toString().length;\n\t\t\t\t\ttexteCorr = ` 7 divise ${nombreAvecEspace(N)}, en effet : `;\n\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\tN1 = N;\n\t\t\t\t\tN1_longueur = N_longueur;\n\t\t\t\t\tsum1 = Number(N1.toString().substring(0, N1_longueur - 1)) + 5 * Number(N1.toString().charAt(N1_longueur - 1));\n\t\t\t\t\twhile (sum1 >= 56) {\n\t\t\t\t\t\ttexteCorr += `${N1.toString().substring(0, N1_longueur - 1)} + 5$\\\\times$${N1.toString().charAt(N1_longueur - 1)}`;\n\t\t\t\t\t\ttexteCorr += ` = ${Number(N1.toString().substring(0, N1_longueur - 1)) + 5 * Number(N1.toString().charAt(N1_longueur - 1))}`;\n\t\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\t\tN1 = sum1;\n\t\t\t\t\t\tN1_longueur = N1.toString().length;\n\t\t\t\t\t\tsum1 = Number(N1.toString().substring(0, N1_longueur - 1)) + 5 * Number(N1.toString().charAt(N1_longueur - 1));\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `Comme ${N1.toString().substring(0, N1_longueur - 1)} + 5$\\\\times$${N1.toString().charAt(N1_longueur - 1)} = ${sum1} est un multiple de 7 alors 7 divise ${N} aussi `;\n\t\t\t\t\ttexteCorr += `qui admet donc au moins trois diviseurs : 1, 7 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5: // multiple de 11\n\t\t\t\t\tlet even_sum; // pour la somme des chiffres de rang impair\n\t\t\t\t\tlet odd_sum; // pour la somme des chiffres de rang pair\n\t\t\t\t\tN = 11 * randint(10, 909);\n\t\t\t\t\ttexte = nombreAvecEspace(N);\n\t\t\t\t\ttexteCorr = `D'une part, la somme des chiffres de rang impair de ${nombreAvecEspace(N)} vaut `;\n\t\t\t\t\tif (Number(N.toString().length) % 2 == 0) { // si N a un nombre pair de chiffres\n\t\t\t\t\t\teven_sum = Number(N.toString().charAt(1));\n\t\t\t\t\t\ttexteCorr += N.toString().charAt(1);\n\t\t\t\t\t\tfor (let k = 3; k < N.toString().length; k++) {\n\t\t\t\t\t\t\tif (k % 2 == 1) {\n\t\t\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\t\t\teven_sum += Number(N.toString().charAt(k));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexteCorr += ` = ` + even_sum + ` <br> `;\n\t\t\t\t\t} else { // sinon N a un nombre impair de chiffres\n\t\t\t\t\t\teven_sum = Number(N.toString().charAt(0));\n\t\t\t\t\t\ttexteCorr += N.toString().charAt(0);\n\t\t\t\t\t\tfor (let m = 1; m < N.toString().length; m++) {\n\t\t\t\t\t\t\tif (m % 2 == 0) {\n\t\t\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(m);\n\t\t\t\t\t\t\t\teven_sum += Number(N.toString().charAt(m));\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexteCorr += ` = ` + even_sum + `<br> `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `d'autre part, la somme des chiffres de rang pair de ${nombreAvecEspace(N)} vaut `;\n\t\t\t\t\tif (Number(N.toString().length) % 2 == 0) { // si N a un nombre pair de chiffres\n\t\t\t\t\t\todd_sum = Number(N.toString().charAt(0));\n\t\t\t\t\t\ttexteCorr += N.toString().charAt(0);\n\t\t\t\t\t\tfor (let k = 1; k < N.toString().length; k++) {\n\t\t\t\t\t\t\tif (k % 2 == 0) {\n\t\t\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\t\t\todd_sum += Number(N.toString().charAt(k));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexteCorr += ` = ` + odd_sum + ` <br> `;\n\t\t\t\t\t} else { // sinon N a un nombre impair de chiffres\n\t\t\t\t\t\todd_sum = Number(N.toString().charAt(1));\n\t\t\t\t\t\ttexteCorr += N.toString().charAt(1);\n\t\t\t\t\t\tfor (let m = 3; m < N.toString().length; m++) {\n\t\t\t\t\t\t\tif (m % 2 == 1) {\n\t\t\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(m);\n\t\t\t\t\t\t\t\todd_sum += Number(N.toString().charAt(m));\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexteCorr += ` = ` + odd_sum + `<br> `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `la différence entre la somme des chiffres de rangs pairs et celle des chiffres de rangs impairs vaut `;\n\t\t\t\t\tif ((odd_sum - even_sum) == 0) {\n\t\t\t\t\t\ttexteCorr += `${odd_sum - even_sum}, `;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += `${Math.abs(odd_sum - even_sum)} qui est un multiple de 11, `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\ttexteCorr += ` cela signifie que ${nombreAvecEspace(N)} est divisible par 11, il admet donc au moins trois diviseurs qui sont 1, 11 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6: // produit de deux nombres premiers inférieurs à 100\n\t\t\t\t\t// rang du premier facteur premier\n\t\t\t\t\tlet r1 = randint(0, cribleEratostheneN(100).length - 1);\n\t\t\t\t\t// rang du second facteur premier\n\t\t\t\t\tlet r2 = randint(0, cribleEratostheneN(100).length - 1);\n\t\t\t\t\tlet prime1 = cribleEratostheneN(100)[r1]; // on tire un nombre premier inférieur à 100, il n'y en a que 25!\n\t\t\t\t\tlet prime2 = cribleEratostheneN(100)[r2]; // on tire un autre nombre premier inférieur à 100, ça peut être le même qu'avant!\n\t\t\t\t\tN = prime1 + `$\\\\times$` + prime2;\n\t\t\t\t\ttexte = N;\n\t\t\t\t\ttexteCorr = `${N} est le produit de ${prime1} et de ${prime2}, il admet donc au moins `;\n\t\t\t\t\tif (prime1 == prime2) {\n\t\t\t\t\t\ttexteCorr += `trois divisieurs qui sont 1, ${prime1} et lui-même ${N}=${nombreAvecEspace(prime1 * prime2)}, `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += `quatre diviseurs qui sont 1, ${prime1}, ${prime2} et lui-même ${N}=${nombreAvecEspace(prime1 * prime2)}, `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(`${N} = ` + nombreAvecEspace(prime1 * prime2) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7: // nombre premier inférieur à 529\n\t\t\t\t\t// rang du nombre premier choisi\n\t\t\t\t\tlet r = randint(0, cribleEratostheneN(529).length - 1);\n\t\t\t\t\tN = cribleEratostheneN(529)[r]; //on choisit un nombre premier inférieur à 529\n\t\t\t\t\ttexte = N + ``;;\n\t\t\t\t\tlet tab_premiers_a_tester = cribleEratostheneN(Math.trunc(Math.sqrt(N)));\n\t\t\t\t\ttexteCorr = `Testons la divisibilité de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexteCorr += tab_premiers_a_tester[0];\n\t\t\t\t\tfor (let k = 1; k < tab_premiers_a_tester.length; k++) {\n\t\t\t\t\t\ttexteCorr += `, ` + tab_premiers_a_tester[k];\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `.`;\n\t\t\t\t\ttexteCorr += `<br> Aucun de ces nombres premiers ne divise ${N}, `;\n\t\t\t\t\ttexteCorr += texteEnCouleurEtGras(nombreAvecEspace(Number(N)) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\tlisteQuestionsToContenu(this);\n\t};\n\t//this.besoinFormulaireNumerique = ['Règle à travailler',5,\"1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissance\\n4 : Produit de puissances de même exposant\\n5 : Mélange\"]; \n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}