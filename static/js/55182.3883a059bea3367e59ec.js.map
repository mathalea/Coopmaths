{"version":3,"file":"js/55182.3883a059bea3367e59ec.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/1e/1E11-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, rienSi1, ecritureAlgebrique, ecritureAlgebriqueSauf1, ecritureParentheseSiNegatif } from '../../modules/outils.js'\nimport { setReponse, ajouteChampTexteMathLive } from '../../modules/gestionInteractif.js'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const titre = 'Déterminer la forme canonique d\\'un polynôme du second degré'\n\n/**\n * Calcul de discriminant pour identifier la forme graphique associée (0 solution dans IR, 1 ou 2)\n * @author Stéphane Guyon\n * Référence 1E11\n*/\nexport default function Formacanonique () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Forme canonique : '\n  this.nbQuestions = 4\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacingCorr = 3\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    if (this.interactif) {\n      this.consigne += '<br> '\n    }\n    if (this.sup === 1) {\n      listeTypeDeQuestions = combinaisonListes(['solutionsEntieres', 'solutionsEntieres'], this.nbQuestions)\n    }\n\n    for (let i = 0, texte, texteCorr, a, b, c, alpha, beta, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      if (listeTypeDeQuestions[i] === 'solutionsEntieres') {\n        // k(x-x1)(x-x2)\n        alpha = randint(-5, 5, [0])\n        beta = randint(-5, 5, [0])\n        a = randint(-4, 4, [0])\n        b = -2 * a * alpha\n        c = a * alpha * alpha + beta\n\n        texte = `Déterminer la forme canonique du polynôme $P$, défini pour tout $x \\\\in \\\\mathbb{R}$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        texteCorr = '<br>On sait que si le polynôme, sous forme développée, s\\'écrit $P(x)=ax^2+bx+c,$'\n        texteCorr += 'alors sa forme canonique est de la forme $P(x)=a(x-\\\\alpha)^2+\\\\beta$,'\n\n        texteCorr += '<br>avec $\\\\alpha=\\\\dfrac{-b}{2a}$ et $\\\\beta=P(\\\\alpha).$'\n        texteCorr += `<br>Avec l'énoncé : $a=${a}$ et $b=${b}$, on en déduit que $\\\\alpha=${alpha}$.`\n        texteCorr += `<br>On calcule alors $\\\\beta=P(${alpha})$, et on obtient au final que $\\\\beta=${beta}$.`\n        texteCorr += `<br>d'où, $P(x)=${(a)}\\\\big(x-${ecritureParentheseSiNegatif(alpha)}\\\\big)^2+${ecritureParentheseSiNegatif(beta)}$`\n        texteCorr += '<br>Au final, $P(x)='\n        if (a === 1 || a === -1) {\n          if (a === -1) { texteCorr += '-' }\n        } else { texteCorr += `${a}` }\n        texteCorr += `(x ${ecritureAlgebrique(-alpha)})^2`\n        if (beta !== 0) { texteCorr += `${ecritureAlgebrique(beta)}` }\n        texteCorr += '$'\n        if (beta > 0) {\n          if (alpha > 0) { setReponse(this, i, [`${a}(x-${alpha})^2+${beta}`]) } else { setReponse(this, i, [`${a}(x+${-alpha})^2+${beta}`]) }\n        }\n        if (beta < 0) {\n          if (alpha > 0) { setReponse(this, i, [`${a}(x-${alpha})^2${beta}`]) } else { setReponse(this, i, [`${a}(x+${-alpha})^2${beta}`]) }\n        }\n        if (beta === 0) { if (alpha > 0) { setReponse(this, i, [`${a}(x-${alpha})^2`]) } else { setReponse(this, i, [`${a}(x+${-alpha})^2}`]) } }\n      }\n\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.questionJamaisPosee(i, a, b, c)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Solutions entières\\n2 : Solutions réelles et calcul du discriminant non obligatoire']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["interactifReady","interactifType","titre","Formacanonique","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","spacingCorr","sup","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","interactif","combinaisonListes","texte","texteCorr","a","b","c","alpha","beta","i","cpt","randint","rienSi1","ecritureAlgebriqueSauf1","ecritureAlgebrique","ecritureParentheseSiNegatif","setReponse","ajouteChampTexteMathLive","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}