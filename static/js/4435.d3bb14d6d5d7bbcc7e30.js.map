{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N23-0.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Ecrire_nombres_decimal","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","sup2","nouvelleVersion","consigne","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","parseInt","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","nombre","tranche","part_ent","part_dec","nbDec","i","cpt","splice","j","randint","push","choice","calcul","context","texNombre","nombreEnLettres","replace","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/4435.d3bb14d6d5d7bbcc7e30.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,calcul,texNombre,nombreEnLettres} from '../../modules/outils.js'\nexport const titre = 'Écrire un nombre décimal en chiffres ou en lettres'\n\n/**\n * Lire un nombre / écrire un nombre : passer d'une écriture à une autre et inversement\n * On peut fixer la classe maximale : unités, miliers, millions, milliards\n * @author Jean-Claude Lhote\n * 6N23-0\n */\n\nexport default function Ecrire_nombres_decimal() {\n  \"use strict\"\n  Exercice.call(this)\n  this.titre = titre;\n  this.nbQuestions = 5;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 1\n  this.sup2 = 1\n  this.nouvelleVersion = function () {\n    if (this.sup == 2)\n      this.consigne = \"Écrire le nombre en chiffres\"\n    else\n      this.consigne = \"Écrire le nombre en lettres\"\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées \n    let typesDeQuestionsDisponibles = [parseInt(this.sup2) + 1]; // <1 000, <1 000 000) \n    let listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ); // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (\n      let i = 0, texte, texteCorr, a, b, c, nombre, tranche, part_ent, part_dec, nbDec, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n\n      nombre = 0\n      tranche = []\n      while (nombre == 0) {\n        tranche.splice(0)\n        part_ent = 0\n        part_dec = 0\n        for (let j = 0; j < listeTypeDeQuestions[i]; j++) {\n          a = randint(1, 9)\n          b = randint(1, 9)\n          c = randint(1, 9)\n          tranche.push(choice([0, 100, 20, 80, a, a * 100, a * 100 + b * 10 + c, a * 100 + 80 + b, a * 10, a * 100 + b * 10 + 1]))\n        }\n        for (let j = 1; j < listeTypeDeQuestions[i]; j++) {\n          part_ent += tranche[j] * 10 ** ((j - 1) * 3)\n          // nombre += tranche[j] * 10 ** ((j-1)*3)\n        }\n        part_dec = tranche[0]\n        nombre = calcul(part_ent + part_dec / 1000)\n        // if (tranche[listeTypeDeQuestions[i]-1]==0) nombre=0\n        if (tranche[1] < 2) nombre = 0\n        if (tranche[0] == 0) nombre = 0\n\n      }\n      if (part_dec % 10 != 0) nbDec = 3\n      else if (part_dec % 100 != 0) nbDec = 2\n      if (this.sup == 1) {\n        if (!context.isDiaporama) texte = `$${texNombre(nombre)}$ : \\\\dotfill`\n        else texte = `$${texNombre(nombre)}$`\n        if (!context.isDiaporama) texteCorr = `$${texNombre(nombre)}$ : ${nombreEnLettres(nombre)}.`\n        else texteCorr = `${nombreEnLettres(part_ent)} unités et ${nombreEnLettres(part_dec)}.`\n      }\n      else {\n        if (!context.isDiaporama) texte = `${nombreEnLettres(part_ent)} unités et ${nombreEnLettres(part_dec)} : \\\\dotfill`\n        else texte = `${nombreEnLettres(part_ent)} unités et ${nombreEnLettres(part_dec)}`\n        if (!context.isDiaporama) texteCorr = `${nombreEnLettres(part_ent)} unités et ${nombreEnLettres(part_dec)} : $${texNombre(nombre)}$.`\n        else texteCorr = `$${texNombre(nombre)}$.`\n      }\n      texte = texte.replace('et-un unités', 'et-une unités')\n      texteCorr = texteCorr.replace('et-un unités', 'et-une unités')\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = ['Type d\\'exercice', 2, '1 : Écrire en lettres un nombre donné en chiffres\\n2 : Écrire en chiffres un nombre donné en lettres'];\n  this.besoinFormulaire2Numerique = ['Classe maximum', 2, '1 : Unités\\n2 : Milliers']\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}