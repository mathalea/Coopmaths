{"version":3,"file":"js/96773.9d446ad33d98fad5b307.js","mappings":"8QAIO,MAAMA,EAAQ,gDACRC,GAAkB,EAClBC,EAAiB,MACjBC,GAAW,EACXC,EAAU,UAOR,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKC,SAAW,8CAChBC,EAAAA,GAAAA,OAAiBF,KAAKG,QAAU,EAAIH,KAAKG,QAAU,IACnDD,EAAAA,GAAAA,OAAiBF,KAAKI,YAAc,IAAMJ,KAAKI,YAAc,EAC7DJ,KAAKK,YAAc,EACnBL,KAAKM,WAAa,EAClBN,KAAKO,OAAS,EACdP,KAAKQ,kBAAmB,EACxBR,KAAKS,sBAAuB,EAE5BT,KAAKU,gBAAkB,WAGrB,IAAIC,EAFJX,KAAKY,eAAiB,GACtBZ,KAAKa,iBAAmB,GAExB,MACMC,GAAaC,EAAAA,EAAAA,KADW,CAAC,EAAG,EAAG,EAAG,EAAG,GAGzCf,KAAKK,aAEP,IAAIW,EAAwB,GACvBhB,KAAKiB,KAAoB,QAAbjB,KAAKiB,IAGM,iBAAdjB,KAAKiB,IACfD,EAAsB,GAAKhB,KAAKiB,IAEhCD,EAAwBhB,KAAKiB,IAAIC,MAAM,KALzCF,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,GAQvC,MAAMG,GAAaJ,EAAAA,EAAAA,KACjBC,EACAhB,KAAKK,aAEDe,GAASC,EAAAA,EAAAA,KAAiBF,EAAY,MAAOE,EAAAA,EAAAA,KAAiBF,EAAY,KAC1EG,GAA0BP,EAAAA,EAAAA,KAC9B,EAAC,GAAM,GACPK,GAEIG,EAAe,CACnB,+BACA,sBACA,uBACA,eACA,6BAEIC,EAAgB,CAAC,IACjBC,EAAkB,CAAC,IACnBC,EAAU,CAAC,IACjB,IAAIC,EAAS,GACb,MAAMC,EAAS,CAAC,SAAU,SAAU,QAAS,YAAa,OAAQ,YAC5DC,EAAS,CACb,SACA,SACA,YACA,sBACA,uBAEFL,EAAc,GAAK,CACjB,WACA,SACA,cACA,qBACA,WACA,WACA,YACA,WACA,sBAEFA,EAAc,GAAK,CACjB,kBACA,WACA,YACA,UACA,sBACA,SACA,YACA,sBAEFA,EAAc,GAAK,CACjB,iBACA,SACA,YACA,cACA,mBACA,gBACA,oBAEFA,EAAc,GAAK,CACjB,UACA,SACA,uBACA,SACA,oCACA,cACA,WACA,wBAEFA,EAAc,GAAK,CACjB,SACA,SACA,WACA,UACA,YACA,SACA,mBAEFC,EAAgB,GAAK,CAAC,EAAG,EAAG,KAAM,EAAG,GAAK,IAAK,EAAG,EAAG,KACrDA,EAAgB,GAAK,CAAC,IAAK,EAAG,GAAI,IAAK,GAAI,EAAG,GAAI,GAClDA,EAAgB,GAAK,CAAC,KAAM,IAAK,EAAG,GAAK,EAAG,IAAK,GACjDA,EAAgB,GAAK,CAAC,EAAG,IAAK,KAAM,IAAK,EAAG,EAAG,GAAI,GACnDA,EAAgB,GAAK,CAAC,GAAK,EAAG,EAAG,KAAM,GAAI,GAAI,IAE/C,IACE,IACEK,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EACAC,EAfEC,EAAI,EAaNC,EAA8B,EAG9BC,EAAM,EACRF,EAAI5C,KAAKK,aAAeyC,EAAM,IAE9B,CACA,OAAQC,SAAS5B,EAAWyB,KAC1B,KAAK,EACCtB,EAAwBuB,IAC1BP,EAASxB,EAAW8B,GACpBP,EAAU,EAACW,EAAAA,EAAAA,QAAWC,EAAAA,EAAAA,QACtBV,GAASW,EAAAA,EAAAA,KAAQ,EAAG1B,EAAcc,GAAQa,OAAS,GACnDX,EAAQhB,EAAcc,GAAQC,GAC9BN,EACAR,EAAgBa,GAAQC,IACvB,EAAoB,IAAhBW,EAAAA,EAAAA,KAAQ,EAAG,IAAWA,EAAAA,EAAAA,MAAS,EAAG,IACvCnB,GAAImB,EAAAA,EAAAA,KAAQ,EAAG,GACfd,GAAQgB,EAAAA,EAAAA,KAAOrB,EAAIE,EAAI,GACvBE,EAAIJ,GAAImB,EAAAA,EAAAA,KAAQ,EAAG,GACnBlB,GAAIoB,EAAAA,EAAAA,KAAOjB,EAAIF,EAAI,GACnBS,EAAS,GAAEL,EAAQ,aAAad,EAAae,UAAeE,MAC5DE,GAAU,qBAAoBX,KAAKS,YAAea,EAAAA,EAAAA,KAClDjB,SACMC,EAAQ,0CAC0BF,KAAKK,YAAea,EAAAA,EAAAA,KAC1DrB,YAEFU,GAAU,eAAcF,sDACxBG,EAAa,GAAEN,EAAQ,gBAAeiB,EAAAA,EAAAA,KACtCD,EAAAA,EAAAA,KAAQjB,GACR,iBAEAO,EAAa,GAAEN,EAAQ,kBAAiBiB,EAAAA,EAAAA,KACxCC,EAAAA,EAAAA,KAAUpB,EAAIJ,6BACWS,iBAAqBH,EAAQ,aAC5CiB,EAAAA,EAAAA,KACRD,EAAAA,EAAAA,KAAQjB,GACR,6BACoBiB,EAAAA,EAAAA,KAAQrB,WAAUsB,EAAAA,EAAAA,KACtCE,EAAAA,EAAAA,KAAWrB,EAAIJ,cACNuB,EAAAA,EAAAA,KAAeD,EAAAA,EAAAA,KAAQjB,GAAQ,iBAC1CO,GAAc,wDAAuDH,0HACrE7B,EAAe,QAEf2B,EAASxB,EAAW8B,GACpBP,EAAU,EAACW,EAAAA,EAAAA,QAAWC,EAAAA,EAAAA,QACtBV,GAASW,EAAAA,EAAAA,KAAQ,EAAG1B,EAAcc,GAAQa,OAAS,GACnDX,EAAQhB,EAAcc,GAAQC,GAC9BN,EACAR,EAAgBa,GAAQC,IACvB,EAAoB,IAAhBW,EAAAA,EAAAA,KAAQ,EAAG,IAAWA,EAAAA,EAAAA,MAAS,EAAG,IACvCnB,GAAImB,EAAAA,EAAAA,KAAQ,EAAG,GACfd,GAAQgB,EAAAA,EAAAA,KAAOrB,EAAIE,EAAI,GACvBA,GAAM,GACNE,EAAIJ,GAAImB,EAAAA,EAAAA,KAAQ,EAAG,GACnBlB,GAAIoB,EAAAA,EAAAA,KAAOjB,EAAIF,EAAI,GACnBS,EAAS,GAAEL,EAAQ,aAAad,EAAae,UAAeE,MAC5DE,GAAU,iBAAgBX,KAAKS,YAAea,EAAAA,EAAAA,KAAQjB,SAAaC,EAAQ,0CACnCF,KAAKK,YAAea,EAAAA,EAAAA,KAC1DrB,YAEFU,GAAU,eAAcF,sDACxBG,EAAa,GAAEN,EAAQ,gBAAeiB,EAAAA,EAAAA,KACtCD,EAAAA,EAAAA,KAAQjB,GACR,iBAEAO,EAAa,GAAEN,EAAQ,kBAAiBiB,EAAAA,EAAAA,KACxCE,EAAAA,EAAAA,KAAWrB,EAAIJ,6BACUS,iBAAqBH,EAAQ,aAC5CiB,EAAAA,EAAAA,KACRD,EAAAA,EAAAA,KAAQjB,GACR,6BACoBiB,EAAAA,EAAAA,KAAQrB,mBAAkBsB,EAAAA,EAAAA,KAC9CE,EAAAA,EAAAA,KAAWrB,EAAIJ,cACNuB,EAAAA,EAAAA,KAAeD,EAAAA,EAAAA,KAAQjB,GAAQ,gBAAeiB,EAAAA,EAAAA,MACvDD,EAAAA,EAAAA,KAAQjB,EAAIC,EAASL,aAEvBY,GAAc,iEAAgEH,4BAAgCH,EAAQ,uBAAuBN,eAAeM,EAAQ,sBAAsBF,+DAC1LxB,EAAe,OAEjBkC,GAA+B,EAC/B,MACF,KAAK,EACHR,EAAU,EAACW,EAAAA,EAAAA,QAAWC,EAAAA,EAAAA,QACtBnB,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACfnB,EAAwB,KAApBmB,EAAAA,EAAAA,KAAQ,EAAG,GAAIpB,GACnBA,GAAQ,IACRI,GAAIuB,EAAAA,EAAAA,MAAQL,EAAAA,EAAAA,KAAQtB,EAAI,IAAO,EAAoB,IAAhBoB,EAAAA,EAAAA,KAAQ,EAAG,KAAY,GAC1Df,GAAIsB,EAAAA,EAAAA,MAAQL,EAAAA,EAAAA,KAAQrB,EAAI,IAAO,EAAoB,IAAhBmB,EAAAA,EAAAA,KAAQ,EAAG,KAAY,GAC1DZ,GAASc,EAAAA,EAAAA,KAAOtB,EAAII,GACpBK,GAASa,EAAAA,EAAAA,KAAOrB,EAAII,GAEpBO,EAAS,GAAEL,EAAQ,iBAAgBkB,EAAAA,EAAAA,KAAUzB,8BAA8BI,kDAC3EQ,GAAU,GAAEL,EAAQ,uBAAsBkB,EAAAA,EAAAA,KAAUxB,4BAA4BI,iDAChFO,GAAS,kGACTC,EAAa,GAAEN,EAAQ,uCAAsCmB,EAAAA,EAAAA,MAAWC,EAAAA,EAAAA,KAAQnB,EAAQ,cACxFK,GAAc,GAAEN,EAAQ,uCACcmB,EAAAA,EAAAA,MAAWC,EAAAA,EAAAA,KAAQlB,EAAQ,cAC7DD,IAAWC,GACbI,GAAa,0HACbhC,EAAe,QAEfgC,GAAa,sIACbhC,EAAe,OAEjB,MACF,KAAK,EACH0B,EAAU,EAACW,EAAAA,EAAAA,QAAWC,EAAAA,EAAAA,QACtBnB,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACfnB,EAAID,GAAIoB,EAAAA,EAAAA,KAAQ,GAAI,IACpBR,EAAS,GAAEL,EAAQ,oBAAoBP,+BAA+BO,EAAQ,0BAA0BN,yBACxGW,GAAU,qDAAoDL,EAAQ,WACtEM,EAAa,yCAAwCN,EAAQ,SACpDA,EAAQ,aAAaN,EAAID,aAClCa,GAAc,QAAOb,aAAaO,EAAQ,WAAW,EAAIP,mDAEzDa,GAAc,YAAWN,EAAQ,WAAWP,EAAIC,2CACJM,EAAQ,uBAC7BA,EAAQ,mCAAmCA,EAAQ,yDAE1E1B,EAAe,MACf,MACF,KAAK,EACH2B,GAASY,EAAAA,EAAAA,KAAQ,EAAG,GACpBX,GAASW,EAAAA,EAAAA,KAAQ,EAAG,GACpBR,EAAS,2CAA0Cd,EAAOU,UAC1DI,GAAU,wBAAuBb,EAAOU,eAAoBA,EAAS,eAErEG,GAAS,0GACTC,EAAa,wDAAuD,EAAQJ,mCACxCA,EAAS,OAAO,IAAMA,EAAS,mBAEnEI,GAAc,+BAA8B,EAAIJ,qDACMA,EAAS,+CACf,EAAIA,SACpDI,GAAa,mFACbhC,EAAe,MACf,MACF,KAAK,EACH0B,EAAU,EAACW,EAAAA,EAAAA,QAAWC,EAAAA,EAAAA,QACtBX,GAASY,EAAAA,EAAAA,KAAQ,EAAG,GACpBV,EAAQhB,EAAc,GAAGc,GACzBC,GAASW,EAAAA,EAAAA,KAAQ,EAAG,GACpBjB,EACER,EAAgB,GAAGa,IAClB,EAAoB,IAAhBY,EAAAA,EAAAA,KAAQ,EAAG,IAAWA,EAAAA,EAAAA,MAAS,EAAG,IACzChB,GAAIgB,EAAAA,EAAAA,KAAQ,EAAG,GACff,GAAIe,EAAAA,EAAAA,KAAQ,EAAG,GACfxB,EAAQ,GAAK,CAACQ,EAAGA,EAAID,GACrBP,EAAQ,GAAK,CAACQ,EAAI,GAAIA,EAAI,GAAKD,GAC/BP,EAAQ,GAAK,CAAC,EAAIQ,EAAI,GAAI,EAAIA,EAAI,GAAKD,GACvCP,EAAQ,GAAK,CAAC,EAAIQ,EAAI,GAAI,EAAIA,EAAI,GAAKD,GACvCQ,EAAMnB,EAAwBuB,GAC9BA,GAA+B,EAC1BJ,IAAKf,EAAQS,GAAG,IAAM,IAC3BO,EAAS,GAAEL,EAAQ,0BAA0BG,6FAC7CE,GAAS,sDACTA,GAAS,6CACT,IAAK,IAAIgB,EAAI,EAAGA,GAAKhC,EAAQyB,OAAQO,IAAKhB,GAAS,KACnDA,GAAU,qBAAoBF,KAC9B,IAAK,IAAIkB,EAAI,EAAGA,EAAIhC,EAAQyB,OAAQO,IAAKhB,GAAU,IAAGhB,EAAQgC,GAAG,KACjEhB,GAAS,kCACT,IAAK,IAAIgB,EAAI,EAAGA,EAAIhC,EAAQyB,OAAQO,IAAOhB,GAAU,KAAGW,EAAAA,EAAAA,MAAQI,EAAAA,EAAAA,KAAQ/B,EAAQgC,GAAG,GAAI,MACvFhB,GAAS,oCACTA,GAAU,eAAcF,qDACxBG,EAAa,yCAAwCH,wCAC5Cb,EAALc,GAAckB,EAAAA,EAAAA,KAAM,IACVA,EAAAA,EAAAA,KAAM,EAAG,CAACxB,IACxBQ,GAAa,IACb,IAAK,IAAIe,EAAI,EAAGA,EAAI/B,EAAOwB,OAAQO,IACjCf,GAAc,YAAUU,EAAAA,EAAAA,MACtBI,EAAAA,EAAAA,KAAQ/B,EAAQC,EAAO+B,IAAI,GAAI,QAC3BhC,EAAQC,EAAO+B,IAAI,OAE3Bf,GAAc,IAAEU,EAAAA,EAAAA,KAAQpB,cACnBQ,GASHE,GAAc,eAAcH,8CAC5B7B,EAAe,QATfgC,GAAc,kBAAgBU,EAAAA,EAAAA,MAC5BI,EAAAA,EAAAA,KAAQ/B,EAAQS,GAAG,GAAI,QACnBT,EAAQS,GAAG,QAAOkB,EAAAA,EAAAA,MACtBI,EAAAA,EAAAA,MAAQL,EAAAA,EAAAA,KAAO1B,EAAQS,GAAG,GAAKT,EAAQS,GAAG,IAAK,SAC1CK,EAAMoB,UAAU,EAAGpB,EAAMW,OAAS,SACzCR,GAAc,eAAcH,+CAC5B7B,EAAe,OAOjBX,KAAK6D,oBAAoBjB,EAAGd,EAAGC,EAAGI,EAAGH,EAAGC,MACtCjC,KAAK8D,YAAc5D,EAAAA,GAAAA,SACrBF,KAAK+D,eAAenB,GAAK,GACzB5C,KAAK+D,eAAenB,GAAGoB,QAAU,CAAEC,SAAS,GAC5CjE,KAAK+D,eAAenB,GAAGsB,OAAU,GAAExB,MACnC1C,KAAK+D,eAAenB,GAAGuB,aAAe,CACpC,CACEzB,MAAO,MACP0B,OAAyB,QAAjBzD,GAEV,CACE+B,MAAO,MACP0B,OAAyB,QAAjBzD,GAEV,CACE+B,MAAO,iBACP0B,QAAQ,IAGRpE,KAAK8D,aACPpB,IAAS2B,EAAAA,EAAAA,IAAgBrE,KAAM4C,GAAGF,QAItC1C,KAAKY,eAAe0D,KAAK5B,GACzB1C,KAAKa,iBAAiByD,KAAK3B,GAC3BC,KAEFE,KAEFyB,EAAAA,EAAAA,KAAwBvE,OAE1BA,KAAKwE,sBAAwB,CAAC,qBAAsB,sI,gBCtWvC,SAASzE,IAItBC,KAAKP,MAAQ,GACbO,KAAKyE,YAAa,EAclBzE,KAAKC,SAAW,GAChBD,KAAK0E,mBAAqB,GAC1B1E,KAAK2E,aAAe,GACpB3E,KAAKY,eAAiB,GACtBZ,KAAKa,iBAAmB,GACxBb,KAAK4E,QAAU,GACf5E,KAAK6E,kBAAoB,GACzB7E,KAAK+D,eAAiB,GACtB/D,KAAK8E,sBAAwB,GAK7B9E,KAAKG,QAAU,EACfH,KAAKI,YAAc,EAKnBJ,KAAK+E,mBAAoB,EACzB/E,KAAKgF,cAAgB,GACrBhF,KAAKiF,oBAAqB,EAC1BjF,KAAKkF,uBAAwB,EAC7BlF,KAAKO,OAAS,EACdP,KAAKM,WAAa,EAClBN,KAAKQ,kBAAmB,EACxBR,KAAKS,sBAAuB,EAC5BT,KAAKmF,mBAAoB,EACzBnF,KAAKoF,uBAAwB,EAM7BpF,KAAKqF,QAAS,EACdrF,KAAKsF,gBAAkB,GAKvBtF,KAAKK,YAAc,GACnBL,KAAKuF,+BAAgC,EACrCvF,KAAKwF,qBAAsB,EAC3BxF,KAAKyF,MAAQ,GAEbzF,KAAK8D,YAAa,EAClB9D,KAAK0F,uBAAwB,EAE7B1F,KAAK2F,2BAA4B,EACjC3F,KAAKwE,uBAAwB,EAC7BxE,KAAK4F,6BAA8B,EAEnC5F,KAAK6F,4BAA6B,EAClC7F,KAAK8F,wBAAyB,EAC9B9F,KAAK+F,8BAA+B,EAEpC/F,KAAKgG,4BAA6B,EAClChG,KAAKiG,wBAAyB,EAC9BjG,KAAKkG,8BAA+B,EAMpClG,KAAKmG,cAAe,EAMpBnG,KAAKoG,eAAiB,GAEtBpG,KAAKU,gBAAkB,SAAU2F,KAQjCrG,KAAK6D,oBAAsB,SAAUjB,KAAM0D,GAC/B,IAAN1D,IAAS5C,KAAKoG,eAAiB,IACnC,IAAIG,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAI1G,KAAKoG,eAAeO,QAAQJ,IAAmB,KAGjDvG,KAAKoG,eAAe9B,KAAKiC,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/6e/6P10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, range, combinaisonListes, arrondi, calcul, texNombrec, prenomF, prenomM, texNombre, miseEnEvidence, texPrix, compteOccurences } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const titre = 'Reconnaître une situation de proportionnalité'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\nexport const amcReady = true\nexport const amcType = 'qcmMono'\n\n/**\n * Exercice sur la notion de proportionnalité (ou pas)\n * @author Jean-Claude Lhote\n * référence 6P10\n */\nexport default function ProportionnalitePasProportionnalite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Répondre aux questions posées en justifiant'\n  context.isHtml ? this.spacing = 2 : this.spacing = 1.4\n  context.isHtml ? this.spacingCorr = 1.5 : this.spacingCorr = 1\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.nbCols = 1\n  this.nbColsModifiable = false\n  this.nbColsCorrModifiable = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let bonneReponse\n    const listeIndexDisponibles = [0, 1, 2, 3, 4]\n    const listeIndex = combinaisonListes(\n      listeIndexDisponibles,\n      this.nbQuestions\n    )\n    let listeChoixDisponibles = []\n    if (!this.sup || this.sup === 'NaN') { // Si aucune liste n'est saisie\n      listeChoixDisponibles = [1, 2, 3, 4, 5]\n    } else {\n      if (typeof (this.sup) === 'number') { // Si c'est un nombre c'est qu'il y a qu'une expression\n        listeChoixDisponibles[0] = this.sup\n      } else {\n        listeChoixDisponibles = this.sup.split('-')// Sinon on créé un tableau à partir des valeurs séparées par des -\n      }\n    }\n    const listeChoix = combinaisonListes(\n      listeChoixDisponibles,\n      this.nbQuestions\n    )\n    const nombre = compteOccurences(listeChoix, '1') + compteOccurences(listeChoix, '5')\n    const listeProportionnelOuPas = combinaisonListes(\n      [true, false],\n      nombre\n    )\n    const listeDeLieux = [\n      'dans un magasin de bricolage',\n      'dans une animalerie',\n      'au supermarché local',\n      \"à l'épicerie\",\n      'dans la boutique du musée'\n    ]\n    const listeDeChoses = [[]]\n    const listeDePrixUnit = [[]]\n    const tirages = [[]]\n    let index3 = []\n    const villes = ['Moscou', 'Berlin', 'Paris', 'Bruxelles', 'Rome', 'Belgrade']\n    const verbes = [\n      'double',\n      'triple',\n      'quadruple',\n      'est multiplié par 5',\n      'est multiplié par 6'\n    ]\n    listeDeChoses[0] = [\n      'articles',\n      'outils',\n      'accessoires',\n      \"pièces d'outillage\",\n      'pinceaux',\n      'ampoules',\n      'tournevis',\n      'spatules',\n      'raccords de tuyaux'\n    ]\n    listeDeChoses[1] = [\n      'poissons rouges',\n      'canetons',\n      'perruches',\n      'phasmes',\n      'colliers anti-puces',\n      'souris',\n      'lapereaux',\n      'paquets de graines'\n    ]\n    listeDeChoses[2] = [\n      'sets de tables',\n      'verres',\n      'assiettes',\n      'os à macher',\n      'dosettes de café',\n      'packs de lait',\n      'paquets de pâtes'\n    ]\n    listeDeChoses[3] = [\n      'mangues',\n      'ananas',\n      'fruits de la passion',\n      'melons',\n      'paquets de madeleines de Commercy',\n      'bergamottes',\n      'bredeles',\n      'pots de cancoillotte'\n    ]\n    listeDeChoses[4] = [\n      'cartes',\n      'livres',\n      'gravures',\n      'puzzles',\n      'maquettes',\n      'roches',\n      'jeux de société'\n    ]\n    listeDePrixUnit[0] = [5, 4, 1.25, 3, 0.5, 1.5, 2, 6, 4.5]\n    listeDePrixUnit[1] = [1.5, 7, 20, 2.5, 25, 2, 15, 8]\n    listeDePrixUnit[2] = [1.25, 1.5, 2, 0.5, 5, 4.5, 3]\n    listeDePrixUnit[3] = [2, 2.5, 1.25, 1.5, 4, 7, 12, 3]\n    listeDePrixUnit[4] = [0.5, 5, 7, 13.5, 10, 15, 20]\n\n    for (\n      let i = 0,\n        x,\n        y,\n        z,\n        pu,\n        n,\n        p,\n        somme,\n        prenoms,\n        index1,\n        index2,\n        objet,\n        met,\n        compteurProportionnelsOuPas = 0,\n        texte,\n        texteCorr,\n        cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (parseInt(listeChoix[i])) {\n        case 1: // Achat\n          if (listeProportionnelOuPas[compteurProportionnelsOuPas]) {\n            index1 = listeIndex[i]\n            prenoms = [prenomF(), prenomM()]\n            index2 = randint(0, listeDeChoses[index1].length - 1)\n            objet = listeDeChoses[index1][index2]\n            pu =\n            listeDePrixUnit[index1][index2] *\n            (1 + randint(1, 2) * 0.2 * randint(-1, 1))\n            y = randint(2, 5)\n            somme = calcul(y * pu, 2)\n            p = y * randint(2, 5)\n            z = calcul(p * pu, 2)\n            texte = `${prenoms[0]} achète ${listeDeLieux[index1]} des ${objet}. `\n            texte += `Elle  repart avec ${y} ${objet} pour $${texPrix(\n            somme\n          )}$€. ${prenoms[1]\n            } achète quant à lui, au même endroit ${p} ${objet} pour $${texPrix(\n              z\n            )}$€.<br>`\n            texte += `Le prix des ${objet} est-il proportionnel à la quantité achetée  ?<br>`\n            texteCorr = `${prenoms[0]} dépense $${miseEnEvidence(\n            texPrix(somme),\n            'blue'\n          )}$€.<br>`\n            texteCorr = `${prenoms[1]} a acheté  $${miseEnEvidence(\n            texNombre(p / y)\n          )}$ fois la quantité des ${objet} achetée par ${prenoms[0]\n            } pour $${miseEnEvidence(\n              texPrix(somme),\n              'blue'\n            )}$€.<br>Il a payé $${texPrix(z)}$€ $=${miseEnEvidence(\n              texNombrec(p / y)\n            )}\\\\times${miseEnEvidence(texPrix(somme), 'blue')}$€.<br>`\n            texteCorr += `A l'aide de ces données, on constate que le prix des ${objet} et leur quantité sont tous les deux multipliés par le même nombre, donc ces deux grandeurs sont proportionnelles.<br>`\n            bonneReponse = 'oui'\n          } else {\n            index1 = listeIndex[i]\n            prenoms = [prenomF(), prenomM()]\n            index2 = randint(0, listeDeChoses[index1].length - 1)\n            objet = listeDeChoses[index1][index2]\n            pu =\n            listeDePrixUnit[index1][index2] *\n            (1 + randint(1, 2) * 0.2 * randint(-1, 1))\n            y = randint(2, 5)\n            somme = calcul(y * pu, 2)\n            pu -= 0.1\n            p = y * randint(2, 5)\n            z = calcul(p * pu, 2)\n            texte = `${prenoms[0]} achète ${listeDeLieux[index1]} des ${objet}. `\n            texte += `Elle a obtenu ${y} ${objet} pour $${texPrix(somme)}$€. ${prenoms[1]\n            } achète quant à lui, au même endroit ${p} ${objet} pour $${texPrix(\n              z\n            )}$€.<br>`\n            texte += `Le prix des ${objet} est-il proportionnel à la quantité achetée  ?<br>`\n            texteCorr = `${prenoms[0]} dépense $${miseEnEvidence(\n            texPrix(somme),\n            'blue'\n          )}$€.<br>`\n            texteCorr = `${prenoms[1]} a acheté  $${miseEnEvidence(\n            texNombrec(p / y)\n          )}$ fois la quantité des ${objet} achetée par ${prenoms[0]\n            } pour $${miseEnEvidence(\n              texPrix(somme),\n              'blue'\n            )}$€.<br>Il a payé $${texPrix(z)}$€.<br>Mais $${miseEnEvidence(\n              texNombrec(p / y)\n            )}\\\\times${miseEnEvidence(texPrix(somme), 'blue')}$€ $=${texPrix(\n              calcul((p * somme) / y)\n            )}$€.<br>`\n            texteCorr += `À l'aide de ces données, on constate que le prix unitaire des ${objet} n'est pas le même pour ${prenoms[0]} qui en a acheté $${y}$ que pour ${prenoms[1]} qui en a acheté ${p}, donc ces deux grandeurs ne sont pas proportionnelles.<br>`\n            bonneReponse = 'non'\n          }\n          compteurProportionnelsOuPas += 1\n          break\n        case 2: // Distance\n          prenoms = [prenomF(), prenomM()]\n          x = randint(5, 20)\n          y = randint(5, 20, x) * 100\n          x = x * 100\n          n = arrondi(calcul((x / 60) * (1 + randint(0, 2) * 0.2)), 0)\n          p = arrondi(calcul((y / 60) * (1 + randint(0, 2) * 0.2)), 0)\n          index1 = calcul(x / n) // vitesse fille\n          index2 = calcul(y / p) // vitesse garçon\n\n          texte = `${prenoms[0]} habite à $${texNombre(x)}$ m du collège. Elle met ${n} minutes pour s'y rendre depuis chez elle.<br>`\n          texte += `${prenoms[1]}, lui, habite à $${texNombre(y)}$ m du collège. Il met ${p} minutes pour s'y rendre depuis chez lui.<br>`\n          texte += 'Le temps mis pour venir au collège est-il proportionnel à la distance du foyer au collège ?<br>'\n          texteCorr = `${prenoms[0]} parcourt chaque minute environ $${texNombrec(arrondi(index1, 1))}$ m.<br>`\n          texteCorr += `${prenoms[1]\n            } parcourt chaque minute environ $${texNombrec(arrondi(index2, 1))}$ m.<br>`\n          if (index1 === index2) {\n            texteCorr += 'Pour ces deux élèves le temps mis et la distance parcourue sont proportionnelles (si l\\'on compare leur vitesse moyenne)'\n            bonneReponse = 'oui'\n          } else {\n            texteCorr += 'Pour ces deux élèves le temps mis et la distance parcourue ne sont pas proportionnelles (si l\\'on compare leur vitesse moyenne).<br>'\n            bonneReponse = 'non'\n          }\n          break\n        case 3: // Âge\n          prenoms = [prenomF(), prenomM()]\n          x = randint(5, 20)\n          y = x + randint(25, 35)\n          texte = `${prenoms[0]} vient d'avoir ${x} ans cette année. Son père ${prenoms[1]} vient de fêter  son ${y}ème anniversaire.<br>`\n          texte += `L'âge de son père est-il proportionnel à l'âge de ${prenoms[0]} ?<br>`\n          texteCorr = `Aujourd'hui la différence d'âge entre ${prenoms[0]\n            } et ${prenoms[1]} est de ${y - x} ans.<br>`\n          texteCorr += `Dans ${x} années, ${prenoms[0]} aura ${2 * x\n            } ans, c'est à dire le double d'aujourd'hui.<br>`\n          texteCorr += `Son père ${prenoms[1]} aura ${x + y\n            } ans cette année-là.<br>Quand l'âge de ${prenoms[0]\n            } double, l'âge de ${prenoms[1]} ne double pas, donc l'âge de ${prenoms[0]\n            } et l'âge de son père ne sont pas propotionnels.<br>`\n          bonneReponse = 'non'\n          break\n        case 4: // Épidémie\n          index1 = randint(0, 5)\n          index2 = randint(0, 4)\n          texte = `Une épidémie se répand dans la ville de ${villes[index1]}.<br>`\n          texte += `Le nombre de malades ${verbes[index2]} tous les ${index2 + 2\n            } jours.<br>`\n          texte += 'Le nombre de malades est-il proportionnel au nombre de jours passés depuis le début de l\\'épidémie ?<br>'\n          texteCorr = `Admettons qu'il y ait 10 malades le premier jour. Le ${1 + 2 + index2\n            }ème jour il y aura $10 \\\\times ${index2 + 2} = ${10 * (index2 + 2)\n            }$ malades.<br>`\n          texteCorr += `Entre le premier jour et le ${3 + index2\n            }ème jour, le nombre de malades est multiplié par ${index2 + 2\n            } mais le nombre de jours est multiplié par ${3 + index2}.<br>`\n          texteCorr += 'Donc le nombre de malades n\\'est pas proportionnel au nombre de jours passés.<br>'\n          bonneReponse = 'non'\n          break\n        case 5: // Achat (tableau de proportionnalité)\n          prenoms = [prenomF(), prenomM()]\n          index1 = randint(0, 5)\n          objet = listeDeChoses[4][index1]\n          index2 = randint(0, 4)\n          pu =\n            listeDePrixUnit[4][index1] *\n            (1 + randint(1, 2) * 0.2 * randint(-1, 1))\n          n = randint(2, 6)\n          p = randint(0, 3)\n          tirages[0] = [n, n * pu]\n          tirages[1] = [n + 1, (n + 1) * pu]\n          tirages[2] = [2 * n + 1, (2 * n + 1) * pu]\n          tirages[3] = [3 * n + 3, (3 * n + 3) * pu]\n          met = listeProportionnelOuPas[compteurProportionnelsOuPas]\n          compteurProportionnelsOuPas += 1\n          if (!met) tirages[p][1] -= 0.1\n          texte = `${prenoms[1]} relève les prix des ${objet} sur un catalogue par correspondance en fonction de la quantité saisie dans le panier<br>`\n          texte += 'Il note les prix dans le tableau suivant :<br> <br>'\n          texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // construction du tableau des effectifs en un seul morceau\n          for (let j = 0; j <= tirages.length; j++) texte += '|c'\n          texte += `|}\\\\hline  \\\\text{${objet}}`\n          for (let j = 0; j < tirages.length; j++) texte += `&${tirages[j][0]}`\n          texte += '\\\\\\\\\\\\hline \\\\text{Prix (en €})'\n          for (let j = 0; j < tirages.length; j++) { texte += `&${texPrix(arrondi(tirages[j][1], 2))}` }\n          texte += '\\\\\\\\\\\\hline\\\\end{array}$<br> <br>'\n          texte += `Le prix des ${objet} est-il proportionnel à la quantité achetée ?<br>`\n          texteCorr = `Il faut calculer le prix unitaire des ${objet} dans chaque cas de figure :<br><br>`\n          if (met) index3 = range(3)\n          else index3 = range(3, [p])\n          texteCorr += '$'\n          for (let j = 0; j < index3.length; j++) {\n            texteCorr += `\\\\dfrac{${texPrix(\n              arrondi(tirages[index3[j]][1], 2)\n            )}}{${tirages[index3[j]][0]}}=`\n          }\n          texteCorr += `${texPrix(pu)}$<br><br>`\n          if (!met) {\n            texteCorr += `Mais $\\\\dfrac{${texPrix(\n              arrondi(tirages[p][1], 2)\n            )}}{${tirages[p][0]}}=${texPrix(\n              arrondi(calcul(tirages[p][1] / tirages[p][0]), 2)\n            )}$€/${objet.substring(0, objet.length - 1)}<br>`\n            texteCorr += `Le prix des ${objet} n'est pas proportionnel à leur nombre.<br>`\n            bonneReponse = 'non'\n          } else {\n            texteCorr += `Le prix des ${objet} est bien proportionnel à leur nombre.<br>`\n            bonneReponse = 'oui'\n          }\n          break\n      }\n      if (this.questionJamaisPosee(i, x, y, p, z, pu)) {\n        if (this.interactif || context.isAmc) {\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].options = { ordered: true }\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'oui',\n              statut: bonneReponse !== 'non'\n            },\n            {\n              texte: 'non',\n              statut: bonneReponse !== 'oui'\n            },\n            {\n              texte: 'je ne sais pas',\n              statut: false\n            }\n          ]\n          if (this.interactif) {\n            texte += propositionsQcm(this, i).texte\n          }\n        }\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n  this.besoinFormulaireTexte = ['Types de questions', 'Nombres séparés par des tirets\\n1 : Achat.\\n2 : Distance.\\n3 : Âge.\\n4 : Épidémie.\\n5 : Catalogue (tableau de proportionnalité).']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","ProportionnalitePasProportionnalite","Exercice","this","consigne","context","spacing","spacingCorr","nbQuestions","nbColsCorr","nbCols","nbColsModifiable","nbColsCorrModifiable","nouvelleVersion","bonneReponse","listeQuestions","listeCorrections","listeIndex","combinaisonListes","listeChoixDisponibles","sup","split","listeChoix","nombre","compteOccurences","listeProportionnelOuPas","listeDeLieux","listeDeChoses","listeDePrixUnit","tirages","index3","villes","verbes","x","y","z","pu","n","p","somme","prenoms","index1","index2","objet","met","texte","texteCorr","i","compteurProportionnelsOuPas","cpt","parseInt","prenomF","prenomM","randint","length","calcul","texPrix","miseEnEvidence","texNombre","texNombrec","arrondi","j","range","substring","questionJamaisPosee","interactif","autoCorrection","options","ordered","enonce","propositions","statut","propositionsQcm","push","listeQuestionsToContenu","besoinFormulaireTexte","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}