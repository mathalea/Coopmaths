{"version":3,"file":"js/78163.fb6ad63e9e37ec730319.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C20.js"],"sourcesContent":["import Operation from '../../modules/operations.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, texNombre, nombreDeChiffresDansLaPartieEntiere, nombreDeChiffresDansLaPartieDecimale } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const amcType = 'AMCNum' // Question numérique\nexport const interactifType = 'numerique'\nexport const interactifReady = true\n\nexport const titre = 'Effectuer additions et soustractions de nombres décimaux'\n\n/**\n * Additions et soustractions de nombres décimaux\n * * xxx-xx,x\n * * xxx-xx,xx\n * * xxx,x-xxx\n * * x0x-xx9,x\n * * xxx+xx,x\n * * xxx+xx,xx\n * * xxx,x+xxx\n * * x0x+xx9,x\n * @author Rémi Angot\n * Référence 6C20\n */\nexport default function AdditionnerSoustrairesDecimaux () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Poser et effectuer les calculs suivants.'\n  this.spacing = 2\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1) // Important sinon les opérations posées ne sont pas jolies\n  this.nbQuestions = 4\n  this.sup = 3\n  this.tailleDiaporama = 3\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let typesDeQuestions, reponse\n    const typesAdditions = combinaisonListes(\n      [5, 6, 7, 8],\n      this.nbQuestions\n    )\n    const typesSoustractions = combinaisonListes(\n      [1, 2, 3, 4],\n      this.nbQuestions\n    )\n    let listeTypeDeQuestions = []\n    if (this.sup === 1) {\n      listeTypeDeQuestions = combinaisonListes([5, 6, 7, 8], this.nbQuestions)\n    } else if (this.sup === 2) {\n      listeTypeDeQuestions = combinaisonListes([1, 2, 3, 4], this.nbQuestions)\n    } else {\n      for (let i = 0; i < this.nbQuestions; i++) {\n        this.autoCorrection[i] = {}\n        if (i + 1 <= this.nbQuestions / 2) {\n          // première moitié sont des additions mais si c'est impair on prendra plus de soustractions\n          listeTypeDeQuestions.push(typesAdditions[i])\n        } else {\n          listeTypeDeQuestions.push(typesSoustractions[i])\n        }\n      }\n    }\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0, a, b;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        case 1: // xxx-xx,x\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9)\n          b = calcul(randint(5, 9) * 10 + randint(6, 9) + randint(1, 9) / 10)\n          texte = `$${texNombre(a)}-${texNombre(b)}$`\n          reponse = calcul(a - b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break\n        case 2: // xxx-xx,xx\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9)\n          b = calcul(\n            randint(5, 9) * 10 +\n            randint(6, 9) +\n            randint(1, 9) / 10 +\n            randint(1, 9) / 100\n          )\n          texte = `$${texNombre(a)}-${texNombre(b)}$`\n          reponse = calcul(a - b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break\n        case 3: // xxx,x-xxx\n          a = calcul(\n            randint(5, 9) * 100 +\n            randint(2, 5) * 10 +\n            randint(1, 9) +\n            randint(1, 9) / 10\n          )\n          b = randint(1, 4) * 100 + randint(6, 9) * 10 + randint(1, 9)\n          texte = `$${texNombre(a)}-${texNombre(b)}$`\n          reponse = calcul(a - b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break\n        case 4: // x0x-xx9,x\n          a = calcul(randint(5, 9) * 100 + randint(1, 5))\n          b = calcul(\n            randint(1, 4) * 100 + randint(1, 9) * 10 + 9 + randint(1, 9) / 10\n          )\n          texte = `$${texNombre(a)}-${texNombre(b)}$`\n          reponse = calcul(a - b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break\n        case 5: // xxx+xx,x\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9)\n          b = calcul(randint(5, 9) * 10 + randint(6, 9) + randint(1, 9) / 10)\n          texte = `$${texNombre(a)}+${texNombre(b)}$`\n          reponse = calcul(a + b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n        case 6: // xxx+xx,xx\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9)\n          b = calcul(\n            randint(5, 9) * 10 +\n            randint(6, 9) +\n            randint(1, 9) / 10 +\n            randint(1, 9) / 100\n          )\n          texte = `$${texNombre(a)}+${texNombre(b)}$`\n          reponse = calcul(a + b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n        case 7: // xxx,x+xxx\n          a = calcul(\n            randint(5, 9) * 100 +\n            randint(2, 5) * 10 +\n            randint(1, 9) +\n            randint(1, 9) / 10\n          )\n          b = randint(1, 4) * 100 + randint(6, 9) * 10 + randint(1, 9)\n          texte = `$${texNombre(a)}+${texNombre(b)}$`\n          reponse = calcul(a + b)\n\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n        case 8: // x0x+xx9,x\n          a = calcul(randint(5, 9) * 100 + randint(1, 5))\n          b = calcul(\n            randint(1, 4) * 100 + randint(1, 9) * 10 + 9 + randint(1, 9) / 10\n          )\n          texte = `$${texNombre(a)}+${texNombre(b)}$`\n          reponse = calcul(a + b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break\n      }\n      setReponse(this, i, reponse)\n      if (this.interactif && context.isHtml) texte += '$~=$' + ajouteChampTexte(this, i)\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte\n        this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: '' }]\n        this.autoCorrection[i].reponse.param = { digits: nombreDeChiffresDansLaPartieEntiere(reponse) + nombreDeChiffresDansLaPartieDecimale(reponse) + 2, decimals: nombreDeChiffresDansLaPartieDecimale(reponse) + 1, signe: false, exposantNbChiffres: 0 }\n      }\n      if (this.questionJamaisPosee(i, a, b)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Additions de décimaux\\n2 : Soustractions de décimaux\\n3 : Mélange']\n}\n"],"names":["amcReady","amcType","interactifType","interactifReady","titre","AdditionnerSoustrairesDecimaux","Exercice","this","consigne","spacing","context","spacingCorr","nbQuestions","sup","tailleDiaporama","nouvelleVersion","typesDeQuestions","reponse","parseInt","listeQuestions","listeCorrections","autoCorrection","typesAdditions","combinaisonListes","typesSoustractions","listeTypeDeQuestions","i","push","texte","texteCorr","a","b","cpt","randint","calcul","texNombre","Operation","operande1","operande2","type","setReponse","interactif","ajouteChampTexte","enonce","propositions","statut","param","digits","nombreDeChiffresDansLaPartieEntiere","nombreDeChiffresDansLaPartieDecimale","decimals","signe","exposantNbChiffres","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaireNumerique"],"sourceRoot":""}