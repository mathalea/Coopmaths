{"version":3,"file":"js/16720.21a8b29acd27609674ef.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/2e/can2G03.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { randint, choice, calcul, creerNomDePolygone, texNombrec } from '../../../modules/outils.js'\nimport {\n  mathalea2d, point, texteParPosition, pointAdistance, polygoneAvecNom, milieu, codageAngleDroit, similitude\n} from '../../../modules/2d.js'\nexport const titre = 'Calculer l’hypoténuse avec le théorème de Pythagore'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence can2G03\n * Date de publication septembre 2021\n*/\nexport default function CalculHypotenusePythagore () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.typeExercice = 'simple' // Cette ligne est très importante pour faire faire un exercice simple !\n  this.formatChampTexte = 'largeur15 inline'\n  this.nbQuestions = 1\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  let a, b\n  this.nouvelleVersion = function () {\n    const nom = creerNomDePolygone(3, ['Q'])\n    a = randint(2, 7)//\n    b = randint(3, 7)//\n    const A = point(0, 0, nom[0])\n    const B = pointAdistance(A, a, randint(0, 45), nom[1])\n    const C = similitude(A, B, 90, b / a, nom[2])\n    const pol = polygoneAvecNom(A, B, C) // polygoneAvecNom s'occupe du placement des noms des sommets\n    const objets = []\n    const xmin = Math.min(A.x, B.x, C.x) - 1\n    const ymin = Math.min(A.y, B.y, C.y) - 1\n    const xmax = Math.max(A.x, B.x, C.x) + 1\n    const ymax = Math.max(A.y, B.y, C.y) + 1\n    switch (choice(['a', 'b'])) {\n      case 'a':\n        objets.push(pol[0], pol[1], codageAngleDroit(A, B, C)) // pol[0], c'est le tracé et pol[1] ce sont les labels\n        objets.push(texteParPosition('x', milieu(A, C).x, milieu(A, C).y + 0.3, 'milieu', 'black', 1, 'middle', true),\n          texteParPosition(`${texNombrec(a)}`, milieu(A, B).x, milieu(A, B).y + 0.2, 'milieu', 'black', 1, 'middle', true),\n          texteParPosition(`${texNombrec(b)}`, milieu(B, C).x + 0.2, milieu(B, C).y, 'milieu', 'black', 1, 'middle', true)\n        )\n        this.question = 'Sur cette figure $x=\\\\sqrt{a}$ avec $a=$<br>'\n        this.question += mathalea2d({ xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax, pixelsParCm: 22, mainlevee: false, amplitude: 0.3, scale: 0.7, style: 'margin: auto' }, objets)\n        this.correction = ` En utilisant le théorème de Pythagore, on a :<br>\n        $${nom[0]}${nom[1]}^2+${nom[1]}${nom[2]}^2=${nom[0]}${nom[2]}^2$, soit\n        $${a}^2+${b}^2=x^2$, d'où $x=\\\\sqrt{${a}^2+${b}^2}=\\\\sqrt{${a ** 2 + b ** 2}}$\n       <br>\n       Ainsi, $a=${a ** 2 + b ** 2}$.`\n        this.reponse = calcul(a ** 2 + b ** 2)\n        break\n      case 'b':\n        a = randint(1, 10)//\n        b = randint(2, 10, [4, 9])//\n        if (a ** 2 + b === 9 || a ** 2 + b === 16 || a ** 2 + b === 25 || a ** 2 + b === 36 || a ** 2 + b === 49) {\n          this.question = `$${nom[0]}${nom[1]}${nom[2]}$ est un triangle rectangle en $${nom[0]}$.<br>\n        $${nom[0]}${nom[1]}=${a}$ ; $${nom[0]}${nom[2]}=\\\\sqrt{${b}}$. Calculer $${nom[1]}${nom[2]}$ .<br>\n        (donner le résultat sous la forme $\\\\sqrt{a}$ ou d'un nombre entier le cas échéant)`\n          this.correction = ` En utilisant le théorème de Pythagore dans $${nom[0]}${nom[1]}${nom[2]}$ rectangle en $${nom[0]}$, on obtient :<br>\n               $${nom[0]}${nom[1]}^2+${nom[0]}${nom[2]}^2=${nom[1]}${nom[2]}^2$, <br>\n               soit $${a}^2+\\\\sqrt{${b}}^2=${nom[1]}${nom[2]}^2$, d'où $${nom[1]}${nom[2]}^2=${a * a + b}$ soit $${nom[1]}${nom[2]}=\\\\sqrt{${a * a + b}}=${Math.sqrt(a * a + b)}$.\n             <br>`\n          this.reponse = calcul(Math.sqrt(a ** 2 + b))\n        } else {\n          this.question = `$${nom[0]}${nom[1]}${nom[2]}$ est un triangle rectangle en $${nom[0]}$.<br>\n          $${nom[0]}${nom[1]}=${a}$ ; $${nom[0]}${nom[2]}=\\\\sqrt{${b}}$. Calculer $${nom[1]}${nom[2]}$ .<br>\n          (donner le résultat sous la forme $\\\\sqrt{a}$ ou d'un nombre entier le cas échéant)`\n          this.correction = ` En utilisant le théorème de Pythagore dans $${nom[0]}${nom[1]}${nom[2]}$ rectangle en $${nom[0]}$, on obtient :<br>\n                 $${nom[0]}${nom[1]}^2+${nom[0]}${nom[2]}^2=${nom[1]}${nom[2]}^2$, <br>\n                 soit $${a}^2+\\\\sqrt{${b}}^2=${nom[1]}${nom[2]}^2$, d'où $${nom[1]}${nom[2]}^2=${a * a + b}$ soit $${nom[1]}${nom[2]}=\\\\sqrt{${a * a + b}}$.\n               <br>`\n          this.reponse = `\\\\sqrt{${a ** 2 + b}}`\n        }\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","CalculHypotenusePythagore","a","b","typeExercice","formatChampTexte","nom","creerNomDePolygone","randint","A","point","B","pointAdistance","C","similitude","pol","polygoneAvecNom","objets","xmin","Math","min","x","ymin","y","xmax","max","ymax","choice","codageAngleDroit","texteParPosition","milieu","texNombrec","question","mathalea2d","pixelsParCm","mainlevee","amplitude","scale","style","correction","reponse","calcul","sqrt"],"sourceRoot":""}