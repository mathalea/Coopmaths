{"version":3,"sources":["webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/exercices/Profs/P011.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","Exercice_zero_mathalea2d","pas_de_version_HMTL","sup","sup2","sup3","typeExercice","triangle","params","split","type","parseInt","nom","anim","Alea2iep","objets_enonceml","i","length","parseFloat","triangle3longueurs","push","afficheLongueurSegment","triangle1longueur2angles","afficheMesureAngle","triangleRectangle2Cotes","codageAngleDroit","triangleRectangleCoteHypotenuse","triangleEquilateral","codeSegments","triangle2longueurs1angle","poly","polygoneAvecNom","params_enonce","xmin","Math","min","x","ymin","y","xmax","max","ymax","pixelsParCm","scale","mainlevee","amplitude","texte","mathalea2d","htmlBouton","besoin_formulaire2_texte","besoin_formulaire3_texte"],"mappings":"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","file":"js/42.8495295699a172ffafa9.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,combinaisonListes} from '../../modules/outils.js'\nimport {mathalea2d,polygoneAvecNom,codeSegments,codageAngleDroit,afficheMesureAngle,codeAngle,afficheLongueurSegment} from '../../modules/2d.js'\nimport Alea2iep from '../../modules/Alea2iep.js';\n\nexport const titre = 'Construis mon triangle'\n\nexport default function Exercice_zero_mathalea2d() {\n    \"use strict\"\n    Exercice.call(this)\n    this.titre = titre;\n    this.nbQuestions = 1; // Ici le nombre de questions\n    this.nbQuestionsModifiable=false // Active le formulaire nombre de questions\n    this.nbCols = 1; // Le nombre de colonnes dans l'énoncé LaTeX\n    this.nbColsCorr = 1;// Le nombre de colonne pour la correction LaTeX\n    this.pasDeVersionLatex=true // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n    this.pas_de_version_HMTL=false // mettre à true si on ne veut pas de l'exercice en ligne\n    this.sup=1;\n    this.sup2='ABC'\n    this.sup3='3 4 5'\n    this.typeExercice = 'IEP'\n  \n    this.nouvelleVersion = function () {\n      let params=this.sup3.split(' ');\n      let type=parseInt(this.sup);\n      let nom=this.sup2;\n      let anim=new Alea2iep();\n      let triangle\n      let objets_enonceml=[]\n      for (let i=0;i<params.length;i++){\n        params[i]=parseFloat(params[i])\n      }\n      switch (type) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n          case 1:\n            \n            triangle=anim.triangle3longueurs(nom, params[0], params[1], params[2], true, true) \n            objets_enonceml.push(afficheLongueurSegment(triangle[1],triangle[0]),afficheLongueurSegment(triangle[2],triangle[1]),afficheLongueurSegment(triangle[0],triangle[2]))\n          break;\n  \n          case 2:\n            triangle=anim.triangle1longueur2angles(nom, params[0], params[1], params[2], true, true)\n            objets_enonceml.push(afficheLongueurSegment(triangle[1],triangle[0]),afficheMesureAngle(triangle[2],triangle[0],triangle[1]),afficheMesureAngle(triangle[0],triangle[1],triangle[2]))\n \n          break\n  \n          case 3:\n            triangle=anim.triangleRectangle2Cotes(nom, params[0], params[1], true)\n            objets_enonceml.push(afficheLongueurSegment(triangle[1],triangle[0]),afficheLongueurSegment(triangle[2],triangle[1]),codageAngleDroit(triangle[0],triangle[1],triangle[2]))\n          break\n            \n          case 4:\n            triangle=anim.triangleRectangleCoteHypotenuse(nom, params[0], params[1], true)\n            objets_enonceml.push(afficheLongueurSegment(triangle[1],triangle[0]),afficheLongueurSegment(triangle[0],triangle[2]),codageAngleDroit(triangle[0],triangle[1],triangle[2]))\n            break  \n\n          case 5:\n            triangle=anim.triangleEquilateral(nom, params[0], true)\n          objets_enonceml.push(afficheLongueurSegment(triangle[1],triangle[0]),codeSegments('||','red',triangle[0],triangle[1],triangle[2],triangle[0],triangle[1],triangle[2]))\n            break\n\n            case 6:\n              triangle=anim.triangle2longueurs1angle(nom,params[0],params[1],params[2],true)\n              objets_enonceml.push(afficheLongueurSegment(triangle[0],triangle[1]),afficheLongueurSegment(triangle[0],triangle[2]),afficheMesureAngle(triangle[1],triangle[0],triangle[2]))\n          break\n            \n        }\n        let poly=polygoneAvecNom(triangle)\n        objets_enonceml.push(poly[0],poly[1])\n        let params_enonce = { xmin:Math.min(triangle[0].x-1,triangle[1].x-1,triangle[2].x-1),\n           ymin: Math.min(triangle[0].y-1,triangle[1].y-1,triangle[2].y-1),\n            xmax: Math.max(triangle[0].x+1,triangle[1].x+1,triangle[2].x+1),\n             ymax: Math.max(triangle[0].y+1,triangle[1].y+1,triangle[2].y+1),\n              pixelsParCm: 20, scale: 1, mainlevee: true,amplitude:0.5}\n        let texte = mathalea2d(params_enonce, objets_enonceml)+'<br>'+anim.htmlBouton()\n        this.contenu=texte;\n    }\n  this.besoinFormulaireNumerique = ['Type de triangle', 6, `1 : Triangle par 3 longueurs\\n 2 : Triangle par 1 longueur et 2 angles\\n 3 : Triangle rectangle 2 côtés angle droit\\n 4 : Triangle rectangle 1 coté et l'hypoténuse\\n 5 : Triangle équilatéral\\n 6 : Triangle 2 longueurs et l'angle entre ces côtés`]\n  this.besoin_formulaire2_texte = [\"Nom du triangle\",`ABC par exemple`];\n  this.besoin_formulaire3_texte =['paramètres séparés par des espaces','3 4 5']\n  \n  } // Fin de l'exercice.\n  "],"sourceRoot":""}