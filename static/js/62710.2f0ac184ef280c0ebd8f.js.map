{"version":3,"file":"js/62710.2f0ac184ef280c0ebd8f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F12-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, abs, calcul, texGraphique, resolutionSystemeLineaire2x2, resolutionSystemeLineaire3x3, chercheMinMaxFonction, nombreDeChiffresDansLaPartieEntiere } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Lire l’image d’un nombre à partir d’un graphique'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n/**\n* Un graphique étant tracé, déterminer l'image de nombres donnés.\n* La fonction est un polynome de degré 1, 2 ou 3 et les nombres des questions ne sont que des entiers.\n*\n* @author Rémi Angot\n* 3F12-4\n*/\nexport default function ImageGraphique () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.sup = 3\n  this.spacing = 1\n  context.isHtml ? this.spacingCorr = 3 : this.spacingCorr = 1\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.typeExercice = 'MG32'\n  this.dimensionsDivMg32 = [800, 600]\n  this.pasDeVersionLatex = false\n  this.nbCols = 1\n  this.listePackages = 'pgfplots'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    const codeBase64 = 'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAQzAAACtAAAAQEAAAAAAAAAAQAAAEL#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAOAAFPAMAoAAAAAAAAAAAAAAAAAAAFAAFAeKkeuFHrhEBzy4UeuFHs#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8BAAAAAA4AAAEAAQAAAAEBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8AAAAAAQ4AAUkAwBgAAAAAAAAAAAAAAAAAAAUAAUBCb52yLQ5WAAAAAv####8AAAABAAlDRHJvaXRlQUIA#####wAAAAAAEAAAAQABAAAAAQAAAAP#####AAAAAQAWQ0Ryb2l0ZVBlcnBlbmRpY3VsYWlyZQD#####AAAAAAAOAAABAAEAAAABAAAABP####8AAAABAAlDQ2VyY2xlT0EA#####wEAAAAAAQAAAAEAAAAD#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAUAAAAG#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wEAAAAADgAAAQUAAQAAAAcAAAAJAP####8AAAAAAQ4AAUoAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAQEAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAAQAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAduYmdyYWR4AAIyMAAAAAFANAAAAAAAAAAAABEA#####wAHbmJncmFkeQACMjAAAAABQDQAAAAAAAD#####AAAAAQAUQ0ltcGxlbWVudGF0aW9uUHJvdG8A#####wAUR3JhZHVhdGlvbkF4ZXNSZXBlcmUAAAAbAAAACAAAAAMAAAAKAAAADwAAABD#####AAAAAQATQ0Fic2Npc3NlT3JpZ2luZVJlcAAAAAARAAVhYnNvcgAAAAr#####AAAAAQATQ09yZG9ubmVlT3JpZ2luZVJlcAAAAAARAAVvcmRvcgAAAAoAAAALAAAAABEABnVuaXRleAAAAAr#####AAAAAQAKQ1VuaXRleVJlcAAAAAARAAZ1bml0ZXkAAAAK#####wAAAAEAEENQb2ludERhbnNSZXBlcmUAAAAAEQAAAAAADgAAAQUAAAAACgAAAA4AAAASAAAADgAAABMAAAAWAAAAABEAAAAAAA4AAAEFAAAAAAoAAAANAAAAAA4AAAASAAAADgAAABQAAAAOAAAAEwAAABYAAAAAEQAAAAAADgAAAQUAAAAACgAAAA4AAAASAAAADQAAAAAOAAAAEwAAAA4AAAAVAAAADAAAAAARAAAAFgAAAA4AAAAPAAAADwAAAAARAAAAAAAOAAABBQAAAAAXAAAAGQAAAAwAAAAAEQAAABYAAAAOAAAAEAAAAA8AAAAAEQAAAAAADgAAAQUAAAAAGAAAABv#####AAAAAQAIQ1NlZ21lbnQAAAAAEQEAAAAAEAAAAQABAAAAFwAAABoAAAAXAAAAABEBAAAAABAAAAEAAQAAABgAAAAcAAAABAAAAAARAQAAAAALAAFXAMAUAAAAAAAAwDQAAAAAAAAFAAE#3FZ4mrzfDgAAAB3#####AAAAAgAIQ01lc3VyZVgAAAAAEQAGeENvb3JkAAAACgAAAB8AAAARAAAAABEABWFic3cxAAZ4Q29vcmQAAAAOAAAAIP####8AAAACABJDTGlldU9iamV0UGFyUHRMaWUBAAAAEQBmZmYAAAAfAAAADgAAAA8AAAAfAAAAAgAAAB8AAAAfAAAAEQAAAAARAAVhYnN3MgANMiphYnNvci1hYnN3MQAAAA0BAAAADQIAAAABQAAAAAAAAAAAAAAOAAAAEgAAAA4AAAAhAAAAFgAAAAARAQAAAAALAAABBQAAAAAKAAAADgAAACMAAAAOAAAAEwAAABkBAAAAEQBmZmYAAAAkAAAADgAAAA8AAAAfAAAABQAAAB8AAAAgAAAAIQAAACMAAAAkAAAABAAAAAARAQAAAAALAAFSAEAgAAAAAAAAwCAAAAAAAAAFAAE#0RtOgbToHwAAAB7#####AAAAAgAIQ01lc3VyZVkAAAAAEQAGeUNvb3JkAAAACgAAACYAAAARAAAAABEABW9yZHIxAAZ5Q29vcmQAAAAOAAAAJwAAABkBAAAAEQBmZmYAAAAmAAAADgAAABAAAAAmAAAAAgAAACYAAAAmAAAAEQAAAAARAAVvcmRyMgANMipvcmRvci1vcmRyMQAAAA0BAAAADQIAAAABQAAAAAAAAAAAAAAOAAAAEwAAAA4AAAAoAAAAFgAAAAARAQAAAAALAAABBQAAAAAKAAAADgAAABIAAAAOAAAAKgAAABkBAAAAEQBmZmYAAAArAAAADgAAABAAAAAmAAAABQAAACYAAAAnAAAAKAAAACoAAAAr#####wAAAAIADENDb21tZW50YWlyZQAAAAARAWZmZgAAAAAAAAAAAEAYAAAAAAAAAAAAHwsAAf###wAAAAEAAAAAAAAAAQAAAAAAAAAAAAsjVmFsKGFic3cxKQAAABkBAAAAEQBmZmYAAAAtAAAADgAAAA8AAAAfAAAABAAAAB8AAAAgAAAAIQAAAC0AAAAbAAAAABEBZmZmAAAAAAAAAAAAQBgAAAAAAAAAAAAkCwAB####AAAAAQAAAAAAAAABAAAAAAAAAAAACyNWYWwoYWJzdzIpAAAAGQEAAAARAGZmZgAAAC8AAAAOAAAADwAAAB8AAAAGAAAAHwAAACAAAAAhAAAAIwAAACQAAAAvAAAAGwAAAAARAWZmZgDAIAAAAAAAAD#wAAAAAAAAAAAAJgsAAf###wAAAAIAAAABAAAAAQAAAAAAAAAAAAsjVmFsKG9yZHIxKQAAABkBAAAAEQBmZmYAAAAxAAAADgAAABAAAAAmAAAABAAAACYAAAAnAAAAKAAAADEAAAAbAAAAABEBZmZmAMAcAAAAAAAAAAAAAAAAAAAAAAArCwAB####AAAAAgAAAAEAAAABAAAAAAAAAAAACyNWYWwob3JkcjIpAAAAGQEAAAARAGZmZgAAADMAAAAOAAAAEAAAACYAAAAGAAAAJgAAACcAAAAoAAAAKgAAACsAAAAz#####wAAAAEABUNGb25jAP####8AAWYACC0yKngqeCszAAAADQD#####AAAAAQAMQ01vaW5zVW5haXJlAAAADQIAAAANAgAAAAFAAAAAAAAAAP####8AAAACABFDVmFyaWFibGVGb3JtZWxsZQAAAAAAAAAeAAAAAAAAAAFACAAAAAAAAAABeAAAAAQA#####wEAAAAAEAABeAAAAAAAAAAAAEAIAAAAAAAABQABQC8BAyKX1IIAAAAEAAAAGAD#####AAJ4MQAAAAoAAAA2AAAAEQD#####AAJ5MQAFZih4MSn#####AAAAAQAOQ0FwcGVsRm9uY3Rpb24AAAA1AAAADgAAADcAAAAWAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAABQAAAAAKAAAADgAAADcAAAAOAAAAOP####8AAAACAA1DTGlldURlUG9pbnRzAP####8AAAD#AAIAAAA5AAAB9AABAAAANgAAAAQAAAA2AAAANwAAADgAAAA5#####wAAAAEAFUNQb2ludExpZUxpZXVQYXJQdExpZQD#####AAAAAAAQAAFNAAAAAAAAAAAAQAgAAAAAAAAJAAG##CuHsx36wAAAADq##CuHsx36wAAAAAMA#####wEAAAABEAAAAQABAAAAOwA#8AAAAAAAAAAAAAMA#####wEAAAABEAAAAQABAAAAOwE#8AAAAAAAAP####8AAAABABBDSW50RHJvaXRlRHJvaXRlAP####8BAAAAABAAAAAAAAAAAAAAAEAIAAAAAAAACQAAAAAEAAAAPAAAACIA#####wEAAAAAEAAAAAAAAAAAAAAAQAgAAAAAAAAJAAAAAAUAAAA9AAAAFwD#####AAAAAAAQAAABAQEAAAA7AAAAPgAAABcA#####wAAAAAAEAAAAQEBAAAAOwAAAD8AAAAO##########8='\n    this.sup = parseInt(this.sup)\n    let a, b, c, d, x1, x2, x3, fx1, fx2, fx3, expressionF, numa, dena, numb, denb, numc, denc, ymax, f\n\n    function initialiseVariables () {\n      if (context.isHtml) { // repère -10 || 10\n        x1 = randint(-6, -3)\n        x2 = randint(x1 + 3, 2)\n        x3 = randint(x2 + 2, 8)\n        fx1 = randint(-5, 5)\n        fx2 = randint(-6, 6)\n        fx3 = randint(-5, 5)\n        d = randint(-5, 5)\n        c = randint(-5, 5)\n        ymax = 7\n      } else { // repère -5 || 5\n        x1 = randint(-4, -2)\n        x2 = randint(-1, 2, [0])\n        x3 = randint(3, 4)\n        fx1 = randint(-4, 4)\n        fx2 = randint(-4, 4)\n        fx3 = randint(-4, 4)\n        d = randint(-3, 3)\n        c = randint(-3, 3)\n        ymax = 4\n      }\n    };\n\n    initialiseVariables()\n\n    let texte = 'On a tracé ci-dessous la courbe représentative de la fonction $f$.<br>'; let texteCorr = ''\n\n    if (this.sup === 1) {\n      a = calcul((fx2 - fx1) / (x2 - x1))\n      b = calcul(fx1 - a * x1)\n      expressionF = `${a}*x+(${b})`\n      f = x => a * x + b\n\n      texte += `Déterminer par lecture graphique les images de $${x1}$ et de $${x2}$ par cette fonction $f$.<br><br>`\n      texteCorr = `L'image de $${x1}$ est $${fx1}$, on note $f(${x1})=${fx1}$.<br>`\n      texteCorr += `L'image de $${x2}$ est $${fx2}$, on note $f(${x2})=${fx2}$.`\n    }\n\n    if (this.sup === 2) {\n      [[numa, dena], [numb, denb]] = resolutionSystemeLineaire2x2(x1, x3, fx1, fx3, c)\n      while (dena === 0 || denb === 0 || numa === 0) {\n        x1 = randint(-6, -3)\n        x3 = randint(1, 6)\n        fx1 = randint(-5, 5)\n        fx3 = randint(-6, 6)\n        d = randint(-10, 10);\n\n        [[numa, dena], [numb, denb]] = resolutionSystemeLineaire2x2(x1, x3, fx1, fx3, c)\n      }\n      a = numa / dena\n      b = numb / denb\n      x2 = 0\n      fx2 = c\n\n      expressionF = `${a}*x^2+(${b})*x+(${c})`\n      f = x => a * x ** 2 + b * x + c\n    }\n\n    if (this.sup === 3) {\n      [[numa, dena], [numb, denb], [numc, denc]] = resolutionSystemeLineaire3x3(x1, x2, x3, fx1, fx2, fx3, d)\n      let [extremum1, extremum2] = chercheMinMaxFonction([numa / dena, numb / denb, numc / denc, d])\n      while (dena === 0 || denb === 0 || denc === 0 || abs(extremum1[1]) > ymax || abs(extremum2[1]) > ymax) {\n        initialiseVariables();\n        [[numa, dena], [numb, denb], [numc, denc]] = resolutionSystemeLineaire3x3(x1, x2, x3, fx1, fx2, fx3, d)\n        if (chercheMinMaxFonction([numa / dena, numb / denb, numc / denc, d]) === []) {\n          [extremum1, extremum2] = [[0, 999], [0, 999]]\n        } else {\n          [extremum1, extremum2] = chercheMinMaxFonction([numa / dena, numb / denb, numc / denc, d])\n        }\n      }\n      a = numa / dena\n      b = numb / denb\n      c = numc / denc\n\n      expressionF = `${a}*x^3+(${b})*x^2+(${c})*x+(${d})`\n      f = x => a * x ** 3 + b * x ** 2 + c * x + d\n    }\n\n    if (this.sup === 2 || this.sup === 3) {\n      texte += `Déterminer par lecture graphique les images de $${x1}$, de $${x2}$ et de $${x3}$ par cette fonction $f$.<br><br>`\n      texteCorr = `L'image de $${x1}$ est $${fx1}$, on note $f(${x1})=${fx1}$.<br>`\n      texteCorr += `L'image de $${x2}$ est $${fx2}$, on note $f(${x2})=${fx2}$.<br>`\n      texteCorr += `L'image de $${x3}$ est $${fx3}$, on note $f(${x3})=${fx3}$.<br>`\n    }\n\n    if (!context.isHtml) {\n      texte += '\\n\\n'\n      texte += texGraphique(expressionF)\n    }\n    console.log(expressionF)\n    this.MG32codeBase64 = codeBase64\n    this.mg32init = (mtgApp, idDoc) => {\n      mtgApp.giveFormula2(idDoc, 'f', expressionF)\n      mtgApp.calculate(idDoc)\n      mtgApp.display(idDoc)\n    }\n    if (context.isAmc) {\n      this.autoCorrection[0] = {\n        enonce: texte,\n        propositions: [\n          {\n            type: 'AMCNum',\n            propositions: [{\n              texte: `L'image de $${x1}$ est $${fx1}$, on note $f(${x1})=${fx1}$.\\\\\\\\`,\n              statut: '',\n              reponse: {\n                texte: `$f(${x1})$`,\n                valeur: fx1,\n                param: {\n                  digits: nombreDeChiffresDansLaPartieEntiere(fx1),\n                  decimals: 0,\n                  signe: true,\n                  approx: 0\n                }\n              }\n            }]\n          },\n          {\n            type: 'AMCNum',\n            propositions: [{\n              texte: `L'image de $${x2}$ est $${fx2}$, on note $f(${x2})=${fx2}$.\\\\\\\\`,\n              statut: '',\n              reponse: {\n                texte: `$f(${x2})$`,\n                valeur: fx2,\n                param: {\n                  digits: nombreDeChiffresDansLaPartieEntiere(fx2),\n                  decimals: 0,\n                  signe: true,\n                  approx: 0\n                }\n              }\n            }]\n          },\n          {\n            type: 'AMCNum',\n            propositions: [{\n              texte: `L'image de $${x3}$ est $${fx3}$, on note $f(${x3})=${fx3}$.\\\\\\\\`,\n              statut: '',\n              reponse: {\n                texte: `$f(${x3})$`,\n                valeur: fx3,\n                param: {\n                  digits: nombreDeChiffresDansLaPartieEntiere(fx3),\n                  decimals: 0,\n                  signe: true,\n                  approx: 0\n                }\n              }\n            }]\n          }\n        ]\n      }\n    } else if (this.interactif) {\n      if (this.sup === 1) {\n        texte += `$f(${x1})=$` + ajouteChampTexteMathLive(this, 0, 'largeur25 inline')\n        texte += `$f(${x2})=$` + ajouteChampTexteMathLive(this, 1, 'largeur25 inline')\n        setReponse(this, 0, f(x1))\n        setReponse(this, 1, f(x1))\n      } else {\n        texte += `$f(${x1})=$` + ajouteChampTexteMathLive(this, 0, 'largeur25 inline')\n        texte += `$f(${x2})=$` + ajouteChampTexteMathLive(this, 1, 'largeur25 inline')\n        texte += `$f(${x3})=$` + ajouteChampTexteMathLive(this, 2, 'largeur25 inline')\n        setReponse(this, 0, f(x1))\n        setReponse(this, 1, f(x2))\n        setReponse(this, 2, f(x3))\n      }\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n\n  this.besoinFormulaireNumerique = ['Type de fonctions', 3, '1 : Affine\\n2 : Polynome du 2nd degré\\n3 : Polynome du 3e degré']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","ImageGraphique","Exercice","this","consigne","sup","spacing","context","spacingCorr","nbQuestions","nbQuestionsModifiable","typeExercice","dimensionsDivMg32","pasDeVersionLatex","nbCols","listePackages","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","contenu","contenuCorrection","a","b","c","d","x1","x2","x3","fx1","fx2","fx3","expressionF","numa","dena","numb","denb","numc","denc","ymax","f","initialiseVariables","randint","parseInt","texte","texteCorr","calcul","x","resolutionSystemeLineaire2x2","resolutionSystemeLineaire3x3","extremum1","extremum2","chercheMinMaxFonction","abs","texGraphique","console","log","MG32codeBase64","mg32init","mtgApp","idDoc","giveFormula2","calculate","display","autoCorrection","enonce","propositions","type","statut","reponse","valeur","param","digits","nombreDeChiffresDansLaPartieEntiere","decimals","signe","approx","interactif","ajouteChampTexteMathLive","setReponse","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","tableauSolutionsDuQcm","consigneModifiable","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}