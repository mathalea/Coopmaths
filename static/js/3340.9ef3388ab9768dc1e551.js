(self.webpackChunkmathalea=self.webpackChunkmathalea||[]).push([[3340,6969],{3340:(t,e,i)=>{"use strict";i.r(e),i.d(e,{titre:()=>r,default:()=>o});var s=i(66969),n=i(55339);const r="Écrire la liste de tous les diviseurs d’un entier";function o(){s.default.call(this),this.titre=r,this.consigne="",sortieHtml?this.spacing=2:this.spacing=1,sortieHtml?this.spacingCorr=2:this.spacingCorr=1,this.nbQuestions=3,this.nbCols=1,this.nbColsCorr=1,this.nouvelleVersion=function(){let t;sortieHtml,this.listeQuestions=[],this.listeCorrections=[],this.contenu="",this.contenuCorrection="";let e=(0,n.bqK)([1,1,2],this.nbQuestions);for(let i,s,r=0,o=0;r<this.nbQuestions&&o<50;){switch(t=e[r],t){case 1:let t=(0,n.nSR)(2,99,(0,n.hmQ)(99)),e=(0,n.coU)(t).length;if(i=`Compléter le tableau suivant et faire la liste de tous les diviseurs de ${t}`,sortieHtml||(i+="$\\medskip$"),i+="<br>",sortieHtml?i+="$\\def\\arraystretch{2.5}\\begin{array}{|c|c|c|}\n":i+="$\\begin{array}{|c|c|c|}\n",i+="\\hline\n",i+=`\\text{Facteur n°1} & \\text{Facteur n°2} & \\text{Produit donnant } ${t} \\\\\n`,i+="\\hline\n",e%2==0)for(let s=0;s<(0,n.coU)(t).length/2;s++)i+=(0,n.OIN)((0,n.coU)(t)[s])+" & "+(0,n.OIN)((0,n.coU)(t)[(0,n.coU)(t).length-s-1])+`& ${(0,n.OIN)(t)} \\\\\n`,i+="\\hline\n";else{for(let e=0;e<((0,n.coU)(t).length-1)/2;e++)i+=(0,n.OIN)((0,n.coU)(t)[e])+" & "+(0,n.OIN)((0,n.coU)(t)[(0,n.coU)(t).length-e-1])+`& ${(0,n.OIN)(t)} \\\\\n`;i+=(0,n.OIN)((0,n.coU)(t)[(e-1)/2])+" & "+(0,n.OIN)((0,n.coU)(t)[(e-1)/2])+`& ${(0,n.OIN)(t)} \\\\\n`,i+="\\hline\n"}if(i+="\\end{array}\n$",s=`Le tableau suivant contient tous les couples de facteurs dont le produit vaut ${t}`,sortieHtml||(s+="$\\medskip$"),s+="<br>",sortieHtml?s+="$\\def\\arraystretch{2.5}\\begin{array}{|c|c|c|}\n":s+="$\\begin{array}{|c|c|c|}\n",s+="\\hline\n",s+=`\\text{Facteur n°1} & \\text{Facteur n°2} & \\text{Produit donnant } ${t} \\\\\n`,s+="\\hline\n",e%2==0)for(let i=0;i<(0,n.coU)(t).length/2;i++)s+=(0,n.coU)(t)[i]+" & "+(0,n.coU)(t)[(0,n.coU)(t).length-i-1]+`& ${t} \\\\\n`,s+="\\hline\n";else{for(let e=0;e<((0,n.coU)(t).length-1)/2;e++)s+=(0,n.coU)(t)[e]+" & "+(0,n.coU)(t)[(0,n.coU)(t).length-e-1]+`& ${t} \\\\\n`;s+=(0,n.coU)(t)[(e-1)/2]+" & "+(0,n.coU)(t)[(e-1)/2]+`& ${t} \\\\\n`,s+="\\hline\n"}s+="\\end{array}\n$",sortieHtml||(s+="$\\medskip$"),s+="<br>",s+=`${t} a donc ${e} diviseurs qui sont : `,s+="1";for(let i=1;i<(0,n.coU)(t).length;i++)s+=" ; "+(0,n.coU)(t)[i];s+=".";break;case 2:let r=[];r=[(0,n.nSR)(2,99),(0,n.nSR)(2,99,[r[0]]),(0,n.nSR)(2,99,[r[0],r[1]]),(0,n.nSR)(2,99,[r[0],r[1],r[2]])];let o=[];for(let i=101;i<999;i++)(0,n.coU)(i).length>8&&o.push(i);let c,l,a=(0,n.nSR)(0,o.length-1);if(r.push(o[a]),l=(0,n.nSR)(0,r.length-1),c=r[l],i=`Écrire la liste de tous les diviseurs de ${c}.`,s=`Pour trouver la liste des diviseurs de ${c} on cherche tous les produits de deux facteurs qui donnent ${c}. En écrivant toujours le plus petit facteur en premier.<br>`,s+=`Il est suffisant de chercher des diviseurs inférieurs au plus grand nombre dont le carré vaut ${c}, par exemple ici, ${Math.trunc(Math.sqrt(c))}$\\times $${Math.trunc(Math.sqrt(c))} = ${Math.trunc(Math.sqrt(c))*Math.trunc(Math.sqrt(c))}<${c}`,s+=` et ${Math.trunc(Math.sqrt(c))+1}$\\times $${Math.trunc(Math.sqrt(c))+1} = ${(Math.trunc(Math.sqrt(c))+1)*(Math.trunc(Math.sqrt(c))+1)}>${c} donc il suffit d'arrêter la recherche de facteur à ${Math.trunc(Math.sqrt(c))}.`,s+=` En effet, si ${c} est le produit de deux entiers p$\\times $q avec p < q alors si p$\\times $p > ${c} c'est que q$\\times $q < ${c} mais dans ce cas p serait supérieur à q sinon p$\\times $q serait inférieur à ${c} ce qui ne doit pas être le cas.<br>`,(0,n.coU)(c).length%2==0)for(let i=0;i<(0,n.coU)(c).length/2;i++)s+=(0,n.coU)(c)[i]+"$\\times $"+(0,n.coU)(c)[(0,n.coU)(c).length-i-1]+` = ${c}<br>`;else{for(let t=0;t<((0,n.coU)(c).length-1)/2;t++)s+=(0,n.coU)(c)[t]+"$\\times $"+(0,n.coU)(c)[(0,n.coU)(c).length-t-1]+"<br>";s+=(0,n.coU)(c)[((0,n.coU)(c).length-1)/2]+"$\\times $"+(0,n.coU)(c)[((0,n.coU)(c).length-1)/2]+` = ${c}<br>`}s+=`Chacun des facteurs de la liste ci-dessus est un diviseur de ${c}.<br>`,s+=`La liste des diviseurs de ${c} est donc `,s+="1";for(let i=1;i<(0,n.coU)(c).length;i++)s+=" ; "+(0,n.coU)(c)[i];s+="."}-1==this.listeQuestions.indexOf(i)&&(this.listeQuestions.push(i),this.listeCorrections.push(s),r++),o++}(0,n.K1R)(this)}}},66969:(t,e,i)=>{"use strict";function s(){this.titre="",this.consigne="",this.consigneCorrection="",this.listeQuestions=[],this.listeCorrections=[],this.introduction="",this.contenu="",this.contenuCorrection="",this.nbQuestions=10,this.nbCols=2,this.nbColsCorr=2,this.spacing=1,this.spacingCorr=1,this.beamer=!1,this.besoinFormulaireNumerique=!1,this.besoinFormulaireTexte=!1,this.besoinFormulaireCaseACocher=!1,this.consigneModifiable=!0,this.nbQuestionsModifiable=!0,this.nbColsModifiable=!0,this.nbColsCorrModifiable=!0,this.spacingModifiable=!0,this.spacingCorrModifiable=!0,this.correctionDetailleeDisponible=!1,this.correctionDetaillee=!0,this.video="",this.boutonAide=!1,this.tailleDiaporama=50,this.pasDeVersionLatex=!1,this.qcm=!1,this.qcmDisponible=!1,this.modeQcm=!1,this.autoCorrection=[],this.tableauSolutionsDuQcm=[],this.mg32Editable=!1,this.nouvelleVersion=function(t){},this.listePackages=[]}i.r(e),i.d(e,{default:()=>s})}}]);
//# sourceMappingURL=3340.9ef3388ab9768dc1e551.js.map