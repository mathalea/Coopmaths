"use strict";(self.webpackChunkmathalea=self.webpackChunkmathalea||[]).push([[14801,17007],{14801:(i,s,e)=>{e.r(s),e.d(s,{titre:()=>r,default:()=>a});var t=e(17007),n=e(66170),o=e(30169);const r="Instruction conditionelle (scratch)";function a(){t.default.call(this),this.debug=!1,this.sup=1,this.nbQuestions=2,this.titre=r,this.consigne="Donner les coordonnées de la position finale du lutin.",this.typeExercice="Scratch",this.nbCols=2,this.nbColsCorr=1,this.nbQuestionsModifiable=!1,n.Do.isHtml,this.spacing=1,n.Do.isHtml,this.spacingCorr=1,this.listePackages="scratch3",this.nouvelleVersion=function(){this.listeQuestions=[],this.listeCorrections=[];let i="La position initiale d'un lutin dans un repère est (0,0). Dans le programme, x désigne l'abscisse, et y désigne l'ordonnée d'un lutin. <br>";i+='Une variable a été créée, elle s\'appelle <code class="b">(var) :: ring</code>. <br>';let s=" ",e="",t="",r=0,a=0;e+="\\medskip \\\\ \\begin{scratch} <br>",t+="<pre class='blocks'>";const l=(0,o.nSR)(1,10),u=(0,o.nSR)(1,10),h=(0,o.nSR)(1,10),c=(0,o.nSR)(1,10);e+="\\blockmove{aller à x: \\ovalnum{0} y: \\ovalnum{0}}",t+="quand le drapeau vert pressé <br>",t+="Aller à x:(0) y:(0) <br>",t+=`mettre (var) à (${l}) <br>`,t+=` si <(var) < [${u}]> alors <br>`,t+=" ajouter (100) à x <br>",this.sup>1&&(t+=` si <(var) > [${h}]> alors <br>`,t+=" ajouter (50) à x <br>",t+=" fin <br>"),t+=" sinon <br>",t+=" ajouter (70) à y <br>",this.sup>2&&(t+=` si <(var) > [${c}]> alors <br>`,t+=" ajouter (40) à y <br>",t+=" fin <br>"),t+=" fin <br>",t+="</pre>",e+="\\end{scratch}",i+=function(i,s){return n.Do.isHtml?i:s}(t,"\\medskip \\\\ \\begin{scratch} <br>\\blockmove{aller à x: \\ovalnum{0} y: \\ovalnum{0}}\\end{scratch}"),l<u?(s+=`Comme l'inégalité "${l} < ${u}" est vraie, alors on ajoute 100 à l'abscisse du lutin. <br>`,r+=100,this.sup>1&&(l>h?(s+=`Comme l'inégalité "${l} > ${h}" est vraie, alors on ajoute 50 à l'abscisse du lutin. <br>`,r+=50):s+=`Comme l'inégalité "${l} > ${h}" est fausse, alors on ne change pas l'abscisse du lutin. <br>`)):(s+=`Comme l'inégalité "${l} < ${u}" est fausse, alors on ajoute 70 à l'ordonnée du lutin. <br>`,a+=70,this.sup>2&&(l>c?(s+=`Comme l'inégalité "${l} > ${c}" est vraie, on ajoute 40 à l'ordonnée du lutin. <br>`,a+=40):s+=`Comme l'inégalité "${l} > ${c}" est fausse, alors on ne change pas l'ordonnée du lutin. <br>`)),s+=` La position finale est donc : (${r} ; ${a}).`,this.listeQuestions.push(i),this.listeCorrections.push(s),(0,o.K1R)(this)},this.besoinFormulaireNumerique=["Variante ",3,"1 : sans condition imbriquée\n2 : avec une condition imbriquée\n3 : avec deux conditions imbriquées"]}},17007:(i,s,e)=>{function t(){this.titre="",this.boutonAide=!1,this.consigne="",this.consigneCorrection="",this.introduction="",this.listeQuestions=[],this.listeCorrections=[],this.contenu="",this.contenuCorrection="",this.autoCorrection=[],this.tableauSolutionsDuQcm=[],this.spacing=1,this.spacingCorr=1,this.pasDeVersionLatex=!1,this.listePackages=[],this.consigneModifiable=!0,this.nbQuestionsModifiable=!0,this.nbCols=1,this.nbColsCorr=1,this.nbColsModifiable=!0,this.nbColsCorrModifiable=!0,this.spacingModifiable=!0,this.spacingCorrModifiable=!0,this.beamer=!1,this.tailleDiaporama=50,this.nbQuestions=10,this.correctionDetailleeDisponible=!1,this.correctionDetaillee=!0,this.video="",this.interactif=!1,this.interactifObligatoire=!1,this.besoinFormulaireNumerique=!1,this.besoinFormulaireTexte=!1,this.besoinFormulaireCaseACocher=!1,this.besoinFormulaire2Numerique=!1,this.besoinFormulaire2Texte=!1,this.besoinFormulaire2CaseACocher=!1,this.besoinFormulaire3Numerique=!1,this.besoinFormulaire3Texte=!1,this.besoinFormulaire3CaseACocher=!1,this.mg32Editable=!1,this.listeArguments=[],this.nouvelleVersion=function(i){},this.questionJamaisPosee=function(i,...s){0===i&&(this.listeArguments=[]);let e="";for(const t of s)void 0!==t&&(e+=t.toString());return!(this.listeArguments.indexOf(e)>-1)&&(this.listeArguments.push(e),!0)}}e.r(s),e.d(s,{default:()=>t})}}]);
//# sourceMappingURL=14801.5003c984c2d640ea2083.js.map