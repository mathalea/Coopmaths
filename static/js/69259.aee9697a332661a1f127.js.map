{"version":3,"file":"js/69259.aee9697a332661a1f127.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F10-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, rangeMinMax } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nimport { droiteParPointEtPente, mathalea2d, point, repere2, tracePoint } from '../../modules/2d.js'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\nexport const amcReady = true\nexport const amcType = 'qcmMult'\nexport const titre = 'Vocabulaire et notations des fonctions (généralités)'\n\n/**\n* Répndre à des questions sur les fonctions.\n*\n* @author Jean-Claude Lhote\n* 3F10-1\n*/\nexport default function VocabulaireNotationsFonctions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 2\n  this.consigne = ''\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false\n  this.spacing = 2\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = true\n  this.interactif = true\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles\n    const r = repere2({ xMin: -10, xMax: 10, yMin: -10, yMax: 10 })\n    switch (this.sup) {\n      case 1: // vocabulaire\n        typesDeQuestionsDisponibles = ['vocabulaire']\n        break\n      case 2: // notations\n        typesDeQuestionsDisponibles = ['notations']\n        break\n      case 3: // mélange vocabulaire et notations\n        typesDeQuestionsDisponibles = ['vocabulaire', 'notations']\n        break\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    const sousChoix = combinaisonListes(rangeMinMax(0, 4), this.nbQuestions) // pour choisir aléatoirement des questions dans chaque catégorie\n    for (let i = 0, texte, texteCorr, x, y, m, d, A, enonce, reponses = [], monQcm, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n\n      // on ne choisit que des nombres compris entre 1 et 20\n      x = randint(-9, 9, [0, 1, -1])\n      y = randint(-9, 9, x)\n      switch (listeTypeDeQuestions[i]) {\n        case 'vocabulaire':\n          switch (sousChoix[i]) {\n            case 0:\n              enonce = `$f$ est la fonction qui à $${x}$ associe $${y}$, alors pour la fonction $f$ :`\n              break\n            case 1:\n              enonce = `$${x}$ a pour image $${y}$ par la fonction $f$, alors pour la fonction $f$ :`\n              break\n            case 2:\n              enonce = `$${y}$ a pour antécédent $${x}$ par la fonction $f$, alors pour la fonction $f$ :`\n              break\n            case 3:\n              enonce = `L'image de $${x}$ par la fonction $f$ est $${y}$, alors pour la fonction $f$ :`\n              break\n            case 4:\n              enonce = `$${y}$ est l'image de $${x}$ par la fonction $f$, alors pour la fonction $f$ :`\n              break\n          }\n          reponses[i] = [[`$${x}$ est un antécédent de $${y}$`, true], [`$${x}$ est l'image de $${y}$`, false], [`$${y}$ est un antécédent de $${x}$`, false], [`$${y}$ est l'image de $${x}$`, true]]\n          break\n\n        case 'notations':\n          switch (sousChoix[i]) {\n            case 0:\n              enonce = `On sait que $f(${x})=${y}$, alors pour la fonction $f$ :`\n              reponses[i] = [[`$${x}$ est un antécédent de $${y}$`, true], [`$${x}$ est l'image de $${y}$`, false], [`$${y}$ est un antécédent de $${x}$`, false], [`$${y}$ est l'image de $${x}$`, true]]\n              break\n            case 1:\n              enonce = `$f : ${x} \\\\longmapsto ${y}$, alors pour la fonction $f$ :`\n              reponses[i] = [[`$${x}$ est un antécédent de $${y}$`, true], [`$${x}$ est l'image de $${y}$`, false], [`$${y}$ est un antécédent de $${x}$`, false], [`$${y}$ est l'image de $${x}$`, true]]\n              break\n            case 2:\n              enonce = `Pour $x=${x}$, $f(x)=${y}$, alors pour la fonction $f$ :`\n              reponses[i] = [[`$${x}$ est un antécédent de $${y}$`, true], [`$${x}$ est l'image de $${y}$`, false], [`$${y}$ est un antécédent de $${x}$`, false], [`$${y}$ est l'image de $${x}$`, true]]\n              break\n            case 3:\n              A = point(x, y)\n              d = droiteParPointEtPente(A, randint(-4, 4, 0) / 2, '', 'red')\n              enonce = 'La fonction $f$ est représentée par la droite rouge ci-dessous<br>'\n              enonce += mathalea2d({ xmin: -10, ymin: -10, xmax: 10, ymax: 10, pixelsParCm: 15, scale: 0.5 }, r, d, tracePoint(A)) + '<br>Alors pour la fonction $f$ :'\n              reponses[i] = [[`$${x}$ est un antécédent de $${y}$`, true], [`$${x}$ est l'image de $${y}$`, false], [`$${y}$ est un antécédent de $${x}$`, false], [`$${y}$ est l'image de $${x}$`, true]]\n              break\n            case 4:\n              m = randint(-9, 9, [x, y])\n              enonce = `On sait que $f(${x})=f(${y})=${m}$, alors pour la fonction $f$ :`\n              reponses[i] = [[`$${x}$ et $${y}$ sont des antécédents de $${m}$`, true], [`$${m}$ est l'image de $${x}$ et de $${y}$`, true], [`$${x}$ et $${y}$ sont des images de $${m}$`, false], [`$${m}$ est un antécédent de $${x}$ et $${y}$`, false]]\n              break\n          }\n          break\n      }\n\n      if (context.isAmc || this.interactif) {\n        this.autoCorrection[i] = {\n          enonce: enonce,\n          options: { ordered: false, vertical: true },\n          propositions: []\n        }\n        for (let k = 0; k < reponses[i].length; k++) {\n          this.autoCorrection[i].propositions.push({ texte: reponses[i][k][0], statut: reponses[i][k][1] })\n        }\n      }\n      monQcm = propositionsQcm(this, i)\n      texte = enonce + monQcm.texte\n      texteCorr = monQcm.texteCorr\n      if (this.questionJamaisPosee(i, listeTypeDeQuestions[i], x, y, sousChoix[i])) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Choix des questions',\n    3,\n    '1 : Vocabulaire\\n2 : Notations \\n3 : Mélange vocabulaire et notations'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["interactifReady","interactifType","amcReady","amcType","titre","VocabulaireNotationsFonctions","Exercice","this","sup","consigne","correctionDetailleeDisponible","correctionDetaillee","spacing","nbQuestions","nbQuestionsModifiable","interactif","nouvelleVersion","typesDeQuestionsDisponibles","autoCorrection","parseInt","listeQuestions","listeCorrections","r","repere2","xMin","xMax","yMin","yMax","listeTypeDeQuestions","combinaisonListes","sousChoix","rangeMinMax","texte","texteCorr","x","y","m","d","A","enonce","monQcm","i","reponses","cpt","randint","point","droiteParPointEtPente","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","tracePoint","context","options","ordered","vertical","propositions","k","length","push","statut","propositionsQcm","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}