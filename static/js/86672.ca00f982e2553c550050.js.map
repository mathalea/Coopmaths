{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta4G20-4.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","CalculerUneExpressionLitteralePythagore","a","b","n","s","d","racs","racd","miracs","miracd","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","randint","calcul","Math","sqrt","troncature","texNombre","texNombrec","carreParfait","texPrix","indexOf","push","listeQuestionsToContenu"],"mappings":"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","file":"js/86672.ca00f982e2553c550050.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, troncature, calcul, texNombre, texNombrec, texPrix, carreParfait } from '../../modules/outils.js'\nexport const titre = 'Calculer la racine carrée de (x² +/- y²)'\n\n/**\n * Description didactique de l'exercice : Calculer_une_expression_litterale_type_pythagore\n * @author Mireille Gain\n * Référence : 4G20-4\n*/\nexport default function CalculerUneExpressionLitteralePythagore () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Dans chaque cas, calculer a² + b² et a² - b²; puis donner la racine carrée de chaque résultat en valeur arrondie au centième.'\n  this.nbQuestions = 2\n  this.nbCols = 3\n  this.nbColsCorr = 2\n  this.tailleDiaporama = 50\n  this.video = ''\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let a, b, n, s, d, racs, racd, miracs, miracd\n    const typesDeQuestionsDisponibles = ['type1', 'type2']\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case 'type1':\n          a = randint(3, 12)\n          n = randint(5, 9)\n          b = calcul(n * 0.1)\n          break\n\n        case 'type2':\n          a = randint(3, 12)\n          n = randint(1, 5)\n          b = calcul(1 + n * 0.1)\n          break\n      }\n\n      s = calcul(a * a + b * b)\n      d = calcul(a * a - b * b)\n      racs = Math.sqrt(s)\n      racd = Math.sqrt(d)\n      miracs = troncature(racs - troncature(racs, 2), 3)\n      miracd = troncature(racd - troncature(racd, 2), 3)\n\n      texte = `$\\\\phantom{12}a = ${a} \\\\phantom{12}et \\\\phantom{12}b = ${texNombre(b)}$`\n\n      texteCorr = `$\\\\begin{aligned}a^2 + b^2&\n   = ${texNombre(a)} \\\\times ${texNombre(a)} + ${texNombre(b)} \\\\times ${texNombre(b)} \n   \\\\\\\\&= ${texNombrec(a * a)} + ${texNombrec(b * b)} \n   \\\\\\\\&= ${texNombrec((a * a + b * b))}\\\\end{aligned}$`\n      texteCorr += `<br>$\\\\phantom{123456}\\\\sqrt{${texNombrec(a * a + b * b)}}$`\n\n      if (carreParfait(calcul(100 * s))) {\n        texteCorr += `$\\\\phantom{1}=\\\\phantom{1}${texNombre(racs)}$  (qui est la valeur exacte de $\\\\sqrt{${texNombrec(a * a + b * b)}}$)`\n      } else {\n        if (1000 * miracs < 5) {\n          texteCorr += `$\\\\phantom{1}≈\\\\phantom{1}${texPrix(troncature(racs, 2))}$`\n        } else {\n          texteCorr += `$\\\\phantom{1}≈\\\\phantom{1}${texPrix(troncature(racs + 0.01, 2))}$`\n        }\n      }\n\n      texteCorr += `<br><br>$\\\\begin{aligned}a^2 - b^2& \n  = ${texNombre(a)} \\\\times ${texNombre(a)} - ${texNombre(b)} \\\\times ${texNombre(b)} \n  \\\\\\\\&= ${texNombrec(a * a)} - ${texNombrec(b * b)} \n  \\\\\\\\&= ${texNombrec(a * a - b * b)}\\\\end{aligned}$`\n      texteCorr += `<br>$\\\\phantom{123456}\\\\sqrt{${texNombrec(a * a - b * b)}}$`\n\n      if (carreParfait(calcul(100 * d))) {\n        texteCorr += `$\\\\phantom{1}=\\\\phantom{1}${texNombre(racd)}$  (qui est la valeur exacte de $\\\\sqrt{${texNombrec(a * a - b * b)}}$)`\n      } else {\n        if (1000 * miracd < 5) {\n          texteCorr += `$\\\\phantom{1}≈\\\\phantom{1}${texPrix(troncature(racd, 2))}$`\n        } else {\n          texteCorr += `$\\\\phantom{1}≈\\\\phantom{1}${texPrix(troncature((racd + 0.01), 2))}$`\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n"],"sourceRoot":""}