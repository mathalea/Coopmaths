{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/_Transformations.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["Transformations","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","context","spacingCorr","nouvelleVersion","numeroExercice","pointM","pointN","M","N","O","point","d1","droiteParPointEtPente","d3","droiteHorizontaleParPoint","d2","d4","droiteVerticaleParPoint","isVisible","epaisseur","color","opacite","objetsEnonce","objetsCorrection","i","j","push","tracePoint","texteParPosition","listeQuestions","listeCorrections","k1","k2","xu","yu","punto_reseau","antecedents","images","k","n","texte","texteCorr","punto","transformation","parseInt","sup","choix_transformation","combinaisonListes","randint","choice","imagePointParTransformation","Math","floor","numAlpha","latexParCoordonnees","segment","codeSegments","milieu","labelPoint","afficheMesureAngle","x","y","translation","vecteur","representant","texFractionReduite","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","optionsTikz","mainlevee","listeQuestionsToContenuSansNumero","titre","consigneCorrection","introduction","contenu","contenuCorrection","spacing","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/4808.9f88ebd72c6190e6944d.js","sourcesContent":["import { mathalea2d, point, droiteParPointEtPente, droiteHorizontaleParPoint, droiteVerticaleParPoint, tracePoint, labelPoint, segment, vecteur, texteParPosition, latexParCoordonnees, codeSegments, afficheMesureAngle, milieu, translation } from '../../modules/2d.js';\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenuSansNumero,randint,choice,combinaisonListes,imagePointParTransformation,texFractionReduite,numAlpha} from '../../modules/outils.js'\n\n/**\n * Transformations : trouvers un point numéroté par une des transformations du plan. Fonction générale utilisée sur tous les niveaux\n * @author Jean-Claude Lhote\n * Pas de version LaTeX\n */\nexport default function Transformations() {\n  \"use strict\";\n  Exercice.call(this); // Héritage de la classe Exercice()\n\n  // this.titre = \"Trouver l'image d'un point par une transformation du plan\";\n  this.consigne = \"\";\n  this.nbQuestions = 1;\n  this.nbQuestionsModifiable = false;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  // this.sup = 1; // 1 pour les 6ème, 2 pour les 5èmes, 3 pour les 4èmes, et 4 pour les 3èmes.\n  context.isHtml ? (this.spacingCorr = 2.5) : (this.spacingCorr = 1.5);\n  this.nouvelleVersion = function (numeroExercice) {\n      let M=[],N=[],pointM,pointN\n      let O=point(0,0,'O','below')\n    let d1=droiteParPointEtPente(O,1) \n    let d3=droiteHorizontaleParPoint(O)\n    let d2=droiteParPointEtPente(O,-1)\n    let d4=droiteVerticaleParPoint(O)\n    d1.isVisible=true\n    d2.isVisible=true\n    d3.isVisible=true\n    d4.isVisible=true\n    d1.epaisseur=2\n    d2.epaisseur=2\n    d3.epaisseur=2\n    d4.epaisseur=2\n    d1.color='green'\n    d2.color='green'\n    d3.color='green'\n    d4.color='green'\n    d1.opacite=0.5\n    d2.opacite=0.5\n    d3.opacite=0.5\n    d4.opacite=0.5\n      let objetsEnonce = []\n      let objetsCorrection = []\n      for (let i=0;i<10;i++){\n        for (let j=0;j<10;j++){\n          objetsEnonce.push(tracePoint(point(j-4,i-4)))\n          objetsCorrection.push(tracePoint(point(j-4,i-4)))\n          objetsEnonce.push(texteParPosition(j+10*i,j-4.2,i-4.2,'milieu','gray',0.8,\"middle\",false))\n          objetsCorrection.push(texteParPosition(j+10*i,j-4.2,i-4.2,'milieu','gray',0.8,\"middle\",false))\n        }\n      }\n    this.listeQuestions = [];\n    this.listeCorrections = []; // Liste de questions corrigées\n    let antecedents = [0, 0, 0],\n      images = [0, 0, 0],\n      k = [1, 1, 1],\n      k1,\n      k2,\n      xO = 4,\n      yO = 4,\n      xu,\n      yu,\n      punto_reseau; // k : rapports d'homothéties, (xO,yO) point de rencontre des droites et centre, les composantes du vecteur de translation : (xu,yu)\n\n    let n = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n    let texte = ``,\n      texteCorr = ``;\n    let punto = [[]];\n    let transformation = parseInt(this.sup) - 1;\n    let listeTypeDeQuestions = [\n      [1, 2, 3, 4],\n      [1, 2, 3, 4, 7],\n      [1, 2, 3, 4, 7, 8],\n      [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    ];\n    let choix_transformation = combinaisonListes(\n      listeTypeDeQuestions[transformation],\n      3\n    );\n    xu = randint(-3, 3);\n    if (xu == 0)\n      yu = randint(-3, 3, [0]);\n\n    // pas de vecteur nul de translation.\n    else\n      yu = randint(-3, 3);\n    for (let j = 0; j < 3; j++) {\n      if (choix_transformation[j] == 10) {\n        k[j] = choice([2, 4]) * randint(-1, 1, [0]); // rapport d'homothétie < 1 ( 0.5 ou 0.25 )\n        k2 = k[j];\n      } else if (choix_transformation[j] == 9) {\n        k[j] = choice([1, 2, 3]) * randint(-1, 1, [0]); // rapport d'homothétie >=1 (1,2 ou 3)\n        k1 = k[j];\n      }\n      antecedents[j] = randint(0, 99);\n      punto[j] = imagePointParTransformation(\n        choix_transformation[j],\n        [antecedents[j] % 10, Math.floor(antecedents[j] / 10)],\n        [xO, yO],\n        [xu, yu],\n        k[j]\n      );\n      images[j] = punto[j][0] + punto[j][1] * 10;\n      // Limitation des points invariants\n      if (choix_transformation[j] == 1 && images[j] % 11 == 0)\n        punto[j][0] = -1; // Point impossible sur (d1) pour sa symétrie\n      if (choix_transformation[j] == 3 && Math.floor(images[j] / 10 == 4))\n        punto[j][0] = -1; // Point impossible sur (d3) pour sa symétrie\n      if (choix_transformation[j] == 4 && images[j] % 10 == 4)\n        punto[j][0] = -1; // Point impossible sur  (d4) pour sa symétrie\n      if ((choix_transformation[j] == 5 || choix_transformation[j] == 5) &&\n        antecedents[j] == 44)\n        punto[j][0] = -1; // point O impossible pour rotation\n      if (choix_transformation[j] == 10 && antecedents[j] == 44)\n        punto[j][0] = -1; // point O impossible par homothétie de rapport 1/k2\n\n      // pour éviter les points en dehors des clous dans homothétie de rapport 1/k2\n      if (punto[j][0] - Math.floor(punto[j][0]) == 0 &&\n        punto[j][1] - Math.floor(punto[j][1]) == 0)\n        punto_reseau = true;\n      else\n        punto_reseau = false;\n      // On vérifie que l'image est bien un point du réseau sinon, on change.\n      while (punto[j][0] < 0 ||\n        punto[j][0] > 9 ||\n        punto[j][1] < 0 ||\n        punto[j][1] > 9 ||\n        punto_reseau == false) {\n        if (choix_transformation[j] == 10) {\n          k[j] = choice([2, 4]) * randint(-1, 1, [0]); // rapport d'homothétie < 1 ( 0.5 ou 0.25 )\n          k2 = k[j];\n        } else if (choix_transformation[j] == 9) {\n          k[j] = choice([1, 2, 3]) * randint(-1, 1, [0]); // rapport d'homothétie >=1 (1,2 ou 3)\n          k1 = k[j];\n        }\n        antecedents[j] = randint(0, 99);\n        punto[j] = imagePointParTransformation(\n          choix_transformation[j],\n          [antecedents[j] % 10, Math.floor(antecedents[j] / 10)],\n          [xO, yO],\n          [xu, yu],\n          k[j]\n        );\n        images[j] = punto[j][0] + punto[j][1] * 10;\n        // Limitation des points invariants\n        if (choix_transformation[j] == 1 && images[j] % 11 == 0)\n          punto[j][0] = -1; // Point impossible sur (d1) pour sa symétrie\n        if (choix_transformation[j] == 3 && Math.floor(images[j] / 10 == 4))\n          punto[j][0] = -1; // Point impossible sur (d3) pour sa symétrie\n        if (choix_transformation[j] == 4 && images[j] % 10 == 4)\n          punto[j][0] = -1; // Point impossible sur  (d4) pour sa symétrie\n        if ((choix_transformation[j] == 5 || choix_transformation[j] == 5) &&\n          antecedents[j] == 44)\n          punto[j][0] = -1; // point O impossible pour rotation\n        if (choix_transformation[j] == 10 && antecedents[j] == 44)\n          punto[j][0] = -1; // point O impossible par homothétie de rapport 1/k2\n\n\n        // pour éviter les points en dehors des clous dans homothétie de rapport 1/k2\n        if (punto[j][0] - Math.floor(punto[j][0]) == 0 &&\n          punto[j][1] - Math.floor(punto[j][1]) == 0)\n          punto_reseau = true;\n        else\n          punto_reseau = false;\n      }\n      N[j]=point(punto[j][0]-4,punto[j][1]-4)\n      M[j]=point(antecedents[j] % 10-4,Math.floor(antecedents[j] / 10-4))\n    }\n    // n[i] est un tableau contenant -1 pour la transformation d'indice i si elle n'est pas utilisée, et contenant le numéro du point concerné si la transformation i est utilisée pour ce point.\n    // Je l'utilise pour faire apparaître la correction liée au point et à la transformation.\n    for (let j = 0; j < 3; j++) {\n      n[choix_transformation[j] - 1] = antecedents[j];\n    }\n    for (let i = 0; i < 3; i++) {\n      switch (choix_transformation[i]) {\n        case 1:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro du symétrique du point ${antecedents[i]} par rapport à la droite $(d_1)$.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` Le symétrique du point ${antecedents[i]} par rapport à $(d_1)$ est le point ${images[i]}.<br>`;\n            objetsEnonce.push(d1,tracePoint(M[i]),latexParCoordonnees('(d_1)',4.5,4.2,'green',15,1,\"\"))\n            objetsCorrection.push(d1,tracePoint(M[i],N[i]),latexParCoordonnees('(d_1)',3.5,3,'green',15,1,\"\"),\n            segment(M[i],N[i],'purple'),codeSegments('X','red',M[i],milieu(M[i],N[i]),milieu(M[i],N[i]),N[i]))\n          break;\n\n        case 2:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro du symétrique du point ${antecedents[i]} par rapport à la droite $(d_2)$.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` Le symétrique du point ${antecedents[i]} par rapport à $(d_2)$ est le point ${images[i]}.<br>`;\n            objetsEnonce.push(d2,tracePoint(M[i]),latexParCoordonnees('(d_2)',4.3,-3.7,'green',15,1,\"\"))\n            objetsCorrection.push(d2,tracePoint(M[i],N[i]),latexParCoordonnees('(d_2)',4.3,-3.7,'green',15,1,\"\"),\n            segment(M[i],N[i],'cyan'),codeSegments('|||','red',M[i],milieu(M[i],N[i]),milieu(M[i],N[i]),N[i]))\n          break;\n\n        case 3:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro du symétrique du point ${antecedents[i]} par rapport à la droite $(d_3)$.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` Le symétrique du point ${antecedents[i]} par rapport à $(d_3)$ est le point ${images[i]}.<br>`;\n            objetsEnonce.push(d3,tracePoint(M[i]),latexParCoordonnees('(d_3)',-4.2,0.5,'green',15,1,\"\"))\n            objetsCorrection.push(d3,tracePoint(M[i],N[i]),latexParCoordonnees('(d_3)',-4.2,0.5,'green',15,1,\"\"),\n            segment(M[i],N[i],'brown'),codeSegments('/','red',M[i],milieu(M[i],N[i]),milieu(M[i],N[i]),N[i]))\n          break;\n\n        case 4:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro du symétrique du point ${antecedents[i]} par rapport à la droite $(d_4)$.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` Le symétrique du point ${antecedents[i]} par rapport à $(d_4)$ est le point ${images[i]}.<br>`;\n            objetsEnonce.push(d4,tracePoint(M[i]),latexParCoordonnees('(d_4)',0.2,4.5,'green',15,1,\"\"))\n            objetsCorrection.push(d4,tracePoint(M[i],N[i]),latexParCoordonnees('(d_4)',0.2,4.5,'green',15,1,\"\"),\n            segment(M[i],N[i],'yellow'),codeSegments('||','red',M[i],milieu(M[i],N[i]),milieu(M[i],N[i]),N[i]))\n          break;\n\n        case 5:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro de  l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 90° dans le sens anti-horaire.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 90° dans le sens anti-horaire est le point ${images[i]}.<br>`;\n            objetsEnonce.push(tracePoint(M[i],O),labelPoint(O))\n            objetsCorrection.push(tracePoint(M[i],N[i],O),labelPoint(O),segment(M[i],O,'blue'),segment(N[i],O,'blue'),codeSegments('||','red',M[i],O,O,N[i]),afficheMesureAngle(M[i],O,N[i]))\n           break;\n\n        case 6:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro de  l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 90° dans le sens horaire.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 90° dans le sens horaire est le point ${images[i]}.<br>`;\n            objetsEnonce.push(tracePoint(M[i],O),labelPoint(O))\n            objetsCorrection.push(tracePoint(M[i],N[i],O),labelPoint(O),segment(M[i],O,'blue'),segment(N[i],O,'blue'),codeSegments('||','red',M[i],O,O,N[i]),afficheMesureAngle(M[i],O,N[i]))\n           break;\n\n        case 7:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro de l'image du point ${antecedents[i]} par la symétrie de centre O.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` L'image du point ${antecedents[i]} par la symétrie de centre O est le point ${images[i]}.<br>`;\n            objetsEnonce.push(tracePoint(M[i],O),labelPoint(O))\n            objetsCorrection.push(tracePoint(M[i],N[i],O),labelPoint(O),segment(M[i],O,'blue'),segment(N[i],O,'blue'),codeSegments('O','red',M[i],O,O,N[i]))\n        break;\n\n        case 11:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro de l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 60° dans le sens anti-horaire.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 60° dans le sens anti-horaire est le point ${images[i]}.<br>`;\n            objetsEnonce.push(tracePoint(M[i],O),labelPoint(O))\n            objetsCorrection.push(tracePoint(M[i],N[i],O),labelPoint(O),segment(M[i],O,'blue'),segment(N[i],O,'blue'),codeSegments('||','red',M[i],O,O,N[i]),afficheMesureAngle(M[i],O,N[i]))\n          break;\n\n        case 12:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro de l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 60° dans le sens horaire.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 60° dans le sens horaire est le point ${images[i]}.<br>`;\n            objetsEnonce.push(tracePoint(M[i],O),labelPoint(O))\n            objetsCorrection.push(tracePoint(M[i],N[i],O),labelPoint(O),segment(M[i],O,'blue'),segment(N[i],O,'blue'),codeSegments('||','red',M[i],O,O,N[i]),afficheMesureAngle(M[i],O,N[i]))\n          break;\n\n        case 13:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro de l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 120° dans le sens anti-horaire.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 120° dans le sens anti-horaire est le point ${images[i]}.<br>`;\n            objetsEnonce.push(tracePoint(M[i],O),labelPoint(O))\n            objetsCorrection.push(tracePoint(M[i],N[i],O),labelPoint(O),segment(M[i],O,'blue'),segment(N[i],O,'blue'),codeSegments('||','red',M[i],O,O,N[i]),afficheMesureAngle(M[i],O,N[i]))\n          break;\n\n        case 14:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro de l'image du point ${antecedents[i]} par la rotation de centre O et d'angle 120° dans le sens horaire.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` L'image du point ${antecedents[i]} par la rotation de centre O et d'angle 120° dans le sens horaire est le point ${images[i]}.<br>`;\n            objetsEnonce.push(tracePoint(M[i],O),labelPoint(O))\n            objetsCorrection.push(tracePoint(M[i],N[i],O),labelPoint(O),segment(M[i],O,'blue'),segment(N[i],O,'blue'),codeSegments('||','red',M[i],O,O,N[i]),afficheMesureAngle(M[i],O,N[i]))\n           break;\n\n        case 8:\n          pointM=point(randint(-1,2,[M[i].x,0]),randint(-1,2,[M[i].y,0]),'M','below')\n          pointN=translation(pointM,vecteur(xu,yu),'N','below')\n           texte +=\n            numAlpha(i) +\n            ` Donner le numéro de l'image du point ${antecedents[i]} par la translation qui transforme M en N.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` L'image du point ${antecedents[i]} par la translation qui transforme M en N est le point ${images[i]}.<br>`;\n            objetsEnonce.push(tracePoint(M[i],pointM,pointN),labelPoint(pointM,pointN))\n            objetsCorrection.push(tracePoint(M[i],N[i],pointM,pointN),labelPoint(pointM,pointN),vecteur(M[i],N[i]).representant(M[i]),vecteur(M[i],N[i]).representant(pointM))\n       break;\n\n        case 9:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro de l'image du point ${antecedents[i]} par l'homothétie de centre O et de rapport ${k1}.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` L'image du point ${antecedents[i]} par l'homothétie de centre O et de rapport ${k1} est le point ${images[i]}.<br>`;\n            objetsEnonce.push(tracePoint(M[i],O),labelPoint(O))\n            objetsCorrection.push(tracePoint(M[i],N[i],O),labelPoint(O),segment(M[i],O,'blue'),segment(N[i],O,'orange'))\n         break;\n\n        case 10:\n          texte +=\n            numAlpha(i) +\n            ` Donner le numéro de l'image du point ${antecedents[i]} par l'homothétie de centre O et de rapport $${texFractionReduite(\n              1,\n              k2\n            )}$.<br>`;\n          texteCorr +=\n            numAlpha(i) +\n            ` L'image du point ${antecedents[i]} par l'homothétie de centre O et de rapport $${texFractionReduite(\n              1,\n              k2\n            )}$ est le point ${images[i]}.<br>`;\n            objetsEnonce.push(tracePoint(M[i],O),labelPoint(O))\n            objetsCorrection.push(tracePoint(M[i],N[i],O),labelPoint(O),segment(M[i],O,'blue'),segment(N[i],O,'orange'))\n         break;\n      }\n    }\n    texte+='<br>'+mathalea2d({xmin:-4.5,ymin:-4.5,xmax:5.3,ymax:5.3,pixelsParCm:40,scale:0.8,optionsTikz:['every node/.style={scale=0.6}'],mainlevee:false},objetsEnonce)\n    texteCorr+='<br>'+mathalea2d({xmin:-4.5,ymin:-4.5,xmax:5.3,ymax:5.3,pixelsParCm:40,scale:0.8,optionsTikz:['every node/.style={scale=0.6}'],mainlevee:false},objetsCorrection)\n      this.listeQuestions.push(texte);\n      this.listeCorrections.push(texteCorr);\n      listeQuestionsToContenuSansNumero(this);\n   \n  };\n  // this.besoinFormulaireNumerique = ['Transformations',5, '1 : Symétries axiales\\n 2 : Symétries centrales\\n 3 : Rotations\\n 4 : Translations\\n 5 : Homothéties\\n'];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}