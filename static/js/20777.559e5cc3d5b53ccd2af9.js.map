{"version":3,"file":"js/20777.559e5cc3d5b53ccd2af9.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N32-6.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif } from '../../modules/outils.js'\n\nexport const titre = 'Développer les identités remarquables avec des racines carrées'\n\n/**\n * 2N32-6\n * @author Stéphane Guyon\n * Relecture : Novembre 2021 par EE\n */\nexport default function IdentitesRemarquablesEtRacineCarree () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Effectuer les calculs suivants :'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1 //\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4, 5]; let typesDeQuestions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, a, b, c, d, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        // Cas par cas, on définit le type de nombres que l'on souhaite\n        // Combien de chiffres ? Quelles valeurs ?\n        case 1:\n\n          a = randint(2, 6) * choice([-1, 1])\n          b = randint(2, 11, [4, 8, 9])\n          c = randint(2, 6)\n\n          texte = `$\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)^{2}$`\n          texteCorr = `$\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)^{2}=\n                    \\\\left(${a} \\\\sqrt{${b}} \\\\right)^{2}+2\\\\times ${ecritureParentheseSiNegatif(a)}\\\\sqrt{${b}}\\\\times ${c}+${c}^{2}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)^{2}}=${ecritureParentheseSiNegatif(a)}^{2}\\\\times ${b} ${ecritureAlgebrique(2 * a * c)}\\\\sqrt{${b}}+ ${c * c}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)^{2}}=${a * a * b}${ecritureAlgebrique(2 * a * c)}\\\\sqrt{${b}}+${c * c}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)^{2}}=${a * a * b + c * c}${ecritureAlgebrique(2 * a * c)}\\\\sqrt{${b}}$\n                    `\n\n          break\n\n        case 2:\n\n          a = randint(2, 6) * choice([-1, 1])\n          b = randint(2, 11, [4, 8, 9])\n          c = randint(2, 6)\n\n          texte = `$\\\\left(${a} \\\\sqrt{${b}} -${c}\\\\right)^{2}$`\n          texteCorr = `$\\\\left(${a} \\\\sqrt{${b}} -${c}\\\\right)^{2}=\\\\left(${a} \\\\sqrt{${b}} \\\\right)^{2}-2\\\\times ${ecritureParentheseSiNegatif(a)}\\\\sqrt{${b}}\\\\times ${c}+${c}^{2}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)^{2}}=${ecritureParentheseSiNegatif(a)}^{2}\\\\times ${b} ${ecritureAlgebrique(-2 * a * c)}\\\\sqrt{${b}}+ ${c * c}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)^{2}}=${a * a * b}${ecritureAlgebrique(-2 * a * c)}\\\\sqrt{${b}}+${c * c}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)^{2}}=${a * a * b + c * c}${ecritureAlgebrique(-2 * a * c)}\\\\sqrt{${b}}$\n\n                    `\n          break\n        case 3:\n          a = randint(2, 6) * choice([-1, 1])\n          b = randint(2, 11, [4, 8, 9])\n          c = randint(2, 6)\n\n          texte = `$\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)\\\\left(${a} \\\\sqrt{${b}}-${c}\\\\right)$`\n          texteCorr = `$\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)\\\\left(${a} \\\\sqrt{${b}}-${c}\\\\right)=\\\\left(${a} \\\\sqrt{${b}} \\\\right)^{2}-${c}^{2}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)\\\\left(${a} \\\\sqrt{${b}}-${c}\\\\right)}=${ecritureParentheseSiNegatif(a)}^{2}\\\\times ${b}-${c * c}$<br>\n                        $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)\\\\left(${a} \\\\sqrt{${b}}-${c}\\\\right)}=${a * a * b}-${c * c}$<br>\n                        $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\right)\\\\left(${a} \\\\sqrt{${b}}-${c}\\\\right)}=${a * a * b - c * c}$\n                    `\n\n          break\n        case 4:\n\n          a = randint(2, 5) * choice([-1, 1])\n          b = randint(3, 11, [4, 8, 9])\n          c = randint(2, 5)\n          d = randint(3, 11, [4, 8, 9, b, b * 2, b * 3, b * 5])\n\n          texte = `$\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\sqrt{${d}}\\\\right)^{2}$`\n          texteCorr = `$\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\sqrt{${d}}\\\\right)^{2}=\n                    \\\\left(${a} \\\\sqrt{${b}} \\\\right)^{2}+2\\\\times ${ecritureParentheseSiNegatif(a)}\\\\sqrt{${b}}\\\\times ${c}\\\\sqrt{${d}}+\\\\left(${c}\\\\sqrt{${d}}\\\\right)^{2}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\sqrt{${d}}\\\\right)^{2}}=${ecritureParentheseSiNegatif(a)}^{2}\\\\times ${b} +2\\\\times ${ecritureParentheseSiNegatif(a)}\n                    \\\\times \\\\sqrt{${b}}\\\\times ${ecritureParentheseSiNegatif(c)}    \\\\times\\\\sqrt{${d}}+ ${c * c}\\\\times ${d}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\sqrt{${d}}\\\\right)^{2}}=${a * a * b} ${ecritureAlgebrique(2 * a * c)}\\\\sqrt{${b}\\\\times${d}} ${ecritureAlgebrique(c * c * d)}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\sqrt{${d}}\\\\right)^{2}}=${a * a * b + c * c * d}${ecritureAlgebrique(2 * a * c)}\\\\sqrt{${b * d}}\n\n                    $`\n\n          break\n        case 5:\n          a = randint(2, 6) * choice([-1, 1])\n          b = randint(2, 11, [4, 8, 9])\n          c = randint(2, 6)\n          d = randint(2, 11, [4, 8, 9])\n          texte = `$\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\sqrt{${d}}\\\\right)\\\\left(${a} \\\\sqrt{${b}}-${c}\\\\sqrt{${d}}\\\\right)$`\n          texteCorr = `$\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\sqrt{${d}}\\\\right)\\\\left(${a} \\\\sqrt{${b}}-${c}\\\\sqrt{${d}}\\\\right)=\n                    \\\\left(${a} \\\\sqrt{${b}} \\\\right)^{2}-\\\\left(${c}\\\\sqrt{${d}}\\\\right)^{2}$<br>\n                $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\sqrt{${d}}\\\\right)\\\\left(${a} \\\\sqrt{${b}}-${c}\\\\sqrt{${d}}\\\\right)}\n                    =${ecritureParentheseSiNegatif(a)}^{2}\\\\times ${b}-${c}^{2}\\\\times ${ecritureParentheseSiNegatif(d)}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\sqrt{${d}}\\\\right)\\\\left(${a} \\\\sqrt{${b}}-${c}\\\\sqrt{${d}}\\\\right)}\n                    =${a * a * b}-${c * c * d}$<br>\n                    $\\\\phantom{\\\\left(${a} \\\\sqrt{${b}} +${c}\\\\sqrt{${d}}\\\\right)\\\\left(${a} \\\\sqrt{${b}}-${c}\\\\sqrt{${d}}\\\\right)}\n                    =${a * a * b - c * c * d}$\n                    `\n\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","IdentitesRemarquablesEtRacineCarree","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","a","b","c","d","texte","texteCorr","i","cpt","randint","choice","ecritureParentheseSiNegatif","ecritureAlgebrique","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}