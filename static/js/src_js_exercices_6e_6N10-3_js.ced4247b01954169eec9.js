/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e_6N10-3_js"],{

/***/ "./src/js/exercices/6e/6N10-3.js":
/*!***************************************!*\
  !*** ./src/js/exercices/6e/6N10-3.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ chiffre_nombre_de)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst titre = 'Chiffre des ... Nombre de ...'\n\n/** \n * * Donner le chiffre des ... le nombre de ...\n * * 6N10-3\n * @author Sébastien Lozano\n */\n\nfunction chiffre_nombre_de() {\n  'use strict';\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.beta = false;\n  this.sup = 1;\n  if (this.beta) {\n    this.nb_questions = 6;\n  } else {\n    this.nb_questions = 6;\n  };\n\n  this.titre = titre;\n  this.consigne = ``;\n\n  this.nb_cols = 1;\n  this.nb_cols_corr = 1;\n  //this.nb_questions_modifiable = false;\n  sortie_html ? this.spacing = 3 : this.spacing = 2;\n  sortie_html ? this.spacing_corr = 2.5 : this.spacing_corr = 1.5;\n\n  let type_de_questions_disponibles;\n\n  this.nouvelle_version = function () {\n    if (this.beta) {\n      type_de_questions_disponibles = [0, 1, 2, 3, 4, 5];\n    } else {\n      //type_de_questions_disponibles = shuffle([choice([1,3]),choice([2,4]),0]);      \t\t\t\n      type_de_questions_disponibles = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)([0, 1, 2, 3, 4, 5]);\n\n    };\n\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n\n    //let liste_type_de_questions  = combinaison_listes(type_de_questions_disponibles,this.nb_questions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(type_de_questions_disponibles, this.nb_questions) // Tous les types de questions sont posées --> à remettre comme ci dessus\t\t\n\n    for (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n      let u, d, c, mu, md, mc, mmu, mmd, mmc;\n      mmc = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9, [0]);\n      mmd = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9, [mmc]);\n      mmu = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9, [mmc, mmd]);\n      mc = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9, [mmu, mmd, mmc]);\n      md = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9, [mmu, mmd, mmc, mc]);\n      mu = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9, [mmu, mmd, mmc, mc, md]);\n      c = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9, [mmu, mmd, mmc, mu, md, mc]);\n      d = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9, [mmu, mmd, mmc, mu, md, mc, c]);\n      u = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 9, [mmu, mmd, mmc, mu, md, mc, c, d]);\n      //let nb = randint(100000000,999999999);\n      //let nb_str = nb.toString();\n      let nb_str = mmc.toString() + mmd.toString() + mmu.toString() + mc.toString() + md.toString() + mu.toString() + c.toString() + d.toString() + u.toString();\n      let nb = Number(nb_str);\n      let cdu = ['unites', 'dizaines', 'centaines'];\n      let chiffre_nombre = {\n        chiffre: {\n          unites: {\n            unites: { determinant: `des`, cdu: ['unités', ''], rangs: [8] },\n            dizaines: { determinant: `des`, cdu: ['dizaines', ''], rangs: [7] },\n            centaines: { determinant: `des`, cdu: ['centaines', ''], rangs: [6] },\n          },\n          milliers: {\n            unites: { determinant: `des`, cdu: ['unités de milliers', ''], rangs: [5] },\n            dizaines: { determinant: `des`, cdu: ['dizaines de milliers', ''], rangs: [4] },\n            centaines: { determinant: `des`, cdu: ['centaines de milliers', ''], rangs: [3] },\n          },\n          millions: {\n            unites: { determinant: `des`, cdu: ['unités de millions', ''], rangs: [2] },\n            dizaines: { determinant: `des`, cdu: ['dizaines de millions', ''], rangs: [1] },\n            centaines: { determinant: `des`, cdu: ['centaines de millions', ''], rangs: [0] },\n          },\n        },\n        nombre: {\n          unites: {\n            unites: { determinant: `d'`, cdu: ['unités', 1], rangs: [0, 1, 2, 3, 4, 5, 6, 7, 8] },\n            dizaines: { determinant: `de`, cdu: ['dizaines', 10], rangs: [0, 1, 2, 3, 4, 5, 6, 7] },\n            centaines: { determinant: `de`, cdu: ['centaines', 100], rangs: [0, 1, 2, 3, 4, 5, 6] },\n          },\n          milliers: {\n            unites: { determinant: `d'`, cdu: ['unités de milliers', 1000], rangs: [0, 1, 2, 3, 4, 5] },\n            dizaines: { determinant: `de`, cdu: ['dizaines de milliers', 10000], rangs: [0, 1, 2, 3, 4] },\n            centaines: { determinant: `de`, cdu: ['centaines de milliers', 100000], rangs: [0, 1, 2, 3] },\n          },\n          millions: {\n            unites: { determinant: `d'`, cdu: ['unités de millions', 1000000], rangs: [0, 1, 2] },\n            dizaines: { determinant: `de`, cdu: ['dizaines de millions', 10000000], rangs: [0, 1] },\n            centaines: { determinant: `de`, cdu: ['centaines de millions', 100000000], rangs: [0] },\n          },\n        },\n      };\n\n      // pour les situations, autant de situations que de cas dans le switch !\n      let situations = [\n        {//case 0 --> chiffre des\n          type: 'chiffre',\n          tranche: 'unites',\n          cdu: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(cdu),\n        },\n        {//case 1 --> chiffre des\n          type: 'chiffre',\n          tranche: 'milliers',\n          cdu: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(cdu),\n        },\n        {//case 2 --> chiffre des\n          type: 'chiffre',\n          tranche: 'millions',\n          cdu: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(cdu),\n        },\n        {//case 3 --> nombre de\n          type: 'nombre',\n          tranche: 'unites',\n          cdu: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(cdu),\n        },\n        {//case 4 --> nombre de\n          type: 'nombre',\n          tranche: 'milliers',\n          cdu: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(cdu),\n        },\n        {//case 5 --> nombre de\n          type: 'nombre',\n          tranche: 'millions',\n          cdu: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(cdu),\n        },\n      ];\n\n      //une fonction pour la correction selon le type de question\n      function chiffre_nombre_corr(type, str, rang) {\n        let sortie;\n        if (type == 'chiffre') {\n          sortie = str.split('')[rang[0]];\n        };\n        if (type == 'nombre') {\n          sortie = str.split('')[rang[0]];\n          for (let k = 1; k < rang.length; k++) {\n            sortie += str.split('')[rang[k]]\n          };\n        };\n        return sortie;\n      };\n\n      // une fonction pour la justification supplémentaire dans le cas nombre de ...\n      function nombre_de_justif(type, str, rang, cdu_num) {\n        let sortie;\n        if (type == 'chiffre') {\n          sortie = '';\n        };\n        if (type == 'nombre') {\n          let nb_de = str.split('')[rang[0]];\n          for (let k = 1; k < rang.length; k++) {\n            nb_de += str.split('')[rang[k]]\n          };\n          let j = rang[rang.length - 1];\n          j++;\n          let nb_de_reste = '';\n          while (j != 9) {\n            nb_de_reste += str.split('')[j];\n            j++;\n          };\n          sortie = `comme $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(str)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nb_de)}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(cdu_num)}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nb_de_reste)}$ alors `;\n        };\n        return sortie;\n      };\n\n      let enonces = [];\n      for (let k = 0; k < situations.length; k++) {\n        enonces.push({\n          enonce: `\n          Dans $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nb)}$, quel est le ${situations[k].type} ${chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].determinant} ${chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].cdu[0]} ?\t\t\t\t\t\n\t\t\t\t\t`,\n          question: ``,\n          correction: `\n          Dans $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nb)}$,           \n          ${nombre_de_justif(situations[k].type, nb_str, chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].rangs, chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].cdu[1])}          \n          le ${situations[k].type} ${chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].determinant}  ${chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].cdu[0]} est \n          $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.mise_en_evidence)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(chiffre_nombre_corr(situations[k].type, nb_str, chiffre_nombre[situations[k].type][situations[k].tranche][situations[k].cdu].rangs)))}$\t\t\t\t\t\n\t\t\t\t\t`\n        });\n      };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (liste_type_de_questions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n            texte += `             `\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[0].correction}`;\n          };\n          break;\n        case 1:\n          texte = `${enonces[1].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[1].correction}`;\n          };\n          break;\n        case 2:\n          texte = `${enonces[2].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[2].correction}`;\n          };\n          break;\n        case 3:\n          texte = `${enonces[3].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[3].correction}`;\n          };\n          break;\n        case 4:\n          texte = `${enonces[4].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[4].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[4].correction}`;\n          };\n          break;\n        case 5:\n          texte = `${enonces[5].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[5].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[5].correction}`;\n          };\n          break;\n      };\n\n      if (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\n  }\n  //this.besoin_formulaire_numerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  //this.besoin_formulaire2_case_a_cocher = [\"Avec des équations du second degré\"];\t\n};\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/6N10-3.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);