{"version":3,"file":"js/80299.35084acb493cba34efb8.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/2e/can2F12.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { listeQuestionsToContenu, abs, miseEnEvidence, randint, calcul, choice, texNombrec } from '../../../modules/outils.js'\nimport { propositionsQcm } from '../../../modules/gestionInteractif.js'\nexport const titre = 'Utiliser une fonction de référence (inverse, cube, racine) pour comparer deux images'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '03/01/2022' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence\n*/\nfunction ecritureParentheseSiNegatif (a, maximumFractionDigits = 15) {\n    const result = Intl.NumberFormat('fr-FR', { maximumFractionDigits: maximumFractionDigits }).format(a).replace(',', '{,}')\n    return a < 0 ? `(${result})` : result\n  }\nexport default function ComparerAvecFctRef () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 1\n  this.tailleDiaporama = 1\n  this.spacing = 2\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let texte, texteCorr, a, b, N\n    switch (choice([1,2,3])) { //\n      case 1 :\n        N = randint(1, 2)\n        if (N === 1) {\n        a = calcul(randint(1, 9) + randint(5, 9) / 10)\n        b = calcul(a + (randint(1, 9) / 10) * choice([1, -1]))\n        if (this.interactif) {\n          texte = 'Sélectionner l’affirmation correcte. '\n          if (a < b) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: `$\\\\dfrac{1}{${texNombrec(a)}}>\\\\dfrac{1}{${texNombrec(b)}}$`,\n                  statut: true\n                },\n                {\n                  texte: `$\\\\dfrac{1}{${texNombrec(a)}}<\\\\dfrac{1}{${texNombrec(b)}}$`,\n                  statut: false\n                }\n              ]\n            }\n          } else {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: `$\\\\dfrac{1}{${texNombrec(a)}}<\\\\dfrac{1}{${texNombrec(b)}}$`,\n                  statut: true\n                },\n                {\n                  texte: `$\\\\dfrac{1}{${texNombrec(a)}}>\\\\dfrac{1}{${texNombrec(b)}}$`,\n                  statut: false\n                }\n              ]\n            }\n          }\n\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `Comparer $\\\\dfrac{1}{${texNombrec(a)}}$ et $\\\\dfrac{1}{${texNombrec(b)}}$.`\n        }\n\n        texteCorr = `         La fonction inverse étant strictement décroissante sur $]0;+\\\\infty[$, elle change l'ordre. \n        Cela signifie que deux nombres strictement positifs  sont rangés dans l'ordre inverse de leurs inverses.<br>\n        Autrement dit, si $a$ et $b$ sont deux nombres strictement positifs et si $a < b$, alors $\\\\dfrac{1}{a} > \\\\dfrac{1}{b}$.<br>`\n\n      if (a < b) {\n        texteCorr += `Comme $${texNombrec(a)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(b)}$, alors  $\\\\dfrac{1}{${texNombrec(a)}}${miseEnEvidence('\\\\boldsymbol{>}', 'blue')}\\\\dfrac{1}{${texNombrec(b)}}$`\n      } else { texteCorr += `Comme $${texNombrec(b)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(a)}$, alors  $\\\\dfrac{1}{${texNombrec(b)}}${miseEnEvidence('\\\\boldsymbol{>}', 'blue')}\\\\dfrac{1}{${texNombrec(a)}}$` \n    }\n}\nif(N===2){\n    a = calcul(((randint(1, 9) + randint(5, 9) / 10))*(-1))\n    b = calcul(a + (randint(1, 9) / 10) * choice([1, -1]))\n    if (this.interactif) {\n      texte = 'Sélectionner l’affirmation correcte. '\n      if (a < b) {\n        this.autoCorrection[0] = {\n          enonce: texte,\n          options: { horizontal: true },\n          propositions: [\n            {\n              texte: `$\\\\dfrac{1}{${texNombrec(a)}}>\\\\dfrac{1}{${texNombrec(b)}}$`,\n              statut: true\n            },\n            {\n              texte: `$\\\\dfrac{1}{${texNombrec(a)}}<\\\\dfrac{1}{${texNombrec(b)}}$`,\n              statut: false\n            }\n          ]\n        }\n      } else {\n        this.autoCorrection[0] = {\n          enonce: texte,\n          options: { horizontal: true },\n          propositions: [\n            {\n              texte: `$\\\\dfrac{1}{${texNombrec(a)}}<\\\\dfrac{1}{${texNombrec(b)}}$`,\n              statut: true\n            },\n            {\n              texte: `$\\\\dfrac{1}{${texNombrec(a)}}>\\\\dfrac{1}{${texNombrec(b)}}$`,\n              statut: false\n            }\n          ]\n        }\n      }\n\n      texte += propositionsQcm(this, 0).texte\n    } else {\n      texte = `Comparer $\\\\dfrac{1}{${texNombrec(a)}}$ et $\\\\dfrac{1}{${texNombrec(b)}}$.`\n    }\n\n    texteCorr = `     La fonction inverse étant strictement décroissante sur $]-\\\\infty;0[$, elle change l'ordre. \n    Cela signifie que deux nombres strictement négatifs  sont rangés dans l'ordre inverse de leurs inverses.<br>\n    Autrement dit, si $a$ et $b$ sont deux nombres strictement négatifs et si $a < b$, alors $\\\\dfrac{1}{a} > \\\\dfrac{1}{b}$.<br>`\n\n  if (a < b) {\n    texteCorr += `Comme $${texNombrec(a)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(b)}$, alors  $\\\\dfrac{1}{${texNombrec(a)}}${miseEnEvidence('\\\\boldsymbol{>}', 'blue')}\\\\dfrac{1}{${texNombrec(b)}}$`\n  } else { texteCorr += `Comme $${texNombrec(b)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(a)}$, alors  $\\\\dfrac{1}{${texNombrec(b)}}${miseEnEvidence('\\\\boldsymbol{>}', 'blue')}\\\\dfrac{1}{${texNombrec(a)}}$` \n}}\n\n\n\n\n\n\n        break\n        case 2 :\n            a = calcul(randint(-10, 10) + (randint(-9, 9, 0) / 10) * choice([-1, 1]))\n              b = calcul((a + randint(1, 9) / 10) * choice([-1, 1]))\n            if (this.interactif) {\n              texte = 'Sélectionner l’affirmation correcte. '\n              if (a < b) {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$${ecritureParentheseSiNegatif(b)}^3>${ecritureParentheseSiNegatif(a)}^3$`,\n                      statut: true\n                    },\n                    {\n                      texte: `$${ecritureParentheseSiNegatif(a)}^3>${ecritureParentheseSiNegatif(b)}^3$`,\n                      statut: false\n                    }\n                  ]\n                }\n              } else {\n                this.autoCorrection[0] = {\n                  enonce: texte,\n                  options: { horizontal: true },\n                  propositions: [\n                    {\n                      texte: `$${ecritureParentheseSiNegatif(b)}^3<${ecritureParentheseSiNegatif(a)}^3$`,\n                      statut: true\n                    },\n                    {\n                      texte: `$(${ecritureParentheseSiNegatif(a)})^3<${ecritureParentheseSiNegatif(b)}^3$`,\n                      statut: false\n                    }\n                  ]\n                }\n              }\n    \n              texte += propositionsQcm(this, 0).texte\n            } else {\n              texte = `Comparer $${ecritureParentheseSiNegatif(a)}^3$ et $${ecritureParentheseSiNegatif(b)}^3$.`\n            }\n    \n            texteCorr = ` La fonction cube étant strictement croissante sur $\\\\mathbb{R}$, elle conserve l'ordre.\n            Cela signifie que deux nombres réels  sont rangés dans le même ordre que leurs cubes.<br>\n            Autrement dit, si $a$ et $b$ sont deux nombres réels et si $a < b$, alors $a^3 < b^3$.<br>`\n            if (a < b)\n            { texteCorr += `Comme $${texNombrec(a)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(b)}$,\n            alors $${ecritureParentheseSiNegatif(a)}^3${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${ecritureParentheseSiNegatif(b)}^3$.` }\n            else\n            { texteCorr += `Comme $${texNombrec(b)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(a)}$, alors $${ecritureParentheseSiNegatif(b)}^3${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${ecritureParentheseSiNegatif(a)}^3$.` }\n    \n    \n            break\n            case 3 :\n                a = calcul(randint(0, 10) + (randint(6, 9) / 10))\n          b = calcul((a + (randint(1, 5, 0) / 10) * choice([-1, 1])))\n          if(b===1){b= 2}\n                if (this.interactif) {\n                  texte = 'Sélectionner l’affirmation correcte. '\n                  if (a < b) {\n                    this.autoCorrection[0] = {\n                      enonce: texte,\n                      options: { horizontal: true },\n                      propositions: [\n                        {\n                          texte: `$\\\\sqrt{${texNombrec(b)}}>\\\\sqrt{${texNombrec(a)}}$`,\n                          statut: true\n                        },\n                        {\n                          texte: `$\\\\sqrt{${texNombrec(a)}}>\\\\sqrt{${texNombrec(b)}}$`,\n                          statut: false\n                        }\n                      ]\n                    }\n                  } else {\n                    this.autoCorrection[0] = {\n                      enonce: texte,\n                      options: { horizontal: true },\n                      propositions: [\n                        {\n                          texte: `$\\\\sqrt{${texNombrec(b)}}<\\\\sqrt{${texNombrec(a)}}$`,\n                          statut: true\n                        },\n                        {\n                          texte: `$\\\\sqrt{${texNombrec(b)}}>\\\\sqrt{${texNombrec(a)}}$`,\n                          statut: false\n                        }\n                      ]\n                    }\n                  }\n        \n                  texte += propositionsQcm(this, 0).texte\n                } else {\n                  texte = `Comparer $\\\\sqrt{${texNombrec(a)}}$  et $\\\\sqrt{${texNombrec(b)}}$.`\n                }\n        \n                texteCorr = `                La fonction racine carrée étant strictement croissante sur $[0;+\\\\infty[$, elle conserve l'ordre. \n                Cela signifie que deux nombres réels positifs sont rangés dans le même ordre que leurs racines carrées.<br>\n                Autrement dit, si $a$ et $b$ sont deux nombres réels positifs et si $a < b$, alors $\\\\sqrt{a} < \\\\sqrt{b}$.<br>`\n                if (a < b) {\n                  texteCorr += ` Comme $${texNombrec(a)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(b)}$, alors \n                $\\\\sqrt{${texNombrec(a)}}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}\\\\sqrt{${texNombrec(b)}}$.`\n                } else {\n                  texteCorr += ` Comme $${texNombrec(b)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(a)}$, \n                alors $\\\\sqrt{${texNombrec(b)}}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}\\\\sqrt{${texNombrec(a)}}$.`\n                }\n        \n                break\n    }\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n}"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","dateDePublication","ecritureParentheseSiNegatif","a","maximumFractionDigits","result","Intl","NumberFormat","format","replace","ComparerAvecFctRef","texte","texteCorr","b","N","choice","randint","calcul","enonce","options","horizontal","propositions","texNombrec","statut","propositionsQcm","miseEnEvidence","listeQuestionsToContenu"],"sourceRoot":""}