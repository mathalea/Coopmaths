"use strict";(self.webpackChunkmathalea=self.webpackChunkmathalea||[]).push([[71058,17007],{71058:(e,r,o)=>{o.r(r),o.d(r,{titre:()=>s,default:()=>a});var t=o(17007),n=o(66170),i=o(30169),c=o(1870);const s="Re-Problèmes additifs et de comparaison sur les rationnels";function a(){let e;t.default.call(this),this.debug=!1,this.sup=1,this.video="",this.debug,this.nbQuestions=2,this.titre=s,this.consigne="Justifier vos réponses aux problèmes suivants.",this.nbCols=1,this.nbColsCorr=1,n.Do.isHtml?this.spacing=2:this.spacing=1.5,n.Do.isHtml?this.spacingCorr=3:this.spacingCorr=1.15,this.nouvelleVersion=function(){e=this.debug?[1,2,3,4,5]:[(0,i.q$q)([1,2]),(0,i.q$q)([3,4,5])];const r=(0,i.bqK)(e,this.nbQuestions);this.listeQuestions=[],this.listeCorrections=[];const o=[[40,2,20,4,10,5,8],[60,2,30,3,20,4,15,5,12,6,10],[80,2,40,4,20,5,16,8,10]];let t,n,s,a,$,l,u,f,d,m,p,x,F,b,h,g,v,q,C,P,j,D,M,R,Q=[],A=[];for(let e,H,E=0,L=[],k=0;E<this.nbQuestions&&k<50;){for(A=[],L=o[(0,i.nSR)(0,o.length-1)],q=(0,c.Pj)(1,2),C=(0,c.Pj)(1,2),P=(0,c.Pj)(1,2);q.num===C.num||q.num===P.num||C.num===P.num||q.superieurlarge((0,c.Pj)(1,2))||C.superieurlarge((0,c.Pj)(1,2));)x=(0,i.nSR)(1,6),h=(0,i.q$q)(L),F=(0,i.nSR)(2,10,x),g=(0,i.q$q)(L,h),b=h*g-x*g-F*h,v=h*g,q=(0,c.Pj)(x,h).simplifie(),C=(0,c.Pj)(F,g).simplifie(),P=(0,c.Pj)(b,v).simplifie();for(A.push({prenoms:[(0,i.nHh)()],fractions:[q,"VTT",C,"ski de fond",P,"pied"],enonce:"",question:"Pour quelle discipline, la distance est-elle la plus grande ?",correction:""});t===n||t===s||n===s;)t=(0,i.sTI)(),n=(0,i.sTI)(),s=(0,i.sTI)();A.push({prenoms:[],fractions:[q,t,C,n,P,s],enonce:"",question:"Qui a été élue ?",correction:""}),a=new Date,$=a.getFullYear(),A[0].enonce+="Le triathlon des neiges de la vallée des loups comprend trois épreuves qui s'enchaînent : VTT, ski de fond et course à pied.",A[0].enonce+=`<br>${A[0].prenoms[0]}, un passionné de cette épreuve, s'entraîne régulièrement sur le même circuit. `,A[0].enonce+=`<br>À chaque entraînement, il parcourt le circuit de la façon suivante : $${A[0].fractions[0].texFraction}$ à ${A[0].fractions[1]}, `,A[0].enonce+=`$${A[0].fractions[2].texFraction}$ à ${A[0].fractions[3]} et le reste à ${A[0].fractions[5]}.`,A[1].enonce=`À l'élection de Miss Math ${$}, ${A[1].fractions[1]} a remporté $${A[1].fractions[0].texFraction}$ des suffrages, `,A[1].enonce+=`${A[1].fractions[3]} $${A[1].fractions[2].texFraction}$ et `,A[1].enonce+=`${A[1].fractions[5]} tous les autres.`,l=(0,c.yy)(q,C,P),d=(0,i.E4t)(l.listeMemeDenominateur),m=(0,i.E4t)(l.listeRangeeMemeDenominateur),p=(0,i.E4t)(l.listeRangee),f=l.listeMemeDenominateur[0].den;for(let e=0;e<2;e++)A[e].correction="Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>",l.liste[0].den===l.liste[1].den?A[e].correction+="Les fractions de l'énoncé ont déjà le même dénominateur.<br>":(A[e].correction+="Réduisons les fractions de l'énoncé au même dénominateur :  ",A[e].correction+=`$${l.liste[0].texFraction}$ `,l.liste[0].den!==f?A[e].correction+=`$= ${l.listeMemeDenominateur[0].texFraction}$ et `:A[e].correction+=" et ",A[e].correction+=`$${l.liste[1].texFraction}$ `,l.liste[1].den!==f?A[e].correction+=`$= ${l.listeMemeDenominateur[1].texFraction}$.<br>`:A[e].correction+=".<br>");A[0].correction+="Calculons alors la distance à ",A[1].correction+="Calculons d'abord la fraction des suffrages remportés par ";for(let e=0;e<2;e++)A[e].correction+=`${A[e].fractions[5]} : <br>`,A[e].correction+=`$1-${A[e].fractions[0].texFraction}-${A[e].fractions[2].texFraction} = `,A[e].correction+=`${(0,c.Pj)(f,f).texFraction}-${l.listeMemeDenominateur[0].texFraction}-${l.listeMemeDenominateur[1].texFraction} = `,A[e].correction+=`\\dfrac{${f}-${l.listeMemeDenominateur[0].num}-${l.listeMemeDenominateur[1].num}}{${f}} = `,A[e].correction+=`${(0,c.Pj)(f-l.listeMemeDenominateur[0].num-l.listeMemeDenominateur[1].num,f).texFraction}`,f!==P.den?A[e].correction+=` = ${A[e].fractions[4].texFraction}$`:A[e].correction+="$";for(A[0].correction+=`<br>${A[0].prenoms[0]} fait donc $${A[0].fractions[0].texFraction}$ à ${A[0].fractions[1]}, `,A[0].correction+=`$${A[0].fractions[2].texFraction}$ à ${A[0].fractions[3]} et `,A[0].correction+=`$${A[0].fractions[4].texFraction}$ à ${A[0].fractions[5]}.`,A[0].correction+="<br> Avec les mêmes dénominateurs pour pouvoir comparer, ",A[0].correction+=`${A[0].prenoms[0]} fait donc $${d[0].texFraction}$ à ${A[0].fractions[1]}, `,A[0].correction+=`$${d[1].texFraction}$ à ${A[0].fractions[3]} et `,A[0].correction+=`$${d[2].texFraction}$ à ${A[0].fractions[5]}.`,q.egal(C)&&q.egal(P)?A[0].correction+=`<br> ${(0,i.PH8)(`Les trois fractions sont équivalentes, ${A[0].prenoms[0]} parcours donc la même distance dans les trois disciplines.`)}`:(A[0].correction+=`<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${m[0].texFraction}$, $${m[1].texFraction}$, $${m[2].texFraction}$.`,A[0].correction+=`<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${p[0].texFraction}$, $${p[1].texFraction}$, $${p[2].texFraction}$.`,A[0].correction+=`<br> ${(0,i.PH8)(`C'est donc à ${A[0].fractions[A[0].fractions.indexOf(p[2])+1]} que ${A[0].prenoms[0]} fait la plus grande distance.`)}`),A[1].correction+=`<br>${A[1].fractions[1]} a donc remporté $${A[1].fractions[0].texFraction}$, `,A[1].correction+=`${A[1].fractions[3]} a remporté $${A[1].fractions[2].texFraction}$ et `,A[1].correction+=`${A[1].fractions[5]} $${A[1].fractions[4].texFraction}$.`,A[1].correction+="<br> Avec les mêmes dénominateurs pour pouvoir comparer, ",A[1].correction+=`${A[1].fractions[1]} remporte donc $${d[0].texFraction}$, `,A[1].correction+=`${A[1].fractions[3]} $${d[1].texFraction}$ et `,A[1].correction+=`${A[1].fractions[5]} $${d[2].texFraction}$.`,q.egal(C)&&q.egal(P)?A[1].correction+=`<br> ${(0,i.PH8)("Les trois fractions sont équivalentes, les trois candidates ont donc remporté le même nombre de suffrages.")}`:(A[1].correction+=`<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${m[0].texFraction}$, $${m[1].texFraction}$, $${m[2].texFraction}$.`,A[1].correction+=`<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${p[0].texFraction}$, $${p[1].texFraction}$, $${p[2].texFraction}$.`,A[1].correction+=`<br> ${(0,i.PH8)(`C'est donc ${A[1].fractions[A[1].fractions.indexOf(p[2])+1]} qui a été élue.`)}`),Q=[],R=o[(0,i.nSR)(2,o.length-1)],q=(0,c.Pj)(1,3),C=(0,c.Pj)(1,3),P=(0,c.Pj)(1,3),j=(0,c.Pj)(1,3);q.num===C.num||q.num===P.num||q.num===j.num||C.num===P.num||C.num===j.num||P.num===j.num||q.superieurlarge((0,c.Pj)(1,3))||C.superieurlarge((0,c.Pj)(1,3))||P.superieurlarge((0,c.Pj)(1,3));)x=(0,i.nSR)(1,5),h=(0,i.q$q)(R),F=(0,i.nSR)(1,11,x),g=(0,i.q$q)(R),b=(0,i.nSR)(1,17,[x,F]),v=(0,i.q$q)(R),D=h*g*v-x*g*v-F*h*v-b*h*g,M=h*g*v,q=(0,c.Pj)(x,h).simplifie(),C=(0,c.Pj)(F,g).simplifie(),P=(0,c.Pj)(b,v).simplifie(),j=(0,c.Pj)(D,M).simplifie();Q.push({prenoms:[(0,i.rV2)()],fractions:[q,"carmin",C,"ocre jaune",P,"turquoise",j,"pourpre"],enonce:"",question:"Quelle est elle la couleur qui recouvre le plus de surface ?",correction:""}),Q.push({prenoms:[],fractions:[q,"la culture des légumes",C,"la culture des plantes aromatiques",P,"une serre servant aux semis",j,"la culture des fraisiers"],enonce:"",question:"Quelle est la culture qui occupe le plus de surface ?",correction:""}),Q.push({prenoms:[],fractions:[q,"le pays organisateur",C,"l'ensemble des supporters des deux équipes en jeu",P,"les sponsors et officiels",j,"les places en vente libre"],enonce:"",question:"Quelle est la catégorie la plus importante dans le stade ?",correction:""}),Q[0].enonce=`${Q[0].prenoms[0]} colorie un mandala selon les proportions suivantes :  $${Q[0].fractions[0].texFraction}$ en ${Q[0].fractions[1]}, `,Q[0].enonce+=`$${Q[0].fractions[2].texFraction}$ en  ${Q[0].fractions[3]}, `,Q[0].enonce+=`$${Q[0].fractions[4].texFraction}$ en  ${Q[0].fractions[5]} et `,Q[0].enonce+=`le reste en ${Q[0].fractions[7]}.`,Q[1].enonce=`Un jardin est aménagé selon les proportions suivantes :  $${Q[1].fractions[0].texFraction}$ par ${Q[1].fractions[1]}, `,Q[1].enonce+=`$${Q[1].fractions[2].texFraction}$ par  ${Q[1].fractions[3]}, `,Q[1].enonce+=`$${Q[1].fractions[4].texFraction}$ par  ${Q[1].fractions[5]} et `,Q[1].enonce+=`le reste par ${Q[1].fractions[7]}.`,Q[2].enonce=`Pour chaque match, les places du stade sont mises en vente dans les proportions suivantes :  $${Q[2].fractions[0].texFraction}$ pour ${Q[2].fractions[1]}, `,Q[2].enonce+=`$${Q[2].fractions[2].texFraction}$ pour  ${Q[2].fractions[3]}, `,Q[2].enonce+=`$${Q[2].fractions[4].texFraction}$ pour  ${Q[2].fractions[5]} et `,Q[2].enonce+=`le reste pour ${Q[2].fractions[7]}.`,u=(0,c.yy)(q,C,P,j),d=(0,i.E4t)(u.listeMemeDenominateur),m=(0,i.E4t)(u.listeRangeeMemeDenominateur),p=(0,i.E4t)(u.listeRangee),f=u.listeMemeDenominateur[0].den;for(let e=0;e<3;e++)Q[e].correction="Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>",u.liste[0].den===f&&u.liste[1].den===f&&u.liste[2].den===f?Q[e].correction+="Les fractions de l'énoncé ont déjà le même dénominateur.":(Q[e].correction+="Réduisons les fractions de l'énoncé au même dénominateur :  ",Q[e].correction+=`$${u.liste[0].texFraction}$ `,u.liste[0].den!==f?Q[e].correction+=`$= ${u.listeMemeDenominateur[0].texFraction}$ ; `:Q[e].correction+=" ; ",Q[e].correction+=`$${u.liste[1].texFraction}$ `,u.liste[1].den!==f?Q[e].correction+=`$= ${u.listeMemeDenominateur[1].texFraction}$ et `:Q[e].correction+=" et ",Q[e].correction+=`$${u.liste[2].texFraction}$ `,u.liste[2].den!==f?Q[e].correction+=`$= ${u.listeMemeDenominateur[2].texFraction}$.<br>`:Q[e].correction+=".<br>");Q[0].correction+="Calculons alors la fraction du mandala recouverte en ",Q[1].correction+="Calculons d'abord la fraction du jardin occupée par ",Q[2].correction+="Calculons d'abord la fraction du stade occupée par ";for(let e=0;e<3;e++)Q[e].correction+=`${Q[e].fractions[5]} : <br>`,Q[e].correction+=`$1-${Q[e].fractions[0].texFraction}-${Q[e].fractions[2].texFraction}-${Q[e].fractions[4].texFraction} = `,Q[e].correction+=`\\dfrac{${f}}{${f}}-${d[0].texFraction}-${d[1].texFraction}-${d[2].texFraction} = `,Q[e].correction+=`\\dfrac{${f}-${d[0].num}-${d[1].num}-${d[2].num}}{${f}} = `,Q[e].correction+=`${d[3].texFraction}`,d[3].den!==Q[e].fractions[6].den?Q[e].correction+=` = ${Q[e].fractions[6].texFraction}$`:Q[e].correction+="$";switch(Q[0].correction+=`<br>Le mandala est donc colorié de la façon suivante : $${Q[0].fractions[0].texFraction}$ en ${Q[0].fractions[1]}, `,Q[0].correction+=`$${Q[0].fractions[2].texFraction}$ en ${Q[0].fractions[3]}, `,Q[0].correction+=`$${Q[0].fractions[4].texFraction}$ en ${Q[0].fractions[5]} et `,Q[0].correction+=`$${Q[0].fractions[6].texFraction}$ en ${Q[0].fractions[7]}.`,Q[0].correction+="<br> Avec les mêmes dénominateurs pour pouvoir comparer, ",Q[0].correction+=`le mandala est donc colorié de la façon suivante : $${d[0].texFraction}$ en ${Q[0].fractions[1]}, `,Q[0].correction+=`$${d[1].texFraction}$ en ${Q[0].fractions[3]}, `,Q[0].correction+=`$${d[2].texFraction}$ en ${Q[0].fractions[5]} et `,Q[0].correction+=`$${d[3].texFraction}$ en ${Q[0].fractions[7]}.`,Q[0].fractions[0].egal(Q[0].fractions[2])&&Q[0].fractions[0].egal(Q[0].fractions[4])&&Q[0].fractions[0].egal(Q[0].fractions[6])?Q[0].correction+=`<br> ${(0,i.PH8)(`Les quatre fractions sont équivalentes, ${Q[0].prenoms[0]} colorie donc la même surface avec les quatre couleurs.`)}`:(Q[0].correction+=`<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${m[0].texFraction}$, $${m[1].texFraction}$, $${m[2].texFraction}$, $${m[3].texFraction}$.`,Q[0].correction+=`<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${p[0].texFraction}$, $${p[1].texFraction}$, $${p[2].texFraction}$, $${p[3].texFraction}$.`,Q[0].correction+=`<br> ${(0,i.PH8)(`C'est donc en ${Q[0].fractions[Q[0].fractions.indexOf(p[3])+1]} que le mandala est le plus recouvert.`)}`),Q[1].correction+=`<br>Le jardin est donc occupé de la façon suivante : $${Q[1].fractions[0].texFraction}$ par ${Q[1].fractions[1]}, `,Q[1].correction+=`$${Q[1].fractions[2].texFraction}$ par ${Q[1].fractions[3]}, `,Q[1].correction+=`$${Q[1].fractions[4].texFraction}$ par ${Q[1].fractions[5]} et `,Q[1].correction+=`$${Q[1].fractions[6].texFraction}$ par ${Q[1].fractions[7]}.`,Q[1].correction+="<br> Avec les mêmes dénominateurs pour pouvoir comparer, ",Q[1].correction+=`le jardin est donc occupé de la façon suivante : $${d[0].texFraction}$ par ${Q[1].fractions[1]}, `,Q[1].correction+=`$${d[1].texFraction}$ par ${Q[1].fractions[3]}, `,Q[1].correction+=`$${d[2].texFraction}$ par ${Q[1].fractions[5]} et `,Q[1].correction+=`$${d[3].texFraction}$ par ${Q[1].fractions[7]}.`,Q[1].fractions[0].egal(Q[1].fractions[2])&&Q[1].fractions[0].egal(Q[1].fractions[4])&&Q[1].fractions[0].egal(Q[1].fractions[6])?Q[1].correction+=`<br> ${(0,i.PH8)("Les quatre fractions sont équivalentes, la même surface du jardin est donc occupée par les quatre cultures.")}`:(Q[1].correction+=`<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${m[0].texFraction}$, $${m[1].texFraction}$, $${m[2].texFraction}$, $${m[3].texFraction}$.`,Q[1].correction+=`<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${p[0].texFraction}$, $${p[1].texFraction}$, $${p[2].texFraction}$, $${p[3].texFraction}$.`,Q[1].correction+=`<br> ${(0,i.PH8)(`C'est donc par ${Q[1].fractions[Q[1].fractions.indexOf(p[3])+1]}\n                     que le jardin est le plus occupé.`)}`),Q[2].correction+=`<br>Le stade est donc occupé de la façon suivante : $${Q[2].fractions[0].texFraction}$ pour ${Q[2].fractions[1]}, `,Q[2].correction+=`$${Q[2].fractions[2].texFraction}$ pour ${Q[2].fractions[3]}, `,Q[2].correction+=`$${Q[2].fractions[4].texFraction}$ pour ${Q[2].fractions[5]} et `,Q[2].correction+=`$${Q[2].fractions[6].texFraction}$ pour ${Q[2].fractions[7]}.`,Q[2].correction+="<br> Avec les mêmes dénominateurs pour pouvoir comparer, ",Q[2].correction+=`le stade est donc occupé de la façon suivante : $${d[0].texFraction}$ pour ${Q[2].fractions[1]}, `,Q[2].correction+=`$${d[1].texFraction}$ pour ${Q[2].fractions[3]}, `,Q[2].correction+=`$${d[2].texFraction}$ pour ${Q[2].fractions[5]} et `,Q[2].correction+=`$${d[3].texFraction}$ pour ${Q[2].fractions[7]}.`,Q[2].fractions[0].egal(Q[2].fractions[2])&&Q[2].fractions[0].egal(Q[2].fractions[4])&&Q[2].fractions[0].egal(Q[2].fractions[6])?Q[2].correction+=`<br> ${(0,i.PH8)("Les quatre fractions sont équivalentes, chaque catégorie a donc la même importance dans le stade.")}`:(Q[2].correction+=`<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${m[0].texFraction}$, $${m[1].texFraction}$, $${m[2].texFraction}$, $${m[3].texFraction}$.`,Q[2].correction+=`<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${p[0].texFraction}$, $${p[1].texFraction}$, $${p[2].texFraction}$, $${p[3].texFraction}$.`,Q[2].correction+=`<br> ${(0,i.PH8)(`C'est donc pour ${Q[2].fractions[Q[2].fractions.indexOf(p[3])+1]} que le nombre de places est le plus important.`)}`),r[E]){case 1:e=`${A[0].enonce} <br> ${A[0].question}`,this.debug?(e+="<br>",e+=`<br> ${A[0].correction}`,H=""):H=`${A[0].correction}`;break;case 2:e=`${A[1].enonce} <br> ${A[1].question}`,this.debug?(e+="<br>",e+=`<br> ${A[1].correction}`,H=""):H=`${A[1].correction}`;break;case 3:e=`${Q[0].enonce} <br> ${Q[0].question}`,this.debug?(e+="<br>",e+=`<br> ${Q[0].correction}`,H=""):H=`${Q[0].correction}`;break;case 4:e=`${Q[1].enonce} <br> ${Q[1].question}`,this.debug?(e+="<br>",e+=`<br> ${Q[1].correction}`,H=""):H=`${Q[1].correction}`;break;case 5:e=`${Q[2].enonce} <br> ${Q[2].question}`,this.debug?(e+="<br>",e+=`<br> ${Q[2].correction}`,H=""):H=`${Q[2].correction}`}-1===this.listeQuestions.indexOf(e)&&(this.listeQuestions.push(e),this.listeCorrections.push(H),E++),k++}(0,i.K1R)(this)}}},17007:(e,r,o)=>{function t(){this.titre="",this.boutonAide=!1,this.consigne="",this.consigneCorrection="",this.introduction="",this.listeQuestions=[],this.listeCorrections=[],this.contenu="",this.contenuCorrection="",this.autoCorrection=[],this.tableauSolutionsDuQcm=[],this.spacing=1,this.spacingCorr=1,this.pasDeVersionLatex=!1,this.listePackages=[],this.consigneModifiable=!0,this.nbQuestionsModifiable=!0,this.nbCols=1,this.nbColsCorr=1,this.nbColsModifiable=!0,this.nbColsCorrModifiable=!0,this.spacingModifiable=!0,this.spacingCorrModifiable=!0,this.beamer=!1,this.tailleDiaporama=50,this.nbQuestions=10,this.correctionDetailleeDisponible=!1,this.correctionDetaillee=!0,this.video="",this.interactif=!1,this.interactifObligatoire=!1,this.besoinFormulaireNumerique=!1,this.besoinFormulaireTexte=!1,this.besoinFormulaireCaseACocher=!1,this.besoinFormulaire2Numerique=!1,this.besoinFormulaire2Texte=!1,this.besoinFormulaire2CaseACocher=!1,this.besoinFormulaire3Numerique=!1,this.besoinFormulaire3Texte=!1,this.besoinFormulaire3CaseACocher=!1,this.mg32Editable=!1,this.listeArguments=[],this.nouvelleVersion=function(e){},this.questionJamaisPosee=function(e,...r){0===e&&(this.listeArguments=[]);let o="";for(const t of r)void 0!==t&&(o+=t.toString());return!(this.listeArguments.indexOf(o)>-1)&&(this.listeArguments.push(o),!0)}}o.r(r),o.d(r,{default:()=>t})}}]);
//# sourceMappingURL=71058.89b101658d11ac002b0b.js.map