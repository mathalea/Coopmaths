{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5A12-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Premier_ou_pas_5e","Exercice","this","consigne","sortieHtml","spacing","spacingCorr","nbQuestions","nbCols","nbColsCorr","sup","listePackages","nouvelleVersion","numeroExercice","type_de_questions","boutonAide","modalPdf","modalVideo","listeQuestions","listeCorrections","contenu","contenuCorrection","type_de_questions_disponibles","shuffle","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","string_rappel","cribleEratostheneN","k","length","introduction","warnMessage","texte","texteCorr","i","cpt","N","randint","nombre_avec_espace","texteEnCouleur_et_gras","sum3","toString","charAt","Number","sum9","r1","r2","prime1","prime2","r","tab_premiers_a_tester","indexOf","push","listeQuestionsToContenu","consigneCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable"],"mappings":"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","file":"js/8781.8cc50d8df02b661d5e2e.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,shuffle,combinaisonListesSansChangerOrdre,nombre_avec_espace,texteEnCouleur_et_gras,modalPdf,modalVideo,cribleEratostheneN,warnMessage} from '../../modules/outils.js'\n\nexport const titre = 'Primalité ou pas'\n\n/**\n * Justifier la non primalité réinvestissement des critères de divisibilité\n * Nombres à 3 ou 4 chiffres, un multiple de 2, de 3, de 5, de 7, de 9, de 10, sous forme d'un produit de deux nombres premiers inférieurs à 30\n * et un nombre premier inferieur à 529\n * 5A12-1\n * @author Sébastien Lozano\n */\nexport default function Premier_ou_pas_5e() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `Justifier que les nombres suivants sont premiers ou pas.`;\n\t//this.consigne += `<br>`;\t\n\tsortieHtml ? this.spacing = 3 : this.spacing = 2;\n\tsortieHtml ? this.spacingCorr = 2 : this.spacingCorr = 1;\n\tthis.nbQuestions = 7;\n\t//this.correctionDetailleeDisponible = true;\n\tthis.nbCols = 2;\n\tthis.nbColsCorr = 1;\n\tthis.sup = 1;\n\tthis.listePackages = `bclogo`;\n\n\tthis.nouvelleVersion = function (numeroExercice) {\n\t\tlet type_de_questions;\n\t\tif (sortieHtml) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.boutonAide = '';\n\t\t\tthis.boutonAide = modalPdf(numeroExercice, \"assets/pdf/FicheArithmetique-5A11.pdf\", \"Aide mémoire sur les nombres premiers (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\tthis.boutonAide += modalVideo('conteMathsNombresPremiers', '/videos/LesNombresPremiers.mp4', 'Petit conte mathématique - Les Nombres Premiers', 'Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenuCorrection = ''; // Liste de questions corrigées\n\n\t\tlet type_de_questions_disponibles = [1, 2, 3, 4, 5, 6, 7];\n\t\ttype_de_questions_disponibles = shuffle(type_de_questions_disponibles); // on mélange l'ordre des questions\n\n\t\t//let type_de_questions_disponibles = [1];\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(type_de_questions_disponibles, this.nbQuestions);\n\n\t\tlet string_rappel = `Cette liste des nombres premiers inférieurs à 30 pourra être utile : <br>` + cribleEratostheneN(100)[0];\n\t\tfor (let k = 1; k < cribleEratostheneN(30).length; k++) {\n\t\t\tstring_rappel += `, ` + cribleEratostheneN(30)[k];\n\t\t};\n\t\tstring_rappel += `.`;\n\t\tthis.introduction = warnMessage(string_rappel, `nombres`, `Coup de pouce`);\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\n\t\t\ttype_de_questions = listeTypeDeQuestions[i];\n\n\t\t\tvar N; // le nombre de la question\n\n\t\t\tswitch (type_de_questions) {\n\t\t\t\tcase 1: // nombre pair\n\t\t\t\t\tN = 2 * randint(51, 4999);\n\t\t\t\t\ttexte = nombre_avec_espace(N);\n\t\t\t\t\ttexteCorr = `Comme ${nombre_avec_espace(N)} est pair, il admet donc au moins trois diviseurs qui sont 1, 2 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleur_et_gras(nombre_avec_espace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // Multiple de 3\n\t\t\t\t\tlet sum3 = 0; // pour la valeur de la somme;\n\t\t\t\t\tN = 3 * randint(34, 3333); // on initialise avant la boucle car on a peut être de la chance\n\t\t\t\t\twhile ((N % 2 == 0) || (N % 5 == 0)) {\n\t\t\t\t\t\tN = 3 * randint(34, 3333);\n\t\t\t\t\t};\n\t\t\t\t\ttexte = nombre_avec_espace(N);\n\t\t\t\t\ttexteCorr = `Comme ` + N.toString().charAt(0);\n\t\t\t\t\tsum3 = Number(N.toString().charAt(0));\n\t\t\t\t\tfor (let k = 1; k < N.toString().length; k++) {\n\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\tsum3 += Number(N.toString().charAt(k));\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += ` = ${sum3} est un multiple de 3 donc ${nombre_avec_espace(N)} aussi, il admet donc au moins trois diviseurs qui sont 1, 3 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleur_et_gras(nombre_avec_espace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // Multiple de 5\n\t\t\t\t\tN = 5 * randint(20, 1999);\n\t\t\t\t\ttexte = nombre_avec_espace(N);\n\t\t\t\t\ttexteCorr = `Comme le dernier chiffre de ${nombre_avec_espace(N)} est un ${N.toString().charAt(N.toString().length - 1)} alors ${nombre_avec_espace(N)} est divisible par 5, `;\n\t\t\t\t\ttexteCorr += `il admet donc au moins trois diviseurs qui sont 1, 5 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleur_et_gras(nombre_avec_espace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4: // Multiple de 9\n\t\t\t\t\tlet sum9 = 0; // pour la valeur de la somme;\n\t\t\t\t\tN = 9 * randint(12, 1111); // on initialise avant la boucle car on a peut être de la chance\n\t\t\t\t\twhile ((N % 2 == 0) || (N % 5 == 0)) {\n\t\t\t\t\t\tN = 9 * randint(34, 3333);\n\t\t\t\t\t};\n\t\t\t\t\ttexte = nombre_avec_espace(N);\n\t\t\t\t\ttexteCorr = `Comme ` + N.toString().charAt(0);\n\t\t\t\t\tsum9 = Number(N.toString().charAt(0));\n\t\t\t\t\tfor (let k = 1; k < N.toString().length; k++) {\n\t\t\t\t\t\ttexteCorr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\tsum9 += Number(N.toString().charAt(k));\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += ` = ${sum9} est un multiple de 9 donc ${nombre_avec_espace(N)} aussi, il admet donc au moins trois diviseurs qui sont 1, 9 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleur_et_gras(nombre_avec_espace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5: // multiple de 10\n\t\t\t\t\tN = 10 * randint(10, 999);\n\t\t\t\t\ttexte = nombre_avec_espace(N);\n\t\t\t\t\ttexteCorr = `Comme le nombre ${nombre_avec_espace(N)} se termine par un ${N.toString().charAt(N.toString().length - 1)} alors ${nombre_avec_espace(N)} est un multiple de 10, `;\n\t\t\t\t\ttexteCorr += `il admet donc au moins trois diviseurs qui sont 1, 10 et lui-même, `;\n\t\t\t\t\ttexteCorr += texteEnCouleur_et_gras(nombre_avec_espace(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6: // produit de deux nombres premiers inférieurs à 30\n\t\t\t\t\t// rang du premier facteur premier\n\t\t\t\t\tlet r1 = randint(0, cribleEratostheneN(30).length - 1);\n\t\t\t\t\t// rang du second facteur premier\n\t\t\t\t\tlet r2 = randint(0, cribleEratostheneN(30).length - 1);\n\t\t\t\t\tlet prime1 = cribleEratostheneN(100)[r1]; // on tire un nombre premier inférieur à 100, il n'y en a que 25!\n\t\t\t\t\tlet prime2 = cribleEratostheneN(100)[r2]; // on tire un autre nombre premier inférieur à 100, ça peut être le même qu'avant!\n\t\t\t\t\tN = prime1 + `$\\\\times $` + prime2;\n\t\t\t\t\ttexte = N;\n\t\t\t\t\ttexteCorr = `${N} est le produit de ${prime1} et de ${prime2}, il admet donc au moins `;\n\t\t\t\t\tif (prime1 == prime2) {\n\t\t\t\t\t\ttexteCorr += `trois divisieurs qui sont 1, ${prime1} et lui-même ${N}=${nombre_avec_espace(prime1 * prime2)} `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += `quatre diviseurs qui sont 1, ${prime1}, ${prime2} et lui-même ${N}=${nombre_avec_espace(prime1 * prime2)}, `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += texteEnCouleur_et_gras(`${N} = ` + nombre_avec_espace(prime1 * prime2) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7: // nombre premier inférieur à 29\n\t\t\t\t\t// rang du nombre premier choisi\n\t\t\t\t\tlet r = randint(0, cribleEratostheneN(29).length - 1);\n\t\t\t\t\tN = cribleEratostheneN(29)[r]; //on choisit un nombre premier inférieur à 529\n\t\t\t\t\ttexte = N + ``;\n\t\t\t\t\tlet tab_premiers_a_tester = cribleEratostheneN(N);\n\t\t\t\t\t//texteCorr = `Testons la divisibilité de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexteCorr = `En effectuant la division euclidienne de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexteCorr += tab_premiers_a_tester[0];\n\t\t\t\t\tfor (let k = 1; k < tab_premiers_a_tester.length; k++) {\n\t\t\t\t\t\ttexteCorr += `, ` + tab_premiers_a_tester[k];\n\t\t\t\t\t};\n\t\t\t\t\t//texteCorr += `.`;\n\t\t\t\t\t// texteCorr += `<br> Aucun de ces nombres premiers ne divise ${N}, `;\n\t\t\t\t\ttexteCorr += `, le reste n'est jamais nul.`;\n\t\t\t\t\t// texteCorr += texteEnCouleur_et_gras(nombre_avec_espace(N) + ` est donc un nombre premier.`);\n\t\t\t\t\ttexteCorr += `<br>` + texteEnCouleur_et_gras(nombre_avec_espace(N) + ` est donc un nombre premier.`);\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\tlisteQuestionsToContenu(this);\n\t};\n\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}