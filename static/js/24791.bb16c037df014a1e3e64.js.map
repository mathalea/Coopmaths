{"version":3,"file":"js/24791.bb16c037df014a1e3e64.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/_choisirExpressionNumerique.js"],"sourcesContent":["import { randint, arrondi, calcul, texNombrec, nombreAvecEspace } from '../../modules/outils.js'\n\n/**\n * Chosis aléatoirement une expressions numérique parmi de nombreuses variantes.\n * @param {number} nbOperations fixe la complexité de l'expression à retourner\n * @param {number} decimal 1 si on veut des entiers, 10, 100, 1000 selon le nombre de chiffres après la virgule qu'on veut\n * retourne\n * * l'expression en français commençant par une majuscule sans point final\n * * l'expression en mode maths LaTex\n * * Le détaillé du calcul en mode maths LaTex\n * @author Jean-Claude Lhote\n * Fonction utilisée dans plusieurs exercices.\n */\nexport default function choisirExpressionNumerique (nbOperations, decimal, timesOn = true) {\n  let expf; let expn; let expc; const arrondir = Math.log10(decimal)\n  let a = arrondi(randint(2 * decimal, 10 * decimal) / decimal, arrondir)\n  let b = arrondi(randint(2 * decimal, 10 * decimal, [a * decimal]) / decimal, arrondir)\n  let c = arrondi(randint(2 * decimal, 10 * decimal) / decimal, arrondir)\n  const d = arrondi(randint(2 * decimal, 10 * decimal, [c * decimal]) / decimal, arrondir)\n  const e = arrondi(randint(2 * decimal, 10 * decimal) / decimal, arrondir)\n  let souscas\n  let signex = ''\n  if (timesOn) { signex = ' \\\\times' }\n  switch (nbOperations) {\n    case 1: // expressions de base (1 opération)\n      souscas = randint(0, 3)\n      switch (souscas) {\n        case 0: // somme de deux nombres\n          expf = `La somme de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)}`\n          expn = `$${texNombrec(a)}+${texNombrec(b)}$`\n          expc = `$${texNombrec(a)}+${texNombrec(b)} = ${texNombrec(a + b)}$`\n          break\n        case 1: // différence de deux nombres\n          if (a < b) { a = a + b }\n          expf = `La différence de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)}`\n          expn = `$${texNombrec(a)}-${texNombrec(b)}$`\n          expc = `$${texNombrec(a)}-${texNombrec(b)} = ${texNombrec(a - b)}$`\n          break\n        case 2: // produit de deux nombres\n          expf = `Le produit de ${nombreAvecEspace(a)} par ${nombreAvecEspace(b)}`\n          expn = `$${texNombrec(a)} \\\\times ${texNombrec(b)}$`\n          expc = `$${texNombrec(a)} \\\\times ${texNombrec(b)} = ${texNombrec(a * b)}$`\n          break\n        case 3: // quotient de deux nombres\n          a = calcul(Math.round(a) * b)\n          expf = `Le quotient de ${nombreAvecEspace(a)} par ${nombreAvecEspace(b)}`\n          expn = `$${texNombrec(a)} \\\\div ${texNombrec(b)}$`\n          expc = `$${texNombrec(a)} \\\\div ${texNombrec(b)} = ${texNombrec(a / b)}$`\n          break\n      }\n      break\n    case 2: // expressions de niveau 1 (2 opérations)\n      souscas = randint(0, 9)\n      switch (souscas) {\n        case 0: // a(b+c)\n          expf = `Le produit de ${nombreAvecEspace(a)} par la somme de ${nombreAvecEspace(b)} et ${nombreAvecEspace(c)}`\n          expn = `$${texNombrec(a)}${signex}(${texNombrec(b)}+${texNombrec(c)})$`\n          expc = `$${texNombrec(a)}${signex}(${texNombrec(b)}+${texNombrec(c)}) = ${texNombrec(a)} \\\\times ${texNombrec(b + c)}=${texNombrec(a * (b + c))}$`\n          break\n        case 1: // a(b-c)\n          if (b <= c) { b = calcul(b + c) } // b-c positif\n          expf = `Le produit de ${nombreAvecEspace(a)} par la différence de ${nombreAvecEspace(b)} et ${nombreAvecEspace(c)}`\n          expn = `$${texNombrec(a)}${signex}(${texNombrec(b)}-${texNombrec(c)})$`\n          expc = `$${texNombrec(a)}${signex}(${texNombrec(b)}-${texNombrec(c)}) = ${texNombrec(a)} \\\\times ${texNombrec(b - c)}=${texNombrec(a * (b - c))}$`\n          break\n        case 2: // a/(b+c)\n          a = calcul(a * (b + c)) // on s'assure que le quotient tombe juste...\n          expf = `Le quotient de ${nombreAvecEspace(a)} par la somme de ${nombreAvecEspace(b)} et ${nombreAvecEspace(c)}`\n          expn = `$${texNombrec(a)} \\\\div (${texNombrec(b)}+${texNombrec(c)})$ ou $\\\\dfrac{${texNombrec(a)}}{${texNombrec(b)}+${texNombrec(c)}}$`\n          expc = `$${texNombrec(a)} \\\\div (${texNombrec(b)}+${texNombrec(c)}) = ${texNombrec(a)} \\\\div ${texNombrec(b + c)}=${texNombrec(a / (b + c))}$`\n          break\n        case 3: // a/(b-c)\n          if (b <= c) { b = calcul(b + c) } // b-c positif\n          a = calcul(a * (b - c)) // on s'assure que le quotient tombe juste\n          expf = `Le quotient de ${nombreAvecEspace(a)} par la différence de ${nombreAvecEspace(b)} et ${nombreAvecEspace(c)}`\n          expn = `$${texNombrec(a)} \\\\div (${texNombrec(b)}-${texNombrec(c)})$ ou $\\\\dfrac{${texNombrec(a)}}{${texNombrec(b)}-${texNombrec(c)}}$`\n          expc = `$${texNombrec(a)} \\\\div (${texNombrec(b)}-${texNombrec(c)}) = ${texNombrec(a)} \\\\div ${texNombrec(b - c)}=${texNombrec(a / (b - c))}$`\n          break\n        case 4: // (a+b)/c\n          a = calcul(a * c)\n          b = calcul(b * c) // on s'assure que le quotient tombe juste\n          expf = `Le quotient de la somme de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par ${nombreAvecEspace(c)}`\n          expn = `$(${texNombrec(a)}+${texNombrec(b)}) \\\\div ${texNombrec(c)}$ ou $\\\\dfrac{${texNombrec(a)}+${texNombrec(b)}}{${texNombrec(c)}}$`\n          expc = `$(${texNombrec(a)}+${texNombrec(b)}) \\\\div ${texNombrec(c)} = ${texNombrec(a + b)} \\\\div ${texNombrec(c)}=${texNombrec((a + b) / c)}$`\n          break\n        case 5: // (a-b)/c\n          if (a <= b) { a = calcul(a + b) } // a-b positif\n          a = calcul(a * c)\n          b = calcul(b * c) // on s'assure que le quotient tombe juste\n          expf = `Le quotient de la différence de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par ${nombreAvecEspace(c)}`\n          expn = `$(${texNombrec(a)}-${texNombrec(b)}) \\\\div ${texNombrec(c)}$ ou $\\\\dfrac{${texNombrec(a)}-${texNombrec(b)}}{${texNombrec(c)}}$`\n          expc = `$(${texNombrec(a)}-${texNombrec(b)}) \\\\div ${texNombrec(c)} = ${texNombrec(a - b)} \\\\div ${texNombrec(c)}=${texNombrec((a - b) / c)}$`\n          break\n        case 6: // a + bc\n          expf = `La somme de ${nombreAvecEspace(a)} et du produit de ${nombreAvecEspace(b)} et $${nombreAvecEspace(c)}$`\n          expn = `$${texNombrec(a)}+${texNombrec(b)} \\\\times ${texNombrec(c)}$`\n          expc = `$${texNombrec(a)}+${texNombrec(b)} \\\\times ${texNombrec(c)}=${texNombrec(a)}+${texNombrec(b * c)} = ${texNombrec(a + (b * c))}$`\n          break\n        case 7: // a - bc\n          a = calcul(a + b * c)\n          expf = `La différence entre ${nombreAvecEspace(a)} et le produit de ${nombreAvecEspace(b)} et $${texNombrec(c)}$`\n          expn = `$${texNombrec(a)}-${texNombrec(b)} \\\\times ${texNombrec(c)}$`\n          expc = `$${texNombrec(a)}-${texNombrec(b)} \\\\times ${texNombrec(c)}=${texNombrec(a)}-${texNombrec(b * c)} = ${texNombrec(a - (b * c))}$`\n          break\n        case 8: // a + b/c\n          b = calcul(b * c)\n          expf = `La somme de ${nombreAvecEspace(a)} et du quotient de ${nombreAvecEspace(b)} par $${texNombrec(c)}$`\n          expn = `$${texNombrec(a)}+${texNombrec(b)} \\\\div ${texNombrec(c)}$ ou $${texNombrec(a)}+\\\\dfrac{${texNombrec(b)}}{${texNombrec(c)}}$`\n          expc = `$${texNombrec(a)}+${texNombrec(b)} \\\\div ${texNombrec(c)}=${texNombrec(a)}+${texNombrec(b / c)} = ${texNombrec(a + (b / c))}$`\n          break\n        case 9: // a - b/c\n          a = calcul(a + b)\n          b = calcul(b * c)\n          expf = `La différence entre ${nombreAvecEspace(a)} et le quotient de ${nombreAvecEspace(b)} par $${texNombrec(c)}$`\n          expn = `$${texNombrec(a)}-${texNombrec(b)} \\\\div ${texNombrec(c)}$ ou $${texNombrec(a)}-\\\\dfrac{${texNombrec(b)}}{${texNombrec(c)}}$`\n          expc = `$${texNombrec(a)}-${texNombrec(b)} \\\\div ${texNombrec(c)}=${texNombrec(a)}-${texNombrec(b / c)} = ${texNombrec(a - (b / c))}$`\n          break\n      }\n      break\n    case 3: // expressions de niveau 2 (3 opérations)\n      souscas = randint(0, 13)\n      switch (souscas) {\n        case 0: // (a+b)(c+d)\n          expf = `Le produit de la somme de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par la somme de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$(${texNombrec(a)}+${texNombrec(b)})${signex}(${texNombrec(c)}+${texNombrec(d)})$`\n          expc = `$(${texNombrec(a)}+${texNombrec(b)})${signex}(${texNombrec(c)}+${texNombrec(d)}) = ${texNombrec(a + b)} \\\\times ${texNombrec(c + d)} = ${texNombrec((a + b) * (c + d))}$`\n          break\n        case 1: // (a+b)(c-d)\n          if (c <= d) { c = calcul(c + d) }\n          expf = `Le produit de la somme de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par la différence de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$(${texNombrec(a)}+${texNombrec(b)})${signex}(${texNombrec(c)}-${texNombrec(d)})$`\n          expc = `$(${texNombrec(a)}+${texNombrec(b)})${signex}(${texNombrec(c)}-${texNombrec(d)}) = ${texNombrec(a + b)} \\\\times ${texNombrec(c - d)} = ${texNombrec((a + b) * (c - d))}$`\n          break\n        case 2: // (a-b)(c+d)\n          if (a <= b) { a = calcul(a + b) }\n          expf = `Le produit de la différence de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par la somme de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$(${texNombrec(a)}-${texNombrec(b)})${signex}(${texNombrec(c)}+${texNombrec(d)})$`\n          expc = `$(${texNombrec(a)}-${texNombrec(b)})${signex}(${texNombrec(c)}+${texNombrec(d)}) = ${texNombrec(a - b)} \\\\times ${texNombrec(c + d)} = ${texNombrec((a - b) * (c + d))}$`\n          break\n        case 3: // (a-b)(c-d)\n          if (a <= b) { a = calcul(a + b) }\n          if (c <= d) { c = calcul(c + d) }\n          expf = `Le produit de la différence de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par la différence de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$(${texNombrec(a)}-${texNombrec(b)})${signex}(${texNombrec(c)}-${texNombrec(d)})$`\n          expc = `$(${texNombrec(a)}-${texNombrec(b)})${signex}(${texNombrec(c)}-${texNombrec(d)}) = ${texNombrec(a - b)} \\\\times ${texNombrec(c - d)} = ${texNombrec((a - b) * (c - d))}$`\n          break\n        case 4: // (a+b)/(c+d)\n          a = calcul(a * (c + d))\n          b = calcul(b * (c + d))\n          expf = `Le quotient de la somme de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par la somme de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$(${texNombrec(a)}+${texNombrec(b)}) \\\\div (${texNombrec(c)}+${texNombrec(d)})$ ou $\\\\dfrac{${texNombrec(a)}+${texNombrec(b)}}{${texNombrec(c)}+${texNombrec(d)}}$`\n          expc = `$(${texNombrec(a)}+${texNombrec(b)}) \\\\div (${texNombrec(c)}+${texNombrec(d)}) = ${texNombrec(a + b)} \\\\div ${texNombrec(c + d)} = ${texNombrec((a + b) / (c + d))}$`\n          break\n        case 5: // (a-b)/(c+d)\n          a = calcul(a * (c + d))\n          b = calcul(b * (c + d))\n          if (a <= b) { a = calcul(a + b) }\n          expf = `Le quotient de la différence de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par la somme de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$(${texNombrec(a)}-${texNombrec(b)}) \\\\div (${texNombrec(c)}+${texNombrec(d)})$ ou $\\\\dfrac{${texNombrec(a)}-${texNombrec(b)}}{${texNombrec(c)}+${texNombrec(d)}}$`\n          expc = `$(${texNombrec(a)}-${texNombrec(b)}) \\\\div (${texNombrec(c)}+${texNombrec(d)}) = ${texNombrec(a - b)} \\\\div ${texNombrec(c + d)} = ${texNombrec((a - b) / (c + d))}$`\n          break\n        case 6: // (a+b)/(c-d)\n          if (c <= d) { c = calcul(c + d) }\n          a = calcul(a * (c - d))\n          b = calcul(b * (c - d))\n          expf = `Le quotient de la somme de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par la différence de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$(${texNombrec(a)}+${texNombrec(b)}) \\\\div (${texNombrec(c)}-${texNombrec(d)})$ ou $\\\\dfrac{${texNombrec(a)}+${texNombrec(b)}}{${texNombrec(c)}-${texNombrec(d)}}$`\n          expc = `$(${texNombrec(a)}+${texNombrec(b)}) \\\\div (${texNombrec(c)}-${texNombrec(d)}) = ${texNombrec(a + b)} \\\\div ${texNombrec(c - d)} = ${texNombrec((a + b) / (c - d))}$`\n          break\n        case 7: // (a-b)/(c-d)\n          if (c <= d) { c = calcul(c + d) }\n          if (a <= b) { a = calcul(a + b) }\n          a = calcul(a * (c - d))\n          b = calcul(b * (c - d))\n          expf = `Le quotient de la différence de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par la différence de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$(${texNombrec(a)}-${texNombrec(b)}) \\\\div (${texNombrec(c)}-${texNombrec(d)})$ ou $\\\\dfrac{${texNombrec(a)}-${texNombrec(b)}}{${texNombrec(c)}-${texNombrec(d)}}$`\n          expc = `$(${texNombrec(a)}-${texNombrec(b)}) \\\\div (${texNombrec(c)}-${texNombrec(d)}) = ${texNombrec(a - b)} \\\\div ${texNombrec(c - d)} = ${texNombrec((a - b) / (c - d))}$`\n          break\n        case 8: // ab+cd\n          expf = `La somme du produit de ${nombreAvecEspace(a)} par ${nombreAvecEspace(b)} et du produit de ${nombreAvecEspace(c)} par ${nombreAvecEspace(d)}`\n          expn = `$${texNombrec(a)} \\\\times ${texNombrec(b)}+${texNombrec(c)} \\\\times ${texNombrec(d)}$`\n          expc = `$${texNombrec(a)} \\\\times ${texNombrec(b)}+${texNombrec(c)} \\\\times ${texNombrec(d)} = ${texNombrec(a * b)}+${texNombrec(c * d)} = ${texNombrec(a * b + c * d)}$`\n          break\n        case 9: // ab-cd\n          if (a * b < d * c) { a = calcul(a + c) }\n          if (a * b < d * c) { b = calcul(b + d) }\n          expf = `La différence du produit de ${nombreAvecEspace(a)} par ${nombreAvecEspace(b)} et du produit de ${nombreAvecEspace(c)} par ${nombreAvecEspace(d)}`\n          expn = `$${texNombrec(a)} \\\\times ${texNombrec(b)}-${texNombrec(c)} \\\\times ${texNombrec(d)}$`\n          expc = `$${texNombrec(a)} \\\\times ${texNombrec(b)}-${texNombrec(c)} \\\\times ${texNombrec(d)} = ${texNombrec(a * b)}-${texNombrec(c * d)} = ${texNombrec(a * b - c * d)}$`\n          break\n        case 10: // ab+c/d\n          c = calcul(c * d)\n          expf = `La somme du produit de ${nombreAvecEspace(a)} par ${nombreAvecEspace(b)} et du quotient de ${nombreAvecEspace(c)} par ${nombreAvecEspace(d)}`\n          expn = `$${texNombrec(a)} \\\\times ${texNombrec(b)}+${texNombrec(c)} \\\\div ${texNombrec(d)}$ ou $${texNombrec(a)} \\\\times ${texNombrec(b)}+\\\\dfrac{${texNombrec(c)}}{${texNombrec(d)}}$`\n          expc = `$${texNombrec(a)} \\\\times ${texNombrec(b)}+${texNombrec(c)} \\\\div ${texNombrec(d)} = ${texNombrec(a * b)}+${texNombrec(c / d)} = ${texNombrec(a * b + c / d)}$`\n          break\n        case 11: // ab-c/d\n          c = c * d\n          if (a * b < c / d) { a = calcul(a * c) }\n          if (a * b < c / d) { b = calcul(b * c) }\n          expf = `La différence du produit de ${nombreAvecEspace(a)} par ${nombreAvecEspace(b)} et du quotient de ${nombreAvecEspace(c)} par ${nombreAvecEspace(d)}`\n          expn = `$${texNombrec(a)} \\\\times ${texNombrec(b)}-${texNombrec(c)} \\\\div ${texNombrec(d)}$ ou $${texNombrec(a)} \\\\times ${texNombrec(b)}-\\\\dfrac{${texNombrec(c)}}{${texNombrec(d)}}$`\n          expc = `$${texNombrec(a)} \\\\times ${texNombrec(b)}-${texNombrec(c)} \\\\div ${texNombrec(d)} = ${texNombrec(a * b)}-${texNombrec(c / d)} = ${texNombrec(a * b - c / d)}$`\n          break\n        case 12: // a/b+c/d\n          a = calcul(a * b)\n          c = calcul(c * d)\n          expf = `La somme du quotient de ${nombreAvecEspace(a)} par ${nombreAvecEspace(b)} et du quotient de ${nombreAvecEspace(c)} par ${nombreAvecEspace(d)}`\n          expn = `$${texNombrec(a)} \\\\div ${texNombrec(b)}+${texNombrec(c)} \\\\div ${texNombrec(d)}$ ou $\\\\dfrac{${texNombrec(a)}}{${texNombrec(b)}}+\\\\dfrac{${texNombrec(c)}}{${texNombrec(d)}}$`\n          expc = `$${texNombrec(a)} \\\\div ${texNombrec(b)}+${texNombrec(c)} \\\\div ${texNombrec(d)} = ${texNombrec(a / b)}+${texNombrec(c / d)} = ${texNombrec(a / b + c / d)}$`\n          break\n        case 13: // a/b-c/d\n          a = calcul(a * b)\n          c = calcul(c * d)\n          if (a / b < c / d) { a = calcul(a * c) }\n          if (a / c < c / d) { a = calcul(a * d) }\n          expf = `La différence du quotient de ${nombreAvecEspace(a)} par ${nombreAvecEspace(b)} et du quotient de ${nombreAvecEspace(c)} par ${nombreAvecEspace(d)}`\n          expn = `$${texNombrec(a)} \\\\div ${texNombrec(b)}-${texNombrec(c)} \\\\div ${texNombrec(d)}$ ou $\\\\dfrac{${texNombrec(a)}}{${texNombrec(b)}}-\\\\dfrac{${texNombrec(c)}}{${texNombrec(d)}}$`\n          expc = `$${texNombrec(a)} \\\\div ${texNombrec(b)}-${texNombrec(c)} \\\\div ${texNombrec(d)} = ${texNombrec(a / b)}-${texNombrec(c / d)} = ${texNombrec(a / b - c / d)}$`\n          break\n      }\n      break\n    case 5: // expressions complexes\n      souscas = randint(0, 5)\n      switch (souscas) {\n        case 0: // 2(a+bc)\n          expf = `Le double de la somme de ${nombreAvecEspace(a)} et du produit de ${nombreAvecEspace(b)} par ${nombreAvecEspace(c)}`\n          expn = `$2${signex}(${texNombrec(a)}+${texNombrec(b)} \\\\times ${texNombrec(c)})$`\n          expc = `$2${signex}(${texNombrec(a)}+${texNombrec(b)} \\\\times ${texNombrec(c)}) = 2${signex}(${texNombrec(a)}+${texNombrec(b * c)}) = 2 \\\\times  ${texNombrec(a + b * c)}$`\n          break\n        case 1: // 3(a+b)/c\n          a = calcul(a * c)\n          b = calcul(b * c)\n          expf = `Le triple du quotient de la somme de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par ${nombreAvecEspace(c)}`\n          expn = `$3${signex}(${texNombrec(a)}+${texNombrec(b)}) \\\\div ${texNombrec(c)}$ ou $3 \\\\times \\\\dfrac{${texNombrec(a)}+${texNombrec(b)}}{${texNombrec(c)}}$`\n          expc = `$3${signex}(${texNombrec(a)}+${texNombrec(b)}) \\\\div ${texNombrec(c)} = 3 \\\\times  ${texNombrec(a + b)} \\\\div ${texNombrec(c)} = ${texNombrec(3 * (a + b))} \\\\div ${texNombrec(c)} = ${texNombrec(3 * (a + b) / c)}$`\n          break\n        case 2: // (a-b)/3\n          if (a <= b) { a = calcul(a + b) }\n          a = calcul(3 * a)\n          b = calcul(3 * b)\n          expf = `Le tiers de la différence de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)}`\n          expn = `$(${texNombrec(a)}-${texNombrec(b)}) \\\\div  3$ ou $\\\\dfrac{${texNombrec(a)}-${texNombrec(b)}}{3}$`\n          expc = `$(${texNombrec(a)}-${texNombrec(b)}) \\\\div  3 = ${texNombrec(a - b)} \\\\div  3 = ${texNombrec((a - b) / 3)}$`\n          break\n        case 3: // (a-b)/3*2(c+d)\n          if (a <= b) { a = calcul(a + b) }\n          a = calcul(3 * a)\n          b = calcul(3 * b)\n          expf = `Le produit du tiers de la différence de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par le double de la somme de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$\\\\left((${texNombrec(a)}-${texNombrec(b)}) \\\\div  3\\\\right) \\\\times  2${signex}(${texNombrec(c)}+${texNombrec(d)})$`\n          expc = `$\\\\left((${texNombrec(a)}-${texNombrec(b)}) \\\\div  3\\\\right) \\\\times  2${signex}(${texNombrec(c)}+${texNombrec(d)}) = ${texNombrec(a - b)} \\\\div  3  \\\\times  2  \\\\times ${texNombrec(c + d)} = ${texNombrec((a - b) / 3)}  \\\\times  2  \\\\times  ${texNombrec(c + d)} =  ${texNombrec(2 * (a - b) / 3)}  \\\\times  ${texNombrec(c + d)} = ${texNombrec(2 * (c + d) * (a - b) / 3)}$`\n          break\n        case 4: // 3(a+b)-2(c+d)\n          if (3 * (a + b) < 2 * (c + d)) { a = calcul(a + c + d) }\n          expf = `La différence du triple de la somme de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} et du double de la somme de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$3${signex}(${texNombrec(a)}+${texNombrec(b)})-2${signex}(${texNombrec(c)}+${texNombrec(d)})$`\n          expc = `$3${signex}(${texNombrec(a)}+${texNombrec(b)})-2${signex}(${texNombrec(c)}+${texNombrec(d)}) = 3  \\\\times  ${texNombrec(a + b)} - 2  \\\\times  ${texNombrec(c + d)} = ${texNombrec(3 * (a + b))} - ${texNombrec(2 * (c + d))} = ${texNombrec(3 * (a + b) - 2 * (c + d))}$`\n          break\n        case 5: // 2(a-b)+3(c+d)\n          if (a <= b) { a = calcul(a + b) }\n          expf = `La somme du double de la différence de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} et du triple de la somme de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)}`\n          expn = `$2${signex}(${texNombrec(a)}-${texNombrec(b)})+3${signex}(${texNombrec(c)}+${texNombrec(d)})$`\n          expc = `$2${signex}(${texNombrec(a)}-${texNombrec(b)})+3${signex}(${texNombrec(c)}+${texNombrec(d)}) = 2  \\\\times  ${texNombrec(a - b)} + 3  \\\\times  ${texNombrec(c + d)} = ${texNombrec(2 * (a - b))} + ${texNombrec(3 * (c + d))} = ${texNombrec(2 * (a - b) + 3 * (c + d))}$`\n          break\n      }\n      break\n    case 4: // 4 opérations\n      souscas = randint(1, 3)\n      switch (souscas) {\n        case 1: // (a+b)/(c(d+e))\n          a = calcul(a * c * (d + e))\n          b = calcul(b * c * (d + e))\n          expf = `Le quotient de la somme de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par le produit de ${nombreAvecEspace(c)} par la somme de ${nombreAvecEspace(d)} et ${nombreAvecEspace(e)}`\n          expn = `$(${texNombrec(a)}+${texNombrec(b)}) \\\\div (${texNombrec(c)}${signex}(${texNombrec(d)}+${texNombrec(e)}))$ ou $\\\\dfrac{${texNombrec(a)}+${texNombrec(b)}}{${texNombrec(c)}${signex}(${texNombrec(d)}+${texNombrec(e)})}$`\n          expc = `$(${texNombrec(a)}+${texNombrec(b)}) \\\\div (${texNombrec(c)}${signex}(${texNombrec(d)}+${texNombrec(e)})) = ${texNombrec(a + b)}  \\\\div  (${texNombrec(c)}  \\\\times  ${texNombrec(d + e)}) = ${texNombrec(a + b)}  \\\\div  ${texNombrec(c * (d + e))} = ${texNombrec((a + b) / (c * (d + e)))}$`\n          break\n        case 2: // (a-b)*(c+de)\n          if (a <= b) { a = calcul(a + b) }\n          expf = `Le produit de la différence de ${nombreAvecEspace(a)} et ${nombreAvecEspace(b)} par la somme de ${nombreAvecEspace(c)} et du produit de ${nombreAvecEspace(d)} par ${nombreAvecEspace(e)}`\n          expn = `$(${texNombrec(a)}-${texNombrec(b)})${signex}(${texNombrec(c)}+${texNombrec(d)} \\\\times ${texNombrec(e)})$`\n          expc = `$(${texNombrec(a)}-${texNombrec(b)})${signex}(${texNombrec(c)}+${texNombrec(d)} \\\\times ${texNombrec(e)}) = ${texNombrec(a - b)}${signex}(${texNombrec(c)}+${texNombrec(d * e)}) = ${texNombrec(a - b)}  \\\\times  ${texNombrec(c + d * e)} = ${texNombrec((a - b) * (c + d * e))}$`\n          break\n        case 3: // ab+cd/e\n          c = calcul(c * e)\n          expf = `La somme du produit de ${nombreAvecEspace(a)} par ${nombreAvecEspace(b)} et du quotient du produit de ${nombreAvecEspace(c)} et ${nombreAvecEspace(d)} par ${nombreAvecEspace(e)}`\n          expn = `$${texNombrec(a)} \\\\times ${texNombrec(b)}+${texNombrec(c)} \\\\times ${texNombrec(d)} \\\\div ${texNombrec(e)}$ ou $${texNombrec(a)} \\\\times ${texNombrec(b)}+\\\\dfrac{${texNombrec(c)} \\\\times ${texNombrec(d)}}{${texNombrec(e)}}$`\n          expc = `$${texNombrec(a)} \\\\times ${texNombrec(b)}+${texNombrec(c)} \\\\times ${texNombrec(d)} \\\\div ${texNombrec(e)} = ${texNombrec(a * b)} + ${texNombrec(c * d)}  \\\\div  ${texNombrec(e)} = ${texNombrec(a * b)} + ${texNombrec(c * d / e)} = ${texNombrec(a * b + c * d / e)}$`\n          break\n      }\n      break\n  }\n  return [expf, expn, expc, souscas]\n}\n"],"names":["choisirExpressionNumerique","nbOperations","decimal","timesOn","expf","expn","expc","arrondir","Math","log10","a","arrondi","randint","b","c","d","e","souscas","signex","nombreAvecEspace","texNombrec","calcul","round"],"sourceRoot":""}