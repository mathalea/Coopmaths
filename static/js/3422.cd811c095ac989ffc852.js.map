{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5L10.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/modules/gestionQcm.js"],"names":["amcReady","titre","EcrireUneExpressionLitterale","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","qcmDisponible","modeQcm","nouvelleVersion","numeroExercice","tabrep","tabicone","qcm","ordered","lastChoices","listeQuestions","listeCorrections","typeDeQuestionsDisponibles","range1","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","lettresDisponibles","x","choice","enleveElement","y","k","randint","texFraction","shuffle2tableaux","mathalea","sortieAMC","tableauSolutionsDuQcm","propositionsQcm","indexOf","push","listeQuestionsToContenu","gestionQcmInteractif","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","mg32Editable","listePackages","exercice","document","addEventListener","$","checkbox","button","querySelector","event","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","reduce","a","b","spanReponseLigne","forEach","solution","rep","label","check","style","backgroundColor","checked","innerHTML","color","fontSize","querySelectorAll","uicheck","classList","add","espace","sortieHtml","length"],"mappings":"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","file":"js/3422.cd811c095ac989ffc852.js","sourcesContent":["/* global mathalea  */\nimport Exercice from '../ClasseExercice.js'\nimport { shuffle2tableaux, listeQuestionsToContenu, randint, enleveElement, choice, range1, combinaisonListes, texFraction } from '../../modules/outils.js'\nimport { gestionQcmInteractif, propositionsQcm } from '../../modules/gestionQcm.js'\n\nexport const amcReady = true\n\nexport const titre = 'Écrire une expression littérale'\n\n/**\n* Écrire une expression littérale à partir d'une phrase :\n* * Double, triple, moitié, tiers, quart\n* * Successeur, prédécesseur\n* * Carré, cube, opposé, inverse\n* * Somme, produit, quotient\n* * Nombre pair, nombre impair, multiple d'un nombre donné\n* @Auteur Rémi Angot\n* 5L10\n*/\nexport default function EcrireUneExpressionLitterale () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 4\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.numeroExercice = numeroExercice\n    this.qcm = ['5L10', [], 'Écrire une expression littérale', 2, { ordered: false, lastChoices: 0 }]\n    let tabrep, tabicone\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeDeQuestionsDisponibles = range1(17)\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      const lettresDisponibles = ['x', 'y', 'z', 't', 'a', 'b', 'c', 'n', 'm']\n      const x = choice(lettresDisponibles)\n      enleveElement(lettresDisponibles, x)\n      const y = choice(lettresDisponibles)\n      const k = randint(2, 10)\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // 2x\n          texte = `Exprimer le double de $${x}$ en fonction de $${x}$.`\n          texteCorr = `Le double de $${x}$ se note : $2${x}$.`\n          tabrep = [`$2\\\\times ${x}$`, `$2${x}$`, `$${x}+${x}$`, `$2+${x}$`, `$${x}^2$`, `$${x}3$`]\n          tabicone = [1, 1, 1, 0, 0, 0]\n          break\n        case 2: // 3x\n          texte = `Exprimer le triple de $${x}$  en fonction de $${x}$.`\n          texteCorr = `Le triple de $${x}$  se note : $3${x}$.`\n          tabrep = [`$3\\\\times ${x}$`, `$3${x}$`, `$${x}+2${x}$`, `$3+${x}$`, `$${x}^3$`, `$${x}3$`]\n          tabicone = [1, 1, 1, 0, 0, 0]\n          break\n        case 3: // x/2\n          texte = `Exprimer la moitié de $${x}$ en fonction de $${x}$.`\n          texteCorr = `La moitié de $${x}$  se note :  $${texFraction(x, 2)}=${x}\\\\div 2=0,5${x}$.`\n          tabrep = [`$${x}\\\\div 2$`, `$\\\\dfrac{${x}}{2}$`, `$0,5${x}$`, `$${x}-2$`, `$\\\\dfrac{1}{2}+${x}$`, `$${x}\\\\div 0,5$`]\n          tabicone = [1, 1, 1, 0, 0, 0]\n          break\n        case 4: // x/4\n          texte = `Exprimer le quart de $${x}$  en fonction de $${x}$.`\n          texteCorr = `Le quart de $${x}$  se note :  $${texFraction(x, 4)}=${x}\\\\div 4=0,25${x}$.`\n          tabrep = [`$${x}\\\\div 4$`, `$\\\\dfrac{${x}}{4}$`, `$0,25${x}$`, `$${x}-\\\\dfrac{1}{4}$`, `$\\\\dfrac{1}{4}+${x}$`, `$${x}\\\\div 0,25$`]\n          tabicone = [1, 1, 1, 0, 0, 0]\n          break\n        case 5: // x+1\n          texte = `$${x}$ étant un nombre entier, exprimer l'entier suivant en fonction de $${x}$.`\n          texteCorr = `Le successeur de $${x}$ se note :  $${x}+1$.`\n          tabrep = [`$1+${x}$`, `$${x}+1$`, `$${x}+${x}$`, `$2${x}$`, `$${x}-1$`, `$${x}2$`]\n          tabicone = [1, 1, 0, 0, 0, 0]\n          break\n        case 6: // x-1\n          texte = `$${x}$ étant un nombre entier, exprimer l'entier précédent en fonction de $${x}$.`\n          texteCorr = `Le prédecesseur de $${x}$  se note :  $${x}-1$.`\n          tabrep = [`$${x}-1$`, `$1-${x}$`, `$${x}-${x}$`, `$-1${x}$`, `$${x}+(-1)$`, `$${x}+1$`]\n          tabicone = [1, 0, 0, 0, 1, 0]\n          break\n        case 7: // x^2\n          texte = `Exprimer le carré de $${x}$  en fonction de $${x}$.`\n          texteCorr = `Le carré de $${x}$  se note : $${x}^2$.`\n          tabrep = [`$${x}${x}$`, `$${x}\\\\times ${x}$`, `$${x}^2$`, `$${x}2$`, `$2${x}$`, `$${x}+2$`]\n          tabicone = [1, 1, 1, 0, 0, 0]\n          break\n        case 8: // x^3\n          texte = `Exprimer le cube de $${x}$  en fonction de $${x}$.`\n          texteCorr = `Le cube de $${x}$  se note : $${x}^3$.`\n          tabrep = [`$${x}${x}${x}$`, `$${x}\\\\times ${x}\\\\times ${x}$`, `$${x}^3$`, `$${x}3$`, `$3${x}$`, `$${x}+3$`]\n          tabicone = [1, 1, 1, 0, 0, 0]\n          break\n        case 9: // -x\n          texte = `Exprimer l'opposé de $${x}$  en fonction de $${x}$.`\n          texteCorr = `L'opposé de $${x}$  se note : $-${x}$.`\n          tabrep = [`$-${x}$`, `$-1\\\\times ${x}$`, `$${x}-1$`, `$\\\\dfrac{1}{${x}}$`, `$${x}$`, `$1-${x}$`]\n          tabicone = [1, 1, 0, 0, 0, 0]\n          break\n        case 10: // 1/x\n          texte = `Exprimer l'inverse de $${x}$  en fonction de $${x}$.`\n          texteCorr = `L'inverse de $${x}$ se note : $${texFraction(1, x)}$.`\n          tabrep = [`$-${x}$`, `$-1\\\\times ${x}$`, `$${x}-1$`, `$\\\\dfrac{1}{${x}}$`, `$${x}$`, `$1-${x}$`]\n          tabicone = [0, 0, 0, 1, 0, 0]\n          break\n        case 11: // x+k\n          texte = `Exprimer la somme de $${x}$ et ${k} en fonction de $${x}$.`\n          texteCorr = `La somme de $${x}$ et ${k} se note : $${x}+${k}$.`\n          tabrep = [`$${k}+${x}$`, `$${x}+${k}$`, `$${k}${x}$`, `$${x}${k}$`, `$${x}-${k}$`, `$${k}\\\\times ${x}$`]\n          tabicone = [1, 1, 0, 0, 0, 0]\n          break\n        case 12: // kx\n          texte = `Exprimer le produit de $${x}$  par ${k} en fonction de $${x}$.`\n          texteCorr = `Le produit de $${x}$ par ${k} se note : $${k}${x}$.`\n          tabrep = [`$${k}+${x}$`, `$${x}+${k}$`, `$${k}${x}$`, `$${x}${k}$`, `$${x}-${k}$`, `$${k}\\\\times ${x}$`]\n          tabicone = [0, 0, 1, 0, 0, 1]\n          break\n        case 13: // x/k\n          texte = `Exprimer le quotient de $${x}$ par ${k} en fonction de $${x}$.`\n          texteCorr = `Le quotient de $${x}$ par ${k} se note : $${texFraction(x, k)}$.`\n          tabrep = [`$${k}\\\\div ${x}$`, `$${x}\\\\div ${k}$`, `$\\\\dfrac{${x}}{${k}}$`, `$${x}\\\\times ${k}$`, `$${x}-${k}$`, `$${k}\\\\times ${x}$`]\n          tabicone = [0, 1, 1, 0, 0, 0]\n          break\n        case 14: // k/x\n          texte = `Exprimer le quotient de ${k} par $${x}$ en fonction de $${x}$.`\n          texteCorr = `Le quotient de ${k} par $${x}$ se note : $${texFraction(k, x)}$.`\n          tabrep = [`$${x}\\\\div ${k}$`, `$${k}\\\\div ${x}$`, `$\\\\dfrac{${k}}{${x}}$`, `$${k}\\\\times ${x}$`, `$${k}-${x}$`, `$${x}\\\\times ${k}$`]\n          tabicone = [0, 1, 1, 0, 0, 0]\n          break\n        case 15: // xy\n          texte = `Comment se note le produit de $${x}$ par $${y}$ ?`\n          texteCorr = `Le produit de $${x}$ par $${y}$ se note $${x}${y}$.`\n          tabrep = [`$${y}+${x}$`, `$${x}+${y}$`, `$${y}${x}$`, `$${x}${y}$`, `$${x}-${y}$`, `$${y}\\\\times ${x}$`]\n          tabicone = [0, 0, 1, 1, 0, 1]\n          break\n        case 16: // pair\n          texte = 'Écrire une expression littérale qui permet de représenter un nombre pair.'\n          texteCorr = 'Un nombre pair peut s\\'écrire sous la forme $2n$ avec $n$ un entier naturel.'\n          tabrep = ['$2n$', '$2(n+1)$', '$n+2$', '$n-2$', '$n\\\\div 2$', '$n^2$']\n          tabicone = [1, 1, 0, 0, 0, 0]\n          break\n        case 17: // impair\n          texte = 'Écrire une expression littérale qui permet de représenter un nombre impair.'\n          texteCorr = 'Un nombre impair peut s\\'écrire sous la forme $2n+1$ avec $n$ un entier naturel.'\n          tabrep = ['$2n+1$', '$n+1$', '$n+3$', '$3n$', '$n-1$', '$n+7$']\n          tabicone = [1, 0, 0, 0, 0, 0]\n          break\n        case 18: // multiple de k\n          texte = `Écrire une expression littérale qui permet de représenter un multiple de ${k}.`\n          texteCorr = `Un multiple de ${k} peut s'écrire sous la forme $${k}n$ avec $n$ un entier naturel.`\n          tabrep = [`$${k}n$`, `$${k}\\\\times n$`, `$${k}+n$`, `$${k}-n$`, `$\\\\dfrac{${k}}{n}$`, `$${x}-${y}$`]\n          tabicone = [1, 1, 0, 0, 0, 0]\n          break\n      }\n      shuffle2tableaux(tabrep, tabicone)\n      if (this.modeQcm && !mathalea.sortieAMC) {\n        this.tableauSolutionsDuQcm[i] = tabicone\n        texte += propositionsQcm(numeroExercice, i, tabrep, tabicone).texte\n        texteCorr += propositionsQcm(numeroExercice, i, tabrep, tabicone).texteCorr\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        this.qcm[1].push([`${texte}\\n`,\n          tabrep,\n          tabicone])\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n    gestionQcmInteractif(this)\n  }\n  // this.besoinFormulaireCaseACocher = [\"Uniquement la lettre $n$.\"]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ mathalea sortieHtml */\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function gestionQcmInteractif (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          const nbBonnesReponsesAttendues = exercice.tableauSolutionsDuQcm[i].reduce((a, b) => a + b, 0)\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.tableauSolutionsDuQcm[i].forEach((solution, rep) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${rep}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${rep}`)\n            if (solution === 1) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n            }\n          })\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '✔︎'\n            spanReponseLigne.style.color = 'green'\n          } else {\n            spanReponseLigne.innerHTML = '✖︎'\n            spanReponseLigne.style.color = 'red'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (numeroExercice, i, tabrep, tabicone) {\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (sortieHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  if (!mathalea.sortieAMC) {\n    if (sortieHtml) {\n      texte += `<br>  Réponses possibles : ${espace}  <form id=\"formEx${numeroExercice}Q${i}\">`\n    } else {\n      texte += `<br>  Réponses possibles : ${espace}`\n    }\n    for (let rep = 0; rep < tabrep.length; rep++) {\n      if (sortieHtml) {\n        texte += `<div class=\"ui checkbox ex${numeroExercice}\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${numeroExercice}Q${i}R${rep}\">${tabrep[rep] + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n      if (tabicone[rep] === 1) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[rep]}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n    }\n    if (sortieHtml) {\n      texte += `<span id=\"resultatCheckEx${numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n"],"sourceRoot":""}