{"version":3,"file":"js/6746.45c5d106b38c58d95ea1.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/2e/can2G05.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { randint, choice, ecritureParentheseSiNegatif, creerNomDePolygone, texteEnCouleur } from '../../../modules/outils.js'\nexport const titre = 'Calculer une distance avec les coordonnées'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence can2G05\n * Date de publication sptembre 2021\n*/\nexport default function DistanceRepere () {\n  Exercice.call(this)\n  this.typeExercice = 'simple'\n  this.nbQuestions = 1\n  this.formatChampTexte = 'largeur15 inline'\n  this.nouvelleVersion = function () {\n    let a, b, c, d\n    const nom = creerNomDePolygone(2, 'PQ')\n    switch (choice(['a', 'a', 'b'])) {\n      case 'a':\n        a = randint(1, 6)\n        b = randint(1, 6, a)\n        c = randint(1, 6)\n        d = randint(1, 6, b)\n        if ((c - a) ** 2 + (d - b) ** 2 === 1 || (c - a) ** 2 + (d - b) ** 2 === 4 || (c - a) ** 2 + (d - b) ** 2 === 9 || (c - a) ** 2 + (d - b) ** 2 === 16 || (c - a) ** 2 + (d - b) ** 2 === 25 || (c - a) ** 2 + (d - b) ** 2 === 36) {\n          this.question = `Dans un repère du plan d'orignine $O$, on donne $${nom[0]}(${a};${b})$ et $${nom[1]}(${c};${d})$.<br>\n        Déterminer la longueur du segment $[${nom[0]}${nom[1]}]$.<br>\n        (donner le résultat sous la forme $\\\\sqrt{a}$ ou d'un nombre entier le cas échéant)`\n          this.optionsChampTexte = { texteApres: '' }\n          this.correction = `$${nom[0]}${nom[1]}=\\\\sqrt{(x_${nom[1]}-x_${nom[0]})^2+(y_${nom[1]}-y_${nom[0]})^2}=\n          \\\\sqrt{(${c}-${ecritureParentheseSiNegatif(a)})^2+(${d}-${ecritureParentheseSiNegatif(b)})^2}=\n          \\\\sqrt{${(c - a) ** 2}+${(d - b) ** 2}}=\\\\sqrt{${(c - a) ** 2 + (d - b) ** 2}}=\n          ${Math.sqrt((c - a) ** 2 + (d - b) ** 2)}$<br>`\n          this.correction += texteEnCouleur(` Mentalement : <br>\n          On calcule  $(${c}-${a})^2$ et $(${d}-${b})^2$, ce qui donne $${(c - a) ** 2}$ et $${(d - b) ** 2}$. <br>\n          Puis on calcule la somme de ces nombres soit $${(c - a) ** 2}+${(d - b) ** 2}=${(c - a) ** 2 + (d - b) ** 2}$.<br>\n           Enfin, on en prend la racine carrée.<br>\n            Comme $${(c - a) ** 2 + (d - b) ** 2}$ est un carré parfait, on simplie la racine carrée.\n           `)\n          this.reponse = Math.sqrt((c - a) ** 2 + (d - b) ** 2)\n        } else {\n          this.question = `Dans un repère du plan d'orignine $O$, on donne $${nom[0]}(${a};${b})$ et $${nom[1]}(${c};${d})$.<br>\n        Déterminer la longueur du segment $[${nom[0]}${nom[1]}]$.<br>\n        (donner le résultat sous la forme $\\\\sqrt{a}$ ou d'un nombre entier le cas échéant)`\n          this.optionsChampTexte = { texteApres: '' }\n          this.correction = `$${nom[0]}${nom[1]}=\n          \\\\sqrt{(x_${nom[1]}-x_${nom[0]})^2+(y_${nom[1]}-y_${nom[0]})^2}=\n          \\\\sqrt{(${c}-${ecritureParentheseSiNegatif(a)})^2+(${d}-${ecritureParentheseSiNegatif(b)})^2}=\n          \\\\sqrt{${(c - a) ** 2}+${(d - b) ** 2}}=\\\\sqrt{${(c - a) ** 2 + (d - b) ** 2}}$<br>`\n          this.correction += texteEnCouleur(` Mentalement : <br>\n          On calcule  $(${c}-${a})^2$ et $(${d}-${b})^2$, ce qui donne $${(c - a) ** 2}$ et $${(d - b) ** 2}$. <br>\n          Puis on calcule la somme de ces nombres soit $${(c - a) ** 2}+${(d - b) ** 2}=${(c - a) ** 2 + (d - b) ** 2}$.<br>\n           Enfin, on en prend la racine carrée.<br>\n            Comme $${(c - a) ** 2 + (d - b) ** 2}$ n'est pas un carré parfait, on ne simplifie pas (la réponse doit être sous la forme $\\\\sqrt{a}$ ou d'un entier).\n           `)\n          this.reponse = [`\\\\sqrt{${(c - a) ** 2 + (d - b) ** 2}}`, `${Math.sqrt((c - a) ** 2 + (d - b) ** 2)}`]\n        }\n        break\n      case 'b' :\n        a = randint(-5, 5, 0)\n        b = randint(-5, 5, 0)\n        if (a ** 2 + b ** 2 === 25) {\n          this.question = `Dans un repère du plan d'origine $O$, on donne $${nom[0]}(${a};${b})$.<br>\n        Déterminer la longueur du segment $[O${nom[0]}]$.<br>\n        (donner le résultat sous la forme $\\\\sqrt{a}$ ou d'un entier le cas échéant)`\n          this.optionsChampTexte = { texteApres: '' }\n          this.correction = `$O${nom[0]}=\\\\sqrt{x_${nom[0]}^2+y_${nom[0]}^2}=\n          \\\\sqrt{${ecritureParentheseSiNegatif(a)}^2+${ecritureParentheseSiNegatif(b)}^2}\n          =\\\\sqrt{${a ** 2}+${b ** 2}}\n          =\\\\sqrt{${a ** 2 + b ** 2}}=${Math.sqrt(a ** 2 + b ** 2)}$`\n          this.correction += texteEnCouleur(` Mentalement : <br>\n        On calcule  $${ecritureParentheseSiNegatif(a)}^2$ et $${ecritureParentheseSiNegatif(b)}^2$, ce qui donne $${a ** 2}$ et $${b ** 2}$. <br>\n        Puis on calcule la somme de ces nombres soit $${a ** 2}+${b ** 2}=${a ** 2 + b ** 2}$.<br>\n         Enfin, on en prend la racine carrée.<br>\n          Comme $25$ est pas un carré parfait, on  simplifie.\n         `)\n          this.reponse = Math.sqrt((a) ** 2 + (b) ** 2)\n        } else {\n          this.question = `Dans un repère du plan d'origine $O$, on donne $${nom[0]}(${a};${b})$.<br>\n        Déterminer la longueur du segment $[O${nom[0]}]$.<br>\n        (donner le résultat sous la forme $\\\\sqrt{a}$)`\n\n          this.optionsChampTexte = { texteApres: '' }\n          this.correction = `$O${nom[0]}=\\\\sqrt{x_${nom[0]}^2+y_${nom[0]}^2}\n          =\\\\sqrt{${ecritureParentheseSiNegatif(a)}^2+${ecritureParentheseSiNegatif(b)}^2}\n          =\\\\sqrt{${a ** 2}+${b ** 2}}=\\\\sqrt{${a ** 2 + b ** 2}}$<br>`\n          this.correction += texteEnCouleur(` Mentalement : <br>\n        On calcule  $${ecritureParentheseSiNegatif(a)}^2$ et $${ecritureParentheseSiNegatif(b)}^2$, ce qui donne $${a ** 2}$ et $${b ** 2}$. <br>\n        Puis on calcule la somme de ces nombres soit $${a ** 2}+${b ** 2}=${a ** 2 + b ** 2}$.<br>\n         Enfin, on en prend la racine carrée.<br>\n          Comme $${a ** 2 + b ** 2}$ n'est pas un carré parfait, on ne simplifie pas (la réponse doit être sous la forme $\\\\sqrt{a}$ ou d'un entier).\n         `)\n          this.reponse = `\\\\sqrt{${a ** 2 + b ** 2}}`\n        }\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","DistanceRepere","typeExercice","formatChampTexte","a","b","c","d","nom","creerNomDePolygone","choice","randint","question","optionsChampTexte","texteApres","correction","ecritureParentheseSiNegatif","Math","sqrt","texteEnCouleur","reponse"],"sourceRoot":""}