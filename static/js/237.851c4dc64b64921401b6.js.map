{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3L15-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","ResoudreEquatioeX2EgalA","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","context","spacingCorr","spacing","nouvelleVersion","listeQuestions","listeCorrections","listeFractions","listeTypeQuestions","parseInt","combinaisonListes","fraction","ns","ds","a","texte","texteCorr","i","cpt","randint","choice","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/237.851c4dc64b64921401b6.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'// eslint-disable-next-line camelcase\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes } from '../../modules/outils.js'\nexport const titre = 'Résoudre une équation $x^2 = a$'\n\n/**\n * Résoudre une équation de type x²=a\n* @author Jean-Claude Lhote\n* 3L15\n*/\nexport default function ResoudreEquatioeX2EgalA () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre les équations suivantes'\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  // eslint-disable-next-line no-undef\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1.5\n  this.spacing = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const listeFractions = [[1, 2], [1, 3], [2, 3], [1, 4], [3, 4], [1, 5], [2, 5], [3, 5], [4, 5],\n      [1, 6], [5, 6], [1, 7], [2, 7], [3, 7], [4, 7], [5, 7], [6, 7], [1, 8], [3, 8], [5, 8], [7, 8],\n      [1, 9], [2, 9], [4, 9], [5, 9], [7, 9], [8, 9], [1, 10], [3, 10], [7, 10], [9, 10]]\n    let listeTypeQuestions = []\n    switch (parseInt(this.sup)) {\n      case 1: listeTypeQuestions = combinaisonListes([1], this.nbQuestions)\n        break\n      case 2: listeTypeQuestions = combinaisonListes([2], this.nbQuestions)\n        break\n      case 3: listeTypeQuestions = combinaisonListes([3], this.nbQuestions)\n        break\n      case 4: listeTypeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions)\n    }\n    for (let i = 0, fraction, ns, ds, a, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeQuestions[i]) {\n        case 1: a = randint(1, 20) // x²=a*a donc x=a ou -a.\n          texte = `$x^2=${a * a}$`\n          texteCorr = `$x^2=${a * a}$ équivaut à $x = \\\\sqrt{${a * a}}$ ou $x = -\\\\sqrt{${a * a}}$<br>Soit $x = ${a}$ ou $x = -${a}$<br>`\n          texteCorr += `Il est équivalent de résoudre $x^2 - ${a * a}=0$ c'est à dire $x^2 - ${a}^{2}=0$ <br>Soit $(x - ${a})(x + ${a})=0$ qui donne les deux solutions ci-dessus. `\n          break\n        case 2: // x²=(ns*ns)/(ds*ds) solutions rationnelles\n          fraction = choice(listeFractions)\n          ns = fraction[0]\n          ds = fraction[1]\n          texte = `$x^2=\\\\dfrac{${ns * ns}}{${ds * ds}}$`\n          texteCorr = `$x^2=\\\\dfrac{${ns * ns}}{${ds * ds}}$ équivaut à $x = \\\\sqrt{\\\\dfrac{${ns * ns}}{${ds * ds}}}$ ou $x = -\\\\sqrt{\\\\dfrac{${ns * ns}}{${ds * ds}}}$<br>Soit $x = \\\\dfrac{${ns}}{${ds}}$ ou $x = -\\\\dfrac{${ns}}{${ds}}$<br>`\n          texteCorr += `Il est équivalent de résoudre $x^2 - \\\\dfrac{${ns * ns}}{${ds * ds}}=0$ c'est à dire $x^2 - (\\\\dfrac{${ns}}{${ds}})^{2}=0$<br>Soit $(x - \\\\dfrac{${ns}}{${ds}})(x + \\\\dfrac{${ns}}{${ds}})=0$ qui donne les deux solutions ci-dessus. `\n          break\n\n        case 3: a = randint(2, 50, [4, 9, 16, 25, 36, 49]) // solution irrationnelles\n          texte = `$x^2=${a}$`\n          texteCorr = `$x^2=${a}$ équivaut à $x = \\\\sqrt{${a}}$ ou $x = -\\\\sqrt{${a}}$<br>`\n          texteCorr += `Il est équivalent de résoudre $x^2 - ${a}=0$  c'est à dire $x^2 - (\\\\sqrt{${a}})^{2}=0$<br>Soit $(x - \\\\sqrt{${a}})(x + \\\\sqrt{${a}})=0$ qui donne les deux solutions ci-dessus. `\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        // alert(this.listeQuestions)\n        // alert(this.listeCorrections)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, '1 : solutions entières\\n 2 : solutions rationnelles\\n 3 : Solutions irrationnelles\\n 4 : Mélange des 3 autres niveaux']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}