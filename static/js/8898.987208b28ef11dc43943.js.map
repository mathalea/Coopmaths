{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G23.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","TrianglesSemblables","Exercice","this","debug","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","randint","aireABC","A","B","C","M","p","q","r","s","X","G","Gq","nom1","grid","trouve","point","choice","rotation","x","y","polygone","aireTriangle","barycentre","angleChoisi1","couleurDeRemplissage","opaciteDeRemplissage","nommePolygone","grille","angleChoisi2","milieu","listePoints","D","nom","E","tabPointsNames","shuffle","I","I1","F","L","sgmt_DE","segment","pointilles","epaisseur","d","d1","d2","d3","d4","d5","J1","J2","fenetreMathalea2D","xmin","ymin","xmax","ymax","pixelsParCm","scale","centre_rot","sol1","pointIntersectionDD","droite","sol2","vect_trans","vecteur","transformationAnimee","rotationAnimee","translationAnimee","seg_DE_corr","seg_AB_corr","seg_DI_corr","seg_EI1_corr","seg_AC_corr","seg_EI_corr","seg_DI1_corr","seg_BC_corr","ang_ABC","angleOriente","ang_DEI","ang_EDI1","ang_BCA","ang_EID","ang_EI1D","ang_CAB","ang_IDE","ang_I1ED","codages_correction","codeSegments","arc","pointSurSegment","figures","enonce","mathalea2d","tracePoint","labelPoint","corr_solution1","texteEnCouleur","corr_solution2","corr_animmee_sol1","corr_animmee_sol2","texteGras","listeQuestionsToContenu","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/8898.987208b28ef11dc43943.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,shuffle,texteEnCouleur,texteGras} from '../../modules/outils.js'\nimport {point,tracePoint,milieu,pointSurSegment,pointIntersectionDD,labelPoint,barycentre,droite,vecteur,segment,polygone,nommePolygone,aireTriangle,arc,rotation,translationAnimee,rotationAnimee,codeSegments,grille,angleOriente,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Reconnaître des triangles semblables dans différentes configurations'\n\n/**\n * 3G23 reconnaitre des triangles égaux\n * @author Jean-Claude Lhote et Sébastien Lozano\n */\nexport default function TrianglesSemblables() {\n\t'use strict';\n\tExercice.call(this);\n\tthis.debug = false;\n\tthis.titre = titre;\n\tthis.nbQuestions = 1;\n\tthis.nbQuestionsModifiable = false;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.nouvelleVersion = function () {\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tlet texte = '';\n\t\tlet texteCorr = '';\n\t\tlet typesDeQuestions = randint(1, 1);\n\t\tswitch (typesDeQuestions) {\n\t\t\tcase 1:\n\t\t\t\tlet trouve = false, aireABC, A, B, C, M, p, q, r, s, X, G, Gq, nom1, grid;\n\t\t\t\t// on génère le triangle ABC avec une contrainte sur son aire\n\t\t\t\twhile (!trouve) {\n\t\t\t\t\tA = point(choice([0, 3]), choice([0, 3]), 'A'); // le point A !\n\t\t\t\t\tB = point(choice([6, 9]), choice([6, 9]), 'B'); // le point B !\n\t\t\t\t\tC = rotation(B, A, 90, 'C'); // le point C à partir de B par rotation autour de A!\n\t\t\t\t\tC.x += choice([0, 3, 6]); // on décale l'abscise de C de 0, 3 ou 6 !\n\t\t\t\t\tC.y += choice([-3, 0, 3]); // on décale l'abscise de C de -3, 0 ou 3 !\n\t\t\t\t\tp = polygone(A, B, C); // on trace le polygone ABC\n\t\t\t\t\taireABC = aireTriangle(p); // Je savais bien que cette formule servirait un jour !\n\t\t\t\t\tif (aireABC < 11 && aireABC > 5)\n\t\t\t\t\t\ttrouve = true;\n\t\t\t\t};\n\t\t\t\tG = barycentre(p); // le barycentre de ABC\n\t\t\t\tlet angleChoisi1 = choice([0, 90, 270]);\n\t\t\t\tp = rotation(p, G, angleChoisi1); // on tourne ABC de façon aléatoire autour de son barycentre\n\t\t\t\tp.couleurDeRemplissage = 'gray'; //remplissage de ABC\n\t\t\t\tp.opaciteDeRemplissage = 0.2; //0.5;//remplissage de ABC\n\t\t\t\tnom1 = nommePolygone(p, 'ABC', 0.4); // on  nomme ABC en plaçant A,B et C à 0,4\n\t\t\t\tgrid = grille(-3, -3, 27, 18, 'gray', 0.4, 1); // on trace une grille\n\t\t\t\tM = point(9, 12); // un point M fixe pour tourner autour\t\t\t\t\n\t\t\t\tq = rotation(p, M, 90); // on fait tourner ABC autour de M de 90°\n\n\t\t\t\t// on a besoin de récupérer le polygone non tracé\n\t\t\t\tGq = barycentre(q); // on construit son barycentre\n\n\t\t\t\t//let angleChoisi2 = 270; \n\t\t\t\tlet angleChoisi2 = choice([0, 90, 180, 270]);\n\t\t\t\tr = rotation(q, Gq, angleChoisi2); // on fait tourner q encore autour de son barycentre\n\t\t\t\tX = milieu(r.listePoints[0], r.listePoints[1]); // on place le milieu des deux premiers points de la figure obtenue qui sont les images des points A et B initiaux\t\n\t\t\t\ts = rotation(r, X, 180); // on fait topurner r autour du milieu des deux extremites du plus grand côté\n\t\t\t\tr.couleurDeRemplissage = 'red'; // solution 1 en rouge\n\t\t\t\tr.opaciteDeRemplissage = 0.2; //0.5; // \n\t\t\t\ts.couleurDeRemplissage = 'blue'; //solution 2 en bleu\n\t\t\t\ts.opaciteDeRemplissage = 0.2; //0.5; //\n\n\n\t\t\t\t// mes ajouts par rapport à la figure de JC\t\t\t\t\n\t\t\t\t// on fixe une place pour D et E\n\t\t\t\tlet D = r.listePoints[0];\n\t\t\t\tD.nom = 'D';\n\t\t\t\tlet E = r.listePoints[1];\n\t\t\t\tE.nom = 'E';\n\t\t\t\t// on crée un tableau avec les noms proposé pour les points\t\t\t\t\n\t\t\t\tlet tabPointsNames = ['F', 'G', 'H', 'I'];\n\t\t\t\t// on mélange le tableau \n\t\t\t\ttabPointsNames = shuffle(tabPointsNames);\n\t\t\t\t//on place les deux solutions\n\t\t\t\tlet I = r.listePoints[2];\n\t\t\t\t//I.nom='I';\n\t\t\t\tI.nom = tabPointsNames[0];\n\t\t\t\tlet I1 = rotation(I, X, 180);\n\t\t\t\t//I1.nom='I1';\n\t\t\t\tI1.nom = tabPointsNames[1];\n\t\t\t\t// on place les mauvaises solutions\n\t\t\t\tlet F = point(I1.x + 1, I1.y + 1);\n\t\t\t\t//F.nom='F';\n\t\t\t\tF.nom = tabPointsNames[2];\n\t\t\t\tlet L = point(I.x - 1, I.y - 3);\n\t\t\t\t//L.nom='L';\n\t\t\t\tL.nom = tabPointsNames[3];\n\t\t\t\t//on trace le segment [DE] en pointillés pour que la figure soit plus lisible\n\t\t\t\tlet sgmt_DE = segment(D, E, 'blue');\n\t\t\t\tsgmt_DE.pointilles = true;\n\t\t\t\tsgmt_DE.epaisseur = 1.5;\n\n\t\t\t\t// on prépare la fenetre mathalea2d\n\t\t\t\tlet fenetreMathalea2D = { xmin: -3, ymin: -3, xmax: 27, ymax: 18, pixelsParCm: 20, scale: 0.5 };\n\n\t\t\t\t// on prépare les corrections\n\t\t\t\tlet centre_rot = {\n\t\t\t\t\tsol1: pointIntersectionDD(droite(p.listePoints[1], E), droite(D, p.listePoints[0])),\n\t\t\t\t\tsol2: pointIntersectionDD(droite(E, p.listePoints[0]), droite(p.listePoints[1], D))\n\t\t\t\t};\n\t\t\t\tlet vect_trans = {\n\t\t\t\t\tsol1: vecteur(p.listePoints[1], E),\n\t\t\t\t\tsol2: vecteur(p.listePoints[1], D)\n\t\t\t\t};\n\t\t\t\tlet transformationAnimee = {\n\t\t\t\t\tsol1: ``,\n\t\t\t\t\t//nature_sol1:``,\n\t\t\t\t\tsol2: ``,\n\t\t\t\t};\n\t\t\t\t// pour construire les droites et les centres passant par les centres de rotations\n\t\t\t\tlet d, d1, d2, d3, d4, d5, J1, J2;\n\t\t\t\tswitch (angleChoisi2) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\ttransformationAnimee.sol1 = rotationAnimee(p, M, 90, 'begin=\"0s\" dur=\"4s\" repeatCount=\"indefinite\"');\n\t\t\t\t\t\t//transformationAnimee.nature_sol1=`rotation`;\n\t\t\t\t\t\t// la 1ere compo\n\t\t\t\t\t\td = droite(M, Gq);\n\t\t\t\t\t\td1 = rotation(d, M, -45);\n\t\t\t\t\t\td2 = rotation(d, Gq, 0);\n\t\t\t\t\t\tJ1 = pointIntersectionDD(d1, d2); // centre de la composée, ici l'angle vaut 90\n\n\t\t\t\t\t\t//2eme compo\n\t\t\t\t\t\td3 = droite(J1, X);\n\t\t\t\t\t\td4 = rotation(d3, J1, -45);\n\t\t\t\t\t\td5 = rotation(d3, X, 90);\n\t\t\t\t\t\tJ2 = pointIntersectionDD(d4, d5); // centre après la seconde composition angle 270 à 2pi près\t\t\t\t\t\t\n\t\t\t\t\t\ttransformationAnimee.sol2 = rotationAnimee(p, J2, -90, 'begin=\"0s\" dur=\"4s\" repeatCount=\"indefinite\"');\n\t\t\t\t\t\t//transformationAnimee.nature_sol2=`rotation`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 90:\n\t\t\t\t\t\ttransformationAnimee.sol1 = rotationAnimee(p, centre_rot.sol1, 180, 'begin=\"0s\" dur=\"4s\" repeatCount=\"indefinite\"');\n\t\t\t\t\t\t//transformationAnimee.nature_sol1=`rotation`;\n\t\t\t\t\t\ttransformationAnimee.sol2 = translationAnimee(p, vect_trans.sol2, 'begin=\"0s\" dur=\"4s\" repeatCount=\"indefinite\"');\n\t\t\t\t\t\t//transformationAnimee.nature_sol2=`translation`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 180:\n\t\t\t\t\t\t// la 1ere compo\n\t\t\t\t\t\td = droite(M, Gq);\n\t\t\t\t\t\td1 = rotation(d, M, -45);\n\t\t\t\t\t\td2 = rotation(d, Gq, 90);\n\t\t\t\t\t\tJ1 = pointIntersectionDD(d1, d2); // centre de la composée, ici l'angle vaut 270 à 2pi près\n\n\t\t\t\t\t\t//2eme compo\n\t\t\t\t\t\td3 = droite(J1, X);\n\t\t\t\t\t\td4 = rotation(d3, J1, -135);\n\t\t\t\t\t\td5 = rotation(d3, X, 90);\n\t\t\t\t\t\tJ2 = pointIntersectionDD(d4, d5); // centre après la seconde composition angle 450 à 2pi près\t\t\t\t\t\t\n\t\t\t\t\t\ttransformationAnimee.sol1 = rotationAnimee(p, J1, -90, 'begin=\"0s\" dur=\"4s\" repeatCount=\"indefinite\"');\n\t\t\t\t\t\t//transformationAnimee.nature_sol1=`rotation`;\n\t\t\t\t\t\ttransformationAnimee.sol2 = rotationAnimee(p, J2, 90, 'begin=\"0s\" dur=\"4s\" repeatCount=\"indefinite\"');\n\t\t\t\t\t\t//transformationAnimee.nature_sol2=`rotation`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 270:\n\t\t\t\t\t\ttransformationAnimee.sol1 = translationAnimee(p, vect_trans.sol1, 'begin=\"0s\" dur=\"4s\" repeatCount=\"indefinite\"');\n\t\t\t\t\t\t//transformationAnimee.nature_sol1=`translation`;\t\t\t\t\t\t\n\t\t\t\t\t\ttransformationAnimee.sol2 = rotationAnimee(p, centre_rot.sol2, 180, 'begin=\"0s\" dur=\"4s\" repeatCount=\"indefinite\"');\n\t\t\t\t\t\t//transformationAnimee.nature_sol2=`rotation`;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// DE = AB\n\t\t\t\tlet seg_DE_corr = segment(D, E, 'blue');\n\t\t\t\tseg_DE_corr.epaisseur = 2;\n\t\t\t\tlet seg_AB_corr = segment(p.listePoints[0], p.listePoints[1], 'blue');\n\t\t\t\tseg_AB_corr.epaisseur = 2;\n\t\t\t\t//DI = AC ou EI1 = AC\n\t\t\t\tlet seg_DI_corr = segment(D, I, 'red');\n\t\t\t\tlet seg_EI1_corr = segment(E, I1, 'red');\n\t\t\t\tseg_DI_corr.epaisseur = 2;\n\t\t\t\tseg_EI1_corr.epaisseur = 2;\n\t\t\t\tlet seg_AC_corr = segment(p.listePoints[0], p.listePoints[2], 'red');\n\t\t\t\tseg_AC_corr.epaisseur = 2;\n\t\t\t\t//EI = BC ou DI1 = BC\n\t\t\t\tlet seg_EI_corr = segment(E, I, 'green');\n\t\t\t\tlet seg_DI1_corr = segment(D, I1, 'green');\n\t\t\t\tseg_EI_corr.epaisseur = 2;\n\t\t\t\tseg_DI1_corr.epaisseur = 2;\n\t\t\t\tlet seg_BC_corr = segment(p.listePoints[1], p.listePoints[2], 'green');\n\t\t\t\tseg_BC_corr.epaisseur = 2;\n\t\t\t\t// angle ABC = DEI ou ABC = EDI1\n\t\t\t\tlet ang_ABC = angleOriente(p.listePoints[0], p.listePoints[1], p.listePoints[2]);\n\t\t\t\tlet ang_DEI = angleOriente(D, E, I);\n\t\t\t\tlet ang_EDI1 = angleOriente(E, D, I1);\n\t\t\t\t// angle BCA = EID ou  BCA = DI1E\n\t\t\t\tlet ang_BCA = angleOriente(p.listePoints[1], p.listePoints[2], p.listePoints[0]);\n\t\t\t\tlet ang_EID = angleOriente(E, I, D);\n\t\t\t\tlet ang_EI1D = angleOriente(E, I1, D);\n\t\t\t\t// angle CAB = IDE ou CAB = I1ED\n\t\t\t\tlet ang_CAB = angleOriente(p.listePoints[2], p.listePoints[0], p.listePoints[1]);\n\t\t\t\tlet ang_IDE = angleOriente(I, D, E);\n\t\t\t\tlet ang_I1ED = angleOriente(I1, E, D);\n\n\t\t\t\tlet codages_correction = {\n\t\t\t\t\tsol1: [\n\t\t\t\t\t\t// les segments\t\t\t\t\t\t\n\t\t\t\t\t\tseg_AB_corr,\n\t\t\t\t\t\tseg_DE_corr,\n\t\t\t\t\t\tcodeSegments('×', 'blue', p.listePoints[0], p.listePoints[1], D, E),\n\t\t\t\t\t\tseg_AC_corr,\n\t\t\t\t\t\tseg_DI_corr,\n\t\t\t\t\t\tcodeSegments('||', 'red', p.listePoints[0], p.listePoints[2], D, I),\n\t\t\t\t\t\tseg_BC_corr,\n\t\t\t\t\t\tseg_EI_corr,\n\t\t\t\t\t\tcodeSegments('O', 'green', p.listePoints[1], p.listePoints[2], I, E),\n\t\t\t\t\t\t//les angles\n\t\t\t\t\t\tarc(pointSurSegment(p.listePoints[1], p.listePoints[0], 0.8), p.listePoints[1], ang_ABC, true, 'red'),\n\t\t\t\t\t\tarc(pointSurSegment(E, D, 0.8), E, ang_DEI, true, 'red'),\n\t\t\t\t\t\tarc(pointSurSegment(p.listePoints[2], p.listePoints[1], 0.8), p.listePoints[2], ang_BCA, true, 'blue'),\n\t\t\t\t\t\tarc(pointSurSegment(I, E, 0.8), I, ang_EID, true, 'blue'),\n\t\t\t\t\t\tarc(pointSurSegment(p.listePoints[0], p.listePoints[2], 0.8), p.listePoints[0], ang_CAB, true, 'green'),\n\t\t\t\t\t\tarc(pointSurSegment(D, I, 0.8), D, ang_IDE, true, 'green')\n\t\t\t\t\t],\n\t\t\t\t\tsol2: [\n\t\t\t\t\t\t//les segments\n\t\t\t\t\t\tseg_AB_corr,\n\t\t\t\t\t\tseg_DE_corr,\n\t\t\t\t\t\tcodeSegments('×', 'blue', p.listePoints[0], p.listePoints[1], D, E),\n\t\t\t\t\t\tseg_BC_corr,\n\t\t\t\t\t\tseg_DI1_corr,\n\t\t\t\t\t\tcodeSegments('O', 'green', p.listePoints[1], p.listePoints[2], D, I1),\n\t\t\t\t\t\tseg_AC_corr,\n\t\t\t\t\t\tseg_EI1_corr,\n\t\t\t\t\t\tcodeSegments('||', 'red', p.listePoints[0], p.listePoints[2], E, I1),\n\t\t\t\t\t\t// les angles\n\t\t\t\t\t\tarc(pointSurSegment(p.listePoints[1], p.listePoints[0], 0.8), p.listePoints[1], ang_ABC, true, 'red'),\n\t\t\t\t\t\tarc(pointSurSegment(D, E, 0.8), D, ang_EDI1, true, 'red'),\n\t\t\t\t\t\tarc(pointSurSegment(p.listePoints[2], p.listePoints[1], 0.8), p.listePoints[2], ang_BCA, true, 'blue'),\n\t\t\t\t\t\tarc(pointSurSegment(I1, E, 0.8), I1, ang_EI1D, true, 'blue'),\n\t\t\t\t\t\tarc(pointSurSegment(p.listePoints[0], p.listePoints[2], 0.8), p.listePoints[0], ang_CAB, true, 'green'),\n\t\t\t\t\t\tarc(pointSurSegment(E, I1, 0.8), E, ang_I1ED, true, 'green')\n\t\t\t\t\t]\n\t\t\t\t};\n\n\t\t\t\t// on crée un objet pour stocker les figures et les corrections\n\t\t\t\tlet figures = {\n\t\t\t\t\tenonce: `\n\t\t\t\t\t\tOù placer le point M pour que les triangles ABC et DEM soient égaux ? \n\t\t\t\t\t\t<br>En F ? En G? En H ? En I ?\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t${mathalea2d(\n\t\t\t\t\t\tfenetreMathalea2D,\n\t\t\t\t\t\tp,\n\t\t\t\t\t\tnom1,\n\t\t\t\t\t\tgrid,\n\t\t\t\t\t\ttracePoint(D, E, I, I1, F, L),\n\t\t\t\t\t\tlabelPoint(D, E, I, I1, F, L),\n\t\t\t\t\t\tsgmt_DE\n\t\t\t\t\t)}`,\n\t\t\t\t\tcorr_solution1: `\n\t\t\t\t\t\tLes triangles $ABC$ et $DE${I.nom}$ ont les mêmes longueurs et les mêmes angles.\n\t\t\t\t\t\t<br> ${texteEnCouleur(`Donc le point ${I.nom} est un point qui convient`)}\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t${mathalea2d(\n\t\t\t\t\t\tfenetreMathalea2D,\n\t\t\t\t\t\tp,\n\t\t\t\t\t\tnom1,\n\t\t\t\t\t\tgrid,\n\t\t\t\t\t\ttracePoint(D, E, I, I1, F, L),\n\t\t\t\t\t\tlabelPoint(D, E, I, I1, F, L),\n\t\t\t\t\t\tsgmt_DE,\n\t\t\t\t\t\tr,\n\t\t\t\t\t\t//s,\n\t\t\t\t\t\tcodages_correction.sol1\n\t\t\t\t\t)}`,\n\t\t\t\t\tcorr_solution2: `\n\t\t\t\t\t\tLes triangles $ABC$ et $DE${I1.nom}$ ont les mêmes longueurs et les mêmes angles.\t\t\n\t\t\t\t\t\t<br> ${texteEnCouleur(`Donc le point ${I1.nom} est un point qui convient`)}\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t${mathalea2d(\n\t\t\t\t\t\tfenetreMathalea2D,\n\t\t\t\t\t\tp,\n\t\t\t\t\t\tnom1,\n\t\t\t\t\t\tgrid,\n\t\t\t\t\t\ttracePoint(D, E, I, I1, F, L),\n\t\t\t\t\t\tlabelPoint(D, E, I, I1, F, L),\n\t\t\t\t\t\tsgmt_DE,\n\t\t\t\t\t\t//r,\n\t\t\t\t\t\ts,\n\t\t\t\t\t\tcodages_correction.sol2\n\t\t\t\t\t)}`,\n\t\t\t\t\tcorr_animmee_sol1: `\n\t\t\t\t\t\tLes triangles $ABC$ et $DE${I.nom}$ ont les mêmes longueurs et les mêmes angles.\t\t\t\t\t\t\n\t\t\t\t\t\t<br> ${texteEnCouleur(`Donc le point ${I.nom} est un point qui convient`)}\n\t\t\t\t\t\t<br>\t\t\t\t\t\t\n\t\t\t\t\t\t${mathalea2d(\n\t\t\t\t\t\tfenetreMathalea2D,\n\t\t\t\t\t\tp,\n\t\t\t\t\t\tnom1,\n\t\t\t\t\t\tgrid,\n\t\t\t\t\t\t//tracePoint(D,E,I,I1,F,L),\n\t\t\t\t\t\ttracePoint(I1, F, L),\n\t\t\t\t\t\t//labelPoint(D,E,I,I1,F,L),\n\t\t\t\t\t\tlabelPoint(I1, F, L),\n\t\t\t\t\t\tnommePolygone(r, 'DE' + I.nom, 0.4),\n\t\t\t\t\t\t//sgmt_DE,\n\t\t\t\t\t\tr,\n\t\t\t\t\t\ttransformationAnimee.sol1,\n\t\t\t\t\t\tcodages_correction.sol1\n\t\t\t\t\t)}`,\n\t\t\t\t\tcorr_animmee_sol2: `\n\t\t\t\t\t\tLes triangles $ABC$ et $DE${I1.nom}$ ont les mêmes longueurs et les mêmes angles.\n\t\t\t\t\t\t<br> ${texteEnCouleur(`Donc le point ${I1.nom} est un point qui convient`)}\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\tUne solution est donc le point ${I1.nom}\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t${mathalea2d(\n\t\t\t\t\t\tfenetreMathalea2D,\n\t\t\t\t\t\tp,\n\t\t\t\t\t\tnom1,\n\t\t\t\t\t\tgrid,\n\t\t\t\t\t\t//tracePoint(D,E,I,I1,F,L),\n\t\t\t\t\t\ttracePoint(I, F, L),\n\t\t\t\t\t\t//labelPoint(D,E,I,I1,F,L),\n\t\t\t\t\t\tlabelPoint(I, F, L),\n\t\t\t\t\t\tnommePolygone(s, 'DE' + I1.nom, 0.4),\n\t\t\t\t\t\t//sgmt_DE,\n\t\t\t\t\t\t//r,\n\t\t\t\t\t\ts,\n\t\t\t\t\t\ttransformationAnimee.sol2,\n\t\t\t\t\t\tcodages_correction.sol2\n\t\t\t\t\t)}`\n\t\t\t\t};\n\t\t\t\t//texte=mathalea2d({xmin:-3,ymin:-3,xmax:27,ymax:18,pixelsParCm:20,scale:0.5},p,nom1,grid,r,s)\n\t\t\t\ttexte = `${figures.enonce}`;\n\t\t\t\tif (this.debug) {\n\t\t\t\t\ttexte += `<br>${texteGras(`===== Première solution ======`)}<br>${figures.corr_animmee_sol1}`;\n\t\t\t\t\ttexte += `<br><br>${texteGras(`===== Seconde solution ======`)}<br>${figures.corr_animmee_sol2}`;\n\t\t\t\t} else {\n\t\t\t\t\ttexteCorr += `<br>${texteGras(`===== Première solution ======`)}<br>${figures.corr_animmee_sol1}`;\n\t\t\t\t\ttexteCorr += `<br><br>${texteGras(`===== Seconde solution ======`)}<br>${figures.corr_animmee_sol2}`;\n\t\t\t\t}\n\t\t\t\tthis.listeQuestions[0] = texte;\n\t\t\t\tthis.listeCorrections[0] = texteCorr;\n\t\t\t\tlisteQuestionsToContenu(this);\n\t\t\t\tbreak;\n\n\t\t}\n\t};\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}