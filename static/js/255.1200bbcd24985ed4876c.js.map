{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4G20.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Pythagore2D","Exercice","this","nbQuestions","nbCols","nbColsCorr","typeExercice","video","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","liste_de_noms_de_polygones","sup","consigne","combinaisonListes","texte","texteCorr","i","cpt","A1","point","B1","calcul","randint","C1","similitude","longueur","p1","polygone","isVisible","p2","rotation","A","listePoints","B","C","codage","codageAngleDroit","xmin","Math","min","x","ymin","y","xmax","max","ymax","nomDuPolygone","creerNomDePolygone","push","nomme","nommePolygone","affAB","afficheLongueurSegment","affAC","affBC","longueurAB","longueurAC","longueurBC","mesObjetsATracer","sortieHtml","mathalea2d","scale","nom","texNombre","texNombrec","sqrt","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/255.1200bbcd24985ed4876c.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,combinaisonListes,calcul,texNombrec,creerNomDePolygone,texNombre} from '../../modules/outils.js'\nimport {point,polygone,nommePolygone,rotation,similitude,codageAngleDroit,afficheLongueurSegment,longueur,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Calculer une longueur avec le théorème de Pythagore'\n\n/**\n * Exercices sur le théorème de Pythagore avec MathALEA2D\n * @Auteur Rémi Angot\n * 4G20\n */\nexport default function Pythagore2D() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.nbQuestions = 3;\n  this.nbCols = 3;\n  this.nbColsCorr = 1;\n  this.typeExercice = 'Calculer';\n  this.video = 'M9sceJ8gzNc';\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let listeTypeDeQuestions = [];\n    let liste_de_noms_de_polygones = [];\n    if (this.sup == 1) {\n      this.consigne = \"Dans chaque cas, donner l'égalité de Pythagore.\"\n    } else if (this.sup == 2) {\n      this.consigne = \"Dans chaque cas, compléter l'égalité en utilisant le théorème de Pythagore.\"\n    } else {\n      this.consigne = \"Dans chaque cas, calculer la longueur manquante.\"\n    }\n    if (this.sup == 2 || this.typeExercice == 'Calculer') {\n      listeTypeDeQuestions = combinaisonListes(['AB', 'BC', 'AC'], this.nbQuestions)\n    }\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = '';\n      texteCorr = '';\n      let A1 = point(0, 0)\n      let B1 = point(calcul(randint(22, 50) / 10), 0)\n      let C1 = similitude(B1, A1, 90, calcul(randint(22, 50) / 10) / longueur(A1, B1))\n      let p1 = polygone(A1, B1, C1)\n      p1.isVisible = false\n      let p2 = rotation(p1, A1, randint(0, 360))\n      let A = p2.listePoints[0]\n      let B = p2.listePoints[1]\n      let C = p2.listePoints[2]\n      let codage = codageAngleDroit(B, A, C)\n      let xmin = Math.min(A.x, B.x, C.x) - 1\n      let ymin = Math.min(A.y, B.y, C.y) - 1\n      let xmax = Math.max(A.x, B.x, C.x) + 1\n      let ymax = Math.max(A.y, B.y, C.y) + 1\n      let nomDuPolygone = creerNomDePolygone(3, liste_de_noms_de_polygones);\n      liste_de_noms_de_polygones.push(nomDuPolygone)\n      let nomme = nommePolygone(p2, nomDuPolygone)\n      let affAB = afficheLongueurSegment(B, A)\n      let affAC = afficheLongueurSegment(A, C)\n      let affBC = afficheLongueurSegment(C, B)\n      let longueurAB = longueur(A, B, 1)\n      let longueurAC = longueur(A, C, 1)\n      let longueurBC = longueur(B, C, 1)\n      let mesObjetsATracer = [codage, p2, nomme]\n\n      if (this.typeExercice == 'Calculer' && listeTypeDeQuestions[i] == 'AB') {\n        mesObjetsATracer.push(affAC, affBC)\n      }\n      if (this.typeExercice == 'Calculer' && listeTypeDeQuestions[i] == 'BC') {\n        mesObjetsATracer.push(affAC, affAB)\n      }\n      if (this.typeExercice == 'Calculer' && listeTypeDeQuestions[i] == 'AC') {\n        mesObjetsATracer.push(affAB, affBC)\n      }\n\n      if (!sortieHtml) { texte = '~\\\\\\\\' }\n      texte += mathalea2d({ xmin: xmin, xmax: xmax, ymin: ymin, ymax: ymax, scale: .6 }, mesObjetsATracer);\n      if (this.sup == 2) {\n        if (listeTypeDeQuestions[i] == 'AB') {\n          texte += `<br>$${A.nom + B.nom}^2=\\\\ldots$`\n        }\n        if (listeTypeDeQuestions[i] == 'BC') {\n          texte += `<br>$${B.nom + C.nom}^2=\\\\ldots$`\n        }\n        if (listeTypeDeQuestions[i] == 'AC') {\n          texte += `<br>$${A.nom + C.nom}^2=\\\\ldots$`\n        }\n      }\n      if (!sortieHtml && i != this.nbQuestions - 1) { texte += '\\\\columnbreak' } //pour la sortie LaTeX sauf la dernière question\n\n      texteCorr = `Le triangle $${nomDuPolygone}$ est rectangle en $${A.nom}$ donc d'après le théorème de Pythagore, on a : `;\n      texteCorr += `$${B.nom + C.nom}^2=${A.nom + B.nom}^2+${A.nom + C.nom}^2$`\n      if (this.sup == 2) {\n        if (listeTypeDeQuestions[i] == 'AB') {\n          texteCorr += ` d'où $${A.nom + B.nom}^2=${B.nom + C.nom}^2-${A.nom + C.nom}^2$.`\n        }\n        if (listeTypeDeQuestions[i] == 'BC') {\n          texteCorr += `.`\n        }\n        if (listeTypeDeQuestions[i] == 'AC') {\n          texteCorr += ` d'où $${A.nom + C.nom}^2=${B.nom + C.nom}^2-${A.nom + B.nom}^2$.`\n        }\n      }\n      if (this.typeExercice == \"Calculer\") {\n        if (listeTypeDeQuestions[i] == 'AB') {\n          texteCorr += ` donc $${A.nom + B.nom}^2=${B.nom + C.nom}^2-${A.nom + C.nom}^2$`\n          texteCorr += `<br> $${A.nom + B.nom}^2=${texNombre(longueurBC)}^2-${texNombre(longueurAC)}^2=${texNombrec(longueurBC ** 2 - longueurAC ** 2)}$`\n          texteCorr += `<br> $${A.nom + B.nom}=\\\\sqrt{${texNombrec(longueurBC ** 2 - longueurAC ** 2)}}$`\n          if (calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1) == calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 5)) {\n            texteCorr += `<br> $${A.nom + B.nom}=${texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1))}$ cm.`\n          } else {\n            texteCorr += `<br> $${A.nom + B.nom}\\\\approx${texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAC ** 2), 1))}$ cm.`\n          }\n        }\n        if (listeTypeDeQuestions[i] == 'BC') {\n          texteCorr += `<br> $${B.nom + C.nom}^2=${texNombre(longueurAB)}^2+${texNombre(longueurAC)}^2=${texNombrec(longueurAB ** 2 + longueurAC ** 2)}$`\n          texteCorr += `<br> $${B.nom + C.nom}=\\\\sqrt{${texNombrec(longueurAB ** 2 + longueurAC ** 2)}}$`\n          if (calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1) == calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 5)) {\n            texteCorr += `<br> $${B.nom + C.nom}=${texNombre(calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1))}$ cm.`\n          } else {\n            texteCorr += `<br> $${B.nom + C.nom}\\\\approx${texNombre(calcul(Math.sqrt(longueurAB ** 2 + longueurAC ** 2), 1))}$ cm.`\n          }\n        }\n        if (listeTypeDeQuestions[i] == 'AC') {\n          texteCorr += ` donc $${A.nom + C.nom}^2=${B.nom + C.nom}^2-${A.nom + B.nom}^2$`\n          texteCorr += `<br> $${A.nom + C.nom}^2=${texNombre(longueurBC)}^2-${texNombre(longueurAB)}^2=${texNombrec(longueurBC ** 2 - longueurAB ** 2)}$`\n          texteCorr += `<br> $${A.nom + C.nom}=\\\\sqrt{${texNombrec(longueurBC ** 2 - longueurAB ** 2)}}$`\n          if (calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1) == calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 5)) {\n            texteCorr += `<br> $${A.nom + C.nom}=${texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1))}$ cm.`\n          } else {\n            texteCorr += `<br> $${A.nom + C.nom}\\\\approx${texNombre(calcul(Math.sqrt(longueurBC ** 2 - longueurAB ** 2), 1))}$ cm.`\n          }\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  //this.besoinFormulaireNumerique = ['Niveau de difficulté',3,\"1 : Donner l'égalité de Pythagore\\n2 : Compléter l'égalité de Pythagore\\n3 : Calculer une longueur manquante\"];\n}\n// 4G20-1\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}