{"version":3,"file":"js/88827.cc851d7a863aded6dbf3.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4G20MG32.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, listeQuestionsToContenuSansNumero, randint, choice, arrondiVirgule, calcul, lettreDepuisChiffre } from '../../modules/outils.js'\nexport const titre = 'Calculer une longueur avec l’égalité de Pythagore (MG32)'\n\n/**\n * @author Jean-Claude Lhote\n * 4G20MG32\n */\nexport default function Exercice_Pythagore () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1 // 1 calcul de l'hypoténuse 2 calcul d'un côté de l'angle droit\n  context.isHtml ? (this.spacingCorr = 2.5) : (this.spacingCorr = 1.5)\n  this.listePackages = 'tkz-euclide'\n  this.typeExercice = 'MG32'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.dimensionsDivMg32 = [700, 500]\n    this.listeQuestions = []\n    this.listeCorrections = [] // Liste de questions corrigées\n    const lettre0 = randint(11, 25) // aleatoirisation du nom des points\n    const s0 = lettreDepuisChiffre(lettre0)\n    const lettre1 = randint(11, 25, [lettre0])\n    const s1 = lettreDepuisChiffre(lettre1)\n    const lettre2 = randint(11, 25, [lettre0, lettre1])\n    const s2 = lettreDepuisChiffre(lettre2)\n    let typesDeQuestions, texte, texteCorr\n    if (this.sup == 1) {\n      typesDeQuestions = 1 // calcul de l'hypoténuse\n    }\n    if (this.sup == 2) {\n      typesDeQuestions = 2 // calcul d'un côté de l'angle droit\n    }\n    if (this.sup == 3) {\n      typesDeQuestions = randint(1, 2) // un des deux calculs\n    }\n    if (this.sup == 4) {\n      typesDeQuestions = randint(3, 4)\n    }\n    const nom_du_triangle = choice([\n      s0 + s1 + s2,\n      s0 + s2 + s1,\n      s1 + s0 + s2,\n      s1 + s2 + s0,\n      s2 + s0 + s1,\n      s2 + s1 + s0\n    ])\n    const k1 = Math.round((Math.random() * 3 + 3) * 10) / 10\n    const k2 = Math.round((Math.random() * 3 + 2) * 10) / 10\n    const alpha1 = Math.random() * Math.PI - Math.PI / 2\n    const alpha1deg = Math.round((alpha1 * 180) / Math.PI)\n    const x1 = k1 // coordonnées des deux sommets du triangle\n    const y2 = k2\n    const s01 = arrondiVirgule(k1, 1) // mise en texte avec 1 chiffres après la virgule pour énoncé\n    const s02 = arrondiVirgule(k2, 1)\n\n    const carre01 = Math.round(k1 * k1 * 100) / 100\n    const carre02 = Math.round(k2 * k2 * 100) / 100\n    let dist12 = Math.sqrt(carre01 + carre02) // calcul de l'hypoténuse\n    dist12 = Math.round(dist12 * 10) / 10 // On ne garde qu'une approximation au dixième pour l'exercice\n    const s12 = arrondiVirgule(dist12, 1)\n    const carre12 = Math.round(dist12 * dist12 * 100) / 100\n\n    const scarre01 = arrondiVirgule(carre01, 2) // carremn = distance entre (xm;ym) et (xn;yn) au carré avec 2 décimales\n    const scarre02 = arrondiVirgule(carre02, 2) // scarremn = chaine de caractère avec 2 décimales après une virgule.\n    const scarre12 = arrondiVirgule(carre12, 2)\n    if (context.isHtml) {\n      let codeBase64\n      if (alpha1deg < 0) {\n        codeBase64 =\n          'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAQzAAACtAAAAQEAAAAAAAAAAQAAACH#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAFBAMA7AAAAAAAAwCAAAAAAAAAFAAFAcLFHrhR64UBneFHrhR64#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8BAAAAABYAAAEAAQAAAAEBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8BAAAAAA4AAUkAwBgAAAAAAAAAAAAAAAAAAAUAAUBHq0OVgQYlAAAAAv####8AAAABAAlDRHJvaXRlQUIA#####wEAAAAAEAAAAQABAAAAAQAAAAP#####AAAAAQAWQ0Ryb2l0ZVBlcnBlbmRpY3VsYWlyZQD#####AQAAAAAWAAABAAEAAAABAAAABP####8AAAABAAlDQ2VyY2xlT0EA#####wEAAAAAAQAAAAEAAAAD#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAUAAAAG#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wEAAAAAFgAAAQUAAQAAAAcAAAAJAP####8BAAAAAA4AAUoAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAAQAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MQABNgAAAAFAGAAAAAAAAAAAABEA#####wACeDIAATQAAAABQBAAAAAAAAAAAAARAP####8ACGFscGhhZGVnAAMtOTD#####AAAAAQAMQ01vaW5zVW5haXJlAAAAAUBWgAAAAAAA#####wAAAAEAEENQb2ludERhbnNSZXBlcmUA#####wEAAAAAFgABWgDAFAAAAAAAAEAAAAAAAAAABwAAAAAKAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAEwD#####AQAAAAAWAAFGAAAAAAAAAAAAQAgAAAAAAAAHAAAAAAoAAAAOAAAADwAAAAEAAAAAAAAAAAAAABMA#####wEAAAAAFgABRAAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAAAQAAAAAAAAAAAAAADgAAABD#####AAAAAQAJQ1JvdGF0aW9uAP####8AAAASAAAADgAAABEAAAAPAP####8AAAAAABYAAUIAQCoAAAAAAADALgAAAAAAAAcAAAAAEwAAABUAAAAPAP####8AAAAAABYAAUMAQBAAAAAAAADAOwAAAAAAAAcAAAAAFAAAABX#####AAAAAQAJQ1BvbHlnb25lAP####8AAAAAAAIAAAAEAAAAEgAAABYAAAAXAAAAEv####8AAAACABdDTWFycXVlQW5nbGVHZW9tZXRyaXF1ZQD#####AAAA#wAEAAAAAUAwAAAAAAAAAAAAFgAAABIAAAAX#####wAAAAEACENTZWdtZW50AP####8BAAD#ABAAAAEABAAAABcAAAAW#####wAAAAEAEENNYWNyb0FwcGFyaXRpb24A#####wD#AAAB#####xBAh8ij1wo9cUBHYUeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAFQXBwQkMAAAAAAAEAAAAaAP####8AAAABABFDTWFjcm9EaXNwYXJpdGlvbgD#####AP8AAAH#####EECKaKPXCj1xQEphR64UeuECAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAZNYXNxQkMAAAAAAAEAAAAa#####wAAAAEAC0NNYWNyb1BhdXNlAP####8A#wAAAf####8QQI1oo9cKPXFASuFHrhR64QIAAAAAAAAAAAAAAAABAAAAAAAAAAAABVBhdXNlAAAAAAABAAAAGQD#####AAAA#wH#####EECIIKPXCj1xQFqwo9cKPXACAAAAAAAAAAAAAAAAAQAAAAAAAAAAAApNYXNxQW5nZHJ0AAAAAAABAAAAGQAAABgA#####wAAAP8B#####xBAjAij1wo9cUBa8KPXCj1wAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAJQXBwQW5nRHJ0AAAAAAABAAAAGQD#####AAAAAQARQ01hY3JvU3VpdGVNYWNyb3MA#####wAAAP8B#####xBAWMUeuFHrhUB4fCj1wo9cAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAALaHlwb3TDqW51c2UAAAAAAAsAAAAeAAAAGwAAAB0AAAAfAAAAHAAAAB0AAAAeAAAAGwAAAB0AAAAcAAAAHwAAAA7##########w=='\n      } else {\n        codeBase64 =\n          'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAQzAAACtAAAAQEAAAAAAAAAAQAAACH#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAFBAMAUAAAAAAAAQBQAAAAAAAAFAAFAbFo9cKPXBkB0BhR64Ueu#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8BAAAAABYAAAEAAQAAAAEBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8BAAAAAA4AAUkAwBgAAAAAAAAAAAAAAAAAAAUAAUBHq0OVgQYlAAAAAv####8AAAABAAlDRHJvaXRlQUIA#####wEAAAAAEAAAAQABAAAAAQAAAAP#####AAAAAQAWQ0Ryb2l0ZVBlcnBlbmRpY3VsYWlyZQD#####AQAAAAAWAAABAAEAAAABAAAABP####8AAAABAAlDQ2VyY2xlT0EA#####wEAAAAAAQAAAAEAAAAD#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAUAAAAG#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wEAAAAAFgAAAQUAAQAAAAcAAAAJAP####8BAAAAAA4AAUoAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAAQAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MQABNgAAAAFAGAAAAAAAAAAAABEA#####wACeDIAATQAAAABQBAAAAAAAAAAAAARAP####8ACGFscGhhZGVnAAI5MAAAAAFAVoAAAAAAAP####8AAAABABBDUG9pbnREYW5zUmVwZXJlAP####8BAAAAABYAAVoAwBQAAAAAAABAAAAAAAAAAAcAAAAACgAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAAABIA#####wEAAAAAFgABRgAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAADgAAAA8AAAABAAAAAAAAAAAAAAASAP####8BAAAAABYAAUQAAAAAAAAAAABACAAAAAAAAAcAAAAACgAAAAEAAAAAAAAAAAAAAA4AAAAQ#####wAAAAEACUNSb3RhdGlvbgD#####AAAAEgAAAA4AAAARAAAADwD#####AAAAAAAWAAFCAEAqAAAAAAAAwDgAAAAAAAAHAAAAABMAAAAVAAAADwD#####AAAAAAAWAAFDAMA3AAAAAAAAwEAAAAAAAAAHAAAAABQAAAAV#####wAAAAEACUNQb2x5Z29uZQD#####AAAAAAACAAAABAAAABIAAAAWAAAAFwAAABL#####AAAAAgAXQ01hcnF1ZUFuZ2xlR2VvbWV0cmlxdWUA#####wAAAP8ABAAAAAFAMAAAAAAAAAAAABYAAAASAAAAF#####8AAAABAAhDU2VnbWVudAD#####AQAA#wAQAAABAAQAAAAXAAAAFv####8AAAABABBDTWFjcm9BcHBhcml0aW9uAP####8A#wAAAf####8QQIfIo9cKPXFAR2FHrhR64QIAAAAAAAAAAAAAAAABAAAAAAAAAAAABUFwcEJDAAAAAAABAAAAGgD#####AAAAAQARQ01hY3JvRGlzcGFyaXRpb24A#####wAAAP8B#####xBAimij1wo9cUBKYUeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAGTWFzcUJDAAAAAAABAAAAGv####8AAAABAAtDTWFjcm9QYXVzZQD#####AP8AAAH#####EECNaKPXCj1xQErhR64UeuECAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAVQYXVzZQAAAAAAAQAAABgA#####wAAAP8B#####xBAh#Cj1wo9cUBbcKPXCj1wAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAKTWFzcUFuZ0RydAAAAAAAAQAAABkAAAAXAP####8AAAD#Af####8QQIw4o9cKPXFAXPCj1wo9cAIAAAAAAAAAAAAAAAABAAAAAAAAAAAACUFwcEFuZ0RydAAAAAAAAQAAABkA#####wAAAAEAEUNNYWNyb1N1aXRlTWFjcm9zAP####8AAAD#Af####8QQFjFHrhR64VAeHwo9cKPXAIAAAAAAAAAAAAAAAABAAAAAAAAAAAAC2h5cG90w6ludXNlAAAAAAALAAAAHgAAABsAAAAdAAAAHwAAABwAAAAdAAAAHgAAABsAAAAdAAAAHwAAABwAAAAO##########8='\n      }\n\n      if (typesDeQuestions == 1  || typesDeQuestions == 3) {\n        // calcul direct de l'hypoténuse\n        texte = `Dans la figure ci-dessous, le triangle $${nom_du_triangle}$ est rectangle en $${s0}$, $${s0 + s1\n          }=${s01}$ cm, $${s0 + s2}=${s02}$ cm.`\n        texte += `<br>Le point $${s0}$ peut être déplacé.<br>`\n        texte += `Calculer $${s1 + s2}$.`\n        texteCorr = `Dans le triangle $${nom_du_triangle}$ rectangle en $${s0}$, d&rsquo;après le théorème de Pythagore, on a : $${s1 + s2\n          }^2 = ${s0 + s1}^2~+~${s0 + s2}^2.$<br>`\n        texteCorr +=\n          'D&rsquo;où ' +\n          `$${s1 + s2\n          }^2~=~${s01}^2~+~${s02}^2~=~${scarre01}~+~${scarre02}~=~${arrondiVirgule(\n            carre02 + carre01,\n            2\n          )}.$` +\n          '<br>'\n        texteCorr +=\n          'Soit ' +\n          `$${s1 + s2}~=~\\\\sqrt{${arrondiVirgule(\n            carre02 + carre01,\n            2\n          )}}~\\\\approx${s12}$` +\n          ' cm.'\n      }\n      if (typesDeQuestions == 2 || typesDeQuestions == 4) {\n        // Calcul d'un côté de l'angle droit\n        texte = `Dans la figure ci-dessous, le triangle $${nom_du_triangle}$ est rectangle en $${s0}$, $${s0 + s1\n          }=${s01}$ cm, $${s1 + s2}=${s12}$ cm.<br>`\n        texte += `Calculer $${s0 + s2}$.`\n        texteCorr = `Dans le triangle $${nom_du_triangle}$ rectangle en $${s0}$, d&rsquo;après le théorème de Pythagore, on a : $${s1 + s2\n          }^2 = ${s0 + s1}^2~+~${s0 + s2}^2.$<br>`\n        texteCorr +=\n          'D&rsquo;où ' +\n          `$${s0 + s2}^2~=~${s1 + s2}^2~-~${s0 + s1\n          }^2 = ${s12}^2~-~${s01}^2~=~${scarre12}~-~${scarre01}~=~${arrondiVirgule(\n            carre12 - carre01,\n            2\n          )}.$` +\n          '<br>'\n        texteCorr +=\n          'Soit ' +\n          `$${s0 + s2}~=~\\\\sqrt{${arrondiVirgule(\n            carre12 - carre01,\n            2\n          )}}~\\\\approx${s02}$` +\n          ' cm.'\n      }\n      if (typesDeQuestions < 3) {\n        this.typeExercice = 'MG32'\n        this.MG32codeBase64 = codeBase64\n        this.mg32init = (mtg32App, idDoc) => {\n          mtg32App.giveFormula2(idDoc, 'x2', y2)\n          mtg32App.giveFormula2(idDoc, 'x1', x1)\n          mtg32App.giveFormula2(idDoc, 'alphadeg', alpha1deg)\n          mtg32App.rename(idDoc, 'A', s0)\n          mtg32App.rename(idDoc, 'B', s1)\n          mtg32App.rename(idDoc, 'C', s2)\n          mtg32App.calculate(idDoc)\n          mtg32App.display(idDoc)\n        }\n        texte += `<br>$\\\\footnotesize{\\\\textit{Le point \\\\thickspace ${s0} peut être déplacé (si la figure est tronquée).}}$<br>`\n      } else {\n        this.typeExercice = ''\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n      if (typesDeQuestions < 3) {\n        listeQuestionsToContenu(this)\n      } else {\n        listeQuestionsToContenuSansNumero(this)\n      }\n    } else {\n      if (typesDeQuestions < 3) {\n        texte =\n          \"\\\\begin{minipage}{.7 \\\\linewidth} \t\\\\vspace{0cm} Sur la figure ci-contre (qui n'est pas en vraie grandeur), on a  : \\\\begin{itemize}\"\n        texte +=\n          '\\n\\t\\\\item Le côté ' +\n          `$[${s0 + s1}]$` +\n          ' est perpendiculaire au côté ' +\n          `$[${s0 + s2}]~;$`\n        if (typesDeQuestions == 1) {\n          // niveau 1 : Calcul de l'hypoténuse\n\n          // enoncé  niveau 1\n\n          texte +=\n            '\\n\\t\\\\item ' + `$${s0 + s1 + ' = ' + s01 + '~\\\\text{cm}~;'}$`\n          texte +=\n            '\\n\\t\\\\item ' + `$${s0 + s2 + ' = ' + s02 + '~\\\\text{cm}~;'}$`\n          texte +=\n            '\\\\end{itemize} \\\\bigskip\\n\\t  Calculer ' +\n            `$${s1 + s2}$` +\n            ' à 0,1 près. \\\\end{minipage}'\n        } else {\n          // niveau 2 : Calcul d'un côté de l'angle droit\n          // enoncé  niveau 2\n\n          texte +=\n            '\\n\\t\\\\item ' + `$${s1 + s2 + ' = ' + s12 + '~\\\\text{cm}~;'}$`\n          texte +=\n            '\\n\\t\\\\item ' + `$${s0 + s1 + ' = ' + s01 + '~\\\\text{cm}~;'}$`\n          texte +=\n            '\\\\end{itemize} \\\\bigskip  Calculer ' +\n            `$${s0 + s2}$` +\n            ' à 0,1 près. \\\\end{minipage}'\n        }\n        texte += '\\\\begin{minipage}{0.3 \\\\linewidth}'\n        // dessin de la figure\n        const scale = 0.7 * 6 / Math.max(x1, y2)\n        texte += `\\n \\\\begin{tikzpicture}[scale=${scale}]` // Balise début de figure\n        texte +=\n          '\\n\\t \\\\tkzDefPoints{0/0/' + s0 + ',' + x1 + '/0/B,0/' + y2 + '/C}' // créer les points du triangle initial\n        // Définit les points M et N par homothétie de centre C et de rapport 0,3<k<0,8\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n          s0 +\n          ' angle ' +\n          alpha1deg +\n          '](B) \\\\tkzGetPoint{' +\n          s1 +\n          '}' // transformer le premier point par rotation\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n          s0 +\n          ' angle ' +\n          alpha1deg +\n          '](C) \\\\tkzGetPoint{' +\n          s2 +\n          '}' // transformer le deuxième point par rotation\n        texte += '\\n\\t \\\\tkzDrawPolygon(' + s0 + ',' + s1 + ',' + s2 + ')' // Trace le triangle\n        // marquer l'angle droit\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n          s0 +\n          ' ratio 0.1](' +\n          s1 +\n          ')' +\n          '\\\\tkzGetPoint{B}'\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n          s0 +\n          ' angle 90](B) \\\\tkzGetPoint{C}'\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n          s0 +\n          ' ratio 0.1414](' +\n          s1 +\n          ')' +\n          '\\\\tkzGetPoint{A}'\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n          s0 +\n          ' angle 45](A) \\\\tkzGetPoint{A}'\n        texte += '\\n\\t \\\\tkzDrawPolygon(' + s0 + ',B,A,C)' // Trace la marque d'angle droit\n\n        if (alpha1deg > 0) {\n          // rotation \"angle droit dessous\"\n          texte += '\\n\\t \\\\tkzLabelPoints[below](' + s0 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[right](' + s1 + ')'\n          texte += '\\n\\t \\\\tkzLabelPoints[left](' + s2 + ')'\n        } else {\n          // rotation \"angle droit dessus\" position du nom inversée\n          texte += '\\n\\t \\\\tkzLabelPoints[above](' + s0 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[left](' + s1 + ')'\n          texte += '\\n\\t \\\\tkzLabelPoints[right](' + s2 + ')'\n        }\n        texte += '\\n \\\\end{tikzpicture}' // Balise de fin de figure\n        texte += '\\\\end{minipage}'\n      } else {\n        texte =\n          '\\\\begin{minipage}{.5 \\\\linewidth} \t\\\\vspace{0cm} Dans le triangle ' +\n          `${nom_du_triangle}` +\n          ' rectangle en ' +\n          `${s0}` +\n          ' : \\\\begin{itemize}'\n        // texte += '\\n\\t\\\\item Le côté ' + `$[${s0 + s1}]$` + ' est perpendiculaire au côté ' + `$[${s0 + s2}]~;$`\n        if (typesDeQuestions == 1) {\n          // niveau 1 : Calcul de l'hypoténuse\n\n          // enoncé  niveau 1\n\n          texte +=\n            '\\n\\t\\\\item ' + `$${s0 + s1 + ' = ' + s01 + '~\\\\text{cm}~;'}$`\n          texte +=\n            '\\n\\t\\\\item ' + `$${s0 + s2 + ' = ' + s02 + '~\\\\text{cm}~;'}$`\n          texte +=\n            '\\\\end{itemize} \\\\bigskip\\n\\t  Calculer ' +\n            `$${s1 + s2}$` +\n            ' à 0,1 près. \\\\end{minipage}'\n        } else {\n          // niveau 2 : Calcul d'un côté de l'angle droit\n          // enoncé  niveau 2\n\n          texte +=\n            '\\n\\t\\\\item ' + `$${s1 + s2 + ' = ' + s12 + '~\\\\text{cm}~;'}$`\n          texte +=\n            '\\n\\t\\\\item ' + `$${s0 + s1 + ' = ' + s01 + '~\\\\text{cm}~;'}$`\n          texte +=\n            '\\\\end{itemize} \\\\bigskip  Calculer ' +\n            `$${s0 + s2}$` +\n            ' à 0,1 près. \\\\end{minipage}'\n        }\n      }\n      this.listeQuestions.push(texte) // on envoie la question\n      // correction\n      if (typesDeQuestions == 2 || typesDeQuestions == 4) {\n        // niveau 2 : Calcul d'un côté de l'angle droit\n        texteCorr =\n          'Le triangle ' +\n          `$${nom_du_triangle}$` +\n          ' est rectangle en ' +\n          `$${s0}.$` +\n          \"<br>\\n D'après le théorème de Pythagore, on a :~\" +\n          `$${s1 + s2}^2 = ${s0 + s1}^2~+~${s0 + s2}^2.$`\n        texteCorr +=\n          \"<br>\\n D'où \" +\n          `$${s0 + s2}^2~=~${s1 + s2}^2~-~${s0 + s1\n          }^2 = ${s12}^2~-~${s01}^2~=~${scarre12}~-~${scarre01}~=~${arrondiVirgule(\n            carre12 - carre01,\n            2\n          )}.$`\n        texteCorr +=\n          '<br>\\n Soit ' +\n          `$${s0 + s2}~=~\\\\sqrt{${arrondiVirgule(\n            carre12 - carre01,\n            2\n          )}}~`\n        if (s02 == calcul(Math.sqrt(s12 ** 2 - s01 ** 2))) texteCorr += `=${s02}~\\\\text{cm}.$`\n        else texte += `\\\\approx${s02}~\\\\text{cm}.$`\n      } else {\n        texteCorr =\n          'Le triangle ' +\n          `$${nom_du_triangle}$` +\n          ' est rectangle en ' +\n          `$${s0}.$` +\n          \"<br>\\n D'après le théorème de Pythagore, on a \" +\n          `$${s1 + s2}^2 = ${s0 + s1}^2~+~${s0 + s2}^2.$`\n        texteCorr +=\n          \"<br>\\n D'où \" +\n          `$${s1 + s2\n          }^2~=~${s01}^2~+~${s02}^2~=~${scarre01}~+~${scarre02}~=~${arrondiVirgule(\n            carre02 + carre01,\n            2\n          )}.$`\n        texteCorr +=\n          '<br>\\n Soit ' +\n          `$${s1 + s2}~=~\\\\sqrt{${arrondiVirgule(\n            carre02 + carre01,\n            2\n          )}}~`\n        if (s12 == calcul(Math.sqrt(s01 ** 2 + s02 ** 2))) texteCorr += `=${s12}~\\\\text{cm}.$`\n        else texte += `\\\\approx${s12}~\\\\text{cm}.$`\n      }\n\n      this.listeCorrections.push(texteCorr)\n\n      listeQuestionsToContenuSansNumero(this)\n\n      // }end for\n    }\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    \"1 : Calcul de l'hypoténuse \\n 2 : Calcul d'un côté de l'angle droit\\n 3 : Calcul d'un côté quelconque\\n 4 : Sans la figure\"\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Exercice_Pythagore","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","context","spacingCorr","listePackages","typeExercice","nouvelleVersion","numeroExercice","dimensionsDivMg32","listeQuestions","listeCorrections","lettre0","randint","s0","lettreDepuisChiffre","lettre1","s1","lettre2","s2","typesDeQuestions","texte","texteCorr","nom_du_triangle","choice","k1","Math","round","random","k2","alpha1","PI","alpha1deg","x1","y2","s01","arrondiVirgule","s02","carre01","carre02","dist12","sqrt","s12","carre12","scarre01","scarre02","scarre12","codeBase64","MG32codeBase64","mg32init","mtg32App","idDoc","giveFormula2","rename","calculate","display","push","listeQuestionsToContenu","listeQuestionsToContenuSansNumero","max","calcul","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}