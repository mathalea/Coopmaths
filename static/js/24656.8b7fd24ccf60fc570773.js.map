{"version":3,"file":"js/24656.8b7fd24ccf60fc570773.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5P12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, prenom, prenomF, prenomM, miseEnEvidence, objet } from '../../modules/outils.js'\n\nexport const titre = 'Partager une quantité en deux ou trois parts selon un ratio donné'\n\n/**\n * Partager une quantité en deux ou trois parts selon un ratio donné.\n * @author Guillaume Valmont\n * Référence 5P12\n * Date de publication : 24/07/2021\n*/\nexport default function PartagerSelonUnRatio () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.nbQuestions = 1\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1\n  this.correctionDetailleeDisponible = true\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    for (let i = 0, texte, texteCorr, objet1, prenom1, prenom2, prenom3, quantite1, quantite2, quantite3, facteur, total, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      objet1 = objet()\n      prenom1 = prenomF()\n      prenom2 = prenomM()\n      prenom3 = prenom()\n      quantite1 = randint(2, 9)\n      quantite2 = randint(2, 9, [quantite1])\n      quantite3 = randint(2, 9, [quantite1, quantite2])\n      facteur = randint(2, 9)\n      if (this.sup.toString() === '1') { // Partage en deux parts\n        total = (quantite1 + quantite2) * facteur\n        texte = `${prenom1} et ${prenom2} veulent se partager leurs $${total}$ ${objet1} en deux parts selon le ratio $${quantite1} : ${quantite2}$. <br>`\n        texte += `Combien chacun recevra-t-il de ${objet1} ?`\n        texteCorr = ''\n        if (this.correctionDetaillee) {\n          texteCorr += `À chaque fois que ${prenom1} en reçoit $${quantite1}$, ${prenom2} en reçoit $${quantite2}$. Ce qui fait $${quantite1} + ${quantite2} = ${miseEnEvidence(quantite1 + quantite2)}$. <br>`\n        } else {\n          texteCorr += `$${quantite1} + ${quantite2} = ${miseEnEvidence(quantite1 + quantite2)}$ <br>`\n        }\n        if (this.correctionDetaillee) {\n          texteCorr += `En fait, à chaque passage, ils en reçoivent $${miseEnEvidence(quantite1 + quantite2)}$ au total.<br>`\n          texteCorr += `<br>Calculons le nombre de passages nécessaires pour se partager les $${total}$ ${objet1} :<br>`\n        }\n        texteCorr += `$${total} ${miseEnEvidence('\\\\div')} ${miseEnEvidence(quantite1 + quantite2)} = ${miseEnEvidence(facteur)}$`\n        if (this.correctionDetaillee) {\n          texteCorr += `.<br><br>Ils devront faire $${miseEnEvidence(facteur)}$ passages et à chaque passage, ${prenom1} recevra $${quantite1}$ ${objet1}. <br>`\n          texteCorr += `Au total, elle recevra $${quantite1} ${miseEnEvidence('\\\\times ' + facteur)} = ${quantite1 * facteur}$ ${objet1}. <br>`\n          texteCorr += `De la même façon, ${prenom2} recevra $${quantite2} ${miseEnEvidence('\\\\times ' + facteur)} = ${quantite2 * facteur}$ ${objet1}. <br>`\n        } else {\n          texteCorr += `<br>$\\\\text{${prenom1}} : \\\\text{${prenom2}} = ${quantite1} : ${quantite2} = ${quantite1 * facteur} : ${quantite2 * facteur}  \\\\text{ (en multipliant par }${miseEnEvidence(facteur)}\\\\text{)}$ <br>`\n        }\n        texteCorr += `<br>${prenom1} recevra $${quantite1 * facteur}$ ${objet1} et ${prenom2} en recevra $${quantite2 * facteur}$. <br>`\n      } else { // Partage en trois parts\n        total = (quantite1 + quantite2 + quantite3) * facteur\n        texte = `${prenom1}, ${prenom2} et ${prenom3} veulent se partager leurs $${total}$ ${objet1} en trois parts selon le ratio $${quantite1} : ${quantite2} : ${quantite3}$. <br>`\n        texte += `Combien chacun recevra-t-il de ${objet1} ?`\n        texteCorr = ''\n        if (this.correctionDetaillee) {\n          texteCorr += `À chaque fois que ${prenom1} en reçoit $${quantite1}$, ${prenom2} en reçoit $${quantite2}$ et ${prenom3} en reçoit $${quantite3}$. Ce qui fait $${quantite1} + ${quantite2} + ${quantite3} = ${miseEnEvidence(quantite1 + quantite2 + quantite3)}$. <br>`\n        } else {\n          texteCorr += `$${quantite1} + ${quantite2} + ${quantite3} = ${miseEnEvidence(quantite1 + quantite2 + quantite3)}$ <br>`\n        }\n        if (this.correctionDetaillee) {\n          texteCorr += `En fait, à chaque passage, ils en reçoivent $${miseEnEvidence(quantite1 + quantite2 + quantite3)}$ au total.<br>`\n          texteCorr += `<br>Calculons le nombre de passages nécessaires pour se partager les $${total}$ ${objet1} :<br>`\n        }\n        texteCorr += `$${total} ${miseEnEvidence('\\\\div')} ${miseEnEvidence(quantite1 + quantite2 + quantite3)} = ${miseEnEvidence(facteur)}$`\n        if (this.correctionDetaillee) {\n          texteCorr += `.<br><br>Ils devront faire $${miseEnEvidence(facteur)}$ passages et à chaque passage, ${prenom1} recevra $${quantite1}$ ${objet1}. <br>`\n          texteCorr += `Au total, elle recevra $${quantite1} ${miseEnEvidence('\\\\times ' + facteur)} = ${quantite1 * facteur}$ ${objet1}. <br>`\n          texteCorr += `De la même façon, ${prenom2} recevra $${quantite2} ${miseEnEvidence('\\\\times ' + facteur)} = ${quantite2 * facteur}$ ${objet1} et ${prenom3} recevra $${quantite3} ${miseEnEvidence('\\\\times ' + facteur)} = ${quantite3 * facteur}$ ${objet1}. <br>`\n        } else {\n          texteCorr += `<br>$\\\\text{${prenom1}} : \\\\text{${prenom2}} : \\\\text{${prenom3}} = ${quantite1 * facteur} : ${quantite2 * facteur} : ${quantite3 * facteur} \\\\text{ (en multipliant par }${miseEnEvidence(facteur)}\\\\text{)} $ <br>`\n        }\n        texteCorr += `<br>${prenom1} recevra $${quantite1 * facteur}$ ${objet1}, ${prenom2} en recevra $${quantite2 * facteur}$ et ${prenom3} en recevra $${quantite3 * facteur}$.`\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Partager en deux parts\\n2 : Partager en trois parts']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","PartagerSelonUnRatio","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","correctionDetailleeDisponible","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","autoCorrection","texte","texteCorr","objet1","prenom1","prenom2","prenom3","quantite1","quantite2","quantite3","facteur","total","i","cpt","objet","prenomF","prenomM","prenom","randint","toString","correctionDetaillee","miseEnEvidence","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined"],"sourceRoot":""}