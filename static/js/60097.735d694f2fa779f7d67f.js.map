{"version":3,"file":"js/60097.735d694f2fa779f7d67f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/3e/can3G03.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { randint, choice, calcul, creerNomDePolygone, texNombrec } from '../../../modules/outils.js'\nimport {\n  mathalea2d, point, pointAdistance, labelPoint, segment, milieu, texteParPosition\n} from '../../../modules/2d.js'\nexport const titre = 'Calculer une longueur avec le théorème de Thalès'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence can3G03\n * Date de publication sptembre 2021\n*/\nexport default function CalculLongueurThales2 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.typeExercice = 'simple' // Cette ligne est très importante pour faire faire un exercice simple !\n  this.formatChampTexte = 'largeur15 inline'\n  this.nbQuestions = 1\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n\n  this.nouvelleVersion = function () {\n    let nom, a, b, c, k, A, B, C, D, E, xmin, xmax, ymin, ymax, objets\n    if (choice([true, false])) {\n      nom = creerNomDePolygone(5, ['Q'])\n      k = choice([1.5, 2, 2.5])\n      b = randint(2, 5) * 2//\n      a = k * b\n      c = randint(2, 6, b)//\n\n      A = point(0, 0, nom[0], 'above')\n      B = pointAdistance(A, b, -30, nom[1], 'below')\n      C = pointAdistance(B, c, 110, nom[2], 'above')\n\n      D = pointAdistance(A, a, 150, nom[3], 'above')\n      E = pointAdistance(D, k * c, -70, nom[4], 'below')\n\n      // pol = polygoneAvecNom(A, D, C)\n      xmin = Math.min(A.x, B.x, C.x, D.x, E.x) - 2\n      ymin = Math.min(A.y, B.y, C.y, D.y, E.y) - 2\n      xmax = Math.max(A.x, B.x, C.x, D.x, E.x) + 2\n      ymax = Math.max(A.y, B.y, C.y, D.y, E.y) + 2\n      objets = []\n      objets.push(segment(B, D), segment(D, E), segment(C, E), segment(B, C), labelPoint(A, B, C, D, E))\n      objets.push(texteParPosition(`${texNombrec(b)}`, milieu(A, B).x, milieu(A, B).y - 0.7, 'milieu', 'black', 1, 'middle', true),\n        texteParPosition(`${texNombrec(c)}`, milieu(B, C).x + 0.5, milieu(B, C).y, 'milieu', 'black', 1, 'middle', true),\n        texteParPosition(`${texNombrec(a)}`, milieu(A, D).x + 0.5, milieu(A, D).y + 0.5, 'milieu', 'black', 1, 'middle', true))\n      this.question = `Les droites $(${nom[1]}${nom[2]})$ et $(${nom[3]}${nom[4]})$ sont parallèles.\n        Calculer $${nom[3]}${nom[4]}$.<br>`\n      this.question += mathalea2d({ xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax, pixelsParCm: 8, mainlevee: false, amplitude: 0.5, scale: 1, style: 'margin: auto' }, objets)\n      this.correction = ` Le triangle $${nom[0]}${nom[3]}${nom[4]}$ est un agrandissement du triangle $${nom[0]}${nom[1]}${nom[2]}$.<br>\n    Le coefficient d'agrandissement est  donné par :  $\\\\dfrac{${nom[0]}${nom[3]}}{${nom[0]}${nom[1]}}=\\\\dfrac{${texNombrec(a)}}{${b}}=${texNombrec(a / b)}$.<br>\n    On en déduit que les longueurs du triangle $${nom[0]}${nom[3]}${nom[4]}$ sont $${texNombrec(a / b)}$ fois plus grandes que les longueurs du triangle $${nom[0]}${nom[1]}${nom[2]}$. <br>\n        Ainsi, $${nom[3]}${nom[4]}=${texNombrec(a / b)}\\\\times ${c}=${texNombrec(a * c / b)}$.\n                  <br>`\n      this.reponse = calcul(a * c / b)\n    } else {\n      nom = creerNomDePolygone(5, ['Q'])\n      k = choice([1.5, 2, 2.5])\n      b = randint(2, 5) * 2//\n      a = k * b\n      c = randint(2, 6, b)//\n\n      A = point(0, 0, nom[0], 'above')\n      B = pointAdistance(A, c, -30, nom[1], 'below')\n      C = pointAdistance(B, b, 110, nom[2], 'above')\n\n      D = pointAdistance(A, k * c, 150, nom[3], 'above')\n      E = pointAdistance(D, a, -70, nom[4], 'below')\n\n      // pol = polygoneAvecNom(A, D, C)\n      xmin = Math.min(A.x, B.x, C.x, D.x, E.x) - 2\n      ymin = Math.min(A.y, B.y, C.y, D.y, E.y) - 2\n      xmax = Math.max(A.x, B.x, C.x, D.x, E.x) + 2\n      ymax = Math.max(A.y, B.y, C.y, D.y, E.y) + 2\n      objets = []\n      objets.push(segment(B, D), segment(D, E), segment(C, E), segment(B, C), labelPoint(A, B, C, D, E))\n      objets.push(texteParPosition(`${texNombrec(b)}`, milieu(B, C).x + 0.5, milieu(B, C).y, 'milieu', 'black', 1, 'middle', true),\n        texteParPosition(`${texNombrec(c)}`, milieu(A, B).x, milieu(A, B).y - 0.5, 'milieu', 'black', 1, 'middle', true),\n        texteParPosition(`${texNombrec(a)}`, milieu(D, E).x - 0.8, milieu(D, E).y, 'milieu', 'black', 1, 'middle', true))\n      this.question = `Les droites $(${nom[1]}${nom[2]})$ et $(${nom[3]}${nom[4]})$ sont parallèles. Calculer $${nom[3]}${nom[0]}$.<br>`\n      this.question += mathalea2d({ xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax, pixelsParCm: 8, mainlevee: false, amplitude: 0.5, scale: 1, style: 'margin: auto' }, objets)\n      this.correction = ` Le triangle $${nom[0]}${nom[3]}${nom[4]}$ est un agrandissement du triangle $${nom[0]}${nom[1]}${nom[2]}$.<br>\n       Le coefficient d'agrandissement est  donné par : $\\\\dfrac{${nom[3]}${nom[4]}}{${nom[2]}${nom[1]}}=\\\\dfrac{${texNombrec(a)}}{${b}}=${texNombrec(a / b)}$.<br>\n       On en déduit que les longueurs du triangle $${nom[0]}${nom[3]}${nom[4]}$ sont $${texNombrec(a / b)}$ fois plus grandes que les longueurs du triangle $${nom[0]}${nom[1]}${nom[2]}$. <br>\n           Ainsi, $${nom[3]}${nom[0]}=${texNombrec(a / b)}\\\\times ${c}=${texNombrec(a * c / b)}$.\n                     <br>`\n      this.reponse = calcul(a * c / b)\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","CalculLongueurThales2","typeExercice","formatChampTexte","nom","a","b","c","k","A","B","C","D","E","xmin","xmax","ymin","ymax","objets","choice","creerNomDePolygone","randint","point","pointAdistance","Math","min","x","y","max","segment","labelPoint","texteParPosition","texNombrec","milieu","question","mathalea2d","pixelsParCm","mainlevee","amplitude","scale","style","correction","reponse","calcul"],"sourceRoot":""}