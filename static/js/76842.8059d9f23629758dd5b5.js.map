{"version":3,"file":"js/76842.8059d9f23629758dd5b5.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4L10-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif, ecritureParentheseSiMoins, lettreDepuisChiffre } from '../../modules/outils.js'\nexport const titre = 'Réduire, si possible, une expression littérale simple'\n\n/**\n * Réduire, si possible, une expression littérale simple\n *\n * * ax+b\n * * a+bx\n * * ax-a\n * * ax+bx\n * * ax+x\n * * ax×b\n * * a×bx\n * * ax×bx\n * * ax+0\n * * ax×0\n * * ax^2×x\n * * ax^2-a\n * * ax^2-ax\n *\n *\n * @author Rémi Angot\n * 4L10-1\n */\nexport default function ReductionsPiegesClassiques () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Réduire, si possible, les expressions suivantes'\n  this.spacing = 1\n  this.nbQuestions = 10\n  this.sup = true\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = [\n      'ax+b',\n      'a+bx',\n      'ax-a',\n      'ax+bx',\n      'ax+x',\n      'ax×b',\n      'a×bx',\n      'ax×bx',\n      'ax+0',\n      'ax×0',\n      'ax^2×x',\n      'ax^2-a',\n      'ax^2-ax^2'\n    ]\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions); let typesDeQuestions // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, a, b, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      a = randint(2, 11)\n      b = randint(2, 11)\n      if (this.sup) {\n        a *= choice([-1, 1])\n        b *= choice([-1, 1])\n      }\n      switch (typesDeQuestions) {\n        case 'ax+b':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${a}x${ecritureAlgebrique(b)}$`\n          texteCorr = texte\n          break\n        case 'a+bx':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${a}${ecritureAlgebrique(b)}x$`\n          texteCorr = texte\n          break\n        case 'ax-a':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${Math.abs(a)}x-${Math.abs(a)}$`\n          texteCorr = texte\n          break\n        case 'ax+bx':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${a}x${ecritureAlgebrique(b)}x$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${a}x${ecritureAlgebrique(b)}x=${a + b}x$`\n          break\n        case 'ax+x':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${a}x+x$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${a}x+x=${a + 1}x$`\n          break\n        case 'ax×b':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${a}x\\\\times${ecritureParentheseSiNegatif(b)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${a}x\\\\times${ecritureParentheseSiNegatif(b)}=${a * b}x$`\n          break\n        case 'a×bx':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${a}\\\\times${ecritureParentheseSiMoins(b + 'x')}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${a}\\\\times${ecritureParentheseSiMoins(b + 'x')}=${a * b}x$`\n          break\n        case 'ax×bx':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${ecritureParentheseSiMoins(a + 'x')}\\\\times${ecritureParentheseSiMoins(b + 'x')}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${ecritureParentheseSiMoins(a + 'x')}\\\\times${ecritureParentheseSiMoins(b + 'x')}=${a * b}x^2$`\n          break\n        case 'ax+0':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${a}x+0$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${a}x+0=${a}x$`\n          break\n        case 'ax×0':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${a}x\\\\times 0$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${a}x\\\\times 0=0$`\n          break\n        case 'ax^2×x':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${ecritureParentheseSiMoins(a + 'x^2')}\\\\times x$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${ecritureParentheseSiMoins(a + 'x^2')}\\\\times x=${ecritureParentheseSiMoins(a + 'x^3')}$`\n          break\n        case 'ax^2-a':\n          a = Math.abs(a)\n          texte = `$${lettreDepuisChiffre(i + 1)}=${ecritureParentheseSiMoins(a + 'x^2')}-${a}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${ecritureParentheseSiMoins(a + 'x^2')}-${a}$`\n          break\n        case 'ax^2-ax^2':\n          a = Math.abs(a)\n          texte = `$${lettreDepuisChiffre(i + 1)}=${a}x^2-${a}x^2$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${a}x^2-${a}x^2=0$`\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Avec des nombres relatifs']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ReductionsPiegesClassiques","Exercice","this","consigne","spacing","nbQuestions","sup","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","typesDeQuestions","texte","texteCorr","a","b","i","cpt","randint","choice","lettreDepuisChiffre","ecritureAlgebrique","Math","abs","ecritureParentheseSiNegatif","ecritureParentheseSiMoins","indexOf","push","listeQuestionsToContenu","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}