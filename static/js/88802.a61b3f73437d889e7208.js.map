{"version":3,"file":"js/88802.a61b3f73437d889e7208.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F13-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, shuffle, cesar } from '../../modules/outils.js'\nimport { point, polygoneRegulier, repere2, graphiqueInterpole, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Spécial escape game'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * @author Jean-Claude Lhote\n * publié le  15/11/2020\n * ref 3F13-2\n */\nexport default function PremierEscapeGameMathalea () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Trouver le mot de passe.'\n  this.nbQuestions = 1\n  context.isHtml ? this.spacingCorr = 1 : this.spacingCorr = 1.5\n  context.isHtml ? this.spacing = 1 : this.spacing = 2\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  // this.sup2 = ''\n  this.pasDeVersionLatex = false\n  this.interactif = true\n  this.nouvelleVersion = function () {\n    const lettres = []; const mots = ['BMDF', 'OGNQ', 'BUQP', 'BAUP', 'BXGE', 'BDUJ', 'MZSXQE', 'BDUEYQ', 'BMDFUQ', 'HMXQGD', 'OAGBXQ', 'PDAUFQ', 'DQXMFUAZ', 'BMDMNAXQ', 'MPPUFUAZ', 'QJBAEMZF', 'RAZOFUAZ', 'OAYBXQJQ']\n    let alphabet = []\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.interactif = true\n    let texte = ''; let texteCorr = ''; let f1; let f2; let f3; let f4; let p\n    // Initialisation des tableaux\n    for (let i = 0; i < 26; i++) {\n      alphabet.push(String.fromCharCode(65 + i))\n    }\n    for (let y = 0; y < 5; y++) {\n      lettres.push(['*', '*', '*', '*', '*', '*'])\n    }\n\n    const type = parseInt(this.sup)\n    const mdp = cesar(mots[randint(0, 5) + (type - 1) * 6], 14)\n    const absc = []; const ord = []; let car\n    texte += ajouteChampTexte(this, 0, { texte: 'Taper le mot de passe en majuscules :' })\n    texteCorr += `Le mot de passe comporte ${2 + 2 * type} lettres.`\n    setReponse(this, 0, mdp)\n    for (let x = 0; x < type * 2 + 2; x++) {\n      car = mdp[x]\n      alphabet = alphabet.filter(item => item !== car)\n      if (x % 2 === 0) { absc.push(randint(0, 2)) } else { absc.push(randint(3, 5)) }\n      // Pour l'abscisse, pas de problème de doublons\n      if (x % 2 === 0) {\n        ord.push(randint(0, 4))// premier point, l'ordonnée n'est pas contrainte.\n      } else { ord.push(randint(0, 4, ord[x - 1])) } // pour le deuxième, on évite l'ordonnée précédente\n      if (lettres[ord[x]][absc[x]] === '*') { lettres[ord[x]][absc[x]] = car } else if (lettres[ord[x]][absc[x]] !== car) {\n        for (let i = 0; i < x; i++) {\n          if (absc[i] === absc[x] && ord[i] === ord[x]) {\n            ord[x] = (ord[x] + 1) % 5\n            i = 0\n          }\n        }\n        lettres[ord[x]][absc[x]] = car\n      }\n    }\n    for (let i = 0; i < type * 2 + 2; i++) {\n      absc[i]++ // On corrige les coordonnées des points\n      ord[i]++\n    }\n    // On complète la grille de lettres\n    alphabet = shuffle(alphabet)\n    for (let x = 0; x < 6; x++) {\n      for (let y = 0; y < 5; y++) {\n        if (lettres[y][x] === '*' && alphabet.length > 0) {\n          lettres[y][x] = alphabet.pop()\n        }\n      }\n    }\n    // On calcule les ordonnées de début et de fin de chaque courbe\n    const ord0 = [0, 0, 0, 0]; const ord6 = [0, 0, 0, 0]\n    const r = repere2({ xMin: -1, yMin: -1, xMax: 7, yMax: 6, xUnite: 2 })\n\n    for (let i = 0; i < type * 2 + 2; i += 2) {\n      if (ord[i] > ord[i + 1]) {\n        ord0[i / 2] = -2.34 + randint(0, 2)\n        ord6[i / 2] = 8.17 - randint(0, 2)\n      } else {\n        ord6[i / 2] = -2.34 + randint(0, 2)\n        ord0[i / 2] = 8.17 - randint(0, 2)\n      }\n    }\n    switch (type) {\n      case 1: // N&B\n        p = polygoneRegulier(point(-1, -2), point(15, -2), 4)\n        p.couleurDeRemplissage = 'gray'\n        p.opacite = 0.2\n        f1 = graphiqueInterpole([[0, ord0[0]], [absc[0], ord[0]], [absc[1], ord[1]], [7, ord6[0]]], { repere: r, color: 'black', step: 0.1 })\n        f2 = graphiqueInterpole([[0, ord0[1]], [absc[2], ord[2]], [absc[3], ord[3]], [7, ord6[1]]], { repere: r, color: 'white', step: 0.1 })\n        f1.epaisseur = 2\n        f2.epaisseur = 2\n        texte += mathalea2d({ xmin: -1, ymin: -1, xmax: 15, ymax: 7, pixelsParCm: 30 }, p, r, f1, f2) + '<br>'\n        break\n      case 2: // RGB\n        p = polygoneRegulier(point(-1, -2), point(15, -2), 4)\n        p.opacite = 0.2\n        p.couleurDeRemplissage = 'gray'\n        f1 = graphiqueInterpole([[0, ord0[0]], [absc[0], ord[0]], [absc[1], ord[1]], [7, ord6[0]]], { repere: r, color: 'red', step: 0.1 })\n        f2 = graphiqueInterpole([[0, ord0[1]], [absc[2], ord[2]], [absc[3], ord[3]], [7, ord6[1]]], { repere: r, color: 'green', step: 0.1 })\n        f3 = graphiqueInterpole([[0, ord0[2]], [absc[4], ord[4]], [absc[5], ord[5]], [7, ord6[2]]], { repere: r, color: 'blue', step: 0.1 })\n        f1.epaisseur = 2\n        f2.epaisseur = 2\n        f3.pepaisseur = 2\n        texte += mathalea2d({ xmin: -1, ymin: -1, xmax: 15, ymax: 7, pixelsParCm: 30 }, p, r, f1, f2, f3) + '<br>'\n        break\n      case 3: // CJMN\n        p = polygoneRegulier(point(-1, -2), point(15, -2), 4)\n        p.opacite = 0.2\n        p.couleurDeRemplissage = 'gray'\n        f1 = graphiqueInterpole([[0, ord0[0]], [absc[0], ord[0]], [absc[1], ord[1]], [7, ord6[0]]], { repere: r, color: 'cyan', step: 0.1 })\n        f2 = graphiqueInterpole([[0, ord0[1]], [absc[2], ord[2]], [absc[3], ord[3]], [7, ord6[1]]], { repere: r, color: 'yellow', step: 0.1 })\n        f3 = graphiqueInterpole([[0, ord0[2]], [absc[4], ord[4]], [absc[5], ord[5]], [7, ord6[2]]], { repere: r, color: 'magenta', step: 0.1 })\n        f4 = graphiqueInterpole([[0, ord0[3]], [absc[6], ord[6]], [absc[7], ord[7]], [7, ord6[3]]], { repere: r, color: 'black', step: 0.1 })\n        f1.epaisseur = 2\n        f2.epaisseur = 2\n        f3.pepaisseur = 2\n        f4.epaisseur = 2\n        texte += mathalea2d({ xmin: -1, ymin: -1, xmax: 15, ymax: 7, pixelsParCm: 30 }, p, r, f1, f2, f3, f4) + '<br>'\n        break\n    }\n    texte += '$\\\\begin{array}{|l|' + 'c|'.repeat(6) + '}\\n'\n    texte += '\\\\hline\\n'\n    texte += ' '\n    for (let j = 0; j < 6; j++) {\n      texte += ` & \\\\text{${j + 1}}`\n    }\n    texte += '\\\\\\\\\\\\hline\\n'\n    for (let i = 0; i < 5; i++) {\n      texte += `\\\\text{${i + 1}}`\n      for (let j = 0; j < 6; j++) {\n        texte += '& ' + lettres[i][j] // valeur dans le tableau\n      }\n      texte += '\\\\\\\\\\\\hline\\n'\n    }\n    texte += '\\\\end{array}\\n$'\n    texte += '<br>'\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n\n    // this.besoinFormulaire2Numerique = ['Coefficient de réduction(problèmes de type1)', 3, '1 : Décimal\\n 2 : Non décimal\\n 3 : Décimal ou non'];\n  }\n  this.besoinFormulaireNumerique = ['Catégorie', 3, '1 : Noir & Blanc\\n 2 : RGB\\n 3 : CJMN']\n  // this.besoinFormulaire2Texte = ['Quel est ton mot de passe ?', 1, 'Mot de passe (en majuscule):']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","PremierEscapeGameMathalea","Exercice","this","consigne","nbQuestions","context","spacingCorr","spacing","nbCols","nbColsCorr","sup","pasDeVersionLatex","interactif","nouvelleVersion","lettres","alphabet","listeQuestions","listeCorrections","f1","f2","f3","f4","p","texte","texteCorr","i","push","String","fromCharCode","y","type","parseInt","mdp","cesar","randint","absc","ord","car","ajouteChampTexte","setReponse","x","filter","item","shuffle","length","pop","ord0","ord6","r","repere2","xMin","yMin","xMax","yMax","xUnite","polygoneRegulier","point","couleurDeRemplissage","opacite","graphiqueInterpole","repere","color","step","epaisseur","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","pepaisseur","repeat","j","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}