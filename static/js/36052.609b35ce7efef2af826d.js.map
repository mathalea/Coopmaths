{"version":3,"file":"js/36052.609b35ce7efef2af826d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F12-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, abs, calcul, resolutionSystemeLineaire2x2, resolutionSystemeLineaire3x3, chercheMinMaxFonction, nombreDeChiffresDansLaPartieEntiere } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { courbe2, mathalea2d, repere2 } from '../../modules/2d.js'\nexport const titre = 'Lire l’image d’un nombre à partir d’un graphique'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n/**\n* Un graphique étant tracé, déterminer l'image de nombres donnés.\n* La fonction est un polynôme de degré 1, 2 ou 3 et les nombres des questions ne sont que des entiers.\n*\n* @author Rémi Angot\n* 3F12-4\n*/\nexport default function ImageGraphique () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.sup = 3\n  this.spacing = 1\n  context.isHtml ? this.spacingCorr = 3 : this.spacingCorr = 1\n  this.nbQuestions = 1\n  this.pointsParQuestions = 3\n  this.nbQuestionsModifiable = false\n  this.dimensionsDivMg32 = [800, 600]\n  this.pasDeVersionLatex = false\n  this.nbCols = 1\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    this.sup = parseInt(this.sup)\n    let a, b, c, d, x1, x2, x3, fx1, fx2, fx3, numa, dena, numb, denb, numc, denc, ymax, f\n\n    function initialiseVariables () {\n      x1 = randint(-6, -3)\n      x2 = randint(x1 + 3, 2)\n      x3 = randint(x2 + 2, 8)\n      fx1 = randint(-5, 5)\n      fx2 = randint(-6, 6)\n      fx3 = randint(-5, 5)\n      d = randint(-5, 5)\n      c = randint(-5, 5)\n      ymax = 7\n    };\n\n    initialiseVariables()\n\n    let texte = 'On a tracé ci-dessous la courbe représentative de la fonction $f$.<br>'; let texteCorr = ''\n    const r = repere2({ xMin: -7, xMax: 9, yMin: -7, yMax: 7 })\n    if (this.sup === 1) {\n      a = calcul((fx2 - fx1) / (x2 - x1))\n      b = calcul(fx1 - a * x1)\n      f = x => a * x + b\n\n      texte += `Déterminer par lecture graphique les images de $${x1}$ et de $${x2}$ par cette fonction $f$.<br>`\n      texteCorr = `L'image de $${x1}$ est $${fx1}$, on note $f(${x1})=${fx1}$.<br>`\n      texteCorr += `L'image de $${x2}$ est $${fx2}$, on note $f(${x2})=${fx2}$.`\n    }\n\n    if (this.sup === 2) {\n      x1 = randint(-6, -3)\n      x3 = randint(1, 6)\n      fx1 = randint(-5, 5)\n      fx3 = randint(-6, 6, c);\n      [[numa, dena], [numb, denb]] = resolutionSystemeLineaire2x2(x1, x3, fx1, fx3, c)\n      while (dena === 0 || denb === 0 || numa === 0) {\n        x1 = randint(-6, -3)\n        x3 = randint(1, 6)\n        fx1 = randint(-5, 5)\n        fx3 = randint(-6, 6, c)\n        ;[[numa, dena], [numb, denb]] = resolutionSystemeLineaire2x2(x1, x3, fx1, fx3, c)\n      }\n      a = numa / dena\n      b = numb / denb\n      x2 = 0\n      fx2 = c\n\n      f = x => a * x ** 2 + b * x + c\n    }\n\n    if (this.sup === 3) {\n      [[numa, dena], [numb, denb], [numc, denc]] = resolutionSystemeLineaire3x3(x1, x2, x3, fx1, fx2, fx3, d)\n      let [extremum1, extremum2] = chercheMinMaxFonction([numa / dena, numb / denb, numc / denc, d])\n      while (dena === 0 || denb === 0 || denc === 0 || abs(extremum1[1]) > ymax || abs(extremum2[1]) > ymax) {\n        initialiseVariables();\n        [[numa, dena], [numb, denb], [numc, denc]] = resolutionSystemeLineaire3x3(x1, x2, x3, fx1, fx2, fx3, d)\n        if (chercheMinMaxFonction([numa / dena, numb / denb, numc / denc, d]) === []) {\n          [extremum1, extremum2] = [[0, 999], [0, 999]]\n        } else {\n          [extremum1, extremum2] = chercheMinMaxFonction([numa / dena, numb / denb, numc / denc, d])\n        }\n      }\n      a = numa / dena\n      b = numb / denb\n      c = numc / denc\n\n      f = x => a * x ** 3 + b * x ** 2 + c * x + d\n    }\n\n    if (this.sup === 2 || this.sup === 3) {\n      texte += `Déterminer par lecture graphique les images de $${x1}$, de $${x2}$ et de $${x3}$ par cette fonction $f$.<br>`\n      texteCorr = `L'image de $${x1}$ est $${fx1}$, on note $f(${x1})=${fx1}$.<br>`\n      texteCorr += `L'image de $${x2}$ est $${fx2}$, on note $f(${x2})=${fx2}$.<br>`\n      texteCorr += `L'image de $${x3}$ est $${fx3}$, on note $f(${x3})=${fx3}$.<br>`\n    }\n    const C = courbe2(f, { repere: r, step: 0.25 })\n    texte += mathalea2d({ xmin: -7.5, xmax: 9.5, ymin: -7.5, ymax: 7.5, scale: 0.6 }, r, C)\n\n    if (context.isAmc) {\n      this.autoCorrection[0] = {\n        enonce: texte,\n        propositions: [\n          {\n            type: 'AMCNum',\n            propositions: [{\n              texte: `L'image de $${x1}$ est $${fx1}$, on note $f(${x1})=${fx1}$.\\\\\\\\`,\n              statut: '',\n              reponse: {\n                texte: `$f(${x1})$`,\n                valeur: fx1,\n                param: {\n                  digits: nombreDeChiffresDansLaPartieEntiere(fx1),\n                  decimals: 0,\n                  signe: true,\n                  approx: 0\n                }\n              }\n            }]\n          },\n          {\n            type: 'AMCNum',\n            propositions: [{\n              texte: `L'image de $${x2}$ est $${fx2}$, on note $f(${x2})=${fx2}$.\\\\\\\\`,\n              statut: '',\n              reponse: {\n                texte: `$f(${x2})$`,\n                valeur: fx2,\n                param: {\n                  digits: nombreDeChiffresDansLaPartieEntiere(fx2),\n                  decimals: 0,\n                  signe: true,\n                  approx: 0\n                }\n              }\n            }]\n          },\n          {\n            type: 'AMCNum',\n            propositions: [{\n              texte: `L'image de $${x3}$ est $${fx3}$, on note $f(${x3})=${fx3}$.\\\\\\\\`,\n              statut: '',\n              reponse: {\n                texte: `$f(${x3})$`,\n                valeur: fx3,\n                param: {\n                  digits: nombreDeChiffresDansLaPartieEntiere(fx3),\n                  decimals: 0,\n                  signe: true,\n                  approx: 0\n                }\n              }\n            }]\n          }\n        ]\n      }\n    } else if (this.interactif) {\n      if (this.sup === 1) {\n        texte += `$f(${x1})=$` + ajouteChampTexteMathLive(this, 0, 'largeur25 inline')\n        texte += `$f(${x2})=$` + ajouteChampTexteMathLive(this, 1, 'largeur25 inline')\n        setReponse(this, 0, f(x1))\n        setReponse(this, 1, f(x1))\n      } else {\n        texte += `<br><br>$f(${x1})=$` + ajouteChampTexteMathLive(this, 0, 'largeur25 inline')\n        texte += `<br><br>$f(${x2})=$` + ajouteChampTexteMathLive(this, 1, 'largeur25 inline')\n        texte += `<br><br>$f(${x3})=$` + ajouteChampTexteMathLive(this, 2, 'largeur25 inline')\n        setReponse(this, 0, f(x1))\n        setReponse(this, 1, f(x2))\n        setReponse(this, 2, f(x3))\n      }\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n\n  this.besoinFormulaireNumerique = ['Type de fonction', 3, '1 : Affine\\n2 : Polynome du 2nd degré\\n3 : Polynome du 3e degré']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","ImageGraphique","Exercice","this","consigne","sup","spacing","context","spacingCorr","nbQuestions","pointsParQuestions","nbQuestionsModifiable","dimensionsDivMg32","pasDeVersionLatex","nbCols","nouvelleVersion","numeroExercice","a","b","c","d","x1","x2","x3","fx1","fx2","fx3","numa","dena","numb","denb","numc","denc","ymax","f","initialiseVariables","randint","listeQuestions","listeCorrections","autoCorrection","contenu","contenuCorrection","parseInt","texte","texteCorr","r","repere2","xMin","xMax","yMin","yMax","calcul","x","resolutionSystemeLineaire2x2","resolutionSystemeLineaire3x3","extremum1","extremum2","chercheMinMaxFonction","abs","C","courbe2","repere","step","mathalea2d","xmin","xmax","ymin","scale","enonce","propositions","type","statut","reponse","valeur","param","digits","nombreDeChiffresDansLaPartieEntiere","decimals","signe","approx","interactif","ajouteChampTexteMathLive","setReponse","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","tableauSolutionsDuQcm","listePackages","consigneModifiable","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}