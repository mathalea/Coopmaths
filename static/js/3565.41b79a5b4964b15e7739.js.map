{"version":3,"file":"js/3565.41b79a5b4964b15e7739.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta2F31.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, choice, randint } from '../../modules/outils.js'\nimport { courbe2, droite, mathalea2d, repere2 } from '../../modules/2d.js'\nexport const titre = 'Exercice exemple'\n\n/**\n * Description didactique de l'exercice\n * @author\n * Référence\n*/\nexport default function NomQuelconqueDeLaFonctionQuiCreeExercice () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 3\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeFonctionsDisponibles = ['affine', 'carré', 'inverse', 'cube', 'racine carrée'] // On créé 3 types de questions\n    const listeTypeQuestions = combinaisonListes(typeFonctionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, a, b, x0, x1, coeff, y1, f, r, graph, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      r = repere2({ xMin: -10, yMin: -10, xMax: 10, yMax: 10 })\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'affine':\n          a = randint(3, 12) / 4 * choice([-1, 1])\n          b = randint(-9, 9, 0) / 4\n          if (a > 0) {\n            x0 = Math.ceil((-8 - b) / a)\n            x1 = Math.floor((8 - b) / a)\n          } else {\n            x1 = Math.ceil((-8 - b) / a)\n            x0 = Math.floor((8 - b) / a)\n          }\n          texteCorr = 'La fonction représentée est une fonction affine. Toute fonction affine est monotone.'\n          if (a < 0) {\n            texteCorr += '<br>Nous pouvons voir sur le zoom ci dessous que le coefficient de cette fonction est négatif.<br>'\n            texteCorr += `La fonction est donc décroissante sur  $\\\\mathbb{R}$ et donc en particulier sur $[${x0};${x1}]$.<br>`\n          } else {\n            texteCorr += '<br>Nous pouvons voir sur le zoom ci dessous que le coefficient de cette fonction est positif.<br>'\n            texteCorr += `La fonction est donc croissante sur  $\\\\mathbb{R}$ et donc en particulier sur $[${x0};${x1}]$.<br>`\n          }\n          f = x => a * x + b\n          graph = droite(a, -1, b)\n\n          break\n        case 'carré':\n          a = randint(3, 12) / 4 * choice([-1, 1])\n          b = randint(-9, 9, 0) / 4\n          if (choice([true, false])) {\n            x0 = -3\n            x1 = 0\n          } else {\n            x0 = 0\n            x1 = 3\n          }\n          f = x => x ** 2\n          graph = courbe2(f, { repere: r, step: 0.2, xMin: -3.2, xMax: 3.3, yMin: -11, yMax: 11 })\n          texteCorr = 'La fonction étudiée est la fonction carré. Nous savons que cette fonction est décroissante sur $\\\\mathbb{R^-}$ et croissante sur $\\\\mathbb{R^+}$'\n          if (x0 === -3) {\n            texteCorr += `la fonction est donc décroissante sur $[${x0};${x1}]$.`\n          } else {\n            texteCorr += `la fonction est donc croissante sur $[${x0};${x1}]$.`\n          }\n          break\n        case 'inverse':\n          a = randint(3, 12) / 4 * choice([-1, 1])\n          b = randint(-9, 9, 0) / 4\n          if (choice([true, false])) {\n            x0 = -8\n            x1 = -1\n          } else {\n            x0 = 1\n            x1 = 8\n          }\n\n          f = x => 1 / x\n          graph = courbe2(f, { repere: r, step: 0.1, xMin: -11, xMax: 11, yMin: -11, yMax: 11 })\n          texteCorr = 'La fonction représentée est la fonction inverse. Cette fonction est décroissante sur $\\\\mathbb{R^-}$ et sur $\\\\mathbb{R^+}$.'\n          texteCorr += `Elle est donc décroissante sur $[${x0};${x1}]$.`\n          break\n\n        case 'cube':\n          a = randint(3, 12) / 8 * choice([-1, 1])\n          b = randint(-9, 9, 0) / 4\n          x0 = choice([-2, -1])\n          x1 = choice([0, 1, 2])\n          f = x => x ** 3\n          graph = courbe2(f, { repere: r, step: 0.2, xMin: -2.2, xMax: 2.2, yMin: -11, yMax: 11 })\n          texteCorr = 'La fonction représentée est la fonction cube. Cette fonction est croissante sur $\\\\mathbb{R^-}$ et sur $\\\\mathbb{R^+}$.'\n          texteCorr += `Elle est donc croissante sur $[${x0};${x1}]$.`\n\n          break\n        case 'racine carrée':\n          a = randint(3, 12) / 8 * choice([-1, 1])\n          b = randint(1, 9) / 4\n          x0 = choice([0, 1, 2, 3])\n          x1 = randint(x0 + 2, 9)\n          f = x => Math.sqrt(x)\n          graph = courbe2(f, { repere: r, step: 0.2, xMin: 0, xMax: 11, yMin: -11, yMax: 11 })\n          texteCorr = 'La fonction représentée est la fonction racine carrée. Cette fonction est croissante sur $\\\\mathbb{R^+}$.'\n          texteCorr += `Elle est donc croissante sur $[${x0};${x1}]$.`\n          break\n      }\n      graph.epaisseur = 2\n      texte = `Déterminer la croissance de la fonction $f$ représentée ci-dessous sur l'intervalle $[${x0};${x1}]$.`\n      texte += mathalea2d({ xmin: -10, ymin: -10, xmax: 10, ymax: 10 }, r, graph)\n      coeff = 20 / Math.max(Math.abs(f(x0) - f(x1)), Math.abs(x0 - x1))\n      r = repere2({ xUnite: coeff, yUnite: coeff, xMin: Math.min(0, x0 - 1), yMin: Math.min(0, Math.floor(f(x0)), Math.floor(f(x1))) - 1, xMax: Math.max(0, x1 + 1), yMax: Math.max(0, Math.ceil(f(x0)), Math.ceil(f(x1))) + 1 })\n      graph = courbe2(f, { repere: r, step: 0.3 / coeff, xMin: x0, xMax: x1, color: 'red' })\n      texteCorr += mathalea2d({ xmin: Math.min(-1, x0 * coeff - 1), ymin: Math.min(-1, coeff * Math.min(Math.floor(f(x0)), Math.floor(f(x1))) - 1), xmax: Math.max(0, coeff * x1 + 1), ymax: Math.max(0, 1 + coeff * Math.max(Math.ceil(f(x0)), Math.ceil(f(x1)))) }, r, graph)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        console.log(texte)\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","NomQuelconqueDeLaFonctionQuiCreeExercice","sup","listeTypeQuestions","combinaisonListes","a","b","x0","x1","coeff","f","r","graph","texte","texteCorr","cpt","repere2","xMin","yMin","xMax","yMax","randint","choice","Math","ceil","floor","x","droite","courbe2","repere","step","sqrt","epaisseur","mathalea2d","xmin","ymin","xmax","ymax","max","abs","xUnite","yUnite","min","color","console","log","listeQuestionsToContenu"],"sourceRoot":""}