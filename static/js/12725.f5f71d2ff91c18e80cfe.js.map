{"version":3,"file":"js/12725.f5f71d2ff91c18e80cfe.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G10-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,calcul,choisitLettresDifferentes,lettreDepuisChiffre,arcenciel} from '../../modules/outils.js'\nimport {point,tracePoint,labelPoint,arcPointPointAngle,dansLaCibleCarree,cibleCarree,rotation,longueur,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Construire l’image d’un point par une rotation avec cible auto-corrective'\n\n/**\n * Construction d'images par rotation avec dispositif d'auto-correction aléatoire\n * Ref 3G10-3\n * @author Jean-Claude Lhote\n * Publié le 30/11/2020\n */\nexport default function Construire_rotation_point_3e() {\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.consigne = \"\";\n\tthis.nbQuestions = 1;\n\tthis.nbQuestionsModifiable = false;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.sup = 3;\n\tthis.nouvelleVersion = function () {\n\t\tlet nontrouve,assezloin,cible\n\t\tlet angle = randint(-8, 8, 0) * 10;\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tlet result = [0, 0], texteCorr = \"\", nbpoints = parseInt(this.sup);\n\t\tlet celluleAlea = function (rang) {\n\t\t\tlet lettre = lettreDepuisChiffre(randint(1, rang));\n\t\t\tlet chiffre = Number(randint(1, rang)).toString();\n\t\t\treturn lettre + chiffre;\n\t\t};\n\t\t// On prépare la figure...\n\t\tlet O = point(0, 0, 'O');\n\t\tlet noms = choisitLettresDifferentes(nbpoints, 'QO',true);\n\t\tthis.consigne = `Construire l'image des points $${noms[0]}$`;\n\t\tfor (let i = 1; i < nbpoints - 1; i++) {\n\t\t\tthis.consigne += `, $${noms[i]}$`;\n\t\t}\n\t\tthis.consigne += ` et $${noms[nbpoints - 1]}$ par la rotation de centre $O$`;\n\t\tthis.consigne += ` et d\\'angle $${Math.abs(angle)}\\\\degree$`;\n\t\tif (angle < 0)\n\t\t\tthis.consigne += ` dans le sens des aiguilles d'une montre.`;\n\t\telse\n\t\t\tthis.consigne += ` dans le sens contraire des aiguilles d'une montre.`;\n\t\tlet cibles = [], M = [], N = [], objetsEnonce = [], objetsCorrection = []; //cibles, M point marqués, N symétrique de M\n\t\tlet cellules = [];\n\t\tlet xMin, yMin, xMax, yMax;\n\t\t[xMin, yMin, xMax, yMax] = [0, 0, 0, 0];\n\t\tfor (let i = 0; i < nbpoints; i++) { //On place les cibles.\n\t\t\tN.push(point(calcul(randint(-80, 80, 0) / 10), calcul(randint(-80, 80, 0) / 10), noms[i] + \"\\'\"));\n\t\t\tnontrouve = true;\n\t\t\twhile (longueur(N[i], O) < 3 || nontrouve) {\n\t\t\t\tnontrouve = true;\n\t\t\t\tif (longueur(N[i], O) < 3) {\n\t\t\t\t\tN[i].x = calcul(randint(-80, 80, 0) / 10);\n\t\t\t\t\tN[i].y = calcul(randint(-80, 80, 0) / 10);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tassezloin = true;\n\t\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\t\tif (longueur(N[i], N[j]) < 4.5)\n\t\t\t\t\t\t\tassezloin = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (assezloin == false) { //éloigner les points donc les grilles\n\t\t\t\t\t\tN[i].x = calcul(randint(-80, 80, 0) / 10);\n\t\t\t\t\t\tN[i].y = calcul(randint(-80, 80, 0) / 10);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tnontrouve = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tobjetsEnonce.push(tracePoint(O), labelPoint(O));\n\t\tobjetsCorrection.push(tracePoint(O), labelPoint(O));\n\n\t\tfor (let i = 0; i < nbpoints; i++) {\n\t\t\tcellules.push(celluleAlea(4));\n\t\t\tresult = dansLaCibleCarree(N[i].x, N[i].y, 4, 0.6, cellules[i]);\n\t\t\tcible = cibleCarree({ x: result[0], y: result[1], rang: 4, num: i + 1, taille: 0.6 });\n\t\t\tcible.taille = 0.6;\n\t\t\tcible.color = 'orange';\n\t\t\tcible.opacite = 0.7;\n\t\t\tcibles.push(cible);\n\t\t}\n\t\tfor (let i = 0; i < nbpoints; i++) {\n\t\t\tM.push(rotation(N[i], O, -angle, noms[i]));\n\t\t\tobjetsEnonce.push(tracePoint(M[i]), labelPoint(M[i]), cibles[i]);\n\t\t\tobjetsCorrection.push(tracePoint(M[i], N[i]), labelPoint(M[i], N[i]), cibles[i]);\n\t\t\tobjetsCorrection.push(arcPointPointAngle(M[i], N[i], angle, true, arcenciel(i), 'gray', 0.2));\n\t\t\ttexteCorr += `$${noms[i]}\\'$, l\\'image du point $${noms[i]}$ est dans la case ${cellules[i]} de la grille ${i + 1}.<br>`;\n\t\t}\n\n\t\tfor (let i = 0; i < nbpoints; i++) {\n\t\t\txMin = Math.min(xMin, N[i].x - 3, M[i].x - 3);\n\t\t\tyMin = Math.min(yMin, N[i].y - 3, M[i].y - 3);\n\t\t\txMax = Math.max(xMax, N[i].x + 3, M[i].x + 3);\n\t\t\tyMax = Math.max(yMax, N[i].y + 3, M[i].y + 3);\n\t\t}\n\n\t\tlet fenetreMathalea2d = [xMin, yMin, xMax, yMax];\n\n\t\tthis.listeQuestions.push(mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 1 }, objetsEnonce));\n\t\tthis.listeCorrections.push(texteCorr + mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection));\n\t\tlisteQuestionsToContenu(this);\n\n\t\t//  let nonchoisi,coords=[],x,y,objetsEnonce=[],objetsCorrection=[],nomd,label_pos\n\t};\n\tthis.besoinFormulaireNumerique = ['Nombre de points (1 à 5)', 5, \"1\\n2\\n3\\n4\\n5\"];\n\t// this.besoinFormulaire2CaseACocher = [\"Avec des points de part et d'autre\"];\t\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Construire_rotation_point_3e","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","nouvelleVersion","nontrouve","assezloin","cible","angle","randint","listeQuestions","listeCorrections","result","texteCorr","nbpoints","parseInt","O","point","noms","choisitLettresDifferentes","i","Math","abs","xMin","yMin","xMax","yMax","cibles","M","N","objetsEnonce","objetsCorrection","cellules","push","calcul","longueur","x","y","j","tracePoint","labelPoint","rang","lettreDepuisChiffre","Number","toString","dansLaCibleCarree","cibleCarree","num","taille","color","opacite","rotation","arcPointPointAngle","arcenciel","min","max","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}