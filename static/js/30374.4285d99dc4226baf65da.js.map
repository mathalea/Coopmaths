{"version":3,"file":"js/30374.4285d99dc4226baf65da.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/5e/can5P04.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { randint, calcul, choice, texNombrec, texteEnCouleur } from '../../../modules/outils.js'\nexport const titre = 'Calculer avec une proportion'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence\n * Date de publication\n*/\nexport default function PoucentageP1 () {\n  Exercice.call(this)\n  this.typeExercice = 'simple'\n  this.nbQuestions = 1\n  this.tailleDiaporama = 1\n  this.formatChampTexte = 'largeur15 inline'\n  this.nouvelleVersion = function () {\n    let b, caractere\n\n    switch (choice(['a', 'b', 'c', 'd', 'e', 'f'])) {\n      case 'a':\n        b = randint(3, 7) * 5\n        caractere = choice(['des lunettes', 'un frère', 'un chien', 'un abonnement à une revue', 'une licence à l’UNSS', 'un sac à roulette'])\n        this.question = `$\\\\dfrac{1}{5}$ des élèves d'une classe de $${b}$ élèves a ${caractere}.<br>\n              Quel est le nombre d'élèves n'en ayant pas ?`\n        this.correction = `On calcule d'abord $\\\\dfrac{1}{5}$ de $${b}$ .<br>\n        $\\\\dfrac{1}{5}\\\\times ${b}=\\\\dfrac{${b}}{5}=${texNombrec(b / 5)}$.<br>\n        $${texNombrec(b / 5)}$ élèves ont ${caractere} .<br>\n          Le nombre d'élèves  n'en ayant pas est donc donné par : $${b}-${texNombrec(b / 5)}=${texNombrec(b - b / 5)}$`\n        this.correction += texteEnCouleur(`<br> Mentalement : <br>\n          Pour calculer $\\\\dfrac{1}{5}$ d'une quantité, on la divise par $5$. <br>\n          Ainsi, $\\\\dfrac{1}{5}\\\\times ${b}=${b}\\\\div 5=${b / 5}$.`)\n        this.reponse = calcul(4 * b / 5)\n        break\n      case 'b':\n        b = randint(3, 6) * 6\n        caractere = choice(['des lunettes', 'un frère', ' un chien', 'un abonnement à une revue', 'une licence à l’UNSS', 'un sac à roulette'])\n        this.question = `$\\\\dfrac{1}{6}$ des élèves d'une classe de $${b}$ élèves a ${caractere}.<br>\n            Quel est le nombre d'élèves n'en ayant pas ?`\n        this.correction = `On calcule d'abord $\\\\dfrac{1}{6}$ de $${b}$ .<br>\n        $\\\\dfrac{1}{6}\\\\times ${b}=\\\\dfrac{${b}}{6}=${texNombrec(b / 6)}$.<br>\n        $${texNombrec(b / 6)}$ élèves ont ${caractere} .<br>\n          Le nombre d'élèves  n'en ayant pas est donc donné par : $${b}-${texNombrec(b / 6)}=${texNombrec(b - b / 6)}$`\n        this.correction += texteEnCouleur(`<br> Mentalement : <br>\n          Pour calculer $\\\\dfrac{1}{6}$ d'une quantité, on la divise par $6$. <br>\n          Ainsi, $\\\\dfrac{1}{6}\\\\times ${b}=${b}\\\\div 6=${b / 6}$.`)\n        this.reponse = calcul(5 * b / 6)\n        break\n      case 'c':\n        b = randint(2, 5) * 7\n        caractere = choice(['des lunettes', 'un frère', 'un chien', 'un abonnement à une revue', 'une licence à l’UNSS', 'un sac à roulette'])\n        this.question = `$\\\\dfrac{1}{7}$ d'une classe de $${b}$ élèves a ${caractere}.<br>\n        Quel est le nombre d'élèves n'en ayant pas ?`\n        this.correction = `On calcule d'abord $\\\\dfrac{1}{7}$ de $${b}$ .<br>\n        $\\\\dfrac{1}{7}\\\\times ${b}=\\\\dfrac{${b}}{7}=${texNombrec(b / 7)}$.<br>\n        $${texNombrec(b / 7)}$ élèves ont ${caractere} .<br>\n          Le nombre d'élèves  n'en ayant pas est donc donné par : $${b}-${texNombrec(b / 7)}=${texNombrec(b - b / 7)}$`\n        this.correction += texteEnCouleur(`<br> Mentalement : <br>\n          Pour calculer $\\\\dfrac{1}{7}$ d'une quantité, on la divise par $7$. <br>\n          Ainsi, $\\\\dfrac{1}{7}\\\\times ${b}=${b}\\\\div 7=${b / 7}$.`)\n        this.reponse = calcul(6 * b / 7)\n        break\n      case 'd':\n        b = randint(3, 9) * 4\n        caractere = choice(['des lunettes', 'un frère', 'un chien', 'un abonnement à une revue', 'une licence à l’UNSS', 'un sac à roulette'])\n        this.question = `$\\\\dfrac{1}{4}$ d'une classe de $${b}$ élèves a ${caractere}.<br>\n            Quel est le nombre d'élèves n'en ayant pas ?`\n        this.correction = `On calcule d'abord $\\\\dfrac{1}{4}$ de $${b}$ .<br>\n            $\\\\dfrac{1}{4}\\\\times ${b}=\\\\dfrac{${b}}{4}=${texNombrec(b / 4)}$.<br>\n            $${texNombrec(b / 4)}$ élèves ont ${caractere} .<br>\n              Le nombre d'élèves  n'en ayant pas est donc donné par : $${b}-${texNombrec(b / 4)}=${texNombrec(b - b / 4)}$`\n        this.correction += texteEnCouleur(`<br> Mentalement : <br>\n              Pour calculer $\\\\dfrac{1}{4}$ d'une quantité, on la divise par $4$. <br>\n              Ainsi, $\\\\dfrac{1}{4}\\\\times ${b}=${b}\\\\div 4=${b / 4}$.`)\n        this.reponse = calcul(3 * b / 4)\n        break\n      case 'e':\n        b = randint(3, 7) * 5\n        caractere = choice(['des lunettes', 'un frère', 'un chien', 'un abonnement à une revue', 'une licence à l’UNSS', 'un sac à roulette'])\n        this.question = `$20 \\\\%$  des élèves d'une classe de $${b}$ élèves ont ${caractere}.<br>\n              Quel est le nombre d'élèves n'en ayant pas ?`\n        this.correction = `On calcule d'abord $20 \\\\%$  de $${b}$ .<br>\n             Prendre $20 \\\\%$  d'une quantité revient à en prendre le cinquième, c'est-à-dire à la diviser par $5$.<br>\n              $20\\\\%$  de $${b}$ est égal à $\\\\dfrac{${b}}{5}=${texNombrec(b / 5)}$.<br>\n                            $${texNombrec(b / 5)}$ élèves ont ${caractere} .<br>\n                Le nombre d'élèves  n'en ayant pas est donc donné par : $${b}-${texNombrec(b / 5)}=${texNombrec(b - b / 5)}$`\n        this.reponse = calcul(8 * b / 10)\n        break\n      case 'f':\n        b = randint(3, 9) * 4\n        caractere = choice(['des lunettes', 'un frère', 'un chien', 'un abonnement à une revue', 'une licence à l’UNSS', 'un sac à roulette'])\n        this.question = `$25\\\\%$  des élèves d'une classe de $${b}$ élèves ont ${caractere}.<br>\n                  Quel est le nombre d'élèves n'en ayant pas ?`\n        this.correction = `On calcule d'abord $25 \\\\%$  de $${b}$ .<br>\n                  Prendre $25 \\\\%$  d'une quantité revient à en prendre le quart, c'est-à-dire à la diviser par $4$.<br>\n                   $25 \\\\%$  de $${b}$ est égal à $\\\\dfrac{${b}}{4}=${texNombrec(b / 4)}$.<br>\n                                 $${texNombrec(b / 4)}$ élèves ont ${caractere} .<br>\n                     Le nombre d'élèves  n'en ayant pas est donc donné par : $${b}-${texNombrec(b / 4)}=${texNombrec(b - b / 4)}$`\n        this.reponse = calcul(b - 0.25 * b)\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","PoucentageP1","typeExercice","formatChampTexte","b","caractere","choice","randint","question","correction","texNombrec","texteEnCouleur","reponse","calcul"],"sourceRoot":""}