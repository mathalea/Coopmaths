{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R21.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","interactifReady","amcReady","amcType","Exercice_soustractions_relatifs","max","Exercice","this","sup","sup2","consigne","spacing","interactif","nouvelleVersion","listeQuestions","listeCorrections","a","b","k","texte","texteCorr","i","cpt","nbQuestions","randint","choice","ecritureParentheseSiNegatif","context","ajouteChampTexte","ecritureAlgebrique","ecritureNombreRelatif","ecritureNombreRelatifc","indexOf","push","setReponse","signe","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceInteractif","exercice","document","addEventListener","button","querySelector","event","spanReponseLigne","champTexte","getElementById","value","replaceAll","reponse","valeur","toString","innerHTML","readOnly","style","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","propositions","length","statut","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","messageFeedback","id","message","feedback","type","querySelectorAll","uicheck","exerciceQcm","propositionsQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","texteApres","inline","numeric","digits","decimals","exposantNbChiffres","exposantSigne","approx","param","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","includes","div","cssIcon","remove","divTitre","test","messageUtilisateur","code","width"],"mappings":"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","file":"js/7633.79c884ceee5fb73d5e90.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureNombreRelatif, ecritureNombreRelatifc, ecritureAlgebrique, ecritureParentheseSiNegatif } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Soustraction de deux entiers relatifs'\nexport const interactifReady = true\nexport const amcReady = true\nexport const amcType = 4\n/**\n* Effectuer la soustraction de  2 nombres relatifs.\n*\n* * On peut paramétrer la distance à zéro maximale des deux termes (par défaut égale à 20)\n* * On peut choisir d'avoir une écriture simplifiée  (par défaut ce n'est pas le cas)\n* @Auteur Rémi Angot\n* 5R21\n*/\nexport default function Exercice_soustractions_relatifs (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.interactif = true\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    for (let i = 0, a, b, k, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(1, this.sup)\n      b = randint(1, this.sup)\n      k = choice([[-1, -1], [-1, 1], [1, -1]]) // Les deux nombres relatifs ne peuvent pas être tous les deux positifs\n      a = a * k[0]\n      b = b * k[1]\n      if (this.sup2) {\n        texte = `$ ${a} - ${ecritureParentheseSiNegatif(b)} = \\\\dotfill $`\n\t\tif (this.interactif && !context.isAmc) {\n\t\t\ttexte = ajouteChampTexte(this, i, { texte: `$ ${a} - ${ecritureParentheseSiNegatif(b)} = $` })\n\t\t  }\n        if (b > 0) {\n          texteCorr = `$ ${a} - ${ecritureParentheseSiNegatif(b)} = ${a - b} $`\n        } else {\n          texteCorr = `$ ${a} - ${ecritureParentheseSiNegatif(b)} = ${a} ${ecritureAlgebrique(-b)} = ${a - b}$`\n        }\n      } else {\n        texte = '$ ' + ecritureNombreRelatif(a) + ' - ' + ecritureNombreRelatif(b) + ' = \\\\dotfill $'\n\t\tif (this.interactif && !context.isAmc) {\n\t\t\ttexte = ajouteChampTexte(this, i, { texte: `$ ${a} - ${ecritureParentheseSiNegatif(b)} = $` })\n\t\t  }\n        texteCorr = '$ ' + ecritureNombreRelatif(a) + ' - ' + ecritureNombreRelatif(b) + ' = ' + ecritureNombreRelatifc(a) + ' + ' + ecritureNombreRelatifc(-1 * b) + ' = ' + ecritureNombreRelatifc(a - b) + ' $'\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n\t\tsetReponse(this, i, a - b, { signe: true })\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              message: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.',',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n\n\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (var prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n// Module regroupant les fonctions de gestions des erreurs.\n\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} feedback\n * @param {string} [feedback.message]\n * @param {string} [feedback.type]\n * @param {string} [feedback.titre]\n */\nexport function addFeedback (container, { message = 'Une erreur est survenue', type = 'erreur', titre } = {}) {\n  if (!types.includes(type)) {\n    console.error(Error(`type de message inconnu : ${type}`))\n    type = 'error'\n  }\n  const cssDiv = type === 'info' ? '' : type\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = type === 'error'\n    ? 'frown outline'\n    : (type === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  if (/<[a-zA-Z0-9_ \"']+/.test(message)) div.innerHTML += message\n  else addText(div, message)\n  return div\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        type: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} feedback\n * @param {string} feedback.id id du div conteneur à utiliser\n * @param {string} feedback.message Le message à afficher\n * @param {string} feedback.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, message = '', type = 'error' } = {}) {\n  if (!id || !message) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message, type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}