{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3L11-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","ReductionSiPossible","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","reponse","a","b","c","d","i","cpt","randint","lettreDepuisChiffre","printlatex","ecritureParentheseSiNegatif","setReponse","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"oOAGO,MAAMA,EAAQ,yBACRC,GAAkB,EAClBC,EAAiB,WAQf,SAASC,IACtBC,eAAcC,MACdA,KAAKL,MAAQA,EACbK,KAAKJ,gBAAkBA,EACvBI,KAAKH,eAAiBA,EACtBG,KAAKC,SAAW,2DAChBD,KAAKE,YAAc,EACnBF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAElBJ,KAAKK,gBAAkB,WACrBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GAExB,MACMC,GAAuBC,SADO,CAAC,OAAQ,QAAS,SAAU,OAAQ,OAAQ,YAAa,YAAa,UAC9BT,KAAKE,aACjF,IAAK,IAAWQ,EAAOC,EAAWC,EAASC,EAAGC,EAAGC,EAAGC,EAA3CC,EAAI,EAA0CC,EAAM,EAAGD,EAAIjB,KAAKE,aAAegB,EAAM,IAAK,CAKjG,OAJAL,GAAIM,UAAS,GAAI,GAAI,GACrBL,GAAIK,UAAS,GAAI,GAAI,CAAC,EAAGN,IACzBE,GAAII,UAAS,GAAI,GAAI,CAAC,IACtBH,GAAIG,UAAS,GAAI,GAAI,GACbX,EAAqBS,IAC3B,IAAK,OACHP,EAAS,KAAGU,SAAoBH,EAAI,OAAMI,SAAY,GAAER,QAAQC,SAChEH,EAAYD,EACZE,GAAUS,SAAY,GAAER,QAAQC,MAChC,MACF,IAAK,QACHJ,EAAS,KAAGU,SAAoBH,EAAI,OAAMI,SAAY,GAAER,QAAQC,WAChEH,EAAa,KAAGS,SAAoBH,EAAI,OAAMI,SAAY,GAAER,QAAQC,YAAWO,SAAY,GAAER,EAAIC,SACjGF,GAAUS,SAAY,GAAER,EAAIC,MAC5B,MACF,IAAK,SACHJ,EAAS,KAAGU,SAAoBH,EAAI,OAAMI,SAAY,GAAER,QAAQC,aAChEH,EAAYD,EACZE,GAAUS,SAAY,GAAER,QAAQC,UAChC,MACF,IAAK,OACHJ,EAAS,KAAGU,SAAoBH,EAAI,OAAMI,SAAY,GAAER,kBAAiBS,SAA4BR,MACrGH,EAAa,KAAGS,SAAoBH,EAAI,OAAMI,SAAY,GAAER,kBAAiBS,SAA4BR,OAAMO,SAAcR,EAAIC,EAAN,SAC3HF,GAAUS,SAAcR,EAAIC,EAAN,MACtB,MACF,IAAK,OACHD,GAAIM,SAAQ,EAAG,IACfT,EAAS,KAAGU,SAAoBH,EAAI,MAAMH,aAAYO,SAAY,GAAER,UACpEF,EAAa,KAAGS,SAAoBH,EAAI,MAAMH,aAAYO,SAAY,GAAER,WAAUQ,SAAcP,EAAID,EAAN,SAC9FD,GAAUS,SAAcP,EAAID,EAAN,MACtB,MACF,IAAK,YACHH,EAAS,KAAGU,SAAoBH,EAAI,OAAMI,SAAY,GAAER,QAAQC,OAAOC,SAASC,SAChFL,EAAa,KAAGS,SAAoBH,EAAI,OAAMI,SAAY,GAAER,QAAQC,OAAOC,SAASC,QAChFF,EAAIE,IAAM,EACRH,EAAIE,IAAM,GACZJ,GAAa,MACbC,EAAU,MAEVD,GAAc,KAAGU,SAAY,GAAER,EAAIE,UACnCH,GAAUS,SAAY,GAAER,EAAIE,QAG1BF,EAAIE,IAAM,GACZJ,GAAc,IAAGG,EAAIE,KACrBJ,EAAW,GAAEE,EAAIE,MAEjBL,GAAc,KAAGU,SAAY,GAAER,EAAIE,QAAQD,EAAIE,SAC/CJ,GAAUS,SAAY,GAAER,EAAIE,QAAQD,EAAIE,OAG5C,MACF,IAAK,YACHN,EAAS,KAAGU,SAAoBH,EAAI,OAAMI,SAAY,GAAEP,MAAMD,SAASG,OAAOD,WAC9EJ,EAAa,KAAGS,SAAoBH,EAAI,OAAMI,SAAY,GAAEP,MAAMD,SAASG,OAAOD,UAC9ED,EAAIE,IAAM,EACRH,EAAIE,IAAM,GACZJ,GAAa,MACbC,EAAU,KAEVD,GAAc,KAAGU,SAAY,GAAER,EAAIE,UAGjCF,EAAIE,IAAM,GACZJ,GAAc,IAAGG,EAAIE,KACrBJ,EAAW,GAAEE,EAAIE,OAEjBL,GAAc,KAAGU,SAAY,GAAER,EAAIE,QAAQD,EAAIE,SAC/CJ,GAAUS,SAAY,GAAER,EAAIE,QAAQD,EAAIE,OAG5C,MACF,IAAK,SACHH,GAAIM,UAAS,GAAI,GAAI,CAAC,GAAI,IAC1BT,EAAS,KAAGU,SAAoBH,EAAI,OAAMI,SAAY,GAAER,QAAQC,WAChEH,EAAa,KAAGS,SAAoBH,EAAI,OAAMI,SAAY,GAAER,QAAQC,YAAWO,SAAY,GAAER,EAAI,QAAQC,SACzGF,GAAUS,SAAY,GAAER,EAAI,QAAQC,OAGxCS,QAAWvB,KAAMiB,EAAGL,GACpBF,IAASc,QAAyBxB,KAAMiB,IAEI,IAAxCjB,KAAKM,eAAemB,QAAQf,KAC9BV,KAAKM,eAAeoB,KAAKhB,GACzBV,KAAKO,iBAAiBmB,KAAKf,GAC3BM,KAEFC,KAEFS,SAAwB3B,S,6BCjHb,SAASD,IAEtBC,KAAKL,MAAQ,GACbK,KAAKC,SAAW,GAChBD,KAAK4B,mBAAqB,GAC1B5B,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAK6B,aAAe,GACpB7B,KAAK8B,QAAU,GACf9B,KAAK+B,kBAAoB,GACzB/B,KAAKE,YAAc,GACnBF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKgC,QAAU,EACfhC,KAAKiC,YAAc,EACnBjC,KAAKkC,QAAS,EAEdlC,KAAKmC,2BAA4B,EACjCnC,KAAKoC,uBAAwB,EAC7BpC,KAAKqC,6BAA8B,EACnCrC,KAAKsC,oBAAqB,EAC1BtC,KAAKuC,uBAAwB,EAC7BvC,KAAKwC,kBAAmB,EACxBxC,KAAKyC,sBAAuB,EAC5BzC,KAAK0C,mBAAoB,EACzB1C,KAAK2C,uBAAwB,EAC7B3C,KAAK4C,+BAAgC,EACrC5C,KAAK6C,qBAAsB,EAC3B7C,KAAK8C,MAAQ,GACb9C,KAAK+C,YAAa,EAClB/C,KAAKgD,gBAAkB,GAMvBhD,KAAKiD,mBAAoB,EACzBjD,KAAKkD,YAAa,EAClBlD,KAAKmD,uBAAwB,EAC7BnD,KAAKoD,KAAM,EACXpD,KAAKqD,eAAgB,EACrBrD,KAAKsD,SAAU,EACftD,KAAKuD,eAAiB,GACtBvD,KAAKwD,sBAAwB,GAC7BxD,KAAKyD,cAAe,EACpBzD,KAAKK,gBAAkB,SAAUqD,KACjC1D,KAAK2D,cAAgB,G","file":"js/2476.94abc308b54f5162cd15.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, ecritureParentheseSiNegatif, lettreDepuisChiffre, printlatex } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Réduire une expression'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n* Réduire des expressions lorsque c'est possible\n*\n* @author Rémi Angot\n* 3L11-2\n*/\nexport default function ReductionSiPossible () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Réduire les expressions suivantes, si cela est possible.'\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = ['ax+b', 'ax+bx', 'ax+bx2', 'ax*b', 'b*ax', 'ax+b+cx+d', 'b+ax+d+cx', 'ax+b+x']\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, reponse, a, b, c, d, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      a = randint(-11, 11, 0)\n      b = randint(-11, 11, [0, a])\n      c = randint(-11, 11, [0])\n      d = randint(-11, 11, 0)\n      switch (listeTypeDeQuestions[i]) {\n        case 'ax+b':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${a}*x+(${b})`)}$`\n          texteCorr = texte\n          reponse = printlatex(`${a}*x+(${b})`)\n          break\n        case 'ax+bx':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${a}*x+(${b}*x)`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${a}*x+(${b}*x)`)}=${printlatex(`${a + b}x`)}$`\n          reponse = printlatex(`${a + b}x`)\n          break\n        case 'ax+bx2':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${a}*x+(${b}*x^2)`)}$`\n          texteCorr = texte\n          reponse = printlatex(`${a}*x+(${b}*x^2)`)\n          break\n        case 'ax*b':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${a}*x`)}\\\\times ${ecritureParentheseSiNegatif(b)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${a}*x`)}\\\\times ${ecritureParentheseSiNegatif(b)}=${printlatex(`${a * b}*x`)}$`\n          reponse = printlatex(`${a * b}*x`)\n          break\n        case 'b*ax':\n          a = randint(1, 11)\n          texte = `$${lettreDepuisChiffre(i + 1)}=${b}\\\\times ${printlatex(`${a}*x`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${b}\\\\times ${printlatex(`${a}*x`)}=${printlatex(`${b * a}*x`)}$`\n          reponse = printlatex(`${b * a}*x`)\n          break\n        case 'ax+b+cx+d':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${a}*x+(${b})+(${c})*x+(${d})`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${a}*x+(${b})+(${c})*x+(${d})`)}`\n          if (b + d === 0) {\n            if (a + c === 0) {\n              texteCorr += '=0$'\n              reponse = '0'\n            } else {\n              texteCorr += `=${printlatex(`${a + c}*x`)}$`\n              reponse = printlatex(`${a + c}*x`)\n            }\n          } else {\n            if (a + c === 0) {\n              texteCorr += `=${b + d}$`\n              reponse = `${b + d}`\n            } else {\n              texteCorr += `=${printlatex(`${a + c}*x+(${b + d})`)}$`\n              reponse = printlatex(`${a + c}*x+(${b + d})`)\n            }\n          }\n          break\n        case 'b+ax+d+cx':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${b}+(${a})*x+(${d})+(${c})*x`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${b}+(${a})*x+(${d})+(${c})*x`)}`\n          if (b + d === 0) {\n            if (a + c === 0) {\n              texteCorr += '=0$'\n              reponse = '0'\n            } else {\n              texteCorr += `=${printlatex(`${a + c}*x`)}$`\n            }\n          } else {\n            if (a + c === 0) {\n              texteCorr += `=${b + d}$`\n              reponse = `${b + d}$`\n            } else {\n              texteCorr += `=${printlatex(`${a + c}*x+(${b + d})`)}$`\n              reponse = printlatex(`${a + c}*x+(${b + d})`)\n            }\n          }\n          break\n        case 'ax+b+x':\n          a = randint(-11, 11, [0, -1])\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${a}*x+(${b})+x`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${a}*x+(${b})+x`)}=${printlatex(`${a + 1}*x+(${b})`)}$`\n          reponse = printlatex(`${a + 1}*x+(${b})`)\n          break\n      }\n      setReponse(this, i, reponse)\n      texte += ajouteChampTexteMathLive(this, i)\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}