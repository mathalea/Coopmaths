{"version":3,"file":"js/82825.40e0ff56f2a57d8c93a5.js","mappings":"2LAIO,MAAMA,EAAQ,iGAMN,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,SAAW,sCAChBD,KAAKE,YAAc,EACnBF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAElBJ,KAAKK,gBAAkB,WACrBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GAC6D,IAAIC,EACzF,MAAMC,GAAuBC,EAAAA,EAAAA,KADO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IACJV,KAAKE,aACjF,IAAK,IAAWS,EAAGC,EAAGC,EAAGC,EAAGC,EAAIC,EAAIC,EAAGC,EAAGC,EAAIC,EAAIC,EAAKC,EAAMC,EAAOC,EAA3DC,EAAI,EAAkEC,EAAM,EAAGD,EAAIzB,KAAKE,aAAewB,EAAM,IAAK,CAUzH,OATAlB,EAAmBC,EAAqBgB,GAExCX,GAAIa,EAAAA,EAAAA,KAAQ,EAAG,EAAG,GAAI,GACtBb,EAAEc,gBAAkB,KACpBb,GAAKc,EAAAA,EAAAA,KAAM,EAAG,GACdb,GAAKa,EAAAA,EAAAA,KAAM,GAAI,GAEfR,GAAMS,EAAAA,EAAAA,KAAWf,EAAIC,EAAI,QAAS,GAE1BR,GAGN,KAAK,EACHG,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACfnB,GAAImB,EAAAA,EAAAA,KAAQpB,EAAG,IACfM,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBO,GAAKa,EAAAA,EAAAA,KAASf,EAAG,OACjBK,GAAOQ,EAAAA,EAAAA,KAAWb,EAAGD,EAAI,OAAQ,IACjCO,EAAS,gFAA+EZ,yDACxFa,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,GACjBK,GAAc,OAAMb,eACpB,MAEF,KAAK,EACHA,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACfnB,GAAImB,EAAAA,EAAAA,KAAQpB,EAAG,IACfM,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBI,GAAKa,EAAAA,EAAAA,KAAM,GAAI,GACfV,GAAKmB,EAAAA,EAAAA,KAASrB,EAAG,OACjBK,GAAOQ,EAAAA,EAAAA,KAAWb,EAAGD,EAAI,OAAQ,IACjCO,EAAS,0FAAyFZ,yDAClGa,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,GACjBK,GAAc,OAAMb,eACpB,MAEF,KAAK,EACHA,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACfnB,GAAImB,EAAAA,EAAAA,KAAQpB,EAAG,IACfM,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBO,GAAKmB,EAAAA,EAAAA,KAASrB,EAAG,OACjBK,GAAOQ,EAAAA,EAAAA,KAAWf,EAAIE,EAAG,OAAQ,IACjCM,EAAS,gFAA+EZ,yDACxFa,GAAYS,EAAAA,EAAAA,MAAY,GAAI,EAAG,GAAI,EAAGnB,EAAGO,EAAKC,EAAMH,GACpDK,GAAc,gBAAeb,MAC7B,MAEF,KAAK,EACHA,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACfnB,GAAImB,EAAAA,EAAAA,KAAQpB,EAAG,IACfM,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBO,GAAKa,EAAAA,EAAAA,KAASf,EAAG,OACjBK,GAAOQ,EAAAA,EAAAA,KAAWf,EAAIE,EAAG,OAAQ,IACjCM,EAAS,0FAAyFZ,yDAClGa,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,GACjBK,GAAc,gBAAeb,MAC7B,MAEF,KAAK,EACHA,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACflB,EAAIF,EAAI,EACRC,GAAImB,EAAAA,EAAAA,KAAQlB,EAAG,IACfI,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBO,GAAKa,EAAAA,EAAAA,KAASf,EAAG,OACjBG,GAAKkB,EAAAA,EAAAA,KAASpB,EAAG,OACjBI,GAAOQ,EAAAA,EAAAA,KAAWb,EAAGC,EAAG,OAAQ,IAChCK,EAAS,8EAA6EZ,WAAWC,yDACjGY,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,EAAIC,GACrBI,GAAc,OAAMb,KAAKC,MACzB,MAEF,KAAK,EACHD,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACflB,EAAIF,EAAI,EACRC,GAAImB,EAAAA,EAAAA,KAAQlB,EAAG,IACfI,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBO,GAAKmB,EAAAA,EAAAA,KAASrB,EAAG,OACjBG,GAAKkB,EAAAA,EAAAA,KAASpB,EAAG,OACjBI,GAAOQ,EAAAA,EAAAA,KAAWb,EAAGC,EAAG,OAAQ,IAChCK,EAAS,8EAA6EZ,iBAAiBC,yDACvGY,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,EAAIC,GACrBI,GAAc,OAAMb,KAAKC,MACzB,MAEF,KAAK,EACHD,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACflB,EAAIF,EAAI,EACRC,GAAImB,EAAAA,EAAAA,KAAQlB,EAAG,IACfI,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBO,GAAKmB,EAAAA,EAAAA,KAASrB,EAAG,OACjBG,GAAKY,EAAAA,EAAAA,KAASd,EAAG,OACjBI,GAAOQ,EAAAA,EAAAA,KAAWb,EAAGC,EAAG,OAAQ,IAChCK,EAAS,8EAA6EZ,2BAA2BC,yDACjHY,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,EAAIC,GACrBI,GAAc,OAAMb,KAAKC,MACzB,MAEF,KAAK,EACHD,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACflB,EAAIF,EAAI,EACRC,GAAImB,EAAAA,EAAAA,KAAQlB,EAAG,IACfI,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBO,GAAKa,EAAAA,EAAAA,KAASf,EAAG,OACjBG,GAAKY,EAAAA,EAAAA,KAASd,EAAG,OACjBI,GAAOQ,EAAAA,EAAAA,KAAWb,EAAGC,EAAG,OAAQ,IAChCK,EAAS,8EAA6EZ,kBAAkBC,yDACxGY,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,EAAIC,GACrBI,GAAc,OAAMb,KAAKC,MACzB,MAEF,KAAK,EACHD,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACflB,EAAIF,EAAI,EACRC,GAAImB,EAAAA,EAAAA,KAAQlB,EAAG,IACfI,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBO,GAAKa,EAAAA,EAAAA,KAASf,EAAG,OACjBG,GAAKY,EAAAA,EAAAA,KAASd,EAAG,OACjBI,GAAOQ,EAAAA,EAAAA,KAAWb,EAAGC,EAAG,OAAQ,IAChCK,EAAS,oDAAmDZ,KAAKC,0DACjEY,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,EAAIC,GACrBI,GAAc,IAAGb,kBAAkBC,KACnC,MACF,KAAK,GACHD,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACflB,EAAIF,EAAI,EACRC,GAAImB,EAAAA,EAAAA,KAAQlB,EAAG,IACfI,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBO,GAAKmB,EAAAA,EAAAA,KAASrB,EAAG,OACjBG,GAAKY,EAAAA,EAAAA,KAASd,EAAG,OACjBI,GAAOQ,EAAAA,EAAAA,KAAWb,EAAGC,EAAG,OAAQ,IAChCK,EAAS,oDAAmDZ,KAAKC,0DACjEY,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,EAAIC,GACrBI,GAAc,IAAGb,2BAA2BC,KAC5C,MACF,KAAK,GACHD,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACflB,EAAIF,EAAI,EACRC,GAAImB,EAAAA,EAAAA,KAAQlB,EAAG,IACfI,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,EAAG,EAAGjB,GAChBO,GAAKmB,EAAAA,EAAAA,KAASrB,EAAG,OACjBG,GAAKkB,EAAAA,EAAAA,KAASpB,EAAG,OACjBI,GAAOQ,EAAAA,EAAAA,KAAWb,EAAGC,EAAG,OAAQ,IAChCK,EAAS,oDAAmDZ,KAAKC,0DACjEY,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,EAAIC,GACrBI,GAAc,IAAGb,kBAAkBC,KACnC,MACF,KAAK,GACHD,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACflB,EAAIF,EAAI,EACRC,GAAImB,EAAAA,EAAAA,KAAQlB,EAAG,IACfI,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,GAAI,EAAGjB,GACjBO,GAAKa,EAAAA,EAAAA,KAASf,EAAG,OAEjBK,GAAOQ,EAAAA,EAAAA,KAAWb,EAAGC,EAAG,OAAQ,IAAMK,EAAS,oDAAmDZ,mEAClGa,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,GACjBK,GAAc,QAAOb,KACrB,MACF,KAAK,GACHA,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACflB,EAAIF,EAAI,EACRC,GAAImB,EAAAA,EAAAA,KAAQlB,EAAG,IACfI,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,GAAI,EAAGjB,GACjBO,GAAKmB,EAAAA,EAAAA,KAASrB,EAAG,OAEjBK,GAAOQ,EAAAA,EAAAA,KAAWf,EAAIE,EAAG,OAAQ,IACjCM,EAAS,6DAA4DZ,0DACrEa,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,GACjBK,GAAc,QAAOb,KACrB,MACF,KAAK,GACHA,GAAIoB,EAAAA,EAAAA,KAAQ,EAAG,IACflB,EAAIF,EAAI,EACRC,GAAImB,EAAAA,EAAAA,KAAQlB,EAAG,IACfI,GAAIY,EAAAA,EAAAA,KAAM,EAAG,EAAGlB,GAChBO,GAAIW,EAAAA,EAAAA,KAAM,GAAI,EAAGjB,GACjBO,GAAKa,EAAAA,EAAAA,KAASf,EAAG,OAEjBK,GAAOQ,EAAAA,EAAAA,KAAWf,EAAIE,EAAG,OAAQ,IACjCM,EAAS,6DAA4DZ,0DACrEa,GAAYS,EAAAA,EAAAA,KAAW,CACrBC,MAAO,EACPC,MAAO,EACPC,KAAM,GACNC,KAAM,GACLvB,EAAGO,EAAKC,EAAMH,GACjBK,GAAc,iBAAgBb,KAG9BX,KAAKuC,oBAAoBd,EAAGd,EAAGC,EAAGJ,KACpCR,KAAKM,eAAekC,KAAKjB,GACzBvB,KAAKO,iBAAiBiC,KAAKhB,GAC3BC,KAEFC,KAEFe,EAAAA,EAAAA,KAAwBzC,S,gBC7Rb,SAASD,IAItBC,KAAKH,MAAQ,GACbG,KAAK0C,YAAa,EAclB1C,KAAKC,SAAW,GAChBD,KAAK2C,mBAAqB,GAC1B3C,KAAK4C,aAAe,GACpB5C,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAK6C,QAAU,GACf7C,KAAK8C,kBAAoB,GACzB9C,KAAK+C,eAAiB,GACtB/C,KAAKgD,sBAAwB,GAK7BhD,KAAKiD,QAAU,EACfjD,KAAKkD,YAAc,EAKnBlD,KAAKmD,mBAAoB,EACzBnD,KAAKoD,cAAgB,GACrBpD,KAAKqD,oBAAqB,EAC1BrD,KAAKsD,uBAAwB,EAC7BtD,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKuD,kBAAmB,EACxBvD,KAAKwD,sBAAuB,EAC5BxD,KAAKyD,mBAAoB,EACzBzD,KAAK0D,uBAAwB,EAM7B1D,KAAK2D,QAAS,EACd3D,KAAK4D,gBAAkB,GAKvB5D,KAAKE,YAAc,GACnBF,KAAK6D,+BAAgC,EACrC7D,KAAK8D,qBAAsB,EAC3B9D,KAAK+D,MAAQ,GAEb/D,KAAKgE,YAAa,EAClBhE,KAAKiE,uBAAwB,EAE7BjE,KAAKkE,2BAA4B,EACjClE,KAAKmE,uBAAwB,EAC7BnE,KAAKoE,6BAA8B,EAEnCpE,KAAKqE,4BAA6B,EAClCrE,KAAKsE,wBAAyB,EAC9BtE,KAAKuE,8BAA+B,EAEpCvE,KAAKwE,4BAA6B,EAClCxE,KAAKyE,wBAAyB,EAC9BzE,KAAK0E,8BAA+B,EAMpC1E,KAAK2E,cAAe,EAMpB3E,KAAK4E,eAAiB,GAEtB5E,KAAKK,gBAAkB,SAAUwE,KAQjC7E,KAAKuC,oBAAsB,SAAUd,KAAMqD,GAC/B,IAANrD,IAASzB,KAAK4E,eAAiB,IACnC,IAAIG,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIlF,KAAK4E,eAAeO,QAAQJ,IAAmB,KAGjD/E,KAAK4E,eAAepC,KAAKuC,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/2e/2N11-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes } from '../../modules/outils.js'\nimport { point, segment, crochetD, crochetG, intervalle, mathalea2d } from '../../modules/2d.js'\n\nexport const titre = 'Associer un intervalle de  $\\\\mathbb{R}$ à une inéquation et son schéma sur une droite graduée'\n\n/**\n * 2N11-1, ex 2N24\n * @Stéphane Guyon\n */\nexport default function IntervallesDeR () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Répondre aux questions suivantes: :'\n  this.nbQuestions = 4\n  this.nbCols = 2\n  this.nbColsCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]; let typesDeQuestions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, a, b, c, s, X1, X2, A, B, c1, c2, int, int1, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n\n      s = segment(0, 0, 12, 0)\n      s.styleExtremites = '->'\n      X1 = point(0, 0)\n      X2 = point(12, 0)\n\n      int = intervalle(X1, X2, 'black', 0)\n\n      switch (typesDeQuestions) {\n        // Cas par cas, on définit le type de nombres que l'on souhaite\n        // Combien de chiffres ? Quelles valeurs ?\n        case 1:\n          a = randint(1, 15)\n          b = randint(a, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          c1 = crochetG(A, 'red')\n          int1 = intervalle(A, X2, 'red', -0.1)\n          texte = `Déterminer l'intervalle $I$ de $\\\\mathbb{R}$ correspondant à l'inéquation $x>${a}$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1)\n          texteCorr += `$I=]${a};+\\\\infty[$`\n          break\n\n        case 2:\n          a = randint(1, 15)\n          b = randint(a, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          X2 = point(12, 0)\n          c1 = crochetD(A, 'red')\n          int1 = intervalle(A, X2, 'red', -0.1)\n          texte = `Déterminer l'intervalle $I$ de $\\\\mathbb{R}$ correspondant à l'inéquation $x\\\\geqslant ${a}$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1)\n          texteCorr += `$I=[${a};+\\\\infty[$`\n          break\n\n        case 3:\n          a = randint(1, 15)\n          b = randint(a, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          c1 = crochetD(A, 'red')\n          int1 = intervalle(X1, A, 'red', -0.1)\n          texte = `Déterminer l'intervalle $I$ de $\\\\mathbb{R}$ correspondant à l'inéquation $x<${a}$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d(-2, -2, 15, 2, s, int, int1, c1)\n          texteCorr += `$I=]-\\\\infty;${a}[$`\n          break\n\n        case 4:\n          a = randint(1, 15)\n          b = randint(a, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          c1 = crochetG(A, 'red')\n          int1 = intervalle(X1, A, 'red', -0.1)\n          texte = `Déterminer l'intervalle $I$ de $\\\\mathbb{R}$ correspondant à l'inéquation $x\\\\leqslant ${a}$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1)\n          texteCorr += `$I=]-\\\\infty;${a}]$`\n          break\n\n        case 5:\n          a = randint(1, 15)\n          c = a + 1\n          b = randint(c, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          c1 = crochetG(A, 'red')\n          c2 = crochetD(B, 'red')\n          int1 = intervalle(A, B, 'red', -0.1)\n          texte = `Déterminer l'intervalle $I$ de $\\\\mathbb{R}$ correspondant à l'inéquation $${a} < x < ${b}$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1, c2)\n          texteCorr += `$I=]${a};${b}[$`\n          break\n\n        case 6:\n          a = randint(1, 15)\n          c = a + 1\n          b = randint(c, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          c1 = crochetD(A, 'red')\n          c2 = crochetD(B, 'red')\n          int1 = intervalle(A, B, 'red', -0.1)\n          texte = `Déterminer l'intervalle $I$ de $\\\\mathbb{R}$ correspondant à l'inéquation $${a}\\\\leqslant x<${b}$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1, c2)\n          texteCorr += `$I=[${a};${b}[$`\n          break\n\n        case 7:\n          a = randint(1, 15)\n          c = a + 1\n          b = randint(c, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          c1 = crochetD(A, 'red')\n          c2 = crochetG(B, 'red')\n          int1 = intervalle(A, B, 'red', -0.1)\n          texte = `Déterminer l'intervalle $I$ de $\\\\mathbb{R}$ correspondant à l'inéquation $${a}\\\\leqslant x\\\\leqslant ${b}$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1, c2)\n          texteCorr += `$I=[${a};${b}]$`\n          break\n\n        case 8:\n          a = randint(1, 15)\n          c = a + 1\n          b = randint(c, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          c1 = crochetG(A, 'red')\n          c2 = crochetG(B, 'red')\n          int1 = intervalle(A, B, 'red', -0.1)\n          texte = `Déterminer l'intervalle $I$ de $\\\\mathbb{R}$ correspondant à l'inéquation $${a}< x\\\\leqslant ${b}$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1, c2)\n          texteCorr += `$I=]${a};${b}]$`\n          break\n\n        case 9:\n          a = randint(1, 15)\n          c = a + 1\n          b = randint(c, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          c1 = crochetG(A, 'red')\n          c2 = crochetG(B, 'red')\n          int1 = intervalle(A, B, 'red', -0.1)\n          texte = `Déterminer l'inéquation correspondant à $x \\\\in ]${a};${b}]$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1, c2)\n          texteCorr += `$${a}< x\\\\leqslant ${b}$`\n          break\n        case 10:\n          a = randint(1, 15)\n          c = a + 1\n          b = randint(c, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          c1 = crochetD(A, 'red')\n          c2 = crochetG(B, 'red')\n          int1 = intervalle(A, B, 'red', -0.1)\n          texte = `Déterminer l'inéquation correspondant à $x \\\\in [${a};${b}]$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1, c2)\n          texteCorr += `$${a}\\\\leqslant x\\\\leqslant ${b}$`\n          break\n        case 11:\n          a = randint(1, 15)\n          c = a + 1\n          b = randint(c, 25)\n          A = point(2, 0, a)\n          B = point(6, 0, b)\n          c1 = crochetD(A, 'red')\n          c2 = crochetD(B, 'red')\n          int1 = intervalle(A, B, 'red', -0.1)\n          texte = `Déterminer l'inéquation correspondant à $x \\\\in [${a};${b}[$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1, c2)\n          texteCorr += `$${a}\\\\leqslant x< ${b}$`\n          break\n        case 12:\n          a = randint(1, 15)\n          c = a + 1\n          b = randint(c, 25)\n          A = point(2, 0, a)\n          B = point(12, 0, b)\n          c1 = crochetG(A, 'red')\n\n          int1 = intervalle(A, B, 'red', -0.1); texte = `Déterminer l'inéquation correspondant à $x \\\\in ]${a};+\\\\infty[$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1)\n          texteCorr += `$x > ${a}$`\n          break\n        case 13:\n          a = randint(1, 15)\n          c = a + 1\n          b = randint(c, 25)\n          A = point(7, 0, a)\n          B = point(12, 0, b)\n          c1 = crochetD(A, 'red')\n\n          int1 = intervalle(X1, A, 'red', -0.1)\n          texte = `Déterminer l'inéquation correspondant à $x \\\\in ]-\\\\infty;${a}[$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1)\n          texteCorr += `$x < ${a}$`\n          break\n        case 14:\n          a = randint(1, 15)\n          c = a + 1\n          b = randint(c, 25)\n          A = point(7, 0, a)\n          B = point(12, 0, b)\n          c1 = crochetG(A, 'red')\n\n          int1 = intervalle(X1, A, 'red', -0.1)\n          texte = `Déterminer l'inéquation correspondant à $x \\\\in ]-\\\\infty;${a}]$ et représenter l'intervalle sur une droite graduée.`\n          texteCorr = mathalea2d({\n            xmin: -2,\n            ymin: -2,\n            xmax: 15,\n            ymax: 2\n          }, s, int, int1, c1)\n          texteCorr += `$x \\\\leqslant ${a}$`\n          break\n      }\n      if (this.questionJamaisPosee(i, a, b, typesDeQuestions)) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","IntervallesDeR","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","a","b","c","s","X1","X2","A","B","c1","c2","int","int1","texte","texteCorr","i","cpt","segment","styleExtremites","point","intervalle","randint","crochetG","mathalea2d","xmin","ymin","xmax","ymax","crochetD","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}