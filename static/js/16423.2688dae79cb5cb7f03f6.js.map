{"version":3,"file":"js/16423.2688dae79cb5cb7f03f6.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta4G20-3.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint } from '../../modules/outils.js'\nimport { afficheLongueurSegment, barycentre, carre, codageAngleDroit, latexParPoint, mathalea2d, point, polygone, rotation } from '../../modules/2d.js'\n\nexport const titre = 'Calculer une valeur manquante avec l’égalité de Pythagore'\n\nexport default function CalculerValeurManquanteVisuelPythagore () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.consigne = \"Dans chaque cas, calculer la valeur manquante indiquée par un point d'interrogation.\"\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4] // tableau à compléter par valeurs possibles des types de questions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n\n    let objetsEnonce, objetsEnonceml, objetsCorrection, paramsEnonce, paramsCorrection\n    context.fenetreMathalea2d = [-11.7, -6.4, 18.3, 13.6]\n    const A = point(4, 0, 'A')\n    const B = point(0, 3, 'B')\n    const C = point(0, 0, 'C')\n    const p1 = polygone(A, B, C)\n    p1.isVisible = false\n    const p2 = rotation(p1, C, randint(0, 359))\n    const a = p2.listePoints[0]\n    const b = p2.listePoints[1]\n    const c = p2.listePoints[2]\n    const codage = codageAngleDroit(a, c, b)\n    const car1 = carre(b, a)\n    car1.couleurDeRemplissage = 'red'\n    const bar1 = barycentre(car1)\n    bar1.positionLabel = 'center'\n    const car2 = carre(c, b)\n    car2.couleurDeRemplissage = 'blue'\n    const bar2 = barycentre(car2)\n    bar2.positionLabel = 'center'\n    const car3 = carre(a, c)\n    car3.couleurDeRemplissage = 'green'\n    const bar3 = barycentre(car3)\n    bar3.positionLabel = 'center'\n    const q1 = latexParPoint('? \\\\text{ cm}^2', bar1)\n    const l1 = afficheLongueurSegment(b, c)\n    const l2 = afficheLongueurSegment(c, a)\n    const q2 = latexParPoint('9 \\\\text{ cm}^2', bar2)\n    const q3 = latexParPoint('16 \\\\text{ cm}^2', bar3)\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      objetsEnonce = [] // on initialise le tableau des objets Mathalea2d de l'enoncé\n      objetsEnonceml = [] // Idem pour l'enoncé à main levée si besoin\n      objetsCorrection = [] // Idem pour la correction\n\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n\n      switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n        case 1:\n\n          // ici sont créés les texte, tex_corr, objets mathalea2d divers entrant dans le contenu de l'exercice\n          break\n\n        case 2:\n          // Idem Cas1 mais avec d'autres texte, texteCorr...\n          break\n\n        case 3:\n\n          break\n\n        case 4:\n\n          break\n      }\n      //  objetsEnonce.push () // On rempli les tableaux d'objets Mathalea2d\n      //  objetsEnonceml.push()\n      //  objetsCorrection.push()\n\n      // paramètres de la fenêtre Mathalea2d pour l'énoncé main levée\n      //    paramsEnonceml = { xmin: Math.min(objetsEnonceml.x), ymin: Math.min(objetsEnonceml.y), xmax: Math.max(objetsEnonceml.x), ymax: Math.max(objetsEnonceml.y), pixelsParCm: 20, scale: 1, mainlevee: true, amplitude: 1 }\n      // paramètres de la fenêtre Mathalea2d pour l'énoncé normal\n      paramsEnonce = { xmin: -10, ymin: -10, xmax: 10, ymax: 10, pixelsParCm: 20, scale: 1, mainlevee: false }\n      // paramètres de la fenêtre Mathalea2d pour la correction\n      paramsCorrection = { xmin: -10, ymin: -10, xmax: 10, ymax: 10, pixelsParCm: 20, scale: 1 }\n      // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n      texte += mathalea2d(paramsEnonce, objetsEnonce)\n      // On ajoute au texte de la correction, la figure de la correction\n      texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n\n  // this.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n} // Fin de l'exercice.\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","CalculerValeurManquanteVisuelPythagore","listeTypeDeQuestions","combinaisonListes","objetsEnonce","objetsEnonceml","objetsCorrection","paramsEnonce","paramsCorrection","context","A","point","B","C","p1","polygone","isVisible","p2","rotation","randint","a","listePoints","b","c","car1","codageAngleDroit","carre","couleurDeRemplissage","bar1","barycentre","positionLabel","car2","bar2","car3","bar3","latexParPoint","afficheLongueurSegment","texte","texteCorr","cpt","xmin","ymin","xmax","ymax","pixelsParCm","scale","mainlevee","mathalea2d","listeQuestionsToContenu"],"sourceRoot":""}