{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C30-5.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["amcReady","titre","Multiplier_par_001","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","consigne","qcmDisponible","modeQcm","sup","sup2","nouvelleVersion","type_de_questions_disponibles","qcm","listeQuestions","listeCorrections","parseInt","tabrep","listeTypeDeQuestions","combinaisonListes","rang","tabicone","espace","sortieHtml","texte","texteCorr","coef","nombre","nombreentier","resultat","exposant","i","cpt","randint","calcul","choice","texNombre2","push","shuffle2tableaux","length","texFraction","miseEnEvidence","indexOf","listeQuestionsToContenu","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/5633.a8713fbf7700c14f3823.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {shuffle2tableaux,exportQcmAmc,calcul,listeQuestionsToContenu,combinaisonListes,randint,texNombre,texNombre2,texFraction,choice,miseEnEvidence} from '../../modules/outils.js'\n\nexport const amcReady = true\n\nexport const titre = 'Multiplication par 0,1 ; 0,01 ; 0,001 (compléter avec le nombre qui convient)'\n\n/**\n * @Auteur Jean-claude Lhote\n * Publié le 20/02/2021\n * Référence 6C30-5\n */\nexport default function Multiplier_par_001() {\n    \"use strict\"\n    Exercice.call(this)\n    this.titre = titre;\n    this.nbQuestions = 4; // Ici le nombre de questions\n    this.nbQuestionsModifiable=true // Active le formulaire nombre de questions\n    this.nbCols = 1; // Le nombre de colonnes dans l'énoncé LaTeX\n    this.nbColsCorr = 1;// Le nombre de colonne pour la correction LaTeX\n    this.pasDeVersionLatex=false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n    this.pas_de_version_HMTL=false // mettre à true si on ne veut pas de l'exercice en ligne\n    this.consigne=`Compléter les pointillés.`\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n  this.qcmDisponible=true\n  this.modeQcm=false;\n  this.sup = false; \n  this.sup2=4\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.modeQcm = false; // A décommenter : valeur par défaut d'un troisième paramètre\n  \n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n    this.nouvelleVersion = function () {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n \n    this.qcm=['6C30-5',[],\"Multiplication par 0,1 ; 0,01 ; 0,001 (compléter avec le nombre qui convient)\",1]\n\n    this.listeQuestions = [] // tableau contenant la liste des questions \n    this.listeCorrections = []\n    let type_de_questions_disponibles\n    if (this.sup2==4) {\n      type_de_questions_disponibles=[1,2,3]\n    }\n    else {\n      type_de_questions_disponibles=[parseInt(this.sup2)]\n    }\n    let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions)\n    let rang=['millièmes','centièmes','dixièmes']\n    let tabrep,tabicone=[1,0,0,0]\n    let espace =``;\n    if (sortieHtml) {\n      espace = `&emsp;`;\n    } else {\n      espace = `\\\\qquad`;\n    }\n    this.qcm[1]=[]\n      for (let i = 0, texte, texteCorr,coef,nombre,nombreentier,resultat,exposant, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\n        texte = `` // Nous utilisons souvent cette variable pour construire le texte de la question.\n        texteCorr = `` // Idem pour le texte de la correction.\n        coef=-randint(1,3)\n        if (!this.sup) {\n            exposant=-randint(1,3)\n        }\n        else {\n            exposant=0\n        }\n        nombreentier=calcul(randint(10,1000)+randint(10,999)*choice([0,1000]))\n        nombre=calcul(nombreentier*10**exposant)\n        resultat=calcul(nombre*10**coef)\n        switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n          case 1:\n            tabrep=[`$${texNombre2(resultat)}$`,`$${texNombre2(calcul(nombre*10**(-coef)))}$`,`$${texNombre2(calcul(nombre*10**(coef-1)))}$`,`$${texNombre2(calcul(nombre*10**(-coef+1)))}$`]\n            tabicone=[1,0,0,0]\n            this.qcm[1].push([`Que doit-on écrire à la place des pointillés ? $${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10**coef))}~~ = ~~\\\\ldots\\\\ldots\\\\ldots\\\\ldots$.\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone]) \n            texte= `$${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10**coef))}~~ = ~~\\\\ldots\\\\ldots\\\\ldots\\\\ldots$`\n            if (this.modeQcm) {\n              texte+=`<br>   Réponses possibles : ${espace}  `\n              shuffle2tableaux(tabrep, tabicone);\n              for (let i=0; i<tabrep.length; i++) {\n                texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace ;\n               if (tabicone[i]==1) {\n                 texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace ;\n               } else {\n                 texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace ;\n               }\n             }\n             break\n            }\n            texteCorr=`Quand on multiplie par $${texNombre2(calcul(10**coef))}=${texFraction(1,calcul(10**(-coef)))}$ chaque chiffre prend une valeur $${texNombre2(calcul(10**(-coef)))}$ fois plus petite.<br>`\n            texteCorr+=`Le chiffre des unités se positionne donc dans les ${rang[3+coef]} :<br>`\n            texteCorr=`$${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10**coef))}~~ =~~ ${miseEnEvidence(texNombre2(resultat),'blue')}$`\n\n            break;\n  \n          case 2:\n            tabrep=[`$${texNombre2(calcul(10**coef))}$`,`$${texNombre2(calcul(10**(coef-1)))}$`,`$${texNombre2(calcul(10**(coef+1)))}$`,`$${texNombre2(calcul(10**(-coef)))}$`]\n            tabicone=[1,0,0,0]\n            this.qcm[1].push([`Que doit-on écrire à la place des pointillés ? $${texNombre2(nombre)} \\\\times \\\\ldots\\\\ldots\\\\ldots~~ = ~~${texNombre2(resultat)}$.\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone]) \n            texte= `$${texNombre2(nombre)} \\\\times \\\\ldots\\\\ldots\\\\ldots~~ = ~~${texNombre2(resultat)}$`\n            if (this.modeQcm) {\n              texte+=`<br>    Réponses possibles : ${espace}  `\n              shuffle2tableaux(tabrep, tabicone);\n              for (let i=0; i<tabrep.length; i++) {\n                texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace ;\n               if (tabicone[i]==1) {\n                 texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace ;\n               } else {\n                 texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace ;\n               }\n             }\n             break\n            }\n            texteCorr=`Quand on multiplie par $${texNombre2(10**coef)}=${texFraction(1,10**(-coef))}$ chaque chiffre prend une valeur $${texNombre2(10**(-coef))}$ fois plus petite.<br>`\n            texteCorr+=`Le chiffre des unités se positionne donc dans les ${rang[3+coef]} :<br>`\n            texteCorr=`$${texNombre2(nombre)} \\\\times ${miseEnEvidence(texNombre2(10**coef),'blue')} ~~=~~ ${texNombre2(resultat)}$`\n   \n          break\n  \n          case 3:\n            tabrep=[`$${texNombre2(nombre)}$`,`$${texNombre2(calcul(nombre/10))}$`,`$${texNombre2(calcul(nombre*10))}$`,`$${texNombre2(calcul(nombre*10**(-coef+1)))}$`]\n            tabicone=[1,0,0,0]\n            this.qcm[1].push([`Que doit-on écrire à la place des pointillés ? $\\\\ldots\\\\ldots\\\\ldots\\\\ldots \\\\times ${texNombre2(10**coef)}~~ = ~~${texNombre2(resultat)}$.\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone]) \n\n            texte= `$\\\\ldots\\\\ldots\\\\ldots\\\\ldots \\\\times ${texNombre2(10**coef)}~~ = ~~${texNombre2(resultat)}$`\n            if (this.modeQcm) {\n              texte+=`<br>    Réponses possibles : ${espace}  `\n              shuffle2tableaux(tabrep, tabicone);\n              for (let i=0; i<tabrep.length; i++) {\n                texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace ;\n               if (tabicone[i]==1) {\n                 texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace ;\n               } else {\n                 texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace ;\n               }\n             }\n             break\n            }\n            texteCorr=`Quand on multiplie par $${texNombre2(10**coef)}=${texFraction(1,10**(-coef))}$ chaque chiffre prend une valeur $${texNombre2(10**(-coef))}$ fois plus petite.<br>`\n            texteCorr+=`Le chiffre des unités se positionne donc dans les ${rang[3+coef]} :<br>`\n            texteCorr=`$${miseEnEvidence(texNombre2(nombre),'blue')} \\\\times ${texNombre2(10**coef)} = ${texNombre2(resultat)}$`\n   \n\n          break\n        }\n\n        if (this.listeQuestions.indexOf(texte) == -1) {\n          // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n          this.listeQuestions.push(texte);\n          this.listeCorrections.push(texteCorr);\n          i++;\n        }\n        cpt++;\n      }\n      listeQuestionsToContenu(this); // On envoie l'exercice à la fonction de mise en page\n    };\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  \n  this.besoinFormulaireCaseACocher = ['Nombres entiers',true]\n  this.besoinFormulaire2Numerique = [\"Type de question\",4,`1 : Résultat à calculer\\n 2 : Nombre à retrouver\\n 3 : Fraction décimale à rtrouver\\n 4 : Alternance des 3 types de question`];\n  //this.besoinFormulaire3CaseACocher =['Mode QCM',false]\n   \n  } // Fin de l'exercice.\n  ","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}