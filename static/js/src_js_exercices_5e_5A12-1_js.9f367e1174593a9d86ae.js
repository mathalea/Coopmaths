/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_5e_5A12-1_js"],{

/***/ "./src/js/exercices/5e/5A12-1.js":
/*!***************************************!*\
  !*** ./src/js/exercices/5e/5A12-1.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Premier_ou_pas_5e)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\n\n\nconst titre = 'Primalité ou pas'\n\n/**\n * Justifier la non primalité réinvestissement des critères de divisibilité\n * Nombres à 3 ou 4 chiffres, un multiple de 2, de 3, de 5, de 7, de 9, de 10, sous forme d'un produit de deux nombres premiers inférieurs à 30\n * et un nombre premier inferieur à 529\n * 5A12-1\n * @author Sébastien Lozano\n */\nfunction Premier_ou_pas_5e() {\n\t'use strict';\n\t_ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `Justifier que les nombres suivants sont premiers ou pas.`;\n\t//this.consigne += `<br>`;\t\n\tsortie_html ? this.spacing = 3 : this.spacing = 2;\n\tsortie_html ? this.spacing_corr = 2 : this.spacing_corr = 1;\n\tthis.nb_questions = 7;\n\t//this.correction_detaillee_disponible = true;\n\tthis.nb_cols = 2;\n\tthis.nb_cols_corr = 1;\n\tthis.sup = 1;\n\tthis.liste_packages = `bclogo`;\n\n\tthis.nouvelle_version = function (numero_de_l_exercice) {\n\t\tlet type_de_questions;\n\t\tif (sortie_html) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.bouton_aide = '';\n\t\t\tthis.bouton_aide = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.modal_pdf)(numero_de_l_exercice, \"assets/pdf/FicheArithmetique-5A11.pdf\", \"Aide mémoire sur les nombres premiers (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\tthis.bouton_aide += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.modal_video)('conteMathsNombresPremiers', '/videos/LesNombresPremiers.mp4', 'Petit conte mathématique - Les Nombres Premiers', 'Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.liste_questions = []; // Liste de questions\n\t\tthis.liste_corrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenu_correction = ''; // Liste de questions corrigées\n\n\t\tlet type_de_questions_disponibles = [1, 2, 3, 4, 5, 6, 7];\n\t\ttype_de_questions_disponibles = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)(type_de_questions_disponibles); // on mélange l'ordre des questions\n\n\t\t//let type_de_questions_disponibles = [1];\n\t\tlet liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(type_de_questions_disponibles, this.nb_questions);\n\n\t\tlet string_rappel = `Cette liste des nombres premiers inférieurs à 30 pourra être utile : <br>` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(100)[0];\n\t\tfor (let k = 1; k < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(30).length; k++) {\n\t\t\tstring_rappel += `, ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(30)[k];\n\t\t};\n\t\tstring_rappel += `.`;\n\t\tthis.introduction = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.warn_message)(string_rappel, `nombres`, `Coup de pouce`);\n\n\t\tfor (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n\n\t\t\ttype_de_questions = liste_type_de_questions[i];\n\n\t\t\tvar N; // le nombre de la question\n\n\t\t\tswitch (type_de_questions) {\n\t\t\t\tcase 1: // nombre pair\n\t\t\t\t\tN = 2 * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(51, 4999);\n\t\t\t\t\ttexte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N);\n\t\t\t\t\ttexte_corr = `Comme ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N)} est pair, il admet donc au moins trois diviseurs qui sont 1, 2 et lui-même, `;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // Multiple de 3\n\t\t\t\t\tlet sum3 = 0; // pour la valeur de la somme;\n\t\t\t\t\tN = 3 * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(34, 3333); // on initialise avant la boucle car on a peut être de la chance\n\t\t\t\t\twhile ((N % 2 == 0) || (N % 5 == 0)) {\n\t\t\t\t\t\tN = 3 * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(34, 3333);\n\t\t\t\t\t};\n\t\t\t\t\ttexte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N);\n\t\t\t\t\ttexte_corr = `Comme ` + N.toString().charAt(0);\n\t\t\t\t\tsum3 = Number(N.toString().charAt(0));\n\t\t\t\t\tfor (let k = 1; k < N.toString().length; k++) {\n\t\t\t\t\t\ttexte_corr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\tsum3 += Number(N.toString().charAt(k));\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += ` = ${sum3} est un multiple de 3 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N)} aussi, il admet donc au moins trois diviseurs qui sont 1, 3 et lui-même, `;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // Multiple de 5\n\t\t\t\t\tN = 5 * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(20, 1999);\n\t\t\t\t\ttexte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N);\n\t\t\t\t\ttexte_corr = `Comme le dernier chiffre de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N)} est un ${N.toString().charAt(N.toString().length - 1)} alors ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N)} est divisible par 5, `;\n\t\t\t\t\ttexte_corr += `il admet donc au moins trois diviseurs qui sont 1, 5 et lui-même, `;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4: // Multiple de 9\n\t\t\t\t\tlet sum9 = 0; // pour la valeur de la somme;\n\t\t\t\t\tN = 9 * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(12, 1111); // on initialise avant la boucle car on a peut être de la chance\n\t\t\t\t\twhile ((N % 2 == 0) || (N % 5 == 0)) {\n\t\t\t\t\t\tN = 9 * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(34, 3333);\n\t\t\t\t\t};\n\t\t\t\t\ttexte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N);\n\t\t\t\t\ttexte_corr = `Comme ` + N.toString().charAt(0);\n\t\t\t\t\tsum9 = Number(N.toString().charAt(0));\n\t\t\t\t\tfor (let k = 1; k < N.toString().length; k++) {\n\t\t\t\t\t\ttexte_corr += ` + ` + N.toString().charAt(k);\n\t\t\t\t\t\tsum9 += Number(N.toString().charAt(k));\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += ` = ${sum9} est un multiple de 9 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N)} aussi, il admet donc au moins trois diviseurs qui sont 1, 9 et lui-même, `;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5: // multiple de 10\n\t\t\t\t\tN = 10 * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 999);\n\t\t\t\t\ttexte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N);\n\t\t\t\t\ttexte_corr = `Comme le nombre ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N)} se termine par un ${N.toString().charAt(N.toString().length - 1)} alors ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N)} est un multiple de 10, `;\n\t\t\t\t\ttexte_corr += `il admet donc au moins trois diviseurs qui sont 1, 10 et lui-même, `;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6: // produit de deux nombres premiers inférieurs à 30\n\t\t\t\t\t// rang du premier facteur premier\n\t\t\t\t\tlet r1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(30).length - 1);\n\t\t\t\t\t// rang du second facteur premier\n\t\t\t\t\tlet r2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(30).length - 1);\n\t\t\t\t\tlet prime1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(100)[r1]; // on tire un nombre premier inférieur à 100, il n'y en a que 25!\n\t\t\t\t\tlet prime2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(100)[r2]; // on tire un autre nombre premier inférieur à 100, ça peut être le même qu'avant!\n\t\t\t\t\tN = prime1 + `$\\\\times $` + prime2;\n\t\t\t\t\ttexte = N;\n\t\t\t\t\ttexte_corr = `${N} est le produit de ${prime1} et de ${prime2}, il admet donc au moins `;\n\t\t\t\t\tif (prime1 == prime2) {\n\t\t\t\t\t\ttexte_corr += `trois divisieurs qui sont 1, ${prime1} et lui-même ${N}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(prime1 * prime2)} `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr += `quatre diviseurs qui sont 1, ${prime1}, ${prime2} et lui-même ${N}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(prime1 * prime2)}, `;\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(`${N} = ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(prime1 * prime2) + ` n'est donc pas premier.`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7: // nombre premier inférieur à 29\n\t\t\t\t\t// rang du nombre premier choisi\n\t\t\t\t\tlet r = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(29).length - 1);\n\t\t\t\t\tN = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(29)[r]; //on choisit un nombre premier inférieur à 529\n\t\t\t\t\ttexte = N + ``;\n\t\t\t\t\tlet tab_premiers_a_tester = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(N);\n\t\t\t\t\t//texte_corr = `Testons la divisibilité de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexte_corr = `En effectuant la division euclidienne de ${N} par tous les nombres premiers inférieurs à $\\\\sqrt{${N}}$, c'est à dire par les nombres `;\n\t\t\t\t\ttexte_corr += tab_premiers_a_tester[0];\n\t\t\t\t\tfor (let k = 1; k < tab_premiers_a_tester.length; k++) {\n\t\t\t\t\t\ttexte_corr += `, ` + tab_premiers_a_tester[k];\n\t\t\t\t\t};\n\t\t\t\t\t//texte_corr += `.`;\n\t\t\t\t\t// texte_corr += `<br> Aucun de ces nombres premiers ne divise ${N}, `;\n\t\t\t\t\ttexte_corr += `, le reste n'est jamais nul.`;\n\t\t\t\t\t// texte_corr += texte_en_couleur_et_gras(nombre_avec_espace(N) + ` est donc un nombre premier.`);\n\t\t\t\t\ttexte_corr += `<br>` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(N) + ` est donc un nombre premier.`);\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.liste_questions.push(texte);\n\t\t\t\tthis.liste_corrections.push(texte_corr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\t};\n\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/5e/5A12-1.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);