{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3F12.js"],"names":["titre","fonctions_calculs_d_images","Exercice","this","sup","consigne","context","spacing","spacingCorr","nbQuestions","nbCols","nbColsCorr","pourcentage","nouvelleVersion","numeroExercice","typesDeQuestions","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","a","b","c","texte","texteCorr","i","cpt","id_unique","Date","now","id_du_div","id_du_div_corr","randint","j","numAlpha","texCadreParOrange","itemize","texEnumerate","miseEnEvidence","SVG_machine_diag_3F12","tikzMachineDiag","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique"],"mappings":"gMAIO,MAAMA,EAAQ,+BAON,SAASC,IAEtBC,eAAcC,MACdA,KAAKC,IAAM,EACXD,KAAKH,MAAQA,EAEbG,KAAKE,SAAW,GAEhBF,KAAKE,UAAY,+CAEjBC,YAAiBH,KAAKI,QAAU,EAAIJ,KAAKI,QAAU,EACnDD,YAAiBH,KAAKK,YAAc,EAAIL,KAAKK,YAAc,EAC3DL,KAAKM,YAAc,EAEnBN,KAAKO,OAAS,EACdP,KAAKQ,WAAa,EAClBR,KAAKC,IAAM,EAIX,GAAIE,YACF,IAAIM,EAAc,OAGpBT,KAAKU,gBAAkB,SAAUC,GAC/B,IAAIC,EACAT,YAIJH,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GAExB,IAAIC,EAA8B,GAClB,GAAZf,KAAKC,IACPc,EAA8B,CAAC,GACV,GAAZf,KAAKC,IACdc,EAA8B,CAAC,GACV,GAAZf,KAAKC,IACdc,EAA8B,CAAC,GACV,GAAZf,KAAKC,IACdc,EAA8B,CAAC,GACV,GAAZf,KAAKC,MACdc,EAA8B,CAAC,EAAG,EAAG,EAAG,IAG1C,MAAMC,GAAuBC,SAAkCF,EAA6Bf,KAAKM,aAEjG,IAAK,IAAWY,EAAGC,EAAGC,EAAGC,EAAOC,EAAvBC,EAAI,EAA8BC,EAAM,EAAGD,EAAIvB,KAAKM,aAAekB,EAAM,IAAK,CAGrF,GAFAZ,EAAmBI,EAAqBO,GAEpCpB,YAAgB,CAClB,MAAMsB,EAAa,QAAYF,KAAKG,KAAKC,QACzC,IAAIC,EAAa,UAASjB,IAAiBc,IACvCI,EAAkB,eAAclB,IAAiBc,IAOvD,OAJAP,GAAIY,SAAQ,EAAG,GACfX,GAAIW,SAAQ,EAAG,GACfV,GAAIU,SAAQ,EAAG,GAEPlB,GACN,KAAK,EACH,IAAImB,EAAI,EACRV,EAAQ,mFACRC,EAAY,gCACRnB,aACFkB,GAAU,sMAKcH,kCACjBC,yFAKPE,IAASW,SAASD,GAAM,+CAA8CX,QACtEE,GAAa,QAASU,SAASD,GAAM,2JAIjBX,qDACMF,OAAOA,cAAcE,OAAOF,EAAIE,oCACjDD,0BAA0BD,EAAIE,KAAKD,KAAKD,EAAIE,EAAID,oGAKzDY,IAEAV,IAASW,SAASD,GAAK,4DACvBT,IAAaU,SAASD,GAAM,cAAaX,6BAA6BF,EAAIE,EAAID,IAC9EG,GAAc,+BAA8BJ,EAAIE,EAAID,oBAAoBC,yBAExEC,IAASY,UAAkBC,SAAQ,CAAC,oBAAsB,4BAA2BhB,IAAM,WAAUC,0BAErGE,IAASc,SAAa,CAAE,8CAA6Cf,IAAK,4DAA6DpB,KAAKI,SAE5IkB,IAAaa,SAAa,EAACF,UAAkBC,SAAQ,CAAE,wBAAuBd,IAAM,8BAA6BF,QAAQA,aAAaE,OAAOF,EAAIE,MAAQ,aAAYD,2BAA2BD,EAAIE,KAAKD,KAAKD,EAAIE,EAAID,QAAU,cAAaC,6BAA6BF,EAAIE,EAAID,+BAA+BD,EAAIE,EAAID,oBAAoBC,wBAAyBpB,KAAKI,UAE7W,MACF,KAAK,EACC2B,EAAI,EAGRV,EAAS,oEAAmEH,QAAQC,IAChFhB,aAEFkB,GAAS,QAASW,SAASD,GAAM,wBAAuBX,IACxDC,GAAS,OACTC,GAAYU,SAASD,GAAM,qCAAoCX,OAC/DE,GAAc,WAASc,QAAe,8BAA8BlB,MAAKkB,QAAe,4BAA4BjB,KACpHG,GAAc,WAASc,QAAehB,QAAQF,aAAYkB,QAAehB,MAAMD,KAC/EG,GAAc,WAASc,QAAehB,QAAQF,EAAIE,KAAKD,KACvDG,GAAc,WAASc,QAAehB,QAAQF,EAAIE,EAAID,KACtDY,IAEAV,IAASW,SAASD,GAAK,4DACvBT,GAAa,QAASU,SAASD,GAAM,eAAcX,8BAA8BF,EAAIE,EAAID,IACzFG,GAAc,+BAA8BJ,EAAIE,EAAID,oBAAoBC,0BAGxEC,IAASc,SAAa,CAAE,uBAAsBf,IAAK,4DAA6DpB,KAAKI,SACrHkB,GAAYa,SAAa,CAAE,oCAAmCf,+BAC1DgB,QAAe,8BAA8BlB,MAAKkB,QAAe,4BAA4BjB,6BAC7FiB,QAAehB,QAAQF,aAAYkB,QAAehB,MAAMD,6BACxDiB,QAAehB,QAAQF,EAAIE,KAAKD,6BAChCiB,QAAehB,QAAQF,EAAIE,EAAID,KAAO,cAAaC,8BAA8BF,EAAIE,EAAID,gDACpED,EAAIE,EAAID,oBAAoBC,yBAClDpB,KAAKI,UAEV,MACF,KAAK,EACC2B,EAAI,EAGRV,EAAS,sDAAqDH,QAAQC,IAClEhB,aAEFkB,GAAS,QAASW,SAASD,GAAM,wBAAuBX,IACxDC,GAAS,OACTC,GAAYU,SAASD,GAAM,qCAAoCX,OAC/DE,GAAc,WAASc,QAAe,wCAAwClB,MAAKkB,QAAe,4BAA4BjB,KAC9HG,GAAc,WAASc,QAAehB,kBAAkBF,YAAWkB,QAAehB,MAAMD,KACxFG,GAAc,WAASc,QAAehB,kBAAkBF,EAAIE,KAAKD,KACjEG,GAAc,WAASc,QAAehB,kBAAkBF,EAAIE,EAAID,KAChEY,IAEAV,IAASW,SAASD,GAAK,4DACvBT,GAAa,QAASU,SAASD,GAAM,eAAcX,8BAA8BF,EAAIE,EAAID,IACzFG,GAAc,+BAA8BJ,EAAIE,EAAID,oBAAoBC,0BAGxEC,IAASc,SAAa,CAAE,uBAAsBf,IAAK,4DAA6DpB,KAAKI,SACrHkB,GAAYa,SAAa,CAAE,oCAAmCf,+BAC1DgB,QAAe,wCAAwClB,MAAKkB,QAAe,4BAA4BjB,6BACvGiB,QAAehB,kBAAkBF,aAAYkB,QAAehB,MAAMD,6BAClEiB,QAAehB,kBAAkBF,EAAIE,KAAKD,6BAC1CiB,QAAehB,kBAAkBF,EAAIE,EAAID,KAAO,cAAaC,8BAA8BF,EAAIE,EAAID,gDAC9ED,EAAIE,EAAID,oBAAoBC,yBAClDpB,KAAKI,UAEV,MACF,KAAK,EACHiB,EAAQ,GACRC,EAAY,GACZA,GAAa,8BACTS,EAAI,EAGRV,GAAS,iDACLlB,aAEFkB,GAAU,YAAWO,oBAA4BnB,8CACjD4B,QAAsBT,EAAW,IAAK,IAAK,IAAK,IAAK,CAAC,CAAC,GAAKV,EAAGA,EAAI,KAAM,CAAC,GAAKC,EAAGD,EAAI,KAAOC,KAC7FE,IAASW,SAASD,GAAM,wBAAuBX,IAC/CC,GAAS,OACTC,GAAa,OACbA,IAAaU,SAASD,GAAM,sCAAqCX,MACjEE,GAAc,YAAWO,oBAAiCpB,gCAC1D4B,QAAsBR,EAAgB,IAAK,IAAK,IAAK,GAAKT,EAAG,CAAC,CAAC,GAAKF,EAAG,GAAMA,EAAIE,GAAK,CAAC,GAAKD,EAAG,IAAMD,EAAIE,EAAID,MAC7GY,IAEAV,IAASW,SAASD,GAAK,4DACvBT,GAAa,QAASU,SAASD,GAAM,eAAcX,8BAA8BF,EAAIE,EAAID,IACzFG,GAAc,+BAA8BJ,EAAIE,EAAID,oBAAoBC,0BAExEC,GAAS,QAASiB,SAAgB,IAAK,IAAK,CAAC,CAAC,WAAapB,EAAGA,EAAI,KAAM,CAAC,IAAMC,EAAGD,EAAI,KAAOC,KAE7FE,IAASc,SAAa,CAAE,uBAAsBf,IAAK,4DAA6DpB,KAAKI,SACrHkB,GAAYa,SACV,CAAE,qCAAoCf,WAAYkB,SAAgB,IAAKlB,EAAG,CAAC,CAAC,WAAaF,EAAIA,EAAIE,GAAK,CAAC,IAAMD,EAAID,EAAIE,EAAID,KAC/H,cAAaC,8BAA8BF,EAAIE,EAAID,iDACrBD,EAAIE,EAAID,oBAAoBC,yBACjDpB,KAAKI,WAK4B,IAAxCJ,KAAKa,eAAe0B,QAAQlB,KAC9BrB,KAAKa,eAAe2B,KAAKnB,GACzBrB,KAAKc,iBAAiB0B,KAAKlB,GAC3BC,KAEFC,KAGFiB,SAAwBzC,OAE1BA,KAAK0C,0BAA4B,CAAC,qBAAsB,EAAG","file":"js/39750.7b5e75b13a142c18c1c1.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListesSansChangerOrdre, texEnumerate, miseEnEvidence, itemize, tikzMachineDiag, numAlpha, texCadreParOrange } from '../../modules/outils.js'\nimport { SVG_machine_diag_3F12 } from '../../modules/macroSvgJs.js'\nexport const titre = 'Fonctions : Calculs d’images'\n\n/**\n * 3F12 Notion de fonction - Vocabulaire\n * Déterminer à partir de plusieurs modes de représentation l'image d'un nombre\n * @author Sébastien LOZANO\n */\nexport default function fonctions_calculs_d_images () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 1\n  this.titre = titre\n  // pas de différence entre la version html et la version latex pour la consigne\n  this.consigne = ''\n  // pas de différence entre la version html et la version latex pour la consigne\n  this.consigne += 'Calcule les images avec la méthode demandée.'\n\n  context.isHtml ? this.spacing = 2 : this.spacing = 1\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1\n  this.nbQuestions = 4\n  // this.correctionDetailleeDisponible = true;\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 5\n\n  const num_ex = '3F12' // pour rendre unique les id des SVG, en cas d'utilisation dans plusieurs exercices y faisant appel\n\n  if (context.isHtml) {\n    var pourcentage = '100%' // pour l'affichage des svg. On a besoin d'une variable globale\n  } else { // sortie LaTeX\n  };\n  this.nouvelleVersion = function (numeroExercice) {\n    let typesDeQuestions\n    if (context.isHtml) { // les boutons d'aide uniquement pour la version html\n      //\t\t\t this.boutonAide = modalPdf(numeroExercice,\"assets/pdf/FicheFonctions-3F1-act.pdf\",\"Aide mémoire sur les fonctions (Sébastien Lozano)\",\"Aide mémoire\")\n      //\t\t\t this.boutonAide += modalVideo('videoTest','/videos/Fonctions.mp4','Petit conte mathématique','Intro Vidéo');\n    }\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typesDeQuestionsDisponibles = []\n    if (this.sup == 1) {\n      typesDeQuestionsDisponibles = [1] // prog de calcul\n    } else if (this.sup == 2) {\n      typesDeQuestionsDisponibles = [2] // diagramme\n    } else if (this.sup == 3) {\n      typesDeQuestionsDisponibles = [3] // f(x) = ...\n    } else if (this.sup == 4) {\n      typesDeQuestionsDisponibles = [4] // f : x ---> ...\n    } else if (this.sup == 5) {\n      typesDeQuestionsDisponibles = [1, 2, 3, 4] // mélange\n    };\n    // let typesDeQuestionsDisponibles = [1];\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, a, b, c, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n\n      if (context.isHtml) {\n        const id_unique = `${num_ex}_${i}_${Date.now()}`\n        var id_du_div = `div_svg${numeroExercice}${id_unique}`\n        var id_du_div_corr = `div_svg_corr${numeroExercice}${id_unique}`\n      }\n      // on part sur de l'affine avec coeff positifs, on verra ensuite\n      a = randint(2, 9)\n      b = randint(2, 9)\n      c = randint(2, 9)\n\n      switch (typesDeQuestions) {\n        case 1:\n          var j = 0 // pour la sous-numérotation\n          texte = 'On donne le programme de calcul suivant qui correspond à une certaine fonction :'\n          texteCorr = 'Avec ce programme de calcul :'\n          if (context.isHtml) {\n            texte += `\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<div class=\"ui compact warning message\">\t\t\n\t\t\t\t\t\t\t<p>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t- Choisir un nombre<br>\n\t\t\t\t\t\t\t- Multiplier ce nombre par ${a}<br>\n\t\t\t\t\t\t\t- Ajouter ${b} au résultat obtenu<br>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<br>`\n            // sous-question a/\n            texte += numAlpha(j) + ` Appliquer ce programme de calcul au nombre ${c}<br>`\n            texteCorr += '<br>' + numAlpha(j) + `\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<div class=\"ui compact warning message\">\t\t\n\t\t\t\t\t\t\t<p>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t- On choisit le nombre ${c}<br>\n\t\t\t\t\t\t\t- On multiplie ce nombre par ${a} : ${a}$\\\\times$ ${c} = ${a * c}<br>\n\t\t\t\t\t\t\t- On ajoute ${b} au résultat obtenu : ${a * c}+${b}=${a * c + b}<br>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t`\n            j++\n            // sous-question b/\n            texte += numAlpha(j) + ' Traduire ce calcul par une phrase contenant le mot image'\n            texteCorr += numAlpha(j) + `L'image de ${c} par cette fonction vaut ${a * c + b}`\n            texteCorr += `<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par cette fonction`\n          } else {\n            texte += texCadreParOrange(itemize(['Choisir un nombre', `Multiplier ce nombre par ${a}`, `Ajouter ${b} au résultat obtenu`]))\n            // sous-question a/\n            texte += texEnumerate([`Appliquer ce programme de calcul au nombre ${c}`, 'Traduire ce calcul par une phrase contenant le mot image'], this.spacing)\n            // texteCorr +=\n            texteCorr += texEnumerate([texCadreParOrange(itemize([`On choisit le nombre ${c}`, `On multiplie ce nombre par ${a} : $${a} \\\\times ${c} = ${a * c}$ `, `On ajoute ${b} au résultat obtenu : $${a * c}+${b}=${a * c + b}$`])), `L'image de ${c} par cette fonction vaut ${a * c + b}<br>On peut aussi dire que ${a * c + b} est l'image de ${c} par cette fonction`], this.spacing)\n          };\n          break\n        case 2:\n          var j = 0 // pour la sous-numérotation\n\n          // les variables a,b,c changent sans refaire un appel à randint\n          texte = `Soit $f$ la fonction définie par l'expression algébrique $f(x)=$ ${a}$x+$${b}`\n          if (context.isHtml) {\n            // sous-question a/\n            texte += '<br>' + numAlpha(j) + ` Calculer l'image de ${c}`\n            texte += '<br>'\n            texteCorr = numAlpha(j) + ` Calculons l'image par $f$ de $x= ${c}$ :`\n            texteCorr += `<br>$f(${miseEnEvidence('\\\\textit{\\\\textbf{x}}')})= ${a} ${miseEnEvidence('\\\\textit{\\\\textbf{x}}')}+${b}$`\n            texteCorr += `<br>$f(${miseEnEvidence(c)})= ${a}\\\\times ${miseEnEvidence(c)}+${b}$`\n            texteCorr += `<br>$f(${miseEnEvidence(c)})= ${a * c}+${b}$`\n            texteCorr += `<br>$f(${miseEnEvidence(c)})= ${a * c + b}$`\n            j++\n            // sous question b/\n            texte += numAlpha(j) + ' Traduire ce calcul par une phrase contenant le mot image'\n            texteCorr += '<br>' + numAlpha(j) + ` L'image de ${c} par la fonction $f$ vaut ${a * c + b}`\n            texteCorr += `<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $f$`\n          } else {\n            // sous-question a/ et b/\n            texte += texEnumerate([`Calculer l'image de ${c}`, 'Traduire ce calcul par une phrase contenant le mot image'], this.spacing)\n            texteCorr = texEnumerate([`Calculons l'image par $f$ de $x= ${c}$ :\n\t\t\t\t\t\t\t<br>$f(${miseEnEvidence('\\\\textit{\\\\textbf{x}}')})= ${a} ${miseEnEvidence('\\\\textit{\\\\textbf{x}}')}+${b}$\n\t\t\t\t\t\t\t<br>$f(${miseEnEvidence(c)})= ${a}\\\\times ${miseEnEvidence(c)}+${b}$\n\t\t\t\t\t\t\t<br>$f(${miseEnEvidence(c)})= ${a * c}+${b}$\n\t\t\t\t\t\t\t<br>$f(${miseEnEvidence(c)})= ${a * c + b}$`, `L'image de ${c} par la fonction $f$ vaut ${a * c + b}\n\t\t\t\t\t\t\t<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $f$`\n            ], this.spacing)\n          };\n          break\n        case 3:\n          var j = 0 // pour la sous-numérotation\n\n          // les variables a,b,c changent sans refaire un appel à randint\n          texte = `Soit $g$ la fonction définie par $g:x\\\\longmapsto$ ${a}$x+$${b}`\n          if (context.isHtml) {\n            // sous-question a/\n            texte += '<br>' + numAlpha(j) + ` Calculer l'image de ${c}`\n            texte += '<br>'\n            texteCorr = numAlpha(j) + ` Calculons l'image par $g$ de $x= ${c}$ :`\n            texteCorr += `<br>$g:${miseEnEvidence('\\\\textit{\\\\textbf{x}}')}\\\\longmapsto ${a} ${miseEnEvidence('\\\\textit{\\\\textbf{x}}')}+${b}$`\n            texteCorr += `<br>$g:${miseEnEvidence(c)}\\\\longmapsto ${a}\\\\times${miseEnEvidence(c)}+${b}$`\n            texteCorr += `<br>$g:${miseEnEvidence(c)}\\\\longmapsto ${a * c}+${b}$`\n            texteCorr += `<br>$g:${miseEnEvidence(c)}\\\\longmapsto ${a * c + b}$`\n            j++\n            // sous question b/\n            texte += numAlpha(j) + ' Traduire ce calcul par une phrase contenant le mot image'\n            texteCorr += '<br>' + numAlpha(j) + ` L'image de ${c} par la fonction $g$ vaut ${a * c + b}`\n            texteCorr += `<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $g$`\n          } else {\n            // sous-question a/ et b/\n            texte += texEnumerate([`Calculer l'image de ${c}`, 'Traduire ce calcul par une phrase contenant le mot image'], this.spacing)\n            texteCorr = texEnumerate([`Calculons l'image par $g$ de $x= ${c}$ :\n\t\t\t\t\t\t\t<br>$g:${miseEnEvidence('\\\\textit{\\\\textbf{x}}')}\\\\longmapsto ${a} ${miseEnEvidence('\\\\textit{\\\\textbf{x}}')}+${b}$\n\t\t\t\t\t\t\t<br>$g:${miseEnEvidence(c)}\\\\longmapsto ${a}\\\\times ${miseEnEvidence(c)}+${b}$\n\t\t\t\t\t\t\t<br>$g:${miseEnEvidence(c)}\\\\longmapsto ${a * c}+${b}$\n\t\t\t\t\t\t\t<br>$g:${miseEnEvidence(c)}\\\\longmapsto ${a * c + b}$`, `L'image de ${c} par la fonction $g$ vaut ${a * c + b}\n\t\t\t\t\t\t\t<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $g$`\n            ], this.spacing)\n          };\n          break\n        case 4:\n          texte = ''\n          texteCorr = ''\n          texteCorr += 'Calculer avec un diagramme '\n          var j = 0 // pour la sous-numérotation\n\n          // les variables a,b,c changent sans refaire un appel à randint\n          texte += 'Soit la fonction $h$ définie par le diagramme '\n          if (context.isHtml) {\n            // sous-question a/\n            texte += `<div id=\"${id_du_div}\" style=\"width: ${pourcentage}\"; height: 50px; display : table \"></div>`\n            SVG_machine_diag_3F12(id_du_div, 800, 100, 'h', 'x', [['' + a, a + 'x'], ['' + b, a + 'x+' + b]])\n            texte += numAlpha(j) + ` Calculer l'image de ${c}`\n            texte += '<br>'\n            texteCorr += '<br>'\n            texteCorr += numAlpha(j) + ` Calculons l'image par $h$ de $x=$ ${c} :`\n            texteCorr += `<div id=\"${id_du_div_corr}\" style=\"width: ${pourcentage}\"; display : table \"></div>`\n            SVG_machine_diag_3F12(id_du_div_corr, 800, 100, 'h', '' + c, [['' + a, '' + (a * c)], ['' + b, '' + (a * c + b)]])\n            j++\n            // sous question b/\n            texte += numAlpha(j) + ' Traduire ce calcul par une phrase contenant le mot image'\n            texteCorr += '<br>' + numAlpha(j) + ` L'image de ${c} par la fonction $h$ vaut ${a * c + b}`\n            texteCorr += `<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $h$`\n          } else {\n            texte += '<br>' + tikzMachineDiag('h', 'x', [['\\\\times ' + a, a + 'x'], ['+' + b, a + 'x+' + b]])\n            // sous-question a/ et b/\n            texte += texEnumerate([`Calculer l'image de ${c}`, 'Traduire ce calcul par une phrase contenant le mot image'], this.spacing)\n            texteCorr = texEnumerate(\n              [`Calculons l'image par $g$ de $x=$ ${c} :<br>` + tikzMachineDiag('h', c, [['\\\\times ' + a, (a * c)], ['+' + b, (a * c + b)]]),\n\t\t\t\t\t\t\t`L'image de ${c} par la fonction $g$ vaut ${a * c + b}\n\t\t\t\t\t\t \t<br> On peut aussi dire que ${a * c + b} est l'image de ${c} par la fonction $g$`\n              ], this.spacing)\n          };\n          break\n      };\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Règle à travailler', 5, \"1 : &Agrave; partir d'un programme de calcul\\n2 : &Agrave; partir de l'expression algébrique sous forme f(x) = ...\\n3 : &Agrave; partir de l'expression algébrique sous forme f : x --> ...\\n4 : &Agrave; partir d'un diagramme\\n5 : Mélange\"]\n}\n"],"sourceRoot":""}