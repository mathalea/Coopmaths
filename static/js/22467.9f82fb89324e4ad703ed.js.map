{"version":3,"file":"js/22467.9f82fb89324e4ad703ed.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3L11-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, lettreDepuisChiffre, printlatex } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Utiliser la distributivité (simple ou double) et réduire'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n* Utiliser la simple ou la double distributivité et réduire l'expression\n*\n* @author Rémi Angot\n* 3L11-3\n*/\nexport default function DistributiviteSimpleDoubleReduction () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Développer et réduire les expressions suivantes.'\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = ['cx+e(ax+b)', 'ex+(ax+b)(cx+d)', 'e+(ax+b)(cx+d)', 'e-(ax+b)(cx+d)', '(ax*b)(cx+d)', 'e(ax+b)-(d+cx)']\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, reponse, coeffa, coeffb, coeffc, a, b, c, d, e, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      a = randint(-11, 11, 0)\n      b = randint(-11, 11, 0)\n      c = randint(-11, 11, 0)\n      d = randint(-11, 11, 0)\n      e = randint(-11, 11, 0)\n      switch (listeTypeDeQuestions[i]) {\n        case 'cx+e(ax+b)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${c}*x+(${e})*(${a}*x+(${b}))`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${c}*x+(${e})*(${a}*x+(${b}))`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${c}*x+(${e * a})*x+(${e * b})`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${c + e * a}*x+(${e * b})`)}$`\n          reponse = printlatex(`${c + e * a}*x+(${e * b})`)\n          coeffa = 0\n          coeffb = c + e * a\n          coeffc = e * b\n          break\n        case 'ex+(ax+b)(cx+d)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${e}*x+(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${e}*x+(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${e}*x+(${a * c})*x^2+(${a * d})*x+(${b * c})*x+(${b * d})`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * c}*x^2+(${e + b * c + a * d})*x+(${b * d})`)}$`\n          reponse = printlatex(`${a * c}*x^2+(${e + b * c + a * d})*x+(${b * d})`)\n          coeffa = a * c\n          coeffb = e + b * c + a * d\n          coeffc = b * d\n          break\n        case 'e+(ax+b)(cx+d)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${e}+(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${e}+(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${e}+(${a * c})*x^2+(${a * d})*x+(${b * c})*x+(${b * d})`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * c}*x^2+(${b * c + a * d})*x+(${e + b * d})`)}$`\n          reponse = printlatex(`${a * c}*x^2+(${b * c + a * d})*x+(${e + b * d})`)\n          coeffa = a * c\n          coeffb = b * c + a * d\n          coeffc = e + b * d\n          break\n        case 'e-(ax+b)(cx+d)':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${e}-${printlatex(`(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${e}-${printlatex(`(${a}*x+(${b}))*(${c}x+(${d}))`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${e}-(${printlatex(`(${a * c})*x^2+(${a * d})*x+(${b * c})*x+(${b * d})`)})$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${e}+(${-1 * a * c})*x^2+(${-1 * a * d})*x+(${-1 * b * c})*x+(${-1 * b * d})`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${-1 * a * c}*x^2+(${-1 * b * c - a * d})*x+(${e - b * d})`)}$`\n          reponse = printlatex(`${-1 * a * c}*x^2+(${-1 * b * c - a * d})*x+(${e - b * d})`)\n          coeffa = -1 * a * c\n          coeffb = -1 * b * c - a * d\n          coeffc = e - b * d\n\n          break\n        case '(ax*b)(cx+d)':\n          a = randint(-3, 3, [0])\n          b = randint(2, 3)\n          texte = `$${lettreDepuisChiffre(i + 1)}=(${printlatex(`${a}*x`)}\\\\times${b})(${printlatex(`${c}*x+(${d})`)})$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=(${printlatex(`${a}*x`)}\\\\times${b})(${printlatex(`${c}*x+(${d})`)})$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * b}*x`)}\\\\times(${printlatex(`${c}*x+(${d})`)})$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * b * c}*x^2+(${a * b * d})*x`)}$`\n          reponse = printlatex(`${a * b * c}*x^2+(${a * b * d})*x`)\n          coeffa = a * b * c\n          coeffb = a * b * d\n          coeffc = 0\n          break\n        case 'e(ax+b)-(d+cx)':\n          e = randint(-11, 11, [-1, 1, 0])\n          texte = `$${lettreDepuisChiffre(i + 1)}=${e}(${printlatex(`${a}*x+(${b})`)})-(${printlatex(`${d}+(${c})*x`)})$`\n          texteCorr = texte\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`(${e * a})*x+(${e * b})`)}-(${printlatex(`${d}+(${c})*x`)})$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`(${e * a})*x+(${e * b})+(${-d})+(${-c})*x`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`(${e * a - c})*x+(${e * b - d})`)}$`\n          reponse = printlatex(`(${e * a - c})*x+(${e * b - d})`)\n          coeffa = 0\n          coeffb = e * a - c\n          coeffc = e * b - d\n          break\n      }\n      if (!context.isAmc) {\n        setReponse(this, i, reponse)\n        texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline', { texte: ' $=$' })\n      } else {\n        this.autoCorrection[i] = {\n          enonce: texte,\n          propositions: [\n            {\n              type: 'AMCOpen',\n              propositions: [{\n                texte: texteCorr,\n                statut: 3\n              }]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: '',\n                statut: '',\n                reponse: {\n                  texte: 'valeur de $a$ dans $ax^2+bx+c$',\n                  valeur: coeffa,\n                  param: {\n                    digits: 2,\n                    decimals: 0,\n                    signe: true,\n                    approx: 0\n                  }\n                }\n              }]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: '',\n                statut: '',\n                reponse: {\n                  texte: 'valeur de $b$ dans $ax^2+bx+c$',\n                  valeur: coeffb,\n                  param: {\n                    digits: 2,\n                    decimals: 0,\n                    signe: true,\n                    approx: 0\n                  }\n                }\n              }]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: '',\n                statut: '',\n                reponse: {\n                  texte: 'valeur de $c$ dans $ax^2+bx+c$',\n                  valeur: coeffc,\n                  param: {\n                    digits: 2,\n                    decimals: 0,\n                    signe: true,\n                    approx: 0\n                  }\n                }\n              }]\n            }\n          ]\n        }\n      }\n      if (this.questionJamaisPosee(i, a, b, c, d, e)) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","DistributiviteSimpleDoubleReduction","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","context","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","reponse","coeffa","coeffb","coeffc","a","b","c","d","e","i","cpt","randint","lettreDepuisChiffre","printlatex","autoCorrection","enonce","propositions","type","statut","valeur","param","digits","decimals","signe","approx","setReponse","ajouteChampTexteMathLive","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}