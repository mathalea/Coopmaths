{"version":3,"sources":["webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/exercices/beta/beta_modele_vide_stephane.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","totoche","type_de_questions_disponibles","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","type_de_questions","i","cpt","indexOf","push","listeQuestionsToContenu"],"mappings":"0GAMe,SAASA,IAEtBC,KAAKC,MAAQ,GACbD,KAAKE,SAAW,GAChBF,KAAKG,mBAAqB,GAC1BH,KAAKI,eAAiB,GACtBJ,KAAKK,iBAAmB,GACxBL,KAAKM,aAAe,GACpBN,KAAKO,QAAU,GACfP,KAAKQ,kBAAoB,GACzBR,KAAKS,YAAc,GACnBT,KAAKU,OAAS,EACdV,KAAKW,WAAa,EAClBX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EACnBb,KAAKc,QAAS,EAEdd,KAAKe,2BAA4B,EACjCf,KAAKgB,uBAAwB,EAC7BhB,KAAKiB,6BAA8B,EACnCjB,KAAKkB,oBAAqB,EAC1BlB,KAAKmB,uBAAwB,EAC7BnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAC7BvB,KAAKwB,+BAAgC,EACrCxB,KAAKyB,qBAAsB,EAC3BzB,KAAK0B,MAAQ,GACb1B,KAAK2B,YAAa,EAClB3B,KAAK4B,gBAAkB,GAMvB5B,KAAK6B,mBAAoB,EACzB7B,KAAK8B,KAAM,EACX9B,KAAK+B,eAAgB,EACrB/B,KAAKgC,SAAU,EACfhC,KAAKiC,sBAAwB,GAC7BjC,KAAKkC,cAAe,EACpBlC,KAAKmC,gBAAkB,SAAUC,KACjCpC,KAAKqC,cAAgB,G,qHC7ChB,MAAMpC,EAAQ,iBAKN,SAASqC,IACtBvC,eAAcC,MACdA,KAAKC,MAAQA,EACbD,KAAKE,SAAW,GAChBF,KAAKS,YAAc,EACnBT,KAAKU,OAAS,EACdV,KAAKW,WAAa,EAClBX,KAAK4B,gBAAkB,IACvB5B,KAAK0B,MAAQ,GACb1B,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EACnBb,KAAKa,YAAc,EAGnBb,KAAKmC,gBAAkB,WACrBnC,KAAKI,eAAiB,GACtBJ,KAAKK,iBAAmB,GACxB,IAAIkC,EAAgC,GACpCA,EAAgC,CAAC,EAAG,GAEpC,IAAIC,EAAuBC,kBAAkBF,EAA+BvC,KAAKS,aAEjF,IAAK,IAAWiC,EAAOC,EAA0BC,EAAxCC,EAAI,EAAqBC,EAAM,EACtCD,EAAI7C,KAAKS,aAAeqC,EAAM,IAAK,CAInC,OAHAF,EAAoBJ,EAAqBK,GAGjCD,GACN,KAAK,EAELF,EAAO,UACPC,EAAW,WAU8B,GAAvC3C,KAAKI,eAAe2C,QAAQL,KAE9B1C,KAAKI,eAAe4C,KAAKN,GACzB1C,KAAKK,iBAAiB2C,KAAKL,GAC3BE,KAEFC,IAEFG,wBAAwBjD","file":"js/7314.472bc831f41690c0310f.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../ClasseExercice.js';\n// import { } from '../../modules/outils.js'//Fonctions à importer dans fichiers outils\n// import { } from '../../modules/2d.js'//Fonctions à importer dans fichiers mathalea2D\n\nexport const titre = 'titre à donner'\n\n/**\n\n*/\nexport default function totoche() {// nom de fonction à donner\n  Exercice.call(this);\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 3;\n  this.nbCols = 2;\n  this.nbColsCorr = 2;\n  this.tailleDiaporama = 100;\n  this.video = \"\";\n  this.spacing = 1;\n  this.spacingCorr = 1;\n  this.spacingCorr = 3\n// paramètrage graphique, nb questions; ..\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [];\n    this.listeCorrections = [];\n    let type_de_questions_disponibles = [];\n    type_de_questions_disponibles = [1, 2];// On complète selon le nb de cas dans l'exo (switch)\n\n    let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions);\n\n    for (let i = 0, texte, texteCorr, cpt = 0, a, b, type_de_questions;\n      i < this.nbQuestions && cpt < 50;) {\n      type_de_questions = listeTypeDeQuestions[i];\n\n\n      switch (type_de_questions) {\n        case 1:\n        // on utilise les variables définies dans la boucle et les fonctions définies dans import\n        texte=`totoche` // pour l'énoncé\n        texteCorr=`totoche` // pour la correction\n        break; // qui cloture le cas présent\n        case 2:\n            // 2ème cas de figure\n\n          break;\n        // on rajoute autant de case qu'on le souhaite\n      } // fin de switch\n\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n\n\n\n  };\n}\n"],"sourceRoot":""}