{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5G41.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Constructions_parallelogrammes_particuliers","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","correctionDetaillee","correctionDetailleeDisponible","nouvelleVersion","listeQuestions","listeCorrections","A","B","C","D","O","p","d1","d2","c1","c2","c3","c4","dd1","dd2","dd3","dd4","alpha","tri","t1","t2","t3","t4","t5","result2","result1","cible1","cible2","cible3","cellule1","cellule2","cellule3","result3","type_de_question","type_de_questions_disponibles","xMin","yMin","xMax","yMax","xm","ym","xM","yM","texte","texteCorr","celluleAlea","rang","lettreDepuisChiffre","randint","Number","toString","noms","choisitLettresDifferentes","nom","objets_enonce","objets_correction","choice","point","calcul","Math","abs","min","max","pointAdistance","pointIntersectionCC","cercle","milieu","rotation","texNombre","push","tracePoint","labelPoint","longueur","texteGras","afficheLongueurSegment","traceCompas","polygoneAvecNom","x","y","similitude","texNombrec","arrondi","cercleCentrePoint","color","opacite","droite","pointIntersectionDD","miseEnEvidence","afficheMesureAngle","style","dansLaCibleCarree","cibleCarree","num","taille","segment","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","codeSegments","texteParPosition","codageAngleDroit","demiDroite","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/8619.832014e46a8f053b2f3f.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport { texNombrec, choice, texteGras, listeQuestionsToContenu, randint, arrondi, calcul, choisitLettresDifferentes, lettreDepuisChiffre, texNombre ,miseEnEvidence} from '../../modules/outils.js'\nimport { cercle, demiDroite,droite,cercleCentrePoint,pointIntersectionDD, codeSegments, texteParPosition, pointAdistance, codageAngleDroit, afficheMesureAngle, afficheLongueurSegment, point, labelPoint, similitude, polygoneAvecNom, tracePoint, segment, traceCompas, dansLaCibleCarree, cibleCarree, rotation, longueur, mathalea2d, milieu, pointIntersectionCC } from '../../modules/2d.js'\n\n\nexport const titre = 'Construire des quadrilatères particuliers'\n\n/**\n * Construction de quadrilatères avec dispositif d'auto-correction aléatoire\n * Ref 4G41\n * @Auteur Jean-Claude Lhote\n * Publié le 3/02/2020\n */\nexport default function Constructions_parallelogrammes_particuliers() {\n    Exercice.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n    this.consigne = \"\";\n    this.nbQuestions = 1;\n    this.nbQuestionsModifiable = false;\n    this.nbCols = 1;\n    this.nbColsCorr = 1;\n    this.sup = 1;\n    this.correctionDetaillee = false\n    this.correctionDetailleeDisponible = true\n    this.nouvelleVersion = function () {\n        this.listeQuestions = []; // Liste de questions\n        this.listeCorrections = []; // Liste de questions corrigées\n        let texte = \"\", texteCorr = \"\";\n        let celluleAlea = function (rang) {\n            let lettre = lettreDepuisChiffre(randint(1, rang));\n            let chiffre = Number(randint(1, rang)).toString();\n            return lettre + chiffre;\n        };\n        // On prépare la figure...\n        let noms = choisitLettresDifferentes(5, 'QO', true); // on choisit 5 lettres, les 4 premières sont les sommets, la 5e est le centre\n        let nom = `$${noms[0] + noms[1] + noms[2] + noms[3]}$`\n        let A, B, C, D, O, p, d1, d2, c1, c2, c3, c4, dd1, dd2, dd3, dd4, alpha, tri, t1, t2, t3, t4,t5\n        let objets_enonce = [], objets_correction = [], result2, result1, cible1, cible2, cible3, cellule1, cellule2, cellule3, result3\n        let type_de_question, type_de_questions_disponibles\n        let xMin, yMin, xMax, yMax,xm,ym,xM,yM\n        if (this.sup == 1) type_de_questions_disponibles = [1, 2, 3]\n        else if (this.sup == 2) type_de_questions_disponibles = [4, 5, 6,7]\n        else type_de_questions_disponibles = [1, 2, 3, 4, 5, 6,7]\n\n        type_de_question = choice(type_de_questions_disponibles)\n        switch (type_de_question) {\n            case 1:\n                A = point(0, 0, noms[0])\n                c1 = randint(20, 25) * 2 //AB\n                c4 = calcul(randint(20, 30, c1 / 2) / 5) //AD\n                c1 = calcul(c1 / 10)\n                d1 = 5 * (Math.abs(c4 - c1) + 2)\n                d2 = 5 * (c1 + c4 - 3)\n                d1 = calcul(randint(Math.min(d1, d2), Math.max(d1, d2)) / 5) //BD\n                B = pointAdistance(A, c1, randint(-30, 30), noms[1])\n                D = pointIntersectionCC(cercle(A, c4), cercle(B, d1), noms[3])\n                O = milieu(B, D, noms[4])\n                C = rotation(A, O, 180, noms[2])\n                texte = `${nom} est un parallélogramme tel que `\n                texte += `$${noms[0] + noms[1]}=${texNombre(c1)}$ cm, $${noms[0] + noms[3]}=${texNombre(c4)}$ cm, $${noms[1] + noms[3]}=${texNombre(d1)}$ cm.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push(tracePoint(A, B), labelPoint(A, B))\n                if (this.correctionDetaillee) {\n                texteCorr += `Comme ${nom} est un parallélogramme, ses diagonales se coupent en leur milieu.<br>`\n                texteCorr += `Soit $${noms[4]}$ le milieu de $[${noms[1] + noms[3]}]$. $${noms[2]}$ est le symétrique de $${noms[0]}$ par rapport à $${noms[4]}$.`\n                texteCorr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[3]}$.<br>Puis $${noms[4]}$, le milieu de $[${noms[1] + noms[3]}]$ et enfin le point $${noms[2]}$.<br>`\n                }\n                if (longueur(B, D) != longueur(A, C)) {\n                    texteCorr += `Comme $${noms[0] + noms[3]}\\\\ne ${noms[0] + noms[1]}$ et que $${noms[0] + noms[2]}\\\\ne ${noms[3] + noms[1]}$, le paralélogramme ${nom} n'est ni un losange, ni un rectangle.<br>`\n                    texteCorr += `${nom} ${texteGras('est un simple paraléllogramme')}.<br>`\n                }\n                else {\n                    texteCorr += `Comme $$${noms[0] + noms[2]} = ${noms[3] + noms[1]}$ et que $${noms[0] + noms[3]}\\\\ne ${noms[0] + noms[1]}$, le paralélogramme ${nom} est un rectangle.<br>`\n                }\n                objets_correction.push(afficheLongueurSegment(A, B, 'black', -0.5), afficheLongueurSegment(A, D, 'black', 0.5))\n                t1 = traceCompas(A, D, 15)\n                t2 = traceCompas(B, D, 15)\n                t3 = traceCompas(O, C, 20)\n                tri = polygoneAvecNom(A, B, D)\n                xm = Math.min(A.x, B.x, D.x)-0.8;\n                ym = Math.min(A.y, B.y ,D.y)-0.8;\n                xM = Math.max(A.x, B.x ,D.x)+0.8;\n                yM = Math.max(A.y, B.y, D.y)+0.8;\n                break\n            case 2:\n                O = point(0, 0, noms[4])\n                c1 = randint(25, 35) * 2 //AC\n                c4 = calcul(randint((c1 + 4) / 2, 45) / 5) //BD\n                c1 = calcul(c1 / 10)\n                alpha = randint(100, 130)\n\n                A = pointAdistance(O, c1 / 2, randint(-30, 30), noms[0])\n                B = similitude(A, O, alpha, c4 / c1, noms[1])\n                D = rotation(B, O, 180, noms[3])\n                C = rotation(A, O, 180, noms[2])\n                texte = `${nom} est un parallélogramme de centre $${noms[4]}$ tel que `\n                texte += `$${noms[0] + noms[2]}=${texNombre(c1)}$ cm, $${noms[1] + noms[3]}=${texNombre(c4)}$ cm et $\\\\widehat{${noms[0] + noms[4] + noms[1]}}=${alpha}\\\\degree$  dans le sens inverse des aiguilles d'une montre.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push(tracePoint(A, O), labelPoint(A, O))\n                if (this.correctionDetaillee) {\n                texteCorr += `Comme ${nom} est un parallélogramme, ses diagonales se coupent en leur milieu $${noms[4]}$.<br>`\n                texteCorr += `$${noms[2]}$ est le symétrique de $${noms[0]}$ par rapport à $${noms[4]}$. La distance ${noms[4] + noms[1]} est égale à la moitié de ${noms[1] + noms[3]}.<br>`\n                texteCorr += `Construisons tout d'abord le point $${noms[2]}$ symétrique de $${noms[0]}$ par rapport à $${noms[4]}$.<br>`\n                texteCorr += `Construisons ensuite un angle $\\\\widehat{${noms[0] + noms[4] + 'x'}}$ de mesure $${alpha}\\\\degree$ dans le sens inverse des aiguilles d'une montre.<br>`\n                texteCorr += `Puis le point $${noms[1]}$ sur $[${noms[4]}x)$ et son symétrique $${noms[3]}$ par rapport à $${noms[4]}$ situés tous les deux à $${texNombrec(arrondi(c4 / 2))}$ cm de $${noms[4]}$.<br>`\n                }\n                xm = Math.min(A.x, B.x, C.x)-0.8;\n                ym = Math.min(A.y, B.y ,C.y)-0.8;\n                xM = Math.max(A.x, B.x ,C.x)+0.8;\n                yM = Math.max(A.y, B.y, C.y)+0.8;\n                break\n            case 3:\n                A = point(0, 0, noms[0])\n                c1 = randint(26, 40) * 2 //AB\n                c4 = calcul(randint(15, 25) / 5) //AD\n                c1 = calcul(c1 / 10)\n\n                B = pointAdistance(A, c1, randint(-30, 30), noms[1])\n                D = similitude(B, A, 90, c4 / c1, noms[3])\n                O = milieu(B, D, noms[4])\n                C = rotation(A, O, 180, noms[2])\n                texte = `${nom} est un parallélogramme tel que `\n                texte += `$${noms[0] + noms[1]}=${texNombre(c1)}$ cm, $${noms[0] + noms[3]}=${texNombre(c4)}$ cm, $${noms[1] + noms[3]}=${noms[0] + noms[2]}$.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push(tracePoint(A, B), labelPoint(A, B))\n\n                texteCorr += `Comme ${nom} est un parallélogramme, ses diagonales se coupent en leur milieu et comme de plus elles ont la même longueur, ${texteGras(nom)} ${texteGras(' est donc un rectangle')}.<br>`\n                if (this.correctionDetaillee) {\n                texteCorr += `Soit $${noms[4]}$ le milieu de $[${noms[1] + noms[3]}]$. $${noms[2]}$ est le symétrique de $${noms[0]}$ par rapport à $${noms[4]}$.<br>`\n                texteCorr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[3]}$ puis $${noms[4]}$ au milieu de $[${noms[1] + noms[3]}]$.<br>`\n                texteCorr+=`Les quatre sommets de ${nom} sont sur le cercle de centre $${noms[4]}$ passant par $${noms[0]}$. $[${noms[0]}${noms[2]}]$ et $[${noms[1]}${noms[3]}]$ sont des diamètres de ce cercle.<br>`\n                }\n                objets_correction.push(afficheLongueurSegment(A, B, 'black', -0.5), afficheLongueurSegment(A, D, 'black', 0.5))\n                t1=cercleCentrePoint(O,A)\n                t1.color='gray'\n                t1.opacite=0.5\n                t3 = traceCompas(O, C, 20)\n                tri = polygoneAvecNom(A, B, D)\n                xm = Math.min(A.x, B.x, D.x)-0.8;\n                ym = Math.min(A.y, B.y ,D.y)-0.8;\n                xM = Math.max(A.x, B.x ,D.x)+0.8;\n                yM = Math.max(A.y, B.y, D.y)+0.8;\n\n                break\n            case 4:\n                A = point(0, 0, noms[0])\n                c1 = randint(15, 30) //AB\n                c4 = calcul(randint(15, 20,c1) / 5) //BD\n                c1 = calcul(c1 / 5)\n\n                B = pointAdistance(A, c1, randint(-30, 30), noms[1])\n                D = pointIntersectionCC(cercle(A, c1), cercle(B, c4), noms[3])\n                O = milieu(B, D, noms[4])\n                C = rotation(A, O, 180, noms[2])\n\n                texte = `${nom} est un parallélogramme tel que `\n                texte += `$${noms[0] + noms[1]}=${texNombre(c1)}$ cm, $${noms[1] + noms[3]}=${texNombre(c4)}$ cm, $[${noms[0] + noms[2]}]\\\\perp [${noms[1] + noms[3]}]$.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push(tracePoint(A, B), labelPoint(A, B))\n\n                texteCorr += `Comme ${nom} est un parallélogramme dont les diagonales $[${noms[0] + noms[2]}]$ et $[${noms[1] + noms[3]}]$ sont perpendiculaires, ${nom}${texteGras(' est un losange')}.<br>`\n                if (this.correctionDetaillee){\n                texteCorr += `Il en résulte que le triangle $${noms[0] + noms[1] + noms[3]}$ est isoclèle en $${noms[0]}$.<br>`\n                texteCorr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[3]}$ puis $${noms[4]}$, le milieu de $[${noms[1] + noms[3]}]$ et enfin le point $${noms[2]}$.<br>`\n                }\n                objets_correction.push(afficheLongueurSegment(A, B, 'black', -0.5), afficheLongueurSegment(A, D, 'black', 0.5))\n                t1 = traceCompas(A, D, 15)\n                t2 = traceCompas(B, D, 15)\n                t3 = traceCompas(O, C, 20)\n                tri = polygoneAvecNom(A, B, D)\n                xm = Math.min(A.x, B.x, D.x)-0.8;\n                ym = Math.min(A.y, B.y ,D.y)-0.8;\n                xM = Math.max(A.x, B.x ,D.x)+0.8;\n                yM = Math.max(A.y, B.y, D.y)+0.8;\n                break\n            case 5:\n                A = point(0, 0, noms[0])\n                c1 = randint(20, 35) * 2 //AC\n                c4 = calcul(randint((c1 - 4) / 2, 35) / 5) //AD\n                c1 = calcul(c1 / 10)\n                alpha = randint(95, 120)\n                B = pointAdistance(A, c1, randint(-30, 30), noms[1])\n                D = similitude(B, A, alpha, c4 / c1, noms[3])\n                O = milieu(B, D, noms[4])\n                C = rotation(A, O, 180, noms[2])\n                texte = `${nom} est un parallélogramme de centre $${noms[4]}$ tel que `\n                texte += `$${noms[0] + noms[1]}=${texNombre(c1)}$ cm, $${noms[0] + noms[3]}=${texNombre(c4)}$ cm et $\\\\widehat{${noms[1] + noms[2] + noms[3]}}=${alpha}\\\\degree$  dans le sens inverse des aiguilles d'une montre.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push(tracePoint(A, B), labelPoint(A, B))\n                if (this.correctionDetaillee) {\n                texteCorr += `Comme ${nom} est un parallélogramme, ses angles opposés ont la même mesure, donc $\\\\widehat{${noms[3] + noms[0] + noms[1]}}=${alpha}\\\\degree$.<br>`\n                texteCorr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[3]}$.<br>`\n                texteCorr += `Puis le point $${noms[2]}$ symétrique  de $${noms[0]}$ par rapport à $${noms[4]}$, milieu de $[${noms[1] + noms[3]}]$.<br>`\n            }\n                texteCorr += `Comme ${nom} est un parallélogramme qui ne possède pas d'angle droit et que ses côtés consécutifs sont de longueurs différentes, ${texteGras('c\\'est un simple parallélogramme')}.<br>`\n                t1 = traceCompas(A, D, 15)\n                t2 = traceCompas(A, B, 15)\n                t3 = traceCompas(O, C, 20)\n                tri = polygoneAvecNom(A, B, D)\n                xm = Math.min(A.x, B.x, D.x)-0.8;\n                ym = Math.min(A.y, B.y ,D.y)-0.8;\n                xM = Math.max(A.x, B.x ,D.x)+0.8;\n                yM = Math.max(A.y, B.y, D.y)+0.8;\n                break\n            case 6:\n                A = point(0, 0, noms[0])\n                c1 = randint(20, 35) * 2 //AC\n                c2 = randint(15, 20) * 2 //AO\n                c3 = calcul(c1 + randint(5, 10) * 2) - c2 //BO\n                c1 = calcul(c1 / 10)\n                c2 = calcul(c2 / 10)\n                c3 = calcul(c3 / 10)\n\n                B = pointAdistance(A, c1, randint(-30, 30), noms[1])\n                O = pointIntersectionCC(cercle(A, c2), cercle(B, c3), noms[4])\n                C = rotation(A, O, 180, noms[2])\n                D = rotation(B, O, 180, noms[3])\n                texte = `${nom} est un parallélogramme de centre $${noms[4]}$ tel que `\n                texte += `$${noms[0] + noms[1]}=${texNombre(c1)}$ cm, $${noms[4] + noms[2]}=${texNombre(c2)}$ cm et $${noms[4] + noms[3]}=${texNombre(c3)}$ cm.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push(tracePoint(A, B), labelPoint(A, B))\n                if (this.correctionDetaillee) {\n                texteCorr += `Comme ${nom} est un parallélogramme, ses diagonales se coupent en leur milieu $${noms[4]}$.<br>`\n                texteCorr += `On en déduit que $${noms[0] + noms[4]}=${noms[4] + noms[2]}=${texNombre(c2)}$ cm et que $${noms[1] + noms[4]}=${noms[4] + noms[3]}=${texNombre(c3)}$ cm.<br>`\n                texteCorr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[4]}$.<br>`\n                texteCorr += `Puis les points $${noms[2]}$ et $${noms[3]}$ symétriques respectifs de $${noms[0]}$ et $${noms[1]}$ par rapport à $${noms[4]}$.<br>`\n                }\n                if (c1 * c1 != (c2 * c2 + c3 * c3)) {\n                    texteCorr += `le triangle $${noms[0] + noms[1] + noms[4]}$ n'est pas un triangle rectangle, donc les diagonales ne sont pas perpendiculaires.<br>`\n                    if (c2 == c3) texteCorr += `Les diagonales ont la même longueur. ${nom} est un parallélogramme dont les diagonales sont de même longueur, ${texteGras('c\\'est donc un rectangle')}.<br>`\n                    else texteCorr += `De plus elles n'ont pas la même longueur, donc ${nom} ${texteGras('est un simple parallélogramme')}.<br>`\n                }\n                else {\n                    texteCorr += `Le triangle $${noms[0] + noms[1] + noms[4]}$ est un triangle rectangle, donc les diagonales sont perpendiculaires.<br>`\n                    if (c2 == c3) texteCorr += `de plus les diagonales ont même longueur. ${nom} est un parallélogramme dont les diagonales sont perpendiculaires et de même longueur, ${texteGras('c\\'est donc un carré')}.<br>`\n                }\n                t1 = traceCompas(A, O, 20)\n                t2 = traceCompas(B, O, 20)\n                t3 = traceCompas(O, C, 30)\n                t4 = traceCompas(O, D, 30)\n\n                tri = polygoneAvecNom(A, B, O)\n                xm = Math.min(A.x, B.x, O.x)-0.8;\n                ym = Math.min(A.y, B.y ,O.y)-0.8;\n                xM = Math.max(A.x, B.x ,O.x)+0.8;\n                yM = Math.max(A.y, B.y, O.y)+0.8;\n                break\n                case 7:\n                    A = point(0, 0, noms[0])\n                    c1 = calcul(randint(30, 40)/5) //AC\n                    c2 = randint(25,40)// angle OAB\n                    c3 = randint(30,45,c2) // angle OCB\n    \n                    C = pointAdistance(A, c1, randint(-30, 30), noms[2])\n                    O = milieu(A,C,noms[4])\n                    B=rotation(C,A,c2)\n                    dd1=droite(A,B)\n                    D=rotation(A,C,-c3)\n                    dd2=droite(C,D)\n                    B=pointIntersectionDD(dd1,dd2,noms[1])\n                    D=rotation(B,O,180,noms[3])\n                    texte = `${nom} est un parallélogramme de centre $${noms[4]}$ tel que `\n                    texte += `$${noms[0] + noms[2]}=${texNombre(c1)}$ cm.<br>$\\\\widehat{${noms[4] + noms[0] + noms[1]}}=${c2}\\\\degree$  dans le sens inverse des aiguilles d'une montre.<br>$\\\\widehat{${noms[4] + noms[2] + noms[1]}}=${c3}\\\\degree$  dans le sens des aiguilles d'une montre.<br>`\n                    texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                    objets_enonce.push(tracePoint(A, C), labelPoint(A, C))\n                    if (this.correctionDetaillee) {\n                    texteCorr += `Comme ${nom} est un parallélogramme, ses côtés opposés sont parallèles.<br>`\n                    texteCorr +=`La diagonale $[${noms[0]}${noms[2]}]$ forme des angles $\\\\widehat{${noms[4] + noms[0] + noms[1]}}$ et $\\\\widehat{${noms[4] + noms[2] + noms[3]}}$ alternes-internes égaux.<br>`\n                    texteCorr +=`De même les angles $\\\\widehat{${noms[4] + noms[0] + noms[3]}}$ et $\\\\widehat{${noms[4] + noms[2] + noms[1]}}$ sont alternes-internes égaux eux aussi.<br>`\n                    texteCorr += `On en déduit que $\\\\widehat{${noms[4] + noms[0] + noms[3]}}=\\\\widehat{${noms[4] + noms[2] + noms[1]}}=${miseEnEvidence(c3,'red')}\\\\degree$ et que $\\\\widehat{${noms[4] + noms[0] + noms[1]}}=\\\\widehat{${noms[4] + noms[2] + noms[3]}}=${miseEnEvidence(c2,'blue')}\\\\degree$.<br>`\n                    texteCorr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[2]}$.<br>`\n                    texteCorr += `Puis le points $${noms[3]}$ symétrique de $${noms[1]}$ par rapport à $${noms[4]}$.<br>`\n                    }\n                  \n                        texteCorr += `Le triangle $${noms[0] + noms[1] + noms[2]}$ n'est pas un triangle isocèle car ses angles ne sont pas égaux.<br>`\n                        texteCorr += `De plus dans ce triangle  l'angle $\\\\widehat{${noms[0] + noms[1] + noms[2]}}$ mesure $${180-c2-c3}\\\\degree$ donc ${nom} ${texteGras('est un simple parallélogramme')}.<br>`\n                    t1 = afficheMesureAngle(O, A,B, 'blue',1,texNombre(c2)+'°')\n                    t2 = afficheMesureAngle(O, C,B, 'red',1,texNombre(c3)+'°')\n                    t3 = traceCompas(O, D, 30)\n                    t5 = tracePoint(O)\n                    t5.style = '+'\n                    objets_correction.push(t1,t2)\n                    tri = polygoneAvecNom(A, B, C)\n                    xm = Math.min(A.x, B.x, C.x)-0.8;\n                    ym = Math.min(A.y, B.y ,C.y)-0.8;\n                    xM = Math.max(A.x, B.x ,C.x)+0.8;\n                    yM = Math.max(A.y, B.y, C.y)+0.8;\n                    break\n    \n        }\n        p = polygoneAvecNom(A, B, C, D)\n\n        xMin = Math.min(A.x, B.x, C.x, D.x) - 2;\n        yMin = Math.min(A.y, B.y, C.y, D.y) - 2;\n        xMax = Math.max(A.x, B.x, C.x, D.x) + 2;\n        yMax = Math.max(A.y, B.y, C.y, D.y) + 2;\n\n        cellule1 = celluleAlea(5)\n        cellule2 = celluleAlea(5)\n        cellule3 = celluleAlea(5)\n        result1 = dansLaCibleCarree(B.x, B.y, 5, 0.3, cellule3);\n        result2 = dansLaCibleCarree(C.x, C.y, 5, 0.3, cellule1);\n        result3 = dansLaCibleCarree(D.x, D.y, 5, 0.3, cellule2);\n        cible1 = cibleCarree({ x: result1[0], y: result1[1], rang: 5, num: \"\" ,taille:0.4});\n        cible1.taille = 0.3;\n        cible1.color = 'gray';\n        cible1.opacite = 0.7;\n        cible2 = cibleCarree({ x: result2[0], y: result2[1], rang: 5, num: \"\" ,taille:0.4});\n        cible2.taille = 0.3;\n        cible2.color = 'gray';\n        cible2.opacite = 0.7;\n        cible3 = cibleCarree({ x: result3[0], y: result3[1], rang: 5, num: \"\",taille:0.4 });\n        cible3.taille = 0.3;\n        cible3.color = 'gray';\n        cible3.opacite = 0.7;\n        dd1 = segment(O, A)\n        dd2 = segment(O, B)\n        dd3 = segment(O, C)\n        dd4 = segment(O, D)\n\n        switch (type_de_question) {\n            case 1:\n                if (this.correctionDetaillee) texteCorr += mathalea2d({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, objets_correction, t1, t2, tri[0], tri[1], afficheLongueurSegment(D, B))+'<br>'\n                objets_enonce.push(cible3, cible2)\n                objets_correction.push(p[0], p[1], t3)\n                objets_correction.push(cible3, cible2, dd1, dd2, dd3, dd4, labelPoint(O), codeSegments(\"||\", \"red\", A, O, O, C), codeSegments(\"|||\", \"blue\", B, O, O, D),afficheLongueurSegment(O,B))\n                break\n            case 2:\n                if (this.correctionDetaillee) texteCorr += mathalea2d({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, codeSegments(\"||\", \"red\", A, O, O, C), t3, dd1, dd3, dd2, afficheMesureAngle(A, O, B, 'black', 1, alpha + '°'), tracePoint(A, O, C), labelPoint(A, O, C), texteParPosition('x', B.x - 0.5, B.y), afficheLongueurSegment(A, O), afficheLongueurSegment(O, C))+'<br>'\n                objets_enonce.push(cible3, cible2, cible1)\n                objets_correction.push(p[0], p[1], t3, afficheLongueurSegment(O, D))\n                objets_correction.push(cible3, cible2, cible1, dd1, dd2, dd3, dd4, labelPoint(O), codeSegments(\"||\", \"red\", A, O, O, C), codeSegments(\"|||\", \"blue\", B, O, O, D), afficheMesureAngle(A, O, B, 'black', 1, alpha + '°'))\n\n                break\n            case 3:\n                if (this.correctionDetaillee) texteCorr += mathalea2d({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, objets_correction, tri[0], tri[1], codageAngleDroit(D,A,B))+'<br>'\n                objets_enonce.push(cible3, cible2)\n                objets_correction.push(p[0], p[1], t1,t3)\n                objets_correction.push(cible3, cible2, dd1, dd2, dd3, dd4, labelPoint(O), codeSegments(\"||\", \"red\", A, O, O, C), codeSegments(\"||\", \"red\", B, O, O, D))\n\n                break\n            case 4:\n                if (this.correctionDetaillee) texteCorr += mathalea2d({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, objets_correction, tri[0], tri[1], afficheLongueurSegment(D, B), t2, traceCompas(A, B, 60), traceCompas(A, D, 60))+'<br>'\n                objets_enonce.push(cible3, cible2)\n                objets_correction.push(p[0], p[1], t3,afficheLongueurSegment(O,B))\n                objets_correction.push(codageAngleDroit(A, O, D), cible3, cible2, dd1, dd2, dd3, dd4, labelPoint(O), codeSegments(\"||\", \"red\", A, O, O, C), codeSegments(\"|||\", \"blue\", B, O, O, D))\n                break\n            case 5:\n                if (this.correctionDetaillee) texteCorr += mathalea2d({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, tri[0], tri[1], demiDroite(A, B), demiDroite(A, D), afficheMesureAngle(B, A, D, 'black', 1, alpha + '°'), afficheLongueurSegment(A, B), afficheLongueurSegment(A, D))+'<br>'\n                objets_enonce.push(cible3, cible2)\n                objets_correction.push(p[0], p[1], t3)\n                objets_correction.push(cible3, cible2, dd1, dd2, dd3, dd4, labelPoint(O), codeSegments(\"||\", \"red\", A, O, O, C), codeSegments(\"|||\", \"blue\", B, O, O, D), afficheMesureAngle(B, A, D, 'black', 1, alpha + '°'), afficheLongueurSegment(B, A), afficheLongueurSegment(A, D), afficheLongueurSegment(C, B), afficheLongueurSegment(D, C))\n\n                break\n            case 6:\n                if (this.correctionDetaillee) texteCorr += mathalea2d({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, objets_correction, tri[0], tri[1], afficheLongueurSegment(B, A), afficheLongueurSegment(O, B), afficheLongueurSegment(A, O), t1, t2,t5)+'<br>'\n                objets_enonce.push(cible3, cible2)\n                objets_correction.push(p[0], p[1], t3, t4)\n                objets_correction.push(cible3, cible2, dd1, dd2, dd3, dd4, labelPoint(O), codeSegments(\"||\", \"red\", A, O, O, C), codeSegments(\"|||\", \"blue\", B, O, O, D))\n                break\n                case 7:\n                    if (this.correctionDetaillee) texteCorr += mathalea2d({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, objets_correction, tri[0], tri[1], afficheLongueurSegment(C, O),afficheLongueurSegment(O,A),labelPoint(O),t5,codeSegments(\"||\", \"red\", A, O, O, C))+'<br>'\n                    objets_enonce.push(cible3, cible1)\n                    objets_correction.push(p[0], p[1], t3)\n                    objets_correction.push(cible3, t1,t2,t3,cible1, dd1, dd2, dd3, dd4, labelPoint(O), codeSegments(\"||\", \"red\", A, O, O, C), codeSegments(\"|||\", \"blue\", B, O, O, D),afficheMesureAngle(O, A,D, 'red',1,texNombre(c3)+'°'),afficheMesureAngle(O, C,D, 'blue',1,texNombre(c2)+'°'))\n                    break\n    \n        }\n        texte += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 25, scale: 1 }, objets_enonce)\n        texteCorr += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 25, scale: 1 }, objets_correction)\n\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        listeQuestionsToContenu(this);\n\n    };\n    this.besoinFormulaireNumerique = ['Niveau de diffculté', 3, \"1 : Figures faciles\\n2 : Figures plus difficiles\\n3 : Figure au hasard\"];\n    // this.besoinFormulaire2CaseACocher = [\"Avec des points de part et d'autre\"];\t\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}