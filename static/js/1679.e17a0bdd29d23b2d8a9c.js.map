{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R20-3.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","interactifReady","amcReady","amcType","ExerciceAdditionsDe5Relatifs","max","Exercice","this","sup","sup2","consigne","spacing","nbCols","nbColsCorr","interactif","nouvelleVersion","context","parseInt","listeQuestions","listeCorrections","a","b","c","d","e","s1","s2","s3","s4","relatifs","texte","texteCorr","reponse","i","cpt","nbQuestions","randint","choice","lettreDepuisChiffre","ecritureAlgebrique","ajouteChampTexte","sommeDesTermesParSigne","ecritureNombreRelatif","signe","triePositifsNegatifs","ecritureNombreRelatifc","sommesSignees","ecritureAlgebriquec","indexOf","setReponse","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceInteractif","exercice","document","addEventListener","button","querySelector","event","spanReponseLigne","champTexte","getElementById","value","replaceAll","valeur","toString","innerHTML","readOnly","style","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","propositions","length","statut","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","feedback","messageFeedback","id","message","type","querySelectorAll","uicheck","exerciceQcm","propositionsQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","texteApres","inline","numeric","valeurs","digits","decimals","exposantNbChiffres","exposantSigne","approx","reponses","Array","isArray","param","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","includes","div","cssIcon","remove","divTitre","test","messageUtilisateur","code","width"],"mappings":"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","file":"js/1679.e17a0bdd29d23b2d8a9c.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {\n  listeQuestionsToContenu,\n  randint,\n  choice,\n  ecritureNombreRelatif,\n  ecritureNombreRelatifc,\n  ecritureAlgebrique,\n  ecritureAlgebriquec,\n  signe,\n  sommeDesTermesParSigne,\n  triePositifsNegatifs,\n  lettreDepuisChiffre\n} from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Additions de 5 nombres relatifs'\nexport const interactifReady = true\nexport const amcReady = true\nexport const amcType = 4\n\n/**\n * Effectuer la somme de 5 nombres relatifs.\n *\n * Pour la correction, on commence par effectuer la somme des termes de même signe\n *\n * * On peut paramétrer les distances à zéro qui sont par défaut inférieures à 20\n * * On peut utiliser des écritures simplifiées (ce qui n'est pas le cas par défaut)\n * @author Rémi Angot\n * 5R20-3\n */\nexport default function ExerciceAdditionsDe5Relatifs (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.interactif = true\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  this.nouvelleVersion = function () {\n    if (!context.isHtml) this.interactif = false\n    this.sup = parseInt(this.sup)\n    this.sup2 = parseInt(this.sup2)\n    if (this.interactif) {\n      this.spacing = 3\n    }\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    for (let i = 0, a, b, c, d, e, s1, s2, s3, s4, relatifs, texte, texteCorr, reponse, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(1, this.sup) * choice([-1, 1])\n      b = randint(1, this.sup) * choice([-1, 1])\n      if ((a === 1) & (b === 1)) {\n        // On s'assure que les 3 premières termes n'ont pas le même signe\n        c = -1\n      } else if ((a === -1) & (b === -1)) {\n        c = 1\n      } else {\n        c = randint(1, this.sup) * choice([-1, 1])\n      }\n      d = randint(1, this.sup) * choice([-1, 1])\n      e = randint(1, this.sup) * choice([-1, 1])\n      s1 = 1 // Que des additions\n      s2 = 1\n      s3 = 1\n      s4 = 1\n      reponse = a + b + c + d + e\n      if (this.sup2) {\n        texte = `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(\n          e\n        )} = \\\\dotfill $`\n        if (this.interactif && !context.isAmc) {\n          texte = ajouteChampTexte(this, i, {\n            texte: `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(e)} = $`\n          })\n        }\n        if (!context.isHtml && !context.isAmc) {\n          texte += `<br>$ ${lettreDepuisChiffre(i + 1)} = \\\\dotfill $`\n        }\n        texteCorr = `$ ${lettreDepuisChiffre(i + 1)} =  ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(\n          e\n        )} = ${sommeDesTermesParSigne([a, b, c, d, e])[0]}${ecritureAlgebrique(sommeDesTermesParSigne([a, b, c, d, e])[1])} = ${a + b + c + d + e} $`\n      } else {\n        texte = `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(\n          c\n        )}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} = \\\\dotfill $`\n        if (this.interactif && !context.isAmc) {\n          texte = ajouteChampTexte(this, i, {\n            texte: `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(\n              c\n            )}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} = $`\n          })\n        }\n\n        if (!context.isHtml && !context.isAmc) {\n          texte += `<br>$ ${lettreDepuisChiffre(i + 1)} = \\\\dotfill $`\n        }\n        texteCorr = `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(\n          c\n        )}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} $`\n        relatifs = triePositifsNegatifs([a, s1 * b, s2 * c, s3 * d, s4 * e])\n\n        if ((relatifs[0] > 0) & (relatifs[4] < 0)) {\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(relatifs[0])}+${ecritureNombreRelatifc(relatifs[1])}+${ecritureNombreRelatifc(\n            relatifs[2]\n          )}+${ecritureNombreRelatifc(relatifs[3])}+${ecritureNombreRelatifc(relatifs[4])} $`\n        }\n        const sommesSignees = sommeDesTermesParSigne([relatifs[0], relatifs[1], relatifs[2], relatifs[3], relatifs[4]])\n        if (sommesSignees[0] !== 0 && sommesSignees[1] !== 0) {\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(sommesSignees[0])}+${ecritureNombreRelatifc(sommesSignees[1])} $`\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureAlgebriquec(a + s1 * b + s2 * c + s3 * d + s4 * e)}$<br>`\n        } else if (sommesSignees[0] !== 0) {\n          texteCorr += `<br>$ \\\\phantom{A}=${ecritureAlgebriquec(sommesSignees[0])}$`\n        } else {\n          texteCorr += `<br>$ \\\\phantom{A}=${ecritureAlgebriquec(sommesSignees[1])}$<br>`\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        setReponse(this, i, reponse, { signe: true })\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1 && exercice.autoCorrection[i].propositions[indiceFeedback].feedback) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              message: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.', ',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true, indice } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}${indice || ''}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {array || number} a\n */\nexport function setReponse (exercice, i, valeurs, { digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0 } = {}) {\n  let reponses = []\n  if (!Array.isArray(valeurs)) {\n    reponses = [valeurs]\n  } else {\n    reponses = valeurs\n  }\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n  for (const reponse of reponses) {\n    exercice.autoCorrection[i].reponse.valeur = reponse\n  }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (const prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n/**\n * Fonctions pour gérer les messages utilisateur (feedback erreur|warning ou messages positifs)\n * @module\n */\n\n/**\n * Les types possibles\n * @type {string[]}\n */\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} feedback\n * @param {string} feedback.message\n * @param {string} [feedback.type=error]\n * @param {string} [feedback.titre]\n * @return {HTMLElement} L'élément du feedback (déjà ajouté dans le container)\n */\nexport function addFeedback (container, { message, type = 'error', titre } = {}) {\n  if (!types.includes(type)) {\n    console.error(Error(`type de message inconnu : ${type}`))\n    type = 'error'\n  }\n  if (!message) throw Error('Message obligatoire pour tout retour utilisateur')\n  const cssDiv = type === 'info' ? '' : type\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = type === 'error'\n    ? 'frown outline'\n    : (type === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  if (/<[a-zA-Z0-9_ \"']+/.test(message)) div.innerHTML += message\n  else addText(div, message)\n  return div\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        type: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} feedback\n * @param {string} feedback.id id du div conteneur à utiliser\n * @param {string} feedback.message Le message à afficher\n * @param {string} feedback.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, message = '', type = 'error' } = {}) {\n  if (!id || !message) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message, type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}