{"version":3,"file":"js/96851.db8438e02eb31afb2e3f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta2N60-X2.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { randint, texNombrec, miseEnEvidence, listeQuestionsToContenu, combinaisonListes, texNombre, texFractionReduite, reduireAxPlusB } from '../../modules/outils.js'\nimport { texteSurSegment, codeSegments, codageAngleDroit, segmentAvecExtremites, milieu, labelPoint, point, segment, latexParCoordonnees, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Modéliser une situation géométrique à l\\'aide d\\'une équation'\n\n/**\n * Description didactique de l'exercice\n * @author GillesM\n * Référence\n *  * A DEPLACER EN 2N50-4 !!!!!!!!!!!!!!!!!\n\n*/\nexport default function modeliserEquationsGeometrie () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 10\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeQuestionsDisponibles = ['typeE1', 'typeE2', 'typeE3', 'typeE4', 'typeE5', 'typeE6', 'typeE7', 'typeE8'] // On créé 3 types de questions\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, a, b, c, d, e, A, B, C, D, E, M, N, P, H, F, K, L, objets, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      objets = []\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'typeE1':\n          a = randint(1, 10)// valeur ajoutée\n          d = randint(1, 10)// largeur\n          b = randint(4 * d + 2 * a + 1, 50)// périmètre\n          c = b - 2 * a - 2 * d\n          A = point(0, 0, 'A', 'below')\n          B = point(10, 0, 'B', 'below')\n          C = point(10, 6, 'C')\n          D = point(0, 6, 'D')\n\n          objets.push(segment(A, B), segment(B, C), segment(D, A), segment(C, D), labelPoint(A, B, C, D))\n          objets.push(latexParCoordonnees(`x+${texNombrec(a)}`, milieu(C, D).x + 0, milieu(C, D).y + 0.7, 'black', 20, 10, ''),\n            latexParCoordonnees(`${texNombrec(d)}`, milieu(A, D).x - 0.5, milieu(A, D).y, 'black', 20, 10, ''))\n\n          texte = ` Un rectangle a pour largeur $${d}$ cm et pour longueur $x$ cm.<br>\n            En ajoutant $${a}$ cm à la longueur de ce rectangle, on obtient un nouveau rectangle dont le périmètre est $${b}$ cm.<br>\n             Quelle est la longueur $x$ du rectangle initial ?<br>\n              `\n          texteCorr = ' On réalise une petite figure à main levée pour visualiser la situation :<br>'\n          texteCorr += mathalea2d({ xmin: -1, ymin: -3, xmax: 12, ymax: 8, pixelsParCm: 20, mainlevee: true, amplitude: 0.5, scale: 0.7 }, objets)\n          texteCorr += `Le périmètre du rectangle obtenu est donnée par la formule : $2\\\\times (\\\\ell+L)$ avec $\\\\ell$ la largeur du rectangle et $L$ sa longueur. <br>\n                  Comme $\\\\ell=${d}$ et $L=x+${a}$, le périmètre est donné en fonction de $x$ par :  $ 2(${d}+x+${a})=2(x+${a + d})=2x+${2 * a + 2 * d}$.<br>\n       Puisque le périmètre du rectangle est $${b}$ cm, on cherche $x$ tel que :   $2x+${2 * a + 2 * d}=${b}$.<br>\n       <br>\n       $2x+${2 * a + 2 * d}=${b}$<br>\n       <br>\n       $2x+${2 * a + 2 * d}${miseEnEvidence(-2 * a - 2 * d)}=${b}${miseEnEvidence(-2 * a - 2 * d)}$<br>\n       <br>\n       $2x=${b - 2 * a - 2 * d}$<br>\n       <br>\n       $x=\\\\dfrac{${b - 2 * a - 2 * d}}{2}$<br>\n       <br>\n       $x=${texNombrec(c / 2)}$<br>\n       <br>\n       La longueur $x$ du rectangle initial est :  $${texNombrec(c / 2)}$ cm.\n       `\n          break\n        case 'typeE2':\n\n          a = randint(1, 10)\n          d = randint(1, 5)// largeur\n          b = randint(d * d + d * a + 1, 100)\n          c = b - 2 * a - 2 * d\n\n          A = point(0, 0, 'A', 'below')\n          B = point(10, 0, 'B', 'below')\n          C = point(10, 6, 'C')\n          D = point(0, 6, 'D')\n\n          objets.push(segment(A, B), segment(B, C), segment(D, A), segment(C, D), labelPoint(A, B, C, D))\n          objets.push(latexParCoordonnees(`x+${texNombrec(a)}`, milieu(C, D).x + 0, milieu(C, D).y + 0.7, 'black', 20, 10, ''),\n            latexParCoordonnees(`${texNombrec(d)}`, milieu(A, D).x - 0.5, milieu(A, D).y, 'black', 20, 10, ''))\n          texte = ` Un rectangle a pour largeur $${d}$ cm et pour longueur $x$ cm.<br>\n             En ajoutant $${a}$ cm à la longueur de ce rectangle, on obtient un nouveau rectangle dont l'aire est ${b} cm$^2$.<br>\n              Quelle est la longueur $x$ du rectangle initial ? <br>\n              On donnera le résultat sous la forme d'une fraction irréductible ou d'un nombre entier le cas échéant.`\n          texteCorr = ' On réalise une petite figure à main levée pour visualiser la situation :<br>'\n          texteCorr += mathalea2d({ xmin: -1, ymin: -3, xmax: 12, ymax: 8, pixelsParCm: 20, mainlevee: true, amplitude: 0.5, scale: 0.7 }, objets)\n          texteCorr += `L'aire du rectangle obtenu est donnée par la formule : $\\\\ell\\\\times L$ avec $\\\\ell$ la largeur du rectangle et $L$ sa longueur. <br>\n                   Comme $\\\\ell=${d}$ et $L=x+${a}$, l'aire est donnée en fonction de $x$ par :  $ ${d}\\\\times (x+${a})=${d}x+${d * a}$.<br>\n        Puisque l'aire du rectangle est $${b}$ cm, on cherche $x$ tel que :   $${d}x+${d * a}=${b}$.<br>\n        <br>\n        $${d}x+${d * a}=${b}$<br>\n        <br>\n        $${d}x${miseEnEvidence(-d * a)}=${b}${miseEnEvidence(-d * a)}$<br>\n        <br>\n        $${d}x=${b}-${d * a}$<br>\n        <br>\n        $\\\\dfrac{${d}x}{${miseEnEvidence(d)}}=\\\\dfrac{${b}-${d * a}}{${miseEnEvidence(d)}}$<br>\n        <br>\n        $x=\\\\dfrac{${b}-${d * a}}{${d}}$<br>\n        <br>\n        $x=${texFractionReduite(b - d * a, d)}$<br>\n        <br>\n        \n        La longueur $x$ du rectangle initial est :  $${texFractionReduite(b - d * a, d)}$ cm.\n        `\n          break\n        case 'typeE3':\n\n          a = randint(1, 10)\n          b = randint(a * a + 1, 100)\n          A = point(0, 0, 'A', 'below')\n          B = point(10, 0, 'B', 'below')\n          C = point(0, 6, 'C')\n\n          objets.push(segment(A, B), segment(B, C), segment(A, C), labelPoint(A, B, C), codageAngleDroit(B, A, C))\n          objets.push(latexParCoordonnees(`${texNombrec(a)}`, milieu(A, B).x + 0, milieu(A, B).y - 0.5, 'black', 20, 10, ''),\n            latexParCoordonnees('x', milieu(A, C).x - 0.5, milieu(A, C).y, 'black', 20, 10, ''))\n          texte = ` Un triangle $ABC$ est rectangle en $A$. On a $AB= ${a}$ cm  et $AC= x$ cm.<br>\n         Sachant que le carré de son hypoténuse est $${b}$, déterminer la valeur exacte de $x$. `\n          texteCorr = ' On réalise une petite figure à main levée pour visualiser la situation :<br>'\n          texteCorr += mathalea2d({ xmin: -1, ymin: -3, xmax: 12, ymax: 8, pixelsParCm: 20, mainlevee: true, scale: 0.7 }, objets)\n          texteCorr += `Le carré de l'hypoténuse  est égal à $${b}$. On a donc $BC^2=${b}$.<br>\n          Le triangle $ABC$ est rectangle en $A$, d'après le théorème de Pythagore :<br>\n         <br>\n         $AB^2+AC^2=BC^2$<br>\n         <br>\n         $${a * a}+x^2=${b}$<br>\n         <br>\n         $${a * a}+x^2${miseEnEvidence(-a * a)}=${b} ${miseEnEvidence(-a * a)}$<br>\n         <br>\n         $x^2=${b - a * a}$<br>\n         <br>\n         $x=\\\\sqrt{${b - a * a}}$ &nbsp;&nbsp;  car $x>0$<br>`\n\n          if (b - a * a === 1 || b - a * a === 4 || b - a * a === 9 || b - a * a === 16 || b - a * a === 25 || b - a * a === 36 || b - a * a === 49 || b - a * a === 64 || b - a * a === 81 || b - a * a === 100) {\n            texteCorr += `<br>\n         $x=${Math.sqrt(b - a * a)}$<br>\n         La valeur de $x$ cherchée est : $${Math.sqrt(b - a * a)}$.\n         `\n          } else {\n            texteCorr += `<br>\n         La valeur de $x$ cherchée est : $\\\\sqrt{${b - a * a}}$.\n         `\n          }\n          break\n        case 'typeE4':\n\n          b = randint(1, 10)\n          a = randint(b + 1, 15)\n\n          M = point(0, 0, 'M', 'below')\n          N = point(10, 0, 'N', 'below')\n          P = point(0, 6, 'P')\n\n          objets.push(segment(M, N), segment(N, P), segment(M, P), labelPoint(M, N, P), codageAngleDroit(N, M, P))\n          objets.push(latexParCoordonnees(`${texNombrec(a)}`, milieu(M, P).x - 0.5, milieu(M, P).y, 'black', 20, 10, ''),\n            latexParCoordonnees('x', milieu(M, N).x + 0, milieu(M, N).y - 0.5, 'black', 20, 10, ''),\n            texteSurSegment(`$x+${texNombrec(b)}$`, P, N, 'black', 0.5))\n          // latexParCoordonnees(`$$x+$$${texNombrec(b)}`, milieu(P, N).x + 1, milieu(P, N).y, 0, 'black', 2, 'middle', true))\n          texte = ` Un triangle $MNP$ est rectangle en $M$. On a $MP= ${a}$ cm  et $MN= x$ cm.<br>\n             L'hypoténuse du triangle $MNP$ mesure  $${b}$ cm de plus que le côté $[MN]$.<br>\n             Déterminer la valeur de $x$ sous la forme d'une fraction irréductible ou d'un nombre entier le cas échéant. `\n          texteCorr = ' On réalise une petite figure à main levée pour visualiser la situation :<br>'\n          texteCorr += mathalea2d({ xmin: -1, ymin: -3, xmax: 12, ymax: 8, pixelsParCm: 20, mainlevee: true, amplitude: 0.5, scale: 0.7 }, objets)\n          texteCorr += `Le triangle $MNP$ est rectangle en $M$, d'après le théorème de Pythagore :<br>\n             <br>\n             $MN^2+MP^2=PN^2$<br>\n             <br>\n             $x^2+${a}^2=(x+${b})^2$<br>\n             <br>\n             $x^2+${a * a}= x^2+2\\\\times x\\\\times ${b}+${b}^2$<br>\n             <br>\n             $x^2+${a * a}= x^2+${2 * b}x+${b * b}$<br>\n             <br>\n                    $${a * a}+\\\\cancel{x^2}=\\\\cancel{x^2}+${2 * b}x+${b * b} $<br>\n             <br>\n             $${2 * b}x+${b * b}=${a * a}$<br>\n             <br>\n                     $${2 * b}x+${b * b}${miseEnEvidence(-b * b)}=${a * a}${miseEnEvidence(-b * b)}$<br>\n             <br>\n             $${2 * b}x=${a * a - b * b}$<br>\n             <br>\n             $\\\\dfrac{${2 * b}x}{${miseEnEvidence(2 * b)}}=\\\\dfrac{${a * a - b * b}}{${miseEnEvidence(2 * b)}}$<br>\n        <br>\n             $x=${texFractionReduite(a * a - b * b, 2 * b)}$<br>\n             <br>\n             \n       La valeur de $x$ cherchée est : $${texFractionReduite(a * a - b * b, 2 * b)}$.\n       `\n\n          break\n        case 'typeE5':\n          a = randint(1, 8)\n          b = randint(a * a + 1, 100)\n\n          texte = ` En augmentant le côté d'un carré de $${a}$ cm, son aire aumente de $${b}$ cm$^2$.<br>\n      Quelle est la longueur du côté de ce carré ? <br>\n      On donnera le résultat sous la forme d'une fraction irréductible ou d'un nombre entier le cas échéant.`\n          texteCorr = `On note $x$ la longueur du côté du carré que l'on cherche.<br>\n      La différence des aires entre les deux carrés est  $${b}$, on cherche $x$ tel que :   <br>\n      $(x+${a})^2-x^2=${b}$<br>\n      <br>\n      $\\\\cancel{x^2}+ ${2 * a}x+${a}^2-\\\\cancel{x^2}=${b}$<br>\n      <br>\n      $ ${2 * a}x+${a * a}=${b}$<br>\n      <br>\n      $ ${2 * a}x+${a * a}${miseEnEvidence(-a * a)}=${b}${miseEnEvidence(-a * a)}$<br>\n      <br>\n      $ ${2 * a}x=${b}-${a * a}$<br>\n      <br>\n      $\\\\dfrac{${2 * a}x}{${miseEnEvidence(2 * a)}}=\\\\dfrac{${b - a * a}}{${miseEnEvidence(2 * a)}}$<br>\n      <br>\n           $x=${texFractionReduite(b - a * a, 2 * a)}$<br>\n           <br>\n           La longueur du côté du carré est : $${texFractionReduite(b - a * a, 2 * a)}$ cm.\n `\n\n          break\n        case 'typeE6':\n\n          b = randint(1, 7) // petite base\n          a = randint(b + 2, 14) // grande base\n          d = (a - b) / 2\n          e = randint(1, 10) * 2\n          c = e * (a + b) / 2 // aire\n\n          A = point(0, 0, 'A', 'below')\n          H = point(9, 0, 'H', 'below')\n          B = point(15, 0, 'B', 'below')\n          C = point(15, 8, 'C')\n          D = point(9, 8, 'D')\n          E = point(0, -1, 'E')\n          F = point(15, -1, 'F')\n\n          objets.push(segment(A, D), segmentAvecExtremites(E, F), segment(A, B), segment(B, C), segment(D, C), segment(D, H), codageAngleDroit(A, B, C), codageAngleDroit(B, C, D), labelPoint(A, H, D, B, C), codageAngleDroit(B, H, D))\n          objets.push(texteSurSegment(`${texNombre(b)} cm`, D, C, 'black', +0.5), texteSurSegment(`${texNombre(a)} cm`, E, F, 'black', -0.5), latexParCoordonnees('x', milieu(B, C).x + 0.5, milieu(B, C).y, 'black', 20, 10, ''))\n\n          texte = ' $ABCD$ est un trapèze rectangle.<br> '\n\n          texte += 'Le schéma ci-dessous n\\'est pas à l\\'échelle.<br>' + mathalea2d({ xmin: -1, ymin: -2, xmax: 16, ymax: 10, pixelsParCm: 20, scale: 1 }, objets)\n\n          texte += `Sachant que l'aire de ce trapèze est $${c}$ cm$^2$ et en utilisant les données du graphique, déterminer la hauteur de ce trapèze.<br>\n                    <br>`\n          texteCorr = mathalea2d({ xmin: -1, ymin: -3, xmax: 16, ymax: 10, pixelsParCm: 20, scale: 0.7 }, objets)\n          texteCorr += `<br>La  hauteur du trapèze est  $x$. Il est constitué du rectangle $HBCD$ et du triangle rectangle $AHD$. <br>\n                    Son aire est donc la somme des aires de ces deux figures. <br>\n                    $\\\\bullet~$ L' aire du rectangle $HBCD$ est : $${b}\\\\times x=${reduireAxPlusB(b, 0)}$ ;<br>\n                    $\\\\bullet~$ L' aire de triangle rectangle $AHD$ est : $\\\\dfrac{(${a}-${b})\\\\times x}{2}=${texNombrec((a - b) / 2)}x$.<br>\n                    <br>\n                    $${reduireAxPlusB(b, 0)} + ${reduireAxPlusB((a - b) / 2, 0)}=${c}$<br>\n                    <br>\n                    $${texNombrec(b + (a - b) / 2)}x=${c}$<br>\n                    <br>\n                    $\\\\dfrac{${texNombrec(b + d)}x}{${miseEnEvidence(texNombrec(b + d))}}=\\\\dfrac{${c}}{${miseEnEvidence(texNombrec(b + d))}}$<br>\n                    <br>\n                    `\n          if ((a - b) / 2 % 1 !== 0) {\n            texteCorr += ` $x=${texFractionReduite(c * 10, (b + d) * 10)}$<br>\n              La hauteur du trapèze est : $${texFractionReduite(c * 10, (b + d) * 10)}$ cm.\n                    `\n          } else {\n            texteCorr += `    $x=${texFractionReduite(c, b + d)}$<br>\n                    La hauteur du trapèze est : $${texFractionReduite(c, b + d)}$ cm.`\n          }\n          break\n        case 'typeE7':\n\n          a = randint(3, 8) // largeur rect\n          b = randint(1, 6)// hauteur triang\n          c = randint(1, 6) // valeur ajout à x\n          e = randint(1, 20)\n          d = (e * (2 * a + b) + 2 * a * c + c * b) / 2 // aire\n\n          A = point(0, 0, 'A', 'below')\n          H = point(5, 6, 'H', 'below')\n          B = point(10, 0, 'B', 'below')\n          C = point(10, 6, 'C')\n          D = point(0, 6, 'D')\n          E = point(5, 10, 'E')\n\n          objets.push(segment(A, B), segment(B, C), segment(C, D), segment(A, D), segment(E, C), segment(E, D), segment(E, H), codageAngleDroit(E, H, C), labelPoint(A, H, D, B, C, E), codeSegments('//', 'blue', D, E, E, C))\n          objets.push(latexParCoordonnees(`${texNombrec(a)}`, milieu(B, C).x + 0.4, milieu(B, C).y, 'black', 20, 10, ''),\n            latexParCoordonnees(`${texNombrec(b)}`, milieu(E, H).x + 0.4, milieu(E, H).y, 'black', 20, 10, ''),\n            latexParCoordonnees(`x + ${texNombrec(c)}`, milieu(A, B).x + 0.4, milieu(A, B).y - 0.4, 'black', 20, 10, ''))\n\n          texte = ` La figure ci-dessous (qui n'est pas à l'échelle) est composée d'un rectangle $ABCD$ et d'un triangle isocèle $DEC$. <br>\n        L'unité est le mètre.<br> ` +\n        mathalea2d({ xmin: -1, ymin: -1, xmax: 12, ymax: 11, pixelsParCm: 20, scale: 1 }, objets)\n\n          texte += `Sachant que l'aire de cette figure est $${d}$ m$^2$ et en utilisant les données du graphique, déterminer la  valeur exacte de $x$.<br>\n         <br>`\n          texteCorr = mathalea2d({ xmin: -1, ymin: -1, xmax: 16, ymax: 11, pixelsParCm: 20, scale: 0.7 }, objets)\n          texteCorr += `<br>La figure est  constituée du rectangle $ABCD$ et du triangle isocèle $DEC$.   <br>\n        Son aire est donc la somme des aires de ces deux figures. <br>\n        $\\\\bullet~$ L' aire du rectangle $ABCD$ est : $${a}\\\\times (x+${c})=${reduireAxPlusB(a, a * c)}$ ;<br>\n        $\\\\bullet~$ L' aire de triangle isocèle $DEC$ est : $\\\\dfrac{${b}\\\\times(x +${c})}{2}=${texFractionReduite(b, 2)}(x+${c})=${reduireAxPlusB(b / 2, (b * c) / 2)}$.<br>\n        L'aire de la figure étant $${d}$ m$^2$, on cherche $x$ tel que : <br>\n        $(${reduireAxPlusB(a, a * c)})+(${reduireAxPlusB(b / 2, (b * c) / 2)})=${d}$<br>\n        <br>\n        $${reduireAxPlusB(a, a * c)}+${reduireAxPlusB(b / 2, (b * c) / 2)}=${d}$<br>\n        <br>\n        $${reduireAxPlusB(a + b / 2, a * c + (b * c) / 2)}=${d}$<br>\n        <br>\n        $${reduireAxPlusB(a + b / 2, a * c + (b * c) / 2)}${miseEnEvidence(texNombrec(-a * c - (b * c) / 2))}=${d}${miseEnEvidence(texNombrec(-a * c - (b * c) / 2))}$<br>\n        <br>\n        $${reduireAxPlusB(a + b / 2, 0)}=${reduireAxPlusB(0, d - a * c - (b * c) / 2)}$<br>\n        <br>\n        $\\\\dfrac{${reduireAxPlusB(a + b / 2, 0)}}{${miseEnEvidence(texNombrec(a + b / 2))}}=\\\\dfrac{${texNombrec(d - a * c - (b * c) / 2)}}{${miseEnEvidence(texNombrec(a + b / 2))}}$<br>\n        <br>`\n          texteCorr += `    $x=${texFractionReduite((d - a * c - (b * c) / 2) * 10, (a + b / 2) * 10)}$.<br>\n  La valeur de $x$ cherchée est donc : $ ${texFractionReduite((d - a * c - (b * c) / 2) * 10, (a + b / 2) * 10)}$\n        `\n          break\n\n        case 'typeE8':\n\n          a = randint(10, 50) // longueur seg [AB]\n\n          A = point(0, 0, 'A', 'below')\n          B = point(10, 0, 'B', 'below')\n          C = point(10, 6, 'C')\n          D = point(4, 6, 'D')\n          E = point(2, 3.46, 'E')\n          M = point(4, 0, 'M', 'below')\n          K = point(10, -1, 'K')\n          L = point(0, -1, 'L')\n\n          objets.push(segment(A, B), segment(A, E), segmentAvecExtremites(K, L), segment(E, M), segment(M, D), segment(B, C), segment(D, C), codageAngleDroit(B, M, D), codageAngleDroit(M, B, C), codageAngleDroit(B, C, D), codageAngleDroit(C, D, M), labelPoint(A, M, B, C, D, E), codeSegments('//', 'blue', A, E, E, M, A, M), codeSegments('/', 'blue', M, B, B, C, C, D, D, M))\n          objets.push(latexParCoordonnees('$$x$$', milieu(A, M).x, milieu(A, M).y - 0.3, 0, 'black', 2, 'middle', true), latexParCoordonnees(`${texNombrec(a)}`, milieu(A, B).x, milieu(A, B).y - 1.5, 'black', 20, 10, ''))\n\n          texte = `$[AB]$ est un segment de longueur $${a}$ et $M$ est un point de ce segment.<br>\n      Du même côté du segment $[AB]$, on trace le triangle équilatéral $AME$ et le carré $MBCD$.<br>\n      On pose $AM=x$.<br>\n     Déterminer la valeur de $x$ pour que le périmètre du triangle $AME$ soit égal à celui du carré $MBCD$.  `\n\n          texteCorr = '<br>On réalise une figure pour visualiser la situation :<br>'\n          texteCorr += mathalea2d({ xmin: -1, ymin: -3, xmax: 12, ymax: 8, pixelsParCm: 30, scale: 2 }, objets)\n\n          texteCorr += ` Le triangle $AME$ est un triangle équilatéral de côté $x$, son périmètre est donc  $3x$.<br>\n      \n      Le carré $MBCD$ a pour côté $MB=${a}-x$. Son périmètre est donc : $4\\\\times (${a}-x)=${reduireAxPlusB(-4, 4 * a)} $\n      <br>\n      On cherche $x$ tel que : $${reduireAxPlusB(-4, 4 * a)}=3x$.<br>\n\n      $${reduireAxPlusB(-4, 4 * a)} ${miseEnEvidence('-3x')}=3x${miseEnEvidence('-3x')}$<br>\n      <br>\n      $${reduireAxPlusB(-7, 4 * a)}=0$<br>\n      <br>\n      $${reduireAxPlusB(-7, 4 * a)}${miseEnEvidence(-4 * a)}=0${miseEnEvidence(-4 * a)}$<br>\n\n      <br>\n      $\\\\dfrac{${reduireAxPlusB(-7, 0)}}{${miseEnEvidence('-7')}}=\\\\dfrac{${reduireAxPlusB(0, -4 * a)}}{${miseEnEvidence('-7')}}$<br>\n      <br>\n      $x=${texFractionReduite(-4 * a, -7)}$<br>\n      <br>\n      Les deux périmètres sont égaux lorsque  : $x=${texFractionReduite(-4 * a, -7)}$\n      `\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","modeliserEquationsGeometrie","sup","listeTypeQuestions","combinaisonListes","a","b","c","d","e","A","B","C","D","E","M","N","P","H","F","K","L","objets","texte","texteCorr","cpt","randint","point","segment","labelPoint","latexParCoordonnees","texNombrec","milieu","x","y","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","mainlevee","amplitude","scale","miseEnEvidence","texFractionReduite","codageAngleDroit","Math","sqrt","texteSurSegment","segmentAvecExtremites","texNombre","reduireAxPlusB","codeSegments","listeQuestionsToContenu"],"sourceRoot":""}