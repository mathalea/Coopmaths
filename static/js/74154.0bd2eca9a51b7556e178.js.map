{"version":3,"file":"js/74154.0bd2eca9a51b7556e178.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G21.js","webpack://mathalea/./src/js/exercices/4e/4G31.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, listeQuestionsToContenuSansNumero, randint, arrondi, abs, texNombrec, lettreDepuisChiffre, texNombre, miseEnEvidence, texFraction, calcul, creerBoutonMathalea2d } from '../../modules/outils.js'\nimport { angleOriente, homothetie, mathalea2d, point, pointSurSegment, polygone, rotation, texteParPoint } from '../../modules/2d.js'\n\nexport const amcReady = true\nexport const amcType = 'AMCHybride' // type de question AMC\n\nexport const titre = 'Démontrer que deux droites sont ou ne sont pas parallèles avec le théorème de Thalès'\n\n/**\n * Reciproque_Thales\n * @author Jean-Claude Lhote\n * 18/10/21 passage de MG32 à MathALEA2D par Rémi Angot\n * 3G21\n */\nexport default function ReciproqueThales () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  context.isHtml ? (this.spacingCorr = 3.5) : (this.spacingCorr = 1)\n  context.isHtml ? (this.spacing = 2) : (this.spacing = 1.5)\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.quatrieme = false\n  this.sup = 1\n  this.sup2 = 1\n  this.listePackages = 'tkz-euclide'\n\n  // let s1='A',s2='B',s3='C',s4='M',s5='N'\n  // coefficient de l'homothétie compris entre -0,8 et -0,2 ou entre 0,2 et 0,8 pour éviter les constructions trop serrées\n  this.nouvelleVersion = function (numeroExercice) {\n    this.autoCorrections = []\n    this.listeQuestions = []\n    this.listeCorrections = []\n    const lettre1 = randint(1, 26) // aleatoirisation du nom des points\n    const s1 = lettreDepuisChiffre(lettre1)\n    const lettre2 = randint(1, 26, [lettre1])\n    const s2 = lettreDepuisChiffre(lettre2)\n    const lettre3 = randint(1, 26, [lettre1, lettre2])\n    const s3 = lettreDepuisChiffre(lettre3)\n    const lettre4 = randint(1, 26, [lettre1, lettre2, lettre3])\n    const s4 = lettreDepuisChiffre(lettre4)\n    const lettre5 = randint(1, 26, [lettre1, lettre2, lettre3, lettre4])\n    const s5 = lettreDepuisChiffre(lettre5)\n    let x2 = randint(2, 4)\n    let y2 = randint(3, 5)\n    let x3 = randint(5, 6)\n    let y3 = randint(-2, 1)\n    let k = calcul((randint(2, 8) * randint(-1, 1, [0])) / 10)\n    let k2\n    if (parseInt(this.sup2) === 1) { k2 = k } else if (parseInt(this.sup2) === 3) { k2 = k * (1 + randint(0, 1) * 0.1) } else { k2 = k * (1 + randint(-1, 1, 0) * 0.1) }\n\n    if (this.quatrieme) {\n      k = abs(k)\n      k2 = abs(k2)\n    }\n    let dist24\n    let dist12 = Math.round(Math.sqrt(x2 * x2 + y2 * y2))\n    let dist13 = Math.round(Math.sqrt(x3 * x3 + y3 * y3))\n    while (dist12 === dist13) {\n      // éviter les triangles isocèles imbriqués qui ne nécéssitent aucun calculs.\n      x2 = randint(2, 4)\n      y2 = randint(3, 5)\n      x3 = randint(5, 6)\n      y3 = randint(-2, 1)\n      dist12 = Math.round(Math.sqrt(x2 * x2 + y2 * y2))\n      dist13 = Math.round(Math.sqrt(x3 * x3 + y3 * y3))\n    }\n    const dist15 = arrondi(dist13 * abs(k), 1)\n    const dist14 = arrondi(dist12 * abs(k2), 1)\n    let dist35\n\n    if (k < 0) {\n      dist35 = calcul(dist13 + dist15)\n      dist24 = calcul(dist12 + dist14)\n    } else {\n      dist35 = calcul(dist13 - dist15)\n      dist24 = calcul(dist12 - dist14)\n    }\n\n    let texte, texteCorr\n    // On ne garde qu'une approximation au dixième pour l'exercice\n    // mise en texte avec 1 chiffres après la virgule pour énoncé\n    const s13 = texNombre(dist13)\n    const s12 = texNombre(dist12)\n    const s15 = texNombre(dist15)\n    const s14 = texNombre(dist14)\n    const s24 = texNombre(dist24)\n    const s35 = texNombre(dist35)\n    // num1 = arrondi(dist12 * 100);\n    // den1 = arrondi(dist14 * 100);\n    // num2 = arrondi(dist13 * 100);\n    // den2 = arrondi(dist15 * 100);\n    // let fraction1 = [],\n    //   fraction2 = [];\n    //  fraction1 = fractionSimplifiee(num1, den1);\n    // fraction2 = fractionSimplifiee(num2, den2);\n    const A = point(0, 0)\n    const B = point(x2, y2)\n    const C = point(x3, y3)\n    const t1 = polygone(A, B, C)\n    t1.id = `M2D_${numeroExercice}_t1`\n    const M = homothetie(B, A, k)\n    const N = homothetie(C, A, k)\n    const t2 = polygone(A, M, N)\n    t2.id = `M2D_${numeroExercice}_t2`\n    const m = pointSurSegment(M, N, -0.5)\n    const n = pointSurSegment(N, M, -0.5)\n    const marqueNomM = texteParPoint(s4, m, 'milieu', 'black', 1, 'middle', true)\n    const marqueNomN = texteParPoint(s5, n, 'milieu', 'black', 1, 'middle', true)\n    const c = pointSurSegment(C, B, -0.5)\n    const b = pointSurSegment(B, C, -0.5)\n    const marqueNomC = texteParPoint(s3, c, 'milieu', 'black', 1, 'middle', true)\n    const marqueNomB = texteParPoint(s2, b, 'milieu', 'black', 1, 'middle', true)\n    const xMin = Math.min(A.x, B.x, C.x, M.x, N.x) - 1\n    const xMax = Math.max(A.x, B.x, C.x, M.x, N.x) + 1\n    const yMin = Math.min(A.y, B.y, C.y, M.y, N.y) - 1\n    const yMax = Math.max(A.y, B.y, C.y, M.y, N.y) + 1\n    let a\n    if (k < 0) {\n      const demiangle = angleOriente(N, A, B) / 2\n      const a2 = pointSurSegment(A, N, 0.5)\n      a = rotation(a2, A, demiangle)\n    } else {\n      a = pointSurSegment(A, N, -0.5)\n    }\n    const marqueNomA = texteParPoint(s1, a)\n    if (context.isHtml) {\n      if (parseInt(this.sup) === 1) {\n        // AM,AB,AN,AC sont donnés pas de calculs intermédiaires\n        texte = `Dans la figure ci-dessous, $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s5}=${s15}$ cm et $${s1 + s4}=${s14}$ cm.<br>`\n        texteCorr = ''\n      } else if (parseInt(this.sup) === 2) {\n        // AN n'est pas donné, il faut le calculer avant.\n        texte = `Dans la figure ci-dessous, $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s3 + s5}=${s35}$ cm et $${s2 + s4}=${s24}$ cm.<br>`\n        texteCorr = ''\n        if (k > 0) {\n          // triangles imbriqués\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s1 + s3}-${s3 + s5}=${s13}-${s35}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'On sait aussi que ' +\n            `$${s1 + s4}=${s1 + s2}-${s2 + s4}=${s12}-${s24}=${s14}$` +\n            ' cm.<br>'\n        } else {\n          // papillon\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s3 + s5}-${s1 + s3}=${s35}-${s13}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'On sait aussi que ' +\n            `$${s1 + s4}=${s2 + s4}-${s1 + s2}=${s24}-${s12}=${s14}$` +\n            ' cm.<br>'\n        }\n      } else if (randint(1, 2) === 1) {\n        // triangles imbriqués sans figure\n        texte = `$${s1}$, $${s2}$ et $${s3}$ sont trois point distincts. $${s4} \\\\in [${s1 + s2}]$ et $${s5} \\\\in [${s1 + s3}]$. <br> $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.<br>`\n        texteCorr = ''\n      } else {\n        // papillon sans figure\n        texte = `Les points $${s2}$, $${s1}$, $${s4}$ et $${s3}$, $${s1}$, $${s5}$ sont alignés dans cet ordre.<br>`\n        texte += `$${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.<br>`\n        texteCorr = ''\n      }\n      texte += `Les droites $(${s2 + s3})$ et $(${s4 + s5})$ sont-elles parallèles ?<br>`\n\n      texteCorr += `D'une part, on a : $\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s12}}{${s14}}=\\\\dfrac{${s12}\\\\times${miseEnEvidence(\n        s15\n      )}}{${s14}\\\\times${miseEnEvidence(s15)}}=\\\\dfrac{\n        ${texNombrec(arrondi(dist12 * dist15, 3))}}\n        {${s14}\\\\times${s15}}\n      $.`\n      texteCorr += `<br>D'autre part, on a : $\\\\dfrac{${s1 + s3}}{${s1 + s5}}=\\\\dfrac{${s13}}{${s15}}=\\\\dfrac{${s13}\\\\times${miseEnEvidence(\n        s14\n      )}}{${s15}\\\\times${miseEnEvidence(s14)}}=\\\\dfrac{${texNombrec(arrondi(dist13 * dist14, 3))}}\n        {${s14}\\\\times${s15}}\n      $.`\n\n      if (k !== k2) {\n        // droites non parallèles\n        texteCorr += `<br>D'où : $\\\\dfrac{${s1 + s2}}{${s1 + s4}}\\\\not=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>`\n        texteCorr += `Donc d'après le théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ ne sont pas parallèles.<br>`\n      } else {\n        // droites parallèles\n        texteCorr += `<br>D'où : $\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>` // car les produits en croix sont égaux : $${s12}\\\\times${s15}=${s13}\\\\times${s14}=${texNombre(arrondi(dist12*dist15,3))}$.<br>`;\n        if (k > 0) { texteCorr += `De plus, $${s1}$, $${s4}$, $${s2}$ et $${s1}$, $${s5}$, $${s3}$ sont alignés dans le même ordre.<br>` } else { texteCorr += `De plus, $${s4}$, $${s1}$, $${s2}$ et $${s5}$, $${s1}$, $${s3}$ sont alignés dans le même ordre.<br>` }\n        texteCorr += `Donc d'après la réciproque du théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ sont parallèles.<br>`\n      }\n\n      if (this.sup !== 3) {\n        texte += mathalea2d({ xmin: xMin, xMax: xMax, ymin: yMin, ymax: yMax }, t1, t2, marqueNomA, marqueNomB, marqueNomC, marqueNomM, marqueNomN)\n      }\n\n      const epaisseurTriangle = (k < 0) ? 2 : 6 // En cas de configuration papillon il est inutile de changer l'épaisseur\n      const boutonAideMathalea2d = creerBoutonMathalea2d(numeroExercice,\n        `if (document.getElementById('M2D_${numeroExercice}_t1').dataset.colorie == undefined || (document.getElementById('M2D_${numeroExercice}_t1').dataset.colorie == 'false')){\n          document.getElementById('M2D_${numeroExercice}_t1').style.stroke = 'blue';\n          document.getElementById('M2D_${numeroExercice}_t2').style.stroke = 'red';\n          document.getElementById('M2D_${numeroExercice}_t1').style.opacity = .5;\n          document.getElementById('M2D_${numeroExercice}_t1').style.strokeWidth = ${epaisseurTriangle};\n          document.getElementById('M2D_${numeroExercice}_t2').style.opacity = 1;\n          document.getElementById('M2D_${numeroExercice}_t2').style.strokeWidth = 2;\n          document.getElementById('M2D_${numeroExercice}_t1').dataset.colorie = 'dejaEnCouleur';\n          document.getElementById('btnMathALEA2d_${numeroExercice}').classList.add('active');\n        } else {\n          document.getElementById('M2D_${numeroExercice}_t1').style.stroke = 'black';\n          document.getElementById('M2D_${numeroExercice}_t2').style.stroke = 'black';\n          document.getElementById('M2D_${numeroExercice}_t1').style.opacity = 1;\n          document.getElementById('M2D_${numeroExercice}_t1').style.strokeWidth = 1;\n          document.getElementById('M2D_${numeroExercice}_t2').style.opacity = 1;\n          document.getElementById('M2D_${numeroExercice}_t2').style.strokeWidth = 1;\n          document.getElementById('M2D_${numeroExercice}_t1').dataset.colorie = 'false';\n          document.getElementById('btnMathALEA2d_${numeroExercice}').classList.remove('active');\n  \n        }\n        `,\n        'Mettre en couleur les 2 triangles')\n\n      if (context.isHtml) {\n        texte += `<br><div style=\"display: inline-block;margin-top:20px;\">${boutonAideMathalea2d}</div>`\n      }\n\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n      if (this.sup < 3) {\n        listeQuestionsToContenu(this)\n      } else {\n        this.typeExercice = ''\n        listeQuestionsToContenuSansNumero(this)\n      }\n    } else {\n      // sortie Latex\n      texteCorr = ''\n      if (parseInt(this.sup) === 1) {\n        // niveau 1 : Calcul direct\n        texte =\n          '\\\\begin{minipage}{.7 \\\\linewidth} \\\\vspace{0cm} Sur la figure ci-contre, on a  : \\\\begin{itemize}'\n        texte += `\\n\\t \\\\item ${s1 + s2}=${s12} cm \\n\\t \\\\item ${s1 + s3}=${s13} cm\\n\\t \\\\item ${s1 + s5}=${s15} cm\\n\\t \\\\item ${s1 + s4}=${s14} cm.<br>`\n        texte +=\n          '\\\\end{itemize}  ' +\n          `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>` +\n          '. \\\\end{minipage}'\n      } else if (parseInt(this.sup) === 2) {\n        // niveau 2 : Calcul intermédiaire nécessaire\n        texte =\n          '\\\\begin{minipage}{.7 \\\\linewidth} \\\\vspace{0cm} Sur la figure ci-contre, on a  : \\\\begin{itemize}'\n        texte += `\\n\\t \\\\item ${s1 + s2} = ${s12} cm\\n\\t \\\\item ${s1 + s3} = ${s13} cm\\n\\t \\\\item ${s3 + s5} = ${s35} cm\\n\\t \\\\item ${s2 + s4} = ${s24} cm.<br>`\n        texte +=\n          '\\\\end{itemize}  ' +\n          `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>` +\n          '. \\\\end{minipage}'\n        if (k > 0) {\n          // triangles imbriqués\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s1 + s3}-${s3 + s5}=${s13}-${s35}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'On sait aussi que ' +\n            `$${s1 + s4}=${s1 + s2}-${s2 + s4}=${s12}-${s24}=${s14}$` +\n            ' cm.<br>'\n        } else { // papillon\n          texteCorr +=\n            'On sait que ' +\n            `$${s1 + s5}=${s3 + s5}-${s1 + s3}=${s35}-${s13}=${s15}$` +\n            ' cm.<br>'\n          texteCorr +=\n            'On sait aussi que ' +\n            `$${s1 + s4}=${s2 + s4}-${s1 + s2}=${s24}-${s12}=${s14}$` +\n            ' cm.<br>'\n        } // énoncé sans figure\n      } else if (randint(1, 2) === 1) {\n        // triangles imbriqués\n        texte = `$${s1}$, $${s2}$ et $${s3}$ sont trois point distincts. $${s4} \\\\in [${s1 + s2}]$ et $${s5} \\\\in [${s1 + s3}]$ <br> $${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.<br>`\n        texte += `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>`\n      } else {\n        // papillon\n        texte = `Les points $${s2}$, $${s1}$, $${s4}$ et $${s3}$, $${s1}$, $${s5}$ sont alignés dans cet ordre.<br>`\n        texte += `$${s1 + s2}=${s12}$ cm, $${s1 + s3}=${s13}$ cm, $${s1 + s4}=${s14}$ cm et $${s1 + s5}=${s15}$ cm.<br>`\n        texte += `Les droites (${s2 + s3}) et (${s4 + s5}) sont-elles parallèles ?<br>`\n      }\n\n      if (this.sup < 3) {\n        // on ne fait la figure que si niveau < 3\n        texte += '\\\\begin{minipage}{0.3 \\\\linewidth}'\n        // dessin de la figure\n        texte += '\\n \\\\begin{tikzpicture}[scale=0.7]' // Balise début de figure\n        texte +=\n          '\\n\\t \\\\tkzDefPoints{0/0/' +\n          s1 +\n          ',' +\n          x3 +\n          '/' +\n          y3 +\n          '/' +\n          s3 +\n          ',' +\n          x2 +\n          '/' +\n          y2 +\n          '/' +\n          s2 +\n          '}' // Placer les points du triangle principal\n        texte += '\\n\\t \\\\tkzDrawPolygon(' + s1 + ',' + s2 + ',' + s3 + ')' // Trace le triangle principal\n\n        // Définit les points M et N par homothétie de centre C et de rapport 0,3<k<0,8\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n          s1 +\n          ' ratio ' +\n          k +\n          '](' +\n          s2 +\n          ')' +\n          '\\t\\\\tkzGetPoint{' +\n          s4 +\n          '}' // Place le premier point du triangle image\n        texte +=\n          '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n          s1 +\n          ' ratio ' +\n          k +\n          '](' +\n          s3 +\n          ')' +\n          '\\t\\\\tkzGetPoint{' +\n          s5 +\n          '}' // Place le deuxième point du triangle image\n        texte += '\\n\\t \\\\tkzDrawSegment(' + s4 + ',' + s5 + ')' // Trace le segment\n        if (k > 0) {\n          texte += '\\n\\t \\\\tkzLabelPoints[left](' + s1 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[above left](' + s2 + ',' + s4 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[below](' + s3 + ',' + s5 + ')' // nomme les points\n\n          // Nomme les points au dessus avec above, dessous avec below...\n        } else {\n          // position papillon -> position du nom inversée et nécessité de tracer le triangle secondaire\n          texte += '\\n\\t \\\\tkzLabelPoints[below](' + s1 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[below](' + s3 + ',' + s4 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzLabelPoints[above](' + s2 + ',' + s5 + ')' // nomme les points\n          texte += '\\n\\t \\\\tkzDrawPolygon(' + s1 + ',' + s4 + ',' + s5 + ')' // Trace le triangle secondaire\n        }\n        texte += '\\n \\\\end{tikzpicture}' // Balise de fin de figure\n        texte += '\\\\end{minipage}'\n      }\n      this.listeQuestions.push(texte) // on envoie la question\n\n      // correction\n      texteCorr += `D'une part on a $\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s12}}{${s14}}=\\\\dfrac{${s12}\\\\times${miseEnEvidence(\n        s15\n      )}}{${s14}\\\\times${miseEnEvidence(s15)}}=${texFraction(\n        texNombrec(arrondi(dist12 * dist15, 3)),\n        texNombrec(arrondi(dist14 * dist15, 4))\n      )}$`\n      texteCorr += `<br>D'autre part on a $\\\\dfrac{${s1 + s3}}{${s1 + s5}}=\\\\dfrac{${s13}}{${s15}}=\\\\dfrac{${s13}\\\\times${miseEnEvidence(\n        s14\n      )}}{${s15}\\\\times${miseEnEvidence(s14)}}=${texFraction(\n        texNombrec(arrondi(dist13 * dist14, 3)),\n        texNombrec(arrondi(dist14 * dist15, 4))\n      )}$`\n\n      if (k !== k2) {\n        // droites pas parallèles\n        texteCorr += `<br>$\\\\dfrac{${s1 + s2}}{${s1 + s4}}\\\\not=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>`\n        texteCorr += `Donc d'après le théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ ne sont pas parallèles.<br>`\n        this.autoCorrection = [{\n          enonce: texte,\n          propositions:\n          [\n            {\n              type: 'AMCOpen',\n              propositions: [{ texte: texteCorr, statut: 6, feedback: '' }]\n            },\n            {\n              type: 'qcmMono',\n              options: { ordered: true },\n              propositions: [\n                {\n                  texte: 'Oui',\n                  statut: false\n                },\n                {\n                  texte: 'Non',\n                  statut: true\n                },\n                {\n                  texte: 'Je ne sais pas',\n                  statut: false\n                }\n\n              ]\n            }\n          ]\n        }]\n      } else {\n        // droites parallèles\n        texteCorr += `<br>$\\\\dfrac{${s1 + s2}}{${s1 + s4}}=\\\\dfrac{${s1 + s3}}{${s1 + s5}}$.<br>` // car les produits en croix sont égaux : $${s12}\\\\times${s15}=${s13}\\\\times${s14}=${texNombre(arrondi(dist12*dist15,3))}$.<br>`;\n        if (k > 0) { texteCorr += `$${s1}$,$${s4}$,$${s2}$ et $${s1}$,$${s5}$,$${s3}$ sont alignés dans le même ordre.<br>` } else { texteCorr += `$${s4}$,$${s1}$,$${s2}$ et $${s5}$,$${s1}$,$${s3}$ sont alignés dans le même ordre.<br>` }\n        texteCorr += `Donc d'après la réciproque du théorème de Thales, les droites $(${s2 + s3})$ et $(${s4 + s5})$ sont parallèles.<br>`\n        this.autoCorrection = [{\n          enonce: texte,\n          propositions:\n          [\n            {\n              type: 'AMCOpen',\n              propositions: [{ texte: texteCorr, statut: 6, feedback: '' }]\n            },\n            {\n              type: 'qcmMono',\n              options: { ordered: true },\n              propositions: [\n                {\n                  texte: 'Oui',\n                  statut: true\n                },\n                {\n                  texte: 'Non',\n                  statut: false\n                },\n                {\n                  texte: 'Je ne sais pas',\n                  statut: false\n                }\n\n              ]\n            }\n          ]\n        }]\n      }\n      this.listeCorrections.push(texteCorr)\n\n      listeQuestionsToContenuSansNumero(this)\n    }\n  }\n\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    3,\n    ' 1 : Cas simple \\n 2 : Complication \\n 3 : Sans figure'\n  ]\n  this.besoinFormulaire2Numerique = [\n    'Réciproque ou contraposée',\n    3,\n    ' 1 : Réciproque \\n 2 : Contraposée \\n 3 : Mélange'\n  ]\n}\n","import ReciproqueThales from '../3e/3G21.js'\nexport const titre = 'Contrôler si deux droites sont parallèles'\n\n/**\n * @author Jean-Claude Lhote\n * référence 4G31\n */\nexport default function ReciproqueThales4eme () {\n  ReciproqueThales.call(this)\n  this.quatrieme = true\n  this.titre = titre\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","titre","ReciproqueThales","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","context","spacingCorr","spacing","nbCols","nbColsCorr","quatrieme","sup","sup2","listePackages","nouvelleVersion","numeroExercice","autoCorrections","listeQuestions","listeCorrections","lettre1","randint","s1","lettreDepuisChiffre","lettre2","s2","lettre3","s3","lettre4","s4","lettre5","s5","k2","dist24","x2","y2","x3","y3","k","calcul","parseInt","abs","dist12","Math","round","sqrt","dist13","dist15","arrondi","dist14","dist35","texte","texteCorr","s13","texNombre","s12","s15","s14","s24","s35","A","point","B","C","t1","polygone","id","M","homothetie","N","t2","m","pointSurSegment","n","marqueNomM","texteParPoint","marqueNomN","c","b","marqueNomC","marqueNomB","xMin","min","x","xMax","max","yMin","y","yMax","a","demiangle","angleOriente","a2","rotation","marqueNomA","miseEnEvidence","texNombrec","mathalea2d","xmin","ymin","ymax","epaisseurTriangle","boutonAideMathalea2d","creerBoutonMathalea2d","push","listeQuestionsToContenu","typeExercice","listeQuestionsToContenuSansNumero","texFraction","autoCorrection","enonce","propositions","type","statut","feedback","options","ordered","besoinFormulaireNumerique","besoinFormulaire2Numerique","ReciproqueThales4eme","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}