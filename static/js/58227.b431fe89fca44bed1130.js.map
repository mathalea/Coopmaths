{"version":3,"file":"js/58227.b431fe89fca44bed1130.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3A12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListesSansChangerOrdre,texNombre,modalPdf,numAlpha,premiersEntreBornes,warnMessage,decompositionFacteursPremiersArray} from '../../modules/outils.js'\nexport const titre = 'Fractions irréductibles'\n\n/**\n * 3A12 - Fractions irreductibles\n * @author Sébastien Lozano\n */\nexport default function Fractions_irreductibles() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `Rendre irréductible une fraction et son inverse à partir des décompositions en produit de facteurs premiers.`;\n\t//this.consigne += `<br>`;\n\tcontext.isHtml ? this.spacing = 4 : this.spacing = 2;\n\tcontext.isHtml ? this.spacingCorr = 4 : this.spacingCorr = 2;\n\tthis.nbQuestions = 1;\n\t//this.correctionDetailleeDisponible = true;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.listePackages = `bclogo`;\n\n\tthis.nouvelleVersion = function (numeroExercice) {\n\t\tlet typesDeQuestions;\n\t\tif (context.isHtml) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.boutonAide = '';\n\t\t\tthis.boutonAide = modalPdf(numeroExercice, \"assets/pdf/FicheArithmetique-3A12.pdf\", \"Aide mémoire sur les fonctions (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\t//this.boutonAide += modalVideo('conteMathsNombresPremiers','/videos/LesNombresPremiers.mp4','Petit conte mathématique','Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenuCorrection = ''; // Liste de questions corrigées\n\n\n\t\t//let typesDeQuestionsDisponibles = [1,2,3,4];\n\t\tlet typesDeQuestionsDisponibles = [1];\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions);\n\n\t\tthis.introduction = warnMessage(`À la question ` + numAlpha(3) + ` une observation judicieuse et argumentée pourra faire gagner du temps!`, `nombres`, `Coup de pouce`);\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\ttypesDeQuestions = listeTypeDeQuestions[i];\n\n\t\t\tvar nb_div_prem_communs; // nombre de diviseurs premiers communs\n\t\t\tvar candidats_premiers_communs; // tableau des candidats premiers communs\n\t\t\tvar premiers_communs; // tableau des diviseurs premiers communs\n\t\t\tvar multiplicites_premiers_communs; // tableau des multiplicités des diviseurs premiers communs \n\t\t\tvar r; // tableau pour le choix des rangs des diviseurs premiers communs\n\t\t\tvar r_exclus; // tableau pour la boucle de creation de r\t\t\t\t\n\t\t\tvar nb1_dist; // diviseur unique du premier nombre \n\t\t\tvar nb2_dist; // divisuer unique du second nombre\n\t\t\tvar r_ex; // pour exlcure le rang de nb1\n\t\t\tvar tab_nb1; // tableau pour les diviseurs de nb1\n\t\t\tvar tab_nb2; // tableau pour les diviseurs de nb2\n\t\t\tvar multiplicites_nb1;\n\t\t\tvar multiplicites_nb2;\n\t\t\tvar nb1; // nbre 1\n\t\t\tvar nb2; // nbre 2\n\n\n\t\t\t// on fixe le tableau de choix\n\t\t\tcandidats_premiers_communs = premiersEntreBornes(2, 13);\n\t\t\t// on fixe le nombre de divisuers premiers communs\n\t\t\tnb_div_prem_communs = 4;\n\t\t\t// on initialise le tableau des diviseurs premiers communs\n\t\t\tpremiers_communs = [];\n\t\t\t// on initialise le tableau des rangs\n\t\t\tr = [];\n\t\t\t// on initialise le tableau des rangs déjà choisis\n\t\t\tr_exclus = [];\n\t\t\t// on complète le tableau des rangs des rangs des diviseurs premiers choisis\n\t\t\tfor (let k = 0; k < nb_div_prem_communs; k++) {\n\t\t\t\tfor (let m = 0; m < k; m++) {\n\t\t\t\t\tr_exclus.push(r[m]);\n\t\t\t\t};\n\t\t\t\tr[k] = randint(0, candidats_premiers_communs.length - 1, r_exclus);\n\t\t\t};\n\t\t\t// on complète le tableau des diviseurs premiers communs\n\t\t\tfor (let k = 0; k < nb_div_prem_communs; k++) {\n\t\t\t\tpremiers_communs.push(candidats_premiers_communs[r[k]]);\n\t\t\t};\n\t\t\t// on initialise et on complète le tableau des multiplicités des diviseurs premiers communs\n\t\t\tmultiplicites_premiers_communs = [];\n\t\t\tfor (let k = 0; k < nb_div_prem_communs; k++) {\n\t\t\t\tmultiplicites_premiers_communs.push(randint(0, 2));\n\t\t\t};\n\t\t\t// on supprime les diviseurs premiers de multiplicité 0 et leur multiplicité\n\t\t\tlet idx = multiplicites_premiers_communs.indexOf(0);\n\t\t\twhile (idx != -1) {\n\t\t\t\tpremiers_communs.splice(idx, 1);\n\t\t\t\tmultiplicites_premiers_communs.splice(idx, 1);\n\t\t\t\tidx = multiplicites_premiers_communs.indexOf(0);\n\t\t\t};\n\t\t\t// on initialise le tableau des diviseurs du premier et du second nombre avec les diviseurs premiers communs\n\t\t\ttab_nb1 = [];\n\t\t\ttab_nb2 = [];\n\t\t\tfor (let k = 0; k < premiers_communs.length; k++) {\n\t\t\t\ttab_nb1[k] = premiers_communs[k];\n\t\t\t\ttab_nb2[k] = premiers_communs[k];\n\t\t\t};\n\t\t\t// on initialise les tableaux de multiplicité, ils sont les mêmes mais on pourrait vouloir qu'ils soient différents\n\t\t\tmultiplicites_nb1 = [];\n\t\t\tmultiplicites_nb2 = [];\n\t\t\tfor (let k = 0; k < premiers_communs.length; k++) {\n\t\t\t\tmultiplicites_nb1[k] = multiplicites_premiers_communs[k];\n\t\t\t\tmultiplicites_nb2[k] = multiplicites_premiers_communs[k];\n\t\t\t};\n\t\t\t// on ajoute un facteur premier distinct pour chaque nombre plus petit que 30\n\t\t\tr_ex = randint(0, premiersEntreBornes(2, 30).length - 1);\n\t\t\tnb1_dist = premiersEntreBornes(2, 30)[r_ex];\n\t\t\tnb2_dist = premiersEntreBornes(2, 30)[randint(0, premiersEntreBornes(2, 30).length - 1, r_ex)];\n\t\t\t// on ajoute nb1_dist, nb2_dist dans les tableaux des diviseurs premiers du premier et du second nombre \n\t\t\t// nb1\n\t\t\tlet bool = false;\n\t\t\tlet n = 0;\n\t\t\twhile (n < tab_nb1.length && bool != true) {\n\t\t\t\tif (nb1_dist == tab_nb1[n]) { // si le diviseur premier est déjà présent on incrémente sa multiplicité\n\t\t\t\t\tmultiplicites_nb1[n]++;\n\t\t\t\t\tbool = true;\n\t\t\t\t};\n\t\t\t\tn++;\n\t\t\t};\n\t\t\t// on teste la valeur de sortie de bool et on ajoute la nouvelle valeur si necessaire\n\t\t\tif (!bool) { // il n'est pas présent on l'ajoute avec la multipplicité 1\n\t\t\t\ttab_nb1.push(nb1_dist);\n\t\t\t\tmultiplicites_nb1.push(1);\n\t\t\t\tbool = true;\n\t\t\t};\n\t\t\t// nb2\n\t\t\tbool = false;\n\t\t\tn = 0;\n\t\t\twhile (n < tab_nb2.length && !bool) {\n\t\t\t\tif (nb2_dist == tab_nb2[n]) { // si le diviseur premier est déjà présent on incrémente sa multiplicité\n\t\t\t\t\tmultiplicites_nb2[n]++;\n\t\t\t\t\tbool = true;\n\t\t\t\t};\n\t\t\t\tn++;\n\t\t\t};\n\t\t\t// on teste la valeur de sortie de bool et on ajoute la nouvelle valeur si necessaire\n\t\t\tif (!bool) { // il n'est pas présent on l'ajoute avec la multipplicité 1\n\t\t\t\ttab_nb2.push(nb2_dist);\n\t\t\t\tmultiplicites_nb2.push(1);\n\t\t\t\tbool = true;\n\t\t\t};\n\t\t\t// on crée un tableau associatif à partir des deux tableaux tab_ni et multiplicites_ni\n\t\t\tlet tab_prem_mult_nb1 = [];\n\t\t\tfor (let k = 0; k < tab_nb1.length; k++) {\n\t\t\t\ttab_prem_mult_nb1[k] = { 'prem': tab_nb1[k], 'mult': multiplicites_nb1[k] };\n\t\t\t};\n\t\t\tlet tab_prem_mult_nb2 = [];\n\t\t\tfor (let k = 0; k < tab_nb2.length; k++) {\n\t\t\t\ttab_prem_mult_nb2[k] = { 'prem': tab_nb2[k], 'mult': multiplicites_nb2[k] };\n\t\t\t};\n\t\t\t// on range selon prem croissant\n\t\t\ttab_prem_mult_nb1.sort(function (a, b) {\n\t\t\t\treturn a.prem > b.prem;\n\t\t\t});\n\t\t\ttab_prem_mult_nb2.sort(function (a, b) {\n\t\t\t\treturn a.prem > b.prem;\n\t\t\t});\n\t\t\t// on initialise nb1 et nb2 et on les calcule à partir des tableaux \t\t\t\t\n\t\t\tnb1 = 1;\n\t\t\tfor (let k = 0; k < tab_nb1.length; k++) {\n\t\t\t\tnb1 = nb1 * tab_prem_mult_nb1[k].prem ** tab_prem_mult_nb1[k].mult;\n\t\t\t};\n\t\t\tnb2 = 1;\n\t\t\tfor (let k = 0; k < tab_nb2.length; k++) {\n\t\t\t\tnb2 = nb2 * tab_prem_mult_nb2[k].prem ** tab_prem_mult_nb2[k].mult;\n\t\t\t};\n\n\t\t\tswitch (typesDeQuestions) {\n\t\t\t\tcase 1: // décomposition de A\n\t\t\t\t\ttexte = numAlpha(0) + ` Décomposer $A = ${texNombre(nb1)}$ en produit de facteurs premiers : `;\n\t\t\t\t\ttexteCorr = numAlpha(0) + ` La décomposition en produit de facteurs premier de $A = `;\n\t\t\t\t\tswitch (tab_prem_mult_nb1[0].mult) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\ttexteCorr += `${tab_prem_mult_nb1[0].prem}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ttexteCorr += `${tab_prem_mult_nb1[0].prem}^{${tab_prem_mult_nb1[0].mult}}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t};\n\t\t\t\t\tfor (let k = 1; k < tab_nb1.length; k++) {\n\t\t\t\t\t\tswitch (tab_prem_mult_nb1[k].mult) {\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\ttexteCorr += `\\\\times${tab_prem_mult_nb1[k].prem}`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttexteCorr += `\\\\times${tab_prem_mult_nb1[k].prem}^{${tab_prem_mult_nb1[k].mult}}`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `$.`;\n\t\t\t\t\t//\tbreak;\t\t\n\t\t\t\t\t//case 2 : // décomposition de B \t\n\t\t\t\t\ttexte += `<br>` + numAlpha(1) + ` Décomposer $B = ${texNombre(nb2)}$ en produit de facteurs premiers : `;\n\t\t\t\t\ttexteCorr += `<br>` + numAlpha(1) + ` La décomposition en produit de facteurs premier de $B = `;\n\t\t\t\t\tswitch (tab_prem_mult_nb2[0].mult) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\ttexteCorr += `${tab_prem_mult_nb2[0].prem}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ttexteCorr += `${tab_prem_mult_nb2[0].prem}^{${tab_prem_mult_nb2[0].mult}}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t};\n\t\t\t\t\tfor (let k = 1; k < tab_nb2.length; k++) {\n\t\t\t\t\t\tswitch (tab_prem_mult_nb2[k].mult) {\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\ttexteCorr += `\\\\times${tab_prem_mult_nb2[k].prem}`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttexteCorr += `\\\\times${tab_prem_mult_nb2[k].prem}^{${tab_prem_mult_nb2[k].mult}}`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `$.`;\n\t\t\t\t\t//\tbreak;\t\n\t\t\t\t\t//case 3 : // reduction de A sur B \t\t\t\n\t\t\t\t\ttexte += `<br>` + numAlpha(2) + ` Rendre la fraction $\\\\dfrac{A}{B} = \\\\dfrac{${texNombre(nb1)}}{${texNombre(nb2)}}$ irréductible `;\n\t\t\t\t\tif (context.isHtml) {\n\t\t\t\t\t\ttexte += ` à l'aide des décompositions obtenues au ` + numAlpha(0) + ` et au ` + numAlpha(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte += ` à l'aide des questions ` + numAlpha(0) + ` et ` + numAlpha(1);\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `<br>` + numAlpha(2) + ` $\\\\dfrac{A}{B} = \\\\dfrac{${texNombre(nb1)}}{${texNombre(nb2)}} = `;\n\t\t\t\t\ttexteCorr += `\\\\dfrac{`;\n\t\t\t\t\ttexteCorr += `\\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[0] + `}`;\n\t\t\t\t\tfor (let k = 1; k < decompositionFacteursPremiersArray(nb1 / nb1_dist).length; k++) {\n\t\t\t\t\t\ttexteCorr += `\\\\times \\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[k] + `}`;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `\\\\times ${nb1_dist}}{`;\n\t\t\t\t\ttexteCorr += `\\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[0] + `}`;\n\t\t\t\t\tfor (let k = 1; k < decompositionFacteursPremiersArray(nb1 / nb1_dist).length; k++) {\n\t\t\t\t\t\ttexteCorr += `\\\\times \\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[k] + `}`;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `\\\\times ${nb2_dist}} = `;\n\t\t\t\t\ttexteCorr += `\\\\dfrac{${nb1_dist}}{${nb2_dist}}$.`;\n\t\t\t\t\t//\tbreak;\t\n\t\t\t\t\t//case 4 : // reduction de B sur A \t\t\t\n\t\t\t\t\ttexte += `<br>` + numAlpha(3) + ` Rendre la fraction $\\\\dfrac{B}{A} = \\\\dfrac{${texNombre(nb2)}}{${texNombre(nb1)}}$ irréductible`;\n\t\t\t\t\tif (context.isHtml) {\n\t\t\t\t\t\ttexte += ` à l'aide des décompositions obtenues au ` + numAlpha(0) + ` et au ` + numAlpha(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte += ` à l'aide des questions ` + numAlpha(0) + ` et ` + numAlpha(1);\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `<br>` + numAlpha(3) + ` $\\\\dfrac{B}{A}$ est l'inverse de $\\\\dfrac{A}{B}$ donc $\\\\dfrac{B}{A} = \\\\dfrac{${texNombre(nb2)}}{${texNombre(nb1)}} = `;\n\t\t\t\t\ttexteCorr += `\\\\dfrac{`;\n\t\t\t\t\ttexteCorr += `\\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[0] + `}`;\n\t\t\t\t\tfor (let k = 1; k < decompositionFacteursPremiersArray(nb1 / nb1_dist).length; k++) {\n\t\t\t\t\t\ttexteCorr += `\\\\times \\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[k] + `}`;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `\\\\times ${nb2_dist}}{`;\n\t\t\t\t\ttexteCorr += `\\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[0] + `}`;\n\t\t\t\t\tfor (let k = 1; k < decompositionFacteursPremiersArray(nb1 / nb1_dist).length; k++) {\n\t\t\t\t\t\ttexteCorr += `\\\\times \\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[k] + `}`;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `\\\\times ${nb1_dist}} = `;\n\t\t\t\t\ttexteCorr += `\\\\dfrac{${nb2_dist}}{${nb1_dist}}$.`;\n\t\t\t\t\t//\tbreak;\t\n\t\t\t\t\t//case 5 : // calculer le produit A/B x B/A et réduire. Remarque?\n\t\t\t\t\t// texte += `<br>`+numAlpha(4)+` Combien alculer le produit de $\\\\dfrac{A}{B} = \\\\dfrac{${texNombre(nb1)}}{${texNombre(nb2)}}$ et de $\\\\dfrac{B}{A} = \\\\dfrac{${texNombre(nb2)}}{${texNombre(nb1)}}$.`;\n\t\t\t\t\t// texte += `<br>Donner le résultat sous forme de fraction irréductible.`\n\t\t\t\t\t//texte += `<br>`+numAlpha(4)+` Remarque ?`\n\t\t\t\t\t//texteCorr += `<br>`+numAlpha(4)+' corr type 5';\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t};\n\t\t\tcpt++;\n\t\t};\n\t\tlisteQuestionsToContenu(this);\n\t};\n\t//this.besoinFormulaireNumerique = ['Règle à travailler',5,\"1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissance\\n4 : Produit de puissances de même exposant\\n5 : Mélange\"]; \n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Fractions_irreductibles","Exercice","this","consigne","context","spacing","spacingCorr","nbQuestions","nbCols","nbColsCorr","listePackages","nouvelleVersion","numeroExercice","typesDeQuestions","boutonAide","modalPdf","listeQuestions","listeCorrections","contenu","contenuCorrection","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","introduction","warnMessage","numAlpha","texte","texteCorr","i","cpt","candidats_premiers_communs","premiers_communs","multiplicites_premiers_communs","r","r_exclus","nb1_dist","nb2_dist","r_ex","tab_nb1","tab_nb2","multiplicites_nb1","multiplicites_nb2","nb1","nb2","premiersEntreBornes","k","m","push","randint","length","idx","indexOf","splice","bool","n","tab_prem_mult_nb1","tab_prem_mult_nb2","sort","a","b","prem","mult","texNombre","decompositionFacteursPremiersArray","listeQuestionsToContenu","consigneCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}