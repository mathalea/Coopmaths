{"version":3,"sources":["webpack://mathalea/./src/js/exercices/2e/2G10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Distance","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","ux","uy","xA","yA","xB","yB","xC","yC","AB","XAB","YAB","XAC","YAC","AC","texte","texteCorr","i","cpt","randint","choice","ecritureParentheseSiNegatif","texNombre","extraireRacineCarree","texRacineCarree","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/9669.14bac11ccaea56a28e21.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,ecritureParentheseSiNegatif,extraireRacineCarree,texRacineCarree,texNombre} from '../../modules/outils.js'\n\nexport const titre = 'Utiliser la distance entre deux points dans un repère orthonormé'\n\n/**\n * 2G10\n * @author Stéphane Guyon\n */\nexport default function Distance() {\n    Exercice.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n\n    this.nbQuestions = 2;\n    this.nbCols = 2;\n    this.nbColsCorr = 2;\n    this.sup = 1; // \n\n    this.nouvelleVersion = function () {\n        this.listeQuestions = []; // Liste de questions\n        this.listeCorrections = []; // Liste de questions corrigées\n        let typesDeQuestionsDisponibles = [1, 2, 3],typesDeQuestions\n        if (this.sup == 1) {\n            typesDeQuestionsDisponibles = [1];\n        }\n        if (this.sup == 2) {\n            typesDeQuestionsDisponibles = [2, 3];\n        }\n        let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions);\n        for (let i = 0, ux, uy, xA, yA, xB, yB, xC, yC, AB, XAB, YAB, XAC, YAC, AC, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n            typesDeQuestions = listeTypeDeQuestions[i];\n            switch (typesDeQuestions) {\n                // Cas par cas, on définit le type de nombres que l'on souhaite\n                // Combien de chiffres ? Quelles valeurs ?\n                case 1:\n\n                    xA = randint(0, 5) * choice([-1, 1]);\n                    yA = randint(0, 5) * choice([-1, 1]);\n                    xB = randint(0, 5) * choice([-1, 1]);\n                    yB = randint(0, 5) * choice([-1, 1]);\n                    if (xB == xA && yA == yB) { xB = xB + randint(1, 5) * choice([-1, 1]); }\n                    XAB = (xB - xA) * (xB - xA);\n                    YAB = (yB - yA) * (yB - yA);\n                    AB = XAB + YAB;\n\n                    texte = `Dans un repère orthonormé $(O,I,J)$, on donne les points suivants :`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ et $B\\\\left(${xB};${yB}\\\\right)$`;\n                    texte += `<br>Calculer la distance $AB$ en justifiant le calcul.`;\n\n\n                    texteCorr = `On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère orthonormé,`;\n                    texteCorr += ` alors on a : $AB=\\\\sqrt{\\\\left(x_B-x_A\\\\right)^{2}+\\\\left(y_B-y_A\\\\right)^{2}}.$<br>`;\n                    texteCorr += `On applique la relation à l'énoncé : $AB=\\\\sqrt{\\\\left(${xB}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yB}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`;\n                    texteCorr += `$\\\\phantom{on applique la relation a l'enonce :        } AB=\\\\sqrt{${XAB}+${YAB}}$<br>`;\n                    texteCorr += `$\\\\phantom{on applique la relation a l'enonce :        } AB=\\\\sqrt{${texNombre(XAB + YAB)}}$<br>`;\n                    if (extraireRacineCarree(AB)[0] != 1)\n                        texteCorr += `$\\\\phantom{on applique la relation a l'enonce :   } AB=${texRacineCarree(AB)}$<br>`;\n                    break;\n                case 2:\n\n\n                    xA = randint(0, 5) * choice([-1, 1]);\n                    yA = randint(0, 9) * choice([-1, 1]);\n                    ux = randint(0, 9) * choice([-1, 1]);\n                    uy = randint(0, 9) * choice([-1, 1]);\n                    xB = xA + ux;\n                    yB = yA + uy;\n                    xC = xA + uy * choice([-1, 1]);\n                    yC = yA + ux * choice([-1, 1]);\n\n                    XAB = (xB - xA) * (xB - xA);\n                    YAB = (yB - yA) * (yB - yA);\n                    AB = XAB + YAB;\n                    XAC = (xC - xA) * (xC - xA);\n                    YAC = (yC - yA) * (yC - yA);\n                    AC = XAC + YAC;\n\n                    texte = `Dans un repère orthonormé (O,I,J), on donne les points suivants :`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right)$`;\n                    texte += `<br>Le point $C\\\\left(${xC};${yC}\\\\right)$ appartient-il au cercle de centre $A$ passant par $B$ ?`;\n\n                    texteCorr = `Le point $C$ appartient au cercle de centre $A$ passant par $B$ si et seulement si $CA=CB.$`;\n                    texteCorr += `<br>On calcule séparément donc ces deux distances :`;\n                    texteCorr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère orthonormé,`;\n                    texteCorr += ` alors on a : $AB=\\\\sqrt{\\\\left(x_B-x_A\\\\right)^{2}+\\\\left(y_B-y_A\\\\right)^{2}}$<br>`;\n                    texteCorr += `On applique la relation à l'énoncé : $AB=\\\\sqrt{\\\\left(${xB}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yB}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`;\n                    texteCorr += `$\\\\phantom{on applique la relation a l'enonce :        } AB=\\\\sqrt{${XAB}+${YAB}}$<br>`;\n                    texteCorr += `$\\\\phantom{on applique la relation a l'enonce :        } AB=\\\\sqrt{${texNombre(XAB + YAB)}}$<br>`;\n                    texteCorr += `$\\\\phantom{on applique la relation a l'enonce :   } AB=${texRacineCarree(AB)}$<br>`;\n                    texteCorr += `De même : $AC=\\\\sqrt{\\\\left(${xC}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yC}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`;\n                    texteCorr += `$\\\\phantom{De même :       } AC=\\\\sqrt{${XAC}+${YAC}}$<br>`;\n                    texteCorr += `$\\\\phantom{De même :       } AC=\\\\sqrt{${texNombre(XAC + YAC)}}$<br>`;\n                    if (extraireRacineCarree(AC)[0] != 1)\n                        texteCorr += `$\\\\phantom{on applique la relation a l'enonce :   } AC=${texRacineCarree(AC)}$<br>`;\n                    texteCorr += `On observe que $AC=AB$ donc le point $A$ est équidistant de $B$ et $C$.`;\n                    texteCorr += `<br>Le point $C$ appartient bien au cercle de centre $A$ et passant par $B$.`;\n                    break;\n                case 3:\n\n\n                    xA = randint(0, 5) * choice([-1, 1]);\n                    yA = randint(0, 9) * choice([-1, 1]);\n                    ux = randint(0, 9) * choice([-1, 1]);\n                    uy = randint(0, 9) * choice([-1, 1]);\n                    xB = xA + ux;\n                    yB = yA + uy;\n                    xC = xA + uy * choice([-1, 1]) + randint(1, 3);\n                    yC = yA + ux * choice([-1, 1]);\n\n                    XAB = (xB - xA) * (xB - xA);\n                    YAB = (yB - yA) * (yB - yA);\n                    AB = XAB + YAB;\n                    XAC = (xC - xA) * (xC - xA);\n                    YAC = (yC - yA) * (yC - yA);\n                    AC = XAC + YAC;\n\n                    texte = `Dans un repère orthonormé (O,I,J), on donne les points suivants :`;\n                    texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`;\n                    texte += `<br>Le point $C\\\\left(${xC};${yC}\\\\right)$ appartient-il au cercle de centre $A$ passant par $B$ ?`;\n\n                    texteCorr = `Le point $C$ appartient au cercle de centre $A$ passant par $B$ si et seulement si $CA=CB.$`;\n                    texteCorr += `<br>On calcule séparément donc ces deux distances :`;\n                    texteCorr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère orthonormé,`;\n                    texteCorr += ` alors on a : $AB=\\\\sqrt{\\\\left(x_B-x_A\\\\right)^{2}+\\\\left(y_B-y_A\\\\right)^{2}}.$<br>`;\n                    texteCorr += `On applique la relation à l'énoncé : $AB=\\\\sqrt{\\\\left(${xB}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yB}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`;\n                    texteCorr += `$\\\\phantom{on applique la relation a l'enonce :        } AB=\\\\sqrt{${XAB}+${YAB}}$<br>`;\n                    texteCorr += `$\\\\phantom{on applique la relation a l'enonce :        } AB=\\\\sqrt{${texNombre(XAB + YAB)}}$<br>`;\n                    if (extraireRacineCarree(AB)[0] != 1)\n                        texteCorr += `$\\\\phantom{on applique la relation a l'enonce :   } AB=${texRacineCarree(AB)}$<br>`;\n                    texteCorr += `De même : $AC=\\\\sqrt{\\\\left(${xC}-${ecritureParentheseSiNegatif(xA)}\\\\right)^{2}+\\\\left(${yC}-${ecritureParentheseSiNegatif(yA)}\\\\right)^{2}}$<br>`;\n                    texteCorr += `$\\\\phantom{De même :       } AC=\\\\sqrt{${XAC}+${YAC}}$<br>`;\n                    texteCorr += `$\\\\phantom{De même :       } AC=\\\\sqrt{${texNombre(XAC + YAC)}}$<br>`;\n                    if (extraireRacineCarree(AC)[0] != 1)\n                        texteCorr += `$\\\\phantom{on applique la relation a l'enonce :   } AC=${texRacineCarree(AC)}$<br>`;\n                    texteCorr += `On observe que $AC\\\\neq AB$ donc le point $C$ n'appartient pas au cercle de centre $A$ et passant par $B$`;\n                    break;\n            }\n            if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n                this.listeQuestions.push(texte);\n                this.listeCorrections.push(texteCorr);\n                i++;\n            }\n            cpt++;\n        }\n        listeQuestionsToContenu(this);\n    };\n    this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Application directe de la formule 2 : Application en situation'];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}