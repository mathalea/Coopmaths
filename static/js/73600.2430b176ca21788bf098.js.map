{"version":3,"file":"js/73600.2430b176ca21788bf098.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6G23-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { point, labelPoint, rotation, mathalea2d, afficheMesureAngle, homothetie, demiDroite, texteParPoint, similitude, pointSurSegment } from '../../modules/2d.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 'qcmMono' // QCM\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\nexport const titre = 'Mesurer un angle'\n\n/**\n * Construire un angle\n * @author Jean-Claude Lhote\n * Référence 6G23\n */\nexport default function MesurerUnAngle () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbQuestionsModifiable = true\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1\n  this.video = 'TEzu9uky56M'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let angle; let anglerot; let Apos; let Bpos; let Cpos; let p; let texte; let texteCorr; let A; let B; let C; let s2; let s1; let bis; const signes = []\n    let labels, secteur, xMin, xMax, yMin, yMax, objetsEnonce, objetsCorrection, secteur0\n\n    for (let i = 0; i < this.nbQuestions; i++) {\n      signes.push(choice([-1, 1]))\n      if (this.sup === 1) {\n        angle = randint(2, 16, 9) * 10\n      } else if (this.sup === 2) {\n        angle = randint(4, 32, 18) * 5\n      } else {\n        angle = randint(20, 160, 90)\n      }\n      anglerot = randint(-180, 180)\n      angle = signes[i] * angle\n      p = [choice(['x', 'y', 'z', 't']), lettreDepuisChiffre(randint(1, 16)), choice(['s', 'u', 'v', 'w'])]\n      if (this.interactif) {\n        texte = `Estime la mesure de l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$ sans instrument.<br>`\n      } else {\n        texte = `Mesure l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$.<br>`\n      }\n      A = point(0, 0)\n      B = point(6, 0)\n      B = rotation(B, A, anglerot)\n\n      // texte, A, orientation = \"milieu\", color = 'black', scale = 1, ancrageDeRotation = \"middle\", mathOn = false\n      Bpos = texteParPoint(p[0], similitude(A, homothetie(B, A, 0.95), signes[i] * 90, 0.1), 'milieu', 'black', 1, 'middle', true)\n      s1 = demiDroite(A, B)\n      C = rotation(B, A, angle)\n      bis = rotation(B, A, angle / 2)\n      Apos = texteParPoint(p[1], pointSurSegment(A, bis, -0.5), 'milieu', 'black', 1, 'middle', true)\n      Cpos = texteParPoint(p[2], similitude(A, homothetie(C, A, 0.95), -signes[i] * 90, 0.1), 'milieu', 'black', 1, 'middle', true)\n      s2 = demiDroite(A, C)\n      labels = labelPoint(A, B, C)\n      secteur = afficheMesureAngle(B, A, C)\n      secteur0 = afficheMesureAngle(B, A, C, 'black', 1.5, ' ')\n      texteCorr = ''\n      xMin = Math.min(A.x, C.x, B.x) - 1\n      xMax = Math.max(A.x, C.x, B.x) + 1\n      yMin = Math.min(A.y, C.y, B.y) - 1\n      yMax = Math.max(A.y, C.y, B.y) + 1\n      context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n      objetsEnonce = [s1, s2, labels, Apos, Bpos, Cpos, secteur0]\n      objetsCorrection = [s1, s2, labels, Apos, Bpos, Cpos, secteur]\n      texte += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.8 }, objetsEnonce)\n      texteCorr += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection)\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${Math.abs(angle)}\\\\degree$`,\n          statut: true\n        },\n        {\n          texte: `$${Math.abs(180 - angle)}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: `$${Math.abs(angle / 2)}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: `$${Math.abs(Math.round((180 + angle) / 2))}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: '$180\\\\degree$',\n          statut: false\n        },\n        {\n          texte: '$90\\\\degree$',\n          statut: false\n        }\n      ]\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 6\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Précision de l\\'angle', 3, '1 : Angle à 10°\\n2 : Angle à 5°\\n3 : Angle à 1°']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","MesurerUnAngle","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","video","nouvelleVersion","numeroExercice","angle","anglerot","Apos","Bpos","Cpos","p","texte","texteCorr","A","B","C","s2","s1","bis","parseInt","listeQuestions","listeCorrections","signes","labels","secteur","xMin","xMax","yMin","yMax","objetsEnonce","objetsCorrection","secteur0","i","push","choice","randint","lettreDepuisChiffre","interactif","point","rotation","texteParPoint","similitude","homothetie","demiDroite","pointSurSegment","labelPoint","afficheMesureAngle","Math","min","x","max","y","context","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","autoCorrection","enonce","propositions","abs","statut","round","options","ordered","lastChoice","propositionsQcm","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}