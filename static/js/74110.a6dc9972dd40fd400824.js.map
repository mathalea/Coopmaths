{"version":3,"file":"js/74110.a6dc9972dd40fd400824.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G32-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, numAlpha, texNombre } from '../../modules/outils.js'\nimport { texteSurSegment, projectionOrtho, pointAdistance, droite, polygoneAvecNom, afficheMesureAngle, codageAngleDroit, point, segment, texteParPosition, milieu, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Calculer la hauteur d’une montagne'\n\n/**\n * Propose de calculer la hauteur d'une montagne à partir de deux relevés d'angle\n * @author Jean-Claude Lhote\n * Référence 3G32-4\n*/\nexport default function CalculsTrigonometriques4 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.sup = true\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.nbQuestions = 1\n  this.spacingCorr = 2\n  this.spacing = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let distance; let alfa; let baita; let beta; let alpha; let taille; let A; let B; let H; let S; let C; let objets = []; let p\n    if (context.isHtml) {\n      alfa = 'α'\n      baita = 'β'\n    } else {\n      alfa = '\\\\alpha'\n      baita = '\\\\beta'\n    }\n\n    for (let i = 0, texte, texteCorr, j, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      objets = []\n      alpha = randint(25, 45)\n      j = 0\n      beta = alpha + randint(1, 3)\n      taille = randint(20, 50) * 100\n      distance = Math.round(taille * Math.sin((beta - alpha) * Math.PI / 180) / Math.sin(alpha * Math.PI / 180) / Math.sin(beta * Math.PI / 180))\n      taille = Math.round(distance * Math.sin(alpha * Math.PI / 180) * Math.sin(beta * Math.PI / 180) / Math.sin((beta - alpha) * Math.PI / 180))\n      A = point(0, 0, 'A')\n      B = pointAdistance(A, 5, 0, 'B')\n      H = pointAdistance(A, 12, 0, 'H')\n      S = pointAdistance(H, 7, 90, 'S')\n      C = projectionOrtho(B, droite(A, S), 'C')\n      p = polygoneAvecNom(A, B, H, S, C)\n      objets.push(p[1], p[0], segment(C, B), segment(S, B), codageAngleDroit(A, H, S), codageAngleDroit(B, C, S))\n      objets.push(afficheMesureAngle(H, A, S, 'black', 2, `${alfa}`), afficheMesureAngle(H, B, S, 'black', 2, `${baita}`))\n\n      objets.push(texteSurSegment(`${texNombre(distance)} m`, A, B, 'black', -0.5), texteParPosition('h', milieu(H, S).x + 0.5, milieu(H, S).y, 0, 'black', 2, 'middle', true))\n\n      texte = 'Un voyageur approche d\\'une montagne. Il aimerait en calculer la hauteur.<br>'\n      texte += `Pour cela, il utilise un théodolite en un point $A$ qui lui permet de mesurer l'angle $${alfa}$ vertical formé par le sommet $S$ de la montagne, le point $A$ et la base de la montagne $H$.<br>`\n      texte += `Il parcourt ensuite $${distance}$ m en direction de la montagne et effectue une nouvelle mesure de l'angle $${baita}$ en un point $B$.<br>`\n      texte += `Le schéma ci-dessous n'est pas en vraie grandeur.<br>On donne : $${alfa}=${alpha}\\\\degree$, $${baita}=${beta}\\\\degree$ et $AB=${distance}$ m.<br>` + mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 8, pixelsParCm: 20, scale: 0.5 }, objets) + '<br>'\n\n      if (this.sup) {\n        texte += `${numAlpha(j)}Exprimer la mesure de l'angle $\\\\widehat{BSH}$ en fonction de $${baita}$.<br>`\n        texte += `${numAlpha(j + 1)}Exprimer la mesure de l'angle $\\\\widehat{ASH}$ en fonction de $${alfa}$.<br>`\n        j += 2\n      }\n      texte += `${numAlpha(j)}Montrer que $\\\\widehat{BSC}=${baita}-${alfa}$.<br>`\n      j++\n      if (this.sup) {\n        texte += `${numAlpha(j)}Dans le triangle $BCS$ exprimer $BS$ en fonction de $BC$.<br>`\n      } else {\n        texte += `${numAlpha(j)}Exprimer $BS$ en fonction de $BC$.<br>`\n      }\n      j++\n      if (this.sup) {\n        texte += `${numAlpha(j)}Dans le triangle $ABC$, exprimer $BC$ en fonction de $AB$.<br>`\n      } else {\n        texte += `${numAlpha(j)}Exprimer $BC$ en fonction de $AB$.<br>`\n      }\n      j++\n      if (this.sup) {\n        texte += `${numAlpha(j)}En déduire $h$ en fonction de $BS$ puis en fonction de $BC$ enfin en fonction de $AB$.<br>`\n      } else {\n        texte += `${numAlpha(j)}En déduire $h$ en fonction de $AB$.<br>`\n      }\n      j++\n      texte += `${numAlpha(j)}Quelle est la hauteur de la montagne (arrondir au mètre près) ?<br>`\n      texte += 'On supposera le point d\\'observation au niveau du sol.'\n      j = 0\n      texteCorr = mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 8, pixelsParCm: 20, scale: 0.5 }, objets) + '<br>'\n      if (this.sup) {\n        texteCorr += `${numAlpha(j)}Dans le triangle $BHS$ rectangle en $H$, les angles aigus sont complémentaires donc $\\\\widehat{BSH}=90-${baita}$.<br>`\n        texteCorr += `${numAlpha(j + 1)}Dans le triangle $AHS$ rectangle en $H$, pour la même raison $\\\\widehat{ASH}=90-${alfa}$.<br>`\n        j += 2\n      }\n      texteCorr += `${numAlpha(j)}On sait que $\\\\widehat{BSH}=90-${baita}$ et $\\\\widehat{ASH}=90-${alfa}$.<br>Donc $\\\\widehat{BSC}=\\\\widehat{ASH}-\\\\widehat{BSH}=90-${alfa}-(90-${baita})=\\\\cancel{90}-${alfa}-\\\\cancel{90}+${baita}=${baita}-${alfa}$.<br>`\n      j++\n      texteCorr += `${numAlpha(j)}Dans le triangle $BCS$ rectangle en $C$, $\\\\sin(\\\\widehat{BSC})=\\\\dfrac{BC}{BS}$ d'où $BS=\\\\dfrac{BC}{\\\\sin(\\\\widehat{BSC})}=\\\\dfrac{BC}{\\\\sin(${baita}-${alfa})}$.<br>`\n      j++\n      texteCorr += `${numAlpha(j)}Dans le triangle $ABC$ rectangle en $C$, $\\\\sin(\\\\widehat{BAC})=\\\\dfrac{BC}{AB}$ d'où $BC=AB\\\\times \\\\sin(\\\\widehat{BAC})=AB\\\\times \\\\sin(${alfa})$.<br>`\n      j++\n\n      texteCorr += `${numAlpha(j)}Dans le triangle $BHS$ rectangle en $H$, $h=BS\\\\times \\\\sin(${baita})=\\\\dfrac{BC}{\\\\sin(${baita}-${alfa})}\\\\times \\\\sin(${baita})=\\\\dfrac{AB\\\\times \\\\sin(${alfa})}{\\\\sin(${baita}-${alfa})}\\\\times \\\\sin(${baita})$<br>`\n\n      j++\n      texteCorr += `${numAlpha(j)}Application numérique : $h=\\\\dfrac{${distance}\\\\times \\\\sin(${alpha})}{\\\\sin(${beta}-${alpha})}\\\\times \\\\sin(${beta})$`\n      texteCorr += `$=\\\\dfrac{${distance}\\\\times \\\\sin(${alpha})\\\\times \\\\sin(${beta})}{\\\\sin(${beta - alpha})}\\\\approx ${Math.round(taille)}$ m.<br>`\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Afficher un schéma et des questions intermédiaires']\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","CalculsTrigonometriques4","Exercice","this","consigne","nbCols","nbColsCorr","sup","tailleDiaporama","video","nbQuestions","spacingCorr","spacing","nouvelleVersion","distance","alfa","baita","beta","alpha","taille","A","B","H","S","C","listeQuestions","listeCorrections","p","objets","context","texte","texteCorr","j","i","cpt","randint","Math","round","sin","PI","point","pointAdistance","projectionOrtho","droite","polygoneAvecNom","push","segment","codageAngleDroit","afficheMesureAngle","texteSurSegment","texNombre","texteParPosition","milieu","x","y","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","numAlpha","indexOf","listeQuestionsToContenu","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}