{"version":3,"file":"js/75140.d77e7da395d29161059b.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R10-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,shuffle,texNombrec,obtenirListeFacteursPremiers,choice,combinaisonListes} from '../../modules/outils.js'\n\nexport const titre = 'Deviner un nombre relatif'\n\n/**\n * Additions à trou dans les relatifs\n *\n *  @author Jean-Claude Lhote à partir de CM000 de Rémi Angot\n * Référence 5R10\n */\nexport default function Deviner_nombre_relatif() {\n  \"use strict\";\n  Exercice.call(this); // Héritage de la classe Exercice()\n   this.titre = titre;\n  this.consigne = \"Qui suis-je ?\";\n  this.spacing = 2;\n  this.nbQuestions=3;\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let typesDeQuestionsDisponibles=[1,2,3]\n    let listeTypeDeQuestions=combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions)\n    let dixieme,signe,centieme,unite,somme,produit,facteurs,type=['négatif','nul','positif'];\n    for (let i = 0, texte, texteCorr,cpt=0; i < this.nbQuestions;) {\n        signe=choice([-1,1])\n        switch (listeTypeDeQuestions[i]) {\n        case 1:\n            unite=randint(1,9)\n            somme=randint(unite+1,unite+9)\n            dixieme=somme-unite\n            centieme=0\n          texte = `Je suis un nombre ${type[signe+1]} dont la distance à zéro est comprise entre ${unite} et ${unite+1}.<br>`\n          texte+=`On m'écrit avec deux chiffres dont la somme est ${somme}.<br>Qui suis-je ?`;\n        break\n\n        case 2:\n            unite=randint(1,9)\n            somme=randint(unite+1,unite+9)\n            dixieme=somme-unite\n            centieme=0\n          texte = `Je suis un nombre dont l'opposé est compris entre `\n          if (signe<0) {\n              texte+=`$${unite}$ et $${unite+1}$.<br>`\n          }\n          else {\n            texte+=`$${-unite-1}$ et $${-unite}$.<br>`\n          } \n          texte+=`La somme de mes deux chiffres est $${somme}$.<br>Qui suis-je ?`;\n        break\n\n        case 3:\n            produit=choice([6,10,15])\n            facteurs=obtenirListeFacteursPremiers(produit)\n            facteurs.push(1)\n            facteurs=shuffle(facteurs)\n            unite=facteurs[0]\n            dixieme=facteurs[1]\n            centieme=facteurs[2]\n            texte = `Je suis un nombre ${type[signe+1]} dont la distance à zéro est comprise entre ${unite} et ${unite+1}.<br>`\n            texte+=`Le produit de mes trois chiffres vaut ${produit}.<br>`\n            if (dixieme<centieme) {\n                texte+=`Mon chiffre des centièmes est supérieur à mon chiffre des dixièmes.`\n            }\n            else {\n                texte+=`Mon chiffre des centièmes est inférieur à mon chiffre des dixièmes.`\n            }\n             texte+=` Qui suis-je ?`;\n         break\n\n        case 4: \n        break\n\n      }\n      texteCorr = `Je suis $${texNombrec(signe*(unite+dixieme/10+centieme/100))}$.`;\n\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n//  this.besoinFormulaireNumerique = [\"Niveau de difficulté\",2,\"1 : Nombres entiers\\n2 : Nombres décimaux\"]; \n//  this.besoinFormulaire2Numerique = [\"Valeur maximale\", 9999]\n//  this.besoinFormulaire3Numerique = [\"Type d'égalité\",2,\"1 : Égalité à trou\\n2 : Équation\"]; \n}","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Deviner_nombre_relatif","Exercice","this","consigne","spacing","nbQuestions","nouvelleVersion","listeQuestions","listeCorrections","dixieme","signe","centieme","unite","somme","produit","facteurs","listeTypeDeQuestions","combinaisonListes","type","texte","texteCorr","i","cpt","choice","randint","obtenirListeFacteursPremiers","push","shuffle","texNombrec","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}