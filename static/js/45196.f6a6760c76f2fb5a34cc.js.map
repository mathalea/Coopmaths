{"version":3,"file":"js/45196.f6a6760c76f2fb5a34cc.js","mappings":"mPACO,MAAMA,GAAW,EACXC,EAAU,UACVC,GAAkB,EAClBC,EAAiB,WAEjBC,EAAQ,mCAON,SAASC,IACtBC,EAAAA,QAAAA,KAA4BC,MAC5BA,KAAKH,MAAQA,EACbG,KAAKL,gBAAkBA,EACvBK,KAAKJ,eAAiBA,I,6LCZjB,MAAMC,EAAQ,iDACRJ,GAAW,EACXC,EAAU,UACVC,GAAkB,EAClBC,EAAiB,WAQf,SAASG,IACtBE,EAAAA,QAAAA,KAAcD,MACdA,KAAKE,IAAM,GACXF,KAAKG,KAAO,EACZH,KAAKI,SAAW,0BAChBJ,KAAKK,QAAU,EACfL,KAAKM,YAAc,EAEnBN,KAAKO,gBAAkB,WACrBP,KAAKE,IAAMM,SAASR,KAAKE,KACzBF,KAAKG,KAAOK,SAASR,KAAKG,MAC1BH,KAAKS,eAAiB,GACtBT,KAAKU,iBAAmB,GACxBV,KAAKW,eAAiB,GACtB,MAAMC,EAAiB,CACrB,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,KAEAC,GAAuBC,EAAAA,EAAAA,KAC3B,CAAC,EAAG,EAAG,EAAG,EAAG,GACbd,KAAKe,aAEP,IACE,IAAWC,EAAUC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAOC,EAAOC,EAA9CC,EAAI,EACRA,EAAIzB,KAAKe,YACTU,IACA,CACA,GAAgC,IAA5BZ,EAAqBY,GAkBvB,OAhBAT,GAAWU,EAAAA,EAAAA,KAAOd,GAClBK,EAAID,EAAS,GACbE,EAAIF,EAAS,GAEXK,EADErB,KAAK2B,SACHC,EAAAA,EAAAA,KAAQ,EAAGC,KAAKC,IAAI9B,KAAKE,IAAK,KAE9B0B,EAAAA,EAAAA,KAAQ,EAAGC,KAAKC,IAAI,EAAG9B,KAAKE,MAElCiB,EAAIE,EAAIJ,EACRG,EAAIC,EAAIH,GACRa,EAAAA,EAAAA,KAAcnB,EAAgBI,GAE5BM,EADgB,IAAdtB,KAAKG,KACCsB,EAAI,EAEJzB,KAAKG,KAAO,EAEdmB,GACN,KAAK,EACHC,EAAS,KAAGS,EAAAA,EAAAA,KAAYf,EAAGC,SAAQc,EAAAA,EAAAA,KAAY,4BAA6B,mCAAkCA,EAAAA,EAAAA,KAAY,kBAAmBZ,MAC7II,EAAa,KAAGQ,EAAAA,EAAAA,KAAYf,EAAGC,SAAQc,EAAAA,EAAAA,KAAYf,GAAIgB,EAAAA,EAAAA,IAAe,UAAYZ,GAAIH,GAAIe,EAAAA,EAAAA,IAAe,UAAYZ,UAASW,EAAAA,EAAAA,KAAYb,EAAGC,MAC7IpB,KAAKW,eAAec,GAAK,GACzBzB,KAAKW,eAAec,GAAGS,OAAU,GAAEX,MACnCvB,KAAKW,eAAec,GAAGU,aAAe,CACpC,CACEZ,MAAQ,KAAGS,EAAAA,EAAAA,KAAYb,EAAGC,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYf,EAAGG,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,MAAaX,EAAI,GAAKJ,EAAGG,MACpCgB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,MAAaX,EAAI,GAAKJ,EAAGG,MACpCgB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYH,KAAKQ,IAAIjB,EAAIH,GAAIG,MACxCgB,QAAQ,IAGZ,MACF,KAAK,EACHb,EAAS,KAAGS,EAAAA,EAAAA,KAAYf,EAAGC,SAAQc,EAAAA,EAAAA,KAAY,4BAA6B,mCAAkCA,EAAAA,EAAAA,KAAYb,EAAG,sBAC7HK,EAAa,KAAGQ,EAAAA,EAAAA,KAAYf,EAAGC,SAAQc,EAAAA,EAAAA,KAAYf,GAAIgB,EAAAA,EAAAA,IAAe,UAAYZ,GAAIH,GAAIe,EAAAA,EAAAA,IAAe,UAAYZ,UAASW,EAAAA,EAAAA,KAAYb,EAAGC,MAC7IpB,KAAKW,eAAec,GAAK,GACzBzB,KAAKW,eAAec,GAAGS,OAAU,GAAEX,MACnCvB,KAAKW,eAAec,GAAGU,aAAe,CACpC,CACEZ,MAAQ,KAAGS,EAAAA,EAAAA,KAAYb,EAAGC,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYb,EAAGD,MAC1BkB,QAAQ,GAEV,CACEb,MAAQ,YAAWJ,OAAOE,EAAI,GAAKH,MACnCkB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYb,GAAIE,EAAI,GAAKH,MACpCkB,QAAQ,GAEV,CACEb,MAAQ,YAAWJ,MAAMU,KAAKQ,IAAIlB,EAAID,OACtCkB,QAAQ,SAoBhB,OAZAnB,GAAIW,EAAAA,EAAAA,KAAQ,EAAG,GAEbR,EADEpB,KAAKsC,aAAeC,EAAAA,GAAAA,OAAqC,QAApBvC,KAAKsC,YACxCV,EAAAA,EAAAA,KAAQ,EAAG,EAAG,CAACX,EAAG,EAAIA,KAEtBW,EAAAA,EAAAA,KAAQ,EAAG,GAEjBT,EAAIF,EAAIG,EAENE,EAD0B,IAAxBd,SAASR,KAAKG,MACRsB,EAAI,EAEJzB,KAAKG,KAAO,EAEdmB,GACN,KAAK,EACHC,EAAS,IAAGN,QAAOe,EAAAA,EAAAA,KAAY,4BAA6B,mCAAkCA,EAAAA,EAAAA,KAAY,kBAAmBZ,MACzHpB,KAAKsC,YAAsC,aAAxBtC,KAAKJ,iBAC1B2B,EAAS,IAAGN,gBAEdO,EAAa,IAAGP,eAAeA,WAAUe,EAAAA,EAAAA,KAAYf,GAAIgB,EAAAA,EAAAA,IAAe,UAAYb,GAAI,KAAMa,EAAAA,EAAAA,IAAe,UAAYb,UAASY,EAAAA,EAAAA,KAAYb,EAAGC,MACjJpB,KAAKW,eAAec,GAAK,GACzBzB,KAAKW,eAAec,GAAGS,OAAU,GAAEX,MACnCvB,KAAKW,eAAec,GAAGU,aAAe,CACpC,CACEZ,MAAQ,KAAGS,EAAAA,EAAAA,KAAYb,EAAGC,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYf,EAAGG,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYZ,EAAIH,EAAGG,MAC9BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYH,KAAKQ,IAAIjB,EAAIH,GAAIG,MACxCgB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,MAAaf,EAAI,GAAKG,EAAGA,MACpCgB,QAAQ,IAGZ,MACF,KAAK,EACHb,EAAS,IAAGN,QAAOe,EAAAA,EAAAA,KAAY,4BAA6B,mCAAkCA,EAAAA,EAAAA,KAAYb,EAAG,sBACzGnB,KAAKsC,aACPf,EAAS,IAAGN,gBAEdO,EAAa,IAAGP,eAAeA,WAAUe,EAAAA,EAAAA,KAAYf,GAAIgB,EAAAA,EAAAA,IAAe,UAAYb,GAAI,KAAMa,EAAAA,EAAAA,IAAe,UAAYb,UAASY,EAAAA,EAAAA,KAAYb,EAAGC,MACjJpB,KAAKW,eAAec,GAAK,GACzBzB,KAAKW,eAAec,GAAGS,OAAU,GAAEX,MACnCvB,KAAKW,eAAec,GAAGU,aAAe,CACpC,CACEZ,MAAQ,KAAGS,EAAAA,EAAAA,KAAYb,EAAGC,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYb,EAAGA,EAAIF,MAC9BmB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYb,EAAGF,MAC1BmB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYb,EAAGA,EAAIF,MAC9BmB,QAAQ,GAEV,CACEb,MAAQ,KAAGS,EAAAA,EAAAA,KAAYb,EAAGA,EAAIF,MAC9BmB,QAAQ,IAUdpC,KAAKsC,YAAcC,EAAAA,GAAAA,UACrBC,EAAAA,EAAAA,IAAWxC,KAAMyB,EAAG,IAAIgB,EAAAA,EAAgBtB,EAAGC,GAAI,CAAEsB,iBAAkB,aACnEnB,IAASoB,EAAAA,EAAAA,IAAyB3C,KAAMyB,IAE1CzB,KAAKS,eAAemC,KAAKrB,GACzBvB,KAAKU,iBAAiBkC,KAAKpB,IAE7BqB,EAAAA,EAAAA,KAAwB7C,OAE1BA,KAAK8C,0BAA4B,CAAC,oCAAqC,IACvE9C,KAAK+C,2BAA6B,CAAC,oBAAqB,EAAG,iE,gBC7O9C,SAAS9C,IAItBD,KAAKH,MAAQ,GACbG,KAAKgD,YAAa,EAclBhD,KAAKI,SAAW,GAChBJ,KAAKiD,mBAAqB,GAC1BjD,KAAKkD,aAAe,GACpBlD,KAAKS,eAAiB,GACtBT,KAAKU,iBAAmB,GACxBV,KAAKmD,QAAU,GACfnD,KAAKoD,kBAAoB,GACzBpD,KAAKW,eAAiB,GACtBX,KAAKqD,sBAAwB,GAK7BrD,KAAKK,QAAU,EACfL,KAAKM,YAAc,EAKnBN,KAAKsD,mBAAoB,EACzBtD,KAAKuD,cAAgB,GACrBvD,KAAKwD,oBAAqB,EAC1BxD,KAAKyD,uBAAwB,EAC7BzD,KAAK0D,OAAS,EACd1D,KAAK2D,WAAa,EAClB3D,KAAK4D,kBAAmB,EACxB5D,KAAK6D,sBAAuB,EAC5B7D,KAAK8D,mBAAoB,EACzB9D,KAAK+D,uBAAwB,EAM7B/D,KAAKgE,QAAS,EACdhE,KAAKiE,gBAAkB,EAKvBjE,KAAKe,YAAc,GACnBf,KAAKkE,mBAAqB,EAC1BlE,KAAKmE,+BAAgC,EACrCnE,KAAKoE,qBAAsB,EAC3BpE,KAAKqE,oBAAqB,EAC1BrE,KAAKsE,MAAQ,GAEbtE,KAAKsC,YAAa,EAClBtC,KAAKuE,uBAAwB,EAE7BvE,KAAK8C,2BAA4B,EACjC9C,KAAKwE,uBAAwB,EAC7BxE,KAAKyE,6BAA8B,EAEnCzE,KAAK+C,4BAA6B,EAClC/C,KAAK0E,wBAAyB,EAC9B1E,KAAK2E,8BAA+B,EAEpC3E,KAAK4E,4BAA6B,EAClC5E,KAAK6E,wBAAyB,EAC9B7E,KAAK8E,8BAA+B,EAEpC9E,KAAK+E,4BAA6B,EAClC/E,KAAKgF,wBAAyB,EAC9BhF,KAAKiF,8BAA+B,EAMpCjF,KAAKkF,cAAe,EASpBlF,KAAKmF,eAAiB,GAMtBnF,KAAKO,gBAAkB,SAAU6E,KAQjCpF,KAAKqF,oBAAsB,SAAU5D,KAAM6D,GAC/B,IAAN7D,IAASzB,KAAKmF,eAAiB,IACnC,IAAII,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAI1F,KAAKmF,eAAeQ,QAAQJ,IAAmB,KAGjDvF,KAAKmF,eAAevC,KAAK2C,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/5e/5N13-2.js","webpack://mathalea/./src/js/exercices/6e/6N41.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import EgalitesEntreFractions from '../6e/6N41.js'\nexport const amcReady = true\nexport const amcType = 'qcmMono' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\nexport const titre = 'Égalités entre fractions simples'\n\n/**\n * Écrire une fraction avec un nouveau dénominateur qui est un multiple de son dénominateur (ce multiple est inférieur à une valeur maximale de 11 par défaut)\n * @author Rémi Angot\n * 5N13-2 et 6N41\n */\nexport default function EgalitesEntreFractions5e () {\n  EgalitesEntreFractions.call(this)\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, combinaisonListes, miseEnEvidence, texFraction } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport FractionEtendue from '../../modules/FractionEtendue.js'\nexport const titre = 'Compléter les égalités entre fractions simples'\nexport const amcReady = true\nexport const amcType = 'qcmMono' // QCM\nexport const interactifReady = true\nexport const interactifType = 'mathLive' // On pourrait ajouter QCM\n\n/**\n * Écrire une fraction avec un nouveau dénominateur qui est un multiple de son dénominateur (ce multiple est inférieur à une valeur maximale de 11 par défaut)\n * @author Rémi Angot\n * @author Jean-claude Lhote (Mode QCM et alternance numérateur / dénominateur)\n * 5N13-2 et 6N41\n */\nexport default function EgalitesEntreFractions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 11 // Correspond au facteur commun\n  this.sup2 = 2 // alternace numérateur ou dénominateur imposé.\n  this.consigne = 'Compléter les égalités.'\n  this.spacing = 2\n  this.spacingCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.sup2 = parseInt(this.sup2)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const listeFractions = [\n      [1, 2],\n      [1, 3],\n      [2, 3],\n      [1, 4],\n      [3, 4],\n      [1, 5],\n      [2, 5],\n      [3, 5],\n      [4, 5],\n      [1, 6],\n      [5, 6],\n      [1, 7],\n      [2, 7],\n      [3, 7],\n      [4, 7],\n      [5, 7],\n      [6, 7],\n      [1, 8],\n      [3, 8],\n      [5, 8],\n      [7, 8],\n      [1, 9],\n      [2, 9],\n      [4, 9],\n      [5, 9],\n      [7, 9],\n      [8, 9],\n      [1, 10],\n      [3, 10],\n      [7, 10],\n      [9, 10]\n    ] // Couples de nombres premiers entre eux\n    const listeTypeDeQuestions = combinaisonListes(\n      [1, 1, 1, 1, 2],\n      this.nbQuestions\n    )\n    for (\n      let i = 0, fraction, a, b, c, d, k, choix, texte, texteCorr;\n      i < this.nbQuestions;\n      i++\n    ) {\n      if (listeTypeDeQuestions[i] === 1) {\n        // égalité entre 2 fractions\n        fraction = choice(listeFractions) //\n        a = fraction[0]\n        b = fraction[1]\n        if (this.modeQcm) {\n          k = randint(3, Math.max(this.sup, 4))\n        } else {\n          k = randint(2, Math.max(3, this.sup))\n        }\n        c = k * a\n        d = k * b\n        enleveElement(listeFractions, fraction) // Il n'y aura pas 2 fois la même fraction de départ\n        if (this.sup2 === 3) {\n          choix = i % 2\n        } else {\n          choix = this.sup2 % 2\n        }\n        switch (choix) {\n          case 0 :\n            texte = `$${texFraction(a, b)} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction('\\\\phantom{0000}', d)}$`\n            texteCorr = `$${texFraction(a, b)} = ${texFraction(a + miseEnEvidence('\\\\times' + k), b + miseEnEvidence('\\\\times' + k))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction((k - 1) * a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction((k + 1) * a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(Math.abs(d - a), d)}$`,\n                statut: false\n              }\n            ]\n            break\n          case 1 :\n            texte = `$${texFraction(a, b)} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction(c, '\\\\phantom{0000}')}$`\n            texteCorr = `$${texFraction(a, b)} = ${texFraction(a + miseEnEvidence('\\\\times' + k), b + miseEnEvidence('\\\\times' + k))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(c, b)}$`,\n                statut: false\n              },\n              {\n                texte: `$\\\\dfrac{${c}}{${(k - 1) * b}}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, (k + 1) * b)}$`,\n                statut: false\n              },\n              {\n                texte: `$\\\\dfrac{${c}}{${Math.abs(c - b)}}$`,\n                statut: false\n              }\n            ]\n\n            break\n        }\n      } else {\n        // écrire un entier sous la forme d'une fraction\n        a = randint(1, 9)\n        if (this.interactif && !context.isAmc && this.interactif === 'qcm') {\n          d = randint(3, 9, [a, 2 * a])\n        } else {\n          d = randint(2, 9)\n        }\n        c = a * d\n        if (parseInt(this.sup2) === 3) {\n          choix = i % 2\n        } else {\n          choix = this.sup2 % 2\n        }\n        switch (choix) {\n          case 0 :\n            texte = `$${a} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction('\\\\phantom{0000}', d)}$`\n            if (this.interactif && this.interactifType !== 'mathLive') {\n              texte = `$${a} = \\\\ldots$`\n            }\n            texteCorr = `$${a} = \\\\dfrac{${a}}{1} =${texFraction(a + miseEnEvidence('\\\\times' + d), '1' + miseEnEvidence('\\\\times' + d))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(d + a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(Math.abs(d - a), d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction((a + 1) * d, d)}$`,\n                statut: false\n              }\n            ]\n            break\n          case 1 :\n            texte = `$${a} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction(c, '\\\\phantom{0000}')}$`\n            if (this.interactif) {\n              texte = `$${a} = \\\\ldots$`\n            }\n            texteCorr = `$${a} = \\\\dfrac{${a}}{1} =${texFraction(a + miseEnEvidence('\\\\times' + d), '1' + miseEnEvidence('\\\\times' + d))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(c, c - a)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, a)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, c + a)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, c * a)}$`,\n                statut: false\n              }\n            ]\n\n            break\n        }\n      }\n      // if (this.interactif) {\n      //   texte += '<br>' + propositionsQcm(this, i).texte\n      // }\n      if (this.interactif && context.isHtml) {\n        setReponse(this, i, new FractionEtendue(c, d), { formatInteractif: 'fraction' })\n        texte += ajouteChampTexteMathLive(this, i)\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale du facteur commun', 99]\n  this.besoinFormulaire2Numerique = ['Type de questions', 3, '1 : Numérateur imposé\\n2 : Dénominateur imposé\\n3 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","EgalitesEntreFractions5e","EgalitesEntreFractions","this","Exercice","sup","sup2","consigne","spacing","spacingCorr","nouvelleVersion","parseInt","listeQuestions","listeCorrections","autoCorrection","listeFractions","listeTypeDeQuestions","combinaisonListes","nbQuestions","fraction","a","b","c","d","k","choix","texte","texteCorr","i","choice","modeQcm","randint","Math","max","enleveElement","texFraction","miseEnEvidence","enonce","propositions","statut","abs","interactif","context","setReponse","FractionEtendue","formatInteractif","ajouteChampTexteMathLive","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}