{"version":3,"file":"js/58403.30bd55c7276dff38f5da.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/1e/1F10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, ecritureAlgebrique, ecritureAlgebriqueSauf1, lettreMinusculeDepuisChiffre, rienSi1 } from '../../modules/outils.js'\nimport { simplify, parse, derivative } from 'mathjs'\nconst math = { simplify: simplify, parse: parse, derivative: derivative }\nexport const titre = 'Calculs de dérivées'\n\n/**\n * Calculs de dérivés\n * @author Rémi Angot\n * Référence 1F10\n*/\nexport default function CalculsDeDerives () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Pour chacune des fonctions suivantes, dire sur quel ensemble elle est dérivable, puis déterminer l'expression de sa fonction dérivée.\"\n  this.nbQuestions = 6\n  this.nbCols = 2 // Nombre de colonnes pour la sortie LaTeX\n  this.nbColsCorr = 2 // Nombre de colonnes dans la correction pour la sortie LaTeX\n  this.sup = 1\n  // On modifie les règles de simplifications par défaut de math.js pour éviter 10x+10 = 10(x+1) et -4x=(-4x)\n  const reglesDeSimplifications = math.simplify.rules.slice()\n  reglesDeSimplifications.splice(reglesDeSimplifications.findIndex(rule => rule.l === 'n1*n2 + n2'), 1)\n  reglesDeSimplifications.splice(reglesDeSimplifications.findIndex(rule => rule.l === 'n1*n3 + n2*n3'), 1)\n  //    reglesDeSimplifications.push({l:\"-(n1*v^2)\",r:\"-n1*v^2\"})\n  this.nouvelleVersion = function () {\n    this.sup = Number(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.liste_valeurs = [] // Les questions sont différentes du fait du nom de la fonction, donc on stocke les valeurs\n\n    let listeTypeDeQuestionsDisponibles\n    if (this.sup === 1) {\n      listeTypeDeQuestionsDisponibles = ['ax+b', 'a', 'ax2+bx+c', 'xn', 'xn+xm', '1/x', 'xn+1/x', '1/xn', 'xn+1/xm', 'racine(x)']\n    } else if (this.sup === 2) {\n      listeTypeDeQuestionsDisponibles = ['ax+b', 'axn', 'a/x', 'a/xn', 'racine(ax)']\n    } else {\n      listeTypeDeQuestionsDisponibles = ['ax+b', 'axn', 'a/x', 'a/xn', 'racine(ax)']\n    }\n    const listeTypeDeQuestions = combinaisonListes(listeTypeDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, a, b, c, n, m, expression, ensembleDerivation, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case 'a':\n          a = randint(-10, 10, 0)\n          expression = `${a}`\n          ensembleDerivation = '\\\\mathbb{R}'\n          break\n        case 'ax+b':\n          a = randint(-10, 10, 0)\n          b = randint(-10, 10, 0)\n          expression = `${a}x  ${ecritureAlgebrique(b)}`\n          ensembleDerivation = '\\\\mathbb{R}'\n          break\n        case 'ax2+bx+c':\n          a = randint(-10, 10, 0)\n          b = randint(-10, 10, 0)\n          c = randint(-10, 10, 0)\n          expression = `${rienSi1(a)} x^2  ${ecritureAlgebriqueSauf1(b)} x  ${ecritureAlgebrique(c)}`\n          ensembleDerivation = '\\\\mathbb{R}'\n          break\n        case 'xn':\n          n = randint(2, 10)\n          expression = `x^${n}`\n          ensembleDerivation = '\\\\mathbb{R}'\n          break\n        case 'xn+1/x':\n          n = randint(2, 10)\n          expression = `x^${n}+1/x`\n          ensembleDerivation = '\\\\mathbb{R}^{\\\\text{*}}'\n          break\n        case 'xn+1/xm':\n          n = randint(2, 10)\n          m = randint(2, 10, m)\n          expression = `x^${n}+1/x^${m}`\n          ensembleDerivation = '\\\\mathbb{R}^{\\\\text{*}}'\n          break\n        case 'xn+xm':\n          n = randint(2, 10)\n          m = randint(2, 10, m)\n          expression = `x^${n}+x^${m}`\n          ensembleDerivation = '\\\\mathbb{R}'\n          break\n        case 'axn':\n          a = randint(-10, 10, [0, 1, -1])\n          n = randint(2, 10)\n          expression = `${a}x^${n}`\n          ensembleDerivation = '\\\\mathbb{R}'\n          break\n        case '1/x':\n          expression = '1/x'\n          ensembleDerivation = '\\\\mathbb{R}^{\\\\text{*}}'\n          break\n        case 'a/x':\n          a = randint(-10, 10, [0, 1])\n          expression = `${a}/x`\n          ensembleDerivation = '\\\\mathbb{R}^{\\\\text{*}}'\n          break\n        case '1/xn':\n          n = randint(2, 10)\n          expression = `${1}/x^${n}`\n          ensembleDerivation = '\\\\mathbb{R}^{\\\\text{*}}'\n          break\n        case 'a/xn':\n          a = randint(-10, 10, [1, 0])\n          n = randint(2, 10)\n          expression = `${a}/x^${n}`\n          ensembleDerivation = '\\\\mathbb{R}^{\\\\text{*}}'\n          break\n        case 'racine(x)':\n          expression = 'sqrt(x)'\n          ensembleDerivation = '[0,+\\\\infin['\n          break\n        case 'racine(ax)':\n          a = randint(2, 10, [4, 9])\n          expression = `sqrt(${rienSi1(a)}x)`\n          ensembleDerivation = '[0,+\\\\infin['\n          break\n      }\n\n      texte = `$${lettreMinusculeDepuisChiffre(i + 6)}:x\\\\longmapsto ${math.parse(expression).toTex({ implicit: 'hide' }).replaceAll('\\\\cdot', '')}$`\n      texteCorr = `$${lettreMinusculeDepuisChiffre(i + 6)}$ est dérivable sur $${ensembleDerivation}$ et $ ${lettreMinusculeDepuisChiffre(i + 6)}':x\\\\longmapsto ${math.simplify(math.derivative(expression, 'x'), reglesDeSimplifications).toTex({ implicit: 'hide' }).replaceAll('\\\\cdot', '')}$`\n\n      texte = texte.replaceAll('frac', 'dfrac')\n      texteCorr = texteCorr.replaceAll('frac', 'dfrac')\n\n      if (this.liste_valeurs.indexOf(expression) === -1) {\n        this.liste_valeurs.push(expression)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Fonctions de base \\n2 : ku'] // \\n3 : u/v, uv'];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["math","simplify","parse","derivative","titre","CalculsDeDerives","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","reglesDeSimplifications","rules","slice","splice","findIndex","rule","l","nouvelleVersion","listeTypeDeQuestionsDisponibles","Number","listeQuestions","listeCorrections","liste_valeurs","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","n","m","expression","ensembleDerivation","i","cpt","randint","ecritureAlgebrique","rienSi1","ecritureAlgebriqueSauf1","lettreMinusculeDepuisChiffre","toTex","implicit","replaceAll","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}