{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3F13-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","AntecedentEtImageGraphique","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","context","spacingCorr","nouvelleVersion","r","repere2","xMin","xMax","yMin","yMax","a","randint","b","c","x0","gr","graphiqueInterpole","repere","color","step","epaisseur","contenu","cont1","numAlpha","ajouteChampTexteMathLive","ordre","cont2","deuxColonnes","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","contenuCorrection","setReponse","interactif","numeroExercice","texConsigne","replace","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","spacing","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"wPAKO,MAAMA,EAAQ,8CACRC,GAAkB,EAClBC,EAAiB,WAOf,SAASC,IACtBC,eAAcC,MACdA,KAAKL,MAAQA,EACbK,KAAKJ,gBAAkBA,EACvBI,KAAKH,eAAiBA,EACtBG,KAAKC,YAAc,EACnBD,KAAKE,uBAAwB,EAC7BF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EACdC,cAAkBL,KAAKM,YAAc,GAEzCN,KAAKO,gBAAkB,WACrB,MAAMC,GAAIC,SAAQ,CAChBC,MAAO,EACPC,KAAM,EACNC,MAAO,EACPC,KAAM,IAER,IAAIC,GAAIC,SAAQ,EAAG,GACfC,EAAIF,EAAI,EACRG,EAAIH,EAAI,EACZ,MAAMI,GAAKH,UAAS,GAAI,GACxB,IAAII,GAAKC,SAAmB,CAAC,EAACL,UAAS,GAAI,GAAID,EAAI,GAAI,CAACI,EAAIJ,GAAI,CAACI,EAAK,EAAGF,GAAI,CAACE,EAAK,EAAGD,GAAI,EAACF,SAAQ,EAAG,IAAKE,EAAI,IAE7G,CAAEI,OAAQb,EAAGc,MAAO,OAAQC,KAAM,IAAMC,UAAW,IAE/B,KAAlBT,SAAQ,EAAG,KACbD,IAAM,EACNE,IAAM,EACNC,IAAM,EACNE,GAAKC,SAAmB,CAAC,EAACL,UAAS,GAAI,GAAID,EAAI,GAAI,CAACI,EAAIJ,GAAI,CAACI,EAAK,EAAGF,GAAI,CAACE,EAAK,EAAGD,GAAI,EAACF,SAAQ,EAAG,IAAKE,EAAI,IAEzG,CAAEI,OAAQb,EAAGc,MAAO,OAAQC,KAAM,IAAMC,UAAW,KAEvDxB,KAAKyB,QAAU,sEACfzB,KAAKyB,SAAW,WAChB,IAAIC,EAAS,IAAEC,SAAS,6BAA6BT,OACrDQ,IAASE,QAAyB5B,KAAM,GACxC0B,GAAU,QAAMC,SAAS,6BAA6BT,EAAK,OAC3DQ,IAASE,QAAyB5B,KAAM,GACxC,MAAM6B,GAAQd,SAAQ,EAAG,GACzB,IAAIe,EACU,IAAVD,GACFC,EAAS,IAAEH,SAAS,+CAA+CX,MACnEc,IAASF,QAAyB5B,KAAM,GACxC8B,GAAU,QAAMH,SAAS,+CAA+CV,MACxEa,IAASF,QAAyB5B,KAAM,KAExC8B,EAAS,IAAEH,SAAS,+CAA+CV,MACnEa,IAASF,QAAyB5B,KAAM,GACxC8B,GAAU,QAAMH,SAAS,+CAA+CX,MACxEc,IAASF,QAAyB5B,KAAM,IAE1CA,KAAKyB,UAAWM,QAAaL,EAAOI,GACpC9B,KAAKyB,UAAWO,SAAW,CAAEC,MAAO,EAAGC,MAAO,IAAKC,KAAM,EAAGC,KAAM,IAAKC,YAAa,IAAM7B,EAAGW,GAC7FnB,KAAKsC,kBAAqB,IAAEX,SAAS,kBAAkBT,WAAYJ,kBAAkBI,MAAOJ,OAC5FyB,QAAWvC,KAAM,EAAGc,GACpBd,KAAKsC,mBAAsB,QAAMX,SAAS,kBAAkBT,EAAK,YAAYF,EAAIC,GAAK,kBAAkBC,EAAK,OAAOF,EAAIC,GAAK,OAC7HsB,QAAWvC,KAAM,GAAIgB,EAAIC,GAAK,GAChB,IAAVY,GACF7B,KAAKsC,mBAAsB,QAAMX,SAAS,OAAOX,gCAAgCE,EAAK,kBAAkBA,EAAK,MAAMF,OACnHuB,QAAWvC,KAAM,EAAGkB,EAAK,GACzBlB,KAAKsC,mBAAsB,QAAMX,SAAS,OAAOV,0BAA0BC,EAAK,UAAUA,EAAK,kBAAkBA,EAAK,QAAQA,EAAK,MAAMD,OACzIsB,QAAWvC,KAAM,EAAG,CAAE,GAAEkB,EAAK,KAAKA,EAAK,IAAM,GAAEA,EAAK,KAAKA,EAAK,QAE9DlB,KAAKsC,mBAAsB,QAAMX,SAAS,OAAOV,0BAA0BC,EAAK,UAAUA,EAAK,kBAAkBA,EAAK,QAAQA,EAAK,MAAMD,OACzIsB,QAAWvC,KAAM,EAAG,CAAE,GAAEkB,EAAK,KAAKA,EAAK,IAAM,GAAEA,EAAK,KAAKA,EAAK,MAC9DlB,KAAKsC,mBAAsB,QAAMX,SAAS,OAAOX,gCAAgCE,EAAK,kBAAkBA,EAAK,MAAMF,OACnHuB,QAAWvC,KAAM,EAAGkB,EAAK,IAEvBlB,KAAKwC,YAAcnC,cACrBL,KAAKyB,SAAY,4GAA2GzB,KAAKyC,kDAE9HpC,YAIHL,KAAKsC,kBAAqB,4BAA2BtC,KAAKM,mBAAmBN,KAAKsC,6BAHlFtC,KAAKyB,SAAUiB,SAAY,IAAM1C,KAAKyB,QAAQkB,QAAQ,YAAa,mBAAmBA,QAAQ,QAAS,UACvG3C,KAAKsC,kBAAoBtC,KAAKsC,kBAAkBK,QAAQ,YAAa,mBAAmBA,QAAQ,QAAS,c,6BCnFhG,SAAS5C,IAEtBC,KAAKL,MAAQ,GACbK,KAAK4C,SAAW,GAChB5C,KAAK6C,mBAAqB,GAC1B7C,KAAK8C,eAAiB,GACtB9C,KAAK+C,iBAAmB,GACxB/C,KAAKgD,aAAe,GACpBhD,KAAKyB,QAAU,GACfzB,KAAKsC,kBAAoB,GACzBtC,KAAKC,YAAc,GACnBD,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKiD,QAAU,EACfjD,KAAKM,YAAc,EACnBN,KAAKkD,QAAS,EAEdlD,KAAKmD,2BAA4B,EACjCnD,KAAKoD,uBAAwB,EAC7BpD,KAAKqD,6BAA8B,EACnCrD,KAAKsD,4BAA6B,EAClCtD,KAAKuD,wBAAyB,EAC9BvD,KAAKwD,8BAA+B,EACpCxD,KAAKyD,4BAA6B,EAClCzD,KAAK0D,wBAAyB,EAC9B1D,KAAK2D,8BAA+B,EACpC3D,KAAK4D,oBAAqB,EAC1B5D,KAAKE,uBAAwB,EAC7BF,KAAK6D,kBAAmB,EACxB7D,KAAK8D,sBAAuB,EAC5B9D,KAAK+D,mBAAoB,EACzB/D,KAAKgE,uBAAwB,EAC7BhE,KAAKiE,+BAAgC,EACrCjE,KAAKkE,qBAAsB,EAC3BlE,KAAKmE,MAAQ,GACbnE,KAAKoE,YAAa,EAClBpE,KAAKqE,gBAAkB,GAMvBrE,KAAKsE,mBAAoB,EACzBtE,KAAKwC,YAAa,EAClBxC,KAAKuE,uBAAwB,EAC7BvE,KAAKwE,KAAM,EACXxE,KAAKyE,eAAgB,EACrBzE,KAAK0E,SAAU,EACf1E,KAAK2E,eAAiB,GACtB3E,KAAK4E,sBAAwB,GAC7B5E,KAAK6E,cAAe,EACpB7E,KAAKO,gBAAkB,SAAUkC,KACjCzC,KAAK8E,cAAgB,G","file":"js/839.afe8c568d5fcaf51af0e.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { deuxColonnes, randint, texConsigne, numAlpha } from '../../modules/outils.js'\nimport { repere2, graphiqueInterpole, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Lecture graphique d’images et d’antécédents'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Lecture d'images et antécédents sur un graphe sinusoidale\n * @author Rémi Angot\n * Référence 3F13-1\n*/\nexport default function AntecedentEtImageGraphique () {\n  Exercice.call(this)\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  if (context.isHtml) { this.spacingCorr = 2 }\n\n  this.nouvelleVersion = function () {\n    const r = repere2({\n      xMin: -5,\n      xMax: 5,\n      yMin: -4,\n      yMax: 4\n    })\n    let a = randint(1, 3)\n    let b = a - 4\n    let c = a - 2\n    const x0 = randint(-4, -2)\n    let gr = graphiqueInterpole([[randint(-8, -5), a - 1], [x0, a], [x0 + 4, b], [x0 + 6, c], [randint(6, 10), c - 1]] // Coordonnées des \"sommets\"\n      ,\n      { repere: r, color: 'blue', step: 0.15, epaisseur: 2 })\n\n    if (randint(1, 2) === 1) {\n      a *= -1\n      b *= -1\n      c *= -1\n      gr = graphiqueInterpole([[randint(-8, -5), a + 1], [x0, a], [x0 + 4, b], [x0 + 6, c], [randint(6, 10), c + 1]] // Coordonnées des \"sommets\"\n        ,\n        { repere: r, color: 'blue', step: 0.15, epaisseur: 2 })\n    }\n    this.contenu = 'Ci-dessous, on a tracé la courbe représentative de la fonction $f$.'\n    this.contenu += '<br><br>'\n    let cont1 = `${numAlpha(0)} Quelle est l'image de $${x0}$ ?`\n    cont1 += ajouteChampTexteMathLive(this, 1)\n    cont1 += `<br>${numAlpha(1)} Quelle est l'image de $${x0 + 5}$ ?`\n    cont1 += ajouteChampTexteMathLive(this, 2)\n    const ordre = randint(1, 2)\n    let cont2\n    if (ordre === 1) {\n      cont2 = `${numAlpha(2)} Déterminer le (ou les) antécédent(s) de $${b}$.`\n      cont2 += ajouteChampTexteMathLive(this, 3)\n      cont2 += `<br>${numAlpha(3)} Déterminer le (ou les) antécédent(s) de $${c}$.`\n      cont2 += ajouteChampTexteMathLive(this, 4)\n    } else {\n      cont2 = `${numAlpha(2)} Déterminer le (ou les) antécédent(s) de $${c}$.`\n      cont2 += ajouteChampTexteMathLive(this, 3)\n      cont2 += `<br>${numAlpha(3)} Déterminer le (ou les) antécédent(s) de $${b}$.`\n      cont2 += ajouteChampTexteMathLive(this, 4)\n    }\n    this.contenu += deuxColonnes(cont1, cont2)\n    this.contenu += mathalea2d({ xmin: -7, ymin: -4.5, xmax: 7, ymax: 4.5, pixelsParCm: 30 }, r, gr)\n    this.contenuCorrection = `${numAlpha(0)} L'image de $${x0}$ est $${a}$, on note $f(${x0})=${a}$.`\n    setReponse(this, 1, a)\n    this.contenuCorrection += `<br>${numAlpha(1)} L'image de $${x0 + 5}$ est $${(b + c) / 2}$, on note $f(${x0 + 5})=${(b + c) / 2}$.`\n    setReponse(this, 2, (b + c) / 2)\n    if (ordre === 1) {\n      this.contenuCorrection += `<br>${numAlpha(2)} $${b}$ a pour unique antécédent $${x0 + 4}$, on note $f(${x0 + 4})=${b}$.`\n      setReponse(this, 3, x0 + 4)\n      this.contenuCorrection += `<br>${numAlpha(3)} $${c}$ a deux antécédents $${x0 + 2}$ et $${x0 + 6}$, on note $f(${x0 + 2})=f(${x0 + 6})=${c}$.`\n      setReponse(this, 4, [`${x0 + 2};${x0 + 6}`, `${x0 + 6};${x0 + 2}`])\n    } else {\n      this.contenuCorrection += `<br>${numAlpha(2)} $${c}$ a deux antécédents $${x0 + 2}$ et $${x0 + 6}$, on note $f(${x0 + 2})=f(${x0 + 6})=${c}$.`\n      setReponse(this, 3, [`${x0 + 2};${x0 + 6}`, `${x0 + 6};${x0 + 2}`])\n      this.contenuCorrection += `<br>${numAlpha(3)} $${b}$ a pour unique antécédent $${x0 + 4}$, on note $f(${x0 + 4})=${b}$.`\n      setReponse(this, 4, x0 + 4)\n    }\n    if (this.interactif && context.isHtml) {\n      this.contenu += `<br><button class=\"ui button checkReponses\" type=\"submit\" style=\"margin-bottom: 20px\" id=\"btnValidationEx${this.numeroExercice}\">Vérifier les réponses</button>`\n    }\n    if (!context.isHtml) {\n      this.contenu = texConsigne('') + this.contenu.replace(/<br><br>/g, '\\n\\n\\\\medskip\\n').replace(/<br>/g, '\\\\\\\\\\n')\n      this.contenuCorrection = this.contenuCorrection.replace(/<br><br>/g, '\\n\\n\\\\medskip\\n').replace(/<br>/g, '\\\\\\\\\\n')\n    } else {\n      this.contenuCorrection = `<div style=\"line-height: ${this.spacingCorr};\">\\n${this.contenuCorrection}\\n</div>`\n    }\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}