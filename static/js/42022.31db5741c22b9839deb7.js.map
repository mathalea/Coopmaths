{"version":3,"sources":["webpack://mathalea/./src/js/exercices/1e/1F10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["math","simplify","parse","derivative","titre","CalculsDeDerives","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","reglesDeSimplifications","rules","slice","splice","findIndex","rule","l","nouvelleVersion","listeTypeDeQuestions_disponibles","listeQuestions","listeCorrections","liste_valeurs","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","n","m","expression","ensembleDerivation","i","cpt","randint","ecritureAlgebrique","ecritureAlgebriqueSauf1","lettreMinusculeDepuisChiffre","toTex","replaceAll","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/42022.31db5741c22b9839deb7.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes,ecritureAlgebrique,ecritureAlgebriqueSauf1,lettreMinusculeDepuisChiffre} from '../../modules/outils.js'\nimport {simplify, parse, derivative } from 'mathjs'\nconst math = { simplify: simplify, parse: parse, derivative: derivative}\nexport const titre = 'Calculs de dérivées'\n\n/**\n * Calculs de dérivés\n * @author Rémi Angot\n * Référence 1F10\n*/\nexport default function CalculsDeDerives() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"Pour chacune des fonctions suivantes, dire sur quel ensemble elle est dérivable, puis déterminer l'expression de sa fonction dérivée.\";\n  this.nbQuestions = 6;\n  this.nbCols = 2; // Nombre de colonnes pour la sortie LaTeX\n  this.nbColsCorr = 2; // Nombre de colonnes dans la correction pour la sortie LaTeX\n  this.sup = 1;\n  // On modifie les règles de simplifications par défaut de math.js pour éviter 10x+10 = 10(x+1) et -4x=(-4x)\n  let reglesDeSimplifications = math.simplify.rules.slice();\n  reglesDeSimplifications.splice(reglesDeSimplifications.findIndex(rule => rule.l == \"n1*n2 + n2\"), 1);\n  reglesDeSimplifications.splice(reglesDeSimplifications.findIndex(rule => rule.l == \"n1*n3 + n2*n3\"), 1);\n  //    reglesDeSimplifications.push({l:\"-(n1*v^2)\",r:\"-n1*v^2\"})     \n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    this.liste_valeurs = []; // Les questions sont différentes du fait du nom de la fonction, donc on stocke les valeurs\n\n    let listeTypeDeQuestions_disponibles;\n    if (this.sup == 1) {\n      listeTypeDeQuestions_disponibles = ['ax+b', 'a', 'ax2+bx+c', 'xn', 'xn+xm', '1/x', 'xn+1/x', '1/xn', 'xn+1/xm', 'racine(x)'];\n    }\n    if (this.sup == 2) {\n      listeTypeDeQuestions_disponibles = ['ax+b', 'axn', 'a/x', 'a/xn', 'racine(ax)'];\n    }\n    if (this.sup == 3) {\n      listeTypeDeQuestions_disponibles = ['ax+b', 'axn', 'a/x', 'a/xn', 'racine(ax)'];\n    }\n    let listeTypeDeQuestions = combinaisonListes(listeTypeDeQuestions_disponibles, this.nbQuestions);\n\n\n    for (let i = 0, texte, texteCorr, a, b, c, n, m, expression, ensembleDerivation, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case 'a':\n          a = randint(-10, 10, 0);\n          expression = `${a}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case 'ax+b':\n          a = randint(-10, 10, 0);\n          b = randint(-10, 10, 0);\n          expression = `${a}x  ${ecritureAlgebrique(b)}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case 'ax2+bx+c':\n          a = randint(-10, 10, 0);\n          b = randint(-10, 10, 0);\n          c = randint(-10, 10, 0);\n          expression = `${a} x^2  ${ecritureAlgebriqueSauf1(b)} x  ${ecritureAlgebrique(c)}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case 'xn':\n          n = randint(2, 10);\n          expression = `x^${n}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case 'xn+1/x':\n          n = randint(2, 10);\n          expression = `x^${n}+1/x`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case 'xn+1/xm':\n          n = randint(2, 10);\n          m = randint(2, 10, m);\n          expression = `x^${n}+1/x^${m}`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case 'xn+xm':\n          n = randint(2, 10);\n          m = randint(2, 10, m);\n          expression = `x^${n}+x^${m}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case 'axn':\n          a = randint(-10, 10, [0, 1, -1]);\n          n = randint(2, 10);\n          expression = `${a}x^${n}`;\n          ensembleDerivation = `\\\\mathbb{R}`;\n          break;\n        case '1/x':\n          expression = `1/x`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case 'a/x':\n          a = randint(-10, 10, [0, 1]);\n          expression = `${a}/x`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case '1/xn':\n          n = randint(2, 10);\n          expression = `${1}/x^${n}`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case 'a/xn':\n          a = randint(-10, 10, [1, 0]);\n          n = randint(2, 10);\n          expression = `${a}/x^${n}`;\n          ensembleDerivation = `\\\\mathbb{R}^{\\\\text{*}}`;\n          break;\n        case 'racine(x)':\n          expression = `sqrt(x)`;\n          ensembleDerivation = `[0,+\\\\infin[`;\n          break;\n        case 'racine(ax)':\n          a = randint(2, 10, [4, 9]);\n          expression = `sqrt(${a}x)`;\n          ensembleDerivation = `[0,+\\\\infin[`;\n          break;\n\n      }\n\n      texte = `$${lettreMinusculeDepuisChiffre(i + 6)}:x\\\\longmapsto ${math.parse(expression).toTex({ 'implicit': 'hide' }).replaceAll('\\\\cdot', '')}$`;\n      texteCorr = `$${lettreMinusculeDepuisChiffre(i + 6)}$ est dérivable sur $${ensembleDerivation}$ et $ ${lettreMinusculeDepuisChiffre(i + 6)}':x\\\\longmapsto ${math.simplify(math.derivative(expression, 'x'), reglesDeSimplifications).toTex({ 'implicit': 'hide' }).replaceAll('\\\\cdot', '')}$`;\n\n      texte = texte.replaceAll('frac', 'dfrac');\n      texteCorr = texteCorr.replaceAll('frac', 'dfrac');\n\n\n      if (this.liste_valeurs.indexOf(expression) == -1) {\n        this.liste_valeurs.push(expression);\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Fonctions de base \\n2 : ku']; //\\n3 : u/v, uv'];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}