{"version":3,"file":"js/43557.9633427e5341ca8b515c.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C30-7.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { calcul, listeQuestionsToContenu, combinaisonListes, choice, range, rangeMinMax, texNombre3, texteEnCouleurEtGras, enleveElement, numAlpha, randint, lampeMessage } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nimport { min } from 'mathjs'\nimport { context } from '../../modules/context.js'\nimport { glisseNombre, mathalea2d } from '../../modules/2d.js'\nexport const amcReady = true\nexport const amcType = 'qcmMono'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\nexport const titre = 'Par combien diviser un nombre pour que le chiffre des unités devienne le chiffre des ...'\n\n// Gestion de la date de publication initiale\nexport const dateDePublication = '04/11/2021'\n\n/**\n * Presentation didactique : Par combien diviser un nombre pour que le chiffre des unités devienne le chiffre des ...\n * @author Eric Elter (inspiré par Aude Duvold)\n * Référence 6C30-7\n */\nexport default function DiviserUnNombreParPuissanceDeDix () {\n  'use strict'\n  Exercice.call(this)\n  this.nbQuestions = 5 // Ici le nombre de questions\n  this.consigne = ''\n  this.sup = false\n  this.sup2 = true\n  this.listePackages = 'bclogo'\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    this.autoCorrection = []\n    const choixUnites = ['millièmes', 'centièmes', 'dixièmes']\n    let listeChoixAlea = range(2)\n    if (!this.sup2 || this.interactif) { this.nbQuestions = min(this.nbQuestions, 3) }\n    if (context.isAmc) { this.sup2 = false }\n    if (this.interactif) {\n      this.introduction = lampeMessage({\n        titre: 'Aucun raisonnement écrit ne vous est demandé.',\n        texte: ' Vous pouvez, tout de même, le faire au brouillon sur un exemple avant de choisir une réponse en ligne.',\n        couleur: 'nombres'\n      })\n    } else {\n      this.introduction = lampeMessage({\n        titre: 'Bien lire les consignes.',\n        texte: '',\n        couleur: 'nombres'\n      })\n    }\n    listeChoixAlea = combinaisonListes(listeChoixAlea, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      const choixAlea = listeChoixAlea[0]\n      listeChoixAlea.splice(0, 1)\n      const centaine = randint(0, 1) === 0 ? choice(rangeMinMax(0, 9)) : 0\n      const dizaine = choice(rangeMinMax(0, 9), [centaine])\n      const unite = choice(rangeMinMax(0, 9), [centaine, dizaine])\n      const dixieme = (this.sup) ? 0 : choice(rangeMinMax(0, 9), [centaine, dizaine, unite])\n      const centieme = ((randint(0, 1) !== 0) || (this.sup)) ? 0 : choice(rangeMinMax(0, 9), [centaine, dizaine, unite, dixieme])\n      const exemple = calcul(centaine * 100 + dizaine * 10 + unite + dixieme / 10 + centieme / 100)\n      if (this.sup2 & !this.interactif) {\n        texte = `Voici un nombre : $${texNombre3(exemple)}$.<br>`\n        texte += `${numAlpha(0)} Entourer le chiffre des unités de ce nombre.<br>`\n        texte += `${numAlpha(1)} Compléter les phrases suivantes.<br>`\n        texte += `Diviser $${texNombre3(exemple)}$ par $${texNombre3(calcul(10 ** (3 - choixAlea)))}$, c’est trouver le nombre $\\\\ldots\\\\ldots\\\\ldots$ fois plus $\\\\ldots\\\\ldots\\\\ldots$ que $${texNombre3(exemple)}$.<br>`\n        texte += `Le chiffre des unités de $${texNombre3(exemple)}$ devient, alors, le chiffre des $\\\\ldots\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ et donc $${texNombre3(exemple)} \\\\div ${texNombre3(calcul(10 ** (3 - choixAlea)))} =\\\\ldots\\\\ldots\\\\ldots\\\\ldots$<br>`\n\n        texteCorr = `${numAlpha(0)} $${unite}$ est le chiffre des unités de $${texNombre3(exemple)}$.<br>`\n        texteCorr += `${numAlpha(1)} Diviser $${texNombre3(exemple)}$ par $${texNombre3(calcul(10 ** (3 - choixAlea)))}$, c’est trouver le nombre ${texteEnCouleurEtGras(texNombre3(calcul(10 ** (3 - choixAlea))))} fois plus ${texteEnCouleurEtGras('petit')} `\n        texteCorr += `que $${texNombre3(exemple)}$.<br>`\n        texteCorr += `Le chiffre des unités de $${texNombre3(exemple)}$ devient, alors, le chiffre des ${texteEnCouleurEtGras(choixUnites[choixAlea])} et donc $${texNombre3(exemple)} \\\\div ${texNombre3(calcul(10 ** (3 - choixAlea)))} =$ ${texteEnCouleurEtGras(texNombre3(exemple * calcul(10 ** (choixAlea - 3))))}.<br>`\n      } else {\n        texte = `Par combien diviser un nombre pour que tous ses chiffres changent de position et que le chiffre des unités devienne le chiffre des ${choixUnites[choixAlea]} ?`\n\n        texteCorr = `Prenons un exemple : ${texNombre3(exemple)}.<br>`\n        texteCorr += `$${texNombre3(exemple)} \\\\div ${texNombre3(calcul(10 ** (3 - choixAlea)))} = ${texNombre3(exemple * calcul(10 ** (choixAlea - 3)))}$<br>`\n        texteCorr += `Si on veut que son chiffre des ${texteEnCouleurEtGras('unités')} devienne le chiffre des ${texteEnCouleurEtGras(choixUnites[choixAlea])}, on doit diviser le nombre par ${texteEnCouleurEtGras(texNombre3(calcul(10 ** (3 - choixAlea))))}.`\n        const aleaFaux = range(6, [3, choixAlea])\n        enleveElement(aleaFaux)\n        const choixAleaFaux = []\n        for (let kk = 0; kk < 6; kk++) {\n          choixAleaFaux.push(texNombre3(calcul(10 ** (3 - aleaFaux[kk]))))\n        }\n        this.autoCorrection[i] = {}\n        this.autoCorrection[i].enonce = `${texte}\\n`\n        this.autoCorrection[i].propositions = [\n          {\n            texte: `$${texNombre3(calcul(10 ** (3 - choixAlea)))}$`,\n            statut: true\n          },\n          {\n            texte: `$${choixAleaFaux[0]}$`,\n            statut: false\n          },\n          {\n            texte: `$${choixAleaFaux[1]}$`,\n            statut: false\n          }\n        ]\n        this.autoCorrection[i].options = {\n          ordered: false,\n          lastChoice: 4\n        }\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n      if (context.isHtml) texteCorr += mathalea2d({ xmin: 2.5, xmax: 27.5, ymin: -5, ymax: 5.5 }, glisseNombre(exemple, choixAlea - 3))\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Les nombres-exemples sont entiers', false]\n  this.besoinFormulaire2CaseACocher = ['Exercice avec un raisonnement associé', true]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","dateDePublication","DiviserUnNombreParPuissanceDeDix","Exercice","this","nbQuestions","consigne","sup","sup2","listePackages","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","choixUnites","listeChoixAlea","range","interactif","min","context","introduction","lampeMessage","texte","couleur","combinaisonListes","texteCorr","i","cpt","choixAlea","splice","centaine","randint","choice","rangeMinMax","dizaine","unite","dixieme","centieme","exemple","calcul","texNombre3","numAlpha","texteEnCouleurEtGras","aleaFaux","enleveElement","choixAleaFaux","kk","push","enonce","propositions","statut","options","ordered","lastChoice","propositionsQcm","mathalea2d","xmin","xmax","ymin","ymax","glisseNombre","indexOf","listeQuestionsToContenu","besoinFormulaireCaseACocher","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}