{"version":3,"file":"js/43087.73b5e2156a967c9acb0a.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6S11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, shuffle, arrondiVirgule, prenom, texNombre, premiereLettreEnMajuscule, numAlpha } from '../../modules/outils.js'\nexport const titre = 'Organiser des données dans un tableau'\n\n/**\n * Organiser donnees depuis texte\n * @author Erwan Duplessy\n * Référence 6S11\n */\n\n// source : http://www.ac-grenoble.fr/savoie/pedagogie/docs_pedas/ogd_c2_c3/ogd_c2_c3.pdf\n\nexport default function OrganiserDonneesDepuisTexte () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Répondre aux questions à l'aide du texte.\"\n  this.nbQuestions = 4\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = false // false -> effectif ; true -> masse\n  this.sup2 = 4 // paramètre nombre de fruit\n  context.isHtml ? this.spacing = 2 : this.spacing = 1\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const nbAmis = 4; let texte; let texteCorr; let m; let S // min = 2\n    const nbFruits = parseInt(this.sup2) // min = 2\n    const lstPrenomExo = []\n    while (lstPrenomExo.length < nbAmis) {\n      const p = prenom()\n      if (!lstPrenomExo.includes(p)) {\n        lstPrenomExo.push(p)\n      }\n    }\n\n    const lstFruit = ['pomme', 'poire', 'kiwi', 'pêche', 'coing', 'melon', 'citron', 'banane', 'mangue']\n    const lstFruitExo = []\n    // Choisir les fruits :\n    for (let i = 0; i < nbFruits; i++) {\n      lstFruitExo.push(choice(lstFruit, lstFruitExo))\n    }\n    // Choisir les quantités de fruits pour chaque prénoms :\n    const lstTabVal = [] // tableau i : amis et j : fruits\n    let L = [] // tab temporaire\n    for (let i = 0; i < nbAmis; i++) {\n      for (let j = 0; j < nbFruits; j++) {\n        if (this.sup) {\n          if (randint(0, 8) > 0) {\n            L.push(randint(0, 100) / 10)\n          } else {\n            L.push(0)\n          }\n        } else {\n          L.push(randint(0, 10))\n        }\n      }\n      lstTabVal.push(L)\n      L = []\n    }\n    // Affiche l'énoncé :\n    texte = 'Plusieurs amis reviennent du marché. Il s\\'agit de '\n    for (let i = 0; i < nbAmis - 2; i++) {\n      texte += lstPrenomExo[i] + ', '\n    }\n    texte += lstPrenomExo[nbAmis - 2] + ' et ' + lstPrenomExo[nbAmis - 1] + '.<br>'\n    let N\n    // boucle sur les phrases. 1 phrase par personne.\n    for (let i = 0; i < nbAmis; i++) {\n      texte += lstPrenomExo[i] + ' rapporte '\n      L = [] // ne contient que les fruits d'effectifs strictement positifs\n      for (let j = 0; j < nbFruits; j++) {\n        N = lstTabVal[i][j]\n        if (N > 0) {\n          L.push([N, lstFruitExo[j]])\n        }\n      }\n      m = L.length\n      L = shuffle(L) // mélange l'ordre des fruits\n      for (let k = 0; k < m; k++) {\n        if (this.sup) {\n          texte += texNombre(L[k][0]) + ' kg de ' + L[k][1] + 's'\n        } else {\n          texte += texNombre(L[k][0]) + ' ' + L[k][1]\n          if (L[k][0] > 1) { texte += 's' }\n        }\n        if (k < m - 2) { texte += ', ' }\n        if (k === m - 2) { texte += ' et ' }\n      }\n      texte += '. <br>'\n    }\n    texte += '<br>'\n    texte += numAlpha(0) + ' Remplir le tableau suivant. <br>'\n\n    if (this.sup) {\n      texte += numAlpha(1) + ' Quel est la masse totale de fruits achetés par les amis ? <br>'\n    } else {\n      texte += numAlpha(1) + ' Quel est le nombre total de fruits achetés par les amis ? <br>'\n    }\n    texte += numAlpha(2) + ' Qui a rapporté le plus de fruits ? <br>'\n    texte += numAlpha(3) + ' Quel fruit a été rapporté en la plus grosse quantité ? <br><br>'\n\n    texte += '$\\\\begin{array}{|l|' + 'c|'.repeat(nbFruits + 1) + '}\\n'\n    texte += '\\\\hline\\n'\n    texte += ' '\n    for (let j = 0; j < nbFruits; j++) {\n      texte += ' & \\\\textbf{\\\\text{' + premiereLettreEnMajuscule(lstFruitExo[j]) + '}}'\n    }\n    texte += '& \\\\textbf{TOTAL}'\n    texte += '\\\\\\\\\\\\hline\\n'\n    for (let i = 0; i < nbAmis; i++) {\n      texte += `\\\\textbf{\\\\text{${lstPrenomExo[i]}}}` + '& '.repeat(nbFruits) + ' & '\n      texte += '\\\\\\\\\\\\hline\\n'\n    }\n    texte += '\\\\textbf{TOTAL}' + '& '.repeat(nbFruits) + ' & '\n    texte += '\\\\\\\\\\\\hline\\n'\n    texte += '\\\\end{array}\\n$'\n\n    // CORRECTION\n    // Question 1 :\n    texteCorr = numAlpha(0) + ' Voici le tableau complet. <br>'\n    texteCorr += '$\\\\begin{array}{|l|' + 'c|'.repeat(nbFruits + 1) + '}\\n'\n    texteCorr += '\\\\hline\\n'\n    texteCorr += ' '\n    for (let j = 0; j < nbFruits; j++) {\n      texteCorr += ` & \\\\text{${lstFruitExo[j]}}`\n    }\n    texteCorr += '& TOTAL'\n    texteCorr += '\\\\\\\\\\\\hline\\n'\n    for (let i = 0; i < nbAmis; i++) {\n      texteCorr += `\\\\text{${lstPrenomExo[i]}}`\n      let S = 0 // pour calculer les sommes\n      for (let j = 0; j < nbFruits; j++) {\n        texteCorr += '& ' + texNombre(lstTabVal[i][j]) // valeur dans le tableau\n        S += lstTabVal[i][j] // somme d'une ligne\n      }\n      texteCorr += '& ' + arrondiVirgule(S)\n      texteCorr += '\\\\\\\\\\\\hline\\n'\n    }\n    texteCorr += 'TOTAL'\n    let SommeTotale = 0 // somme totale de tous les fruits\n    for (let j = 0; j < nbFruits; j++) {\n      S = 0\n      for (let i = 0; i < nbAmis; i++) {\n        S += lstTabVal[i][j] // somme d'une colonne\n      }\n      // texteCorr += '& ' + Math.round(S*10)/10;\n      texteCorr += '& ' + arrondiVirgule(S, 1)\n      // texteCorr += '& ' + texNombre(S,1);\n      SommeTotale += S\n    }\n    texteCorr += '& ' + arrondiVirgule(SommeTotale)\n    texteCorr += '\\\\\\\\\\\\hline\\n'\n    texteCorr += '\\\\end{array}\\n$'\n    texteCorr += '<br>'\n\n    // Question 2 :\n    SommeTotale = arrondiVirgule(SommeTotale)\n    if (this.sup) {\n      texteCorr += numAlpha(1) + ` La masse totale de fruits est : ${SommeTotale} kg. <br>`\n    } else {\n      texteCorr += numAlpha(1) + ` Le nombre total de fruits est : ${SommeTotale}. <br>`\n    }\n\n    // Question 3 :\n    texteCorr += numAlpha(2) + ' On regarde la dernière colonne du tableau. '\n    let lstmax = [] // liste des prénoms solutions\n    let nmax = 0 // nombre max de fruit pour une personne\n    for (let i = 0; i < nbAmis; i++) {\n      S = 0\n      for (let j = 0; j < nbFruits; j++) {\n        S += lstTabVal[i][j] // somme d'une ligne\n      }\n      if (S === nmax) {\n        lstmax.push(lstPrenomExo[i])\n      }\n      if (S > nmax) {\n        nmax = S\n        lstmax = [lstPrenomExo[i]]\n      }\n    }\n    nmax = arrondiVirgule(nmax, 1)\n    if (lstmax.length > 1) {\n      texteCorr += 'Les personnes qui ont rapporté le plus de fruits sont : '\n      texteCorr += lstmax[0]\n      for (let k = 1; k < lstmax.length; k++) {\n        texteCorr += ` et ${lstmax[k]}`\n      }\n      if (this.sup) {\n        texteCorr += `. La masse maximale rapportée est de ${nmax} kg.<br>`\n      } else {\n        texteCorr += `. Le nombre maximal de fruits rapporté par une personne est de ${nmax}.<br>`\n      }\n    } else {\n      if (this.sup) {\n        texteCorr += `La personne qui a rapporté le plus de fruits est ${lstmax}. Cette masse maximale est de ${nmax} kg.<br>`\n      } else {\n        texteCorr += `La personne qui a rapporté le plus de fruits est ${lstmax}. Ce nombre maximal de fruits est de ${nmax}.<br>`\n      }\n    }\n\n    // Question 4 :\n    texteCorr += numAlpha(3) + ' On regarde la dernière ligne du tableau. '\n    let fmax = [] // liste des fruits apporté en quantité max\n    nmax = 0 // nombre max par type de fruit\n    for (let j = 0; j < nbFruits; j++) {\n      S = 0\n      for (let i = 0; i < nbAmis; i++) {\n        S += lstTabVal[i][j] // somme d'une colonne\n      }\n      if (S === nmax) {\n        fmax.push(lstFruitExo[j])\n      }\n      if (S > nmax) {\n        nmax = S\n        fmax = [lstFruitExo[j]]\n      }\n    }\n    nmax = arrondiVirgule(nmax, 1)\n    if (fmax.length > 1) {\n      if (this.sup) {\n        texteCorr += 'Les fruits présents en la plus grosse quantité sont : '\n      } else {\n        texteCorr += 'Les fruits les plus nombreux sont : '\n      }\n      texteCorr += 'Les fruits les plus nombreux sont : '\n      texteCorr += `les ${fmax[0]}s`\n      for (let k = 1; k < fmax.length; k++) {\n        texteCorr += ` et les ${fmax[k]}s`\n      }\n      texteCorr += `. Il y en a ${nmax} de chaque sorte.<br>`\n    } else {\n      if (this.sup) {\n        texteCorr += `Il y a plus de ${fmax}s que d'autres fruits. Il y en a ${nmax} kg.`\n      } else {\n        texteCorr += `Il y a plus de ${fmax}s que d'autres fruits. Il y en a ${nmax}.`\n      }\n    }\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaire2Numerique = ['Nombre de fruits différents', 8]\n  this.besoinFormulaireCaseACocher = ['Pour utiliser des nombres décimaux et des masses', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","OrganiserDonneesDepuisTexte","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","sup2","context","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","m","S","nbFruits","parseInt","lstPrenomExo","length","p","prenom","includes","push","lstFruit","lstFruitExo","i","choice","lstTabVal","N","L","j","randint","nbAmis","shuffle","k","texNombre","numAlpha","repeat","premiereLettreEnMajuscule","arrondiVirgule","SommeTotale","lstmax","nmax","fmax","listeQuestionsToContenu","besoinFormulaire2Numerique","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}