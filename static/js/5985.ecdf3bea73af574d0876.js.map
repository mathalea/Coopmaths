{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6D12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Calculs_de_durees_ou_d_horaires","Exercice","this","consigne","sup","spacing","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","type_de_contexte","combinaisonListes","typesDeQuestions","d1","h1","m1","d2","h2","m2","d","texte","texteCorr","i","cpt","randint","minToHoraire","minToHour","prenom","prenomF","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/5985.ecdf3bea73af574d0876.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes,minToHoraire,minToHour,prenomF,prenom} from '../../modules/outils.js'\n\n\nexport const titre = 'Calculer des durées ou déterminer un horaire'\n\n/**\n * Problèmes où il faut calculer la durée d'un évèbement ou un horaire.\n * Paramétrage possible :\n * * 1 : calculs de durées\n * * 2 : calculer l'heure de début\n * * 3 : calculer l'heure de fin\n * * 4 : mélange des 3 types précédents\n * @author Rémi Angot\n * Référence 6D12\n */\nexport default function Calculs_de_durees_ou_d_horaires() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.sup = 4;\n  this.spacing = 2;\n  this.nbQuestions = 3;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    const type_de_contexte = combinaisonListes(\n      [1, 2, 3, 4, 5],\n      this.nbQuestions\n    );\n    let typesDeQuestions; // 1 : calcul de durées // 2 : calcul de l'horaire de début // 3 : calcul de l'horaire de fin // 4 : mélange\n\n    if (this.sup < 4) {\n      // que des questions de niveau 1 ou que des questions de niveau 2\n      typesDeQuestions = combinaisonListes([this.sup], this.nbQuestions);\n    } else {\n      // un mélange équilibré de questions\n      typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions);\n    }\n\n    for (let i = 0, d1, h1, m1, d2, h2, m2, d, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      //d1 : heure de début (h1 heures m1 min)\n      //d2 : heure de fin (h2 heures m2 min)\n      //d : durée\n      if (type_de_contexte[i] == 1) {\n        h1 = randint(20, 22);\n        m1 = randint(35, 58);\n        d1 = h1 * 60 + m1;\n        h2 = h1 + 2;\n        m2 = randint(1, m1); // pour s'assurer qu'il y a une retenue dans d2-d1\n        d2 = h2 * 60 + m2;\n        d = d2 - d1;\n        d1 = minToHoraire(d1);\n        d2 = minToHoraire(d2);\n        d = minToHour(d);\n\n        if (typesDeQuestions[i] == 1) {\n          texte = `La diffusion d'un film commence à ${d1} et se termine à ${d2}. Combien de temps a duré ce film ?`;\n          texteCorr = `${d2} - ${d1} = ${d}`;\n          texteCorr += \"<br>\";\n          texteCorr += `Le film dure ${d}.`;\n        }\n        if (typesDeQuestions[i] == 2) {\n          texte = `Un film dure ${d} et commence à ${d1}. À quelle heure se terminera-t-il ?`;\n          texteCorr = `${d1} + ${d} = ${d2}`;\n          texteCorr += \"<br>\";\n          texteCorr += `Le film terminera à ${d2}.`;\n        }\n        if (typesDeQuestions[i] == 3) {\n          texte = `Un film de ${d} termine à ${d2}. À quelle heure a-t-il commencé ?`;\n          texteCorr = `${d2} - ${d} = ${d1}`;\n          texteCorr += \"<br>\";\n          texteCorr += `Le film a commencé à ${d1}.`;\n        }\n      }\n\n      if (type_de_contexte[i] == 2) {\n        h1 = randint(20, 23);\n        m1 = randint(35, 58);\n        d1 = h1 * 60 + m1;\n        h2 = h1 + 1;\n        m2 = randint(1, m1); // pour s'assurer qu'il y a une retenue dans d2-d1\n        d2 = h2 * 60 + m2;\n        d = d2 - d1;\n        while (d < 27 || d > 75 || d == 60) {\n          h1 = randint(20, 23);\n          m1 = randint(35, 58);\n          d1 = h1 * 60 + m1;\n          h2 = h1 + 2;\n          m2 = randint(1, m1); // pour s'assurer qu'il y a une retenue dans d2-d1\n          d2 = h2 * 60 + m2;\n          d = d2 - d1;\n        }\n        d1 = minToHoraire(d1);\n        d2 = minToHoraire(d2);\n        d = minToHour(d);\n\n        if (typesDeQuestions[i] == 1) {\n          texte = `Sur son service de streaming favori, ${prenom()} commence à regarder une série à ${d1} et celle-ci se termine à ${d2}. Combien de temps a duré l'épisode ?`;\n          texteCorr = `${d2} - ${d1} = ${d}`;\n          texteCorr += \"<br>\";\n          texteCorr += `La série a duré ${d}.`;\n        }\n        if (typesDeQuestions[i] == 2) {\n          texte = `${prenom()} allume son ordinateur à ${d1} pour regarder une série de ${d}. À quelle heure la série s'achèvera-t-elle ?`;\n          texteCorr = `${d1} + ${d} = ${d2}`;\n          texteCorr += \"<br>\";\n          texteCorr += `La série s'achèvera à ${d2}.`;\n        }\n        if (typesDeQuestions[i] == 3) {\n          texte = `${prenom()} termine de regarder une série de ${d} à ${d2}. À quelle heure la série a-t-elle commencé ?`;\n          texteCorr = `${d2} - ${d} = ${d1}`;\n          texteCorr += \"<br>\";\n          texteCorr += `Elle a commencé à ${d1}.`;\n        }\n      }\n\n      if (type_de_contexte[i] == 3) {\n        h1 = randint(8, 21);\n        m1 = randint(1, 58);\n        d1 = h1 * 60 + m1;\n        h2 = h1 + randint(1, 2);\n        m2 = randint(1, 59); // pas forcément de retenue dans d2-d1\n        d2 = h2 * 60 + m2;\n        d = d2 - d1;\n        d1 = minToHoraire(d1);\n        d2 = minToHoraire(d2);\n        d = minToHour(d);\n\n        if (typesDeQuestions[i] == 1) {\n          texte = `Une émission télévisée est diffusée de ${d1} à ${d2}. Combien de temps dure-t-elle ?`;\n          texteCorr = `${d2} - ${d1} = ${d}`;\n          texteCorr += \"<br>\";\n          texteCorr += `L'émission dure ${d}.`;\n        }\n        if (typesDeQuestions[i] == 2) {\n          texte = `Une émission télévisée de ${d} commence à ${d1}. À quelle heure s'achèvera-t-elle ?`;\n          texteCorr = `${d1} + ${d} = ${d2}`;\n          texteCorr += \"<br>\";\n          texteCorr += `L'émission s'achèvera à ${d2}.`;\n        }\n        if (typesDeQuestions[i] == 3) {\n          texte = `À ${d2}, ${prenom()} termine de regarder une émission de ${d}. À quelle heure l'émission a-t-elle commencé ?`;\n          texteCorr = `${d2} - ${d} = ${d1}`;\n          texteCorr += \"<br>\";\n          texteCorr += `L'émission a commencé à ${d1}.`;\n        }\n      }\n\n      if (type_de_contexte[i] == 4) {\n        h1 = randint(13, 16);\n        m1 = randint(1, 58);\n        d1 = h1 * 60 + m1;\n        h2 = h1 + randint(1, 2);\n        m2 = randint(1, 58); // pas forcément de retenue dans d2-d1\n        d2 = h2 * 60 + m2;\n        d = d2 - d1;\n        while (d < 27 || d > 75 || d == 60) {\n          h1 = randint(13, 16);\n          m1 = randint(35, 58);\n          d1 = h1 * 60 + m1;\n          h2 = h1 + randint(1, 2);\n          m2 = randint(1, m1); // pour s'assurer qu'il y a une retenue dans d2-d1\n          d2 = h2 * 60 + m2;\n          d = d2 - d1;\n        }\n        d1 = minToHoraire(d1);\n        d2 = minToHoraire(d2);\n        d = minToHour(d);\n\n        if (typesDeQuestions[i] == 1) {\n          texte = `Un papa regarde la compétition de gymnastique de sa fille  de ${d1} à ${d2}. Calculer la durée de cette compétition.`;\n          texteCorr = `${d2} - ${d1} = ${d}`;\n          texteCorr += \"<br>\";\n          texteCorr += `La compétition dure ${d}.`;\n        }\n        if (typesDeQuestions[i] == 2) {\n          texte = `Une compétition de gymnastique commence à ${d1} et dure ${d}. À quelle heure sera-t-elle terminée ?`;\n          texteCorr = `${d1} + ${d} = ${d2}`;\n          texteCorr += \"<br>\";\n          texteCorr += `La compétition terminera à ${d2}.`;\n        }\n        if (typesDeQuestions[i] == 3) {\n          texte = `Une compétition de gymnastique qui se termine à ${d2} a duré ${d}. À quelle heure a-t-elle commencé.`;\n          texteCorr = `${d2} - ${d} = ${d1}`;\n          texteCorr += \"<br>\";\n          texteCorr += `La compétition a commencé à ${d1}.`;\n        }\n      }\n\n      if (type_de_contexte[i] == 5) {\n        h1 = randint(8, 15);\n        m1 = randint(25, 58);\n        d1 = h1 * 60 + m1;\n        h2 = h1 + randint(2, 5);\n        m2 = randint(1, m1); // pour s'assurer qu'il y a une retenue dans d2-d1\n        d2 = h2 * 60 + m2;\n        d = d2 - d1;\n        while (d < 27 || d > 75 || d == 60) {\n          h1 = randint(20, 23);\n          m1 = randint(35, 58);\n          d1 = h1 * 60 + m1;\n          h2 = h1 + 2;\n          m2 = randint(1, m1); // pour s'assurer qu'il y a une retenue dans d2-d1\n          d2 = h2 * 60 + m2;\n          d = d2 - d1;\n        }\n        d1 = minToHoraire(d1);\n        d2 = minToHoraire(d2);\n        d = minToHour(d);\n\n        if (typesDeQuestions[i] == 1) {\n          texte = `Un train part à ${d1} et arrive à destination à ${d2}. Calculer la durée du trajet.`;\n          texteCorr = `${d2} - ${d1} = ${d}`;\n          texteCorr += \"<br>\";\n          texteCorr += `Le trajet dure ${d}.`;\n        }\n        if (typesDeQuestions[i] == 2) {\n          texte = `${prenomF()} monte dans le train à ${d1} pour un trajet qui doit durer ${d}. À quelle heure arrivera-t-elle ?`;\n          texteCorr = `${d1} + ${d} = ${d2}`;\n          texteCorr += \"<br>\";\n          texteCorr += `Elle arrivera à ${d2}.`;\n        }\n        if (typesDeQuestions[i] == 3) {\n          texte = `Un train arrive en gare à ${d2} après un trajet de ${d}. À quelle heure le voyage a-t-il commencé ?`;\n          texteCorr = `${d2} - ${d} = ${d1}`;\n          texteCorr += \"<br>\";\n          texteCorr += `Le voyage a commencé à ${d1}.`;\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    4,\n    \"1 : Calcul de durée\\n2 : Calcul de l'horaire de fin\\n3 : Calcul de l'horaire de début\\n4 : 3 types de questions\",\n  ];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}