{"version":3,"file":"js/48145.1a62d05557d9855c5fe2.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6M31-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, texNombrec, texNombre } from '../../modules/outils.js'\nexport const titre = 'Conversions avec des unités de volumes ou de capacités'\n\n/**\n * Conversions d'unités de volumes vers les unités de capacité ou inversement.\n *\n * Dans la correction, on passe systématiquement par l'équivalence dm3 = L\n *\n * * 1 : De dam3, m3, dm3, cm3 ou mm3 vers L ou inversement\n * * 2 :\n * * 3 :\n * * 4 :\n * * 5 :\n * * 6 : Un mélange de toutes les conversions\n * * Paramètre supplémentaire : utiliser des nombres décimaux (par défaut tous les nombres sont entiers)\n * @author Rémi Angot\n * Référence 6M31-2\n */\nexport default function UnitesDeVolumesEtDeCapacite (niveau = 1) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = niveau // Niveau de difficulté de l'exercice\n  this.sup2 = false // Avec des nombres décimaux ou pas\n  this.titre = titre\n  this.consigne = 'Compléter'\n  this.spacing = 2\n  this.nbQuestions = 8\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    this.sup = parseInt(this.sup)\n    if (this.sup === 1) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['dam3toL', 'm3toL', 'dm3toL', 'cm3toL'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup === 2) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['Ltodm3', 'Ltocm3', 'Ltom3'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup === 3) {\n      listeTypeDeQuestions = combinaisonListes(\n        [\n          'dam3toL',\n          'm3toL',\n          'dm3toL',\n          'cm3toL',\n          'mm3toL',\n          'Ltodm3',\n          'Ltocm3',\n          'Ltom3'\n        ],\n        this.nbQuestions\n      )\n    }\n    let listeDeN = []\n    if (this.sup2) {\n      listeDeN = combinaisonListes([1, 2, 3, 4], this.nbQuestions)\n    } else {\n      listeDeN = combinaisonListes([1, 2, 3, 4, 5, 6], this.nbQuestions)\n    }\n    for (\n      let i = 0, n, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      if (this.sup2) {\n        switch (listeDeN[i]) {\n          case 1:\n            n = calcul(randint(2, 9) / 10)\n            break\n          case 2:\n            n = calcul(randint(11, 99) / 100)\n            break\n          case 3:\n            n = calcul(randint(1, 9) * 10 + randint(1, 9) / 10)\n            break\n          case 4:\n            n = calcul(\n              randint(11, 99, [10, 20, 30, 40, 50, 60, 70, 80, 90]) / 100\n            )\n            break\n        }\n      } else {\n        switch (listeDeN[i]) {\n          case 1:\n            n = randint(2, 9)\n            break\n          case 2:\n            n = randint(11, 99)\n            break\n          case 3:\n            n = randint(1, 9) * 10\n            break\n          case 4:\n            n = randint(1, 9) * 100\n            break\n          case 5:\n            n = randint(11, 99) * 100\n            break\n          case 6:\n            n = randint(1, 9) * 1000\n            break\n        }\n      }\n      switch (listeTypeDeQuestions[i]) {\n        case 'dam3toL':\n          texte = `$${texNombre(n)}~\\\\text{dam}^3=\\\\dotfill~\\\\text{L}$`\n          texteCorr = `$${texNombre(n)}~\\\\text{dam}^3=${texNombre(\n            n\n          )}\\\\times1~000\\\\times1~000~\\\\text{dm}^3=${texNombrec(\n            n * 1000000\n          )}~\\\\text{L}$`\n          break\n        case 'm3toL':\n          texte = `$${texNombre(n)}~\\\\text{m}^3=\\\\dotfill~\\\\text{L}$`\n          texteCorr = `$${texNombre(n)}~\\\\text{m}^3=${texNombre(\n            n\n          )}\\\\times1~000~\\\\text{dm}^3=${texNombrec(n * 1000)}~\\\\text{L}$`\n          break\n        case 'dm3toL':\n          texte = `$${texNombre(n)}~\\\\text{dm}^3=\\\\dotfill~\\\\text{L}$`\n          texteCorr = `$${texNombre(n)}~\\\\text{dm}^3=${texNombre(\n            n\n          )}~\\\\text{L}$`\n          break\n        case 'cm3toL':\n          texte = `$${texNombre(n)}~\\\\text{cm}^3=\\\\dotfill~\\\\text{L}$`\n          texteCorr = `$${texNombre(n)}~\\\\text{cm}^3=${texNombre(\n            n\n          )}\\\\div 1~000~\\\\text{dm}^3=${texNombrec(n / 1000)}~\\\\text{L}$`\n          break\n        case 'mm3toL':\n          texte = `$${texNombre(n)}~\\\\text{mm}^3=\\\\dotfill~\\\\text{L}$`\n          texteCorr = `$${texNombre(n)}~\\\\text{mm}^3=${texNombre(\n            n\n          )}\\\\div1~000\\\\div 1~000~\\\\text{dm}^3=${texNombrec(\n            n / 1000000\n          )}~\\\\text{L}$`\n          break\n        case 'Ltodm3':\n          texte = `$${texNombre(n)}~\\\\text{L}=\\\\dotfill~\\\\text{dm}^3$`\n          texteCorr = `$${texNombre(n)}~\\\\text{L}=${texNombre(\n            n\n          )}~\\\\text{dm}^3$`\n          break\n        case 'Ltocm3':\n          texte = `$${texNombre(n)}~\\\\text{L}=\\\\dotfill~\\\\text{cm}^3$`\n          texteCorr = `$${texNombre(n)}~\\\\text{L}=${texNombre(\n            n\n          )}~\\\\text{dm}^3=${texNombre(\n            n\n          )}\\\\times1~000~\\\\text{cm}^3=${texNombrec(n * 1000)}~\\\\text{cm}^3$`\n          break\n        case 'Ltom3':\n          texte = `$${texNombre(n)}~\\\\text{L}=\\\\dotfill~\\\\text{m}^3$`\n          texteCorr = `$${texNombre(n)}~\\\\text{L}=${texNombre(\n            n\n          )}~\\\\text{dm}^3=${texNombre(n)}\\\\div1~000~\\\\text{m}^3=${texNombrec(\n            n / 1000\n          )}~\\\\text{m}^3$`\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    3,\n    '1 : Unités de volume vers litre\\n2 : Litre vers unités de volume\\n3 : Unités de volumes vers litre ou inversement '\n  ]\n  this.besoinFormulaire2CaseACocher = ['Avec des nombres décimaux']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","UnitesDeVolumesEtDeCapacite","niveau","Exercice","this","sup","sup2","consigne","spacing","nbQuestions","nbColsCorr","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","parseInt","combinaisonListes","listeDeN","n","texte","texteCorr","i","cpt","calcul","randint","texNombre","texNombrec","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}