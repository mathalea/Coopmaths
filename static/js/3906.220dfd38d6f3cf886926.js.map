{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/_Utiliser_le_codage_pour_decrire.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["Utiliser_le_codage_pour_decrire","Exercice","this","titre","nbQuestions","nbCols","nbColsCorr","sup","sup2","nouvelleVersion","type_de_questions_disponibles","listeQuestions","listeCorrections","nom","params_enonce","params_correction","objets_enonce","objets_correction","A","B","C","D","E","F","s1","s2","s3","s4","s5","s6","s7","s8","medAC","medBC","dBD","dBC","dAC","dAF","sommets","classe","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","creerNomDePolygone","push","shuffle","point","pointAdistance","randint","segment","similitude","pointSurSegment","longueur","mediatrice","droite","rotation","pointIntersectionDD","x","xmin","Math","min","ymin","y","xmax","max","ymax","pixelsParCm","scale","mainlevee","amplitude","codageAngleDroit","codeSegments","labelPoint","polygone","affiniteOrtho","angleOriente","translation2Points","codeAngle","length","mathalea2d","indexOf","listeQuestionsToContenu","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/3906.220dfd38d6f3cf886926.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport { listeQuestionsToContenu, randint, shuffle, combinaisonListes, creerNomDePolygone } from '../../modules/outils.js';\nimport { point, pointSurSegment, pointIntersectionDD, pointAdistance, labelPoint, droite, mediatrice, segment, polygone, translation2Points, rotation, affiniteOrtho, similitude, codageAngleDroit, codeSegments, codeAngle, longueur, angleOriente, mathalea2d } from '../../modules/2d.js';\n\nexport default function Utiliser_le_codage_pour_decrire() {\n  \"use strict\";\n  Exercice.call(this);\n  this.titre = \"Utiliser le codage pour décrire une figure\";\n  this.nbQuestions = 1;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 1;\n  this.sup2 = 1;\n  this.nouvelleVersion = function () {\n    let type_de_questions_disponibles;\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let nom, sommets = [], params_enonce, params_correction, objets_enonce, objets_correction;\n    let A, B, C, D, E, F, s1, s2, s3, s4, s5, s6, s7, s8, medAC, medBC, dBD, dBC, dAC, dAF;\n    if (this.classe == 6)\n      type_de_questions_disponibles = [1, 2, 3];\n    else\n      type_de_questions_disponibles = [1, 2, 3, 4];\n    let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions);\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      objets_enonce = [];\n      objets_correction = [];\n      params_enonce = {};\n      params_correction = {};\n      nom = creerNomDePolygone(6, \"PQ\");\n      for (let i = 0; i < 6; i++)\n        sommets.push(nom[i]);\n      sommets = shuffle(sommets);\n\n      A = point(0, 0, sommets[0], 'left');\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          C = pointAdistance(A, randint(5, 7), randint(-45, 45), sommets[2], 'right');\n          s2 = segment(A, C);\n          B = similitude(C, A, -85, randint(5, 7) / 10, sommets[1], 'below');\n          s1 = segment(A, B);\n          E = pointSurSegment(A, C, longueur(A, C) / 2.2, sommets[4], 'below');\n          medBC = mediatrice(C, B);\n          medAC = mediatrice(A, C);\n          dBC = droite(C, B);\n          dBD = rotation(dBC, B, randint(-40, -20));\n          dAC = droite(A, C);\n          dAF = rotation(dAC, A, randint(30, 40));\n          D = pointIntersectionDD(dBD, medBC, sommets[3], 'below');\n          D.x += randint(-2, 2, 0) / 5;\n          F = pointIntersectionDD(dAF, medAC, sommets[5], 'above');\n          F.x += randint(-2, 2, 0) / 5;\n          s5 = segment(B, D);\n          s6 = segment(C, D);\n          s3 = segment(A, F);\n          s7 = segment(C, F);\n          s8 = segment(E, F);\n          s4 = segment(B, C);\n          params_enonce = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 1, D.x - 1, E.x - 1, F.x - 1), ymin: Math.min(A.y - 1, B.y - 1, C.y - 1, D.y - 1, E.y - 1, F.y - 1), xmax: Math.max(A.x + 1, B.x + 1, C.x + 1, D.x + 1, E.x + 1, F.x + 1), ymax: Math.max(A.y + 1, B.y + 1, C.y + 1, D.y + 1, E.y + 1, F.y + 1.5), pixelsParCm: 30, scale: 1, mainlevee: true, amplitude: 1 };\n          objets_enonce.push(s1, s2, s4, s8, s7, s3, s6, s5, codageAngleDroit(B, A, C), codeSegments('//', 'black', A, F, F, C), codeSegments('|||', 'black', A, E, E, C), codeSegments('O', 'black', B, D, D, C), labelPoint(A, B, C, D, E, F), codageAngleDroit(A, E, F));\n          texte = `<br>À l'aide du schéma ci-dessous, déterminer :<br>`;\n          texte += `- deux segments de même longueur ;<br>`;\n          texte += `- le milieu d'un segment ;<br>`;\n          texte += `- un triangle rectangle ;<br>`;\n          texte += `- un triangle isocèle ;<br>`;\n          texteCorr = `- Deux segments de même mesure : [$${sommets[0] + sommets[4]}$] et $[${sommets[4] + sommets[2]}]$ ou $[${sommets[0] + sommets[5]}]$ et $[${sommets[5] + sommets[2]}]$`;\n          texteCorr += ` ou $[${sommets[1] + sommets[3]}]$ et $[${sommets[3] + sommets[2]}]$.<br>`;\n          texteCorr += `- $${sommets[4]}$ est le milieu du segment $[${sommets[0] + sommets[2]}]$.<br>`;\n          texteCorr += `- $${sommets[0] + sommets[1] + sommets[2]}$ est un triangle rectangle en $${sommets[0]}$, $${sommets[0] + sommets[4] + sommets[5]}$ est un triangle rectangle en $${sommets[4]}$ et $${sommets[2] + sommets[4] + sommets[5]}$ est un triangle rectangle en $${sommets[4]}$.<br>`;\n          texteCorr += `- $${sommets[0] + sommets[5] + sommets[2]}$ est un triangle isocèle en $${sommets[5]}$ et $${sommets[1] + sommets[3] + sommets[2]}$ est un triangle isocèle en $${sommets[3]}$.<br>`;\n          break;\n        case 2:\n          B = pointAdistance(A, randint(5, 7), randint(-45, 45), sommets[1], 'above');\n          C = similitude(A, B, randint(85, 90), 0.95, sommets[2], 'below');\n          D = similitude(B, A, randint(-93, -87), 1, sommets[3], 'below');\n          F = similitude(B, C, -55, 0.8, sommets[5], 'right');\n          E = similitude(C, D, 57, randint(85, 115) / 100, sommets[4], 'right');\n          s1 = segment(D, E);\n          s2 = segment(C, E);\n          s4 = segment(C, F);\n          s5 = segment(B, F);\n          s6 = polygone(A, B, C, D);\n          params_correction = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 1, D.x - 1, E.x - 1, F.x - 1), ymin: Math.min(A.y - 1, B.y - 1, C.y - 1, D.y - 1, E.y - 1, F.y - 1), xmax: Math.max(A.x + 1, B.x + 1, C.x + 1, D.x + 1, E.x + 1, F.x + 1), ymax: Math.max(A.y + 1, B.y + 1, C.y + 1, D.y + 1, E.y + 1, F.y + 1), pixelsParCm: 30, scale: 1, mainlevee: true, amplitude: 1 };\n          objets_correction.push(labelPoint(A, B, C, D, E, F), s1, s2, s4, s5, s6);\n          objets_correction.push(codageAngleDroit(D, A, B), codageAngleDroit(A, B, C), codageAngleDroit(B, C, D), codageAngleDroit(C, D, A));\n          objets_correction.push(codeSegments('||', 'black', D, E, C, E), codeSegments('O', 'black', A, B, B, C, C, D, D, A), codeSegments('|||', 'black', F, C, B, F));\n          texte = `$${sommets[0] + sommets[1] + sommets[2] + sommets[3]}$ est un carré et $${sommets[3] + sommets[2] + sommets[4]}$ est un triangle équilatéral ($${sommets[4]}$ est à l'intérieur du carré $${sommets[0] + sommets[1] + sommets[2] + sommets[3]}$).<br>`;\n          texte += ` $${sommets[1] + sommets[2] + sommets[5]}$ est un triangle isocèle en $${sommets[5]}$ ($${sommets[5]}$ est à l'extérieur du carré $${sommets[0] + sommets[1] + sommets[2] + sommets[3]}$).<br>`;\n          texte += `Représenter cette configuration par un schéma à main levée et ajouter les codages nécessaires.`;\n          texteCorr = `Voilà ci-dessous un schéma qui pourrait convenir à la situation.<br>`;\n          break;\n        case 3:\n          B = pointAdistance(A, randint(5, 7), randint(-45, 45), sommets[1], 'above');\n          C = similitude(A, B, randint(85, 90), 0.5, sommets[2], 'below');\n          D = similitude(B, A, randint(-93, -87), 0.53, sommets[3], 'below');\n          s1 = segment(D, B);\n          s2 = segment(A, C);\n          E = pointIntersectionDD(droite(A, C), droite(D, B), sommets[4], 'above');\n          F = affiniteOrtho(E, droite(B, C), -1.1, sommets[5], 'right');\n          s3 = polygone(A, B, C, D);\n          s4 = segment(B, F);\n          s5 = segment(C, F);\n          params_correction = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 1, D.x - 1, E.x - 1, F.x - 1), ymin: Math.min(A.y - 1, B.y - 1, C.y - 1, D.y - 1, E.y - 1, F.y - 1), xmax: Math.max(A.x + 1, B.x + 1, C.x + 1, D.x + 1, E.x + 1, F.x + 1), ymax: Math.max(A.y + 1, B.y + 1, C.y + 1, D.y + 1, E.y + 1, F.y + 1), pixelsParCm: 30, scale: 1, mainlevee: true, amplitude: 1 };\n          objets_correction.push(labelPoint(A, B, C, D, E, F), s1, s2, s3, s4, s5);\n          objets_correction.push(codageAngleDroit(D, A, B), codageAngleDroit(A, B, C), codageAngleDroit(B, C, D), codageAngleDroit(C, D, A));\n          objets_correction.push(codeSegments('||', 'black', D, E, E, B, A, E, E, C, F, C, B, F), codeSegments('O', 'black', A, B, D, C), codeSegments('/', 'black', A, D, B, C));\n          texte = `$${sommets[0] + sommets[1] + sommets[2] + sommets[3]}$ est un rectangle. Ses diagonales se coupent en $${sommets[4]}$.<br>`;\n          texte += `$${sommets[4] + sommets[1] + sommets[5] + sommets[2]}$ est un losange.<br>`;\n          texte += `Représenter cette configuration par un schéma à main levée et ajouter les codages nécssaires.`;\n          texteCorr = `Voilà ci-dessous un schéma qui pourrait convenir à la situation.<br>`;\n          break;\n        case 4:\n          B = pointAdistance(A, randint(6, 7), randint(-30, 30), sommets[1], 'above right');\n          F = similitude(A, B, randint(-70, -50), randint(80, 90) / 100, sommets[5], 'left');\n          D = similitude(B, A, angleOriente(A, B, F) + randint(3, 5), randint(15, 20) / 10, sommets[3], 'below');\n          C = translation2Points(point(B.x + 1, B.y + 1), A, D, sommets[2], 'below right');\n          E = pointIntersectionDD(droite(A, C), droite(D, B), sommets[4], 'above right');\n          s3 = polygone(A, B, C, D);\n          s4 = segment(B, F);\n          s5 = segment(A, F);\n          s1 = segment(B, D);\n          s2 = segment(A, C);\n          params_enonce = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 1, D.x - 1, E.x - 1, F.x - 1), ymin: Math.min(A.y - 1, B.y - 1, C.y - 1, D.y - 1, E.y - 1, F.y - 1), xmax: Math.max(A.x + 1, B.x + 1, C.x + 1, D.x + 1, E.x + 1, F.x + 1), ymax: Math.max(A.y + 1, B.y + 1, C.y + 1, D.y + 1, E.y + 1, F.y + 1), pixelsParCm: 30, scale: 1, mainlevee: true, amplitude: 0.8 };\n          objets_enonce.push(labelPoint(A, B, C, D, E, F), s1, s2, s3, s4, s5);\n          objets_enonce.push(codeAngle(D, A, B, 2, '|', 'red', 2), codeAngle(B, C, D, 2, '|', 'red', 2), codeAngle(A, B, F, 2, '|', 'red', 2));\n          objets_enonce.push(codeAngle(A, B, C, 2, '||', 'blue', 2), codeAngle(A, D, C, 2, '||', 'blue', 2));\n          objets_enonce.push(codeAngle(B, A, F, 2, '///', 'green', 3), codeAngle(B, F, A, 2, '///', 'green', 3));\n\n          objets_enonce.push(codeSegments('||', 'black', B, E, E, D), codeSegments('O', 'black', A, E, E, C));\n          texte = `$${sommets[0] + sommets[1] + sommets[2] + sommets[3]}$ est un rectangle. Ses diagonales se coupent en $${sommets[4]}$.<br>`;\n          texte += `$${sommets[4] + sommets[1] + sommets[5] + sommets[2]}$ est un losange.<br>`;\n          texte = `<br>À l'aide du schéma ci-dessous, déterminer :<br>`;\n          texte += `- la nature du triangle $${sommets[0] + sommets[1] + sommets[5]}$ ;<br>`;\n          texte += `- la nature du quadrilatère $${sommets[0] + sommets[1] + sommets[2] + sommets[3]}$ ;<br>`;\n          texte += `- la nature de l'angle $\\\\widehat{${sommets[5] + sommets[1] + sommets[2]}}$ ;<br>`;\n          texteCorr = `Le triangle $${sommets[0] + sommets[1] + sommets[5]}$ a deux angles de même mesure, c'est donc un triangle isocèle en $${sommets[1]}$.<br>`;\n          texteCorr += `Le quadrilatère  $${sommets[0] + sommets[1] + sommets[2] + sommets[3]}$ a des diagonales qui se coupent en leur milieu, c'est donc un parallélogramme.<br>`;\n          texteCorr += `Dans un parallélogramme, les angles consécutifs sont supplémentaires (leur somme vaut 180°).<br>`;\n          texteCorr += ` D'après le codage, l'angle $\\\\widehat{${sommets[2] + sommets[1] + sommets[5]}}$ est la somme de deux angles supplémentaires. C'est donc un angle plat.<br>`;\n\n\n          break;\n      }\n      if (objets_enonce.length > 0)\n        texte += mathalea2d(params_enonce, objets_enonce);\n      if (objets_correction.length > 0)\n        texteCorr += mathalea2d(params_correction, objets_correction);\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}