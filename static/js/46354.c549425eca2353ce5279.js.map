{"version":3,"file":"js/46354.c549425eca2353ce5279.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G32-5.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { texFractionReduite, choice, texNombre, listeQuestionsToContenu, randint, arrondi, creerNomDePolygone } from '../../modules/outils.js'\nimport { mathalea2d, angle, point, droite, droiteVerticaleParPoint, cercle, pointIntersectionLC, polygone, projectionOrtho, segment, codageAngleDroit, labelPoint, longueur } from '../../modules/2d.js'\n\nexport const titre = 'Problème trigonométrique - Triangle rectangle inscrit dans un triangle rectangle'\n\n/**\n * Calculer un angle pour pouvoir ensuite calculer une longueur avec 2 triangles rectangles imbriqués\n * @author Rémi Angot\n * Référence 3G32-5\n * 2021-02-14\n*/\nexport default function CalculsTrigo () {\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacingCorr = 3\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n\n    let objetsEnonce = []; let paramsEnonce = {}; let texte = ''; let texteCorr = ''\n    const AD = randint(5, 9)\n    const AE = randint(AD + 1, AD + 4)\n    const AC = randint(3, AD - 1)\n    const A = point(0, 0, 'A', 'below left')\n    const C = point(AC, 0, 'C', 'below')\n    const D = point(AD, 0, 'D', 'below right')\n    const dDE = droiteVerticaleParPoint(D)\n    const cAE = cercle(A, AE)\n    const E = pointIntersectionLC(dDE, cAE, 'E')\n    E.positionLabel = 'right'\n    const p = polygone(A, D, E)\n    const dAE = droite(A, E)\n    const B = projectionOrtho(C, dAE, 'B', 'above left')\n    const codage1 = codageAngleDroit(A, B, C)\n    const codage2 = codageAngleDroit(A, D, E)\n    const labels = labelPoint(A, B, C, D, E)\n    const nomDesSommets = creerNomDePolygone(5)\n    A.nom = nomDesSommets[0]\n    B.nom = nomDesSommets[1]\n    C.nom = nomDesSommets[2]\n    D.nom = nomDesSommets[3]\n    E.nom = nomDesSommets[4]\n    const mirroir = choice([true, false])\n    if (mirroir) {\n      B.x *= -1\n      C.x *= -1\n      D.x *= -1\n      E.x *= -1\n      A.positionLabel = 'below'\n      B.positionLabel = 'above'\n      C.positionLabel = 'below'\n      D.positionLabel = 'below'\n      E.positionLabel = 'above'\n    }\n    const sBC = segment(B, C)\n\n    objetsEnonce = [p, sBC, codage1, codage2, labels]\n    paramsEnonce = { xmin: -10, ymin: -1, xmax: 10, ymax: E.y + 1.5, pixelsParCm: 20, scale: 1, mainlevee: false }\n    texte += mathalea2d(paramsEnonce, objetsEnonce)\n    texte += `<br><br> $${A.nom + E.nom} = ${AE}~\\\\text{cm}$, $${A.nom + D.nom} = ${AD}~\\\\text{cm}$ et $${A.nom + C.nom} = ${AC}~\\\\text{cm}$.`\n    texte += `<br> Calculer la longueur $${A.nom + B.nom}$ et donner une valeur approchée au millimètre près.`\n    texteCorr += `Dans le triangle $${A.nom + D.nom + E.nom}$ rectangle en $${D.nom}$ : `\n    texteCorr += `<br>$\\\\cos(\\\\widehat{${D.nom + A.nom + E.nom}})=\\\\dfrac{${A.nom + D.nom}}{${A.nom + E.nom}}\\\\quad$ soit $\\\\quad\\\\cos(\\\\widehat{${D.nom + A.nom + E.nom}})=\\\\dfrac{${AD}}{${AE}}$,`\n    texteCorr += `<br> d'où $\\\\widehat{${D.nom + A.nom + E.nom}}=\\\\text{arccos}\\\\left(\\\\dfrac{${AD}}{${AE}}\\\\right)\\\\approx${texNombre(arrondi(angle(D, A, E), 1))}\\\\degree$.`\n\n    texteCorr += `<br><br>Dans le triangle $${A.nom + B.nom + C.nom}$ rectangle en $${B.nom}$ : `\n    texteCorr += `<br>$\\\\cos(\\\\widehat{${B.nom + A.nom + C.nom}})=\\\\dfrac{${A.nom + B.nom}}{${A.nom + C.nom}}\\\\quad$ soit $\\\\quad\\\\cos(${texNombre(arrondi(angle(D, A, E), 1))}\\\\degree)\\\\approx\\\\dfrac{${A.nom + B.nom}}{${AC}}$,`\n    texteCorr += `<br> d'où $${A.nom + B.nom} \\\\approx ${AC} \\\\times \\\\cos(${texNombre(arrondi(angle(D, A, E), 1))}\\\\degree)\\\\approx${texNombre(arrondi(longueur(A, B), 1))}~\\\\text{cm}$.`\n\n    texteCorr += `<br><br>On pouvait aussi écrire : $${A.nom + B.nom} = ${AC} \\\\times \\\\cos\\\\left(\\\\text{arccos}\\\\left(\\\\dfrac{${AD}}{${AE}}\\\\right)\\\\right)=${AC}\\\\times\\\\dfrac{${AD}}{${AE}}=${texFractionReduite(AC * AD, AE)}$.`\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","CalculsTrigo","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","objetsEnonce","paramsEnonce","texte","texteCorr","AD","randint","AE","AC","A","point","C","D","dDE","droiteVerticaleParPoint","cAE","cercle","E","pointIntersectionLC","positionLabel","p","polygone","dAE","droite","B","projectionOrtho","codage1","codageAngleDroit","codage2","labels","labelPoint","nomDesSommets","creerNomDePolygone","nom","choice","x","segment","xmin","ymin","xmax","ymax","y","pixelsParCm","scale","mainlevee","mathalea2d","texNombre","arrondi","angle","longueur","texFractionReduite","push","listeQuestionsToContenu","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}