{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N21.js"],"names":["titre","Lire_abscisse_fractionnaire","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","listePackages","nouvelleVersion","numeroExercice","typeDeQuestions","listeQuestions","listeCorrections","contenu","contenuCorrection","combinaisonListes","parseInt","htmlConsigne","abs0","l1","l2","l3","x1","x2","x3","x11","x22","x33","pas1","pas2","id_unique","texte","texteCorr","i","lettreDepuisChiffre","choice","randint","sortieHtml","Date","now","SVG_reperage_sur_un_axe","pgcd","texFraction","texFractionReduite","Latex_reperage_sur_un_axe","calcul","push","listeQuestionsToContenu","besoinFormulaireNumerique"],"mappings":"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","file":"js/8221.3b5acb68a4ccfc3c4c3a.js","sourcesContent":["import Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, pgcd, texFractionReduite, calcul, lettreDepuisChiffre, htmlConsigne, texFraction } from '../../modules/outils.js'\nimport { SVG_reperage_sur_un_axe, Latex_reperage_sur_un_axe } from '../../modules/macroSvgJs.js'\n\nexport const titre = 'Lire l’abscisse fractionnaire d’un point'\n\n/**\n * Lire l'abscisse fractionnaire d'un point\n * @Auteur Jean-Claude Lhote et Rémi Angot\n * référence 6N21\n */\nexport default function Lire_abscisse_fractionnaire () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Lire l'abscisse de chacun des points suivants et donner le résultat sous la forme d'une fraction.\"\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n  this.listePackages = 'tkz-euclide'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    // numeroExercice est 0 pour l'exercice 1\n    let typeDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (this.sup == 4) { typeDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else {\n      typeDeQuestions = combinaisonListes(\n        [parseInt(this.sup)],\n        this.nbQuestions\n      )\n    }\n\n    this.contenu = htmlConsigne(this.consigne)\n    for (let i = 0,\n      abs0,\n      l1,\n      l2,\n      l3,\n      x1,\n      x2,\n      x3,\n      x11,\n      x22,\n      x33,\n      pas1,\n      pas2,\n      id_unique,\n      texte,\n      texteCorr; i < this.nbQuestions; i++) {\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n      switch (typeDeQuestions[i]) {\n        case 1: // Placer des demis aux quarts sur un axe\n          abs0 = 0\n          pas1 = 1\n          pas2 = choice([2, 3, 4])\n          break\n\n        case 2: // Placer des cinquièmes aux neuvièmes sur un axe\n          abs0 = 0\n          pas1 = 1\n          pas2 = randint(5, 9)\n          break\n\n        case 3: // Placer des demis aux neuvièmes à partir d'un entier >=1 sur un axe\n          abs0 = randint(1, 5)\n          pas1 = 1\n          pas2 = randint(2, 9)\n          break\n      }\n      x1 = randint(0, 1)\n      x2 = randint(2, 3)\n      x3 = randint(4, 5)\n      x11 = randint(1, pas2 - 1)\n      x22 = randint(1, pas2 - 1)\n      x33 = randint(1, pas2 - 1)\n      if (sortieHtml) {\n        id_unique = `${i}_${Date.now()}`\n        this.contenu += `<div id=\"div_svg${numeroExercice}${id_unique}\" style=\"width: 90%; height: 200px;  \"></div>`\n        SVG_reperage_sur_un_axe(\n          `div_svg${numeroExercice}${id_unique}`,\n          abs0,\n          6,\n          pas1,\n          pas2,\n          [\n            [l1, x1, x11],\n            [l2, x2, x22],\n            [l3, x3, x33]\n          ],\n          [\n            [abs0 + 1 / pas1, 1, 0],\n            [abs0 + 2 / pas1, 2, 0],\n            [abs0 + 3 / pas1, 3, 0],\n            [abs0 + 4 / pas1, 4, 0],\n            [abs0 + 5 / pas1, 5, 0],\n            [abs0 + 6 / pas1, 6, 0]\n          ],\n          false\n        )\n        this.contenuCorrection += `<div id=\"div_svg_corr${numeroExercice}${id_unique}\" style=\"width: 90%; height: 200px;  \"></div>`\n        SVG_reperage_sur_un_axe(\n          `div_svg_corr${numeroExercice}${id_unique}`,\n          abs0,\n          6,\n          pas1,\n          pas2,\n          [\n            [l1, x1, x11, true],\n            [l2, x2, x22, true],\n            [l3, x3, x33, true]\n          ],\n          [\n            [abs0 + 1 / pas1, 1, 0],\n            [abs0 + 2 / pas1, 2, 0],\n            [abs0 + 3 / pas1, 3, 0],\n            [abs0 + 4 / pas1, 4, 0],\n            [abs0 + 5 / pas1, 5, 0],\n            [abs0 + 6 / pas1, 6, 0]\n          ],\n          true\n        )\n        this.contenuCorrection += '<br>'\n        if (pgcd(x11, pas2) != 1 || pgcd(x22, pas2) != 1 || pgcd(x33, pas2) != 1) { this.contenuCorrection += 'Remarque : ' }\n        if (pgcd(x11, pas2) != 1) { this.contenuCorrection += `$${texFraction(x1 * pas2 + x11, pas2)}$ peut se simplifier en $${texFractionReduite(x1 * pas2 + x11, pas2)}\\\\phantom{espace}$` }\n        if (pgcd(x22, pas2) != 1) { this.contenuCorrection += `$${texFraction(x2 * pas2 + x22, pas2)}$ peut se simplifier en $${texFractionReduite(x2 * pas2 + x22, pas2)}\\\\phantom{espace}$` }\n        if (pgcd(x33, pas2) != 1) { this.contenuCorrection += `$${texFraction(x3 * pas2 + x33, pas2)}$ peut se simplifier en $${texFractionReduite(x3 * pas2 + x33, pas2)}\\\\phantom{espace}$` }\n      } else {\n        // sortie Latex\n        texte = Latex_reperage_sur_un_axe(\n          2,\n          abs0,\n          pas1,\n          pas2,\n          [\n            [l1, x1, x11],\n            [l2, x2, x22],\n            [l3, x3, x33]\n          ],\n          [\n            [calcul(abs0, 0), 0, 0],\n            [calcul(abs0 + 1 / pas1, 0), 1, 0]\n          ],\n          false\n        )\n        texteCorr = Latex_reperage_sur_un_axe(\n          2,\n          abs0,\n          pas1,\n          pas2,\n          [\n            [l1, x1, x11, true],\n            [l2, x2, x22, true],\n            [l3, x3, x33, true]\n          ],\n          [\n            [calcul(abs0, 0), 0, 0],\n            [calcul(abs0 + 1 / pas1, 0), 1, 0]\n          ],\n          true\n        )\n        if (pgcd(x11, pas2) != 1) { texteCorr += `<br>$\\\\left(${texFraction(x1 * pas2 + x11, pas2)}$ peut se simplifier en $${texFractionReduite(x1 * pas2 + x11, pas2)}\\\\right)$.` }\n        if (pgcd(x22, pas2) != 1) { texteCorr += `<br>$\\\\left(${texFraction(x2 * pas2 + x22, pas2)}$ peut se simplifier en $${texFractionReduite(x2 * pas2 + x22, pas2)}\\\\right)$.` }\n        if (pgcd(x33, pas2) != 1) { texteCorr += `<br>$\\\\left(${texFraction(x3 * pas2 + x33, pas2)}$ peut se simplifier en $${texFractionReduite(x3 * pas2 + x33, pas2)}\\\\right)$.` }\n\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n      }\n    }\n    if (!sortieHtml) { listeQuestionsToContenu(this) }\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    '1 : Demis, tiers ou quarts avec zéro placé\\n2 : Des cinquièmes aux neuvièmes avec zéro placé \\n3 : Toutes les fractions précédentes mais zéro non visible\\n4 : Mélange'\n  ]\n}\n"],"sourceRoot":""}