{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C10-0.js","webpack://mathalea/./src/js/exercices/4e/4C10-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["interactifReady","interactifType","titre","Signe_produit_quotient_relatifs","typesDeQuestionsDisponibles","Exercice","this","consigne","nbCols","nbColsCorr","nbQuestionsModifiable","sup","nouvelleVersion","Number","exo","beta","nbQuestions","length","listeTypeDeQuestions","listeQuestions","listeCorrections","texte","texteCorr","i","cpt","nbMax","num","Relatif","randint","ecritureNombreRelatif","relatifs","getSigneString","setRegleSigneProduit","texteEnCouleurEtGras","getSigneProduitString","setReponse","formatInteractif","setRegleSigneQuotient","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","Signe_quotient_relatifs","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"4OAIO,MAAMA,GAAkB,EAClBC,EAAiB,WAEjBC,EAAQ,0DAYN,SAASC,IAWtB,IAAIC,EAVJC,eAAcC,MACdA,KAAKJ,MAAQA,EACbI,KAAKN,gBAAkBA,EACvBM,KAAKL,eAAiBA,EACtBK,KAAKC,SAAW,8CAChBD,KAAKE,OAAS,EACdF,KAAKG,WAAa,EAClBH,KAAKI,uBAAwB,EAC7BJ,KAAKK,IAAM,EAIXL,KAAKM,gBAAkB,WAErB,GADAN,KAAKK,IAAME,OAAOP,KAAKK,KACnBL,KAAKQ,MAAQR,KAAKS,KAAO,SAE3B,OAAQT,KAAKK,KACX,KAAK,EACHP,EAA8B,CAAC,EAAG,EAAG,GAErCE,KAAKU,YAAc,EACnB,MACF,KAAK,EACHZ,EAA8B,CAAC,EAAG,EAAG,GAErCE,KAAKU,YAAc,EACnB,MACF,KAAK,EACHZ,EAA8B,CAAC,EAAG,EAAG,GAErCE,KAAKU,YAAc,EACnB,MACF,KAAK,EACHZ,EAA8B,CAAC,EAAG,EAAG,GACrCE,KAAKU,YAAcZ,EAA4Ba,YAG9C,GAAIX,KAAKQ,MAAQR,KAAKS,KAAO,SAElC,OAAQT,KAAKK,KACX,KAAK,EACHP,EAA8B,CAAC,EAAG,EAAG,GAErCE,KAAKU,YAAc,EACnB,MACF,KAAK,EACHZ,EAA8B,CAAC,EAAG,EAAG,GAErCE,KAAKU,YAAc,EACnB,MACF,KAAK,EACHZ,EAA8B,CAAC,EAAG,EAAG,GAErCE,KAAKU,YAAc,EACnB,MACF,KAAK,EACHZ,EAA8B,CAAC,EAAG,EAAG,GAErCE,KAAKU,YAAc,EACnB,MACF,KAAK,EACHZ,EAA8B,CAAC,EAAG,EAAG,EAAG,GACxCE,KAAKU,YAAcZ,EAA4Ba,YAKnDb,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjDE,KAAKU,YAAcZ,EAA4Ba,OAIjD,MAAMC,EAAuBd,EAE7BE,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GAExB,IAAK,IAAWC,EAAOC,EAAdC,EAAI,EAAqBC,EAAM,EAAGD,EAAIjB,KAAKU,aAAeQ,EAAM,IAAK,CAE5E,MAAMC,EAAQ,GAERC,EAAM,IAAIC,OACdC,UAAS,EAAG,EAAG,CAAC,KAAMA,SAAQ,EAAGH,IACjCG,UAAS,EAAG,EAAG,CAAC,KAAMA,SAAQ,EAAGH,IACjCG,UAAS,EAAG,EAAG,CAAC,KAAMA,SAAQ,EAAGH,IACjCG,UAAS,EAAG,EAAG,CAAC,KAAMA,SAAQ,EAAGH,IAGnC,OAAQP,EAAqBK,IAC3B,KAAK,EACHF,EAAS,MAAIQ,SACXH,EAAII,SAAS,gBACFD,SAAsBH,EAAII,SAAS,QAChDR,EAAa,MAAIO,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,YAAWF,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,MACtKT,GAAc,QAAOI,EAAIM,qBACvBN,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfR,GAAc,eAAaO,SACzBH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,cACJG,SACTP,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,QAEU,YAAhEJ,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,KAC1DK,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,WAE7CD,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,UAE/C,MACF,KAAK,EACHf,EAAS,MAAIQ,SACXH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,gBACFD,SAAsBH,EAAII,SAAS,QAChDR,EAAa,MAAIO,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,UAASF,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,KACpKT,GAAc,UAAQO,SACpBH,EAAII,SAAS,aACJJ,EAAIK,iBAAiB,MAChCT,GAAc,QAAOI,EAAIM,qBACvBN,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfR,GAAc,eAAaO,SACzBH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,cACJG,SACTP,EAAIQ,sBACFR,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,QAGoE,YAAjFJ,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,KAC3EK,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,WAE7CD,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,UAE/C,MACF,KAAK,EACHf,EAAS,MAAIQ,SACXH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,gBACFD,SAAsBH,EAAII,SAAS,QAChDR,EAAa,MAAIO,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,UAASF,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,OACpKT,GAAc,MAAIO,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,YAAWF,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,MACvKT,GAAc,QAAOI,EAAIM,qBACvBN,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfR,GAAc,eAAaO,SACzBH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,cACJG,SACTP,EAAIQ,sBACFR,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,QAGqF,YAAlGJ,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,KAC5FK,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,WAE7CD,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,UAE/C,MACF,KAAK,EACHf,EAAS,cAAYQ,SACnBH,EAAII,SAAS,SACTD,SAAsBH,EAAII,SAAS,SACzCR,EAAa,MAAIO,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,YAAWF,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,MACtKT,GAAc,QAAOI,EAAIW,sBACvBX,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfR,GAAc,uBAAqBO,SACjCH,EAAII,SAAS,SACTD,SACJH,EAAII,SAAS,eACHG,SACVP,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,QAEU,YAAhEJ,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,KAC1DK,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,WAE7CD,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,UAE/C,MACF,KAAK,EACHf,EAAS,cAAYQ,SACnBH,EAAII,SAAS,SACTD,SACJH,EAAII,SAAS,gBACFD,SAAsBH,EAAII,SAAS,SAChDR,EAAa,MAAIO,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,UAASF,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,KACpKT,GAAc,UAAQO,SACpBH,EAAII,SAAS,aACJJ,EAAIK,iBAAiB,MAChCT,GAAc,QAAOI,EAAIW,sBACvBX,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfR,GAAc,uBAAqBO,SACjCH,EAAII,SAAS,SACTD,SACJH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,eACHG,SACVP,EAAIQ,sBACFR,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,QAGoE,YAAjFJ,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,KAC3EK,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,WAE7CD,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,UAE/C,MACF,KAAK,EACHf,EAAS,cAAYQ,SACnBH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,SACTD,SAAsBH,EAAII,SAAS,SACzCR,EAAa,MAAIO,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,UAASF,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,KACpKT,GAAc,UAAQO,SACpBH,EAAII,SAAS,aACJJ,EAAIK,iBAAiB,MAChCT,GAAc,QAAOI,EAAIW,sBACvBX,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfR,GAAc,uBAAqBO,SACjCH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,SACTD,SACJH,EAAII,SAAS,eACHG,SACVP,EAAIQ,sBACFR,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,QAGoE,YAAjFJ,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,KAC3EK,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,WAE7CD,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,UAE/C,MACF,KAAK,EACHf,EAAS,cAAYQ,SACnBH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,SACTD,SACJH,EAAII,SAAS,gBACFD,SAAsBH,EAAII,SAAS,SAChDR,EAAa,MAAIO,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,UAASF,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,OACpKT,GAAc,MAAIO,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,YAAWF,SAAsBH,EAAII,SAAS,aAAaJ,EAAIK,iBAAiB,MACvKT,GAAc,QAAOI,EAAIW,sBACvBX,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,MAEfR,GAAc,uBAAqBO,SACjCH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,SACTD,SACJH,EAAII,SAAS,gBACFD,SACXH,EAAII,SAAS,eACHG,SACVP,EAAIQ,sBACFR,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,GACbJ,EAAII,SAAS,QAGqF,YAAlGJ,EAAIQ,sBAAsBR,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,GAAIJ,EAAII,SAAS,KAC5FK,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,WAE7CD,QAAW7B,KAAMiB,EAAG,IAAK,CAAEa,iBAAkB,UAInDf,IAASiB,QAAyBhC,KAAMiB,IACI,IAAxCjB,KAAKa,eAAeoB,QAAQlB,KAE9Bf,KAAKa,eAAeqB,KAAKnB,GACzBf,KAAKc,iBAAiBoB,KAAKlB,GAC3BC,KAEFC,KAEFiB,SAAwBnC,S,sFCnVrB,MAAMJ,EAAQ,0CAON,SAASwC,IACtBvC,eAAqCG,MACrCA,KAAKJ,MAAQA,EACbI,KAAKS,KAAQ,GACbT,KAAKQ,IAAMR,KAAKS,KAAQ,SACxBT,KAAKK,IAAM,EACXL,KAAKqC,0BAA4B,CAC/B,uBACA,EACA,oN,6BCZW,SAAStC,IAEtBC,KAAKJ,MAAQ,GACbI,KAAKC,SAAW,GAChBD,KAAKsC,mBAAqB,GAC1BtC,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GACxBd,KAAKuC,aAAe,GACpBvC,KAAKwC,QAAU,GACfxC,KAAKyC,kBAAoB,GACzBzC,KAAKU,YAAc,GACnBV,KAAKE,OAAS,EACdF,KAAKG,WAAa,EAClBH,KAAK0C,QAAU,EACf1C,KAAK2C,YAAc,EACnB3C,KAAK4C,QAAS,EAEd5C,KAAKqC,2BAA4B,EACjCrC,KAAK6C,uBAAwB,EAC7B7C,KAAK8C,6BAA8B,EACnC9C,KAAK+C,4BAA6B,EAClC/C,KAAKgD,wBAAyB,EAC9BhD,KAAKiD,8BAA+B,EACpCjD,KAAKkD,4BAA6B,EAClClD,KAAKmD,wBAAyB,EAC9BnD,KAAKoD,8BAA+B,EACpCpD,KAAKqD,oBAAqB,EAC1BrD,KAAKI,uBAAwB,EAC7BJ,KAAKsD,kBAAmB,EACxBtD,KAAKuD,sBAAuB,EAC5BvD,KAAKwD,mBAAoB,EACzBxD,KAAKyD,uBAAwB,EAC7BzD,KAAK0D,+BAAgC,EACrC1D,KAAK2D,qBAAsB,EAC3B3D,KAAK4D,MAAQ,GACb5D,KAAK6D,YAAa,EAClB7D,KAAK8D,gBAAkB,GAMvB9D,KAAK+D,mBAAoB,EACzB/D,KAAKgE,YAAa,EAClBhE,KAAKiE,uBAAwB,EAC7BjE,KAAKkE,KAAM,EACXlE,KAAKmE,eAAgB,EACrBnE,KAAKoE,SAAU,EACfpE,KAAKqE,eAAiB,GACtBrE,KAAKsE,sBAAwB,GAC7BtE,KAAKuE,cAAe,EACpBvE,KAAKM,gBAAkB,SAAUkE,KACjCxE,KAAKyE,cAAgB,G","file":"js/82212.3ccf3c034b480c47d354.js","sourcesContent":["/* eslint-disable camelcase */\nimport Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, ecritureNombreRelatif, texteEnCouleurEtGras, Relatif } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\nexport const titre = 'Signe d’un produit ou d’un quotient de nombres relatifs'\n\n/**\n * Signe d'un produit ou d'on quotient de relatifs\n * Plusieurs niveaux 2, 3 ou 4 factieurs, un quotient de 2 nombres, 1  nombre sur un produit de deux nombres, un prooduit de 2 nombres sur un nombre, un quotient de produit de 2 nombres\n * 4C10-0 exercice parent de 4C10-1 et 4C10-2\n * 4C10-0 contient tous les cas\n * Dans ces exercices je me servais de this.beta pour faire passer l'exo de beta.html à context.html\n * this.beta pouvait prendre la valeur 'beta' ou '', tous les autres this.beta sont devenus des this.debug\n\n * @author Sébastien Lozano\n */\nexport default function Signe_produit_quotient_relatifs () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Donner le signe des expressions numériques.'\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nbQuestionsModifiable = false\n  this.sup = 1\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    this.sup = Number(this.sup) // attention le formulaire renvoie un string, on a besoin d'un number pour le switch !\n    if (this.exo === this.beta + '4C10-1') {\n      // signe d'un produit\n      switch (this.sup) {\n        case 1: // 2 facteurs\n          typesDeQuestionsDisponibles = [1, 1, 1]\n          // this.nbQuestions = typesDeQuestionsDisponibles.length;\n          this.nbQuestions = 3\n          break\n        case 2: // 3 facteurs\n          typesDeQuestionsDisponibles = [2, 2, 2]\n          // this.nbQuestions = typesDeQuestionsDisponibles.length;\n          this.nbQuestions = 3\n          break\n        case 3: // 4 facteurs\n          typesDeQuestionsDisponibles = [3, 3, 3]\n          // this.nbQuestions = typesDeQuestionsDisponibles.length;\n          this.nbQuestions = 3\n          break\n        case 4: // Mélange\n          typesDeQuestionsDisponibles = [1, 2, 3]\n          this.nbQuestions = typesDeQuestionsDisponibles.length\n          break\n      }\n    } else if (this.exo === this.beta + '4C10-2') {\n      // signe d'un quotient\n      switch (this.sup) {\n        case 1: // quotient de 2 nombres\n          typesDeQuestionsDisponibles = [4, 4, 4]\n          // this.nbQuestions = typesDeQuestionsDisponibles.length;\n          this.nbQuestions = 3\n          break\n        case 2: // quotient d'1 nombre sur un produit de 2 nombres\n          typesDeQuestionsDisponibles = [5, 5, 5]\n          // this.nbQuestions = typesDeQuestionsDisponibles.length;\n          this.nbQuestions = 3\n          break\n        case 3: // quotient d'1 produit de 2 nombres sur 1 nombre\n          typesDeQuestionsDisponibles = [6, 6, 6]\n          // this.nbQuestions = typesDeQuestionsDisponibles.length;\n          this.nbQuestions = 3\n          break\n        case 4: // quotient de 2 produits de 2 nombres\n          typesDeQuestionsDisponibles = [7, 7, 7]\n          // this.nbQuestions = typesDeQuestionsDisponibles.length;\n          this.nbQuestions = 3\n          break\n        case 5: // Mélange\n          typesDeQuestionsDisponibles = [4, 5, 6, 7]\n          this.nbQuestions = typesDeQuestionsDisponibles.length\n          break\n      }\n    } else {\n      // signe d'un produit et/ou d'un quotient\n      typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7]\n      this.nbQuestions = typesDeQuestionsDisponibles.length\n    }\n\n    // let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = typesDeQuestionsDisponibles // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // on ne choisit que des nombres compris entre 1 et 20\n      const nbMax = 20\n      // Le tableau des relatifs necessaires, il m'en faut max 4 !\n      const num = new Relatif(\n        randint(-1, 1, [0]) * randint(1, nbMax),\n        randint(-1, 1, [0]) * randint(1, nbMax),\n        randint(-1, 1, [0]) * randint(1, nbMax),\n        randint(-1, 1, [0]) * randint(1, nbMax)\n      )\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // 2 facteurs\n          texte = `$ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(num.relatifs[1])} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]} et $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}.`\n          texteCorr += `<br> ${num.setRegleSigneProduit(\n            num.relatifs[0],\n            num.relatifs[1]\n          )}`\n          texteCorr += `<br>Donc $ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(num.relatifs[0], num.relatifs[1])\n          )}.`\n          if (num.getSigneProduitString(num.relatifs[0], num.relatifs[1]) === 'positif') {\n            setReponse(this, i, '+', { formatInteractif: 'texte' })\n          } else {\n            setReponse(this, i, '-', { formatInteractif: 'texte' })\n          }\n          break\n        case 2: // 3 facteurs\n          texte = `$ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(num.relatifs[2])} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]}, $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}`\n          texteCorr += ` et $ ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} $ est ${num.getSigneString()[2]}.`\n          texteCorr += `<br> ${num.setRegleSigneProduit(\n            num.relatifs[0],\n            num.relatifs[1],\n            num.relatifs[2]\n          )}`\n          texteCorr += `<br>Donc $ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(\n              num.relatifs[0],\n              num.relatifs[1],\n              num.relatifs[2]\n            )\n          )}.`\n          if (num.getSigneProduitString(num.relatifs[0], num.relatifs[1], num.relatifs[2]) === 'positif') {\n            setReponse(this, i, '+', { formatInteractif: 'texte' })\n          } else {\n            setReponse(this, i, '-', { formatInteractif: 'texte' })\n          }\n          break\n        case 3: // 4 facteurs\n          texte = `$ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} \\\\times ${ecritureNombreRelatif(num.relatifs[3])} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]}, $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}, `\n          texteCorr += `$ ${ecritureNombreRelatif(num.relatifs[2])} $ est ${num.getSigneString()[2]} et $ ${ecritureNombreRelatif(num.relatifs[3])} $ est ${num.getSigneString()[3]}.`\n          texteCorr += `<br> ${num.setRegleSigneProduit(\n            num.relatifs[0],\n            num.relatifs[1],\n            num.relatifs[2],\n            num.relatifs[3]\n          )}`\n          texteCorr += `<br>Donc $ ${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[3]\n          )} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(\n              num.relatifs[0],\n              num.relatifs[1],\n              num.relatifs[2],\n              num.relatifs[3]\n            )\n          )}.`\n          if (num.getSigneProduitString(num.relatifs[0], num.relatifs[1], num.relatifs[2], num.relatifs[3]) === 'positif') {\n            setReponse(this, i, '+', { formatInteractif: 'texte' })\n          } else {\n            setReponse(this, i, '-', { formatInteractif: 'texte' })\n          }\n          break\n        case 4: // quotient de 2 nombres\n          texte = `$ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )}}{${ecritureNombreRelatif(num.relatifs[1])}} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]} et $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}.`\n          texteCorr += `<br> ${num.setRegleSigneQuotient(\n            num.relatifs[0],\n            num.relatifs[1]\n          )}`\n          texteCorr += `<br>Donc $ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[1]\n          )}} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(num.relatifs[0], num.relatifs[1])\n          )}.`\n          if (num.getSigneProduitString(num.relatifs[0], num.relatifs[1]) === 'positif') {\n            setReponse(this, i, '+', { formatInteractif: 'texte' })\n          } else {\n            setReponse(this, i, '-', { formatInteractif: 'texte' })\n          }\n          break\n        case 5: // quotient d'1 nombre sur un produit de 2 nombres\n          texte = `$ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(num.relatifs[2])}} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]}, $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}`\n          texteCorr += ` et $ ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} $ est ${num.getSigneString()[2]}.`\n          texteCorr += `<br> ${num.setRegleSigneQuotient(\n            num.relatifs[0],\n            num.relatifs[1],\n            num.relatifs[2]\n          )}`\n          texteCorr += `<br>Donc $ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[1]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )}} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(\n              num.relatifs[0],\n              num.relatifs[1],\n              num.relatifs[2]\n            )\n          )}.`\n          if (num.getSigneProduitString(num.relatifs[0], num.relatifs[1], num.relatifs[2]) === 'positif') {\n            setReponse(this, i, '+', { formatInteractif: 'texte' })\n          } else {\n            setReponse(this, i, '-', { formatInteractif: 'texte' })\n          }\n          break\n        case 6: // quotient d'1 produit de 2 nombres sur 1 nombre\n          texte = `$ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )}}{${ecritureNombreRelatif(num.relatifs[2])}} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]}, $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}`\n          texteCorr += ` et $ ${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} $ est ${num.getSigneString()[2]}.`\n          texteCorr += `<br> ${num.setRegleSigneQuotient(\n            num.relatifs[0],\n            num.relatifs[1],\n            num.relatifs[2]\n          )}`\n          texteCorr += `<br>Donc $ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[2]\n          )}} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(\n              num.relatifs[0],\n              num.relatifs[1],\n              num.relatifs[2]\n            )\n          )}.`\n          if (num.getSigneProduitString(num.relatifs[0], num.relatifs[1], num.relatifs[2]) === 'positif') {\n            setReponse(this, i, '+', { formatInteractif: 'texte' })\n          } else {\n            setReponse(this, i, '-', { formatInteractif: 'texte' })\n          }\n          break\n        case 7: // quotient de 2 produits de 2 nombres\n          texte = `$ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} \\\\times ${ecritureNombreRelatif(num.relatifs[3])}} $`\n          texteCorr = `$ ${ecritureNombreRelatif(num.relatifs[0])} $ est ${num.getSigneString()[0]}, $ ${ecritureNombreRelatif(num.relatifs[1])} $ est ${num.getSigneString()[1]}, `\n          texteCorr += `$ ${ecritureNombreRelatif(num.relatifs[2])} $ est ${num.getSigneString()[2]} et $ ${ecritureNombreRelatif(num.relatifs[3])} $ est ${num.getSigneString()[3]}.`\n          texteCorr += `<br> ${num.setRegleSigneQuotient(\n            num.relatifs[0],\n            num.relatifs[1],\n            num.relatifs[2],\n            num.relatifs[3]\n          )}`\n          texteCorr += `<br>Donc $ \\\\dfrac{${ecritureNombreRelatif(\n            num.relatifs[0]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[1]\n          )}}{${ecritureNombreRelatif(\n            num.relatifs[2]\n          )} \\\\times ${ecritureNombreRelatif(\n            num.relatifs[3]\n          )}} $ est ${texteEnCouleurEtGras(\n            num.getSigneProduitString(\n              num.relatifs[0],\n              num.relatifs[1],\n              num.relatifs[2],\n              num.relatifs[3]\n            )\n          )}.`\n          if (num.getSigneProduitString(num.relatifs[0], num.relatifs[1], num.relatifs[2], num.relatifs[3]) === 'positif') {\n            setReponse(this, i, '+', { formatInteractif: 'texte' })\n          } else {\n            setReponse(this, i, '-', { formatInteractif: 'texte' })\n          }\n          break\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","import Signe_produit_quotient_relatifs from './4C10-0.js'\n\nexport const titre = 'Signe d’un quotient de nombres relatifs'\n\n/**\n * Signe du produit de relatifs\n * 4C10-2 fils de 4C10-0\n * @author Sébastien Lozano\n */\nexport default function Signe_quotient_relatifs() {\n  Signe_produit_quotient_relatifs.call(this);\n  this.titre = titre\n  this.beta = ``;// ici this.beta peut prendre la valeur 'beta' ou '', tous les autres this.beta sont devenus des this.debug\n  this.exo = this.beta + `4C10-2`;\n  this.sup = 5;\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    5,\n    \"1 : quotient de deux nombres\\n2 : quotient d'un nombre sur un produit de deux facteurs\\n3 : quotient d'un produit de deux factueurs sur un nombre\\n4 : Quotient de deux produits de deux facteurs\\n5 : Mélange\",\n  ];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}