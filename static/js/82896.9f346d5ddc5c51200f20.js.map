{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N23-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","ExerciceDifferentesEcrituresNombresDecimaux","Exercice","this","consigne","spacing","spacingCorr","nouvelleVersion","typesDeQuestions","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","nbQuestions","choice","texte","texteCorr","i","cpt","u","randint","d","c","n","ecritureDecimale","texNombre","calcul","texFraction","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/82896.9f346d5ddc5c51200f20.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombre, texFraction } from '../../modules/outils.js'\nexport const titre = 'Différentes écritures des nombres décimaux'\n\n/**\n * Compléter des égalités sur les nombres décimaux\n * * n/100 = .../10 + .../100\n * * n/100 = .../100 + .../10\n * * .../100 = u+ d/10 + c/100\n * * u = .../10\n * * u = .../100\n * * n/10 = ... + .../10 + .../100\n * @author Rémi Angot\n * 6N23-1\n */\nexport default function ExerciceDifferentesEcrituresNombresDecimaux () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Compléter l'égalité puis donner l'écriture décimale.\"\n  this.spacing = 2\n  this.spacingCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestions\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6]\n    let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    if (this.nbQuestions === 3) listeTypeDeQuestions = combinaisonListes([choice([1, 2, 6]), 3, choice([4, 5])], this.nbQuestions)\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      const u = randint(2, 9) // chiffre des unités\n      const d = randint(1, 9) // chiffre des dixièmes\n      const c = randint(1, 9) // chiffre des centièmes\n      const n = 100 * u + 10 * d + c\n      let ecritureDecimale\n      switch (typesDeQuestions) {\n        case 1: // n/100 = .../10 + .../100\n          ecritureDecimale = texNombre(calcul(u + d / 10 + c / 100))\n          texte = `$${texFraction(n, '100')}=\\\\ldots\\\\ldots+${texFraction(\n            '',\n            10\n          )}+${texFraction('', 100)}=\\\\ldots$`\n          texteCorr = `$${texFraction(n, '100')}=${u}+${texFraction(\n            d,\n            '10'\n          )}+${texFraction(c, '100')}=${ecritureDecimale}$`\n\n          break\n        case 2: // n/100 = .../100 + .../10\n          ecritureDecimale = texNombre(calcul(u + d / 10 + c / 100))\n          texte = `$${texFraction(n, '100')}=\\\\ldots\\\\ldots+${texFraction(\n            '',\n            100\n          )}+${texFraction('', 10)}=\\\\ldots$`\n          texteCorr = `$${texFraction(n, '100')}=${u}+${texFraction(\n            c,\n            100\n          )}+${texFraction(d, 10)}=${ecritureDecimale}$`\n          break\n        case 3: // .../100 = u+ d/10 + c/100\n          ecritureDecimale = texNombre(calcul(u + d / 10 + c / 100))\n          texte = `$${texFraction('', '100')}=${u}+${texFraction(\n            d,\n            '10'\n          )}+${texFraction(c, '100')}=\\\\ldots$`\n          texteCorr = `$${texFraction(n, '100')}=${u}+${texFraction(\n            d,\n            '10'\n          )}+${texFraction(c, '100')}=${ecritureDecimale}$`\n          break\n        case 4: // u = .../10\n          texte = `$${u}=${texFraction('', '10')}$`\n          texteCorr = `$${u}=${texFraction(10 * u, '10')}$`\n          break\n        case 5: // u = .../100\n          texte = `$${u}=${texFraction('', '100')}$`\n          texteCorr = `$${u}=${texFraction(100 * u, '10')}$`\n          break\n        case 6: // n/10 = ... + .../10 + .../100\n          ecritureDecimale = texNombre(calcul(n / 10))\n          texte = `$${texFraction(n, 10)}=\\\\ldots\\\\ldots+${texFraction(\n            '',\n            10\n          )}+${texFraction('', 100)}=\\\\ldots$`\n          texteCorr = `$${texFraction(n, 10)}=${u * 10 + d}+${texFraction(\n            c,\n            10\n          )}+${texFraction(0, 100)}=${ecritureDecimale}$`\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}