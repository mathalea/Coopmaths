{"version":3,"file":"js/17058.852911b8a9f653b8fbad.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5G22.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, Triangles } from '../../modules/outils.js'\nimport { point, mediatrice, codageMediatrice, constructionMediatrice, bissectrice, codageBissectrice, constructionBissectrice, polygone, nommePolygone, rotation, similitude, medianeTriangle, centreGraviteTriangle, hauteurTriangle, codageHauteurTriangle, codageMedianeTriangle, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Déterminer la nature d’une droite remarquable'\n\n/**\n * 5G22\n * @author Jean-Claude Lhote\n * Les droites remarquables du triangle : hauteurs médiatrices....médianes et bissectrices\n */\nexport default function DroiteRemarquableDuTriangle () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n\n  this.titre = titre\n  this.consigne = 'Définir'\n  this.spacing = 2\n  this.nbQuestions = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const triangles = []; const sommets = [[]]; const A = []; const B = []; const C = []; const t = []; const d = []; const n = []; const c = []; const objets = []; let A0; let B0; let C0; let tri; let G\n    let typesDeQuestionsDisponibles, listeTypeDeQuestions\n    if (this.sup === 1) typesDeQuestionsDisponibles = [1, 2]\n    if (this.sup === 2) typesDeQuestionsDisponibles = [3, 4]\n    if (this.sup === 3) typesDeQuestionsDisponibles = [1, 2, 3, 4]\n    listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, a, angle, rapport, texte, texteCorr; i < this.nbQuestions; i++) { // this.nbQuestions && cpt<50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      triangles[i] = new Triangles()\n      sommets[i] = triangles[i].getSommets(false)\n\n      A0 = point(3, randint(1, 2))\n      B0 = point(6, randint(1, 2))\n      angle = choice([50, 60, 70, 75, 80, 100, 110, 120])\n      rapport = randint(7, 13) / 10\n      C0 = similitude(B0, A0, angle, rapport)\n      tri = polygone(A0, B0, C0)\n      G = centreGraviteTriangle(A0, B0, C0)\n      a = randint(0, 30) * 12 - 180\n      A[i] = rotation(A0, G, a, sommets[i][0], 'below left')\n      B[i] = rotation(B0, G, a, sommets[i][1], 'below right')\n      C[i] = rotation(C0, G, a, sommets[i][2], 'above')\n      t[i] = polygone(A[i], B[i], C[i])\n      n[i] = nommePolygone(t[i], `${sommets[i][0]}${sommets[i][1]}${sommets[i][2]}`)\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          d[i] = hauteurTriangle(C[i], B[i], A[i], 'blue')\n          d[i].epaisseur = 1\n          c[i] = codageHauteurTriangle(C[i], B[i], A[i])\n          objets[i] = [A[i], B[i], C[i], t[i], d[i], n[i], c[i]]\n          texteCorr = `La droite tracée est la hauteur issue de $${sommets[i][2]}$ dans le triangle ${triangles[i].getNom()}.<br>`\n          texteCorr += mathalea2d({ xmin: -3, ymin: -3, xmax: 8, ymax: 8, scale: 0.5, pixelsParCm: 20 }, ...objets[i])\n          break\n        case 2:\n          d[i] = mediatrice(A[i], B[i], true, 'blue')\n          d[i].epaisseur = 1\n          c[i] = codageMediatrice(A[i], B[i])\n          objets[i] = [A[i], B[i], C[i], t[i], d[i], n[i], c[i]]\n          texteCorr = `La droite tracée est la médiatrice du segment [$${sommets[i][0]}${sommets[i][1]}]$.<br>`\n          texteCorr += mathalea2d({ xmin: -3, ymin: -3, xmax: 8, ymax: 8, scale: 0.5, pixelsParCm: 20 }, ...objets[i], constructionMediatrice(A[i], B[i], true, 'gray', '×', '||', 'blue', 1))\n          break\n        case 3:\n          d[i] = medianeTriangle(C[i], B[i], A[i], 'blue')\n          d[i].epaisseur = 1\n          c[i] = codageMedianeTriangle(B[i], A[i], 'black', '//')\n          objets[i] = [A[i], B[i], C[i], t[i], d[i], n[i], c[i]]\n          texteCorr = `La droite tracée est la médiane issue de $${sommets[i][2]}$ dans le triangle ${triangles[i].getNom()}.<br>`\n          texteCorr += mathalea2d({ xmin: -3, ymin: -3, xmax: 8, ymax: 8, scale: 0.5, pixelsParCm: 20 }, ...objets[i])\n          break\n        case 4:\n          d[i] = bissectrice(A[i], B[i], C[i], 'blue')\n          d[i].epaisseur = 1\n          c[i] = codageBissectrice(A[i], B[i], C[i])\n          objets[i] = [A[i], B[i], C[i], t[i], d[i], n[i], c[i]]\n          texteCorr = `La droite tracée est la bissectrice de l'angle $\\\\widehat{${sommets[i][0]}${sommets[i][1]}${sommets[i][2]}}$.<br>`\n          texteCorr += mathalea2d({ xmin: -3, ymin: -3, xmax: 8, ymax: 8, scale: 0.5, pixelsParCm: 20 }, ...objets[i], constructionBissectrice(A[i], B[i], C[i], false, 'red', '×', 3, 'blue', 1))\n          break\n      }\n\n      texte = `Quelle est la nature de la droite tracée en bleu pour le triangle ${triangles[i].getNom()} ?<br>` + mathalea2d({ xmin: -3, ymin: -3, xmax: 8, ymax: 8, scale: 0.5, pixelsParCm: 20 }, ...objets[i])\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n      }\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de droites', 3, '1 : Hauteurs et Médiatrices\\n2 : Médianes et Bissectrices\\n3 : Toutes les droites']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","DroiteRemarquableDuTriangle","Exercice","this","consigne","spacing","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","triangles","sommets","A","B","C","t","d","n","c","objets","A0","B0","C0","tri","G","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","a","angle","rapport","texte","texteCorr","i","Triangles","getSommets","point","randint","choice","similitude","polygone","centreGraviteTriangle","rotation","nommePolygone","hauteurTriangle","epaisseur","codageHauteurTriangle","getNom","mathalea2d","xmin","ymin","xmax","ymax","scale","pixelsParCm","mediatrice","codageMediatrice","constructionMediatrice","medianeTriangle","codageMedianeTriangle","bissectrice","codageBissectrice","constructionBissectrice","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}