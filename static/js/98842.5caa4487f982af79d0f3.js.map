{"version":3,"file":"js/98842.5caa4487f982af79d0f3.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F12-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, listeQuestionsToContenuSansNumero, randint, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif, pgcd, texFractionReduite, lettreMinusculeDepuisChiffre, nombreDeChiffresDansLaPartieEntiere } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Compléter un tableau de valeurs'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n/**\n* Déterminer l'image d'un nombre par une fonction d'après sa forme algébrique\n*\n* * Niveau 1 : Fonctions affines\n* * Niveau 2 : Polynôme du second degré\n* * Niveau 3 : Quotients de fonctions affines\n* * Niveau 4 : (ax+b)(cx+d)\n* * Niveau 5 : Mélange\n* @author Rémi Angot\n* 3F12-3\n*/\nexport default function TableauDeValeurs () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.sup = 5 // niveau de difficulté\n  this.correctionDetailleeDisponible = true\n  this.interactif = true\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    this.sup = parseInt(this.sup)\n    let typesDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = ['ax+b', 'ax']\n    }\n    if (this.sup === 2) {\n      typesDeQuestionsDisponibles = ['ax2+bx+c', 'ax2+c', 'ax2+bx']\n    }\n    if (this.sup === 3) {\n      typesDeQuestionsDisponibles = ['a/cx+d', 'ax+b/cx+d']\n    }\n    if (this.sup === 4) {\n      typesDeQuestionsDisponibles = ['(ax+b)(cx+d)', '(ax+b)2']\n    }\n    if (this.sup === 5) {\n      typesDeQuestionsDisponibles = ['ax+b', 'ax', 'ax2+bx+c', 'ax2+c', 'ax2+bx', 'a/cx+d', 'ax+b/cx+d', '(ax+b)(cx+d)', '(ax+b)2']\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeDeX = combinaisonListes([[-3, 0, 3], [-2, 0, 2], [1, 2, 5], [-3, 6, 9]], this.nbQuestions)\n    for (let i = 0, texte, texteCorr, a, b, c, d, f, x1, x2, x3, expression, nomdef, ligne2, calculs = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      nomdef = lettreMinusculeDepuisChiffre(6 + i) // on commence par f puis on continue dans l'ordre alphabétique\n      x1 = listeDeX[i][0]\n      x2 = listeDeX[i][1]\n      x3 = listeDeX[i][2]\n      switch (listeTypeDeQuestions[i]) {\n        case 'ax+b':\n          a = randint(-10, 10, [0, -1, 1])\n          b = randint(-10, 10, [0])\n          expression = `${a}x${ecritureAlgebrique(b)}`\n          f = x => a * x + b\n          ligne2 = `${nomdef}(x) & ${a * listeDeX[i][0] + b} & ${a * listeDeX[i][1] + b} & ${a * listeDeX[i][2] + b} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=${a}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(b)}=${a * x1}${ecritureAlgebrique(b)}=${a * x1 + b}$<br>`\n          calculs += `$${nomdef}(${x2})=${a}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(b)}=${a * x2}${ecritureAlgebrique(b)}=${a * x2 + b}$<br>`\n          calculs += `$${nomdef}(${x3})=${a}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(b)}=${a * x3}${ecritureAlgebrique(b)}=${a * x3 + b}$<br>`\n          break\n        case 'ax':\n          a = randint(-10, 10, [0, -1, 1])\n          expression = `${a}x`\n          ligne2 = `${nomdef}(x) & ${a * listeDeX[i][0]} & ${a * listeDeX[i][1]} & ${a * listeDeX[i][2]} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=${a}\\\\times${ecritureParentheseSiNegatif(x1)}=${a * x1}$<br>`\n          calculs += `$${nomdef}(${x2})=${a}\\\\times${ecritureParentheseSiNegatif(x2)}=${a * x2}$<br>`\n          calculs += `$${nomdef}(${x3})=${a}\\\\times${ecritureParentheseSiNegatif(x3)}=${a * x3}$<br>`\n          f = x => a * x\n          break\n        case 'ax2+bx+c':\n          a = randint(-3, 3, [0, -1, 1])\n          b = randint(-5, 5, [0, -1, 1])\n          c = randint(-10, 10, [0])\n          expression = `${a}x^2${ecritureAlgebrique(b)}x${ecritureAlgebrique(c)}`\n          ligne2 = `${nomdef}(x) & ${a * listeDeX[i][0] ** 2 + b * listeDeX[i][0] + c} & ${a * listeDeX[i][1] ** 2 + b * listeDeX[i][1] + c} & ${a * listeDeX[i][2] ** 2 + b * listeDeX[i][2] + c} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=${a}\\\\times${ecritureParentheseSiNegatif(x1)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(c)}=${a}\\\\times${x1 ** 2}${ecritureAlgebrique(b * x1)}${ecritureAlgebrique(c)}=${a * x1 ** 2 + b * x1 + c}$<br>`\n          calculs += `$${nomdef}(${x2})=${a}\\\\times${ecritureParentheseSiNegatif(x2)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(c)}=${a}\\\\times${x2 ** 2}${ecritureAlgebrique(b * x2)}${ecritureAlgebrique(c)}=${a * x2 ** 2 + b * x2 + c}$<br>`\n          calculs += `$${nomdef}(${x3})=${a}\\\\times${ecritureParentheseSiNegatif(x3)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(c)}=${a}\\\\times${x3 ** 2}${ecritureAlgebrique(b * x3)}${ecritureAlgebrique(c)}=${a * x3 ** 2 + b * x3 + c}$<br>`\n          f = x => a * x ** 2 + b * x + c\n          break\n        case 'ax2+c':\n          a = randint(-4, 4, [0, -1, 1])\n          c = randint(-10, 10, [0])\n          expression = `${a}x^2${ecritureAlgebrique(c)}`\n          ligne2 = `${nomdef}(x) & ${a * listeDeX[i][0] ** 2 + c} & ${a * listeDeX[i][1] ** 2 + c} & ${a * listeDeX[i][2] ** 2 + c} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=${a}\\\\times${ecritureParentheseSiNegatif(x1)}^2${ecritureAlgebrique(c)}=${a}\\\\times${x1 ** 2}${ecritureAlgebrique(c)}=${a * x1 ** 2 + c}$<br>`\n          calculs += `$${nomdef}(${x2})=${a}\\\\times${ecritureParentheseSiNegatif(x2)}^2${ecritureAlgebrique(c)}=${a}\\\\times${x2 ** 2}${ecritureAlgebrique(c)}=${a * x2 ** 2 + c}$<br>`\n          calculs += `$${nomdef}(${x3})=${a}\\\\times${ecritureParentheseSiNegatif(x3)}^2${ecritureAlgebrique(c)}=${a}\\\\times${x3 ** 2}${ecritureAlgebrique(c)}=${a * x3 ** 2 + c}$<br>`\n          f = x => a * x ** 2 + c\n          break\n        case 'ax2+bx':\n          a = randint(-3, 3, [0, -1, 1])\n          b = randint(-5, 5, [0, -1, 1])\n          c = randint(-10, 10, [0])\n          expression = `${a}x^2${ecritureAlgebrique(b)}x`\n          ligne2 = `${nomdef}(x) & ${a * listeDeX[i][0] ** 2 + b * listeDeX[i][0]} & ${a * listeDeX[i][1] ** 2 + b * listeDeX[i][1]} & ${a * listeDeX[i][2] ** 2 + b * listeDeX[i][2]} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=${a}\\\\times${ecritureParentheseSiNegatif(x1)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x1)}=${a}\\\\times${x1 ** 2}${ecritureAlgebrique(b * x1)}=${a * x1 ** 2 + b * x1}$<br>`\n          calculs += `$${nomdef}(${x2})=${a}\\\\times${ecritureParentheseSiNegatif(x2)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x2)}=${a}\\\\times${x2 ** 2}${ecritureAlgebrique(b * x2)}=${a * x2 ** 2 + b * x2}$<br>`\n          calculs += `$${nomdef}(${x3})=${a}\\\\times${ecritureParentheseSiNegatif(x3)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x3)}=${a}\\\\times${x3 ** 2}${ecritureAlgebrique(b * x3)}=${a * x3 ** 2 + b * x3}$<br>`\n          f = x => a * x ** 2 + b * x\n          break\n        case 'a/cx+d':\n          a = randint(-10, 10, [0])\n          c = randint(-10, 10, [0, -1, 1])\n          d = randint(-10, 10, [0])\n          while (c * x1 + d === 0 || c * x2 + d === 0 || c * x3 + d === 0) {\n            c = randint(-10, 10, [0, -1, 1])\n          }\n          expression = `\\\\dfrac{${a}}{${c}x${ecritureAlgebrique(d)}}`\n          ligne2 = `${nomdef}(x) & ${texFractionReduite(a, c * listeDeX[i][0] + d)} & ${texFractionReduite(a, c * listeDeX[i][1] + d)} & ${texFractionReduite(a, c * listeDeX[i][2] + d)} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=\\\\dfrac{${a}}{${c}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a}}{${c * x1}${ecritureAlgebrique(d)}}=\\\\dfrac{${a}}{${c * x1 + d}}`\n          if (pgcd(a, c * x1 + d) === 1) {\n            calculs += '$<br><br>'\n          } else {\n            calculs += '=' + texFractionReduite(a, c * x1 + d) + '$<br><br>'\n          }\n          calculs += `$${nomdef}(${x2})=\\\\dfrac{${a}}{${c}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a}}{${c * x2}${ecritureAlgebrique(d)}}=\\\\dfrac{${a}}{${c * x2 + d}}`\n          if (pgcd(a, c * x2 + d) === 1) {\n            calculs += '$<br><br>'\n          } else {\n            calculs += '=' + texFractionReduite(a, c * x2 + d) + '$<br><br>'\n          }\n          calculs += `$${nomdef}(${x3})=\\\\dfrac{${a}}{${c}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a}}{${c * x3}${ecritureAlgebrique(d)}}=\\\\dfrac{${a}}{${c * x3 + d}}`\n          if (pgcd(a, c * x3 + d) === 1) {\n            calculs += '$<br><br>'\n          } else {\n            calculs += '=' + texFractionReduite(a, c * x3 + d) + '$<br><br>'\n          }\n          f = x => a / (c * x + d)\n          break\n        case 'ax+b/cx+d':\n          a = randint(-10, 10, [0, 1, -1])\n          b = randint(-10, 10, [0])\n          c = randint(-10, 10, [0, -1, 1])\n          d = randint(-10, 10, [0])\n          while (c * x1 + d === 0 || c * x2 + d === 0 || c * x3 + d === 0) {\n            c = randint(-10, 10, [0, -1, 1])\n          }\n          expression = `\\\\dfrac{${a}x${ecritureAlgebrique(b)}}{${c}x${ecritureAlgebrique(d)}}`\n          ligne2 = `${nomdef}(x) & ${texFractionReduite(a * listeDeX[i][0] + b, c * listeDeX[i][0] + d)} & ${texFractionReduite(a * listeDeX[i][1] + b, c * listeDeX[i][1] + d)} & ${texFractionReduite(a * listeDeX[i][2] + b, c * listeDeX[i][2] + d)} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=\\\\dfrac{${a}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(b)}}{${c}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x1}${ecritureAlgebrique(b)}}{${c * x1}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x1 + b}}{${c * x1 + d}}`\n          if (pgcd(a * x1 + b, c * x1 + d) === 1) {\n            calculs += '$<br><br>'\n          } else {\n            calculs += '=' + texFractionReduite(a * x1 + b, c * x1 + d) + '$<br><br>'\n          }\n          calculs += `$${nomdef}(${x2})=\\\\dfrac{${a}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(b)}}{${c}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x2}${ecritureAlgebrique(b)}}{${c * x2}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x2 + b}}{${c * x2 + d}}`\n          if (pgcd(a * x2 + b, c * x2 + d) === 1) {\n            calculs += '$<br><br>'\n          } else {\n            calculs += '=' + texFractionReduite(a * x2 + b, c * x2 + d) + '$<br><br>'\n          }\n          calculs += `$${nomdef}(${x3})=\\\\dfrac{${a}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(b)}}{${c}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x3}${ecritureAlgebrique(b)}}{${c * x3}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x3 + b}}{${c * x3 + d}}`\n          if (pgcd(a * x3 + b, c * x3 + d) === 1) {\n            calculs += '$<br><br>'\n          } else {\n            calculs += '=' + texFractionReduite(a * x3 + b, c * x3 + d) + '$<br><br>'\n          }\n          f = x => (a * x + b) / (c * x + d)\n          break\n        case '(ax+b)(cx+d)':\n          a = randint(-5, 5, [0, 1, -1])\n          b = randint(-5, 5, [0])\n          c = randint(-3, 3, [0, -1, 1])\n          d = randint(-3, 3, [0])\n          if (a < 0 && b < 0 && c < 0 && d < 0) {\n            d = randint(1, 3)\n          }\n          expression = `(${a}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})`\n          ligne2 = `${nomdef}(x) & ${(a * listeDeX[i][0] + b) * (c * listeDeX[i][0] + d)} & ${(a * listeDeX[i][1] + b) * (c * listeDeX[i][1] + d)} & ${(a * listeDeX[i][2] + b) * (c * listeDeX[i][2] + d)} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${c}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(d)}\\\\right)=(${a * x1}${ecritureAlgebrique(b)})(${c * x1}${ecritureAlgebrique(d)})=${a * x1 + b}\\\\times ${ecritureParentheseSiNegatif(c * x1 + d)}=${(a * x1 + b) * (c * x1 + d)}$<br>`\n          calculs += `$${nomdef}(${x2})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${c}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(d)}\\\\right)=(${a * x2}${ecritureAlgebrique(b)})(${c * x2}${ecritureAlgebrique(d)})=${a * x2 + b}\\\\times ${ecritureParentheseSiNegatif(c * x2 + d)}=${(a * x2 + b) * (c * x2 + d)}$<br>`\n          calculs += `$${nomdef}(${x3})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${c}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(d)}\\\\right)=(${a * x3}${ecritureAlgebrique(b)})(${c * x3}${ecritureAlgebrique(d)})=${a * x3 + b}\\\\times ${ecritureParentheseSiNegatif(c * x3 + d)}=${(a * x3 + b) * (c * x3 + d)}$<br>`\n          f = x => (a * x + b) * (c * x + d)\n          break\n        case '(ax+b)2':\n          a = randint(-3, 3, [0, 1, -1])\n          b = randint(-3, 3, [0])\n          expression = `(${a}x${ecritureAlgebrique(b)})^2`\n          ligne2 = `${nomdef}(x) & ${(a * listeDeX[i][0] + b) ** 2} & ${(a * listeDeX[i][1] + b) ** 2} & ${(a * listeDeX[i][2] + b) ** 2} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(b)}\\\\right)^2=(${a * x1}${ecritureAlgebrique(b)})^2=${ecritureParentheseSiNegatif(a * x1 + b)}^2=${(a * x1 + b) ** 2}$<br>`\n          calculs += `$${nomdef}(${x2})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(b)}\\\\right)^2=(${a * x2}${ecritureAlgebrique(b)})^2=${ecritureParentheseSiNegatif(a * x2 + b)}^2=${(a * x2 + b) ** 2}$<br>`\n          calculs += `$${nomdef}(${x3})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(b)}\\\\right)^2=(${a * x3}${ecritureAlgebrique(b)})^2=${ecritureParentheseSiNegatif(a * x3 + b)}^2=${(a * x3 + b) ** 2}$<br>`\n          f = x => (a * x + b) ** 2\n          break\n      }\n\n      texte = `On considère la fonction $${nomdef}$ définie par $${nomdef}:x\\\\mapsto ${expression}$. Compléter le tableau de valeurs suivant.`\n      texteCorr = ''\n      texte += '<br><br>'\n      if (context.isHtml) {\n        texte += '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|c|}\\n'\n      } else {\n        texte += '$\\\\begin{array}{|l|c|c|c|}\\n'\n      }\n\n      texte += '\\\\hline\\n'\n      texte += `x & ${listeDeX[i][0]} & ${listeDeX[i][1]} & ${listeDeX[i][2]} \\\\\\\\\\n`\n      texte += '\\\\hline\\n'\n      texte += `${nomdef}(x) & \\\\phantom{-10} & \\\\phantom{-10} & \\\\phantom{-10} \\\\\\\\\\n`\n      texte += '\\\\hline\\n'\n      texte += '\\\\end{array}\\n$'\n\n      if (context.isHtml) {\n        texteCorr = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|c|}\\n'\n      } else {\n        texteCorr = '$\\\\begin{array}{|l|c|c|c|}\\n'\n      }\n      if (context.isAmc) {\n        this.autoCorrection[i] = {\n          enonce: `On considère la fonction $${nomdef}$ définie par $${nomdef}:x\\\\mapsto ${expression}$.\\\\\\\\ \\n\n          Calculer :\\\\\\\\ \\n1) $f(${listeDeX[i][0]})$\\n2) $f(${listeDeX[i][1]})$\\n3) $f(${listeDeX[i][2]})$\\\\\\\\ \\n\n          Utiliser le cadre pour les calculs si besoin puis coder les réponses.\\\\\\\\`,\n          propositions: [\n            {\n              type: 'AMCOpen',\n              propositions: [{\n                texte: '',\n                statut: 4\n              }\n              ]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: this.listeCorrections[0],\n                statut: '',\n                reponse: {\n                  texte: `$f(${listeDeX[i][0]})$`,\n                  valeur: f(listeDeX[i][0]),\n                  param: {\n                    digits: nombreDeChiffresDansLaPartieEntiere(f(listeDeX[i][0])),\n                    decimals: 0,\n                    signe: true,\n                    approx: 0\n                  }\n                }\n              }]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: this.listeCorrections[1],\n                statut: '',\n                reponse: {\n                  texte: `$f(${listeDeX[i][1]})$`,\n                  valeur: f(listeDeX[i][1]),\n                  param: {\n                    digits: nombreDeChiffresDansLaPartieEntiere(f(listeDeX[i][1])),\n                    decimals: 0,\n                    signe: true,\n                    approx: 0\n                  }\n                }\n              }]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: this.listeCorrections[2],\n                statut: '',\n                reponse: {\n                  texte: `$f(${listeDeX[i][2]})$`,\n                  valeur: f(listeDeX[i][2]),\n                  param: {\n                    digits: nombreDeChiffresDansLaPartieEntiere(f(listeDeX[i][2])),\n                    decimals: 0,\n                    signe: true,\n                    approx: 0\n                  }\n                }\n              }]\n            }\n          ]\n        }\n      } else if (this.interactif) {\n        texte += `<br>$f(${listeDeX[i][0]}) = $` + ajouteChampTexteMathLive(this, i * 3, 'largeur10 inline')\n        texte += `<br>$f(${listeDeX[i][1]}) = $` + ajouteChampTexteMathLive(this, i * 3 + 1, 'largeur10 inline')\n        texte += `<br>$f(${listeDeX[i][2]}) = $` + ajouteChampTexteMathLive(this, i * 3 + 2, 'largeur10 inline')\n        setReponse(this, i * 3, f(listeDeX[i][0]), { formatInteractif: 'calcul' })\n        setReponse(this, i * 3 + 1, f(listeDeX[i][1]), { formatInteractif: 'calcul' })\n        setReponse(this, i * 3 + 2, f(listeDeX[i][2]), { formatInteractif: 'calcul' })\n      }\n\n      texteCorr += '\\\\hline\\n'\n      texteCorr += `x & ${listeDeX[i][0]} & ${listeDeX[i][1]} & ${listeDeX[i][2]} \\\\\\\\\\n`\n      texteCorr += '\\\\hline\\n'\n      texteCorr += ligne2\n      texteCorr += '\\\\hline\\n'\n      texteCorr += '\\\\end{array}\\n$'\n      if (this.correctionDetaillee) {\n        texteCorr += '<br><br>'\n        texteCorr += calculs\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    this.nbQuestions === 1 ? listeQuestionsToContenuSansNumero(this) : listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 5, '1 : Fonctions affines\\n2 : Polynome du second degré\\n3 : Quotient\\n4 : Produit \\n5 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","TableauDeValeurs","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","spacing","sup","correctionDetailleeDisponible","interactif","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","parseInt","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","listeDeX","texte","texteCorr","a","b","c","d","f","x1","x2","x3","expression","nomdef","ligne2","i","calculs","cpt","lettreMinusculeDepuisChiffre","randint","ecritureAlgebrique","x","ecritureParentheseSiNegatif","texFractionReduite","pgcd","context","enonce","propositions","type","statut","reponse","valeur","param","digits","nombreDeChiffresDansLaPartieEntiere","decimals","signe","approx","ajouteChampTexteMathLive","setReponse","formatInteractif","correctionDetaillee","indexOf","push","listeQuestionsToContenuSansNumero","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}