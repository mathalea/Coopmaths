{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N23-5.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/modules/gestionQcm.js"],"names":["amcReady","amcType","titre","SensDeLaFraction","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","qcmDisponible","modeQcm","nouvelleVersion","tabrep","tabicone","qcm","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","f","i","cpt","randint","texFraction","Math","abs","choice","Number","isInteger","fraction","texNombre2","calcul","fractionDecimale","texFractionSimplifiee","floor","num","elimineDoublons","shuffle2tableaux","mathalea","sortieAMC","replace","tableauSolutionsDuQcm","propositionsQcm","numeroExercice","indexOf","push","listeQuestionsToContenu","gestionQcmInteractif","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","autoCorrection","mg32Editable","listePackages","exercice","document","addEventListener","$","checkbox","button","querySelector","event","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","reduce","spanReponseLigne","forEach","solution","rep","label","check","style","backgroundColor","checked","innerHTML","color","fontSize","querySelectorAll","uicheck","classList","add","espace","sortieHtml","length","reponses","statuts","reponsesEpurees","slice","statutsEpures","j","console","log","splice"],"mappings":"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","file":"js/6485.5dc9a49634523f44ea31.js","sourcesContent":["/* global mathalea */\nimport Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, texFraction, calcul, choice, texNombre2, shuffle2tableaux } from '../../modules/outils.js'\nimport { fraction } from '../../modules/Fractions.js'\nimport { gestionQcmInteractif, propositionsQcm, elimineDoublons } from '../../modules/gestionQcm.js'\n\nexport const amcReady = true\nexport const amcType = 1 // type de question AMC\n\nexport const titre = 'Sens de l’écriture fractionnaire'\n\n/**\n * Donner la fraction correspondant à un nombre ou à un calcul\n * @Auteur Jean-Claude Lhote\n * Ref 6N23-5\n * Publié le 10/03/2021\n */\nexport default function SensDeLaFraction () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 4\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function () {\n    this.qcm = ['6N23-5', [], \"Sens de l'écriture fractionnaire\", 1]\n    let tabrep, tabicone\n    this.listeQuestions = []\n    this.listeCorrections = []\n    const typeDeQuestionsDisponibles = [1, 2, 3, 4]\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n\n    for (let i = 0, texte, texteCorr, a, b, f, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = ''\n      texteCorr = ''\n\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          a = randint(10, 25)\n          b = randint(10, 25, a)\n          texte = `Le quotient de $${a}$ par $${b}$ s'écrit en écriture fractionnaire : $${texFraction(\n              '\\\\phantom{00000}',\n              '\\\\phantom{00000}'\n            )}$`\n          texteCorr = `Le quotient de $${a}$ par $${b}$ s'écrit $${texFraction(a, b)}$.`\n          tabrep = [`$${texFraction(a, b)}$`, `$${texFraction(b, a)}$`, `$${texFraction(Math.abs(a - b), b)}$`, `$${texFraction(a + b, b)}$`, `$${texFraction(a * 10, b)}$`]\n          tabicone = [1, 0, 0, 0, 0]\n          break\n\n        case 2:\n          a = randint(10, 25)\n          b = randint(10, 25, a)\n          texte = `Le nombre qui, multiplié par $${b}$, donne $${a}$ s'écrit en écriture fractionnaire : $${texFraction(\n              '\\\\phantom{00000}',\n              '\\\\phantom{00000}'\n            )}$`\n          texteCorr = `Le nombre qui, multiplié par $${b}$, donne $${a}$ s'écrit $${texFraction(a, b)}$.`\n          tabrep = [`$${texFraction(a, b)}$`, `$${texFraction(b, a)}$`, `$${texFraction(Math.abs(a - b), b)}$`, `$${texFraction(a + b, b)}$`, `$${texFraction(a * 10, b)}$`]\n          tabicone = [1, 0, 0, 0, 0]\n          break\n\n        case 3:\n          a = randint(10, 25)\n          b = randint(10, 25, a)\n          texte = `$${a}\\\\div ${b}$ s'écrit en écriture fractionnaire : $${texFraction(\n              '\\\\phantom{00000}',\n              '\\\\phantom{00000}'\n            )}$`\n          texteCorr = `$${a}\\\\div ${b}$ s'écrit  $${texFraction(a, b)}$.`\n          tabrep = [`$${texFraction(a, b)}$`, `$${texFraction(b, a)}$`, `$${texFraction(Math.abs(a - b), b)}$`, `$${texFraction(a + b, b)}$`, `$${texFraction(a * 10, b)}$`]\n          tabicone = [1, 0, 0, 0, 0]\n          break\n\n        case 4:\n\n          a = randint(1, 5) * 2 + 1\n          b = choice([2, 4, 5, 10])\n          a += b\n          if (Number.isInteger(a / b)) {\n            a++\n          }\n          f = fraction(a, b)\n\n          texte = `Le nombre $${texNombre2(calcul(a / b))}$ s'écrit en écriture fractionnaire : $${texFraction(\n            '\\\\phantom{00000}',\n            '\\\\phantom{00000}'\n          )}$`\n          texteCorr = `Le nombre $${texNombre2(calcul(a / b))}$ s'écrit  $${f.fractionDecimale().texFraction}$`\n          if (f.fractionDecimale().texFraction !== f.texFractionSimplifiee) {\n            texteCorr += ` ou $${f.texFractionSimplifiee}$.`\n          } else texte += '.'\n          tabrep = [`$${f.fractionDecimale().texFraction}$`, `$${texFraction(b, a)}$`, `$${texFraction(a, b * 10)}$`, `$${texFraction(a * 10, b)}$`, `$${texFraction(Math.floor(a / b), fraction(calcul((a / b - Math.floor(a / b))) * 100, 100).fractionDecimale().num)}$`]\n          tabicone = [1, 0, 0, 0, 0]\n          break\n      }\n      [tabrep, tabicone] = elimineDoublons(tabrep, tabicone)\n      shuffle2tableaux(tabrep, tabicone)\n      if (this.modeQcm && !mathalea.sortieAMC) {\n        texteCorr = ''\n        texte = texte.replace(`$${texFraction('\\\\phantom{00000}', '\\\\phantom{00000}')}$`, '')\n        this.tableauSolutionsDuQcm[i] = tabicone\n        texte += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n        texteCorr += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        this.qcm[1].push([`${texte}. \\n `,\n          tabrep,\n          tabicone])\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n    gestionQcmInteractif(this)\n  }\n\n  // this.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ mathalea sortieHtml */\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function gestionQcmInteractif (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          const nbBonnesReponsesAttendues = exercice.tableauSolutionsDuQcm[i].reduce((a, b) => a + b, 0)\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.tableauSolutionsDuQcm[i].forEach((solution, rep) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${rep}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${rep}`)\n            if (solution === 1) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n            }\n          })\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '✔︎'\n            spanReponseLigne.style.color = 'green'\n          } else {\n            spanReponseLigne.innerHTML = '✖︎'\n            spanReponseLigne.style.color = 'red'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (numeroExercice, i, tabrep, tabicone) {\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (sortieHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  if (!mathalea.sortieAMC) {\n    if (sortieHtml) {\n      texte += `<br>  <form id=\"formEx${numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < tabrep.length; rep++) {\n      if (sortieHtml) {\n        texte += `<div class=\"ui checkbox ex${numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${numeroExercice}Q${i}R${rep}\">${tabrep[rep] + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n      if (tabicone[rep] === 1) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[rep]}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n    }\n    if (sortieHtml) {\n      texte += `<span id=\"resultatCheckEx${numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un objet {reponse=[a,b,c,d,e],statuts=[1,0,0,0,0]}\n * élimine les doublons de réponses et les statuts associés avant de retourner l'objet épuré.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (reponses, statuts) { // fonction qui va éliminer les doublons si il y en a\n  const reponsesEpurees = reponses.slice()\n  const statutsEpures = statuts.slice()\n  for (let i = 0; i < reponsesEpurees.length - 1; i++) {\n    for (let j = i + 1; j < reponsesEpurees.length;) {\n      if (reponsesEpurees[i] === reponsesEpurees[j]) {\n        console.log('doublon trouvé', reponsesEpurees[i], reponsesEpurees[j]) // les réponses i et j sont les mêmes\n\n        if (statutsEpures[i] === 1) { // si la réponse i est bonne, on vire la j\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n        } else if (statutsEpures[j] === 1) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n          statutsEpures[i] = 1\n        } else { // Les deux réponses sont mauvaises\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return [reponsesEpurees, statutsEpures]\n}\n"],"sourceRoot":""}