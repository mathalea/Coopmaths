{"version":3,"file":"js/75181.c3a0490a2b1a30e88805.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R12-2.js","webpack://mathalea/./src/js/exercices/5e/5R12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenuSansNumero, creerCouples, randint, calcul, lettreDepuisChiffre, texNombre, shuffle2tableaux } from '../../modules/outils.js'\nimport { mathalea2d, point, repere2, labelPoint, tracePoint } from '../../modules/2d.js'\n\nexport const titre = 'Déterminer les coordonnées (relatives) d’un point'\n\n/**\n * Lire les coordonnées d'un point du plan avec une précision allant de l'unité à 0,25.\n * @author Jean-Claude Lhote\n * Références 5R12-2\n */\nexport default function ReperagePointDuPlan () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Donner les coordonnées des points représentés'\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n  this.sup2 = true\n  this.quartDePlan = false\n  this.listePackages = 'tkz-euclide'\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let texte, texteCorr\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    let listePoints = []\n    const points = []\n    let xmin, xmax, ymin, ymax\n    const k = Math.pow(2, parseInt(this.sup) - 1)\n    const nom = []\n    const objets2d = []\n    if (this.quartDePlan) {\n      xmin = 0; ymin = 0; xmax = 10; ymax = 10\n    } else {\n      xmin = -5; ymin = -5; xmax = 5; ymax = 5\n    }\n    const listeAbs = []; const listeOrd = []\n    for (let i = calcul(xmin + 1 / k); i < calcul(xmax - (parseInt(this.sup) - 1) / k); i = calcul(i + 1 / k)) {\n      listeAbs.push(i)\n    }\n    for (let i = calcul(ymin + 1 / k); i < calcul(ymax - (parseInt(this.sup) - 1) / k); i = calcul(i + 1 / k)) {\n      listeOrd.push(i)\n    }\n    let X0 = false; let Y0 = false\n    listePoints = creerCouples(listeAbs, listeOrd, 10 * k)\n    for (let l = 0, lettre = randint(1, 20); l < 5; l++) {\n      nom.push(lettreDepuisChiffre(l + lettre))\n    } for (let j = 0; j < 5; j++) {\n      points.push(point(listePoints[j][0], listePoints[j][1], nom[j], 'above left'))\n      if (points[j].x === 0) { X0 = true }\n      if (points[j].y === 0) { Y0 = true }\n    }\n    if (!X0) { points[0].x = 0 }\n    if (!Y0) { points[1].y = 0 }\n    shuffle2tableaux(points, nom)\n    console.log(points)\n\n    texte = 'Déterminer les coordonnées des points'\n    texteCorr = 'Les coordonnées des points sont :<br>'\n    for (let i = 0; i < 4; i++) {\n      texte += ` $${nom[i]}$,`\n      texteCorr += ` $${nom[i]}(${texNombre(points[i].x)};${texNombre(points[i].y)})$, `\n    }\n    texte += ` $${nom[4]}$.<br>`\n    texteCorr += ` $${nom[4]}(${texNombre(points[4].x)};${texNombre(points[4].y)})$.`\n    if (this.sup2) {\n      objets2d.push(repere2({\n        xMin: xmin - 1,\n        yMin: ymin - 1,\n        xMax: xmax + 1,\n        yMax: ymax + 1,\n        grilleSecondaire: true,\n        grilleSecondaireDistance: 1 / k,\n        grilleSecondaireXMin: xmin - 1,\n        grilleSecondaireYMin: ymin - 1,\n        grilleSecondaireXMax: xmax + 1,\n        grilleSecondaireYMax: ymax + 1\n      }))\n    } else {\n      objets2d.push(repere2({ xMin: xmin - 1, yMin: ymin - 1, xMax: xmax + 1, yMax: ymax + 1 }))\n    }\n    for (let i = 0; i < 5; i++) {\n      objets2d.push(points[i], tracePoint(points[i], 'red'), labelPoint(points[i]))\n    }\n    texte += mathalea2d({ xmin: xmin - 1, ymin: ymin - 1, xmax: xmax + 1, ymax: ymax + 1, pixelsParCm: 30, scale: 0.75 }, objets2d)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, \"1 : Coordonnées entières\\n2 : Coordonnées 'en demis'\\n3 : Coordonnées 'en quarts'\"]\n  this.besoinFormulaire2CaseACocher = ['Grille de lecture']\n}\n","import ReperagePointDuPlan from './5R12-2.js'\nexport const titre = 'Déterminer les coordonnées (positives) d’un point'\n\n/**\n * Lire les coordonnées d'un point du quart de plan positif avec une précision allant de l'unité à 0,25.\n * @author Jean-Claude Lhote\n * référence 5R12\n */\nexport default function ReperagePointDuQuartDePlan () {\n  ReperagePointDuPlan.call(this)\n  this.titre = titre\n  this.quartDePlan = true\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ReperagePointDuPlan","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","sup2","quartDePlan","listePackages","nouvelleVersion","texte","texteCorr","listeQuestions","listeCorrections","contenu","contenuCorrection","listePoints","points","xmin","xmax","ymin","ymax","k","Math","pow","parseInt","nom","objets2d","listeAbs","listeOrd","i","calcul","push","X0","Y0","creerCouples","l","lettre","randint","lettreDepuisChiffre","j","point","x","y","shuffle2tableaux","console","log","texNombre","repere2","xMin","yMin","xMax","yMax","grilleSecondaire","grilleSecondaireDistance","grilleSecondaireXMin","grilleSecondaireYMin","grilleSecondaireXMax","grilleSecondaireYMax","tracePoint","labelPoint","mathalea2d","pixelsParCm","scale","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","ReperagePointDuQuartDePlan","boutonAide","consigneCorrection","introduction","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}