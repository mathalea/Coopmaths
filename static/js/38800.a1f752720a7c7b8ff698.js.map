{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta4G20-3.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","CalculerValeurManquanteVisuelPythagore","listeTypeDeQuestions","combinaisonListes","objetsEnonce","objetsEnonceml","objetsCorrection","paramsEnonce","paramsCorrection","context","A","point","B","C","p1","polygone","isVisible","p2","rotation","randint","a","listePoints","b","c","car1","codageAngleDroit","carre","couleurDeRemplissage","bar1","barycentre","positionLabel","car2","bar2","car3","bar3","latexParPoint","afficheLongueurSegment","texte","texteCorr","i","cpt","xmin","ymin","xmax","ymax","pixelsParCm","scale","mainlevee","mathalea2d","indexOf","push","listeQuestionsToContenu"],"mappings":"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","file":"js/38800.a1f752720a7c7b8ff698.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint } from '../../modules/outils.js'\nimport { afficheLongueurSegment, barycentre, carre, codageAngleDroit, latexParPoint, mathalea2d, point, polygone, rotation } from '../../modules/2d.js'\n\nexport const titre = 'Calculer une valeur manquante avec l’égalité de Pythagore'\n\nexport default function CalculerValeurManquanteVisuelPythagore () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.consigne = \"Dans chaque cas, calculer la valeur manquante indiquée par un point d'interrogation.\"\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4] // tableau à compléter par valeurs possibles des types de questions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n\n    let objetsEnonce, objetsEnonceml, objetsCorrection, paramsEnonce, paramsCorrection\n    context.fenetreMathalea2d = [-11.7, -6.4, 18.3, 13.6]\n    const A = point(4, 0, 'A')\n    const B = point(0, 3, 'B')\n    const C = point(0, 0, 'C')\n    const p1 = polygone(A, B, C)\n    p1.isVisible = false\n    const p2 = rotation(p1, C, randint(0, 359))\n    const a = p2.listePoints[0]\n    const b = p2.listePoints[1]\n    const c = p2.listePoints[2]\n    const codage = codageAngleDroit(a, c, b)\n    const car1 = carre(b, a)\n    car1.couleurDeRemplissage = 'red'\n    const bar1 = barycentre(car1)\n    bar1.positionLabel = 'center'\n    const car2 = carre(c, b)\n    car2.couleurDeRemplissage = 'blue'\n    const bar2 = barycentre(car2)\n    bar2.positionLabel = 'center'\n    const car3 = carre(a, c)\n    car3.couleurDeRemplissage = 'green'\n    const bar3 = barycentre(car3)\n    bar3.positionLabel = 'center'\n    const q1 = latexParPoint('? \\\\text{ cm}^2', bar1)\n    const l1 = afficheLongueurSegment(b, c)\n    const l2 = afficheLongueurSegment(c, a)\n    const q2 = latexParPoint('9 \\\\text{ cm}^2', bar2)\n    const q3 = latexParPoint('16 \\\\text{ cm}^2', bar3)\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      objetsEnonce = [] // on initialise le tableau des objets Mathalea2d de l'enoncé\n      objetsEnonceml = [] // Idem pour l'enoncé à main levée si besoin\n      objetsCorrection = [] // Idem pour la correction\n\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n\n      switch (listeTypeDeQuestions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n        case 1:\n\n          // ici sont créés les texte, tex_corr, objets mathalea2d divers entrant dans le contenu de l'exercice\n          break\n\n        case 2:\n          // Idem Cas1 mais avec d'autres texte, texteCorr...\n          break\n\n        case 3:\n\n          break\n\n        case 4:\n\n          break\n      }\n      //  objetsEnonce.push () // On rempli les tableaux d'objets Mathalea2d\n      //  objetsEnonceml.push()\n      //  objetsCorrection.push()\n\n      // paramètres de la fenêtre Mathalea2d pour l'énoncé main levée\n      //    paramsEnonceml = { xmin: Math.min(objetsEnonceml.x), ymin: Math.min(objetsEnonceml.y), xmax: Math.max(objetsEnonceml.x), ymax: Math.max(objetsEnonceml.y), pixelsParCm: 20, scale: 1, mainlevee: true, amplitude: 1 }\n      // paramètres de la fenêtre Mathalea2d pour l'énoncé normal\n      paramsEnonce = { xmin: -10, ymin: -10, xmax: 10, ymax: 10, pixelsParCm: 20, scale: 1, mainlevee: false }\n      // paramètres de la fenêtre Mathalea2d pour la correction\n      paramsCorrection = { xmin: -10, ymin: -10, xmax: 10, ymax: 10, pixelsParCm: 20, scale: 1 }\n      // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n      texte += mathalea2d(paramsEnonce, objetsEnonce)\n      // On ajoute au texte de la correction, la figure de la correction\n      texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n\n  // this.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n} // Fin de l'exercice.\n"],"sourceRoot":""}