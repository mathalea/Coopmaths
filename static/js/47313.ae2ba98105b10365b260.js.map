{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R11-2.js"],"names":["titre","Placer_points_sur_axe_relatifs","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","typeExercice","listePackages","nouvelleVersion","numeroExercice","typesDeQuestions","listeQuestions","listeCorrections","contenu","contenuCorrection","combinaisonListes","parseInt","htmlConsigne","abs0","abs1","abs2","abs3","l1","l2","l3","x1","x2","x3","x11","x22","x33","pas1","pas2","id_unique","texte","texteCorr","i","lettreDepuisChiffre","randint","arrondi","texNombrec","context","Date","now","SVG_reperage_sur_un_axe","calcul","Latex_reperage_sur_un_axe","push","listeQuestionsToContenu","besoinFormulaireNumerique"],"mappings":"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","file":"js/47313.ae2ba98105b10365b260.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, arrondi, calcul, texNombrec, lettreDepuisChiffre, htmlConsigne } from '../../modules/outils.js'\nimport { SVG_reperage_sur_un_axe, Latex_reperage_sur_un_axe } from '../../modules/macroSvgJs.js'\n\nexport const titre = 'Placer un point d’abscisse un nombre relatif'\n\n/**\n* Placer un point d'abscisse un nombre relatif\n* @author Jean-Claude Lhote et Rémi Angot\n* Référence 5R11-2\n*/\nexport default function Placer_points_sur_axe_relatifs () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ' Placer trois points sur un axe gradué.'\n  this.nbQuestions = 5\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n  this.typeExercice = 'SVGJS'\n\n  this.listePackages = 'tkz-euclide'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (this.sup == 4) { typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else { typesDeQuestions = combinaisonListes([parseInt(this.sup)], this.nbQuestions) }\n\n    this.contenu = htmlConsigne(this.consigne)\n    for (let i = 0, abs0, abs1, abs2, abs3, l1, l2, l3, x1, x2, x3, x11, x22, x33, pas1, pas2, id_unique, texte, texteCorr; i < this.nbQuestions; i++) {\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n\n      switch (typesDeQuestions[i]) {\n        case 1: // Placer des décimaux relatifs sur un axe (1 décimale)\n          abs0 = randint(-7, -3)\n          pas1 = 1\n          pas2 = 10\n          break\n\n        case 2: // Placer des décimaux relatifs sur un axe (2 décimales)\n          abs0 = randint(-4, -2) / 10\n          pas1 = 10\n          pas2 = 10\n          break\n\n        case 3: // Placer des décimaux relatifs sur un axe (3 décimales)\n          abs0 = randint(-10, -2) / 100\n          pas1 = 100\n          pas2 = 10\n          break\n      }\n      x1 = randint(0, 2); x2 = randint(3, 4); x3 = randint(5, 6)\n      x11 = randint(1, 9); x22 = randint(1, 9); x33 = randint(1, 3)\n      abs1 = arrondi(abs0 + x1 / pas1 + x11 / pas1 / pas2, typesDeQuestions[i]) // le type de questions est égal au nombre de décimales.\n      abs2 = arrondi(abs0 + x2 / pas1 + x22 / pas1 / pas2, typesDeQuestions[i])\n      abs3 = arrondi(abs0 + x3 / pas1 + x33 / pas1 / pas2, typesDeQuestions[i])\n\n      texte = `Placer les points : {\\\\small $${l1}$(${texNombrec(abs1)}), $${l2}$(${texNombrec(abs2)}), $${l3}$(${texNombrec(abs3)})}<br>`\n      if (context.isHtml) {\n        texteCorr = ''\n        id_unique = `${i}_${Date.now()}`\n        this.contenu += `<div id=\"div_svg${numeroExercice}${id_unique}\" style=\"width: 90%; height: 110px;  \"></div>`\n        this.contenu += `Placer les points : ${l1}(${texNombrec(abs1)}), ${l2}(${texNombrec(abs2)}), ${l3}(${texNombrec(abs3)})`\n        SVG_reperage_sur_un_axe(`div_svg${numeroExercice}${id_unique}`, abs0, 6, pas1, pas2, [], [[calcul(abs0 + 1 / pas1, 0), 1, 0], [calcul(abs0 + 2 / pas1, 0), 2, 0], [calcul(abs0 + 3 / pas1, 0), 3, 0], [calcul(abs0 + 4 / pas1, 0), 4, 0], [calcul(abs0 + 5 / pas1, 0), 5, 0], [calcul(abs0 + 6 / pas1, 0), 6, 0]], false)\n        this.contenuCorrection += `<div id=\"div_svg_corr${numeroExercice}${id_unique}\" style=\"width: 90%; height: 200px;  \"></div>`\n        SVG_reperage_sur_un_axe(`div_svg_corr${numeroExercice}${id_unique}`, abs0, 6, pas1, pas2, [[l1, x1, x11, true], [l2, x2, x22, true], [l3, x3, x33, true]], [[calcul(abs0 + 1 / pas1, 0), 1, 0], [calcul(abs0 + 2 / pas1, 0), 2, 0], [calcul(abs0 + 3 / pas1, 0), 3, 0], [calcul(abs0 + 4 / pas1, 0), 4, 0], [calcul(abs0 + 5 / pas1, 0), 5, 0], [calcul(abs0 + 6 / pas1, 0), 6, 0]], false)\n      } else { // sortie Latex\n        texte += Latex_reperage_sur_un_axe(2, abs0, pas1, pas2, [], [[calcul(abs0 + 1 / pas1, 0), 1, 0], [calcul(abs0 + 2 / pas1, 0), 2, 0], [calcul(abs0 + 3 / pas1, 0), 3, 0], [calcul(abs0 + 4 / pas1, 0), 4, 0], [calcul(abs0 + 5 / pas1, 0), 5, 0], [calcul(abs0 + 6 / pas1, 0), 6, 0]], false)\n        texteCorr = `Les points {\\\\small $${l1}$(${texNombrec(abs1)}), $${l2}$(${texNombrec(abs2)}), $${l3}$(${texNombrec(abs3)})} sont placés ci dessous<br>`\n        texteCorr += Latex_reperage_sur_un_axe(2, abs0, pas1, pas2, [[l1, x1, x11, true], [l2, x2, x22, true], [l3, x3, x33, true]], [[calcul(abs0 + 1 / pas1, 0), 1, 0], [calcul(abs0 + 2 / pas1, 0), 2, 0], [calcul(abs0 + 3 / pas1, 0), 3, 0], [calcul(abs0 + 4 / pas1, 0), 4, 0], [calcul(abs0 + 5 / pas1, 0), 5, 0], [calcul(abs0 + 6 / pas1, 0), 6, 0]], false)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n      }\n    }\n    if (!context.isHtml) { listeQuestionsToContenu(this) }\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, '1 : Nombre relatif à une décimale\\n2 : Nombre relatif à deux décimales\\n3 : Nombre relatif à trois décimales\\n4 : Mélange']\n}\n"],"sourceRoot":""}