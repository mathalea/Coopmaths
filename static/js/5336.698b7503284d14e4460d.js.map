{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G32-1.js"],"names":["amcReady","amcType","titre","Calculs_trigonometriques1","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","spacingCorr","spacing","qcmDisponible","modeQcm","nouvelleVersion","qcm","listeQuestions","listeCorrections","alfa","baita","alpha","O","H","M","R","R2","Axe","normalV","normalH","P","HP","Sph","OP","PoleNord","PoleSud","objets","sortieHtml","texte","texteCorr","i","cpt","randint","point3d","vecteur3d","arete3d","rotationV3d","mathalea","anglePerspective","p2d","nom","z3d","sphere3d","push","codageAngleDroit","tracePoint","labelPoint","demicercle3d","afficheMesureAngle","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","texNombrec","Math","cos","PI","indexOf","listeQuestionsToContenu"],"mappings":"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","file":"js/5336.698b7503284d14e4460d.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport { listeQuestionsToContenu, randint, texNombrec } from '../../modules/outils.js'\nimport { tracePoint, labelPoint, afficheMesureAngle, codageAngleDroit, mathalea2d } from '../../modules/2d.js';\nimport { point3d, vecteur3d, sphere3d, arete3d, rotationV3d, demicercle3d } from '../../modules/3d.js'\n\nexport const amcReady = true\nexport const amcType = 3 // type de question AMC\n\nexport const titre = 'Calcul d’un parallèle terrestre'\n\n/**\n * propose de calculer la longueur d'un parallèle terrestre à partir de la latitde\n * @Auteur Jean-Claude Lhote\n * Référence 3G32-1 \n*/\nexport default function Calculs_trigonometriques1() {\n    Exercice.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n    this.consigne = \"\";\n    this.nbQuestions = 1;\n    this.nbCols = 1; // Uniquement pour la sortie LaTeX\n    this.nbColsCorr = 1; // Uniquement pour la sortie LaTeX\n    this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n    this.video = \"\" // Id YouTube ou url\n    this.spacingCorr = 2\n    this.spacing = 2\n    this.qcmDisponible=false\n\tthis.modeQcm=false;\n\n    this.nouvelleVersion = function () {\n        this.qcm=['3G32-1',[],\"Calcul d'un parallèle terrestre\",3,{}]\n        this.listeQuestions = []; // Liste de questions\n        this.listeCorrections = []; // Liste de questions corrigées\n        let alfa, baita, alpha, O, H, M, R, R2, Axe, normalV, normalH, P, HP, Sph, OP, PoleNord, PoleSud, objets = []\n        if (sortieHtml) {\n            alfa = 'α'\n            baita = 'β'\n        }\n        else {\n            alfa = '\\\\alpha'\n            baita = '\\\\beta'\n        }\n\n        for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n            // Boucle principale où i+1 correspond au numéro de la question\n\n            objets = []\n            alpha = randint(30, 60)\n            O = point3d(0, 0, 0, false, 'O')\n            M = point3d(5, 0, 0, true, 'M')\n            PoleNord = point3d(0, 0, 5, false, 'N')\n            PoleSud = point3d(0, 0, -5, false, 'S')\n            R = vecteur3d(O, M)\n            Axe = arete3d(PoleSud, PoleNord)\n            normalV = vecteur3d(0, 0, 1)\n            M = rotationV3d(M, normalV, mathalea.anglePerspective)\n            M.p2d.nom = 'M'\n            normalH = rotationV3d(R, normalV, 90)\n            P = rotationV3d(M, normalH, -alpha)\n            P.p2d.nom = 'P'\n            H = point3d(0, 0, P.z3d, false)\n            R2 = vecteur3d(H, P)\n            H.p2d.nom = 'H'\n            Sph = sphere3d(O, 5, 1, 3)\n            HP = arete3d(H, P)\n            OP = arete3d(O, P)\n            objets.push(Sph, Axe.p2d, HP.p2d, OP.p2d, codageAngleDroit(P.p2d, H.p2d, O.p2d), tracePoint(H.p2d, P.p2d, O.p2d, M.p2d), labelPoint(H.p2d, P.p2d, O.p2d, M.p2d))\n            objets.push(demicercle3d(H, normalV, R2, 'caché', 'red', 0), demicercle3d(H, normalV, R2, 'visible', 'red', 0))\n            objets.push(arete3d(O, M).p2d)\n            objets.push(afficheMesureAngle(M.p2d, O.p2d, P.p2d, 'black', 1.5, `${alpha}`))\n            texte = mathalea2d({ xmin: -8, ymin: -6, xmax: 8, ymax: 6, pixelsParCm: 20, scale: 0.5 }, objets) + '<br>'\n            texte += `Quelle est la longueur du $${alpha}$e parallèle Nord ?`\n            texteCorr = mathalea2d({ xmin: -8, ymin: -6, xmax: 8, ymax: 6, pixelsParCm: 20, scale: 0.5 }, objets) + '<br>'\n            texteCorr += `Considérons que le $${alpha}$e parallèle Nord est un cercle. Soit $H$ le centre de ce cercle situé sur l'axe de rotation de la terre.<br>`\n            texteCorr += `Les segments $[HP]$ et $[OM]$ sont parallèles, donc les angles alternes-internes $\\\\widehat{MOP}$ et $\\\\widehat{OPH}$ sont égaux.<br>`\n            texteCorr += `Dans le triangle $OPH$ rectangle en $H$, $\\\\cos(\\\\widehat{OPH})=\\\\dfrac{HP}{OP}$ d'où $HP=OP\\\\times \\\\cos(\\\\widehat{OPH})$.<br>`\n            texteCorr += `Le rayon de la terre étant approximativement de $6400$ km, nous pouvons calculer $HP$ :<br>`\n            texteCorr += `$HP=6400\\\\times \\\\cos(${alpha})\\\\approx ${texNombrec(6400 * Math.cos(alpha * Math.PI / 180))}$ km.<br>`\n            texteCorr += `Calculons maintenant la longueur $L$ du $${alpha}$e parallèle : $L\\\\approx 2\\\\times \\\\pi\\\\times ${texNombrec(6400 * Math.cos(alpha * Math.PI / 180))}\\\\approx ${texNombrec(2 * Math.PI * 6400 * Math.cos(alpha * Math.PI / 180))}$ km.<br>`\n\n            if (this.listeQuestions.indexOf(texte) == -1) {\n                // Si la question n'a jamais été posée, on en crée une autre\n                this.listeQuestions.push(texte);\n                this.listeCorrections.push(texteCorr);\n                i++;\n                this.qcm[1].push([texte,[texteCorr],[3]])\n            }\n            cpt++;\n        }\n        listeQuestionsToContenu(this);\n    };\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n\n"],"sourceRoot":""}