{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C32-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Calculs_avec_puissances_de_dix","Exercice","this","sup","sup2","nbCols","nbColsCorr","nbQuestions","qcmDisponible","modeQcm","nouvelleVersion","qcm","espace","sortieHtml","type_de_questions_disponibles","tabrep","tabicone","consigne","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","nombre","mantisse1","exp1","decalage","mantisse","exp","decimalstring","scientifiquestring","i","cpt","randint","calcul","choice","texNombrec","texNombre","miseEnEvidence","mathalea","sortieAMC","shuffle2tableaux","length","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoin_formulaire2_numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/4273.17ef8b7894d33929f63c.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {shuffle2tableaux,listeQuestionsToContenu,randint,choice,combinaisonListes,calcul,texNombrec,texNombre,miseEnEvidence} from '../../modules/outils.js'\n\nexport const titre = 'Calcul avec les puissances de dix'\n\n/**\n * type 1 : Un nombre est donné par le produit d'un décimal par une puissance de dix, il faut l'écrire en notation scientifique\n * type 2 : On donne la notation scientifique d'un nombre et on doit trouver l'exposant manquant de 10 dans le membre de gauche.\n * @Auteur Jean-Claude Lhote\n * 4C32-1\n */\nexport default function Calculs_avec_puissances_de_dix() {\n  Exercice.call(this)\n  this.sup = 1;\n  this.sup2 = 1;\n  this.titre = titre\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.nbQuestions = 5;\n  this.qcmDisponible=true\n  this.modeQcm=false\n\n  this.nouvelleVersion = function () {\n    this.qcm=['4C32-1',[],\"Calcul avec les puissances de dix\",1]\n    let espace =``;\n    if (sortieHtml) {\n      espace = `&emsp;`;\n    } else {\n      espace = `\\\\qquad`;\n    }\n    let tabrep=[],tabicone=[1,0,0,0]\n\n    if (this.sup == 1) this.consigne = `Donner l\\'écriture scientifique des nombres suivants.`;\n    else this.consigne = `Compléter l'égalité des nombres suivants.`;\n    let type_de_questions_disponibles;\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    if (this.sup2 == 1) type_de_questions_disponibles = [0, 0, 0, 1, 1];\n    else if (this.sup2 == 2) type_de_questions_disponibles = [0, 1, 1, 2, 2];\n    else type_de_questions_disponibles = [2, 2, 3, 3, 3];\n\n    let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions);\n    for (let i = 0, texte, texteCorr, nombre, mantisse1, exp1, decalage, mantisse, exp, decimalstring, scientifiquestring, cpt = 0;\n      i < this.nbQuestions && cpt < 50;) {\n      //        nombre=calcul(randint(1001,9999)/10**randint(1,6))\n      //      mantisse=calcul(nombre/10**(Math.floor(Math.log10(nombre))))\n      //        exp=Math.floor(Math.log10(nombre))\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          decalage = randint(-1, 1, 0)\n          mantisse = randint(1, 9)\n          exp = randint(1, 5)\n          break\n        case 1:\n          decalage = randint(-2, 2, 0)\n          mantisse = calcul(randint(11, 99) / 10)\n          exp = randint(1, 5)\n          break;\n        case 2:\n          decalage = randint(-3, 3, 0)\n          if (randint(0, 1) == 1) mantisse = calcul(randint(111, 999) / 100)\n          else mantisse = calcul((randint(1, 9) * 100 + randint(1, 9)) / 100)\n          exp = randint(1, 7) * choice([-1, 1])\n          break;\n        case 3:\n          decalage = randint(-4, 4, 0)\n          if (randint(0, 1) == 1) mantisse = calcul((randint(1, 9) * 1000 + randint(1, 19) * 5) / 1000)\n          else mantisse = calcul(randint(1111, 9999) / 1000)\n          exp = randint(3, 7) * choice([-1, 1])\n          break;\n      }\n      nombre = calcul(mantisse * 10 ** exp)\n      mantisse1 = calcul(mantisse * 10 ** decalage)\n      exp1 = exp - decalage\n\n      decimalstring = `${texNombrec(mantisse1)} \\\\times 10^{${exp1}}`\n      scientifiquestring = `${texNombre(mantisse)} \\\\times 10^{${exp}}`\n      if (this.sup == 1) {\n        texte = `$${decimalstring}$`\n        texteCorr = `$${miseEnEvidence(`${texNombrec(mantisse1)}`, 'blue')}\\\\times ${miseEnEvidence(`10^{${exp1}}`)} = ${miseEnEvidence(`${texNombre(mantisse)}\\\\times 10^{${decalage}}`, 'blue')}\\\\times  ${miseEnEvidence(`10^{${exp1}}`)} = ${scientifiquestring}$`\n        tabrep=[`$${scientifiquestring}$`,`$${texNombre(mantisse)} \\\\times 10^{${exp-1}}$`,`$${texNombre(mantisse)} \\\\times 10^{${exp+1}}$`,`$${texNombre(mantisse)} \\\\times 10^{${-exp}}$`]\n      }\n      else {\n        texteCorr = `$${miseEnEvidence(texNombre(mantisse1), 'blue')}\\\\times  ${miseEnEvidence(`10^{${exp1}}`)}=${miseEnEvidence(texNombre(mantisse) + `\\\\times 10^{${decalage}}`, 'blue')}\\\\times  ${miseEnEvidence(`10^{${exp1}}`)} =${scientifiquestring}$`\n        texte = `$${texNombre(mantisse1)}\\\\times 10^{${miseEnEvidence(`....`)}}=${scientifiquestring}$`\n        tabrep=[`$${exp1}$`,`$${exp1-1}$`,`$${exp1+1}$`,`$${-exp1}$`]\n      }\n\n      if (this.modeQcm&&!mathalea.sortieAMC) {\n        texteCorr=''\n        texte+=`<br>  Réponses possibles : ${espace}  `\n        shuffle2tableaux(tabrep, tabicone);\n        for (let i=0; i<tabrep.length; i++) {\n          texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace ;\n         if (tabicone[i]==1) {\n           texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace ;\n         } else {\n           texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace ;\n         }\n       }\n      }\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        this.qcm[1].push([`${texte}\\n`,tabrep,tabicone])\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\"Type d\\'exercices\", 2, \"1 : Traduire en notation scientifique\\n2 : Exercice à trou\"];\n  this.besoin_formulaire2_numerique = [\"Niveaux de difficulté\", 3, \"1 : Facile\\n2 : Moyen\\n3 : Difficile\"];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}