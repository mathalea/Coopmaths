{"version":3,"file":"js/27022.03cd9386a0801769f744.js","mappings":"4GAMe,SAASA,IAItBC,KAAKC,MAAQ,GACbD,KAAKE,YAAa,EAclBF,KAAKG,SAAW,GAChBH,KAAKI,mBAAqB,GAC1BJ,KAAKK,aAAe,GACpBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKQ,QAAU,GACfR,KAAKS,kBAAoB,GACzBT,KAAKU,eAAiB,GACtBV,KAAKW,sBAAwB,GAK7BX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EAKnBb,KAAKc,mBAAoB,EACzBd,KAAKe,cAAgB,GACrBf,KAAKgB,oBAAqB,EAC1BhB,KAAKiB,uBAAwB,EAC7BjB,KAAKkB,OAAS,EACdlB,KAAKmB,WAAa,EAClBnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAM7BvB,KAAKwB,QAAS,EACdxB,KAAKyB,gBAAkB,EAKvBzB,KAAK0B,YAAc,GACnB1B,KAAK2B,mBAAqB,EAC1B3B,KAAK4B,+BAAgC,EACrC5B,KAAK6B,qBAAsB,EAC3B7B,KAAK8B,oBAAqB,EAC1B9B,KAAK+B,MAAQ,GAEb/B,KAAKgC,YAAa,EAClBhC,KAAKiC,uBAAwB,EAE7BjC,KAAKkC,2BAA4B,EACjClC,KAAKmC,uBAAwB,EAC7BnC,KAAKoC,6BAA8B,EAEnCpC,KAAKqC,4BAA6B,EAClCrC,KAAKsC,wBAAyB,EAC9BtC,KAAKuC,8BAA+B,EAEpCvC,KAAKwC,4BAA6B,EAClCxC,KAAKyC,wBAAyB,EAC9BzC,KAAK0C,8BAA+B,EAEpC1C,KAAK2C,4BAA6B,EAClC3C,KAAK4C,wBAAyB,EAC9B5C,KAAK6C,8BAA+B,EAMpC7C,KAAK8C,cAAe,EASpB9C,KAAK+C,eAAiB,GAMtB/C,KAAKgD,gBAAkB,SAAUC,KAQjCjD,KAAKkD,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAASnD,KAAK+C,eAAiB,IACnC,IAAIM,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIxD,KAAK+C,eAAeU,QAAQJ,IAAmB,KAGjDrD,KAAK+C,eAAeW,KAAKL,IAClB,I,iMC7HN,MAAMpD,EAAQ,6CACR0D,GAAkB,EAClBC,EAAiB,MAGjBC,EAAoB,aAOlB,SAASC,IACtB/D,EAAAA,QAAAA,KAAcC,MACdA,KAAK0B,YAAc,EAEnB1B,KAAKgD,gBAAkB,WACrB,IAAIe,EAAIC,EAAIC,EAAIC,EAAIC,EAGhBC,EAAOC,EAAWC,EAEtB,OAJAtE,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,IAGhBgE,EAAAA,EAAAA,KAAO,CAAC,EAAG,EAAG,EAAG,EAAG,KAC1B,KAAK,EACHR,GAAKS,EAAAA,EAAAA,KAA2B,GAApBC,EAAAA,EAAAA,MAAS,EAAG,EAAG,IAC3BT,GAAKQ,EAAAA,EAAAA,KAAqC,GAA9BC,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,EAAGV,EAAK,KACpCI,GAAIK,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,KAAO,CAAC,GAAK,IAAK,EAAG,IAAK,OAAQA,EAAAA,EAAAA,KAAO,EAAE,EAAG,KACzDN,EAAKE,EAAIJ,EACTG,EAAKC,EAAIH,EACTI,EAAS,iFAAgFL,UAAWC,4DAA6DC,UAAWC,gHAE5KlE,KAAKU,eAAe,GAAK,CACvBgE,OAAQN,EACRO,aAAc,CACZ,CACEP,MAAO,IACPQ,OAAQb,EAAKG,GAAOF,EAAKC,GAE3B,CACEG,MAAO,IACPQ,OAAe,KAAPb,IAGZc,QAAS,CAAEC,SAAS,IAEtBR,GAASS,EAAAA,EAAAA,IAAgB/E,KAAM,GAC/BoE,GAASE,EAAOF,MAEhBC,EAAYC,EAAOD,UAAa,gtBAM9BW,EAAAA,EAAAA,KAA4BjB,cAAciB,EAAAA,EAAAA,KAA4Bd,OAAOc,EAAAA,EAAAA,KAA4BhB,cAAcgB,EAAAA,EAAAA,KAA4Bf,gBAClJF,EAAKG,MAAMc,EAAAA,EAAAA,KAA4BhB,EAAKC,MAAOF,EAAKG,EAAKF,EAAKC,4HAGrEI,IAAaY,EAAAA,EAAAA,KAAgB,mFAESD,EAAAA,EAAAA,KAA4BjB,cAAciB,EAAAA,EAAAA,KAA4Bd,MAAOH,EAAKG,WAAWc,EAAAA,EAAAA,KAA4BhB,cAAcgB,EAAAA,EAAAA,KAA4Bf,MAAOD,EAAKC,mFAGrN,MACF,KAAK,EACHA,GAAKO,EAAAA,EAAAA,KAA2B,GAApBC,EAAAA,EAAAA,MAAS,EAAG,EAAG,IAC3BP,GAAKM,EAAAA,EAAAA,KAAqC,GAA9BC,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,EAAGR,EAAK,KACpCE,GAAIK,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,KAAO,CAAC,GAAK,IAAK,EAAG,IAAK,OAAQA,EAAAA,EAAAA,KAAO,EAAE,EAAG,KACzDR,EAAKI,EAAIF,EACTD,EAAKG,EAAID,EACTE,EAAS,iFAAgFL,UAAWC,4DAA6DC,UAAWC,gHAE5KlE,KAAKU,eAAe,GAAK,CACvBgE,OAAQN,EACRO,aAAc,CACZ,CACEP,MAAO,IACPQ,OAAQb,EAAKG,GAAOF,EAAKC,GAE3B,CACEG,MAAO,IACPQ,OAAe,KAAPb,IAGZc,QAAS,CAAEC,SAAS,IAEtBR,GAASS,EAAAA,EAAAA,IAAgB/E,KAAM,GAC/BoE,GAASE,EAAOF,MAEhBC,EAAYC,EAAOD,UAAa,gtBAM9BW,EAAAA,EAAAA,KAA4BjB,cAAciB,EAAAA,EAAAA,KAA4Bd,OAAOc,EAAAA,EAAAA,KAA4BhB,cAAcgB,EAAAA,EAAAA,KAA4Bf,gBAClJF,EAAKG,MAAMc,EAAAA,EAAAA,KAA4BhB,EAAKC,MAAOF,EAAKG,EAAKF,EAAKC,4HAGrEI,IAAaY,EAAAA,EAAAA,KAAgB,mFAESD,EAAAA,EAAAA,KAA4BjB,cAAciB,EAAAA,EAAAA,KAA4Bd,MAAOH,EAAKG,WAAWc,EAAAA,EAAAA,KAA4BhB,cAAcgB,EAAAA,EAAAA,KAA4Bf,MAAOD,EAAKC,mFAGrN,MAEF,KAAK,EACHF,GAAKS,EAAAA,EAAAA,KAA2B,GAApBC,EAAAA,EAAAA,MAAS,EAAG,EAAG,IAC3BT,GAAKQ,EAAAA,EAAAA,KAAqC,GAA9BC,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,EAAGV,EAAK,KACpCI,GAAIK,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,KAAO,CAAC,GAAK,IAAK,EAAG,IAAK,OAAQA,EAAAA,EAAAA,KAAO,EAAE,EAAG,KACzDN,EAAKE,EAAIJ,EACTG,EAAKC,EAAIH,EAAK,EACdI,EAAS,iFAAgFL,UAAWC,4DAA6DC,UAAWC,oHAE5KlE,KAAKU,eAAe,GAAK,CACvBgE,OAAQN,EACRO,aAAc,CACZ,CACEP,MAAO,IACPQ,OAAe,MAAPb,GAEV,CACEK,MAAO,IACPQ,OAAQb,EAAKG,GAAOF,EAAKC,IAG7BY,QAAS,CAAEC,SAAS,IAEtBR,GAASS,EAAAA,EAAAA,IAAgB/E,KAAM,GAC/BoE,GAASE,EAAOF,MAEhBC,EAAYC,EAAOD,UAAa,wuBAM1BW,EAAAA,EAAAA,KAA4BjB,cAAciB,EAAAA,EAAAA,KAA4Bd,OAAOc,EAAAA,EAAAA,KAA4BhB,cAAcgB,EAAAA,EAAAA,KAA4Bf,oBAClJF,EAAKG,MAAMc,EAAAA,EAAAA,KAA4BhB,EAAKC,MAAOF,EAAKG,EAAKF,EAAKC,2IAGzEI,IAAaY,EAAAA,EAAAA,KAAgB,2FAEaD,EAAAA,EAAAA,KAA4BjB,cAAciB,EAAAA,EAAAA,KAA4Bd,MAAOH,EAAKG,WAAWc,EAAAA,EAAAA,KAA4BhB,cAAcgB,EAAAA,EAAAA,KAA4Bf,MAAOD,EAAKC,yGAGzN,MAEF,KAAK,EACHF,GAAKS,EAAAA,EAAAA,KAA2B,GAApBC,EAAAA,EAAAA,MAAS,EAAG,EAAG,IAC3BT,GAAKQ,EAAAA,EAAAA,KAAqC,GAA9BC,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,EAAGV,EAAK,KACpCI,GAAIK,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,KAAO,CAAC,GAAK,IAAK,EAAG,IAAK,OAAQA,EAAAA,EAAAA,KAAO,EAAE,EAAG,KACzDN,EAAKE,EAAIJ,EAAK,EACdG,EAAKC,EAAIH,EACTI,EAAS,iFAAgFL,UAAWC,4DAA6DC,UAAWC,oHAE5KlE,KAAKU,eAAe,GAAK,CACvBgE,OAAQN,EACRO,aAAc,CACZ,CACEP,MAAO,IACPQ,OAAe,MAAPb,GAEV,CACEK,MAAO,IACPQ,OAAQb,EAAKG,GAAOF,EAAKC,IAG7BY,QAAS,CAAEC,SAAS,IAEtBR,GAASS,EAAAA,EAAAA,IAAgB/E,KAAM,GAC/BoE,GAASE,EAAOF,MAEhBC,EAAYC,EAAOD,UAAa,wuBAM1BW,EAAAA,EAAAA,KAA4BjB,cAAciB,EAAAA,EAAAA,KAA4Bd,OAAOc,EAAAA,EAAAA,KAA4BhB,cAAcgB,EAAAA,EAAAA,KAA4Bf,oBAClJF,EAAKG,MAAMc,EAAAA,EAAAA,KAA4BhB,EAAKC,MAAOF,EAAKG,EAAKF,EAAKC,2IAGzEI,IAAaY,EAAAA,EAAAA,KAAgB,2FAEaD,EAAAA,EAAAA,KAA4BjB,cAAciB,EAAAA,EAAAA,KAA4Bd,MAAOH,EAAKG,WAAWc,EAAAA,EAAAA,KAA4BhB,cAAcgB,EAAAA,EAAAA,KAA4Bf,MAAOD,EAAKC,yGAGzN,MACF,KAAK,EACHF,GAAKS,EAAAA,EAAAA,KAA2B,GAApBC,EAAAA,EAAAA,MAAS,EAAG,EAAG,IAC3BT,GAAKQ,EAAAA,EAAAA,KAAqC,GAA9BC,EAAAA,EAAAA,MAAS,EAAG,EAAG,CAAC,EAAGV,EAAK,KACpCI,GAAIK,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,KAAO,CAAC,GAAK,IAAK,EAAG,IAAK,OAAQA,EAAAA,EAAAA,KAAO,EAAE,EAAG,KACzDN,EAAKE,EAAIJ,EACTG,EAAKC,EAAIH,GAAO,EAChBI,EAAS,iFAAgFL,UAAWC,4DAA6DC,UAAWC,oHAE5KlE,KAAKU,eAAe,GAAK,CACvBgE,OAAQN,EACRO,aAAc,CACZ,CACEP,MAAO,IACPQ,OAAe,MAAPb,GAEV,CACEK,MAAO,IACPQ,OAAQb,EAAKG,GAAOF,EAAKC,IAG7BY,QAAS,CAAEC,SAAS,IAEtBR,GAASS,EAAAA,EAAAA,IAAgB/E,KAAM,GAC/BoE,GAASE,EAAOF,MAEhBC,EAAYC,EAAOD,UAAa,wuBAM1BW,EAAAA,EAAAA,KAA4BjB,cAAciB,EAAAA,EAAAA,KAA4Bd,OAAOc,EAAAA,EAAAA,KAA4BhB,cAAcgB,EAAAA,EAAAA,KAA4Bf,oBAClJF,EAAKG,MAAMc,EAAAA,EAAAA,KAA4BhB,EAAKC,MAAOF,EAAKG,EAAKF,EAAKC,2IAGzEI,IAAaY,EAAAA,EAAAA,KAAgB,2FAEaD,EAAAA,EAAAA,KAA4BjB,cAAciB,EAAAA,EAAAA,KAA4Bd,MAAOH,EAAKG,WAAWc,EAAAA,EAAAA,KAA4BhB,cAAcgB,EAAAA,EAAAA,KAA4Bf,MAAOD,EAAKC,yGAK7NjE,KAAKM,eAAeoD,KAAKU,GACzBpE,KAAKO,iBAAiBmD,KAAKW,IAC3Ba,EAAAA,EAAAA,KAAwBlF","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/2e/can2G12.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { listeQuestionsToContenu, texteEnCouleur, ecritureParentheseSiNegatif, randint, choice, calcul } from '../../../modules/outils.js'\nimport { propositionsQcm } from '../../../modules/gestionInteractif.js'\nexport const titre = 'Reconnaître des vecteurs colinéaires (V/F)'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '30/10/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence\n*/\nexport default function VecteursColineairesVF () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 1\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  this.nouvelleVersion = function () {\n    let ux, uy, vx, vy, k\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let texte, texteCorr, monQcm\n\n    switch (choice([1, 2, 3, 4, 5])) { //\n      case 1 :\n        ux = calcul(randint(-3, 3, 0) * 2)\n        uy = calcul(randint(-3, 3, [0, ux / 2]) * 2)\n        k = calcul(choice([0.5, 1.5, 3, 2.5, 3.5]) * choice([-1, 1]))\n        vx = k * ux\n        vy = k * uy\n        texte = `Dans un repère, on considère les vecteurs $\\\\overrightarrow{u}\\\\begin{pmatrix}${ux} \\\\\\\\ ${uy} \\\\end{pmatrix}$ et $\\\\overrightarrow{v}\\\\begin{pmatrix}${vx} \\\\\\\\ ${vy} \\\\end{pmatrix}$<br>\n        Les vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$ sont colinéaires. `\n        this.autoCorrection[0] = {\n          enonce: texte,\n          propositions: [\n            {\n              texte: 'V',\n              statut: ux * vy === uy * vx\n            },\n            {\n              texte: 'F',\n              statut: ux === 50\n            }\n          ],\n          options: { ordered: true }\n        }\n        monQcm = propositionsQcm(this, 0)\n        texte += monQcm.texte\n\n        texteCorr = monQcm.texteCorr + `<br>Deux vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$\n        sont colinéaires si et seulement si leur déterminant det($\\\\overrightarrow{u};\\\\overrightarrow{v})=0$.<br>\n        Si  $\\\\overrightarrow{u}\\\\begin{pmatrix}x_{\\\\overrightarrow{u}} \\\\\\\\ x_{\\\\overrightarrow{v}} \\\\end{pmatrix}$ et $\\\\overrightarrow{v}\\\\begin{pmatrix}x_{\\\\overrightarrow{v}} \\\\\\\\ y_{\\\\overrightarrow{v}} \\\\end{pmatrix}$, \n        alors det$(\\\\overrightarrow{u};\\\\overrightarrow{v})=x_{\\\\overrightarrow{u}}\\\\times y_{\\\\overrightarrow{v}}-y_{\\\\overrightarrow{u}}\\\\times x_{\\\\overrightarrow{v}}$.<br>\n        En utilisant les données de l'énoncé, on obtient : <br>\n        det$(\\\\overrightarrow{u};\\\\overrightarrow{v})=\n        ${ecritureParentheseSiNegatif(ux)}\\\\times ${ecritureParentheseSiNegatif(vy)}-${ecritureParentheseSiNegatif(uy)}\\\\times ${ecritureParentheseSiNegatif(vx)}\n        =${ux * vy}-${ecritureParentheseSiNegatif(uy * vx)}=${ux * vy - uy * vx}\n        $.<br>\n        On en déduit que les vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$ sont colinéaires.`\n        texteCorr += texteEnCouleur(`\n        <br> Mentalement : <br>\n        On compare les produits en croix : $${ecritureParentheseSiNegatif(ux)}\\\\times ${ecritureParentheseSiNegatif(vy)}=${ux * vy}$ et $${ecritureParentheseSiNegatif(uy)}\\\\times ${ecritureParentheseSiNegatif(vx)}=${uy * vx}$.<br>\n        Ils sont égaux, donc les vecteurs sont colinéaires.\n         `)\n        break\n      case 2 :\n        vx = calcul(randint(-3, 3, 0) * 2)\n        vy = calcul(randint(-3, 3, [0, vx / 2]) * 2)\n        k = calcul(choice([0.5, 1.5, 3, 2.5, 3.5]) * choice([-1, 1]))\n        ux = k * vx\n        uy = k * vy\n        texte = `Dans un repère, on considère les vecteurs $\\\\overrightarrow{u}\\\\begin{pmatrix}${ux} \\\\\\\\ ${uy} \\\\end{pmatrix}$ et $\\\\overrightarrow{v}\\\\begin{pmatrix}${vx} \\\\\\\\ ${vy} \\\\end{pmatrix}$<br>\n        Les vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$ sont colinéaires. `\n        this.autoCorrection[0] = {\n          enonce: texte,\n          propositions: [\n            {\n              texte: 'V',\n              statut: ux * vy === uy * vx\n            },\n            {\n              texte: 'F',\n              statut: ux === 50\n            }\n          ],\n          options: { ordered: true }\n        }\n        monQcm = propositionsQcm(this, 0)\n        texte += monQcm.texte\n\n        texteCorr = monQcm.texteCorr + `<br>Deux vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$\n        sont colinéaires si et seulement si leur déterminant det($\\\\overrightarrow{u};\\\\overrightarrow{v})=0$.<br>\n        Si  $\\\\overrightarrow{u}\\\\begin{pmatrix}x_{\\\\overrightarrow{u}} \\\\\\\\ x_{\\\\overrightarrow{v}} \\\\end{pmatrix}$ et $\\\\overrightarrow{v}\\\\begin{pmatrix}x_{\\\\overrightarrow{v}} \\\\\\\\ y_{\\\\overrightarrow{v}} \\\\end{pmatrix}$, \n        alors det$(\\\\overrightarrow{u};\\\\overrightarrow{v})=x_{\\\\overrightarrow{u}}\\\\times y_{\\\\overrightarrow{v}}-y_{\\\\overrightarrow{u}}\\\\times x_{\\\\overrightarrow{v}}$.<br>\n        En utilisant les données de l'énoncé, on obtient : <br>\n        det$(\\\\overrightarrow{u};\\\\overrightarrow{v})=\n        ${ecritureParentheseSiNegatif(ux)}\\\\times ${ecritureParentheseSiNegatif(vy)}-${ecritureParentheseSiNegatif(uy)}\\\\times ${ecritureParentheseSiNegatif(vx)}\n        =${ux * vy}-${ecritureParentheseSiNegatif(uy * vx)}=${ux * vy - uy * vx}\n        $.<br>\n        On en déduit que les vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$ sont colinéaires.`\n        texteCorr += texteEnCouleur(`\n        <br> Mentalement : <br>\n        On compare les produits en croix : $${ecritureParentheseSiNegatif(ux)}\\\\times ${ecritureParentheseSiNegatif(vy)}=${ux * vy}$ et $${ecritureParentheseSiNegatif(uy)}\\\\times ${ecritureParentheseSiNegatif(vx)}=${uy * vx}$.<br>\n        Ils sont égaux, donc les vecteurs sont colinéaires.\n         `)\n        break\n\n      case 3 :\n        ux = calcul(randint(-3, 3, 0) * 2)\n        uy = calcul(randint(-3, 3, [0, ux / 2]) * 2)\n        k = calcul(choice([0.5, 1.5, 3, 2.5, 3.5]) * choice([-1, 1]))\n        vx = k * ux\n        vy = k * uy + 1\n        texte = `Dans un repère, on considère les vecteurs $\\\\overrightarrow{u}\\\\begin{pmatrix}${ux} \\\\\\\\ ${uy} \\\\end{pmatrix}$ et $\\\\overrightarrow{v}\\\\begin{pmatrix}${vx} \\\\\\\\ ${vy} \\\\end{pmatrix}$<br>\n            Les vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$ sont colinéaires. `\n        this.autoCorrection[0] = {\n          enonce: texte,\n          propositions: [\n            {\n              texte: 'V',\n              statut: ux === 100\n            },\n            {\n              texte: 'F',\n              statut: ux * vy !== uy * vx\n            }\n          ],\n          options: { ordered: true }\n        }\n        monQcm = propositionsQcm(this, 0)\n        texte += monQcm.texte\n\n        texteCorr = monQcm.texteCorr + `<br>Deux vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$\n            sont colinéaires si et seulement si leur déterminant det($\\\\overrightarrow{u};\\\\overrightarrow{v})=0$.<br>\n            Si  $\\\\overrightarrow{u}\\\\begin{pmatrix}x_{\\\\overrightarrow{u}} \\\\\\\\ x_{\\\\overrightarrow{v}} \\\\end{pmatrix}$ et $\\\\overrightarrow{v}\\\\begin{pmatrix}x_{\\\\overrightarrow{v}} \\\\\\\\ y_{\\\\overrightarrow{v}} \\\\end{pmatrix}$, \n            alors det$(\\\\overrightarrow{u};\\\\overrightarrow{v})=x_{\\\\overrightarrow{u}}\\\\times y_{\\\\overrightarrow{v}}-y_{\\\\overrightarrow{u}}\\\\times x_{\\\\overrightarrow{v}}$.<br>\n            En utilisant les données de l'énoncé, on obtient : <br>\n            det$(\\\\overrightarrow{u};\\\\overrightarrow{v})=\n            ${ecritureParentheseSiNegatif(ux)}\\\\times ${ecritureParentheseSiNegatif(vy)}-${ecritureParentheseSiNegatif(uy)}\\\\times ${ecritureParentheseSiNegatif(vx)}\n            =${ux * vy}-${ecritureParentheseSiNegatif(uy * vx)}=${ux * vy - uy * vx}\n            $.<br>\n            On en déduit que les vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$ ne sont pas colinéaires.`\n        texteCorr += texteEnCouleur(`\n            <br> Mentalement : <br>\n            On compare les produits en croix : $${ecritureParentheseSiNegatif(ux)}\\\\times ${ecritureParentheseSiNegatif(vy)}=${ux * vy}$ et $${ecritureParentheseSiNegatif(uy)}\\\\times ${ecritureParentheseSiNegatif(vx)}=${uy * vx}$.<br>\n            Ils ne sont pas égaux, donc les vecteurs ne sont pas colinéaires.\n             `)\n        break\n\n      case 4 :\n        ux = calcul(randint(-3, 3, 0) * 2)\n        uy = calcul(randint(-3, 3, [0, ux / 2]) * 2)\n        k = calcul(choice([0.5, 1.5, 3, 2.5, 3.5]) * choice([-1, 1]))\n        vx = k * ux + 1\n        vy = k * uy\n        texte = `Dans un repère, on considère les vecteurs $\\\\overrightarrow{u}\\\\begin{pmatrix}${ux} \\\\\\\\ ${uy} \\\\end{pmatrix}$ et $\\\\overrightarrow{v}\\\\begin{pmatrix}${vx} \\\\\\\\ ${vy} \\\\end{pmatrix}$<br>\n            Les vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$ sont colinéaires. `\n        this.autoCorrection[0] = {\n          enonce: texte,\n          propositions: [\n            {\n              texte: 'V',\n              statut: ux === 100\n            },\n            {\n              texte: 'F',\n              statut: ux * vy !== uy * vx\n            }\n          ],\n          options: { ordered: true }\n        }\n        monQcm = propositionsQcm(this, 0)\n        texte += monQcm.texte\n\n        texteCorr = monQcm.texteCorr + `<br>Deux vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$\n            sont colinéaires si et seulement si leur déterminant det($\\\\overrightarrow{u};\\\\overrightarrow{v})=0$.<br>\n            Si  $\\\\overrightarrow{u}\\\\begin{pmatrix}x_{\\\\overrightarrow{u}} \\\\\\\\ x_{\\\\overrightarrow{v}} \\\\end{pmatrix}$ et $\\\\overrightarrow{v}\\\\begin{pmatrix}x_{\\\\overrightarrow{v}} \\\\\\\\ y_{\\\\overrightarrow{v}} \\\\end{pmatrix}$, \n            alors det$(\\\\overrightarrow{u};\\\\overrightarrow{v})=x_{\\\\overrightarrow{u}}\\\\times y_{\\\\overrightarrow{v}}-y_{\\\\overrightarrow{u}}\\\\times x_{\\\\overrightarrow{v}}$.<br>\n            En utilisant les données de l'énoncé, on obtient : <br>\n            det$(\\\\overrightarrow{u};\\\\overrightarrow{v})=\n            ${ecritureParentheseSiNegatif(ux)}\\\\times ${ecritureParentheseSiNegatif(vy)}-${ecritureParentheseSiNegatif(uy)}\\\\times ${ecritureParentheseSiNegatif(vx)}\n            =${ux * vy}-${ecritureParentheseSiNegatif(uy * vx)}=${ux * vy - uy * vx}\n            $.<br>\n            On en déduit que les vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$ ne sont pas colinéaires.`\n        texteCorr += texteEnCouleur(`\n            <br> Mentalement : <br>\n            On compare les produits en croix : $${ecritureParentheseSiNegatif(ux)}\\\\times ${ecritureParentheseSiNegatif(vy)}=${ux * vy}$ et $${ecritureParentheseSiNegatif(uy)}\\\\times ${ecritureParentheseSiNegatif(vx)}=${uy * vx}$.<br>\n            Ils ne sont pas égaux, donc les vecteurs ne sont pas colinéaires.\n             `)\n        break\n      case 5 :\n        ux = calcul(randint(-3, 3, 0) * 2)\n        uy = calcul(randint(-3, 3, [0, ux / 2]) * 2)\n        k = calcul(choice([0.5, 1.5, 3, 2.5, 3.5]) * choice([-1, 1]))\n        vx = k * ux\n        vy = k * uy * (-1)\n        texte = `Dans un repère, on considère les vecteurs $\\\\overrightarrow{u}\\\\begin{pmatrix}${ux} \\\\\\\\ ${uy} \\\\end{pmatrix}$ et $\\\\overrightarrow{v}\\\\begin{pmatrix}${vx} \\\\\\\\ ${vy} \\\\end{pmatrix}$<br>\n            Les vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$ sont colinéaires. `\n        this.autoCorrection[0] = {\n          enonce: texte,\n          propositions: [\n            {\n              texte: 'V',\n              statut: ux === 100\n            },\n            {\n              texte: 'F',\n              statut: ux * vy !== uy * vx\n            }\n          ],\n          options: { ordered: true }\n        }\n        monQcm = propositionsQcm(this, 0)\n        texte += monQcm.texte\n\n        texteCorr = monQcm.texteCorr + `<br>Deux vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$\n            sont colinéaires si et seulement si leur déterminant det($\\\\overrightarrow{u};\\\\overrightarrow{v})=0$.<br>\n            Si  $\\\\overrightarrow{u}\\\\begin{pmatrix}x_{\\\\overrightarrow{u}} \\\\\\\\ x_{\\\\overrightarrow{v}} \\\\end{pmatrix}$ et $\\\\overrightarrow{v}\\\\begin{pmatrix}x_{\\\\overrightarrow{v}} \\\\\\\\ y_{\\\\overrightarrow{v}} \\\\end{pmatrix}$, \n            alors det$(\\\\overrightarrow{u};\\\\overrightarrow{v})=x_{\\\\overrightarrow{u}}\\\\times y_{\\\\overrightarrow{v}}-y_{\\\\overrightarrow{u}}\\\\times x_{\\\\overrightarrow{v}}$.<br>\n            En utilisant les données de l'énoncé, on obtient : <br>\n            det$(\\\\overrightarrow{u};\\\\overrightarrow{v})=\n            ${ecritureParentheseSiNegatif(ux)}\\\\times ${ecritureParentheseSiNegatif(vy)}-${ecritureParentheseSiNegatif(uy)}\\\\times ${ecritureParentheseSiNegatif(vx)}\n            =${ux * vy}-${ecritureParentheseSiNegatif(uy * vx)}=${ux * vy - uy * vx}\n            $.<br>\n            On en déduit que les vecteurs $\\\\overrightarrow{u}$ et $\\\\overrightarrow{v}$ ne sont pas colinéaires.`\n        texteCorr += texteEnCouleur(`\n            <br> Mentalement : <br>\n            On compare les produits en croix : $${ecritureParentheseSiNegatif(ux)}\\\\times ${ecritureParentheseSiNegatif(vy)}=${ux * vy}$ et $${ecritureParentheseSiNegatif(uy)}\\\\times ${ecritureParentheseSiNegatif(vx)}=${uy * vx}$.<br>\n            Ils ne sont pas égaux, donc les vecteurs ne sont pas colinéaires.\n             `)\n        break\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","dateDePublication","VecteursColineairesVF","ux","uy","vx","vy","k","texte","texteCorr","monQcm","choice","calcul","randint","enonce","propositions","statut","options","ordered","propositionsQcm","ecritureParentheseSiNegatif","texteEnCouleur","listeQuestionsToContenu"],"sourceRoot":""}