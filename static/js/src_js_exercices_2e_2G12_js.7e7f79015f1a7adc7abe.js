/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_2e_2G12_js"],{

/***/ "./src/js/exercices/2e/2G12.js":
/*!*************************************!*\
  !*** ./src/js/exercices/2e/2G12.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Nature_polygone)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\n\nconst titre = 'Déterminer la nature d’un polygone.'\n\n/**\n * 2G12\n * @Auteur Stéphane Guyon\n */\nfunction Nature_polygone() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.nb_questions = 2;\n  this.nb_cols = 2;\n  this.nb_cols_corr = 2;\n  // this.sup = 1 ; // \n  this.nouvelle_version = function () {\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n    let type_de_questions_disponibles = [1, 2, 3, 4, 5], type_de_questions\n\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.combinaison_listes)(type_de_questions_disponibles, this.nb_questions);\n    for (let i = 0, a, facteur, radical, ux, uy, xA, yA, xB, yB, xC, yC, xD, yD, AB, XAB, YAB, XAC, YAC, XBC, YBC, AC, BC, XAD, YAD, AD, xI0, xI1, yI0, yI1, xJ0, xJ1, yJ0, yJ1, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n      type_de_questions = liste_type_de_questions[i];\n      switch (type_de_questions) {\n        // Cas par cas, on définit le type de nombres que l'on souhaite\n        // Combien de chiffres ? Quelles valeurs ?\n\n        case 1:\n\n\n          xA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          yA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          ux = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(1, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          uy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(1, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          xB = xA + ux\n\n          yB = yA + uy\n\n          xC = xA - uy\n          yC = yA + ux\n          XAB = (xB - xA) * (xB - xA)\n          YAB = (yB - yA) * (yB - yA);\n          AB = XAB + YAB;\n          XAC = (xC - xA) * (xC - xA)\n          YAC = (yC - yA) * (yC - yA)\n          XBC = (xC - xB) * (xC - xB)\n          YBC = (yC - yB) * (yC - yB)\n          AC = XAC + YAC;\n          texte = `Dans un repère orthonormé $(O,I,J)$, on donne les points suivants :`\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right)$ et $C\\\\left(${xC};${yC}\\\\right)$`\n          texte += `<br>Déterminer la nature du triangle $ABC$ `;\n\n\n          texte_corr = `A partir du repère, on a envie de prouver que$ABC$ est un triangle isocèle en $A$.`\n          texte_corr += `<br> On calcule donc séparément les distances $AB$ et $AC$ `\n          texte_corr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère orthonormé,`\n          texte_corr += ` alors on a : $AB=\\\\sqrt{\\\\left(x_B-x_A\\\\right)^{2}+\\\\left(y_B-y_A\\\\right)^{2}}$<br>`\n          texte_corr += `On applique la relation à l'énoncé : $AB=\\\\sqrt{\\\\left(${xB}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xA)}\\\\right)^{2}+\\\\left(${yB}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yA)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AB=\\\\sqrt{${XAB}+${YAB}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AB=\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAB + YAB)}}$<br>`\n          facteur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AB)[0]\n          radical = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AB)[1]\n          if (radical != 1) {\n            if (facteur != 1) {\n              texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          }\n          else {\n            texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}$<br>`\n          }\n\n          texte_corr += `De même : $AC=\\\\sqrt{\\\\left(${xC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xA)}\\\\right)^{2}+\\\\left(${yC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yA)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{De meme :       } AC=\\\\sqrt{${XAC}+${YAC}}$<br>`\n          texte_corr += `$\\\\phantom{De meme :       } AC=\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAC + YAC)}}$<br>`\n          facteur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AC)[0]\n          radical = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AC)[1]\n          if (radical != 1) {\n            if (facteur != 1) {\n              texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          }\n          else {\n            texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}$<br>`\n          }\n          texte_corr += `On observe que $AC=AB$ donc le triangle $ABC$ est isocèle.`\n          texte_corr += `<br>On calcule $BC$ pour vérifier s'il est ou non  équilatéral.`\n          texte_corr += `<br>On obtient : $BC=\\\\sqrt{${XBC}+${YBC}}=\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XBC + YBC)}}$<br>`\n          if (XBC + YBC == XAB + YAB) { texte_corr += `Le triangle $ABC$ est équilatéral.` }\n          else { texte_corr += `Le triangle $ABC$ est simplement isocèle, il n'est pas équilatéral.` }\n\n          ;\n          break;\n        case 2:\n\n\n          xA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          yA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(0, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          ux = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(1, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          uy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(1, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          xB = xA + ux;\n          yB = yA + uy;\n          xC = xA - uy;\n          yC = yA + ux;\n          XAB = (xB - xA) * (xB - xA)\n          YAB = (yB - yA) * (yB - yA);\n          AB = XAB + YAB;\n          XAC = (xC - xA) * (xC - xA)\n          YAC = (yC - yA) * (yC - yA)\n          XBC = (xC - xB) * (xC - xB)\n          YBC = (yC - yB) * (yC - yB)\n          AC = XAC + YAC;\n          texte = `Dans un repère orthonormé $(O,I,J)$, on donne les points suivants :`\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right)$ et $C\\\\left(${xC};${yC}\\\\right)$`\n          texte += `<br>Déterminer la nature du triangle $ABC$ `;\n\n\n\n          texte_corr = `A partir du repère, on a envie de prouver que$ABC$ est un triangle rectangle en $A$.`\n          texte_corr += `<br> Pour vérifier que le triangle est rectabgle, on va utiliser la réciproque du théorème de Pythagore.`\n          texte_corr += `<br> On calcule donc séparément les distances $AB^{2}$ ; $AC^{2}$ et $BC^{2}$ pour vérifier si $BC^{2}=AB^{2}+AC^{2}$ .`\n          texte_corr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère orthonormé,`\n          texte_corr += ` alors on a : $AB^{2}=\\\\left(x_B-x_A\\\\right)^{2}+\\\\left(y_B-y_A\\\\right)^{2}$<br>`\n          texte_corr += `On applique la relation à l'énoncé : $AB^{2}=\\\\left(${xB}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xA)}\\\\right)^{2}+\\\\left(${yB}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yA)}\\\\right)^{2}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AB^{2}={${XAB}+${YAB}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AB^{2}={${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAB + YAB)}}$<br>`\n\n          texte_corr += `De même : $AC^{2}={\\\\left(${xC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xA)}\\\\right)^{2}+\\\\left(${yC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yA)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{De meme :       } AC^{2}={${XAC}+${YAC}}$<br>`\n          texte_corr += `$\\\\phantom{De meme :       } AC^{2}={${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAC + YAC)}}$<br>`\n\n          texte_corr += `Enfin : $BC^{2}={\\\\left(${xB}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xB)}\\\\right)^{2}+\\\\left(${yC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yB)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{De meme :       } BC^{2}={${XBC}+${YBC}}$<br>`\n          texte_corr += `$\\\\phantom{De meme :       } BC^{2}={${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XBC + YBC)}}$<br>`\n          texte_corr += `On observe que $AC^{2}+AB^{2}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAC + YAC + XAB + YAB)} ~~et~~ BC^{2}={${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XBC + YBC)}}$.`\n          texte_corr += `<br>On en déduit que $BC^{2}=AC^{2}+AB^{2}$.`\n          texte_corr += `<br>D'après la réciproque du théorème de Pythagore,  le triangle ABC est rectangle en A.`;\n          break;\n        case 3:\n          xA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          yA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          ux = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(1, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          uy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(1, 5) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          xB = xA + ux\n          yB = yA + uy\n          xC = xA - ux\n          yC = yA - uy\n          xD = xC + ux\n          yD = yC + uy\n          xI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xA + xD, 2)[0]\n          xI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xA + xD, 2)[1]\n          yI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yA + yD, 2)[0]\n          yI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yA + yD, 2)[1]\n          xJ0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xB + xC, 2)[0]\n          xJ1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xB + xC, 2)[1]\n          yJ0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yB + yC, 2)[0]\n          yJ1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yB + yC, 2)[1]\n          XAB = (xB - xA) * (xB - xA)\n          YAB = (yB - yA) * (yB - yA);\n          AB = XAB + YAB;\n          XAD = (xD - xA) * (xD - xA)\n          YAD = (yD - yA) * (yD - yA);\n          AD = XAD + YAD;\n          XAC = (xC - xA) * (xC - xA)\n          YAC = (yC - yA) * (yC - yA)\n          AC = XAC + YAC;\n          a = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_1__.axes)(-9, -9, 9, 9, .2, 1)\n\n\n          texte = `Dans un repère orthonormé (O,I,J), on donne les 4 points suivants :<br>`\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`\n          texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`\n          texte += `<br>Démontrer que $ABDC$ est un losange.`;\n\n          texte_corr = `<br>Pour prouver que $ABDC$ est un losange, il y a deux stratégies :<br>`\n          texte_corr += `$~~~~~~~~$<B>1.</B> On calcule les quatre longueurs du quadrilatère et on prouve leur égalité.<br>`\n          texte_corr += `$\\\\phantom{~~~~~~~~}$Un quadrilatère qui possède quatre côtés de même longueur est un losange.<br>`\n          texte_corr += `$~~~~~~~~$<B>2. </B> On prouve que $ABDC$ est un parallélogramme, puis il sufit de prouver qu'il possède deux côtés consécutifs de même longueur.<br>`\n          texte_corr += `$\\\\phantom{~~~~~~~~}$ Un parallélogramme qui possède deux côtés consécutifs de même longueur est un losange`\n          texte_corr += `<br>Les deux démonstrations se valent. On choisit ici la <B>démonstration n°2</B>, plus variée, mais la n°1 est valable.<br>`\n          texte_corr += `<B>Démonstration :</B><br>`\n          texte_corr += `On veut prouver que $ABDC$ est un parallélogramme :`\n          texte_corr += `<br>On sait que ABDC est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.`\n          texte_corr += `<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère, pour prouver qu'elles sont identiques. :`\n          texte_corr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d'un repère ,`\n          texte_corr += `<br> alors les coordonnées du point $I$ milieu de $[AD]$ sont `\n          texte_corr += `$I\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>`\n          texte_corr += `On applique la relation à l'énoncé : `\n          texte_corr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xD)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yD)}}{2}\\\\end{cases}$`\n          texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(xA + xD)}}{2}\\\\\\\\y_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(yA + yD)}}{2}\\\\end{cases}$`\n          if (xI1 != 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$` }\n          if (xI1 == 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$` }\n          if (xI1 != 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$` }\n          if (xI1 == 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$` }\n          texte_corr += `<br> Les coordonnées du point $J$ milieu de $[BC]$ sont `\n          texte_corr += `$J\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>`\n          texte_corr += `On applique la relation à l'énoncé : `\n          texte_corr += `$\\\\begin{cases}x_J=\\\\dfrac{${xB}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xC)}}{2} \\\\\\\\ y_J=\\\\dfrac{${yB}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yC)}}{2}\\\\end{cases}$`\n          texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_J=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(xB + xC)}}{2}\\\\\\\\y_J=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(yB + yC)}}{2}\\\\end{cases}$`\n          if (xJ1 != 1 && yJ1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$` }\n          if (xJ1 == 1 && yJ1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$` }\n          if (xJ1 != 1 && yJ1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$` }\n          if (xJ1 == 1 && yJ1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};${yJ0}\\\\right)$` }\n          texte_corr += `<br>On observe que $I$ et $J$ ont les mêmes coordonnées, donc les deux diagonales du quadrilatère se coupent en leur milieu.`\n          texte_corr += `<br>$ABDC$ est donc un parallélogramme.`\n          texte_corr += `<br>On calcule maintenant deux cotés consécutifs : $AB$ et $AC$ par exemple.`\n          texte_corr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d'un repère orthonormé,`\n          texte_corr += ` alors on a : $AB=\\\\sqrt{\\\\left(x_B-x_A\\\\right)^{2}+\\\\left(y_B-y_A\\\\right)^{2}}.$<br>`\n          texte_corr += `On applique la relation à l'énoncé : $AB=\\\\sqrt{\\\\left(${xB}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xA)}\\\\right)^{2}+\\\\left(${yB}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yA)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AB=\\\\sqrt{${XAB}+${YAB}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AB=\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAB + YAB)}}$<br>`\n\n          facteur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AB)[0]\n          radical = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AB)[1]\n\n          if (radical != 1) {\n            if (facteur != 1) {\n              texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          }\n          else {\n            texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AB=${facteur}$<br>`\n          }\n\n          texte_corr += `On procède de même pour $AC$: $AC=\\\\sqrt{\\\\left(${xC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xA)}\\\\right)^{2}+\\\\left(${yC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yA)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AC=\\\\sqrt{${XAC}+${YAC}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AC=\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAC + YAC)}}$<br>`\n          facteur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AC)[0]\n          radical = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AC)[1]\n          if (radical != 1) {\n            if (facteur != 1) {\n              texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AC=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          }\n          else {\n            texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AC=\\\\sqrt{${radical}}$<br>`\n          }\n          texte_corr += `<br>On observe que $AB=AC$, $ABDC$ est donc bien un losange.`\n            ;\n          break;\n        case 4:\n          xA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(0, 6) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          yA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(0, 6) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          ux = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(1, 3) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          uy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(1, 3) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(2, 4)\n          xB = xA + ux * a\n          yB = yA + uy * a\n          xC = xA - uy\n          yC = yA + ux\n          xD = xC + ux * a\n          yD = yC + uy * a\n\n          xI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xA + xD, 2)[0]\n          xI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xA + xD, 2)[1]\n          yI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yA + yD, 2)[0]\n          yI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yA + yD, 2)[1]\n          xJ0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xB + xC, 2)[0]\n          xJ1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xB + xC, 2)[1]\n          yJ0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yB + yC, 2)[0]\n          yJ1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yB + yC, 2)[1]\n          XAB = (xB - xA) * (xB - xA)\n          YAB = (yB - yA) * (yB - yA);\n          AB = XAB + YAB;\n          XAC = (xC - xA) * (xC - xA)\n          YAC = (yC - yA) * (yC - yA);\n          AC = XAC + YAC;\n          XAD = (xD - xA) * (xD - xA)\n          YAD = (yD - yA) * (yD - yA);\n          AD = XAD + YAD;\n          XBC = (xB - xC) * (xB - xC)\n          YBC = (yB - yC) * (yB - yC);\n          BC = XBC + YBC;\n          a = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_1__.axes)(-9, -9, 9, 9, .2, 1)\n\n\n          texte = `Dans un repère orthonormé (O,I,J), on donne les 4 points suivants :<br>`\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`\n          texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`\n          texte += `<br>Démontrer que $ABDC$ est un rectangle.`;\n\n          texte_corr = `<br>Pour prouver que $ABDC$ est un rectangle, il y a pluieurs stratégies :<br>`\n          texte_corr += `$~~~~~~~~$<B>1.</B> On prouve avec la réciproque du théorème de Pythagore que $ABDC$ possède un angle droit,<br>`\n          texte_corr += `$puis on prouve qu'il a ses côtés opposés de même longueur.<br>`\n          texte_corr += `$~~~~~~~~$<B>2. </B> On prouve que $ABDC$ est un parallélogramme, puis il sufit de prouver que ses diagonales sont de même longueur.<br>`\n          texte_corr += `$\\\\phantom{~~~~~~~~}$ Un parallélogramme qui a ses diagonales de même longueur est un rectangle.`\n          texte_corr += `<br>Plusiurs démonstrations se valent. On choisit ici la <B>démonstration n°2</B>, mais d'autres idées sont valables.<br>`\n          texte_corr += `<B>Démonstration :</B><br>`\n          texte_corr += `On veut prouver que $ABDC$ est un parallélogramme :`\n          texte_corr += `<br>On sait que $ABDC$ est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.`\n          texte_corr += `<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère, pour prouver qu'elles sont identiques. :`\n          texte_corr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d'un repère ,`\n          texte_corr += `<br> alors les coordonnées du point $I$ milieu de $[AD]$ sont `\n          texte_corr += `$I\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>`\n          texte_corr += `On applique la relation a l'enonce : `\n          texte_corr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xD)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yD)}}{2}\\\\end{cases}$`\n          texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(xA + xD)}}{2}\\\\\\\\y_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(yA + yD)}}{2}\\\\end{cases}$`\n          if (xI1 != 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$` }\n          if (xI1 == 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$` }\n          if (xI1 != 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$` }\n          if (xI1 == 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$` }\n          texte_corr += `<br> Les coordonnées du point $J$ milieu de $[BC]$ sont `\n          texte_corr += `$J\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>`\n          texte_corr += `On applique la relation à l'énoncé : `\n          texte_corr += `$\\\\begin{cases}x_J=\\\\dfrac{${xB}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xC)}}{2} \\\\\\\\ y_J=\\\\dfrac{${yB}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yC)}}{2}\\\\end{cases}$`\n          texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_J=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(xB + xC)}}{2}\\\\\\\\y_J=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(yB + yC)}}{2}\\\\end{cases}$`\n          if (xJ1 != 1 && yJ1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$` }\n          if (xJ1 == 1 && yJ1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$` }\n          if (xJ1 != 1 && yJ1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$` }\n          if (xJ1 == 1 && yJ1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};${yJ0}\\\\right)$` }\n          texte_corr += `<br>On observe que $I$ et $J$ ont les mêmes coordonnées, donc les deux diagonales du quadrilatère se coupent en leur milieu.`\n          texte_corr += `<br>$ABDC$ est donc un parallélogramme.`\n          texte_corr += `<br>On calcule maintenant les diagonales de $ABDC$ : $AD$ et $BC$ par exemple.`\n          texte_corr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d'un repère orthonormé,`\n          texte_corr += ` alors on a : $AD=\\\\sqrt{\\\\left(x_D-x_A\\\\right)^{2}+\\\\left(y_D-y_A\\\\right)^{2}}.$<br>`\n          texte_corr += `On applique la relation à l'énoncé : $AD=\\\\sqrt{\\\\left(${xD}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xA)}\\\\right)^{2}+\\\\left(${yD}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yA)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AD=\\\\sqrt{${XAD}+${YAD}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AD=\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAD + YAD)}}$<br>`\n          facteur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AD)[0]\n          radical = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AD)[1]\n          if (radical != 1) {\n            if (facteur != 1) {\n              texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AD=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          }\n          else {\n            texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AD=\\\\sqrt{${radical}}$<br>`\n          }\n\n          texte_corr += `On procède de même pour $BC$: $BC=\\\\sqrt{\\\\left(${xC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xB)}\\\\right)^{2}+\\\\left(${yC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yB)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } BC=\\\\sqrt{${XBC}+${YBC}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } BC=\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XBC + YBC)}}$<br>`\n          facteur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(BC)[0]\n          radical = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(BC)[1]\n          if (radical != 1) {\n            if (facteur != 1) {\n              texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } BC=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          }\n          else {\n            texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } BC=${facteur}$<br>`\n          }\n          texte_corr += `<br>On observe que $BC=AD$, $ABDC$ est donc bien un rectangle.`\n\n            ;\n          break;\n        case 5:\n          xA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          yA = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(0, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          ux = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(1, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          uy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.randint)(1, 9) * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.choice)([-1, 1])\n          xB = xA + ux\n          yB = yA + uy\n          xC = xA - uy\n          yC = yA + ux\n          xD = xC + ux\n          yD = yC + uy\n\n          xI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xA + xD, 2)[0]\n          xI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xA + xD, 2)[1]\n          yI0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yA + yD, 2)[0]\n          yI1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yA + yD, 2)[1]\n          xJ0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xB + xC, 2)[0]\n          xJ1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(xB + xC, 2)[1]\n          yJ0 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yB + yC, 2)[0]\n          yJ1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.fraction_simplifiee)(yB + yC, 2)[1]\n          XAB = (xB - xA) * (xB - xA)\n          YAB = (yB - yA) * (yB - yA);\n          AB = XAB + YAB;\n          XAC = (xC - xA) * (xC - xA)\n          YAC = (yC - yA) * (yC - yA);\n          AC = XAC + YAC;\n          XAD = (xD - xA) * (xD - xA)\n          YAD = (yD - yA) * (yD - yA);\n          AD = XAD + YAD;\n          XBC = (xB - xC) * (xB - xC)\n          YBC = (yB - yC) * (yB - yC);\n          BC = XBC + YBC;\n          a = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_1__.axes)(-9, -9, 9, 9, .2, 1)\n\n\n          texte = `Dans un repère orthonormé (O,I,J), on donne les 4 points suivants :<br>`\n          texte += ` $A\\\\left(${xA};${yA}\\\\right)$ ; $B\\\\left(${xB};${yB}\\\\right).$`\n          texte += ` $C\\\\left(${xC};${yC}\\\\right)$ ; $D\\\\left(${xD};${yD}\\\\right).$`\n          texte += `<br>Démontrer que $ABDC$ est un carré.`;\n\n          texte_corr = `<br>Pour prouver que $ABDC$ est un carré, il y a pluieurs stratégies :<br>`\n          texte_corr += `Dans cette correction, on propose de procéder par étapes :<br>`\n          texte_corr += `On va prouver d'abord que $ABDC$ est un parallélogramme en utilisant les milieux des diagonales.<br>`\n          texte_corr += `puis on prouvera qu'il est un rectangle en comparant ses diagonales.<br>`\n          texte_corr += `<br>Enfin, en vérifiant qu'il a deux côtés consécutifs de même longueur, on aura prouvé qu'il est un carré. `\n\n          texte_corr += `<br><B>Démonstration :</B><br>`\n          texte_corr += `<B>1. On prouve que $ABDC$ est un parallélogramme :</B>`\n          texte_corr += `<br>On sait que $ABDC$ est un parallélogramme si et seulement si ses diagonales se coupent en leur milieu.`\n          texte_corr += `<br>On cherche donc les coordonnées du milieu de chacune des deux diagonales du quadrilatère, pour prouver qu'elles sont identiques. :`\n          texte_corr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d'un repère ,`\n          texte_corr += `<br> alors les coordonnées du point $I$ milieu de $[AD]$ sont `\n          texte_corr += `$I\\\\left(\\\\dfrac{x_A+x_D}{2};\\\\dfrac{y_A+y_D}{2}\\\\right)$ <br>`\n          texte_corr += `On applique la relation à l'énoncé : `\n          texte_corr += `$\\\\begin{cases}x_I=\\\\dfrac{${xA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xD)}}{2} \\\\\\\\ y_I=\\\\dfrac{${yA}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yD)}}{2}\\\\end{cases}$`\n          texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(xA + xD)}}{2}\\\\\\\\y_I=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(yA + yD)}}{2}\\\\end{cases}$`\n          if (xI1 != 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};\\\\dfrac{${yI0}}{${yI1}};\\\\right)$` }\n          if (xI1 == 1 && yI1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};\\\\dfrac{${yI0}}{${yI1}}\\\\right)$` }\n          if (xI1 != 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(\\\\dfrac{${xI0}}{${xI1}};${yI0}\\\\right)$` }\n          if (xI1 == 1 && yI1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ I\\\\left(${xI0};${yI0}\\\\right)$` }\n          texte_corr += `<br> Les coordonnées du point $J$ milieu de $[BC]$ sont `\n          texte_corr += `$J\\\\left(\\\\dfrac{x_B+x_C}{2};\\\\dfrac{y_B+y_C}{2}\\\\right)$ <br>`\n          texte_corr += `On applique la relation à l'énoncé : `\n          texte_corr += `$\\\\begin{cases}x_J=\\\\dfrac{${xB}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xC)}}{2} \\\\\\\\ y_J=\\\\dfrac{${yB}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yC)}}{2}\\\\end{cases}$`\n          texte_corr += `<br>On en déduit :  $\\\\begin{cases}x_J=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(xB + xC)}}{2}\\\\\\\\y_J=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(yB + yC)}}{2}\\\\end{cases}$`\n          if (xJ1 != 1 && yJ1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};\\\\dfrac{${yJ0}}{${yJ1}};\\\\right)$` }\n          if (xJ1 == 1 && yJ1 != 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};\\\\dfrac{${yJ0}}{${yJ1}}\\\\right)$` }\n          if (xJ1 != 1 && yJ1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(\\\\dfrac{${xJ0}}{${xJ1}};${yJ0}\\\\right)$` }\n          if (xJ1 == 1 && yJ1 == 1) { texte_corr += `  <br>Ce qui donne au final : $ J\\\\left(${xJ0};${yJ0}\\\\right)$` }\n          texte_corr += `<br>On observe que $I$ et $J$ ont les mêmes coordonnées, donc les deux diagonales du quadrilatère se coupent en leur milieu.`\n          texte_corr += `<br>$ABDC$ est donc un parallélogramme.`\n          texte_corr += `<br><B>2. On prouve que $ABDC$ est un rectangle :</B>`\n          texte_corr += `<br>On calcule maintenant les diagonales de $ABDC$ : $AD$ et $BC$ .`\n          texte_corr += `<br>On sait d'après le cours, que si $A(x_A;y_A)$ et $D(x_D;y_D)$ sont deux points d'un repère orthonormé,`\n          texte_corr += ` alors on a : $AD=\\\\sqrt{\\\\left(x_D-x_A\\\\right)^{2}+\\\\left(y_D-y_A\\\\right)^{2}}.$<br>`\n          texte_corr += `On applique la relation à l'énoncé : $AD=\\\\sqrt{\\\\left(${xD}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xA)}\\\\right)^{2}+\\\\left(${yD}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yA)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AD=\\\\sqrt{${XAD}+${YAD}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } AD=\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAD + YAD)}}$<br>`\n          facteur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AD)[0]\n          radical = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AD)[1]\n          if (radical != 1) {\n            if (facteur != 1) {\n              texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AD=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          }\n          else {\n            texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } AD=${facteur}$<br>`\n          }\n          texte_corr += `On procède de même pour $BC$: $BC=\\\\sqrt{\\\\left(${xC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xB)}\\\\right)^{2}+\\\\left(${yC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yB)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{On applique la relation a l'enonce :        } BC=\\\\sqrt{${XBC}+${YBC}}$<br>`\n          facteur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(BC)[0]\n          radical = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(BC)[1]\n          if (radical != 1) {\n            if (facteur != 1) {\n              texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } BC=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n            else {\n              texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } BC=\\\\sqrt{${radical}}$<br>`\n            }\n          }\n          else {\n            texte_corr += `$\\\\phantom{On applique la relation a l'enonce :   } BC=${facteur}$<br>`\n          }\n          texte_corr += `<br>On observe que $BC=AD$, $ABDC$ est donc bien un rectangle.`\n          texte_corr += `<br><B>3. On prouve que $ABDC$ est un carré :</B>`\n          texte_corr += `<br>On calcule maintenant deux côtés consécutilfs de $ABDC$ : $AB$ et $AC$ par exemple.`\n          texte_corr += ` <br>$AB=\\\\sqrt{\\\\left(${xB}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xA)}\\\\right)^{2}+\\\\left(${yB}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yA)}\\\\right)^{2}}$<br>`\n          texte_corr += `$AB =\\\\sqrt{${XAB}+${YAB}}$<br>`\n          texte_corr += `$AB =\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAB + YAB)}}$<br>`\n          facteur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AB)[0]\n          radical = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AB)[1]\n          if (radical != 1) {\n            if (facteur != 1) {\n              texte_corr += `$AB=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          }\n          else {\n            texte_corr += `$AB=${facteur}$<br>`\n          }\n          texte_corr += `De même : $AC=\\\\sqrt{\\\\left(${xC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(xA)}\\\\right)^{2}+\\\\left(${yC}-${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.ecriture_parenthese_si_negatif)(yA)}\\\\right)^{2}}$<br>`\n          texte_corr += `$\\\\phantom{De meme :       } AC=\\\\sqrt{${XAC}+${YAC}}$<br>`\n          texte_corr += `$\\\\phantom{De meme :       } AC=\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.tex_nombre)(XAC + YAC)}}$<br>`\n          facteur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AC)[0]\n          radical = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.extraire_racine_carree)(AC)[1]\n          if (radical != 1) {\n            console.log(facteur)\n            if (facteur != 1) {\n              texte_corr += `$\\\\phantom{De meme :       } AC=${facteur}\\\\sqrt{${radical}}$<br>`\n            }\n          }\n          else {\n            texte_corr += `$\\\\phantom{De meme :  } AC=${facteur}$<br>`\n          }\n          texte_corr += `On observe que $AC=AB$ donc $ABDC$ est bien un carré.`\n            ;\n          break;\n\n      }\n      if (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_2__.liste_de_question_to_contenu)(this);\n  }\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/2e/2G12.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);