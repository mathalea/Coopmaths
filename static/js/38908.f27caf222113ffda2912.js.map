{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G31-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","MonSuperExerciceTropBeau","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacingCorr","correctionDetailleeDisponible","context","correctionDetaillee","video","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestion","choice","texte","texteCorr","B","point","A","randint","C","longueur","t1","polygone","t1c","color","epaisseur","c1","codageAngleDroit","D","similitude","calcul","t2","t2c","c2","nom","creerNomDePolygone","labels","labelPoint","BA","AD","BAC","Math","ceil","angle","AC","cos","radians","ACD","round","degres","atan","a1","afficheMesureAngle","a2","afficheLongueurSegment","a3","a4","a5","codeAngle","ACB","objetsMathalea","sup","push","mathalea2d","xmin","ymin","xmax","x","ymax","max","y","texNombre","texte1","texteSurSegment","texte2","texte3","texte4","sin","listeQuestionsToContenu","besoinFormulaireCaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","spacing","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/38908.f27caf222113ffda2912.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, calcul, creerNomDePolygone, texNombre, choice } from '../../modules/outils.js'\nimport { point, labelPoint, polygone, similitude, codageAngleDroit, codeAngle, mathalea2d, afficheMesureAngle, afficheLongueurSegment, longueur, angle, texteSurSegment } from '../../modules/2d.js'\nimport { radians, degres } from '../../modules/fonctionsMaths.js'\n\nexport const titre = 'Calculer toutes les mesures d’angle d’une figure complexe'\n\n/**\n * Deux triangles rectangles accolés, on connait deux longueurs et un angle, il faut déterminer tous les autres angles\n * @author Rémi Angot\n * 3G31-1\n * Février 2021\n*/\nexport default function MonSuperExerciceTropBeau () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Calculer la mesure de tous les angles de cette figure.'\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.spacingCorr = 3\n  this.correctionDetailleeDisponible = true\n  context.isHtml ? this.correctionDetaillee = true : this.correctionDetaillee = false\n  // this.sup = 1; // Niveau de difficulté\n  // this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestion = choice(['BA-AD-BAC', 'BA-AD-ACB'])\n    let texte, texteCorr\n\n    const B = point(0, 0, '', 'below')\n    const A = point(randint(4, 7), 0, '', 'below')\n    const C = point(0, randint(3, 7, longueur(A, B)), '', 'above') // On exclue AB pour ne pas avoir un triangle isocèle\n    const t1 = polygone(A, B, C)\n    const t1c = polygone(A, B, C)\n    t1c.color = 'blue'\n    t1c.epaisseur = 3\n    const c1 = codageAngleDroit(A, B, C)\n    const D = similitude(C, A, -90, calcul(randint(7, 12, 10) / 10), '', 'right') // On exclue 10 pour ne pas avoir un triangle isocèle\n    const t2 = polygone(C, A, D)\n    const t2c = polygone(C, A, D)\n    t2c.color = 'blue'\n    t2c.epaisseur = 3\n    const c2 = codageAngleDroit(C, A, D)\n    const nom = creerNomDePolygone(4)\n    A.nom = nom[0]\n    B.nom = nom[1]\n    C.nom = nom[2]\n    D.nom = nom[3]\n    const labels = labelPoint(A, B, C, D)\n    const BA = longueur(B, A)\n    const AD = longueur(A, D, 1)\n    const BAC = Math.ceil(angle(B, A, C))\n    let AC = calcul(BA / Math.cos(radians(BAC)), 1)\n    let ACD = Math.round(degres(Math.atan(AD / AC)))\n    let a1 = afficheMesureAngle(B, A, C, 'black', 1, BAC + '°')\n    const a2 = afficheLongueurSegment(A, B)\n    const a3 = afficheLongueurSegment(D, A)\n    const a4 = afficheLongueurSegment(A, C)\n    const a5 = codeAngle(A, C, D, 1.2)\n    a5.epaisseur = 2\n    const ACB = Math.ceil(angle(A, C, B))\n\n    const objetsMathalea = [t1, t2, c1, c2, labels]\n\n    switch (typesDeQuestion) { // Suivant le type de question, le contenu sera différent\n      case 'BA-AD-BAC':\n        if (this.sup) {\n          objetsMathalea.push(a1, a2, a3)\n        }\n        texte = mathalea2d({ xmin: -1, ymin: -1, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, objetsMathalea)\n        if (!this.sup) {\n          texte += `<br>On a $${B.nom + A.nom} = ${texNombre(BA)}$ cm, $${A.nom + D.nom} = ${texNombre(AD)}$ cm et $\\\\widehat{${B.nom + A.nom + C.nom}}=${BAC}°$.`\n        }\n        texteCorr = ''\n        if (this.correctionDetaillee) {\n          const texte1 = texteSurSegment('hypoténuse', C, A)\n          const texte2 = texteSurSegment('adjacent', A, B, 'black', 1)\n          texteCorr += mathalea2d({ xmin: -1, ymin: -2, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, t1c, t2, c1, c2, a1, a2, labels, texte1, texte2)\n          texteCorr += '<br>'\n        }\n        texteCorr += `$${C.nom + B.nom + A.nom}$ est rectangle en $${B.nom}$ donc $\\\\cos\\\\left(\\\\widehat{${B.nom + A.nom + C.nom}}\\\\right)=\\\\dfrac{${B.nom + A.nom}}{${A.nom + C.nom}}\\\\quad$ `\n        texteCorr += `soit $\\\\quad\\\\cos(${BAC}°)=\\\\dfrac{${texNombre(BA)}}{${A.nom + C.nom}}\\\\quad$ et $\\\\quad ${A.nom + C.nom}=\\\\dfrac{${texNombre(BA)}}{\\\\cos(${BAC}°)}\\\\approx${texNombre(AC)}$ cm.`\n        if (this.correctionDetaillee) {\n          const texte3 = texteSurSegment('adjacent', C, A)\n          const texte4 = texteSurSegment('opposé', A, D, 'black')\n          texteCorr += '<br><br>' + mathalea2d({ xmin: -1, ymin: -1, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, t1, t2c, c1, c2, a3, a4, a5, labels, texte3, texte4)\n        }\n        texteCorr += `<br><br>$${C.nom + A.nom + D.nom}$ est rectangle en $${A.nom}$ donc $\\\\tan\\\\left(\\\\widehat{${A.nom + C.nom + D.nom}}\\\\right)=\\\\dfrac{${A.nom + D.nom}}{${A.nom + C.nom}}\\\\quad$ `\n        texteCorr += `soit $\\\\quad\\\\tan\\\\left(\\\\widehat{${A.nom + C.nom + D.nom}}\\\\right)\\\\approx\\\\dfrac{${texNombre(AD)}}{${texNombre(AC)}}\\\\quad$ et $\\\\quad\\\\widehat{${A.nom + C.nom + D.nom}}=\\\\text{arctan}\\\\left(\\\\dfrac{${texNombre(AD)}}{${texNombre(AC)}}\\\\right)\\\\approx${ACD}$°.`\n        texteCorr += `<br><br>La somme des angles d'un triangle est égale à 180° donc $\\\\widehat{${B.nom + C.nom + A.nom}}=180°-90°-${BAC}°=${90 - BAC}°$.`\n        texteCorr += `<br>De même, $\\\\widehat{${C.nom + D.nom + A.nom}}\\\\approx 180°-90°-${ACD}°\\\\approx${90 - ACD}°$.`\n        break\n      case 'BA-AD-ACB':\n        AC = calcul(BA / Math.sin(radians(ACB)), 1)\n        ACD = Math.round(degres(Math.atan(AD / AC)))\n        a1 = afficheMesureAngle(A, C, B, 'black', 1, ACB + '°')\n        if (this.sup) {\n          objetsMathalea.push(a1, a2, a3)\n        }\n        texte = mathalea2d({ xmin: -1, ymin: -1, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, objetsMathalea)\n        if (!this.sup) {\n          texte += `<br>On a $${B.nom + A.nom} = ${texNombre(BA)}$ cm, $${A.nom + D.nom} = ${texNombre(AD)}$ cm et $\\\\widehat{${A.nom + C.nom + B.nom}}=${ACB}°$.`\n        }\n        texteCorr = ''\n        if (this.correctionDetaillee) {\n          const texte1 = texteSurSegment('hypoténuse', C, A)\n          const texte2 = texteSurSegment('opposé', A, B, 'black', 1)\n          texteCorr += mathalea2d({ xmin: -1, ymin: -2, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, t1c, t2, c1, c2, a1, a2, labels, texte1, texte2)\n          texteCorr += '<br>'\n        }\n        texteCorr += `$${C.nom + B.nom + A.nom}$ est rectangle en $${B.nom}$ donc $\\\\sin\\\\left(\\\\widehat{${A.nom + C.nom + B.nom}}\\\\right)=\\\\dfrac{${B.nom + A.nom}}{${A.nom + C.nom}}\\\\quad$ `\n        texteCorr += `soit $\\\\quad\\\\sin(${ACB}°)=\\\\dfrac{${texNombre(BA)}}{${A.nom + C.nom}}\\\\quad$ et $\\\\quad ${A.nom + C.nom}=\\\\dfrac{${texNombre(BA)}}{\\\\sin(${ACB}°)}\\\\approx${texNombre(AC)}$ cm.`\n        if (this.correctionDetaillee) {\n          const texte3 = texteSurSegment('adjacent', C, A)\n          const texte4 = texteSurSegment('opposé', A, D, 'black')\n          texteCorr += '<br><br>' + mathalea2d({ xmin: -1, ymin: -1, xmax: D.x + 1, ymax: Math.max(C.y, D.y) + 1 }, t1, t2c, c1, c2, a3, a4, a5, labels, texte3, texte4)\n        }\n        texteCorr += `<br><br>$${C.nom + A.nom + D.nom}$ est rectangle en $${A.nom}$ donc $\\\\tan\\\\left(\\\\widehat{${A.nom + C.nom + D.nom}}\\\\right)=\\\\dfrac{${A.nom + D.nom}}{${A.nom + C.nom}}\\\\quad$ `\n        texteCorr += `soit $\\\\quad\\\\tan\\\\left(\\\\widehat{${A.nom + C.nom + D.nom}}\\\\right)\\\\approx\\\\dfrac{${texNombre(AD)}}{${texNombre(AC)}}\\\\quad$ et $\\\\quad\\\\widehat{${A.nom + C.nom + D.nom}}=\\\\text{arctan}\\\\left(\\\\dfrac{${texNombre(AD)}}{${texNombre(AC)}}\\\\right)\\\\approx${ACD}$°.`\n        texteCorr += `<br><br>La somme des angles d'un triangle est égale à 180° donc $\\\\widehat{${B.nom + C.nom + A.nom}}=180°-90°-${BAC}°=${90 - BAC}°$.`\n        texteCorr += `<br>De même, $\\\\widehat{${C.nom + D.nom + A.nom}}\\\\approx 180°-90°-${ACD}°\\\\approx${90 - ACD}°$.`\n        break\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Figure codée']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}