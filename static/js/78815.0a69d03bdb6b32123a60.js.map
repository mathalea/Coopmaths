{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N11-2.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/2dinteractif.js"],"names":["titre","interactifReady","interactifType","amcReady","amcType","PlacerUnPointAbscisseEntiere2d","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","nouvelleVersion","typesDeQuestions","interactif","consigne","listeQuestions","listeCorrections","autoCorrection","contenu","contenuCorrection","parseInt","combinaisonListes","pointsSolutions","pointsNonSolutions","d","abscisse","htmlConsigne","abs0","l1","l2","l3","x1","x2","x3","x11","x22","x33","A","B","C","traceA","traceB","traceC","labels","pas1","i","texte","texteCorr","lettreDepuisChiffre","propositions","statut","feedback","randint","shuffle","droiteGraduee2","Unite","Min","Max","axeStyle","pointTaille","pointStyle","labelsPrincipaux","thickSec","step1","labelListe","texNombre","calcul","mesObjets","monPoint","indicePoint","pointCliquable","size","width","color","radius","tailleUnite","push","egal","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","numeroExercice","point","tracePoint","epaisseur","taille","labelPoint","nom","correctionInteractive","nbBonnesReponses","nbMauvaisesReponses","aucunMauvaisPointsCliques","divFeedback","document","querySelector","stopCliquable","etat","innerHTML","afficheScore","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","listePackages","PointCliquable","x","y","options","ObjetMathalea2D","out","opacity","over","click","svg","coeff","code","trace","couleur","isVisible","style","id","xSVG","ySVG","rayon","moi","gestionDeLaSouris","removeEventListener","groupe","getElementById","changeEtatPoint","key","mouseOverEffect","mouseOutEffect","addEventListener","replaceWith","cloneNode","args"],"mappings":"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","file":"js/78815.0a69d03bdb6b32123a60.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, lettreDepuisChiffre, htmlConsigne, texNombre, egal, shuffle } from '../../modules/outils.js'\nimport { pointCliquable } from '../../modules/2dinteractif.js'\nimport { afficheScore } from '../../modules/gestionInteractif.js'\nimport { droiteGraduee2, labelPoint, mathalea2d, point, tracePoint } from '../../modules/2d.js'\n\nexport const titre = 'Placer un point d’abscisse entière (grands nombres)'\nexport const interactifReady = true\nexport const interactifType = 'custom'\nexport const amcReady = true\nexport const amcType = 'AMCOpen'\n/**\n * Placer un point d'abscisse entière\n * @author Jean-Claude Lhote et Rémi Angot\n * référence 6N11-2\n */\nexport default function PlacerUnPointAbscisseEntiere2d () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 5\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    if (this.interactif) {\n      this.consigne = 'Placer un point sur un axe gradué.'\n    } else {\n      this.consigne = 'Placer trois points sur un axe gradué.'\n    }\n    // numeroExercice est 0 pour l'exercice 1\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (parseInt(this.sup) === 4) { typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else {\n      typesDeQuestions = combinaisonListes(\n        [parseInt(this.sup)],\n        this.nbQuestions\n      )\n    }\n    const pointsSolutions = []\n    const pointsNonSolutions = [] // Pour chaque question, la liste des points qui ne doivent pas être cliqués\n    const tailleUnite = 4\n    const d = []\n    let abscisse = []\n    this.contenu = htmlConsigne(this.consigne)\n    for (let i = 0, abs0, l1, l2, l3, x1, x2, x3, x11, x22, x33, A, B, C, traceA, traceB, traceC, labels, pas1, texte = '', texteCorr = ''; i < this.nbQuestions; i++) {\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n      this.autoCorrection[3 * i] = { propositions: [{ statut: 4, feedback: '' }] }\n      this.autoCorrection[3 * i + 1] = { propositions: [{ statut: 4, feedback: '' }] }\n      this.autoCorrection[3 * i + 2] = { propositions: [{ statut: 4, feedback: '' }] }\n      switch (typesDeQuestions[i]) {\n        case 1: // Placer des entiers sur un axe (milliers)\n          abs0 = randint(1, 9) * 1000\n          pas1 = 1000\n          break\n\n        case 2: // Placer des entiers sur un axe (dizaines de mille)\n          abs0 = randint(5, 15) * 10000\n          pas1 = 10000\n          break\n\n        case 3: // Placer des entiers sur un axe (centaines de mille)\n          abs0 = randint(35, 85) * 100000\n          pas1 = 100000\n          break\n      }\n      x1 = randint(0, 2) + randint(1, 9) / 10\n      x2 = randint(3, 4) + randint(1, 9) / 10\n      x3 = randint(5, 6) + randint(1, 9) / 10\n      x11 = abs0 + x1 * pas1\n      x22 = abs0 + x2 * pas1\n      x33 = abs0 + x3 * pas1\n      abscisse = shuffle([[x1, x11], [x2, x22], [x3, x33]])\n      d[2 * i] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        step1: 10,\n        labelListe: [[0, `${texNombre(abs0)}`], [1, `${texNombre(calcul(abs0 + pas1))}`]]\n      })\n      d[2 * i + 1] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        labelListe: [[0, `${texNombre(abs0)}`], [1, `${texNombre(calcul(abs0 + pas1))}`]],\n        thickSec: true,\n        step1: 10\n      })\n      const mesObjets = [d[2 * i]]\n      if (this.interactif) {\n        texte = `Place le point $${l1}\\\\left(${abscisse[0][1]}\\\\right).$`\n      } else {\n        texte = `Place les points $${l1}\\\\left(${abscisse[0][1]}\\\\right)$, $~${l2}\\\\left(${abscisse[1][1]}\\\\right)$ et $~${l3}\\\\left(${abscisse[2][1]}\\\\right)$.`\n      }\n      pointsNonSolutions[i] = []\n      if (this.interactif) {\n        for (let indicePoint = 0, monPoint; indicePoint < 70; indicePoint++) {\n          monPoint = pointCliquable(indicePoint / 10 * tailleUnite, 0, { size: 5, width: 3, color: 'blue', radius: tailleUnite / 25 })\n          mesObjets.push(monPoint)\n          if (egal(indicePoint * pas1 / 10 + abs0, abscisse[0][1])) {\n            pointsSolutions[i] = monPoint\n          } else {\n            pointsNonSolutions[i].push(monPoint)\n          }\n        }\n      }\n      texte += mathalea2d({ xmin: -2, ymin: -1, xmax: 30, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i], mesObjets)\n      texte += `<div id=\"resultatCheckEx${this.numeroExercice}Q${i}\"></div>`\n\n      A = point(abscisse[0][0] * tailleUnite, 0, l1)\n      traceA = tracePoint(A)\n      traceA.color = 'blue'\n      traceA.epaisseur = 3\n      traceA.taille = 5\n      labels = labelPoint(A)\n      if (!this.interactif) {\n        A.nom = lettreDepuisChiffre(i * 3 + 1)\n        B = point(abscisse[1][0] * tailleUnite, 0, l2)\n        traceB = tracePoint(B)\n        traceB.color = 'blue'\n        traceB.epaisseur = 3\n        traceB.taille = 5\n        C = point(abscisse[2][0] * tailleUnite, 0, l3)\n        traceC = tracePoint(C)\n        traceC.color = 'blue'\n        traceC.epaisseur = 3\n        traceC.taille = 5\n        labels = labelPoint(A, B, C)\n      }\n      if (this.interactif) {\n        texteCorr = `$${l1}\\\\left(${abscisse[0][1]}\\\\right).$`\n        texteCorr += '<br>' + mathalea2d({ xmin: -2, xmax: 30, ymin: -1, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i + 1], traceA, labels)\n      } else {\n        texteCorr = `$${l1}\\\\left(${abscisse[0][1]}\\\\right)$, $~${l2}\\\\left(${abscisse[1][1]}\\\\right)$ et $~${l3}\\\\left(${abscisse[2][1]}\\\\right)$`\n        texteCorr += '<br>' + mathalea2d({ xmin: -2, xmax: 30, ymin: -1, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i + 1], traceA, traceB, traceC, labels)\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    this.correctionInteractive = () => {\n      let nbBonnesReponses = 0\n      let nbMauvaisesReponses = 0\n      for (let i = 0, aucunMauvaisPointsCliques; i < this.nbQuestions; i++) {\n        aucunMauvaisPointsCliques = true\n        const divFeedback = document.querySelector(`#resultatCheckEx${this.numeroExercice}Q${i}`)\n        pointsSolutions[i].stopCliquable()\n        for (const monPoint of pointsNonSolutions[i]) {\n          if (monPoint.etat) aucunMauvaisPointsCliques = false\n          monPoint.stopCliquable()\n        }\n        if (aucunMauvaisPointsCliques && pointsSolutions[i].etat) {\n          divFeedback.innerHTML = '😎'\n          nbBonnesReponses++\n        } else {\n          divFeedback.innerHTML = '☹️'\n          nbMauvaisesReponses++\n        }\n      }\n      afficheScore(this, nbBonnesReponses, nbMauvaisesReponses)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    '1 : Ordre de grandeur : milliers\\n2 : Ordre de grandeur : dizaines de mille\\n3 : centaines de mille\\n4 : Mélange'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import { ObjetMathalea2D, point, tracePoint } from './2d.js'\n\n/**\n * @author Rémi ANGOT\n * @param {number} x abscisse du point\n * @param {number} y ordonnée du point\n * @param {object} options over, out et click sont des ojets pour le style css des évènements de la souris, radius, width, color, size, style sont les paramètres possibles pour la trace du point\n */\nfunction PointCliquable (x, y, options) {\n  ObjetMathalea2D.call(this)\n  const A = point(x, y)\n  if (!options) options = {}\n  const out = options.out || { opacity: 0 }\n  const over = options.over || { opacity: 0.5 }\n  const click = options.click || { opacity: 1 }\n  this.etat = false // Pour récupérer si le point est affiché ou pas\n  this.svg = function (coeff) {\n    let code\n    const trace = tracePoint(A)\n    trace.color = options.color || options.couleur || 'black'\n    trace.epaisseur = options.width || options.epaisseur || 1\n    trace.taille = options.size || options.taille || 3\n    trace.isVisible = false\n    trace.style = options.style || 'x'\n    code = `<g id=\"${this.id}\">\\n`\n    code += trace.svg(coeff) + '\\n'\n    // Le cercle est la zone d'effet pour les évènements\n    // Comme fill est à none, il faut ajouter pointer-events=\"visible\" cf https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/\n    code += `<circle cx=\"${A.xSVG(coeff)}\" cy=\"${A.ySVG(coeff)}\" r=\"${(options.radius || options.rayon || 1) * coeff}\" fill=\"none\" pointer-events=\"visible\" />\\n`\n    code += '</g>'\n    return code\n  }\n  const moi = this // Pour utiliser this dans les fonctions\n  const gestionDeLaSouris = () => {\n    document.removeEventListener('exercicesAffiches', gestionDeLaSouris)\n    const groupe = document.getElementById(`${this.id}`)\n    const changeEtatPoint = (etat) => {\n      this.etat = etat\n    }\n    // On initialise avec le style de out\n    if (groupe) {\n      for (const key in out) {\n        groupe.style[key] = out[key]\n      }\n      groupe.addEventListener('mouseover', mouseOverEffect)\n      groupe.addEventListener('mouseout', mouseOutEffect)\n      groupe.addEventListener('click', mouseClick)\n      function mouseOverEffect () {\n        for (const key in over) {\n          this.style[key] = over[key]\n        }\n      }\n      function mouseOutEffect () {\n        for (const key in out) {\n          this.style[key] = out[key]\n        }\n      }\n      function mouseClick () {\n        if (moi.etat) {\n          // On désactive le point\n          groupe.addEventListener('mouseover', mouseOverEffect)\n          groupe.addEventListener('mouseout', mouseOutEffect)\n          // On lui remet le style de out\n          for (const key in out) {\n            this.style[key] = out[key]\n          }\n          moi.etat = false\n          changeEtatPoint(false)\n        } else {\n          // On désactive les listeners\n          groupe.removeEventListener('mouseover', mouseOverEffect)\n          groupe.removeEventListener('mouseout', mouseOutEffect)\n          // On applique le style de click\n          for (const key in click) {\n            this.style[key] = click[key]\n          }\n          moi.etat = true\n        }\n      }\n    }\n  }\n  document.addEventListener('exercicesAffiches', gestionDeLaSouris)\n  this.stopCliquable = () => {\n    const groupe = document.getElementById(`${this.id}`)\n    // On retire tous les listener en le remplaçant par un clone\n    groupe.replaceWith(groupe.cloneNode(true))\n  }\n}\n\nexport function pointCliquable (...args) {\n  return new PointCliquable(...args)\n}\n"],"sourceRoot":""}