{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C20.js"],"names":["amcReady","amcType","titre","Additionner_soustraires_decimaux","Exercice","this","consigne","spacing","sortieHtml","spacingCorr","nbQuestions","sup","tailleDiaporama","qcm","nouvelleVersion","type_de_questions","reponse","listeQuestions","listeCorrections","liste_de_type_d_additions","combinaisonListes","liste_de_type_de_soustractions","listeTypeDeQuestions","i","push","texte","texteCorr","a","b","cpt","randint","calcul","texNombre","Operation","operande1","operande2","type","indexOf","digits","decimals","signe","exposant_nb_chiffres","exposant_signe","approx","listeQuestionsToContenu","besoinFormulaireNumerique"],"mappings":"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","file":"js/2190.9a2494c4ffaab8cdef95.js","sourcesContent":["import Operation from '../../modules/operations.js';\nimport Exercice from '../ClasseExercice.js';\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, texNombrec, texNombre,exportQcmAmc } from '../../modules/outils.js'\nexport const amcReady = true\nexport const amcType = 4 // type de question AMC\n\nexport const titre = 'Additions et soustractions de nombres décimaux'\n\n/**\n * Additions et soustractions de nombres décimaux\n * * xxx-xx,x\n * * xxx-xx,xx\n * * xxx,x-xxx\n * * x0x-xx9,x\n * * xxx+xx,x\n * * xxx+xx,xx\n * * xxx,x+xxx\n * * x0x+xx9,x\n * @Auteur Rémi Angot\n * Référence 6C20\n */\nexport default function Additionner_soustraires_decimaux() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"Poser et effectuer les calculs suivants.\";\n  this.spacing = 2;\n  sortieHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1); //Important sinon les opérations posées ne sont pas jolies\n  this.nbQuestions = 4;\n  this.sup = 3;\n  this.tailleDiaporama = 100;\n  this.qcm = ['6C20', [], 'Poser et effectuer les calculs suivants',4]\n \t\t\t/********************************************************************/\n      /** Type 4 : questionmultx avec AMCnumericChoices */\n\t\t\t// Dans ce cas, le tableau des booléens comprend les renseignements nécessaires pour paramétrer \\AMCnumericCoices\n\t\t\t// {int digits,int decimals,bool signe,int exposant_nb_chiffres,bool exposant_signe,int approx}\n\t\t\t// La correction est dans tabQCM[1][0] et la réponse numlérique est dans tabQCM[1][1]\n\t\t\t/********************************************************************/\n  this.nouvelleVersion = function () {\n    this.qcm[1]=[]\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let type_de_questions,reponse\n    let liste_de_type_d_additions = combinaisonListes(\n      [5, 6, 7, 8],\n      this.nbQuestions\n    );\n    let liste_de_type_de_soustractions = combinaisonListes(\n      [1, 2, 3, 4],\n      this.nbQuestions\n    );\n    let listeTypeDeQuestions = [];\n    if (this.sup == 1) {\n      listeTypeDeQuestions = combinaisonListes([5, 6, 7, 8], this.nbQuestions)\n    } else if (this.sup == 2) {\n      listeTypeDeQuestions = combinaisonListes([1, 2, 3, 4], this.nbQuestions)\n    } else {\n      for (let i = 0; i < this.nbQuestions; i++) {\n        if (i + 1 <= this.nbQuestions / 2) {\n          // première moitié sont des additions mais si c'est impair on prendra plus de soustractions\n          listeTypeDeQuestions.push(liste_de_type_d_additions[i]);\n        } else {\n          listeTypeDeQuestions.push(liste_de_type_de_soustractions[i]);\n        }\n      }\n    }\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0, a, b;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      type_de_questions = listeTypeDeQuestions[i];\n      switch (type_de_questions) {\n        case 1: // xxx-xx,x\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9);\n          b = calcul(randint(5, 9) * 10 + randint(6, 9) + randint(1, 9) / 10);\n          texte = `$${texNombre(a)}-${texNombre(b)}$`;\n          reponse=calcul(a-b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break;\n        case 2: // xxx-xx,xx\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9);\n          b = calcul(\n            randint(5, 9) * 10 +\n            randint(6, 9) +\n            randint(1, 9) / 10 +\n            randint(1, 9) / 100\n          );\n          texte = `$${texNombre(a)}-${texNombre(b)}$`;\n          reponse=calcul(a-b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break;\n        case 3: // xxx,x-xxx\n          a = calcul(\n            randint(5, 9) * 100 +\n            randint(2, 5) * 10 +\n            randint(1, 9) +\n            randint(1, 9) / 10\n          );\n          b = randint(1, 4) * 100 + randint(6, 9) * 10 + randint(1, 9);\n          texte = `$${texNombre(a)}-${texNombre(b)}$`;\n          reponse=calcul(a-b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break;\n        case 4: // x0x-xx9,x\n          a = calcul(randint(5, 9) * 100 + randint(1, 5));\n          b = calcul(\n            randint(1, 4) * 100 + randint(1, 9) * 10 + 9 + randint(1, 9) / 10\n          );\n          texte = `$${texNombre(a)}-${texNombre(b)}$`;\n          reponse=calcul(a-b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'soustraction' })\n          break;\n        case 5: // xxx+xx,x\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9);\n          b = calcul(randint(5, 9) * 10 + randint(6, 9) + randint(1, 9) / 10);\n          texte = `$${texNombre(a)}+${texNombre(b)}$`;\n          reponse=calcul(a+b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break;\n        case 6: // xxx+xx,xx\n          a = randint(1, 4) * 100 + randint(2, 5) * 10 + randint(1, 9);\n          b = calcul(\n            randint(5, 9) * 10 +\n            randint(6, 9) +\n            randint(1, 9) / 10 +\n            randint(1, 9) / 100\n          );\n          texte = `$${texNombre(a)}+${texNombre(b)}$`;\n          reponse=calcul(a+b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break;\n        case 7: // xxx,x+xxx\n          a = calcul(\n            randint(5, 9) * 100 +\n            randint(2, 5) * 10 +\n            randint(1, 9) +\n            randint(1, 9) / 10\n          );\n          b = randint(1, 4) * 100 + randint(6, 9) * 10 + randint(1, 9);\n          texte = `$${texNombre(a)}+${texNombre(b)}$`;\n          reponse=calcul(a+b)\n\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break;\n        case 8: // x0x+xx9,x\n          a = calcul(randint(5, 9) * 100 + randint(1, 5));\n          b = calcul(\n            randint(1, 4) * 100 + randint(1, 9) * 10 + 9 + randint(1, 9) / 10\n          );\n          texte = `$${texNombre(a)}+${texNombre(b)}$`;\n          reponse=calcul(a+b)\n          texteCorr = Operation({ operande1: a, operande2: b, type: 'addition' })\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        this.qcm[1].push([texte, [texteCorr,reponse], {digits:0,decimals:0,signe:false,exposant_nb_chiffres:0,exposant_signe:false,approx:0}])\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\"Niveau de difficulté\", 3, \"1 : Additions de décimaux\\n2: Soustraction de décimaux\\n3 : Additions et soustraction de décimaux\"];\n}\n\n"],"sourceRoot":""}