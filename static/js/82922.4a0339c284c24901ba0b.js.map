{"version":3,"sources":["webpack://mathalea/./src/js/exercices/2e/2N12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","DoubleDistributiviteAvecRacineCarree","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a1","a2","a","b1","b2","aa1","bb","aa2","aaa","c1","c2","d1","d2","c","dd","cc1","cc2","dd1","dd2","dd3","i","cpt","randint","choice","ecritureAlgebrique","ecritureParentheseSiNegatif","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/82922.4a0339c284c24901ba0b.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif } from '../../modules/outils.js'\n\nexport const titre = 'Appliquer la double distributivité avec les racines carrées'\n\n/**\n * 2N12\n * @author Stéphane Guyon\n */\nexport default function DoubleDistributiviteAvecRacineCarree () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ' Effectuer les calculs suivants :'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2]; let typesDeQuestions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, a1, a2, a, b1, b2, aa1, bb, aa2, aaa, c1, c2, d1, d2, c, dd, cc1, cc2, dd1, dd2, dd3, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        // Cas par cas, on définit le type de nombres que l'on souhaite\n        // Combien de chiffres ? Quelles valeurs ?\n        case 1:\n          a1 = randint(2, 9) * choice([-1, 1])\n          a = randint(2, 11, [4, 8, 9])\n          b1 = randint(2, 9) * choice([-1, 1])\n          a2 = randint(2, 9)\n          b2 = randint(2, 9) * choice([-1, 1])\n          aa1 = a1 * a2 * a\n          bb = b1 * b2\n          aa2 = a1 * b2 + b1 * a2\n          aaa = aa1 + bb\n          if (aa2 === 0) {\n            b2 = -b2\n            bb = b1 * b2\n            aa2 = a1 * b2 + b1 * a2\n            aaa = aa1 + bb\n          }\n          texte = `$\\\\left(${a1}\\\\sqrt{${a}}${ecritureAlgebrique(b1)}\\\\right)\\\\left(${a2}\\\\sqrt{${a}}${ecritureAlgebrique(b2)}\\\\right)$`\n          texteCorr = `$\\\\left(${a1}\\\\sqrt{${a}}${ecritureAlgebrique(b1)}\\\\right)\\\\left(${a2}\\\\sqrt{${a}}${ecritureAlgebrique(b2)}\\\\right)$<br>\n                    \n                    $=${a1}\\\\sqrt{${a}}\\\\times ${a2}\\\\sqrt{${a}}${ecritureAlgebrique(a1)}\\\\sqrt{${a}} \\\\times ${ecritureParentheseSiNegatif(b2)}\n                    ${ecritureAlgebrique(b1)} \\\\times ${a2}\\\\sqrt{${a}}${ecritureAlgebrique(b1)} \\\\times ${ecritureParentheseSiNegatif(b2)}$<br>\n                    $=${a1}\\\\times ${a}\\\\times ${a2}+ \\\\left( ${a1} \\\\times ${ecritureParentheseSiNegatif(b2)}${ecritureAlgebrique(b1)} \\\\times ${a2}\\\\right)\\\\sqrt{${a}} ${ecritureAlgebrique(bb)}$<br>\n                    $= ${aa1}${ecritureAlgebrique(aa2)} \\\\sqrt{${a}}${ecritureAlgebrique(bb)}$<br>\n                    $=${aa2} \\\\sqrt{${a}}${ecritureAlgebrique(aaa)}$`\n\n          break\n        case 2:\n          c1 = randint(2, 9) * choice([-1, 1])\n          c = randint(2, 11, [4, 8, 9])\n          d1 = randint(2, 9) * choice([-1, 1])\n          d2 = randint(2, 9)\n          c2 = randint(2, 9)\n          cc1 = c1 * d2\n          cc2 = c1 * c2\n          dd = d1 * d2\n          dd1 = d1 * c2\n          dd2 = dd + cc2 * c\n          dd3 = cc1 + dd1\n          texte = `$\\\\left(${c1}\\\\sqrt{${c}}${ecritureAlgebrique(d1)}\\\\right)\\\\left(${d2} ${ecritureAlgebrique(c2)}\\\\sqrt{${c}}\\\\right)$`\n          texteCorr = `$\\\\left(${c1}\\\\sqrt{${c}}${ecritureAlgebrique(d1)}\\\\right)\\\\left(${d2}${ecritureAlgebrique(c2)}\\\\sqrt{${c}}\\\\right)$<br>\n                    $=${c1}\\\\sqrt{${c}}\\\\times ${d2}${ecritureAlgebrique(c1)}\\\\sqrt{${c}} \\\\times ${ecritureParentheseSiNegatif(c2)}\\\\sqrt{${c}}${ecritureAlgebrique(d1)} \\\\times ${d2}  ${ecritureAlgebrique(d1)}  \\\\times ${c2}\\\\sqrt{${c}}$<br>\n                    $= ${cc1}\\\\sqrt{${c}} ${ecritureAlgebrique(cc2)}\\\\times ${c} ${ecritureAlgebrique(dd)} ${ecritureAlgebrique(dd1)} \\\\sqrt{${c}}   $<br>\n                    $=${dd3}\\\\sqrt{${c}}${ecritureAlgebrique(dd2)}$`\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}