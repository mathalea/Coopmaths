{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5G22.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","DroiteRemarquableDuTriangle","Exercice","this","consigne","spacing","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","triangles","sommets","A","B","C","t","d","n","c","objets","A0","B0","C0","tri","G","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","a","angle","rapport","texte","texteCorr","i","Triangles","getSommets","point","randint","choice","similitude","polygone","centreGraviteTriangle","rotation","nommePolygone","hauteurTriangle","epaisseur","codageHauteurTriangle","getNom","mathalea2d","xmin","ymin","xmax","ymax","scale","pixelsParCm","mediatrice","codageMediatrice","constructionMediatrice","medianeTriangle","codageMedianeTriangle","bissectrice","codageBissectrice","constructionBissectrice","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/8066.eabd8da3d9cfcfa18201.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, Triangles } from '../../modules/outils.js'\nimport { point, mediatrice, codageMediatrice, constructionMediatrice, bissectrice, codageBissectrice, constructionBissectrice, polygone, nommePolygone, rotation, similitude, medianeTriangle, centreGraviteTriangle, hauteurTriangle, codageHauteurTriangle, codageMedianeTriangle, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Déterminer la nature d’une droite remarquable'\n\n/**\n * 5G22\n * @author Jean-Claude Lhote\n * Les droites remarquables du triangle : hauteurs médiatrices....médianes et bissectrices\n */\nexport default function DroiteRemarquableDuTriangle () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n\n  this.titre = titre\n  this.consigne = 'Définir'\n  this.spacing = 2\n  this.nbQuestions = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const triangles = []; const sommets = [[]]; const A = []; const B = []; const C = []; const t = []; const d = []; const n = []; const c = []; const objets = []; let A0; let B0; let C0; let tri; let G\n    let typesDeQuestionsDisponibles, listeTypeDeQuestions\n    if (this.sup === 1) typesDeQuestionsDisponibles = [1, 2]\n    if (this.sup === 2) typesDeQuestionsDisponibles = [3, 4]\n    if (this.sup === 3) typesDeQuestionsDisponibles = [1, 2, 3, 4]\n    listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, a, angle, rapport, texte, texteCorr; i < this.nbQuestions; i++) { // this.nbQuestions && cpt<50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      triangles[i] = new Triangles()\n      sommets[i] = triangles[i].getSommets(false)\n\n      A0 = point(3, randint(1, 2))\n      B0 = point(6, randint(1, 2))\n      angle = choice([50, 60, 70, 75, 80, 100, 110, 120])\n      rapport = randint(7, 13) / 10\n      C0 = similitude(B0, A0, angle, rapport)\n      tri = polygone(A0, B0, C0)\n      G = centreGraviteTriangle(A0, B0, C0)\n      a = randint(0, 30) * 12 - 180\n      A[i] = rotation(A0, G, a, sommets[i][0], 'below left')\n      B[i] = rotation(B0, G, a, sommets[i][1], 'below right')\n      C[i] = rotation(C0, G, a, sommets[i][2], 'above')\n      t[i] = polygone(A[i], B[i], C[i])\n      n[i] = nommePolygone(t[i], `${sommets[i][0]}${sommets[i][1]}${sommets[i][2]}`)\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          d[i] = hauteurTriangle(C[i], B[i], A[i], 'blue')\n          d[i].epaisseur = 1\n          c[i] = codageHauteurTriangle(C[i], B[i], A[i])\n          objets[i] = [A[i], B[i], C[i], t[i], d[i], n[i], c[i]]\n          texteCorr = `La droite tracée est la hauteur issue de $${sommets[i][2]}$ dans le triangle ${triangles[i].getNom()}.<br>`\n          texteCorr += mathalea2d({ xmin: -3, ymin: -3, xmax: 8, ymax: 8, scale: 0.5, pixelsParCm: 20 }, ...objets[i])\n          break\n        case 2:\n          d[i] = mediatrice(A[i], B[i], true, 'blue')\n          d[i].epaisseur = 1\n          c[i] = codageMediatrice(A[i], B[i])\n          objets[i] = [A[i], B[i], C[i], t[i], d[i], n[i], c[i]]\n          texteCorr = `La droite tracée est la médiatrice du segment [$${sommets[i][0]}${sommets[i][1]}]$.<br>`\n          texteCorr += mathalea2d({ xmin: -3, ymin: -3, xmax: 8, ymax: 8, scale: 0.5, pixelsParCm: 20 }, ...objets[i], constructionMediatrice(A[i], B[i], true, 'gray', '×', '||', 'blue', 1))\n          break\n        case 3:\n          d[i] = medianeTriangle(C[i], B[i], A[i], 'blue')\n          d[i].epaisseur = 1\n          c[i] = codageMedianeTriangle(B[i], A[i], 'black', '//')\n          objets[i] = [A[i], B[i], C[i], t[i], d[i], n[i], c[i]]\n          texteCorr = `La droite tracée est la médiane issue de $${sommets[i][2]}$ dans le triangle ${triangles[i].getNom()}.<br>`\n          texteCorr += mathalea2d({ xmin: -3, ymin: -3, xmax: 8, ymax: 8, scale: 0.5, pixelsParCm: 20 }, ...objets[i])\n          break\n        case 4:\n          d[i] = bissectrice(A[i], B[i], C[i], 'blue')\n          d[i].epaisseur = 1\n          c[i] = codageBissectrice(A[i], B[i], C[i])\n          objets[i] = [A[i], B[i], C[i], t[i], d[i], n[i], c[i]]\n          texteCorr = `La droite tracée est la bissectrice de l'angle $\\\\widehat{${sommets[i][0]}${sommets[i][1]}${sommets[i][2]}}$.<br>`\n          texteCorr += mathalea2d({ xmin: -3, ymin: -3, xmax: 8, ymax: 8, scale: 0.5, pixelsParCm: 20 }, ...objets[i], constructionBissectrice(A[i], B[i], C[i], false, 'red', '×', 3, 'blue', 1))\n          break\n      }\n\n      texte = `Quelle est la nature de la droite tracée en bleu pour le triangle ${triangles[i].getNom()} ?<br>` + mathalea2d({ xmin: -3, ymin: -3, xmax: 8, ymax: 8, scale: 0.5, pixelsParCm: 20 }, ...objets[i])\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n      }\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de droites', 3, '1 : Hauteurs et Médiatrices\\n2 : Médianes et Bissectrices\\n3 : Toutes les droites']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}