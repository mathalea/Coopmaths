{"version":3,"file":"js/81741.eafd6c989a6e6700dee2.js","mappings":"gLAEO,MAAMA,EAAQ,6DAON,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKC,SAAW,mCAChBD,KAAKE,YAAc,EACnBF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAElBJ,KAAKK,gBAAkB,WACrBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GAExB,MAAMC,EAA8B,CAClC,EACA,GACAC,EAAAA,EAAAA,KAAO,CAAC,EAAG,EAAG,KACdA,EAAAA,EAAAA,KAAO,CAAC,EAAG,EAAG,KACdA,EAAAA,EAAAA,KAAO,CAAC,EAAG,MACXA,EAAAA,EAAAA,KAAO,CAAC,GAAI,MAERC,GAAuBC,EAAAA,EAAAA,KAC3BH,EACAR,KAAKE,aAEDU,GAAIC,EAAAA,EAAAA,KAAQ,EAAG,GACfC,GAAID,EAAAA,EAAAA,KAAQ,EAAG,EAAG,CAACD,IACnBG,GAAIF,EAAAA,EAAAA,KAAQ,EAAG,EAAG,CAACD,EAAGE,IACtBE,GAAIH,EAAAA,EAAAA,KAAQ,EAAG,EAAG,CAACD,EAAGE,EAAGC,IACzBE,GAAKJ,EAAAA,EAAAA,KAAQ,EAAG,EAAG,CAACD,EAAGE,EAAGC,EAAGC,IAC7BE,GAAKL,EAAAA,EAAAA,KAAQ,EAAG,EAAG,CAACD,EAAGE,EAAGC,EAAGC,EAAGC,IAChCE,GAAKN,EAAAA,EAAAA,KAAQ,EAAG,EAAG,CAACD,EAAGE,EAAGC,EAAGC,EAAGC,EAAIC,IACpCE,EACJR,EAAES,WACF,GACAP,EAAEO,WACFN,EAAEM,WACFL,EAAEK,WACF,IACAJ,EAAGI,WACHH,EAAGG,WACHF,EAEFnB,KAAKC,SAAY,2BAA0BmB,uCAC3C,IACE,IAAWE,EAAOC,EAAdC,EAAI,EAAqBC,EAAM,EACnCD,EAAIxB,KAAKE,aAAeuB,EAAM,IAE9B,CACA,OAAQf,EAAqBc,IAC3B,KAAK,EACHF,EAAQ,wCACRC,EACED,EAAS,KAAGI,EAAAA,EAAAA,KAAe,IAAJd,EAAe,IAAJE,EAAc,GAAJC,EAASC,MACvD,MACF,KAAK,EACHM,EAAQ,yCACRC,EACED,EAAS,KAAGI,EAAAA,EAAAA,KAAWT,EAAK,GAAKC,EAAK,IAAMC,EAAK,QACnD,MACF,KAAK,EACHG,EAAQ,8CACRC,EAAYD,EAAS,IAAGP,KACxB,MACF,KAAK,EACHO,EAAQ,+CACRC,EAAYD,EAAS,IAAGR,KACxB,MACF,KAAK,EACHQ,EAAQ,6CACRC,EAAYD,EAAS,IAAGV,KACxB,MACF,KAAK,EACHU,EAAQ,8CACRC,EAAYD,EAAS,IAAGL,KACxB,MACF,KAAK,EACHK,EAAQ,+CACRC,EAAYD,EAAS,IAAGJ,KACxB,MACF,KAAK,EACHI,EAAQ,+CACRC,EAAYD,EAAS,IAAGH,KACxB,MACF,KAAK,EACHG,EAAQ,4CACRC,EAAYD,EAAS,KAAGI,EAAAA,EAAAA,KAAWX,EAAQ,GAAJD,EAAa,IAAJF,MAChD,MACF,KAAK,GACHU,EAAQ,6CACRC,EAAYD,EAAS,KAAGI,EAAAA,EAAAA,KAAWZ,EAAQ,GAAJF,MACvC,MACF,KAAK,GACHU,EAAQ,4CACRC,EACED,EACC,KAAGI,EAAAA,EAAAA,KAAWT,EAAS,GAAJD,EAAa,IAAJD,EAAc,IAAJD,EAAe,IAAJF,MACpD,MACF,KAAK,GACHU,EAAQ,6CACRC,EACED,EACC,KAAGI,EAAAA,EAAAA,KACFR,EAAU,GAALD,EAAc,IAAJD,EAAc,IAAJD,EAAe,IAAJD,EAAgB,IAAJF,MAKxDW,GAAa,IACbD,GAAS,WACmC,IAAxCtB,KAAKM,eAAeqB,QAAQL,KAE9BtB,KAAKM,eAAesB,KAAKN,GACzBtB,KAAKO,iBAAiBqB,KAAKL,GAC3BC,KAEFC,KAEFI,EAAAA,EAAAA,KAAwB7B,S,gBCvHb,SAASD,IAItBC,KAAKH,MAAQ,GACbG,KAAK8B,YAAa,EAclB9B,KAAKC,SAAW,GAChBD,KAAK+B,mBAAqB,GAC1B/B,KAAKgC,aAAe,GACpBhC,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKiC,QAAU,GACfjC,KAAKkC,kBAAoB,GACzBlC,KAAKmC,eAAiB,GACtBnC,KAAKoC,sBAAwB,GAK7BpC,KAAKqC,QAAU,EACfrC,KAAKsC,YAAc,EAKnBtC,KAAKuC,mBAAoB,EACzBvC,KAAKwC,cAAgB,GACrBxC,KAAKyC,oBAAqB,EAC1BzC,KAAK0C,uBAAwB,EAC7B1C,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAK2C,kBAAmB,EACxB3C,KAAK4C,sBAAuB,EAC5B5C,KAAK6C,mBAAoB,EACzB7C,KAAK8C,uBAAwB,EAM7B9C,KAAK+C,QAAS,EACd/C,KAAKgD,gBAAkB,GAKvBhD,KAAKE,YAAc,GACnBF,KAAKiD,+BAAgC,EACrCjD,KAAKkD,qBAAsB,EAC3BlD,KAAKmD,MAAQ,GAEbnD,KAAKoD,YAAa,EAClBpD,KAAKqD,uBAAwB,EAE7BrD,KAAKsD,2BAA4B,EACjCtD,KAAKuD,uBAAwB,EAC7BvD,KAAKwD,6BAA8B,EAEnCxD,KAAKyD,4BAA6B,EAClCzD,KAAK0D,wBAAyB,EAC9B1D,KAAK2D,8BAA+B,EAEpC3D,KAAK4D,4BAA6B,EAClC5D,KAAK6D,wBAAyB,EAC9B7D,KAAK8D,8BAA+B,EAMpC9D,KAAK+D,cAAe,EAMpB/D,KAAKgE,eAAiB,GAEtBhE,KAAKK,gBAAkB,SAAU4D,KAQjCjE,KAAKkE,oBAAsB,SAAU1C,KAAM2C,GAC/B,IAAN3C,IAASxB,KAAKgE,eAAiB,IACnC,IAAII,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIhD,YAE/C,QAAIrB,KAAKgE,eAAerC,QAAQyC,IAAmB,KAGjDpE,KAAKgE,eAAepC,KAAKwC,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/6e/6N10-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, texNombrec } from '../../modules/outils.js'\nexport const titre = 'Décomposer un nombre décimal (nombre de..., chiffre de...)'\n\n/**\n * Des questions sur le nombre ou le chiffre de centaines, de dizaines, de dixièmes, de centièmes...\n * @author Rémi Angot\n * Référence 6N10-2\n */\nexport default function DecompositionNombreDecimal () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Compléter les phrases suivantes.'\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = [\n      1,\n      2,\n      choice([3, 4, 5]),\n      choice([6, 7, 8]),\n      choice([9, 10]),\n      choice([11, 12])\n    ] // sans chevauchement ou avec chevauchement\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const m = randint(1, 9) // le nombre sera le même pour tout l'exercice\n    const c = randint(0, 9, [m])\n    const d = randint(0, 9, [m, c])\n    const u = randint(0, 9, [m, c, d])\n    const di = randint(0, 9, [m, c, d, u])\n    const ci = randint(0, 9, [m, c, d, u, di])\n    const mi = randint(1, 9, [m, c, d, u, di, ci])\n    const n =\n      m.toString() +\n      '' +\n      c.toString() +\n      d.toString() +\n      u.toString() +\n      ',' +\n      di.toString() +\n      ci.toString() +\n      mi\n    // calcul ne semble pas marcher avec 7 chiffres significatifs\n    this.consigne = `On considère le nombre $${n}$. Compléter les phrases suivantes.`\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte = 'La partie entière de ce nombre est : '\n          texteCorr =\n            texte + `$${texNombrec(m * 1000 + c * 100 + d * 10 + u)}$`\n          break\n        case 2:\n          texte = 'La partie décimale de ce nombre est : '\n          texteCorr =\n            texte + `$${texNombrec(di / 10 + ci / 100 + mi / 1000)}$`\n          break\n        case 3:\n          texte = 'Le chiffre des dizaines de ce nombre est : '\n          texteCorr = texte + `$${d}$`\n          break\n        case 4:\n          texte = 'Le chiffre des centaines de ce nombre est : '\n          texteCorr = texte + `$${c}$`\n          break\n        case 5:\n          texte = 'Le chiffre des miliers de ce nombre est : '\n          texteCorr = texte + `$${m}$`\n          break\n        case 6:\n          texte = 'Le chiffre des dixièmes de ce nombre est : '\n          texteCorr = texte + `$${di}$`\n          break\n        case 7:\n          texte = 'Le chiffre des centièmes de ce nombre est : '\n          texteCorr = texte + `$${ci}$`\n          break\n        case 8:\n          texte = 'Le chiffre des millièmes de ce nombre est : '\n          texteCorr = texte + `$${mi}$`\n          break\n        case 9:\n          texte = 'Le nombre de dizaines de ce nombre est : '\n          texteCorr = texte + `$${texNombrec(d + c * 10 + m * 100)}$`\n          break\n        case 10:\n          texte = 'Le nombre de centaines de ce nombre est : '\n          texteCorr = texte + `$${texNombrec(c + m * 10)}$`\n          break\n        case 11:\n          texte = 'Le nombre de dixièmes de ce nombre est : '\n          texteCorr =\n            texte +\n            `$${texNombrec(di + u * 10 + d * 100 + c * 1000 + m * 10000)}$`\n          break\n        case 12:\n          texte = 'Le nombre de centièmes de ce nombre est : '\n          texteCorr =\n            texte +\n            `$${texNombrec(\n              ci + di * 10 + u * 100 + d * 1000 + c * 10000 + m * 100000\n            )}$`\n          break\n      }\n\n      texteCorr += '.'\n      texte += '\\\\ldots'\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',3];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","DecompositionNombreDecimal","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","choice","listeTypeDeQuestions","combinaisonListes","m","randint","c","d","u","di","ci","mi","n","toString","texte","texteCorr","i","cpt","texNombrec","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined"],"sourceRoot":""}