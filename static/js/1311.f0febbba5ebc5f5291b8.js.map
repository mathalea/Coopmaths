{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5N20.js","webpack://mathalea/./src/js/exercices/6e/6C23.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/modules/gestionQcm.js"],"names":["amcReady","amcType","titre","ExerciceAdditionnerSoustraireFractions5e","max","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","qcmDisponible","modeQcm","nouvelleVersion","listeTypeDeQuestions","tabrep","parseInt","qcm","level","listeQuestions","listeCorrections","combinaisonListes","tabicone","a","b","c","d","k","texte","texteCorr","i","randint","choice","texFractionReduite","texFraction","elimineDoublons","ordreDesFractions","push","miseEnEvidence","s","pgcd","calcul","shuffle2tableaux","mathalea","sortieAMC","tableauSolutionsDuQcm","propositionsQcm","numeroExercice","Math","abs","replaceAll","listeQuestionsToContenu","gestionQcmInteractif","besoinFormulaireNumerique","besoinFormulaire2Numerique","ExerciceAdditionnerFractions6e","ExerciceAdditionnerOuSoustraireDesFractions5e","besoinFormulaireNumerique2","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","autoCorrection","mg32Editable","listePackages","exercice","document","addEventListener","$","checkbox","button","querySelector","event","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","reduce","spanReponseLigne","forEach","solution","rep","label","check","style","backgroundColor","checked","innerHTML","color","fontSize","querySelectorAll","uicheck","classList","add","espace","sortieHtml","length","reponses","statuts","reponsesEpurees","slice","statutsEpures","j","console","log","splice"],"mappings":"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","file":"js/1311.f0febbba5ebc5f5291b8.js","sourcesContent":["/* global mathalea */\nimport Exercice from '../ClasseExercice.js'\nimport { shuffle2tableaux, calcul, listeQuestionsToContenu, randint, choice, combinaisonListes, abs, pgcd, miseEnEvidence, texFraction, texFractionReduite } from '../../modules/outils.js'\nimport { gestionQcmInteractif, propositionsQcm, elimineDoublons } from '../../modules/gestionQcm.js'\n\nexport const amcReady = true\nexport const amcType = 1 // type de question AMC\n\nexport const titre = 'Additionner ou soustraire deux fractions (d√©nominateurs multiples)'\n\n/**\n* Effectuer l'addition ou la soustraction de deux fractions dont un d√©nominateur est un multiple de l'autre.\n*\n* Le r√©sultat de la soustraction sera toujours positif.\n*\n* Le coefficient est param√©trable, par d√©faut il est inf√©rieur √† 11.\n*\n* On peut param√©trer de n'avoir que des soustractions.\n* @Auteur R√©mi Angot\n* 5N20\n*/\nexport default function ExerciceAdditionnerSoustraireFractions5e (max = 11) {\n  Exercice.call(this) // H√©ritage de la classe Exercice()\n  this.sup = max // Correspond au facteur commun\n  this.sup2 = false // Si true alors il n'y aura que des soustractions\n  this.titre = titre\n  this.consigne = \"Calculer et donner le r√©sultat sous la forme d'une fraction simplifi√©e\"\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.sup2 = 3\n  /** ************ modeQcm disponible dans Mathalea ***********************/\n  this.qcmDisponible = true\n  this.modeQcm = false\n  /***********************************************************************/\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.qcm = ['5N20', [], 'Additionner ou soustraire deux fractions (d√©nominateurs multiples)', 1]\n    if (this.level === 6) this.qcm[0] = '6C23'\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrig√©es\n    let listeTypeDeQuestions\n    if (this.sup2 === 1) {\n      listeTypeDeQuestions = combinaisonListes(['+'], this.nbQuestions)\n    }\n    if (this.sup2 === 2) {\n      listeTypeDeQuestions = combinaisonListes(['-'], this.nbQuestions)\n    }\n    if (this.sup2 === 3) {\n      listeTypeDeQuestions = combinaisonListes(['+', '-'], this.nbQuestions)\n    }\n\n    /** ************* Pour QCM html/latex hors AMC *****************************/\n    let tabrep; let tabicone = [1, 0, 0, 0]\n    /**************************************************************************/\n\n    for (let i = 0, a, b, c, d, k, texte, texteCorr; i < this.nbQuestions; i++) {\n      texteCorr = ''\n      // les num√©rateurs\n      a = randint(1, 9)\n      // les d√©nominateurs\n      b = randint(2, 9, a)\n      while (b === a) {\n        b = randint(2, 9) // pas de fraction avec num√©rateur et d√©nominateur √©gaux\n      }\n      if (this.sup > 1) {\n        k = randint(2, this.sup)\n      } else k = 1\n      d = b * k\n      if (listeTypeDeQuestions[i] === '-') {\n        c = choice([randint(1, b * k), randint(b * k, 9 * k)])\n      } else {\n        c = randint(1, 19, d)\n      }\n      if (listeTypeDeQuestions[i] === '+') { // une addition\n        /** ***************** Choix des r√©ponses du QCM ***********************************/\n        tabrep = [`$${texFractionReduite(a * d + c * b, b * d)}$`, `$${texFraction(a + c, b + d)}$`, `$${texFraction(a + c, b * d)}$`, `$${texFraction(a * c, b * d)}$`]\n        tabicone = [1, 0, 0, 0];\n        [tabrep, tabicone] = elimineDoublons(tabrep, tabicone)\n        /*************************************************************************/\n        const ordreDesFractions = randint(1, 2)\n        if (ordreDesFractions === 1) {\n          texte = `$${texFraction(a, b)}+${texFraction(c, d)}=$`\n          /** ****************** AMC question/questionmult ********************************/\n          this.qcm[1].push([`$${texFraction(a, b)}+${texFraction(c, d)}=$\\\\\\\\ \\n R√©ponses possibles`,\n            tabrep,\n            tabicone])\n          /*******************************************************************************/\n        } else {\n          texte = `$${texFraction(c, d)}+${texFraction(a, b)}=$`\n          /** ****************** AMC question/questionmult ******************************/\n          this.qcm[1].push([`$${texFraction(c, d)}+${texFraction(a, b)}=$\\\\\\\\ \\n R√©ponses possibles`,\n            tabrep,\n            tabicone])\n          /*******************************************************************************/\n        }\n\n        if (ordreDesFractions === 1) {\n          texteCorr = `$${texFraction(a, b)}+${texFraction(c, d)}=`\n\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}+${texFraction(c, d)}=${texFraction(a * k, b * k)}+${texFraction(c, d)}=`\n          }\n          texteCorr += `${texFraction(a * k + '+' + c, d)}=${texFraction(a * k + c, d)}$`\n        } else {\n          texteCorr = `$${texFraction(c, d)}+${texFraction(a, b)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(c, d)}+${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}=${texFraction(c, d)}+${texFraction(a * k, b * k)}=`\n          }\n          texteCorr += `${texFraction(c + '+' + a * k, d)}=${texFraction(a * k + c, d)}$`\n        }\n        // Est-ce que le r√©sultat est simplifiable ?\n        const s = pgcd(a * k + c, d)\n        if (s !== 1) {\n          texteCorr += `$=${texFraction(calcul((a * k + c) / s) + miseEnEvidence('\\\\times ' + s), calcul(d / s) + miseEnEvidence('\\\\times ' + s))}=${texFractionReduite(calcul((a * k + c) / s), calcul(d / s))}$`\n        }\n        shuffle2tableaux(tabrep, tabicone)\n        if (this.modeQcm && !mathalea.sortieAMC) {\n          this.tableauSolutionsDuQcm[i] = tabicone\n          texte += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n          // texteCorr += '<br><br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n        }\n      } else { // une soustraction\n        /** ***************** Choix des r√©ponses du QCM ***********************************/\n        tabrep = [`$${texFractionReduite(Math.abs(a * d - c * b), Math.abs(b * d))}$`, `$${texFraction(Math.abs(a - c), Math.abs(b - d))}$`, `$${texFraction(Math.abs(a - c), b * d)}$`, `$${texFraction(a * c, b * d)}$`]\n        tabicone = [1, 0, 0, 0];\n        [tabrep, tabicone] = elimineDoublons(tabrep, tabicone)\n        /*********************************************************************************/\n        if ((a / b) > (c / d)) {\n          texte = `$${texFraction(a, b)}-${texFraction(c, d)}=$`\n          this.qcm[1].push([`$${texFraction(a, b)}-${texFraction(c, d)}=$\\\\\\\\ \\n R√©ponses possibles`,\n            tabrep,\n            tabicone])\n        } else {\n          texte = texte = `$${texFraction(c, d)}-${texFraction(a, b)}=$`\n          /** ****************** AMC question/questionmult ******************************/\n          this.qcm[1].push([`$${texFraction(c, d)}-${texFraction(a, b)}=$\\\\\\\\ \\n R√©ponses possibles`,\n            tabrep,\n            tabicone])\n          /*****************************************************************************/\n        }\n        if ((a / b) > (c / d)) {\n          texteCorr = `$${texFraction(a, b)}-${texFraction(c, d)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}-${texFraction(c, d)}=${texFraction(a * k, b * k)}-${texFraction(c, d)}=`\n          }\n          texteCorr += `${texFraction(a * k + '-' + c, d)}=${texFraction(a * k - c, d)}$`\n          shuffle2tableaux(tabrep, tabicone)\n          if (this.modeQcm && !mathalea.sortieAMC) {\n            this.tableauSolutionsDuQcm[i] = tabicone\n            texte += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n            // texteCorr += '<br><br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n          }\n        } else {\n          texteCorr = `$${texFraction(c, d)}-${texFraction(a, b)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(c, d)}-${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}=${texFraction(c, d)}-${texFraction(a * k, b * k)}=${texFraction(c + '-' + a * k, d)}=`\n          }\n          texteCorr += `${texFraction(c - a * k, d)}$`\n          shuffle2tableaux(tabrep, tabicone)\n          if (this.modeQcm && !mathalea.sortieAMC) {\n            this.tableauSolutionsDuQcm[i] = tabicone\n            texte += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n            // texteCorr += '<br><br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n          }\n        }\n        // Est-ce que le r√©sultat est simplifiable ?\n        const s = pgcd(a * k - c, d)\n        if (!this.modeQcm) {\n          if (abs(a * k - c) % d === 0) { // si la fraction peut-√™tre un nombre entier\n            texteCorr += `$=${calcul((abs(a * k - c)) / d)}$`\n          } else if (s !== 1) {\n            texteCorr += `$=${texFraction(calcul((abs(a * k - c)) / s) + miseEnEvidence('\\\\times ' + s), calcul(d / s) + miseEnEvidence('\\\\times ' + s))}=${texFractionReduite(calcul((abs(a * k - c)) / s), calcul(d / s))}$`\n          }\n        }\n      }\n\n      texte = texte.replaceAll('$$', ' ')\n      texteCorr = texteCorr.replaceAll('$$', ' ')\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n  gestionQcmInteractif(this)\n  this.besoinFormulaireNumerique = ['Valeur maximale du coefficient multiplicateur', 99999]\n  this.besoinFormulaire2Numerique = ['Types de calculs ', 3, '1 : Additions\\n2 : Soustractions\\n3 : Additions et soustractions']\n}\n","import ExerciceAdditionnerOuSoustraireDesFractions5e from '../5e/5N20.js'\n\nexport const amcReady = true\nexport const amcType = 1 // type de question AMC\n\nexport const titre = 'Additionner ou soustraire des fractions de m√™me d√©nominateur'\n\nexport default function ExerciceAdditionnerFractions6e () {\n  ExerciceAdditionnerOuSoustraireDesFractions5e.call(this)\n  this.sup = 1\n  this.sup2 = 3\n  this.level = 6\n  this.titre = titre\n  this.besoinFormulaireNumerique2 = false\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur R√©mi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront cr√©√©s\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronom√©tr√©\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vid√©o\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'√©nonc√© ce qui peut √™tre pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case √† cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par d√©faut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages sp√©cifiques √† ajouter dans le pr√©ambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les r√©ponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ mathalea sortieHtml */\n\n/**\n * Lorsque l'√©v√®nement 'exercicesAffiches' est lanc√© par mathalea.js\n * on v√©rifie la pr√©sence du bouton de validation d'id btnQcmEx{i} cr√©√© par listeQuestionsToContenu\n * et on y ajoute un listenner pour v√©rifier les r√©ponses coch√©es\n * @param {object} exercice\n */\nexport function gestionQcmInteractif (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          const nbBonnesReponsesAttendues = exercice.tableauSolutionsDuQcm[i].reduce((a, b) => a + b, 0)\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.tableauSolutionsDuQcm[i].forEach((solution, rep) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${rep}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${rep}`)\n            if (solution === 1) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n            }\n          })\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '‚úîÔ∏é'\n            spanReponseLigne.style.color = 'green'\n          } else {\n            spanReponseLigne.innerHTML = '‚úñÔ∏é'\n            spanReponseLigne.style.color = 'red'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonn√© comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte √† ajouter pour la question trait√©e\n */\nexport function propositionsQcm (numeroExercice, i, tabrep, tabicone) {\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (sortieHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  if (!mathalea.sortieAMC) {\n    if (sortieHtml) {\n      texte += `<br>  <form id=\"formEx${numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < tabrep.length; rep++) {\n      if (sortieHtml) {\n        texte += `<div class=\"ui checkbox ex${numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${numeroExercice}Q${i}R${rep}\">${tabrep[rep] + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n      if (tabicone[rep] === 1) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[rep]}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n    }\n    if (sortieHtml) {\n      texte += `<span id=\"resultatCheckEx${numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un objet {reponse=[a,b,c,d,e],statuts=[1,0,0,0,0]}\n * √©limine les doublons de r√©ponses et les statuts associ√©s avant de retourner l'objet √©pur√©.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (reponses, statuts) { // fonction qui va √©liminer les doublons si il y en a\n  const reponsesEpurees = reponses.slice()\n  const statutsEpures = statuts.slice()\n  for (let i = 0; i < reponsesEpurees.length - 1; i++) {\n    for (let j = i + 1; j < reponsesEpurees.length;) {\n      if (reponsesEpurees[i] === reponsesEpurees[j]) {\n        console.log('doublon trouv√©', reponsesEpurees[i], reponsesEpurees[j]) // les r√©ponses i et j sont les m√™mes\n\n        if (statutsEpures[i] === 1) { // si la r√©ponse i est bonne, on vire la j\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n        } else if (statutsEpures[j] === 1) { // si la r√©ponse i est mauvaise et la r√©ponse j bonne,\n          // comme ce sont les m√™mes r√©ponses, on vire la j mais on met la i bonne\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n          statutsEpures[i] = 1\n        } else { // Les deux r√©ponses sont mauvaises\n          reponsesEpurees.splice(j, 1)\n          statutsEpures.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return [reponsesEpurees, statutsEpures]\n}\n"],"sourceRoot":""}