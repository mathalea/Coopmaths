{"version":3,"file":"js/13844.6a321cae532a8b9741e1.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N33-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombre, texPrix, texFraction } from '../../modules/outils.js'\n\nexport const titre = 'Problèmes avec des calculs de pourcentages'\n\n/**\n * Calculer le montant d'une réduction donnée en pourcentage d'un prix initial\n * @author Jean-Claude Lhote\n * Référence 6N33-3\n */\nexport default function AppliquerUnPourcentage () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 1\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2]\n    const choix = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    const listePourcentages = [10, 20, 30, 40, 50]\n    const article = [['Un pull', 20, 40], ['Une chemise', 15, 35], ['Un pantalon', 30, 60], ['Un T-shirt', 15, 25], ['Une jupe', 20, 40]]\n    const legume = [['Une aubergine', 100, 200], ['Un melon', 200, 300], ['Une tomate', 50, 100], ['Une betterave', 75, 100], ['Une carotte', 30, 50]]\n    const listeIndex = [0, 1, 2, 3, 4]\n    const prix = []; const pourcent = []; const masse = []\n    const index = combinaisonListes(listeIndex, this.nbQuestions)\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      pourcent[i] = choice(listePourcentages)\n      switch (choix[i]) {\n        case 1:\n          prix[i] = randint(article[index[i]][1], article[index[i]][2])\n          texte = `${article[index[i]][0]} coûtant $${prix[i]}$€ bénéficie d'une réduction de $${pourcent[i]} \\\\%$.<br>`\n          texte += 'Quel est le montant en euro de cette réduction ?'\n          texteCorr = `On doit calculer $${pourcent[i]}\\\\%$ de $${prix[i]}$€ :<br>`\n          texteCorr += `$${pourcent[i]}\\\\%\\\\text{ de }${prix[i]}=${texFraction(pourcent[i], 100)}\\\\times${prix[i]}=(${pourcent[i]}\\\\times${prix[i]})\\\\div100=${texNombre(pourcent[i] * prix[i])}\\\\div100=${texNombre(calcul((pourcent[i] * prix[i]) / 100))}$<br>`\n          texteCorr += `Le montant de la réduction est de ${texPrix(calcul(prix[i] * pourcent[i] / 100))}€`\n          break\n        case 2:\n          masse[i] = randint(legume[index[i]][1], article[index[i]][2])\n          texte = `${legume[index[i]][0]} pesant $${masse[i]}$ grammes a eu une croissance de $${pourcent[i]} \\\\%$.<br>`\n          texte += 'Quelle est la masse supplémentaire en grammes correspondant à cette croissance ?'\n          texteCorr = `On doit calculer $${pourcent[i]}\\\\%$ de $${masse[i]}$ grammes :<br>`\n          texteCorr += `$${pourcent[i]}\\\\%\\\\text{ de }${masse[i]}=${texFraction(pourcent[i], 100)}\\\\times${masse[i]}=(${pourcent[i]}\\\\times${masse[i]})\\\\div100=${texNombre(pourcent[i] * masse[i])}\\\\div100=${texNombre(calcul((pourcent[i] * masse[i]) / 100))}$<br>`\n          texteCorr += `La masse a augmenté de $${texNombre(calcul(masse[i] * pourcent[i] / 100))}$ g.`\n\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","AppliquerUnPourcentage","Exercice","this","nbQuestions","consigne","spacing","spacingCorr","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","choix","combinaisonListes","listePourcentages","article","legume","prix","pourcent","masse","index","texte","texteCorr","i","cpt","choice","randint","texFraction","texNombre","calcul","texPrix","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}