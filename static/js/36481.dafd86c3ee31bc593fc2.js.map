{"version":3,"file":"js/36481.dafd86c3ee31bc593fc2.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N23-3.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/c3/c3N23.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, troncature, calcul, choisitLettresDifferentes, texNombre, texFraction } from '../../modules/outils.js'\nimport { point, segment, droiteGraduee2, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Lire une abscisse décimale grâce à des zooms successifs'\n\n/**\n * 6N23-3\n */\nexport default function LireUneAbscisseAvecZoom () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.niveau = 'sixième'\n  this.sup = 3\n  this.consigne = ''\n  if (context.isHtml) {\n    this.spacing = 2\n    this.spacingCorr = 3\n  } else {\n    this.spacing = 1\n    this.spacingCorr = 1\n  }\n  this.vspace = -1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let d1; let d2; let d3; let d3Corr; let d1Corr; let d2Corr; let texte = ''; let texteCorr = ''; let extremite; let extreme; const noms = choisitLettresDifferentes(5, 'QFN')\n    let x1 = 0; let x2 = 0; let x3 = 0; const objets = []; let fenetre; let thickOff = 0; const objetsCorr = []; let xmin; let xmax; let origine; let pA1; let pA2; let pB1; let pB2; let sA; let sB; let x21; let x31; let pC1; let pC2; let pD1; let pD2; let sC; let sD\n    if (parseInt(this.sup) === 1) {\n      if (this.niveau === 'CM') {\n        xmin = 0\n        thickOff = 0\n        origine = 0\n        extreme = 9\n        xmax = 9\n      } else {\n        xmin = randint(5, 10) - 0.2\n        origine = Math.round(xmin + 0.2)\n        extreme = calcul(origine + 9)\n        thickOff = 0.1\n        xmax = origine + 9.2\n      }\n      x1 = calcul(xmin + 0.2 + randint(1, 5) + randint(2, 8) / 10)\n      //   xmin=calcul(Math.floor(x1)-5)\n      //    xmax=calcul(Math.floor(x1)+6)\n      if (xmin === 0) extremite = '|->'\n      else extremite = '->'\n\n      d1 = droiteGraduee2({\n        x: 0,\n        y: 3,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax + 0.2,\n        thickSec: true,\n        thickTer: false,\n        Unite: 3,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        labelsPrincipaux: false,\n        labelListe: [[origine, `${texNombre(origine)}`], [extreme, `${texNombre(extreme)}`]],\n        pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d2 = droiteGraduee2({\n        x: Math.floor(x1) - xmin + 1.5,\n        y: 0,\n        Min: Math.floor(x1),\n        axePosition: 'H',\n        Max: Math.floor(x1 + 1),\n        thickSec: true,\n        thickTer: false,\n        Unite: 20,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        labelsPrincipaux: false,\n        pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d1Corr = droiteGraduee2({\n        x: 0,\n        y: 3,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax + 0.2,\n        thickSec: true,\n        thickTer: false,\n        Unite: 3,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        labelsPrincipaux: true,\n        labelListe: [[origine, `${texNombre(origine)}`], [extreme, `${texNombre(extreme)}`]],\n        pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d2Corr = droiteGraduee2({\n        x: Math.floor(x1) - xmin + 1.5,\n        y: 0,\n        Min: Math.floor(x1),\n        axePosition: 'H',\n        Max: Math.floor(x1 + 1),\n        thickSec: true,\n        thickTer: false,\n        Unite: 20,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        labelsPrincipaux: false,\n        labelsSecondaires: true,\n        labelListe: [[Math.floor(x1), `${texNombre(Math.floor(x1))}`], [x1, `${texNombre(x1)}`], [Math.ceil(x1), `${texNombre(Math.ceil(x1))}`]],\n        pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n\n      pA1 = point((Math.floor(x1) - xmin) * 3, 3)\n      pA2 = point(Math.floor(x1) - xmin + 1.5, 0)\n      pB1 = point((Math.floor(x1) + 1 - xmin) * 3, 3)\n      pB2 = point(Math.floor(x1) - xmin + 21.5, 0)\n      sA = segment(pA1, pA2)\n      sB = segment(pB1, pB2)\n      sA.pointilles = true\n      sB.pointilles = true\n      objets.push(d1, d2, sA, sB)\n      objetsCorr.push(d1Corr, d2Corr, sA, sB)\n      fenetre = { xmin: -1.5, xmax: 35, ymin: -1, ymax: 4.5, pixelsParCm: 25, scale: 0.5 }\n      texteCorr = `L'abscisse de ${noms[1]} est : $${texNombre(x1)}=${texNombre(Math.floor(x1))} + ${texFraction(calcul(10 * (x1 - Math.floor(x1))), 10)}=${texFraction(calcul(x1 * 10), 10)}$.<br>`\n    } else if (parseInt(this.sup) === 2) {\n      if (this.niveau === 'CM') {\n        xmin = 0\n        thickOff = 0\n      } else {\n        xmin = randint(1, 15) - 0.02\n        thickOff = 0.01\n      }\n\n      xmax = xmin + 1.05\n      x1 = calcul(xmin + 0.02 + randint(2, 8) / 10 + randint(2, 8) / 100)\n      x2 = calcul(Math.floor(x1 * 10) / 10)\n      x3 = calcul(x2 + 0.1)\n      //      xmin=calcul(x2-0.8)\n      //      xmax=calcul(xmin+1.7)\n      if (xmin === 0) extremite = '|->'\n      else extremite = '->'\n      d1 = droiteGraduee2({\n        x: 0,\n        y: 3,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: true,\n        Unite: 30,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 8,\n        thickDistance: 1,\n        thickSecDist: 0.1,\n        thickTerDist: 0.01,\n        labelsPrincipaux: false,\n        labelListe: [[Math.floor(x1), `${Math.floor(x1)}`], [Math.ceil(x1), `${Math.ceil(x1)}`]],\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d2 = droiteGraduee2({\n        x: (x2 - xmin) + 6,\n        y: 0,\n        Min: x2,\n        axePosition: 'H',\n        Max: x2 + 0.1,\n        thickSec: true,\n        thickTer: false,\n        Unite: 200,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        thickDistance: 0.1,\n        thickSecDist: 0.01,\n        thickTerDist: 0.001,\n        labelsPrincipaux: false,\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x2 + 0.1, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d1Corr = droiteGraduee2({\n        x: 0,\n        y: 3,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: true,\n        Unite: 30,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 8,\n        thickDistance: 1,\n        thickSecDist: 0.1,\n        thickTerDist: 0.01,\n        labelsSecondaires: true,\n        labelListe: [[Math.floor(x1), `${Math.floor(x1)}`], [Math.ceil(x1), `${Math.ceil(x1)}`]],\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d2Corr = droiteGraduee2({\n        x: (x2 - xmin) + 6,\n        y: 0,\n        Min: x2,\n        axePosition: 'H',\n        Max: x2 + 0.1,\n        thickSec: true,\n        thickTer: false,\n        Unite: 200,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        thickDistance: 0.1,\n        thickSecDist: 0.01,\n        thickTerDist: 0.001,\n        labelsPrincipaux: false,\n        labelsSecondaires: true,\n        labelListe: [[x2, `${texNombre(x2)}`], [x1, `${texNombre(x1)}`], [x3, `${texNombre(x3)}`]],\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x2 + 0.1, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n\n      pA1 = point((Math.floor(x1 * 10) / 10 - xmin) * 30, 3)\n      pA2 = point(x2 - xmin + 6, 0)\n      pB1 = point((Math.floor(x1 * 10) / 10 + 0.1 - xmin) * 30, 3)\n      pB2 = point(x3 - xmin + 26, 0)\n      sA = segment(pA1, pA2)\n      sB = segment(pB1, pB2)\n      sA.pointilles = true\n      sB.pointilles = true\n      fenetre = { xmin: -1.5, xmax: 35, ymin: -1.5, ymax: 4.5, pixelsParCm: 25, scale: 0.5 }\n      objets.push(d1, d2, sA, sB)\n      objetsCorr.push(d1Corr, d2Corr, sA, sB)\n      const partent = Math.floor(x1); const pardec = calcul(x1 - partent)\n      texteCorr = `L'abscisse de ${noms[1]} est : $${texNombre(x1)}=${texNombre(partent)} + ${texFraction(calcul(pardec * 100), 100)}=${texFraction(calcul(x1 * 100), 100)}$.<br>`\n    } else if (parseInt(this.sup) === 3) {\n      if (this.niveau === 'CM') {\n        xmin = 0\n        xmax = 1\n        thickOff = 0\n        x1 = calcul(xmin + randint(2, 8) / 10 + randint(2, 8) / 100 + randint(2, 8) * 0.001)\n        x2 = troncature(x1, 1)\n        x21 = troncature(x1, 2)\n        x3 = calcul(x2 + 0.1)\n        x31 = calcul(x21 + 0.01)\n      } else {\n        xmin = randint(1, 15)\n        xmax = xmin + 1\n        x1 = calcul(xmin + randint(2, 8) / 10 + randint(2, 8) / 100 + randint(2, 8) * 0.001)\n        x2 = troncature(x1, 1)\n        x21 = troncature(x1, 2)\n        x3 = calcul(x2 + 0.1)\n        x31 = calcul(x21 + 0.01)\n        xmin = Math.floor(x2)\n        xmax = xmin + 1\n        thickOff = 0.001\n      }\n      if (xmin === 0) extremite = '|->'\n      else extremite = '->'\n      d1 = droiteGraduee2({\n        x: 0,\n        y: 6,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: true,\n        Unite: 30,\n        thickDistance: 1,\n        thickSecDist: 0.1,\n        thickTerDist: 0.01,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: true,\n        labelListe: [[xmin, `${texNombre(xmin)}`], [xmax, `${texNombre(xmax)}`]],\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 3,\n        axeStyle: extremite\n      })\n      d2 = droiteGraduee2({\n        x: 6.5,\n        y: 3,\n        Min: x2,\n        axePosition: 'H',\n        Max: x3,\n        thickSec: true,\n        thickTer: true,\n        Unite: 200,\n        thickSecDist: 0.01,\n        thickTerDist: 0.001,\n        thickDistance: 0.1,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: false,\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d3 = droiteGraduee2({\n        x: 6.5,\n        y: 0,\n        Min: x21,\n        axePosition: 'H',\n        Max: x31,\n        thickSec: true,\n        thickTer: false,\n        Unite: 2000,\n        thickSecDist: 0.001,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: false,\n        pointListe: [[x1, `${noms[1]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d1Corr = droiteGraduee2({\n        x: 0,\n        y: 6,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: true,\n        Unite: 30,\n        thickDistance: 1,\n        thickSecDist: 0.1,\n        thickTerDist: 0.01,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: true,\n        labelsSecondaires: true,\n        labelListe: [[xmin, `${texNombre(xmin)}`], [xmax, `${texNombre(xmax)}`]],\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 3,\n        axeStyle: extremite\n      })\n      d2Corr = droiteGraduee2({\n        x: 6.5,\n        y: 3,\n        Min: x2,\n        axePosition: 'H',\n        Max: x3,\n        thickSec: true,\n        thickTer: true,\n        Unite: 200,\n        thickSecDist: 0.01,\n        thickTerDist: 0.001,\n        thickDistance: 0.1,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: false,\n        labelsSecondaires: true,\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n        labelListe: [[x2, `${texNombre(x2)}`], [x3, `${texNombre(x3)}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d3Corr = droiteGraduee2({\n        x: 6.5,\n        y: 0,\n        Min: x21,\n        axePosition: 'H',\n        Max: x31,\n        thickSec: true,\n        thickTer: false,\n        Unite: 2000,\n        thickSecDist: 0.001,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: false,\n        labelsSecondaires: true,\n        pointListe: [[x1, `${noms[1]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n        labelListe: [[x21, `${texNombre(x21)}`], [x31, `${texNombre(x31)}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n\n      pA1 = point((x2 - xmin) * 30, 6)\n      pA2 = point(6.5, 3)\n      pB1 = point((x3 - xmin) * 30, 6)\n      pB2 = point(26.5, 3)\n      sA = segment(pA1, pA2)\n      sB = segment(pB1, pB2)\n      sA.pointilles = true\n      sB.pointilles = true\n      pC1 = point(6.5 + (x21 - x2) * 200, 3)\n      pC2 = point(6.5, 0)\n      pD1 = point(6.5 + (x31 - x2) * 200, 3)\n      pD2 = point(26.5, 0)\n      sC = segment(pC1, pC2)\n      sD = segment(pD1, pD2)\n      sC.pointilles = true\n      sD.pointilles = true\n      fenetre = { xmin: -1.5, xmax: 35, ymin: -1.5, ymax: 7.5, pixelsParCm: 25, scale: 0.5 }\n      objets.push(d1, d2, d3, sA, sB, sC, sD)\n      objetsCorr.push(d1Corr, d2Corr, d3Corr, sA, sB, sC, sD)\n      const partent = Math.floor(x1); const pardec = calcul(x1 - partent)\n      texteCorr = `L'abscisse de ${noms[1]} est : $${texNombre(x1)}=${texNombre(partent)} + ${texFraction(calcul(pardec * 1000), 1000)}=${texFraction(calcul(x1 * 1000), 1000)}$.<br>`\n    }\n    texte = `Donner l'abscisse de ${noms[1]} sous trois formes : en écriture décimale, comme somme d’un nombre entier et d’une fraction décimale et avec une fraction décimale.<br>`\n    texte += mathalea2d(fenetre, objets)\n    texteCorr += mathalea2d(fenetre, objetsCorr)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Au dixième\\n2 : Au centième\\n3 : Au millième']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import LireUneAbscisseAvecZoom from '../6e/6N23-3.js'\nexport const titre = 'Lire abscisse décimale avec zoom'\n\n/**\n * Lire un nombre décimal jusqu'au millième graĉe à un système de zoom successifs\n * L'abscisse est à donner sous trois formes.\n * ref 6N23-3\n * Publié le 13/11/2020\n * @author Jean-Claude Lhote\n */\nexport default function lireUneAbscisseAvecZoomCM () {\n  LireUneAbscisseAvecZoom.call(this)\n  this.niveau = 'CM'\n  this.sup = 1\n}\n"],"names":["titre","LireUneAbscisseAvecZoom","Exercice","this","niveau","sup","consigne","context","spacing","spacingCorr","vspace","nbCols","nbColsCorr","nbQuestions","nbQuestionsModifiable","nouvelleVersion","d1","d2","d3","d3Corr","d1Corr","d2Corr","listeQuestions","listeCorrections","extremite","extreme","texte","texteCorr","noms","choisitLettresDifferentes","x1","x2","x3","objets","fenetre","thickOff","objetsCorr","xmin","xmax","origine","pA1","pA2","pB1","pB2","sA","sB","x21","x31","pC1","pC2","pD1","pD2","sC","sD","parseInt","randint","Math","round","calcul","droiteGraduee2","x","y","Min","axePosition","Max","thickSec","thickTer","Unite","thickOffset","thickCouleur","axeCouleur","axeHauteur","labelsPrincipaux","labelListe","texNombre","pointListe","floor","pointTaille","pointOpacite","pointCouleur","pointStyle","pointEpaisseur","axeStyle","labelsSecondaires","ceil","point","segment","pointilles","push","ymin","ymax","pixelsParCm","scale","texFraction","thickDistance","thickSecDist","thickTerDist","partent","pardec","troncature","mathalea2d","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","lireUneAbscisseAvecZoomCM"],"sourceRoot":""}