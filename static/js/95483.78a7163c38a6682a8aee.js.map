{"version":3,"file":"js/95483.78a7163c38a6682a8aee.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/Profs/P009.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, calcul, arrondiVirgule, nombreAvecEspace } from '../../modules/outils.js'\nimport { fraction } from '../../modules/fractions.js'\nimport { repere2, traceBarre, mathalea2d } from '../../modules/2d.js'\n\nexport const titre = 'Simulation d’expériences aléatoires'\n\n/**\n * Reconnaître une fonction affine\n* @author Erwan Duplessy\n* 6C30-1\n* D'après le document \"Attendus en fin de 3eme\"\n* On donne les fréquences d’apparition de chaque face d’un dé pour 10000 lancers.\n* L’élève interprète les résultats en les comparant aux probabilités théoriques.\n*/\n\nexport default function SimulateurAleatoire () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 1 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = true\n  this.sup = 1 // situation 1=dés\n  this.sup2 = 10000 // nbLancers\n  this.sup3 = false // true = équiprobable, false = jeu truqué\n\n  this.consigne = '<center><a title=\"Diacritica, CC BY-SA 3.0 &lt;https://creativecommons.org/licenses/by-sa/3.0&gt;, via Wikimedia Commons\" href=\"https://commons.wikimedia.org/wiki/File:Dice_(typical_role_playing_game_dice).jpg\"><img width=\"128\" alt=\"Dice (typical role playing game dice)\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Dice_%28typical_role_playing_game_dice%29.jpg/128px-Dice_%28typical_role_playing_game_dice%29.jpg\"></a></center>'\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function () {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n\n    let texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n    let texteCorr = ''\n    let nbFaces = 2 * randint(1, 5) + 2 // nombre de faces du dé : 4, 6, 8, 10 ou 12\n    const nbLancers = parseInt(this.sup2) // nombre de lancers\n    const tabEff = []// tableau d'effectifs temporaires - une dimension [eff]\n    let S = 0 // effectif total\n    const tabRes = [] // tableau des fréqeunces observées - deux dimensions [val, freq]\n    this.listeCorrections = []\n    this.listeQuestions = []\n    const tabcoul = ['rouges', 'vertes', 'bleues', 'noires']\n    const tabNbBoules = [randint(2, 5), randint(2, 5), randint(2, 5), randint(2, 5)]\n    let nbBoules = 0; let f; let choix\n    let face\n    for (let i = 0; i < 4; i++) {\n      nbBoules += tabNbBoules[i]\n    }\n\n    switch (parseInt(this.sup)) { //\n      case 1: // Tirages de dés\n        f = fraction(1, nbFaces)\n        texteCorr = `Chaque face a la même probabilité de sortir : $${f.texFraction}\\\\approx ${arrondiVirgule(f.pourcentage)}\\\\%$.<br>`\n\n        texte += `On lance un dé à ${nbFaces} faces ${nombreAvecEspace(nbLancers)} fois.<br>On étudie les fréquences d'apparition de chaque face.<br>On obtient les résultats suivants : <br>`\n        if (this.sup3) {\n          for (let i = 0; i < nbFaces; i++) {\n            tabEff.push(0)\n          }\n          for (let i = 0; i < nbLancers; i++) {\n            tabEff[randint(1, nbFaces) - 1]++\n          }\n          for (let i = 0; i < nbFaces; i++) {\n            tabRes[i] = [i, calcul(tabEff[i] / nbLancers)]\n          }\n        } else {\n          face = randint(1, nbFaces) // on choisit une face au hasard. Elle aura une fréquence déséquilibrée.\n          for (let i = 0; i < nbFaces; i++) {\n            tabEff.push(0)\n          }\n          for (let i = 0; i < nbFaces; i++) {\n            tabEff.push(0)\n          }\n          for (let i = 0; i < nbLancers; i++) {\n            tabEff[randint(1, nbFaces) - 1]++\n          }\n          S = tabEff[face - 1] * 3 / 4\n          tabEff[randint(1, nbFaces, face) - 1] += S\n          tabEff[face - 1] -= S\n          for (let i = 0; i < nbFaces; i++) {\n            tabRes[i] = [i, calcul(tabEff[i] / nbLancers)]\n          }\n          texteCorr += 'Ici, l\\'expérience montre qu\\'il y a quelque chose qui semble fausser cette équiprobabilité comme un dé truqué.<br>'\n          texteCorr += `En effet, la fréquence de la face $${face}$ est largement inférieure à $${arrondiVirgule(f.pourcentage)}\\\\%$.`\n        }\n\n        break\n\n      case 2: // Tirage dans une urne\n        face = randint(1, 4)\n        texte += 'Des boules de différentes couleurs sont placées dans une urne.<br>'\n        texte += `Il y a $${tabNbBoules[0]}$ ${tabcoul[0]}, $${tabNbBoules[1]}$ ${tabcoul[1]}, $${tabNbBoules[2]}$ ${tabcoul[2]} et $${tabNbBoules[3]}$ ${tabcoul[3]}.<br>`\n        texte += `On effectue $${nbLancers}$ tirages avec remise.<br>`\n        texte += 'On étudie les fréquences d\\'apparition de chaque couleur.<br>On obtient les résultats suivants : <br>'\n        f = fraction(tabNbBoules[face - 1], nbBoules)\n        if (this.sup3) {\n          nbFaces = 4\n          for (let i = 0; i < nbFaces; i++) {\n            tabEff.push(0)\n          }\n          for (let i = 0; i < nbLancers; i++) {\n            choix = randint(1, nbBoules)\n            if (choix <= tabNbBoules[0]) {\n              tabEff[0]++\n            } else if (choix <= tabNbBoules[0] + tabNbBoules[1]) {\n              tabEff[1]++\n            } else if (choix <= tabNbBoules[0] + tabNbBoules[1] + tabNbBoules[2]) {\n              tabEff[2]++\n            } else {\n              tabEff[3]++\n            }\n          }\n          for (let i = 0; i < nbFaces; i++) {\n            tabRes[i] = [i, calcul(tabEff[i] / nbLancers)]\n          }\n        } else {\n          nbFaces = 4\n          for (let i = 0; i < nbFaces; i++) {\n            tabEff.push(0)\n          }\n          for (let i = 0; i < nbLancers; i++) {\n            choix = randint(0, nbBoules - 1)\n            if (choix < tabNbBoules[0]) {\n              tabEff[0]++\n            } else if (choix < tabNbBoules[0] + tabNbBoules[1]) {\n              tabEff[1]++\n            } else if (choix < tabNbBoules[0] + tabNbBoules[1] + tabNbBoules[2]) {\n              tabEff[2]++\n            } else {\n              tabEff[3]++\n            }\n          }\n          S = tabEff[face - 1] * 3 / 4\n          tabEff[randint(1, 4, face) - 1] += S\n          tabEff[face - 1] -= S\n          for (let i = 0; i < nbFaces; i++) {\n            tabRes[i] = [i, calcul(tabEff[i] / nbLancers)]\n          }\n          texteCorr += 'Ici, l\\'expérience montre qu\\'il y a quelque chose qui semble fausser cette équiprobabilité comme des boules discernables au toucher.<br>'\n          texteCorr += `En effet, la fréquence des boules ${tabcoul[face - 1]} est largement inférieure à $${f.texFraction}\\\\approx ${arrondiVirgule(f.pourcentage)}\\\\%$.`\n        }\n        break\n    }\n    switch (parseInt(this.sup)) {\n      case 1:\n        texte += '$\\\\begin{array}{|l|' + 'c|'.repeat(nbFaces) + '}\\n'\n        texte += '\\\\hline\\n'\n        texte += '\\\\text{Numéro de la face}'\n        for (let i = 0; i < nbFaces; i++) {\n          texte += ` & \\\\textbf{\\\\text{${i + 1}}}`\n        }\n        texte += '\\\\\\\\\\\\hline\\n'\n        texte += '\\\\text{Fréquence d\\'apparition}'\n        for (let i = 0; i < nbFaces; i++) {\n          texte += ` & \\\\text{${arrondiVirgule(100 * tabRes[i][1], 1)}} \\\\% `\n        }\n        texte += '\\\\\\\\\\\\hline\\n'\n        texte += '\\\\end{array}\\n$'\n        texte += '<br>'\n        if (this.correctionDetaillee) {\n          const coef = 10\n          const r = repere2({\n            grilleX: false,\n            grilleY: 'pointilles',\n            xThickListe: [],\n            xLabelListe: [],\n            yUnite: 1 / coef,\n            yThickDistance: 1 * coef,\n            yMax: 40,\n            xMin: 0,\n            xMax: 10,\n            yMin: 0,\n            axeXStyle: '',\n            yLegende: 'fréquences en %'\n          })\n\n          const lstElementGraph = []\n          for (let i = 0; i < nbFaces; i++) {\n            lstElementGraph.push(traceBarre(((r.xMax - r.xMin) / nbFaces) * (i + 0.5), tabRes[i][1] * 10, i + 1), { unite: 1 / coef })\n          }\n          texte += mathalea2d({ xmin: -1, xmax: 11, ymin: -4, ymax: 5.5, pixelsParCm: 30, scale: 1 }, r, lstElementGraph)\n        }\n        break\n      case 2:\n        texte += '$\\\\begin{array}{|l|' + 'c|'.repeat(nbFaces) + '}\\n'\n        texte += '\\\\hline\\n'\n        texte += '\\\\text{Couleur de la boule}'\n        for (let i = 0; i < nbFaces; i++) {\n          texte += ` & \\\\textbf{\\\\text{${tabcoul[i].substring(0, tabcoul[i].length - 1)}}}`\n        }\n        texte += '\\\\\\\\\\\\hline\\n'\n        texte += '\\\\text{Fréquence d\\'apparition}'\n        for (let i = 0; i < nbFaces; i++) {\n          texte += ` & \\\\text{${arrondiVirgule(100 * tabRes[i][1], 1)}} \\\\%`\n        }\n        texte += '\\\\\\\\\\\\hline\\n'\n        texte += '\\\\end{array}\\n$'\n        texte += '<br>'\n        if (this.correctionDetaillee) {\n          const coef = 10\n          const r = repere2({\n            grilleX: false,\n            grilleY: 'pointilles',\n            xThickListe: [],\n            xLabelListe: [],\n            yUnite: 1 / coef,\n            yThickDistance: 1 * coef,\n            yMax: 55,\n            xMin: 0,\n            xMax: 10,\n            yMin: 0,\n            axeXStyle: '',\n            yLegende: 'fréquences en %'\n          })\n\n          const lstElementGraph = []\n          for (let i = 0; i < nbFaces; i++) {\n            lstElementGraph.push(traceBarre(((r.xMax - r.xMin) / nbFaces) * (i + 0.5), tabRes[i][1] * 10, tabcoul[i]), { unite: 1 / coef })\n          }\n          texte += mathalea2d({ xmin: -1, xmax: 12, ymin: -4, ymax: 7, pixelsParCm: 30, scale: 1 }, r, lstElementGraph)\n        }\n        break\n    }\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n\n  this.besoinFormulaireNumerique = ['Type d\\'expérience', 2, '1 : Tirage de dés\\n 2 : Tirage dans une urne']\n  this.besoinFormulaire2Texte = ['Nombre de tirages', `Taper un nombre entier : ${10000}`]\n  this.besoinFormulaire3CaseACocher = ['Équiprobabilité', true]\n} // Fin de l'exercice.\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","SimulateurAleatoire","pas_de_version_HMTL","sup","sup2","sup3","texte","texteCorr","nbFaces","randint","nbLancers","parseInt","tabEff","S","tabRes","tabcoul","tabNbBoules","f","choix","face","nbBoules","fraction","texFraction","arrondiVirgule","pourcentage","nombreAvecEspace","calcul","repeat","coef","r","repere2","grilleX","grilleY","xThickListe","xLabelListe","yUnite","yThickDistance","yMax","xMin","xMax","yMin","axeXStyle","yLegende","lstElementGraph","traceBarre","unite","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","substring","length","listeQuestionsToContenu"],"sourceRoot":""}