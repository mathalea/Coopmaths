{"version":3,"file":"js/46198.7d35d44ea74fccb851f0.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N23-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, range1, combinaisonListesSansChangerOrdre, texNombrec, texFraction } from '../../modules/outils.js'\nexport const titre = 'Donner l’écriture décimale d’un nombre à partir de différents textes'\n\n/**\n * Écriture décimale à partir de différentes manière de l'énoncer\n *\n * * 3 unités, 5 dixièmes et 8 centièmes\n * * 3 unités et 5 centièmes\n * * 5 dixièmes\n * * 128/10\n * * 8+5/100+7/100\n * @author Rémi Angot\n * Référence 6N23-4\n */\nexport default function NombreDecimalOraliseDeDifferentesManieres () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = \"Donner l'écriture décimale de chaque nombre.\"\n  this.nbQuestions = 5\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    const typesDeQuestionsDisponibles = range1(5)\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (\n      let i = 0, texte, texteCorr, cpt = 0, a, b, c, n, choix; i < this.nbQuestions && cpt < 50;) {\n      a = randint(2, 9)\n      b = randint(2, 9, a)\n      c = randint(2, 9, [a, b])\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // 3 unités, 5 dixièmes et 8 centièmes\n          texte = `${a} unités, ${b} dixièmes et ${c} centièmes`\n          texteCorr = `$${a}+${texFraction(b, 10)}+${texFraction(c, 100)}=${texNombrec(a + b / 10 + c / 100)}$`\n          break\n        case 2: // 3 unités et 5 centièmes\n          texte = `${a} unités et ${c} centièmes`\n          texteCorr = `$${a}+${texFraction(c, 100)}=${texNombrec(a + c / 100)}$`\n          break\n        case 3: // 5 dixièmes / centièmes ou millièmes\n          choix = randint(1, 3)\n          if (choix === 1) {\n            texte = `${a} dixièmes`\n            texteCorr = `$${texFraction(a, 10)}=${texNombrec(a / 10)}$`\n          }\n          if (choix === 2) {\n            texte = `${a} centièmes`\n            texteCorr = `$${texFraction(a, 100)}=${texNombrec(a / 100)}$`\n          }\n          if (choix === 3) {\n            texte = `${a} millièmes`\n            texteCorr = `$${texFraction(a, 1000)}=${texNombrec(a / 1000)}$`\n          }\n          break\n        case 4: // 128/10\n          n = a * 100 + b * 10 + c\n          choix = randint(1, 3)\n          if (choix === 1) {\n            texte = `$${texFraction(n, 10)}$`\n            texteCorr = `$${texFraction(n, 10)}=${texNombrec(n / 10)}$`\n          }\n          if (choix === 2) {\n            texte = `$${texFraction(n, 100)}$`\n            texteCorr = `$${texFraction(n, 100)}=${texNombrec(n / 100)}$`\n          }\n          if (choix === 1) {\n            texte = `$${texFraction(n, 1000)}$`\n            texteCorr = `$${texFraction(n, 1000)}=${texNombrec(n / 1000)}$`\n          }\n          break\n        case 5: // 8+5/100+7/100\n          choix = randint(1, 2)\n          if (choix === 1) {\n            texte = `$${a}+${texFraction(b, 100)}+${texFraction(c, 100)}$`\n            texteCorr = `$${a}+${texFraction(b, 100)}+${texFraction(c, 100)}=${a}+${texFraction(b + c, 100)}=${texNombrec(a + (b + c) / 100)}$`\n          }\n          if (choix === 2) {\n            texte = `$${a}+${texFraction(b, 10)}+${texFraction(c, 10)}$`\n            texteCorr = `$${a}+${texFraction(b, 10)}+${texFraction(c, 10)}=${a}+${texFraction(b + c, 10)}=${a}+${texNombrec((b + c) / 10)}=${texNombrec(a + (b + c) / 10)}$`\n          }\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        if (!context.isHtml && i === 0) {\n          texteCorr = '\\\\setlength\\\\itemsep{2em}' + texteCorr\n        } // espacement entre les questions\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","NombreDecimalOraliseDeDifferentesManieres","Exercice","this","consigne","nbQuestions","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","typesDeQuestionsDisponibles","range1","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","a","b","c","n","choix","i","cpt","randint","texFraction","texNombrec","indexOf","push","context","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}