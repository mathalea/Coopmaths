/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e_6G20_js"],{

/***/ "./src/js/exercices/6e/6G20.js":
/*!*************************************!*\
  !*** ./src/js/exercices/6e/6G20.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Nommer_et_coder_des_polygones)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\nconst titre = 'Nommer et coder des polygones'\n\n/**\n * @Auteur Jean-Claude Lhote\n * Placer les sommets et les égalités de longueur...\n * Référence 6G20\n */\nfunction Nommer_et_coder_des_polygones() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"Nommer les figures en fonction de l'énoncé puis ajouter le codage.\";\n  this.nb_questions = 4;\n  this.nb_cols = 2;\n  this.nb_cols_corr = 2;\n  this.sup = 3;\n\n  this.nouvelle_version = function () {\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n    let Xmin, Xmax, Ymin, Ymax, ppc, sc, g, carreaux\n    ppc = 40\n    if (sortie_html) {\n      sc = 0.5\n    } else {\n      sc = 0.4\n    }\n\n    let params\n\n    let liste = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)([1, 2, 3, 4, 5, 6, 7, 8], this.nb_questions);\n\n    for (\n      let i = 0, texte, texte_corr, cpt = 0;\n      i < this.nb_questions && cpt < 50;\n\n    ) {\n      mathalea.pixelsParCm = 40;\n      let pol, polcode, polsom, polnom\n      function choisir_polygone(n) { // n compris entre 1 et 8 (1 à 4 pour un triangle, 5 à 8 pour une quadrilatère)\n        let A, B, C, D\n        let nom = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.creerNomDePolygone)(4, \"PQ\"), pnom, q, p, pcode, enonce\n        switch (n) {\n          case 1: // triangle isocèle\n            A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(3, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 20) / 10, nom[0])\n            B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(7, 8), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 10) / 10, nom[1])\n            C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(25, 80), nom[2])\n            q = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)(A, B, C)\n            p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(q, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.barycentre)(q), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 360))\n            A = p.listePoints[0]\n            B = p.listePoints[1]\n            C = p.listePoints[2]\n            pnom = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p, nom[0] + nom[1] + nom[2])\n            pcode = [(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||', 'blue', A, B, A, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(B, C, A, 0.8, '|', 'blue', 2, 0.8, 'blue', 0.2), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(C, B, A, 0.8, '|', 'blue', 2, 0.8, 'blue', 0.2)]\n            enonce = `le triangle $${nom[0] + nom[1] + nom[2]}$ est isocèle en $${nom[0]}$.<br>`\n            break\n          case 2: // triangle équilatéral\n            A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(3, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 20) / 10, nom[0])\n            B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(7, 8), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 10) / 10, nom[1])\n            C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 60, nom[2])\n            q = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)(A, B, C)\n            p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(q, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.barycentre)(q), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 360))\n            A = p.listePoints[0]\n            B = p.listePoints[1]\n            C = p.listePoints[2]\n            pnom = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p, nom[0] + nom[1] + nom[2])\n            pcode = [(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||', 'blue', A, B, A, C, B, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(B, C, A, 0.8, '|', 'blue', 2, 0.8, 'blue', 0.2), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(C, B, A, 0.8, '|', 'blue', 2, 0.8, 'blue', 0.2), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(C, A, B, 0.8, '|', 'blue', 2, 0.8, 'blue', 0.2)]\n            enonce = `le triangle $${nom[0] + nom[1] + nom[2]}$ est équilatéral.<br>$\\\\phantom{et sa longueur est AB}$`\n            break\n          case 3: // triangle rectangle\n            A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(3, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 20) / 10, nom[0])\n            B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(7, 8), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 10) / 10, nom[1])\n            C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.similitude)(B, A, 90, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(30, 100) / 100, nom[2])\n            q = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)(A, B, C)\n            p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(q, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.barycentre)(q), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 360))\n            A = p.listePoints[0]\n            B = p.listePoints[1]\n            C = p.listePoints[2]\n            pnom = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p, nom[0] + nom[1] + nom[2])\n            pcode = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(B, A, C)\n            enonce = `le triangle $${nom[0] + nom[1] + nom[2]}$ est rectangle en $${nom[0]}$.<br>$\\\\phantom{et sa longueur est AB}$`\n            break\n          case 4: // triangle rectangle isocèle\n            A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(3, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 20) / 10, nom[0])\n            B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(7, 8), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 10) / 10, nom[1])\n            C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, A, 90, nom[2])\n            q = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)(A, B, C)\n            p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(q, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.barycentre)(q), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 360))\n            A = p.listePoints[0]\n            B = p.listePoints[1]\n            C = p.listePoints[2]\n            pnom = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p, nom[0] + nom[1] + nom[2])\n            pcode = [(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||', 'blue', A, B, A, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(B, A, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(B, C, A, 0.8, '|', 'blue', 2, 0.8, 'blue', 0.2), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(C, B, A, 0.8, '|', 'blue', 2, 0.8, 'blue', 0.2)]\n            enonce = `le triangle $${nom[0] + nom[1] + nom[2]}$ est rectangle et isocèle en $${nom[0]}$.`\n            break\n          //on choisit un quadrilatère \n          case 5: // carré\n            A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(3, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 20) / 10, nom[0])\n            B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(7, 8), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 30) / 10, nom[1])\n            q = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.carre)(A, B)\n            p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(q, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.barycentre)(q), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 360))\n            A = p.listePoints[0]\n            B = p.listePoints[1]\n            C = p.listePoints[2]\n            D = p.listePoints[3]\n            pnom = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p, nom[0] + nom[1] + nom[2] + nom[3])\n            pcode = [(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||', 'blue', A, B, B, C, C, D, D, A), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(B, A, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A, B, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(B, C, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A, D, C)]\n            enonce = `le quadrilatère $${nom[0] + nom[1] + nom[2] + nom[3]}$ est un carré.<br>$\\\\phantom{et sa longueur est AB}$`\n            break\n          case 6: // rectangle\n            A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(3, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 20) / 10, nom[0])\n            B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(7, 8), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 30) / 10, nom[1])\n            C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.similitude)(A, B, -90, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(30, 80) / 100, nom[2])\n            D = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(C, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(B, A), nom[3])\n            q = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)(A, B, C, D)\n            p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(q, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.barycentre)(q), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 360))\n            A = p.listePoints[0]\n            B = p.listePoints[1]\n            C = p.listePoints[2]\n            D = p.listePoints[3]\n            pnom = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p, nom[0] + nom[1] + nom[2] + nom[3])\n            pcode = [(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||', 'blue', A, B, C, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('|', 'red', C, B, A, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(B, A, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A, B, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(B, C, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A, D, C)]\n            enonce = `le quadrilatère $${nom[0] + nom[1] + nom[2] + nom[3]}$ est un rectangle et $${nom[0] + nom[1]}$ est sa longueur.`\n            break\n          case 7: // losange\n            A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(3, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 20) / 10, nom[0])\n            B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(7, 8), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 30) / 10, nom[1])\n            C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A, B, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(100, 150), nom[2])\n            D = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(C, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(B, A), nom[3])\n            q = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)(A, B, C, D)\n            p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(q, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.barycentre)(q), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 360))\n            A = p.listePoints[0]\n            B = p.listePoints[1]\n            C = p.listePoints[2]\n            D = p.listePoints[3]\n            pnom = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p, nom[0] + nom[1] + nom[2] + nom[3])\n            pcode = [(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('O', 'blue', A, B, B, C, C, D, D, A), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(C, D, A, 0.8, '||', 'red', 2, 0.8, 'red', 0.2), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(C, B, A, 0.8, '||', 'red', 2, 0.8, 'red', 0.2), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(B, C, D, 0.8, '|', 'blue', 2, 0.8, 'blue', 0.2), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(D, A, B, 0.8, '|', 'blue', 2, 0.8, 'blue', 0.2)]\n            enonce = `le quadrilatère $${nom[0] + nom[1] + nom[2] + nom[3]}$ est un losange et [$${nom[0] + nom[2]}$] est sa plus grande diagonale.`\n            break\n          case 8: // trapèze rectangle\n            A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(3, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 20) / 10, nom[0])\n            B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(7, 8), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 30) / 10, nom[1])\n            D = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.similitude)(B, A, 90, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(30, 80) / 100, nom[3])\n            C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(D, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.homothetie)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(A, B), A, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(30, 80) / 100), nom[2])\n            q = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygone)(A, B, C, D)\n            p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(q, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.barycentre)(q), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 360))\n            A = p.listePoints[0]\n            B = p.listePoints[1]\n            C = p.listePoints[2]\n            D = p.listePoints[3]\n            pnom = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.nommePolygone)(p, nom[0] + nom[1] + nom[2] + nom[3])\n            pcode = [(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(B, A, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(C, D, A)]\n            enonce = `le quadrilatère $${nom[0] + nom[1] + nom[2] + nom[3]}$ est un trapèze rectangle de grande base $${nom[0] + nom[1]}$ de hauteur $${nom[0] + nom[3]}$.`\n            break\n        }\n        return [p, nom, pcode, pnom, enonce]\n      }\n      [pol, polnom, polcode, polsom, texte] = choisir_polygone(liste[i]);\n      if (pol.listePoints.length == 4) {\n        Xmin = Math.floor(Math.min(pol.listePoints[0].x, pol.listePoints[1].x, pol.listePoints[2].x, pol.listePoints[3].x) - 1)\n        Ymin = Math.floor(Math.min(pol.listePoints[0].y, pol.listePoints[1].y, pol.listePoints[2].y, pol.listePoints[3].y) - 1)\n        Xmax = Math.ceil(Math.max(pol.listePoints[0].x, pol.listePoints[1].x, pol.listePoints[2].x, pol.listePoints[3].x) + 1)\n        Ymax = Math.ceil(Math.max(pol.listePoints[0].y, pol.listePoints[1].y, pol.listePoints[2].y, pol.listePoints[3].y) + 1)\n      }\n      else {\n        Xmin = Math.floor(Math.min(pol.listePoints[0].x, pol.listePoints[1].x, pol.listePoints[2].x) - 1)\n        Ymin = Math.floor(Math.min(pol.listePoints[0].y, pol.listePoints[1].y, pol.listePoints[2].y) - 1)\n        Xmax = Math.ceil(Math.max(pol.listePoints[0].x, pol.listePoints[1].x, pol.listePoints[2].x) + 1)\n        Ymax = Math.ceil(Math.max(pol.listePoints[0].y, pol.listePoints[1].y, pol.listePoints[2].y) + 1)\n\n      }\n      params = {\n        xmin: Xmin,\n        ymin: Ymin,\n        xmax: Xmax,\n        ymax: Ymax,\n        pixelsParCm: ppc,\n        scale: sc,\n      }\n      if (this.sup < 3) g = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.grille)(Xmin, Ymin, Xmax, Ymax, \"gray\", 0.7);\n      else g = ''\n      if (this.sup == 2) {\n        carreaux = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.seyes)(Xmin, Ymin, Xmax, Ymax);\n      } else {\n        carreaux = \"\";\n      }\n\n      pol.epaisseur = 2\n      texte += `<br>` + (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(params, pol, polnom, g, carreaux)\n      texte_corr = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(params, pol, polnom, polcode, polsom, g, carreaux)\n      if (this.liste_questions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n    mathalea.pixelsParCm = 20\n  };\n  this.besoin_formulaire_numerique = [\n    \"Type de cahier\",\n    3,\n    `1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`,\n  ];\n}\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/6G20.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);