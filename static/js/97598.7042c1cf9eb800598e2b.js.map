{"version":3,"file":"js/97598.7042c1cf9eb800598e2b.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C22.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, lampeMessage, texteEnCouleur, texteEnCouleurEtGras, calcul, texPrix, prenomF } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Résoudre des problèmes de type : ... de plus ou ... de moins'\nexport const interactifReady = true\nexport const interactifType = 'numerique'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\n// Gestion de la date de publication initiale\nexport const dateDePublication = '10/07/2021'\n\n/**\n * Description didactique de l'exercice\n * @author Laurence CANDILLE\n * Référence 6C22\n * Relecture : Novembre 2021 par EE\n*/\nexport default function ProblemesDePlusEtDeMoins () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Résoudre les problèmes suivants au brouillon et écrire les réponses dans les cases, ne pas préciser \"€\" ni \"euros\" ...'\n  this.nbQuestions = 3\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.listePackages = 'bclogo'\n\n  const nombreDecimales = function (n) {\n    let r, e\n    if (n === 0) {\n      r = randint(40, 70)\n      e = randint(10, 30)\n    }\n    if (n === 1) {\n      r = calcul((randint(40, 60) * 100 + randint(1, 9) * 10) / 100) // évite de retomber dans le cas n=0 par ex  4200/100\n      e = calcul((randint(10, 20) * 100 + randint(1, 9) * 10) / 100)\n    }\n    if (n === 2) {\n      r = calcul((randint(40, 60) * 100 + randint(1, 9) * 10 + randint(1, 9)) / 100)\n      e = calcul((randint(10, 20) * 100 + randint(1, 9) * 10 + randint(1, 9)) / 100)\n    }\n    return [r, e]\n  }\n  this.nouvelleVersion = function () {\n    const n = parseInt(this.sup) - 1\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    if (this.interactif && context.isHtml) {\n      this.consigne = this.nbQuestions > 1 ? 'Résoudre les problèmes suivants au brouillon et écrire les réponses dans les cases, ne pas préciser \"€\" ni \"euros\" ...' : 'Résoudre le problème suivant au brouillon et écrire la réponse dans la case, ne pas préciser \"€\" ni \"euros\" ...'\n      this.introduction = lampeMessage({\n        titre: 'Calculatrice interdite.',\n        texte: '',\n        couleur: 'nombres'\n      })\n    } else {\n      this.consigne = this.nbQuestions > 1 ? 'Résoudre les problèmes suivants.' : 'Résoudre le problème suivant.'\n      this.introduction = lampeMessage({\n        titre: 'Calculatrice interdite.',\n        texte: '',\n        couleur: 'nombres'\n      })\n    }\n    const typeQuestionsDisponibles = ['deplus', 'demoins', 'deplus'] // On créé 2 types de questions\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    let r, e // argent de Romane et écart\n    let m // argent de Malika\n    let somme // argent total\n    let prenom1, prenom2 // choix aleatoire des prenoms des filles\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      prenom1 = prenomF()\n      prenom2 = prenomF()\n      while (prenom2 === prenom1) {\n        prenom2 = prenomF()\n      }\n      [r, e] = nombreDecimales(n)\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'deplus':\n          m = r - e\n          somme = m + r\n\n          texte = `${prenom2} dit à ${prenom1}  : « J'ai ${texPrix(r)} €, soit ${texPrix(e)} € de plus que toi. »<br>`\n          if (this.interactif && !context.isAmc) {\n            texte += 'Combien d\\'argent en tout possèdent les deux filles ?'\n            texte += '<br>Les deux filles possèdent en tout : '\n            texte += ajouteChampTexte(this, i) + '   €.'\n            setReponse(this, i, somme)\n          } else {\n            texte += 'Combien d\\'argent en euros possèdent en tout les deux filles ?<br>'\n          }\n          texteCorr = `D'après l'énoncé, ${prenom2} a ${texPrix(r)} €<br>${prenom2}  a ${texPrix(e)} €.`\n          texteCorr += texteEnCouleurEtGras(' de plus ')\n          texteCorr += `que ${prenom1} signifie que ${prenom1} a ${texPrix(e)} € `\n          texteCorr += texteEnCouleurEtGras(' de moins ')\n          texteCorr += `que ${prenom2}. <br>${prenom1} a donc : ${texPrix(r)} € - ${texPrix(e)} € = ${texPrix(m)} €`\n          texteCorr += `<br>${texPrix(r)} € + ${texPrix(m)} € = ${texPrix(somme)} €. `\n          texteCorr += texteEnCouleur(`<br>Les deux filles possèdent en tout ${texPrix(somme)} €.`)\n\n          break\n        case 'demoins':\n          m = r + e\n          somme = m + r\n\n          texte = `${prenom2} dit à ${prenom1} : « J'ai ${texPrix(r)} €, soit ${texPrix(e)} € de moins que toi. »<br>`\n          if (this.interactif && !context.isAmc) {\n            texte += 'Combien d\\'argent en tout possèdent les deux filles ?<br>Les deux filles possèdent en tout :'\n            texte += ajouteChampTexte(this, i) + '   €.'\n            setReponse(this, i, somme)\n          } else {\n            texte += 'Combien d\\'argent en euros possèdent en tout les deux filles ?<br>'\n          }\n          texteCorr = `D'après l'énoncé, ${prenom2} a ${texPrix(r)} €<br>${prenom2}  a ${texPrix(e)} €.`\n          texteCorr += texteEnCouleurEtGras(' de moins ')\n          texteCorr += `que ${prenom1} signifie que ${prenom1} a ${texPrix(e)} € `\n          texteCorr += texteEnCouleurEtGras(' de plus ')\n          texteCorr += `que ${prenom2}. <br>${prenom1} a donc : ${texPrix(r)} € + ${texPrix(e)} € = ${texPrix(m)} €`\n          texteCorr += `<br>${texPrix(r)} € + ${texPrix(m)} € = ${texPrix(somme)} €. `\n          texteCorr += texteEnCouleur(`<br>Les deux filles possèdent en tout ${texPrix(somme)} €.`)\n\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Valeurs entières\\n2 : Une décimale\\n3 : Deux décimales']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","dateDePublication","ProblemesDePlusEtDeMoins","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","listePackages","nombreDecimales","n","r","e","randint","calcul","nouvelleVersion","parseInt","listeQuestions","listeCorrections","autoCorrection","interactif","context","introduction","lampeMessage","texte","couleur","listeTypeQuestions","combinaisonListes","m","somme","prenom1","prenom2","texteCorr","i","cpt","prenomF","texPrix","ajouteChampTexte","setReponse","texteEnCouleurEtGras","texteEnCouleur","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}