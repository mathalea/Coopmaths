/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_5e_5G41_js"],{

/***/ "./src/js/exercices/5e/5G41.js":
/*!*************************************!*\
  !*** ./src/js/exercices/5e/5G41.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Constructions_parallelogrammes_particuliers)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\n\n\nconst titre = 'Construire des quadrilatères particuliers'\n\n/**\n * Construction de quadrilatères avec dispositif d'auto-correction aléatoire\n * Ref 4G41\n * @Auteur Jean-Claude Lhote\n * Publié le 3/02/2020\n */\nfunction Constructions_parallelogrammes_particuliers() {\n    _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n    this.consigne = \"\";\n    this.nb_questions = 1;\n    this.nb_questions_modifiable = false;\n    this.nb_cols = 1;\n    this.nb_cols_corr = 1;\n    this.sup = 1;\n    this.correction_detaillee = false\n    this.correction_detaillee_disponible = true\n    this.nouvelle_version = function () {\n        this.liste_questions = []; // Liste de questions\n        this.liste_corrections = []; // Liste de questions corrigées\n        let texte = \"\", texte_corr = \"\";\n        let celluleAlea = function (rang) {\n            let lettre = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lettre_depuis_chiffre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, rang));\n            let chiffre = Number((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, rang)).toString();\n            return lettre + chiffre;\n        };\n        // On prépare la figure...\n        let noms = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choisit_lettres_differentes)(5, 'QO', true); // on choisit 5 lettres, les 4 premières sont les sommets, la 5e est le centre\n        let nom = `$${noms[0] + noms[1] + noms[2] + noms[3]}$`\n        let A, B, C, D, O, p, d1, d2, c1, c2, c3, c4, dd1, dd2, dd3, dd4, alpha, tri, t1, t2, t3, t4,t5\n        let objets_enonce = [], objets_correction = [], result2, result1, cible1, cible2, cible3, cellule1, cellule2, cellule3, result3\n        let type_de_question, type_de_questions_disponibles\n        let xMin, yMin, xMax, yMax,xm,ym,xM,yM\n        if (this.sup == 1) type_de_questions_disponibles = [1, 2, 3]\n        else if (this.sup == 2) type_de_questions_disponibles = [4, 5, 6,7]\n        else type_de_questions_disponibles = [1, 2, 3, 4, 5, 6,7]\n\n        type_de_question = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(type_de_questions_disponibles)\n        switch (type_de_question) {\n            case 1:\n                A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, noms[0])\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(20, 25) * 2 //AB\n                c4 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(20, 30, c1 / 2) / 5) //AD\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(c1 / 10)\n                d1 = 5 * (Math.abs(c4 - c1) + 2)\n                d2 = 5 * (c1 + c4 - 3)\n                d1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(Math.min(d1, d2), Math.max(d1, d2)) / 5) //BD\n                B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(A, c1, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-30, 30), noms[1])\n                D = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointIntersectionCC)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cercle)(A, c4), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cercle)(B, d1), noms[3])\n                O = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.milieu)(B, D, noms[4])\n                C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A, O, 180, noms[2])\n                texte = `${nom} est un parallélogramme tel que `\n                texte += `$${noms[0] + noms[1]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c1)}$ cm, $${noms[0] + noms[3]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c4)}$ cm, $${noms[1] + noms[3]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(d1)}$ cm.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B))\n                if (this.correction_detaillee) {\n                texte_corr += `Comme ${nom} est un parallélogramme, ses diagonales se coupent en leur milieu.<br>`\n                texte_corr += `Soit $${noms[4]}$ le milieu de $[${noms[1] + noms[3]}]$. $${noms[2]}$ est le symétrique de $${noms[0]}$ par rapport à $${noms[4]}$.`\n                texte_corr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[3]}$.<br>Puis $${noms[4]}$, le milieu de $[${noms[1] + noms[3]}]$ et enfin le point $${noms[2]}$.<br>`\n                }\n                if ((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.longueur)(B, D) != (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.longueur)(A, C)) {\n                    texte_corr += `Comme $${noms[0] + noms[3]}\\\\ne ${noms[0] + noms[1]}$ et que $${noms[0] + noms[2]}\\\\ne ${noms[3] + noms[1]}$, le paralélogramme ${nom} n'est ni un losange, ni un rectangle.<br>`\n                    texte_corr += `${nom} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)('est un simple paraléllogramme')}.<br>`\n                }\n                else {\n                    texte_corr += `Comme $$${noms[0] + noms[2]} = ${noms[3] + noms[1]}$ et que $${noms[0] + noms[3]}\\\\ne ${noms[0] + noms[1]}$, le paralélogramme ${nom} est un rectangle.<br>`\n                }\n                objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, B, 'black', -0.5), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, D, 'black', 0.5))\n                t1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(A, D, 15)\n                t2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(B, D, 15)\n                t3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(O, C, 20)\n                tri = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(A, B, D)\n                xm = Math.min(A.x, B.x, D.x)-0.8;\n                ym = Math.min(A.y, B.y ,D.y)-0.8;\n                xM = Math.max(A.x, B.x ,D.x)+0.8;\n                yM = Math.max(A.y, B.y, D.y)+0.8;\n                break\n            case 2:\n                O = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, noms[4])\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(25, 35) * 2 //AC\n                c4 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)((c1 + 4) / 2, 45) / 5) //BD\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(c1 / 10)\n                alpha = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(100, 130)\n\n                A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(O, c1 / 2, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-30, 30), noms[0])\n                B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.similitude)(A, O, alpha, c4 / c1, noms[1])\n                D = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, O, 180, noms[3])\n                C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A, O, 180, noms[2])\n                texte = `${nom} est un parallélogramme de centre $${noms[4]}$ tel que `\n                texte += `$${noms[0] + noms[2]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c1)}$ cm, $${noms[1] + noms[3]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c4)}$ cm et $\\\\widehat{${noms[0] + noms[4] + noms[1]}}=${alpha}\\\\degree$  dans le sens inverse des aiguilles d'une montre.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, O), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, O))\n                if (this.correction_detaillee) {\n                texte_corr += `Comme ${nom} est un parallélogramme, ses diagonales se coupent en leur milieu $${noms[4]}$.<br>`\n                texte_corr += `$${noms[2]}$ est le symétrique de $${noms[0]}$ par rapport à $${noms[4]}$. La distance ${noms[4] + noms[1]} est égale à la moitié de ${noms[1] + noms[3]}.<br>`\n                texte_corr += `Construisons tout d'abord le point $${noms[2]}$ symétrique de $${noms[0]}$ par rapport à $${noms[4]}$.<br>`\n                texte_corr += `Construisons ensuite un angle $\\\\widehat{${noms[0] + noms[4] + 'x'}}$ de mesure $${alpha}\\\\degree$ dans le sens inverse des aiguilles d'une montre.<br>`\n                texte_corr += `Puis le point $${noms[1]}$ sur $[${noms[4]}x)$ et son symétrique $${noms[3]}$ par rapport à $${noms[4]}$ situés tous les deux à $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombrec)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(c4 / 2))}$ cm de $${noms[4]}$.<br>`\n                }\n                xm = Math.min(A.x, B.x, C.x)-0.8;\n                ym = Math.min(A.y, B.y ,C.y)-0.8;\n                xM = Math.max(A.x, B.x ,C.x)+0.8;\n                yM = Math.max(A.y, B.y, C.y)+0.8;\n                break\n            case 3:\n                A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, noms[0])\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(26, 40) * 2 //AB\n                c4 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(15, 25) / 5) //AD\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(c1 / 10)\n\n                B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(A, c1, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-30, 30), noms[1])\n                D = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.similitude)(B, A, 90, c4 / c1, noms[3])\n                O = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.milieu)(B, D, noms[4])\n                C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A, O, 180, noms[2])\n                texte = `${nom} est un parallélogramme tel que `\n                texte += `$${noms[0] + noms[1]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c1)}$ cm, $${noms[0] + noms[3]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c4)}$ cm, $${noms[1] + noms[3]}=${noms[0] + noms[2]}$.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B))\n\n                texte_corr += `Comme ${nom} est un parallélogramme, ses diagonales se coupent en leur milieu et comme de plus elles ont la même longueur, ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(nom)} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(' est donc un rectangle')}.<br>`\n                if (this.correction_detaillee) {\n                texte_corr += `Soit $${noms[4]}$ le milieu de $[${noms[1] + noms[3]}]$. $${noms[2]}$ est le symétrique de $${noms[0]}$ par rapport à $${noms[4]}$.<br>`\n                texte_corr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[3]}$ puis $${noms[4]}$ au milieu de $[${noms[1] + noms[3]}]$.<br>`\n                texte_corr+=`Les quatre sommets de ${nom} sont sur le cercle de centre $${noms[4]}$ passant par $${noms[0]}$. $[${noms[0]}${noms[2]}]$ et $[${noms[1]}${noms[3]}]$ sont des diamètres de ce cercle.<br>`\n                }\n                objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, B, 'black', -0.5), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, D, 'black', 0.5))\n                t1=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cercleCentrePoint)(O,A)\n                t1.color='gray'\n                t1.opacite=0.5\n                t3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(O, C, 20)\n                tri = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(A, B, D)\n                xm = Math.min(A.x, B.x, D.x)-0.8;\n                ym = Math.min(A.y, B.y ,D.y)-0.8;\n                xM = Math.max(A.x, B.x ,D.x)+0.8;\n                yM = Math.max(A.y, B.y, D.y)+0.8;\n\n                break\n            case 4:\n                A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, noms[0])\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(15, 30) //AB\n                c4 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(15, 20,c1) / 5) //BD\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(c1 / 5)\n\n                B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(A, c1, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-30, 30), noms[1])\n                D = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointIntersectionCC)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cercle)(A, c1), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cercle)(B, c4), noms[3])\n                O = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.milieu)(B, D, noms[4])\n                C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A, O, 180, noms[2])\n\n                texte = `${nom} est un parallélogramme tel que `\n                texte += `$${noms[0] + noms[1]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c1)}$ cm, $${noms[1] + noms[3]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c4)}$ cm, $[${noms[0] + noms[2]}]\\\\perp [${noms[1] + noms[3]}]$.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B))\n\n                texte_corr += `Comme ${nom} est un parallélogramme dont les diagonales $[${noms[0] + noms[2]}]$ et $[${noms[1] + noms[3]}]$ sont perpendiculaires, ${nom}${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(' est un losange')}.<br>`\n                if (this.correction_detaillee){\n                texte_corr += `Il en résulte que le triangle $${noms[0] + noms[1] + noms[3]}$ est isoclèle en $${noms[0]}$.<br>`\n                texte_corr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[3]}$ puis $${noms[4]}$, le milieu de $[${noms[1] + noms[3]}]$ et enfin le point $${noms[2]}$.<br>`\n                }\n                objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, B, 'black', -0.5), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, D, 'black', 0.5))\n                t1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(A, D, 15)\n                t2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(B, D, 15)\n                t3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(O, C, 20)\n                tri = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(A, B, D)\n                xm = Math.min(A.x, B.x, D.x)-0.8;\n                ym = Math.min(A.y, B.y ,D.y)-0.8;\n                xM = Math.max(A.x, B.x ,D.x)+0.8;\n                yM = Math.max(A.y, B.y, D.y)+0.8;\n                break\n            case 5:\n                A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, noms[0])\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(20, 35) * 2 //AC\n                c4 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)((c1 - 4) / 2, 35) / 5) //AD\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(c1 / 10)\n                alpha = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(95, 120)\n                B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(A, c1, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-30, 30), noms[1])\n                D = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.similitude)(B, A, alpha, c4 / c1, noms[3])\n                O = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.milieu)(B, D, noms[4])\n                C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A, O, 180, noms[2])\n                texte = `${nom} est un parallélogramme de centre $${noms[4]}$ tel que `\n                texte += `$${noms[0] + noms[1]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c1)}$ cm, $${noms[0] + noms[3]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c4)}$ cm et $\\\\widehat{${noms[1] + noms[2] + noms[3]}}=${alpha}\\\\degree$  dans le sens inverse des aiguilles d'une montre.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B))\n                if (this.correction_detaillee) {\n                texte_corr += `Comme ${nom} est un parallélogramme, ses angles opposés ont la même mesure, donc $\\\\widehat{${noms[3] + noms[0] + noms[1]}}=${alpha}\\\\degree$.<br>`\n                texte_corr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[3]}$.<br>`\n                texte_corr += `Puis le point $${noms[2]}$ symétrique  de $${noms[0]}$ par rapport à $${noms[4]}$, milieu de $[${noms[1] + noms[3]}]$.<br>`\n            }\n                texte_corr += `Comme ${nom} est un parallélogramme qui ne possède pas d'angle droit et que ses côtés consécutifs sont de longueurs différentes, ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)('c\\'est un simple parallélogramme')}.<br>`\n                t1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(A, D, 15)\n                t2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(A, B, 15)\n                t3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(O, C, 20)\n                tri = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(A, B, D)\n                xm = Math.min(A.x, B.x, D.x)-0.8;\n                ym = Math.min(A.y, B.y ,D.y)-0.8;\n                xM = Math.max(A.x, B.x ,D.x)+0.8;\n                yM = Math.max(A.y, B.y, D.y)+0.8;\n                break\n            case 6:\n                A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, noms[0])\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(20, 35) * 2 //AC\n                c2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(15, 20) * 2 //AO\n                c3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(c1 + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(5, 10) * 2) - c2 //BO\n                c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(c1 / 10)\n                c2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(c2 / 10)\n                c3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(c3 / 10)\n\n                B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(A, c1, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-30, 30), noms[1])\n                O = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointIntersectionCC)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cercle)(A, c2), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cercle)(B, c3), noms[4])\n                C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A, O, 180, noms[2])\n                D = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B, O, 180, noms[3])\n                texte = `${nom} est un parallélogramme de centre $${noms[4]}$ tel que `\n                texte += `$${noms[0] + noms[1]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c1)}$ cm, $${noms[4] + noms[2]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c2)}$ cm et $${noms[4] + noms[3]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c3)}$ cm.<br>`\n                texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                objets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, B))\n                if (this.correction_detaillee) {\n                texte_corr += `Comme ${nom} est un parallélogramme, ses diagonales se coupent en leur milieu $${noms[4]}$.<br>`\n                texte_corr += `On en déduit que $${noms[0] + noms[4]}=${noms[4] + noms[2]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c2)}$ cm et que $${noms[1] + noms[4]}=${noms[4] + noms[3]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c3)}$ cm.<br>`\n                texte_corr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[4]}$.<br>`\n                texte_corr += `Puis les points $${noms[2]}$ et $${noms[3]}$ symétriques respectifs de $${noms[0]}$ et $${noms[1]}$ par rapport à $${noms[4]}$.<br>`\n                }\n                if (c1 * c1 != (c2 * c2 + c3 * c3)) {\n                    texte_corr += `le triangle $${noms[0] + noms[1] + noms[4]}$ n'est pas un triangle rectangle, donc les diagonales ne sont pas perpendiculaires.<br>`\n                    if (c2 == c3) texte_corr += `Les diagonales ont la même longueur. ${nom} est un parallélogramme dont les diagonales sont de même longueur, ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)('c\\'est donc un rectangle')}.<br>`\n                    else texte_corr += `De plus elles n'ont pas la même longueur, donc ${nom} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)('est un simple parallélogramme')}.<br>`\n                }\n                else {\n                    texte_corr += `Le triangle $${noms[0] + noms[1] + noms[4]}$ est un triangle rectangle, donc les diagonales sont perpendiculaires.<br>`\n                    if (c2 == c3) texte_corr += `de plus les diagonales ont même longueur. ${nom} est un parallélogramme dont les diagonales sont perpendiculaires et de même longueur, ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)('c\\'est donc un carré')}.<br>`\n                }\n                t1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(A, O, 20)\n                t2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(B, O, 20)\n                t3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(O, C, 30)\n                t4 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(O, D, 30)\n\n                tri = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(A, B, O)\n                xm = Math.min(A.x, B.x, O.x)-0.8;\n                ym = Math.min(A.y, B.y ,O.y)-0.8;\n                xM = Math.max(A.x, B.x ,O.x)+0.8;\n                yM = Math.max(A.y, B.y, O.y)+0.8;\n                break\n                case 7:\n                    A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, noms[0])\n                    c1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(30, 40)/5) //AC\n                    c2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(25,40)// angle OAB\n                    c3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(30,45,c2) // angle OCB\n    \n                    C = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(A, c1, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-30, 30), noms[2])\n                    O = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.milieu)(A,C,noms[4])\n                    B=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(C,A,c2)\n                    dd1=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(A,B)\n                    D=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A,C,-c3)\n                    dd2=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite)(C,D)\n                    B=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointIntersectionDD)(dd1,dd2,noms[1])\n                    D=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B,O,180,noms[3])\n                    texte = `${nom} est un parallélogramme de centre $${noms[4]}$ tel que `\n                    texte += `$${noms[0] + noms[2]}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c1)}$ cm.<br>$\\\\widehat{${noms[4] + noms[0] + noms[1]}}=${c2}\\\\degree$  dans le sens inverse des aiguilles d'une montre.<br>$\\\\widehat{${noms[4] + noms[2] + noms[1]}}=${c3}\\\\degree$  dans le sens des aiguilles d'une montre.<br>`\n                    texte += `Construire le parallélogramme ${nom} et préciser si c'est un paraléllogramme particulier.<br>`\n                    objets_enonce.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, C))\n                    if (this.correction_detaillee) {\n                    texte_corr += `Comme ${nom} est un parallélogramme, ses côtés opposés sont parallèles.<br>`\n                    texte_corr +=`La diagonale $[${noms[0]}${noms[2]}]$ forme des angles $\\\\widehat{${noms[4] + noms[0] + noms[1]}}$ et $\\\\widehat{${noms[4] + noms[2] + noms[3]}}$ alternes-internes égaux.<br>`\n                    texte_corr +=`De même les angles $\\\\widehat{${noms[4] + noms[0] + noms[3]}}$ et $\\\\widehat{${noms[4] + noms[2] + noms[1]}}$ sont alternes-internes égaux eux aussi.<br>`\n                    texte_corr += `On en déduit que $\\\\widehat{${noms[4] + noms[0] + noms[3]}}=\\\\widehat{${noms[4] + noms[2] + noms[1]}}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.mise_en_evidence)(c3,'red')}\\\\degree$ et que $\\\\widehat{${noms[4] + noms[0] + noms[1]}}=\\\\widehat{${noms[4] + noms[2] + noms[3]}}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.mise_en_evidence)(c2,'blue')}\\\\degree$.<br>`\n                    texte_corr += `Construisons tout d'abord le triangle $${noms[0] + noms[1] + noms[2]}$.<br>`\n                    texte_corr += `Puis le points $${noms[3]}$ symétrique de $${noms[1]}$ par rapport à $${noms[4]}$.<br>`\n                    }\n                  \n                        texte_corr += `Le triangle $${noms[0] + noms[1] + noms[2]}$ n'est pas un triangle isocèle car ses angles ne sont pas égaux.<br>`\n                        texte_corr += `De plus dans ce triangle  l'angle $\\\\widehat{${noms[0] + noms[1] + noms[2]}}$ mesure $${180-c2-c3}\\\\degree$ donc ${nom} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)('est un simple parallélogramme')}.<br>`\n                    t1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(O, A,B, 'blue',1,(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c2)+'°')\n                    t2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(O, C,B, 'red',1,(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c3)+'°')\n                    t3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(O, D, 30)\n                    t5 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(O)\n                    t5.style = '+'\n                    objets_correction.push(t1,t2)\n                    tri = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(A, B, C)\n                    xm = Math.min(A.x, B.x, C.x)-0.8;\n                    ym = Math.min(A.y, B.y ,C.y)-0.8;\n                    xM = Math.max(A.x, B.x ,C.x)+0.8;\n                    yM = Math.max(A.y, B.y, C.y)+0.8;\n                    break\n    \n        }\n        p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(A, B, C, D)\n\n        xMin = Math.min(A.x, B.x, C.x, D.x) - 2;\n        yMin = Math.min(A.y, B.y, C.y, D.y) - 2;\n        xMax = Math.max(A.x, B.x, C.x, D.x) + 2;\n        yMax = Math.max(A.y, B.y, C.y, D.y) + 2;\n\n        cellule1 = celluleAlea(5)\n        cellule2 = celluleAlea(5)\n        cellule3 = celluleAlea(5)\n        result1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.dansLaCibleCarree)(B.x, B.y, 5, 0.3, cellule3);\n        result2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.dansLaCibleCarree)(C.x, C.y, 5, 0.3, cellule1);\n        result3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.dansLaCibleCarree)(D.x, D.y, 5, 0.3, cellule2);\n        cible1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cibleCarree)({ x: result1[0], y: result1[1], rang: 5, num: \"\" ,taille:0.4});\n        cible1.taille = 0.3;\n        cible1.color = 'gray';\n        cible1.opacite = 0.7;\n        cible2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cibleCarree)({ x: result2[0], y: result2[1], rang: 5, num: \"\" ,taille:0.4});\n        cible2.taille = 0.3;\n        cible2.color = 'gray';\n        cible2.opacite = 0.7;\n        cible3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cibleCarree)({ x: result3[0], y: result3[1], rang: 5, num: \"\",taille:0.4 });\n        cible3.taille = 0.3;\n        cible3.color = 'gray';\n        cible3.opacite = 0.7;\n        dd1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(O, A)\n        dd2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(O, B)\n        dd3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(O, C)\n        dd4 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(O, D)\n\n        console.log(objets_correction)\n\n        switch (type_de_question) {\n            case 1:\n                if (this.correction_detaillee) texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, objets_correction, t1, t2, tri[0], tri[1], (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(D, B))+'<br>'\n                objets_enonce.push(cible3, cible2)\n                objets_correction.push(p[0], p[1], t3)\n                objets_correction.push(cible3, cible2, dd1, dd2, dd3, dd4, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"||\", \"red\", A, O, O, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"|||\", \"blue\", B, O, O, D),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(O,B))\n                break\n            case 2:\n                if (this.correction_detaillee) texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"||\", \"red\", A, O, O, C), t3, dd1, dd3, dd2, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(A, O, B, 'black', 1, alpha + '°'), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A, O, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(A, O, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)('x', B.x - 0.5, B.y), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, O), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(O, C))+'<br>'\n                objets_enonce.push(cible3, cible2, cible1)\n                objets_correction.push(p[0], p[1], t3, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(O, D))\n                objets_correction.push(cible3, cible2, cible1, dd1, dd2, dd3, dd4, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"||\", \"red\", A, O, O, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"|||\", \"blue\", B, O, O, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(A, O, B, 'black', 1, alpha + '°'))\n\n                break\n            case 3:\n                if (this.correction_detaillee) texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, objets_correction, tri[0], tri[1], (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(D,A,B))+'<br>'\n                objets_enonce.push(cible3, cible2)\n                objets_correction.push(p[0], p[1], t1,t3)\n                objets_correction.push(cible3, cible2, dd1, dd2, dd3, dd4, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"||\", \"red\", A, O, O, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"||\", \"red\", B, O, O, D))\n\n                break\n            case 4:\n                if (this.correction_detaillee) texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, objets_correction, tri[0], tri[1], (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(D, B), t2, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(A, B, 60), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.traceCompas)(A, D, 60))+'<br>'\n                objets_enonce.push(cible3, cible2)\n                objets_correction.push(p[0], p[1], t3,(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(O,B))\n                objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A, O, D), cible3, cible2, dd1, dd2, dd3, dd4, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"||\", \"red\", A, O, O, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"|||\", \"blue\", B, O, O, D))\n                break\n            case 5:\n                if (this.correction_detaillee) texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, tri[0], tri[1], (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.demiDroite)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.demiDroite)(A, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(B, A, D, 'black', 1, alpha + '°'), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, D))+'<br>'\n                objets_enonce.push(cible3, cible2)\n                objets_correction.push(p[0], p[1], t3)\n                objets_correction.push(cible3, cible2, dd1, dd2, dd3, dd4, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"||\", \"red\", A, O, O, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"|||\", \"blue\", B, O, O, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(B, A, D, 'black', 1, alpha + '°'), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(B, A), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, D), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(C, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(D, C))\n\n                break\n            case 6:\n                if (this.correction_detaillee) texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, objets_correction, tri[0], tri[1], (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(B, A), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(O, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(A, O), t1, t2,t5)+'<br>'\n                objets_enonce.push(cible3, cible2)\n                objets_correction.push(p[0], p[1], t3, t4)\n                objets_correction.push(cible3, cible2, dd1, dd2, dd3, dd4, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"||\", \"red\", A, O, O, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"|||\", \"blue\", B, O, O, D))\n                break\n                case 7:\n                    if (this.correction_detaillee) texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xm, ymin: ym, xmax: xM, ymax: yM, pixelsParCm: 25, scale: 1 }, objets_correction, tri[0], tri[1], (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(C, O),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(O,A),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O),t5,(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"||\", \"red\", A, O, O, C))+'<br>'\n                    objets_enonce.push(cible3, cible1)\n                    objets_correction.push(p[0], p[1], t3)\n                    objets_correction.push(cible3, t1,t2,t3,cible1, dd1, dd2, dd3, dd4, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"||\", \"red\", A, O, O, C), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)(\"|||\", \"blue\", B, O, O, D),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(O, A,D, 'red',1,(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c3)+'°'),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(O, C,D, 'blue',1,(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c2)+'°'))\n                    break\n    \n        }\n        texte += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 25, scale: 1 }, objets_enonce)\n        texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 25, scale: 1 }, objets_correction)\n\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\n    };\n    this.besoin_formulaire_numerique = ['Niveau de diffculté', 3, \"1 : Figures faciles\\n2 : Figures plus difficiles\\n3 : Figure au hasard\"];\n    // this.besoin_formulaire2_case_a_cocher = [\"Avec des points de part et d'autre\"];\t\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/5e/5G41.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);