{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/_Construire_un_triangle_avec_cible.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["Construire_un_triangle_avec_cible","Exercice","this","titre","nbQuestions","nbCols","nbColsCorr","sup","classe","typeExercice","nouvelleVersion","IEP","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","cible","cellule","result","A","B","C","CC","lAB","lBC","lAC","cA","cB","T","TT","dBC","dAC","dAB","objetsEnonceml","objetsEnonce","objetsCorrection","paramsEnonceml","paramsEnonce","paramsCorrection","nom","sommets","montriangle","celluleAleaRonde","rang","lettreDepuisChiffre","randint","Number","toString","range1","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","Alea2iep","creerNomDePolygone","push","point","calcul","pointAdistance","positionLabel","cercle","pointIntersectionCC","x","y","dansLaCibleRonde","cibleRonde","taille","segmentAvecExtremites","labelPoint","afficheLongueurSegment","traceCompas","triangle3longueurs","droite","droiteParPointEtPerpendiculaire","pointIntersectionLC","codageAngleDroit","triangleRectangle2Cotes","codeSegments","segmentCodage","codage","triangleEquilateral","similitude","codeAngle","texteParPoint","nombreAvecEspace","Math","round","angle","afficheMesureAngle","triangle2longueurs1angle","rotation","pointIntersectionDD","triangle1longueur2angles","animation","htmlBouton","numeroExercice","triangleRectangleCoteHypotenuse","longueur","polygoneAvecNom","xmin","min","ymin","xmax","max","ymax","pixelsParCm","scale","mainlevee","amplitude","mathalea2d","indexOf","listeQuestionsToContenu","besoinFormulaire2Numerique","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/97306.901ba055047cb444b121.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, shuffle, combinaisonListes, calcul, creerNomDePolygone, lettreDepuisChiffre, nombreAvecEspace, range1 } from '../../modules/outils.js'\nimport { codeSegments, point, pointIntersectionDD, longueur,pointAdistance, labelPoint, droite, droiteParPointEtPerpendiculaire, segmentAvecExtremites, polygoneAvecNom, cercle, pointIntersectionLC, pointIntersectionCC, traceCompas, dansLaCibleRonde, cibleRonde, rotation, similitude, codageAngleDroit, afficheLongueurSegment, afficheMesureAngle, codeAngle, texteParPoint, angle, mathalea2d } from '../../modules/2d.js'\nimport Alea2iep from '../../modules/Alea2iep.js';\n\n/**\n * publié le 1/12/2020\n * @author Jean-Claude Lhote\n * Réfrence 6G21-1 et ... (exercice en 5e ? pas encore fait)\n */\nexport default function Construire_un_triangle_avec_cible() {\n  \"use strict\"\n  Exercice.call(this)\n  this.titre = \"Construire un triangle avec cible auto-corrective\";\n  this.nbQuestions = 4;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = false;\n  this.classe = 6;\n  this.typeExercice = \"IEP\";\n\n  this.nouvelleVersion = function () {\n    let IEP\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let celluleAleaRonde = function (rang) {\n      let lettre = lettreDepuisChiffre(randint(1, 8))\n      let chiffre = Number(randint(1, rang)).toString()\n      return lettre + chiffre\n    }\n\n    let typesDeQuestionsDisponibles, cible, cellule, result, A, B, C, CC, lAB, lBC, lAC, cA, cB, T, TT, dBC, dAC, dAB, objetsEnonceml, objetsEnonce, objetsCorrection, paramsEnonceml, paramsEnonce, paramsCorrection, nom, sommets,montriangle\n    if (this.classe == 6) typesDeQuestionsDisponibles = range1(6)\n    else typesDeQuestionsDisponibles = range1(9)\n    let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      IEP = new Alea2iep()\n      objetsEnonce = []\n      objetsEnonceml = []\n      objetsCorrection = []\n      texte = `Le triangle ci-dessous a été réalisé à main levée.<br>Construire ce triangle avec les instruments de géométrie en respectant les mesures indiquées.<br>`\n      texteCorr = `Voici la construction que tu devais réaliser.<br>`\n      nom = creerNomDePolygone(3, \"PQ\")\n      sommets = []\n      for (let i = 0; i < 3; i++) sommets.push(nom[i])\n      A = point(0, 0, sommets[0], 'left')\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // triangle quelconque par ses trois longueurs\n          lAC = randint(35, 45)\n          lBC = calcul(randint(35, 45, lAC) / 10)\n          lAB = calcul(randint(46, 60) / 10)\n          lAC = calcul(lAC / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cA = cercle(A, lAC)\n          cB = cercle(B, lBC)\n          C = pointIntersectionCC(cA, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), afficheLongueurSegment(C, B, 'black', 1), afficheLongueurSegment(A, C, 'black', 1))\n          objetsCorrection.push(cible, traceCompas(A, C, 30, 'gray', 1, 2), traceCompas(B, C, 30, 'gray', 1, 2), afficheLongueurSegment(B, A), afficheLongueurSegment(C, B), afficheLongueurSegment(A, C))\n          texteCorr += `Pour cette construction, nous avons utilisé le compas et la règle graduée.<br>`\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangle3longueurs(nom,lAB,lAC,lBC,true)\n          break;\n        case 2: // triangle ABC rectangle en B dont on connait AB et BC \n          lBC = randint(70, 80) / 10\n          lAB = calcul(randint(46, 60) / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cB = cercle(B, lBC)\n          dAB = droite(A, B)\n          dBC = droiteParPointEtPerpendiculaire(B, dAB)\n          C = pointIntersectionLC(dBC, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), afficheLongueurSegment(C, B, 'black', 1), codageAngleDroit(A, B, CC))\n          objetsCorrection.push(cible, traceCompas(B, C, 30, 'gray', 1, 2), codageAngleDroit(A, B, C), afficheLongueurSegment(B, A), afficheLongueurSegment(C, B))\n          texteCorr += `Pour cette construction, nous avons utilisé la règle graduée, l'équerre et le compas.<br>`\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n\n        IEP.triangleRectangle2Cotes(nom,lAB,lBC,true)\n          break\n        case 3: // triangle ABC isocèle en A\n          lBC = calcul(randint(35, 45) / 10)\n          lAB = calcul(randint(46, 60) / 10)\n          lAC = lAB\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cA = cercle(A, lAC)\n          cB = cercle(B, lBC)\n          C = pointIntersectionCC(cA, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), afficheLongueurSegment(C, B, 'black', 1), codeSegments('||', 'black', A, B, A, CC))\n          objetsCorrection.push(cible, traceCompas(A, C, 30, 'gray', 1, 2), traceCompas(B, C, 30, 'gray', 1, 2), afficheLongueurSegment(B, A), afficheLongueurSegment(C, B), codeSegments('||', 'black', A, B, A, C), afficheLongueurSegment(A, C))\n          texteCorr += `Pour cette construction, nous avons utilisé le compas et la règle graduée.<br>`\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          montriangle=IEP.triangle3longueurs(nom,lAB,lAC,lBC,true)\n          IEP.segmentCodage(montriangle[0],montriangle[1],{codage:'\\\\\\\\'})\n          IEP.segmentCodage(montriangle[0],montriangle[2],{codage:'\\\\\\\\'})\n          break;\n        case 4: // triangle ABC recatangle isocèle en B\n          lAB = calcul(randint(46, 60) / 10)\n          lBC = lAB\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cB = cercle(B, lBC)\n          dAB = droite(A, B)\n          dBC = droiteParPointEtPerpendiculaire(B, dAB)\n          C = pointIntersectionLC(dBC, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), codeSegments('||', 'black', A, B, B, CC), codageAngleDroit(A, B, CC))\n          objetsCorrection.push(cible, traceCompas(B, C, 30, 'gray', 1, 2), codageAngleDroit(A, B, C), afficheLongueurSegment(B, A), codeSegments('||', 'black', A, B, B, C))\n          texteCorr += `Pour cette construction, nous avons utilisé l'équerre et la règle graduée.<br>`\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n         montriangle=IEP.triangleRectangle2Cotes(nom,lAB,lAB,true)\n         IEP.segmentCodage(montriangle[0],montriangle[1],{codage:'\\\\\\\\'})\n          IEP.segmentCodage(montriangle[1],montriangle[2],{codage:'\\\\\\\\'})\n          break\n        case 5: // triangle équilatéral\n          lAB = calcul(randint(46, 60) / 10)\n          lAC = lAB\n          lBC = lAB\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cA = cercle(A, lAC)\n          cB = cercle(B, lBC)\n          C = pointIntersectionCC(cA, cB, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), codeSegments('||', 'black', A, B, B, CC, A, CC))\n          objetsCorrection.push(cible, traceCompas(A, C, 30, 'gray', 1, 2), traceCompas(B, C, 30, 'gray', 1, 2), afficheLongueurSegment(B, A), codeSegments('||', 'black', A, B, B, C, A, C))\n          texteCorr += `Pour cette construction, nous avons utilisé le compas et la règle graduée.<br>`\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangleEquilateral(nom,lAB,true)\n          break;\n        case 6: //triangle ABC dont on connait AB et AC et l'angle BAC\n          lAB = calcul(randint(46, 60) / 10)\n          lAC = randint(40, 60) / 10\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1], 'right')\n          C = similitude(B, A, randint(8, 24) * 5, lAC / lAB, sommets[2], 'above')\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(codeAngle(B, A, CC, 1.1), afficheLongueurSegment(B, A), texteParPoint(nombreAvecEspace(Math.round(angle(B, A, C))) + `°`, similitude(B, A, angle(B, A, C) / 2, 1 / lAB + 0.1)), afficheLongueurSegment(A, C, 'black', 1))\n          objetsCorrection.push(cible, afficheLongueurSegment(B, A), afficheMesureAngle(B, A, C, 'black', 1), afficheLongueurSegment(A, C, 'black', 1))\n          texteCorr += `Pour cette construction, nous avons utilisé le rapporteur et la règle graduée.<br>`\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangle2longueurs1angle(nom,lAB,lAC,Math.round(angle(B, A, C)),true)\n          break\n        case 7: // triangle ABC dont ont connais AB et les deux angles adjacents \n          lAB = calcul(randint(46, 60) / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          dAB = droite(A, B)\n          dAC = rotation(dAB, A, randint(8, 14) * 5)\n          dBC = rotation(dAB, B, -randint(8, 12) * 5)\n          C = pointIntersectionDD(dAC, dBC, sommets[2])\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(codeAngle(B, A, CC, 1.1), texteParPoint(nombreAvecEspace(Math.round(angle(B, A, C))) + `°`, similitude(B, A, angle(B, A, C) / 2, 1 / lAB + 0.1)), codeAngle(A, B, CC, 1.1), texteParPoint(nombreAvecEspace(Math.round(angle(A, B, C))) + `°`, similitude(A, B, -angle(A, B, C) / 2, 1 / lAB + 0.1)))\n          objetsCorrection.push(cible, afficheLongueurSegment(B, A), afficheMesureAngle(B, A, C, 'black', 1), afficheMesureAngle(A, B, C, 'black', 1))\n          texteCorr += `Pour cette construction, nous avons utilisé le rapporteur.<br>`\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangle1longueur2angles(sommets,lAB,Math.round(angle(B, A, C)),Math.round(angle(A, B, C)))\n          animation= IEP.htmlBouton(this.numeroExercice, i)\n          break\n        case 8: // triangle ABC rectangle en B dont on connait AB et l'hypoténuse AC \n          lAC = randint(70, 80) / 10\n          lAB = calcul(randint(46, 60) / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          cA = cercle(A, lAC)\n          dAB = droite(A, B)\n          dBC = droiteParPointEtPerpendiculaire(B, dAB)\n          C = pointIntersectionLC(dBC, cA, sommets[2], 1)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(afficheLongueurSegment(B, A), afficheLongueurSegment(A, C, 'black', 1), codageAngleDroit(A, B, CC))\n          objetsCorrection.push(cible, traceCompas(A, C, 30, 'gray', 1, 2), codageAngleDroit(A, B, C), afficheLongueurSegment(B, A), afficheLongueurSegment(A, C))\n          texteCorr += `Pour cette construction, nous avons utilisé la règle graduée, l'équerre et le compas.<br>`\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangleRectangleCoteHypotenuse(nom,lAB,lAC,true)\n          break\n        case 9: // triangle ABC dont ont connais AB un angle adjacent et l'angle opposé\n          lAB = calcul(randint(46, 60) / 10)\n          B = pointAdistance(A, lAB, randint(-45, 45), sommets[1])\n          B.positionLabel = 'right'\n          dAB = droite(A, B)\n          dAC = rotation(dAB, A, randint(8, 14) * 5)\n          dBC = rotation(dAB, B, -randint(8, 12) * 5)\n          C = pointIntersectionDD(dAC, dBC, sommets[2])\n          lAC=longueur(A,C)\n          C.positionLabel = 'above'\n          CC = point(C.x + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, C.y + randint(-5, 5, [-2, -1, 0, 1, 2]) / 10, sommets[2])\n          cellule = celluleAleaRonde(5)\n          result = dansLaCibleRonde(C.x, C.y, 5, 0.3, cellule)\n          cible = cibleRonde({ x: result[0], y: result[1], rang: 5, taille: 0.3 })\n          objetsEnonce.push(cible, segmentAvecExtremites(A, B), labelPoint(A, B))\n          objetsEnonceml.push(codeAngle(B, A, CC, 1.1), afficheLongueurSegment(B, A), texteParPoint(nombreAvecEspace(Math.round(angle(B, A, C))) + `°`, similitude(B, A, angle(B, A, C) / 2, 1 / lAB + 0.1)), codeAngle(A, CC, B, 1.1), texteParPoint(nombreAvecEspace(Math.round(angle(A, C, B))) + `°`, similitude(A, CC, angle(A, CC, B) / 2, 1 / lAC + 0.1)))\n          objetsCorrection.push(cible, afficheLongueurSegment(B, A), afficheMesureAngle(B, A, C, 'black', 1), afficheMesureAngle(A, B, C, 'black', 1), afficheMesureAngle(A, C, B, 'black', 1))\n          texteCorr += `Pour cette construction, il a fallu calculer l'angle $\\\\widehat{${sommets[0] + sommets[1] + sommets[2]}}$.<br>$\\\\widehat{${sommets[0] + sommets[1] + sommets[2]}}=180-\\\\widehat{${sommets[1] + sommets[0] + sommets[2]}}-\\\\widehat{${sommets[0] + sommets[2] + sommets[1]}}=180-${Math.round(angle(B, A, C))}-${Math.round(angle(B, C, A))}=${Math.round(angle(A, B, C))}$.<br>Nous avons utilisé le rapporteur pour effectuer cette construction.<br>`\n          texteCorr += `Le point ${sommets[2]} se trouve dans le secteur ${cellule}.<br>`\n          IEP.triangle1longueur2angles(nom,lAB,Math.round(angle(B, A, C)),Math.round(angle(C, B, A)),true)\n\n      }\n      T = polygoneAvecNom(A, B, C)\n      TT = polygoneAvecNom(A, B, CC)\n      objetsEnonceml.push(TT[0], TT[1])\n      objetsCorrection.push(T[0], T[1])\n      paramsEnonceml = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 3), ymin: Math.min(A.y - 1, B.y - 1, C.y - 3), xmax: Math.max(A.x + 1, B.x + 1, C.x + 3), ymax: Math.max(A.y + 1, B.y + 1, C.y + 3), pixelsParCm: 20, scale: 0.58, mainlevee: true, amplitude: 0.3 }\n      paramsEnonce = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 3), ymin: Math.min(A.y - 1, B.y - 1, C.y - 3), xmax: Math.max(A.x + 1, B.x + 1, C.x + 3), ymax: Math.max(A.y + 1, B.y + 1, C.y + 3), pixelsParCm: 30, scale: 1, mainlevee: false, amplitude: 1 }\n      paramsCorrection = { xmin: Math.min(A.x - 1, B.x - 1, C.x - 3), ymin: Math.min(A.y - 1, B.y - 1, C.y - 3), xmax: Math.max(A.x + 1, B.x + 1, C.x + 3), ymax: Math.max(A.y + 1, B.y + 1, C.y + 3), pixelsParCm: 30, scale: 1 }\n      texte += mathalea2d(paramsEnonceml, objetsEnonceml) + mathalea2d(paramsEnonce, objetsEnonce)\n      texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n      texteCorr+='<br>'+IEP.htmlBouton(this.numeroExercice, i)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  //\tthis.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  this.besoinFormulaire2Numerique = [\n    \"Type de cahier\",\n    3,\n    `1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`,\n  ];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}