{"version":3,"sources":["webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/exercices/Profs/P011.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","Exercice_zero_mathalea2d","pas_de_version_HMTL","sup","sup2","sup3","typeExercice","params","split","type","parseInt","nom","anim","Alea2iep","triangle","objets_enonceml","i","length","parseFloat","triangle3longueurs","push","afficheLongueurSegment","triangle1longueur2angles","afficheMesureAngle","triangleRectangle2Cotes","codageAngleDroit","triangleRectangleCoteHypotenuse","triangleEquilateral","codeSegments","triangle2longueurs1angle","poly","polygoneAvecNom","params_enonce","xmin","Math","min","x","ymin","y","xmax","max","ymax","pixelsParCm","scale","mainlevee","amplitude","texte","mathalea2d","htmlBouton","besoinFormulaire2Texte","besoinFormulaire3Texte"],"mappings":"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","file":"js/42.4b75b3f5952509215f00.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenu, combinaisonListes } from '../../modules/outils.js'\nimport { mathalea2d, polygoneAvecNom, codeSegments, codageAngleDroit, afficheMesureAngle, codeAngle, afficheLongueurSegment } from '../../modules/2d.js'\nimport Alea2iep from '../../modules/Alea2iep.js'\n\nexport const titre = 'Construis mon triangle'\n\nexport default function Exercice_zero_mathalea2d () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 1 // Ici le nombre de questions\n  this.nbQuestionsModifiable = false // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = true // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.sup = 1\n  this.sup2 = 'ABC'\n  this.sup3 = '3 4 5'\n  this.typeExercice = 'IEP'\n\n  this.nouvelleVersion = function () {\n    const params = this.sup3.split(' ')\n    const type = parseInt(this.sup)\n    const nom = this.sup2\n    const anim = new Alea2iep()\n    let triangle\n    const objets_enonceml = []\n    for (let i = 0; i < params.length; i++) {\n      params[i] = parseFloat(params[i])\n    }\n    switch (type) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n      case 1:\n\n        triangle = anim.triangle3longueurs(nom, params[0], params[1], params[2], true, true)\n        objets_enonceml.push(afficheLongueurSegment(triangle[1], triangle[0]), afficheLongueurSegment(triangle[2], triangle[1]), afficheLongueurSegment(triangle[0], triangle[2]))\n        break\n\n      case 2:\n        triangle = anim.triangle1longueur2angles(nom, params[0], params[1], params[2], true, true)\n        objets_enonceml.push(afficheLongueurSegment(triangle[1], triangle[0]), afficheMesureAngle(triangle[2], triangle[0], triangle[1]), afficheMesureAngle(triangle[0], triangle[1], triangle[2]))\n\n        break\n\n      case 3:\n        triangle = anim.triangleRectangle2Cotes(nom, params[0], params[1], true)\n        objets_enonceml.push(afficheLongueurSegment(triangle[1], triangle[0]), afficheLongueurSegment(triangle[2], triangle[1]), codageAngleDroit(triangle[0], triangle[1], triangle[2]))\n        break\n\n      case 4:\n        triangle = anim.triangleRectangleCoteHypotenuse(nom, params[0], params[1], true)\n        objets_enonceml.push(afficheLongueurSegment(triangle[1], triangle[0]), afficheLongueurSegment(triangle[0], triangle[2]), codageAngleDroit(triangle[0], triangle[1], triangle[2]))\n        break\n\n      case 5:\n        triangle = anim.triangleEquilateral(nom, params[0], true)\n        objets_enonceml.push(afficheLongueurSegment(triangle[1], triangle[0]), codeSegments('||', 'red', triangle[0], triangle[1], triangle[2], triangle[0], triangle[1], triangle[2]))\n        break\n\n      case 6:\n        triangle = anim.triangle2longueurs1angle(nom, params[0], params[1], params[2], true)\n        objets_enonceml.push(afficheLongueurSegment(triangle[0], triangle[1]), afficheLongueurSegment(triangle[0], triangle[2]), afficheMesureAngle(triangle[1], triangle[0], triangle[2]))\n        break\n    }\n    const poly = polygoneAvecNom(triangle)\n    objets_enonceml.push(poly[0], poly[1])\n    const params_enonce = {\n      xmin: Math.min(triangle[0].x - 1, triangle[1].x - 1, triangle[2].x - 1),\n      ymin: Math.min(triangle[0].y - 1, triangle[1].y - 1, triangle[2].y - 1),\n      xmax: Math.max(triangle[0].x + 1, triangle[1].x + 1, triangle[2].x + 1),\n      ymax: Math.max(triangle[0].y + 1, triangle[1].y + 1, triangle[2].y + 1),\n      pixelsParCm: 20,\n      scale: 1,\n      mainlevee: true,\n      amplitude: 0.5\n    }\n    const texte = mathalea2d(params_enonce, objets_enonceml) + '<br>' + anim.htmlBouton(this.numeroExercice)\n    this.contenu = texte\n  }\n  this.besoinFormulaireNumerique = ['Type de triangle', 6, '1 : Triangle par 3 longueurs\\n 2 : Triangle par 1 longueur et 2 angles\\n 3 : Triangle rectangle 2 côtés angle droit\\n 4 : Triangle rectangle 1 coté et l\\'hypoténuse\\n 5 : Triangle équilatéral\\n 6 : Triangle 2 longueurs et l\\'angle entre ces côtés']\n  this.besoinFormulaire2Texte = ['Nom du triangle', 'ABC par exemple']\n  this.besoinFormulaire3Texte = ['paramètres séparés par des espaces', '3 4 5']\n} // Fin de l'exercice.\n"],"sourceRoot":""}