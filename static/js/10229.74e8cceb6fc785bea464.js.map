{"version":3,"sources":["webpack://mathalea/./src/js/modules/Grandeur.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/gestionUrl.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["Grandeur","constructor","mesure","unite","this","uniteParsee","parseUnite","puissanceUnite","uniteDeReference","prefixe","puissancePrefixe","convertirEn","unite2","unite2Parsee","calcul","console","error","estEgal","u1","u2","avantPuissanceUnite","indexOf","split","substring","length","prefixeToPuissance","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","style","forEach","paire","exec","key","value","addText","text","appendChild","window","document","createTextNode","get","id","strict","TypeError","getElementById","Error","create","tag","attrs","txtContent","createElement","attr","className","class","setAttribute","addElement","parent","content","async","fetchHtmlToElement","url","element","response","fetch","innerHTML","addFetchHtmlToParent","exerciceInteractif","exercice","context","amcType","exerciceNumerique","exerciceQcm","interactifType","addEventListener","i","nbQuestions","objetFigure","figures","figSvg","hasMathaleaListener","mouseOverSvgEffect","mouseOutSvgEffect","mouseSvgClick","etat","margin","button","querySelector","numeroExercice","border","removeEventListener","event","nbBonnesReponses","nbMauvaisesReponses","nbFiguresCliquees","eltFeedback","eltExercice","erreur","eltFigure","push","solution","afficheScore","exerciceCliqueFigure","correctionInteractive","classList","add","exerciceCustom","engine","ComputeEngine","besoinDe2eEssai","autoCorrection","spanReponseLigne","champTexte","reponses","Array","isArray","reponse","valeur","resultat","saisie","param","formatInteractif","replaceAll","toString","replace","same","canonical","parse","saisieParsee","num","Fraction","parseInt","estUneSimplification","egal","fSaisie","den","grandeurSaisie","saisieToGrandeur","fontSize","color","fontWeight","readOnly","exerciceMathLive","log","titre","$","checkbox","nbQuestionsValidees","nbQuestionsNonValidees","indiceFeedback","nbBonnesReponsesAttendues","k","propositions","statut","proposition","indice","label","check","backgroundColor","checked","typeFeedback","feedback","messageFeedback","message","type","querySelectorAll","uicheck","propositionsQcm","texte","texteCorr","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","vertical","ajouteChampTexte","texteApres","inline","numeric","interactif","ajouteChampTexteMathLive","setReponse","valeurs","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","parseFloat","split2","divExercice","divScore","userId","getUserIdFromUrl","method","mode","credentials","headers","body","JSON","stringify","isSubmitUserId","isVerifResult","prof1","prof2","prof3","classe1","classe2","eleve1","eleve2","exId","sup","sup2","sup3","score","isUserIdOk","display","getFilterFromUrl","queryString","location","search","URLSearchParams","getVueFromUrl","getUrlVars","tableauStringsExercicesParametres","URL","href","searchParams","getAll","tableauObjetsExercices","indiceExercice","CleValeur","ObjetParametres","shift","isNaN","s","s2","s3","n","video","v","setUrl","history","pushState","urlRacine","urlParams","set","entries","urlRewrite","entry","slice","getUrlSearch","types","addFeedback","container","includes","cssDiv","div","cssIcon","remove","divTitre","test","messageUtilisateur","code","width"],"mappings":"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","file":"js/10229.74e8cceb6fc785bea464.js","sourcesContent":["import { calcul } from './outils.js'\n\n/**\n * @class\n * @param {number} mesure\n * @param {string} unite (cm, cm^2, m^3, L, kg, dam^2)\n * @author Jean-Claude Lhote et Sébastien Lozano\n*/\nclass Grandeur {\n  constructor (mesure, unite) {\n    this.mesure = mesure\n    this.unite = unite\n    const uniteParsee = parseUnite(unite)\n    this.puissanceUnite = uniteParsee.puissanceUnite\n    this.uniteDeReference = uniteParsee.uniteDeReference\n    this.prefixe = uniteParsee.prefixe\n    this.puissancePrefixe = uniteParsee.puissancePrefixe\n  }\n\n  /**\n   *\n   * @param {string} unite2 (cm, cm^2...)\n   * @returns {Longueur}\n   */\n  convertirEn (unite2) {\n    const unite2Parsee = parseUnite(unite2)\n    if (unite2Parsee.puissanceUnite === this.puissanceUnite && unite2Parsee.uniteDeReference === this.uniteDeReference) {\n      return new Grandeur(calcul(this.mesure * 10 ** ((this.puissancePrefixe - unite2Parsee.puissancePrefixe) * this.puissanceUnite)), unite2)\n    } else {\n      console.error('Conversion impossible')\n    }\n  }\n\n  estEgal (unite2) {\n    const u1 = this.convertirEn(this.uniteDeReference)\n    const u2 = unite2.convertirEn(this.uniteDeReference)\n    return u1.mesure === u2.mesure\n  }\n}\n\nexport default Grandeur\n\nfunction parseUnite (unite) {\n  let puissanceUnite, avantPuissanceUnite\n  if (unite.indexOf('^') > 0) {\n    puissanceUnite = unite.split('^')[1]\n    avantPuissanceUnite = unite.split('^')[0]\n  } else {\n    puissanceUnite = 1\n    avantPuissanceUnite = unite\n  }\n  const prefixe = avantPuissanceUnite.substring(0, avantPuissanceUnite.length - 1)\n  const puissancePrefixe = prefixeToPuissance(prefixe)\n  const uniteDeReference = unite.substring(prefixe.length)\n  return { prefixe, uniteDeReference, puissanceUnite, puissancePrefixe }\n}\n\nfunction prefixeToPuissance (prefixe) {\n  let puissancePrefixe\n  switch (prefixe) {\n    case 'm':\n      puissancePrefixe = -3\n      break\n    case 'c':\n      puissancePrefixe = -2\n      break\n    case 'd':\n      puissancePrefixe = -1\n      break\n    case '':\n      puissancePrefixe = 0\n      break\n    case 'da':\n      puissancePrefixe = 1\n      break\n    case 'h':\n      puissancePrefixe = 2\n      break\n    case 'k':\n      puissancePrefixe = 3\n      break\n    case 'M':\n      puissancePrefixe = 6\n      break\n    case 'G':\n      puissancePrefixe = 9\n      break\n    case 'T':\n      puissancePrefixe = 12\n      break\n    case '\\\\mu{}':\n      puissancePrefixe = -6\n      break\n    case 'n':\n      puissancePrefixe = -9\n      break\n    default:\n      puissancePrefixe = false\n  }\n  return puissancePrefixe\n}\n","/* global HTMLElement SVGElement Element fetch */\n/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * Les styles doivent être écrits en camelCase dans le version JS et non CSS\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nexport function setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (const prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n\n/**\n * S'assure que elt est bien un élément du DOM et le retourne (throw sinon)\n * @param {string|HTMLElement|SVGElement|Element} elt Si c'est une string on ira chercher l'élément avec getElementById\n * @param {string} [type] pour restreindre à un type d'élément, html|svg\n * @return {HTMLElement|SVGElement|Element}\n * @throws {TypeError} Si elt n'était pas un élément du type voulu\n */\nexport function enforceElt (elt, type) {\n  if (typeof elt === 'string') {\n    elt = document.getElementById(elt)\n    if (!elt) throw Error(`Aucun élément d’id ${elt}`)\n  }\n  switch (type) {\n    case 'html':\n      if (elt instanceof HTMLElement) return elt\n      throw TypeError('HTMLElement indispensable manquant')\n    case 'svg':\n      if (elt instanceof SVGElement) return elt\n      throw TypeError('SVGElement indispensable manquant')\n    default:\n      if (elt instanceof Element) return elt\n  }\n  throw TypeError('Element indispensable manquant')\n}\n\n/**\n *\n * @param {string} url du fichier HTML\n * @param {HTMLElement} element dont le innerHTML va être remplacé par le contenu du fichier\n */\nexport async function fetchHtmlToElement (url, element) {\n  const response = await fetch(url)\n  element.innerHTML = await response.text()\n}\n\n/**\n *\n * @param {string} url du fichier HTML\n * @param {element} parent dans lequel l'élément va être ajouté en dernier enfant\n * @param {string=} tag 'div' par défaut\n * @param {Object=} attrs Les attributs\n * @returns {HTMLElement} L'élément ajouté\n */\nexport async function addFetchHtmlToParent (url, parent, tag = 'div', attrs) {\n  const child = addElement(parent, tag, attrs)\n  return fetchHtmlToElement(url, child)\n}\n","/* global fetch $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\nimport { addElement, get, setStyles } from './dom.js'\nimport { ComputeEngine, parse } from '@cortex-js/math-json'\nimport Fraction from './Fraction.js'\nimport Grandeur from './Grandeur.js'\nimport { getUserIdFromUrl } from './gestionUrl.js'\n\nexport function exerciceInteractif (exercice) {\n  // passage amsType num à string cf commit 385b5ea\n  if (context.isAmc) {\n    if (exercice.amcType === 'AMCNum' || exercice.amcType === 'AMCOpenNum') exerciceNumerique(exercice)\n    if (exercice.amcType === 'qcmMono' || exercice.amcType === 'qcmMult') exerciceQcm(exercice)\n  } else if (context.isHtml && !context.isDiaporama) {\n    if (exercice.interactifType === 'qcm')exerciceQcm(exercice)\n    if (exercice.interactifType === 'numerique')exerciceNumerique(exercice)\n    if (exercice.interactifType === 'cliqueFigure')exerciceCliqueFigure(exercice)\n    if (exercice.interactifType === 'custom') exerciceCustom(exercice)\n    // Pour les exercices de type custom, on appelle la méthode correctionInteractive() définie dans l'exercice\n    if (exercice.interactifType === 'mathLive') exerciceMathLive(exercice)\n  }\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnValidationEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  console.log('Dans ExerciceQcm : ', exercice.nbQuestions, exercice.titre, exercice.numeroExercice, exercice.id)\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnValidationEx${exercice.numeroExercice}-${exercice.id}`)\n    if (button) {\n      if (!button.hasMathaleaListener) {\n        button.addEventListener('click', event => {\n          let nbQuestionsValidees = 0\n          let nbQuestionsNonValidees = 0\n          for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n            let nbBonnesReponses = 0\n            let nbMauvaisesReponses = 0\n            let nbBonnesReponsesAttendues = 0\n            let indiceFeedback\n            // Compte le nombre de réponses justes attendues\n            for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n              if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n            }\n            const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n            exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n              const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n              const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n              if (proposition.statut) {\n                label.style.backgroundColor = monVert\n                if (check.checked) {\n                  nbBonnesReponses++\n                  indiceFeedback = indice\n                }\n              } else if (check.checked === true) {\n                label.style.backgroundColor = monRouge\n                nbMauvaisesReponses++\n                indiceFeedback = indice\n              }\n            })\n            let typeFeedback = 'positive'\n            if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n              spanReponseLigne.innerHTML = '😎'\n              nbQuestionsValidees++\n            } else {\n              spanReponseLigne.innerHTML = '☹️'\n              typeFeedback = 'error'\n              nbQuestionsNonValidees++\n            }\n            spanReponseLigne.style.fontSize = 'large'\n            if (indiceFeedback > -1 && exercice.autoCorrection[i].propositions[indiceFeedback].feedback) {\n              const eltFeedback = get(`feedbackEx${exercice.numeroExercice}Q${i}`, false)\n              if (eltFeedback) eltFeedback.innerHTML = ''\n              messageFeedback({\n                id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n                message: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n                type: typeFeedback\n              })\n            }\n          }\n          const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n          uichecks.forEach(function (uicheck) {\n            uicheck.classList.add('read-only')\n          })\n          button.classList.add('disabled')\n          afficheScore(exercice, nbQuestionsValidees, nbQuestionsNonValidees)\n        })\n        button.hasMathaleaListener = true\n      }\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n// exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  if (elimineDoublons(exercice.autoCorrection[i].propositions)) {\n    console.log('doublons trouvés')\n  }\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].options !== undefined) {\n        if (exercice.autoCorrection[i].options.vertical) {\n          texte += '<br>'\n          texteCorr += '<br>'\n        }\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnValidationEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceNumerique (exercice) {\n  console.log('Dans ExerciceNumerique : ', exercice.nbQuestions, exercice.titre, exercice.numeroExercice, exercice.id)\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnValidationEx${exercice.numeroExercice}-${exercice.id}`)\n    if (button) {\n      if (!button.hasMathaleaListener) {\n        button.addEventListener('click', event => {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          for (const i in exercice.autoCorrection) {\n            const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n            // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n            const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n            if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.', ',')) {\n              spanReponseLigne.innerHTML = '😎'\n              nbBonnesReponses++\n            } else {\n              spanReponseLigne.innerHTML = '☹️'\n              nbMauvaisesReponses++\n            }\n            champTexte.readOnly = true\n            spanReponseLigne.style.fontSize = 'large'\n          }\n          button.classList.add('disabled')\n          afficheScore(exercice, nbBonnesReponses, nbMauvaisesReponses)\n        })\n        button.hasMathaleaListener = true\n      }\n    }\n  })\n}\n\nexport function exerciceCliqueFigure (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // Dès que l'exercice est affiché, on rajoute des listenners sur chaque éléments de this.figures.\n    for (let i = 0; i < exercice.nbQuestions; i++) {\n      for (const objetFigure of exercice.figures[i]) {\n        const figSvg = document.getElementById(objetFigure.id)\n        if (!figSvg.hasMathaleaListener) {\n          figSvg.addEventListener('mouseover', mouseOverSvgEffect)\n          figSvg.addEventListener('mouseout', mouseOutSvgEffect)\n          figSvg.addEventListener('click', mouseSvgClick)\n          figSvg.etat = false\n          figSvg.style.margin = '10px'\n          figSvg.hasMathaleaListener = true\n          // On enregistre que l'élément a déjà un listenner pour ne pas lui remettre le même à l'appui sur \"Nouvelles Données\"\n        }\n      }\n    }\n    // Gestion de la correction\n    const button = document.querySelector(`#btnValidationEx${exercice.numeroExercice}-${exercice.id}`)\n    if (button) {\n      if (!button.hasMathaleaListener) {\n        button.addEventListener('click', event => {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbFiguresCliquees = 0\n          for (let i = 0; i < exercice.nbQuestions; i++) {\n          // Le get est non strict car on sait que l'élément n'existe pas à la première itération de l'exercice\n            let eltFeedback = get(`resultatCheckEx${exercice.numeroExercice}Q${i}`, false)\n            // On ajoute le div pour le feedback\n            if (!eltFeedback) {\n              const eltExercice = get(`exercice${exercice.numeroExercice}`)\n              eltFeedback = addElement(eltExercice, 'div', { id: `resultatCheckEx${exercice.numeroExercice}Q${i}` })\n            }\n            setStyles(eltFeedback, 'marginBottom: 20px')\n            if (eltFeedback) eltFeedback.innerHTML = ''\n            const figures = []\n            let erreur = false // Aucune erreur détectée\n            for (const objetFigure of exercice.figures[i]) {\n              const eltFigure = document.getElementById(objetFigure.id)\n              figures.push(eltFigure)\n              eltFigure.removeEventListener('mouseover', mouseOverSvgEffect)\n              eltFigure.removeEventListener('mouseout', mouseOutSvgEffect)\n              eltFigure.removeEventListener('click', mouseSvgClick)\n              eltFigure.hasMathaleaListener = false\n              if (eltFigure.etat) nbFiguresCliquees++\n              if (eltFigure.etat !== objetFigure.solution) erreur = true\n            }\n            if (nbFiguresCliquees > 0 && !erreur) {\n              eltFeedback.innerHTML = '😎'\n              nbBonnesReponses++\n            } else {\n              eltFeedback.innerHTML = '☹️'\n              nbMauvaisesReponses++\n            }\n          }\n          afficheScore(exercice, nbBonnesReponses, nbMauvaisesReponses)\n        })\n        button.hasMathaleaListener = true\n      }\n    }\n\n    function mouseOverSvgEffect () {\n      this.style.border = '1px solid #1DA962'\n    }\n    function mouseOutSvgEffect () {\n      this.style.border = 'none'\n    }\n    function mouseSvgClick () {\n      if (this.etat) {\n        // Déja choisi, donc on le réinitialise\n        this.style.border = 'none'\n        this.addEventListener('mouseover', mouseOverSvgEffect)\n        this.addEventListener('mouseout', mouseOutSvgEffect)\n        this.addEventListener('click', mouseSvgClick)\n        this.etat = false\n      } else {\n        // Passe à l'état choisi donc on désactive les listenners pour over et pour out\n        this.removeEventListener('mouseover', mouseOverSvgEffect)\n        this.removeEventListener('mouseout', mouseOutSvgEffect)\n        this.style.border = '3px solid #f15929'\n        this.etat = true\n      }\n    }\n  })\n}\n\n/**\n *\n * @param {Exercice} exercice\n * @param {number} i\n * @param {*} param2\n * @returns {string} code HTML du champ texte avec identifiant champTexteEx__Q__ et le span pour le résultat de la question\n */\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true, indice } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n      <div class=\"inline  field\" >\n      <label>${texte}</label>\n        <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}${indice || ''}\" >\n        <span>${texteApres}</span>\n        <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n      </div>\n      </div>`\n  } else {\n    return ''\n  }\n}\nexport function ajouteChampTexteMathLive (exercice, i, style = '') {\n  if (context.isHtml && exercice.interactif) {\n    if (style === '') {\n      return `<math-field virtual-keyboard-mode=manual id=\"champTexteEx${exercice.numeroExercice}Q${i}\"></math-field><div style=\"margin-top:10px\" id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></div>`\n    } else return `<math-field virtual-keyboard-mode=manual class=\"${style}\" id=\"champTexteEx${exercice.numeroExercice}Q${i}\"></math-field><div style=\"margin-top:10px\" id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'array || number'} a\n */\nexport function setReponse (exercice, i, valeurs, { digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0, formatInteractif = 'calcul' } = {}) {\n  let reponses = []\n  if (!Array.isArray(valeurs)) {\n    reponses = [valeurs]\n  } else {\n    reponses = valeurs\n  }\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx, formatInteractif }\n  exercice.autoCorrection[i].reponse.valeur = reponses\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnValidationEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceCustom (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnValidationEx${exercice.numeroExercice}-${exercice.id}`)\n    if (button) {\n      if (!button.hasMathaleaListener) {\n        button.addEventListener('click', event => {\n        // Le get est non strict car on sait que l'élément n'existe pas à la première itération de l'exercice\n          let eltFeedback = get(`feedbackEx${exercice.numeroExercice}`, false)\n          // On ajoute le div pour le feedback\n          if (!eltFeedback) {\n            const eltExercice = get(`exercice${exercice.numeroExercice}`)\n            eltFeedback = addElement(eltExercice, 'div', { id: `feedbackEx${exercice.numeroExercice}` })\n          }\n          setStyles(eltFeedback, 'marginBottom: 20px')\n          if (eltFeedback) eltFeedback.innerHTML = ''\n          // On utilise la correction définie dans l'exercice\n          exercice.correctionInteractive(eltFeedback)\n          button.classList.add('disabled')\n        })\n        button.hasMathaleaListener = true\n      }\n    }\n  })\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnValidationEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses saisies dans les math-field\n * @param {object} exercice\n */\nexport function exerciceMathLive (exercice) {\n  const engine = new ComputeEngine()\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnValidationEx${exercice.numeroExercice}-${exercice.id}`)\n    if (button) {\n      if (!button.hasMathaleaListener) {\n        button.addEventListener('click', event => {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let besoinDe2eEssai = false\n          for (const i in exercice.autoCorrection) {\n            const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n            // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n            const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n            let reponses = []\n            if (!Array.isArray(exercice.autoCorrection[i].reponse.valeur)) {\n              reponses = [exercice.autoCorrection[i].reponse.valeur]\n            } else {\n              reponses = exercice.autoCorrection[i].reponse.valeur\n            }\n            let resultat = 'KO'\n            let saisie = champTexte.value\n            for (let reponse of reponses) {\n            // Pour le calcul littéral on remplace dfrac en frac\n              if (exercice.autoCorrection[i].reponse.param.formatInteractif === 'calcul') { // Le format par défautt\n                if (typeof reponse === 'string') {\n                  reponse = reponse.replaceAll('dfrac', 'frac')\n                // A réfléchir, est-ce qu'on considère que le début est du brouillon ?\n                // saisie = neTientCompteQueDuDernierMembre(saisie)\n                }\n                // Pour le calcul numérique, on transforme la saisie en nombre décimal\n                if (typeof reponse === 'number') saisie = saisie.toString().replace(',', '.')\n                if (engine.same(engine.canonical(parse(saisie)), engine.canonical(parse(reponse)))) {\n                  resultat = 'OK'\n                }\n                // Pour les exercices de simplifications de fraction\n              } else if (exercice.autoCorrection[i].reponse.param.formatInteractif === 'fractionPlusSimple') {\n                const saisieParsee = parse(saisie)\n                if (saisieParsee) {\n                  if (saisieParsee[1].num && saisieParsee[2].num) {\n                    const fSaisie = new Fraction(parseInt(saisieParsee[1].num), parseInt(saisieParsee[2].num))\n                    if (fSaisie.estUneSimplification(reponse)) resultat = 'OK'\n                  }\n                }\n                // Pour les exercices de calcul où on attend une fraction peu importe son écriture (3/4 ou 300/400 ou 30 000/40 000...)\n              } else if (exercice.autoCorrection[i].reponse.param.formatInteractif === 'fractionEgale') {\n                const saisieParsee = parse(saisie)\n                if (saisieParsee) {\n                  if (saisieParsee[1].num && saisieParsee[2].num) {\n                    const fSaisie = new Fraction(parseInt(saisieParsee[1].num), parseInt(saisieParsee[2].num))\n                    if (fSaisie.egal(reponse)) resultat = 'OK'\n                  }\n                }\n                // Pour les exercices où l'on attend un écriture donnée d'une fraction\n              } else if (exercice.autoCorrection[i].reponse.param.formatInteractif === 'fraction') {\n                const saisieParsee = parse(saisie)\n                if (saisieParsee) {\n                  if (saisieParsee[1].num && saisieParsee[2].num) {\n                    const fSaisie = new Fraction(parseInt(saisieParsee[1].num), parseInt(saisieParsee[2].num))\n                    if (fSaisie.num === reponse.num && fSaisie.den === reponse.den) resultat = 'OK'\n                  }\n                }\n                // Pour les exercices où l'on attend une mesure avec une unité au choix\n              } else if (exercice.autoCorrection[i].reponse.param.formatInteractif === 'longueur') {\n                const grandeurSaisie = saisieToGrandeur(saisie)\n                if (grandeurSaisie) {\n                  if (grandeurSaisie.estEgal(reponse)) resultat = 'OK'\n                } else {\n                  resultat = 'essaieEncore'\n                }\n                // Pour les exercice où la saisie doit correspondre exactement à la réponse\n              } else { // Format texte\n                if (saisie === reponse) {\n                  resultat = 'OK'\n                }\n              }\n            }\n            if (resultat === 'OK') {\n              spanReponseLigne.innerHTML = '😎'\n              spanReponseLigne.style.fontSize = 'large'\n              nbBonnesReponses++\n            } else if (resultat === 'essaieEncore') {\n              spanReponseLigne.innerHTML = '<em>Il faut saisir une longueur et une unité (cm par exemple).</em>'\n              spanReponseLigne.style.color = '#f15929'\n              spanReponseLigne.style.fontWeight = 'bold'\n              besoinDe2eEssai = true\n            } else {\n              spanReponseLigne.innerHTML = '☹️'\n              spanReponseLigne.style.fontSize = 'large'\n              nbMauvaisesReponses++\n            }\n            if (resultat !== 'essaieEncore') champTexte.readOnly = true\n          }\n          if (!besoinDe2eEssai) {\n            button.classList.add('disabled')\n            afficheScore(exercice, nbBonnesReponses, nbMauvaisesReponses)\n          }\n        })\n        button.hasMathaleaListener = true\n      }\n    }\n  })\n}\n\n// function neTientCompteQueDuDernierMembre (texte) {\n//   const i = texte.lastIndexOf('=')\n//   if (i > -1) {\n//     return texte.substring(i + 1)\n//   } else {\n//     return texte\n//   }\n// }\n\nfunction saisieToGrandeur (saisie) {\n  const split = saisie.split('\\\\operatorname{')\n  const mesure = parseFloat(split[0].replace(',', '.'))\n  if (split[1]) {\n    // const unite = split[1].substring(0, split[1].length - 1)\n    const split2 = split[1].split('}')\n    const unite = split2[0] + split2[1]\n    return new Grandeur(mesure, unite)\n  } else {\n    return false\n  }\n}\n\nfunction isUserIdOk (exercice, nbBonnesReponses, nbMauvaisesReponses) {\n  // TODO\n  // => OK => vérifier si le paramètre existe dans l'url\n  // il a pu être entré manuellement\n  // agir en fonction pour les enregistrements\n  const userId = getUserIdFromUrl() // ne renvoit pas ce que je veux, en fait si ??? bizarre\n  // const str = window.location.href\n  // const url = new URL(str)\n  // const userId = url.searchParams.get('userId')\n  // eslint-disable-next-line no-unused-expressions\n  userId === null\n    ? (\n        console.log('userId KO : ' + userId)\n      )\n    : (\n        console.log('userId OK : ' + userId),\n        fetch('scoresManage.php', {\n          method: 'POST',\n          mode: 'same-origin',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            // Booléen pour savoir si on crée un espace ou si on en crée un nouveau\n            isSubmitUserId: false,\n            isVerifResult: true,\n            userId: userId,\n            prof1: userId[0],\n            prof2: userId[1],\n            prof3: userId[2],\n            classe1: userId[3],\n            classe2: userId[4],\n            eleve1: userId[5],\n            eleve2: userId[6],\n            exId: exercice.id,\n            sup: exercice.sup,\n            sup2: exercice.sup2,\n            sup3: exercice.sup3,\n            nbBonnesReponses: nbBonnesReponses,\n            nbQuestions: nbBonnesReponses + nbMauvaisesReponses,\n            score: nbBonnesReponses / (nbBonnesReponses + nbMauvaisesReponses) * 100\n          })\n        })\n      )\n}\n\nexport function afficheScore (exercice, nbBonnesReponses, nbMauvaisesReponses) {\n  // console.log('appel afficheScore()')\n  const divExercice = get(`exercice${exercice.numeroExercice}`)\n  let divScore = get(`score${exercice.numeroExercice}`, false)\n  // Appel Fecth via une fonction est-ce que c'est ça qui multiplie les appels ?\n  isUserIdOk(exercice, nbBonnesReponses, nbMauvaisesReponses)\n  if (!divScore) divScore = addElement(divExercice, 'div', { className: 'score', id: `score${exercice.numeroExercice}` })\n  divScore.innerHTML = `${nbBonnesReponses} / ${nbBonnesReponses + nbMauvaisesReponses}`\n  divScore.style.color = '#f15929'\n  divScore.style.fontWeight = 'bold'\n  divScore.style.fontSize = 'x-large'\n  divScore.style.display = 'inline'\n}\n","import { context } from './context'\n\n/**\n *\n * @returns {string} Filtre depuis l'URL\n */\nexport function getFilterFromUrl () {\n  const queryString = window.location.search\n  const urlParams = new URLSearchParams(queryString)\n  return urlParams.get('filtre')\n}\n\n/**\n *\n * @returns {string} Vue depuis l'URL\n */\nexport function getVueFromUrl () {\n  const queryString = window.location.search\n  const urlParams = new URLSearchParams(queryString)\n  return urlParams.get('v')\n}\n/**\n *\n * @returns {string} userId depuis l'URL\n */\nexport function getUserIdFromUrl () {\n  const queryString = window.location.search\n  const urlParams = new URLSearchParams(queryString)\n  return urlParams.get('userId')\n}\n\nexport function getUrlVars () { // Récupère les variables de l'URL\n  const url = new URL(window.location.href)\n  const tableauStringsExercicesParametres = url.searchParams.getAll('ex') // récupère un string pour chaque paramètre ex de l'URL\n  const tableauObjetsExercices = []\n  for (let indiceExercice = 0; indiceExercice < tableauStringsExercicesParametres.length; indiceExercice++) {\n    const CleValeur = tableauStringsExercicesParametres[indiceExercice].split(',')\n    const ObjetParametres = {}\n    ObjetParametres.id = CleValeur[0] // Récupère le premier élément qui est forcément l'id\n    CleValeur.shift() // Retire ce premier élément\n    if (CleValeur.length > 0) {\n      for (const i in CleValeur) {\n        CleValeur[i] = CleValeur[i].split('=')\n        // change le type de ce qui ne doit pas être un string\n        if (CleValeur[i][1] === 'true' || CleValeur[i][1] === 'false') { // \"true\"=>true\n          ObjetParametres[CleValeur[i][0]] = (CleValeur[i][1] === 'true')\n        } else if (!isNaN(CleValeur[i][1])) { // \"17\"=>17\n          ObjetParametres[CleValeur[i][0]] = parseInt(CleValeur[i][1])\n        } else {\n          ObjetParametres[CleValeur[i][0]] = CleValeur[i][1]\n        }\n      }\n    }\n    // Pour assurer la rétrocompatibilité avec les paramètres long 07/2021\n    if (ObjetParametres.sup !== undefined) {\n      ObjetParametres.s = ObjetParametres.sup\n    }\n    if (ObjetParametres.sup2 !== undefined) {\n      ObjetParametres.s2 = ObjetParametres.sup2\n    }\n    if (ObjetParametres.sup3 !== undefined) {\n      ObjetParametres.s3 = ObjetParametres.sup3\n    }\n    if (ObjetParametres.interactif !== undefined) {\n      ObjetParametres.i = ObjetParametres.interactif\n    }\n    if (ObjetParametres.nbQuestions !== undefined) {\n      ObjetParametres.n = ObjetParametres.nbQuestions\n    }\n    if (ObjetParametres.video !== undefined) {\n      ObjetParametres.v = ObjetParametres.video\n    }\n    tableauObjetsExercices.push(ObjetParametres)\n  }\n  return tableauObjetsExercices\n}\n\n/**\n * Récupère l'URL et s'assure que la vue et le userId sont notés\n * @returns\n */\nexport function getUrlSearchOld () {\n  const queryString = window.location.search\n  const urlParams = new URLSearchParams(queryString)\n  if (context.userId) urlParams.set('userId', context.userId)\n  if (context.vue) urlParams.set('v', context.vue)\n  let url = ''\n  let text\n  for (const p of urlParams) {\n    text = p.join()\n    text = text.replace(',', '=')\n    url += text + '&' // Le dernier & est à supprimer avec le slice\n  }\n  if (urlParams) url = window.location + '?' + url.slice(0, -1)\n  return url\n}\n\n/**\n * Récupère l'URL et s'assure que la vue et le userId sont notés\n * Essai de debug\n * @returns\n */\nexport function getUrlSearch () {\n  const urlRacine = window.location.href.split('?')[0]\n  // console.log(urlRacine)\n  const queryString = window.location.search\n  // console.log(queryString)\n  const urlParams = new URLSearchParams(queryString)\n  // console.log(urlParams)\n  if (context.userId) urlParams.set('userId', context.userId)\n  if (context.vue) urlParams.set('v', context.vue)\n  // On finit la réécriture de l'url\n  const entries = urlParams.entries()\n  let urlRewrite = urlRacine + '?'\n  for (const entry of entries) {\n    urlRewrite += entry[0] + '=' + entry[1] + '&'\n  }\n  urlRewrite = urlRewrite.slice(0, -1)\n  // console.log(urlRewrite)\n  urlRewrite = new URL(urlRewrite)\n  return urlRewrite\n}\n\n/**\n * Met à jour l'URL avec la vue et le userId s'ils sont connus\n */\nexport function setUrl () {\n  window.history.pushState('', '', getUrlSearch())\n}\n","import { addElement, addText, get } from './dom'\n/**\n * Fonctions pour gérer les messages utilisateur (feedback erreur|warning ou messages positifs)\n * @module\n */\n\n/**\n * Les types possibles\n * @type {string[]}\n */\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} feedback\n * @param {string} feedback.message\n * @param {string} [feedback.type=error]\n * @param {string} [feedback.titre]\n * @return {HTMLElement} L'élément du feedback (déjà ajouté dans le container)\n */\nexport function addFeedback (container, { message, type = 'error', titre } = {}) {\n  if (!types.includes(type)) {\n    console.error(Error(`type de message inconnu : ${type}`))\n    type = 'error'\n  }\n  if (!message) throw Error('Message obligatoire pour tout retour utilisateur')\n  const cssDiv = type === 'info' ? '' : type\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = type === 'error'\n    ? 'frown outline'\n    : (type === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  if (/<[a-zA-Z0-9_ \"']+/.test(message)) div.innerHTML += message\n  else addText(div, message)\n  return div\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        type: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'noLatex':\n      addFeedback(container, {\n        titre: 'Pas de contenu Latex pour cet exercice',\n        message: `L'exercice ${exercice} n'a, pour l'instant, pas de version Latex`,\n        type: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} feedback\n * @param {string} feedback.id id du div conteneur à utiliser\n * @param {string} feedback.message Le message à afficher\n * @param {string} feedback.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, message = '', type = 'error' } = {}) {\n  if (!id || !message) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message, type })\n  div.style.width = '400px'\n  return div\n}\n"],"sourceRoot":""}