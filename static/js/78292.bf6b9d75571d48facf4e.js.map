{"version":3,"file":"js/78292.bf6b9d75571d48facf4e.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/Profs/P004.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {randint,troncature,calcul,choisitLettresDifferentes} from '../../modules/outils.js'\nimport {point,segment,droiteGraduee2,mathalea2d,} from '../../modules/2d.js'\n\nexport const titre = 'Droites graduées avec zoom'\n\n/**\n * Fonction permettant aux enseignants de proposer des feuilles à compléter pour la lecture d'abscisse décimale avec zoom\n * L'enseignant peut ajouter \"à la main\" les données qu'il souhaite\n * ref P004\n * @author Jean-Claude Lhote\n */\nexport default function Feuille_de_zooms() {\n  Exercice.call(this);\n  this.nbCols = 1;\n  this.sup = 1;\n  this.titre = titre;\n\n  this.nouvelleVersion = function () {\n    this.contenu = \"\";\n    let d1, d2, d3, texte = \"\", extremite, extreme, noms = [],xmin,origine,xmax;\n    let x1 = 0, x2 = 0, x3 = 0, x21, x31, objets = [], fenetre, thickOff = 0,pA1,pA2,pB2,pB1,pC1,pC2,pD1,pD2,sA,sB,sC,sD;\n    for (let n = 0; n < 8 / parseInt(this.sup); n++) {\n      noms = choisitLettresDifferentes(5, 'QFN');\n      objets.length = 0;\n      if (this.sup == 1) {\n        xmin = randint(5, 10) - 0.2;\n        origine = Math.round(xmin + 0.2);\n        extreme = calcul(origine + 9);\n        thickOff = 0.1;\n        xmax = origine + 9.2;\n\n        x1 = calcul(xmin + 0.2 + randint(1, 5) + randint(2, 8) / 10);\n        extremite = `->`;\n\n        d1 = droiteGraduee2({\n          x: 0, y: 3, Min: xmin, axePosition: 'H', Max: xmax + 0.2, thickSec: true, thickTer: false, Unite: 3, thickOffset: thickOff,\n          thickCouleur: 'black', axeCouleur: 'black', axeHauteur: 4, labelsPrincipaux: false,\n          //labelListe: [[origine, `${texNombre(origine)}`], [extreme, `${texNombre(extreme)}`]],\n          pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n          pointTaille: 6, pointOpacite: 0.8, pointCouleur: 'blue', pointStyle: '|', pointEpaisseur: 2, axeStyle: extremite\n        });\n        d2 = droiteGraduee2({\n          x: Math.floor(x1) - xmin + 1.5, y: 0, Min: Math.floor(x1), axePosition: 'H', Max: Math.floor(x1 + 1), thickSec: true, thickTer: false, Unite: 20, thickOffset: thickOff,\n          thickCouleur: 'black', axeCouleur: 'black', axeHauteur: 4, labelsPrincipaux: false,\n          pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n          pointTaille: 6, pointOpacite: 0.8, pointCouleur: 'blue', pointStyle: '|', pointEpaisseur: 2, axeStyle: extremite\n        });\n\n        pA1 = point((Math.floor(x1) - xmin) * 3, 3);\n        pA2 = point(Math.floor(x1) - xmin + 1.5, 0);\n        pB1 = point((Math.floor(x1) + 1 - xmin) * 3, 3);\n        pB2 = point(Math.floor(x1) - xmin + 21.5, 0);\n        sA = segment(pA1, pA2);\n        sB = segment(pB1, pB2);\n        sA.pointilles = true;\n        sB.pointilles = true;\n        objets.push(d1, d2, sA, sB);\n        fenetre = { xmin: -1.5, xmax: 35, ymin: -1, ymax: 4.5, pixelsParCm: 25, scale: 0.5 };\n      }\n      else {\n        xmin = randint(1, 15);\n        xmax = xmin + 1;\n        x1 = calcul(xmin + randint(2, 8) / 10 + randint(2, 8) / 100 + randint(2, 8) * 0.001);\n        x2 = troncature(x1, 1);\n        x21 = troncature(x1, 2);\n        x3 = calcul(x2 + 0.1);\n        x31 = calcul(x21 + 0.01);\n        xmin = Math.floor(x2);\n        xmax = xmin + 1;\n        thickOff = 0.001;\n\n        extremite = `->`;\n        d1 = droiteGraduee2({\n          x: 0, y: 6, Min: xmin, axePosition: 'H', Max: xmax, thickSec: true, thickTer: true, Unite: 30, thickDistance: 1, thickSecDist: 0.1, thickTerDist: 0.01, thickOffset: thickOff,\n          thickCouleur: 'black', axeCouleur: 'black', axeHauteur: 6, labelsPrincipaux: false,\n          pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n          pointTaille: 6, pointOpacite: 0.8, pointCouleur: 'blue', pointStyle: '|', pointEpaisseur: 3, axeStyle: extremite\n        });\n        d2 = droiteGraduee2({\n          x: 6.5, y: 3, Min: x2, axePosition: 'H', Max: x3, thickSec: true, thickTer: true, Unite: 200, thickSecDist: 0.01, thickTerDist: 0.001, thickDistance: 0.1, thickOffset: thickOff,\n          thickCouleur: 'black', axeCouleur: 'black', axeHauteur: 6, labelsPrincipaux: false,\n          pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n          pointTaille: 6, pointOpacite: 0.8, pointCouleur: 'blue', pointStyle: '|', pointEpaisseur: 2, axeStyle: extremite\n        });\n        d3 = droiteGraduee2({\n          x: 6.5, y: 0, Min: x21, axePosition: 'H', Max: x31, thickSec: true, thickTer: false, Unite: 2000, thickSecDist: 0.001, thickOffset: thickOff,\n          thickCouleur: 'black', axeCouleur: 'black', axeHauteur: 6, labelsPrincipaux: false,\n          pointListe: [[x1, `${noms[1]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n          pointTaille: 6, pointOpacite: 0.8, pointCouleur: 'blue', pointStyle: '|', pointEpaisseur: 2, axeStyle: extremite\n        });\n\n        pA1 = point((x2 - xmin) * 30, 6);\n        pA2 = point(6.5, 3);\n        pB1 = point((x3 - xmin) * 30, 6);\n        pB2 = point(26.5, 3);\n        sA = segment(pA1, pA2);\n        sB = segment(pB1, pB2);\n        sA.pointilles = true;\n        sB.pointilles = true;\n        pC1 = point(6.5 + (x21 - x2) * 200, 3);\n        pC2 = point(6.5, 0);\n        pD1 = point(6.5 + (x31 - x2) * 200, 3);\n        pD2 = point(26.5, 0);\n        sC = segment(pC1, pC2);\n        sD = segment(pD1, pD2);\n        sC.pointilles = true;\n        sD.pointilles = true;\n        fenetre = { xmin: -1.5, xmax: 35, ymin: -1.5, ymax: 7.5, pixelsParCm: 25, scale: 0.5 };\n        objets.push(d1, d2, d3, sA, sB, sC, sD);\n\n        let partent = Math.floor(x1);\n\n      }\n      texte = mathalea2d(fenetre, objets);\n\n      this.contenu += texte;\n      this.contenu += '<br>';\n    }\n  };\n  this.besoinFormulaireNumerique = ['Nombre de zoom', 2, '1 : Un seul zoom\\n2 : Deux niveaux de zoom'];\n\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","Feuille_de_zooms","sup","d1","d2","d3","extremite","extreme","xmin","origine","xmax","x21","x31","fenetre","pA1","pA2","pB2","pB1","pC1","pC2","pD1","pD2","sA","sB","sC","sD","texte","noms","x1","x2","x3","objets","thickOff","n","parseInt","choisitLettresDifferentes","length","randint","Math","round","calcul","droiteGraduee2","x","y","Min","axePosition","Max","thickSec","thickTer","Unite","thickOffset","thickCouleur","axeCouleur","axeHauteur","labelsPrincipaux","pointListe","floor","pointTaille","pointOpacite","pointCouleur","pointStyle","pointEpaisseur","axeStyle","point","segment","pointilles","ymin","ymax","pixelsParCm","scale","troncature","thickDistance","thickSecDist","thickTerDist","mathalea2d"],"sourceRoot":""}