{"version":3,"file":"js/30731.d5951183f7cfd80351fa.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/1e/can1L02.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { fraction } from '../../../modules/fractions'\nimport { randint, choice, texteEnCouleur, reduirePolynomeDegre3, reduireAxPlusB, ecritureAlgebrique, ecritureParentheseSiNegatif, miseEnEvidence } from '../../../modules/outils.js'\nexport const titre = 'Nombre de solutions d’une équation du second degré'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '1/11/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Trouver le nombre de solutions d'une équation.\n * @author Gilles Mora\n * Référence can1L02\n*/\nexport default function NombreSolutionsSecondDegre () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.typeExercice = 'simple' // Cette ligne est très importante pour faire faire un exercice simple !\n  this.nbQuestions = 1\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  this.formatChampTexte = 'largeur15 inline'\n  this.nouvelleVersion = function () {\n    let a, b, c, d, maFraction\n    switch (choice([1, 2])) {\n      case 1 :\n        a = randint(1, 4) * choice([-1, 1])\n        b = randint(-4, 4, 0)\n        c = randint(-4, 4, 0)\n        d = b * b - 4 * a * c\n        this.question = `Le nombre de solutions de l'équation  $${reduirePolynomeDegre3(0, a, b, c)}=0$ est :`\n\n        if (d < 0) {\n          this.correction = `Le nombre de solutions est donné par le signe de $\\\\Delta$ :<br>\n    $\\\\Delta =b^2-4ac=${ecritureParentheseSiNegatif(b)}^2 - 4 \\\\times ${ecritureParentheseSiNegatif(a)} \\\\times ${ecritureParentheseSiNegatif(c)}=${d}$.<br>\n    Comme $${d}$ est strictement négatif, l'équation n'a pas de solution.`\n          this.correction += texteEnCouleur(`<br> Mentalement : <br>\n          Il n'est pas nécessaire de faire le calcul du discriminant puisque seul \n          le signe de celui-ci permet de répondre à la question :<br>\n          faites deux calculs séparés mentalement : \n          $b^2=${ecritureParentheseSiNegatif(b)}^2=${b ** 2}$ puis \n          $4ac=4 \\\\times ${ecritureParentheseSiNegatif(a)} \\\\times ${ecritureParentheseSiNegatif(c)}=${4 * a * c}$\n          et évaluez le signe de leur différence.  `)\n\n          this.reponse = 0\n        }\n        if (d > 0) {\n          this.correction = `Le nombre de solutions est donné par le signe de $\\\\Delta$ :<br>\n    $\\\\Delta =b^2-4ac=${ecritureParentheseSiNegatif(b)}^2 - 4 \\\\times ${ecritureParentheseSiNegatif(a)} \\\\times ${ecritureParentheseSiNegatif(c)}=${d}$.<br>\n    Comme $${d}$ est strictement positif, l'équation a 2 solutions.`\n          this.correction += texteEnCouleur(`<br> Mentalement : <br>\n          Il n'est pas nécessaire de faire le calcul du discriminant puisque seul \n          le signe de celui-ci permet de répondre à la question :<br>\n    par exemple, si le produit $4\\\\times a\\\\times c$ (c'est le cas lorsque $a$ et $c$ sont de signes contraires) est négatif, l'équation aura deux solutions puisque $\\\\Delta$ sera strictement positif.   \n<br>  Dans les autres cas, faites deux calculs séparés mentalement : $b^2=${ecritureParentheseSiNegatif(b)}^2=${b ** 2}$ puis \n$4ac=4 \\\\times ${ecritureParentheseSiNegatif(a)} \\\\times ${ecritureParentheseSiNegatif(c)}=${4 * a * c}$ \net évaluez le signe de leur différence. `)\n          this.reponse = 2\n        }\n        if (d === 0) {\n          this.correction = `Le nombre de solutions est donné par le signe de $\\\\Delta$ :<br>\n            $\\\\Delta =b^2-4ac=${ecritureParentheseSiNegatif(b)}^2 - 4 \\\\times ${ecritureParentheseSiNegatif(a)} \\\\times ${ecritureParentheseSiNegatif(c)}=${d}$.<br>\n            Comme $${d}$ est nul, l'équation a une unique solution.`\n          this.correction += texteEnCouleur(`<br> Mentalement : <br>\n               Faites deux calculs séparés mentalement : $b^2=${ecritureParentheseSiNegatif(b)}^2=${b ** 2}$ puis \n     $4ac=4 \\\\times ${ecritureParentheseSiNegatif(a)} \\\\times ${ecritureParentheseSiNegatif(c)}=${4 * a * c}$.  `)\n          this.reponse = 1\n        }\n        break\n      case 2 :\n        a = randint(-10, 10, 0)\n        b = randint(-5, 5, 0)\n        c = randint(-5, 5)\n        maFraction = fraction(-c, a)\n        if (-c / a > 0) {\n          this.question = `Le nombre de solutions de l'équation  \n       $${reduireAxPlusB(0, a)}(${reduireAxPlusB(1, b)})^2${ecritureAlgebrique(c)}=0$ est :`\n          this.correction = `On isole le carré : <br>\n        $\\\\begin{aligned}\n        ${reduireAxPlusB(0, a)}(${reduireAxPlusB(1, b)})^2${ecritureAlgebrique(c)}&=0\\\\\\\\\n        ${reduireAxPlusB(0, a)}(${reduireAxPlusB(1, b)})^2${ecritureAlgebrique(c)}${miseEnEvidence(ecritureAlgebrique(-c))}&=0${miseEnEvidence(ecritureAlgebrique(-c))}\\\\\\\\\n        \\\\dfrac{${reduireAxPlusB(0, a)}}{${miseEnEvidence(reduireAxPlusB(0, a))}}(${reduireAxPlusB(1, b)})^2&=\\\\dfrac{${-c}}{${miseEnEvidence(reduireAxPlusB(0, a))}}\\\\\\\\\n        (${reduireAxPlusB(1, b)})^2&=${maFraction.texFractionSimplifiee} \n                \\\\end{aligned}$<br>\n        Puisque $${maFraction.texFractionSimplifiee}$ est strictement positif, il y a deux nombres dont le carré est égal à $${maFraction.texFractionSimplifiee}$, donc l'équation a deux solutions. `\n\n          this.reponse = 2\n        }\n        if (-c / a === 0) {\n          if (a === -1) {\n            this.question = `Le nombre de solutions de l'équation  \n       $-(${reduireAxPlusB(1, b)})^2=0$ est :`\n            this.correction = `On isole le carré : <br>\n             $\\\\begin{aligned}\n             -(${reduireAxPlusB(1, b)})^2&=0\\\\\\\\\n             ${reduireAxPlusB(0, a)}(${reduireAxPlusB(1, b)})^2&=0\\\\\\\\\n                         \\\\dfrac{${reduireAxPlusB(0, a)}}{${miseEnEvidence(reduireAxPlusB(0, a))}}(${reduireAxPlusB(1, b)})^2&=\\\\dfrac{${-c}}{${miseEnEvidence(reduireAxPlusB(0, a))}}\\\\\\\\\n             (${reduireAxPlusB(1, b)})^2&=${maFraction.texFractionSimplifiee} \n                     \\\\end{aligned}$<br>\n             Il y a un nombre dont le carré est nul, donc l'équation a une solution. `\n\n            this.reponse = 1\n          } else {\n            this.question = `Le nombre de solutions de l'équation  \n          $${reduireAxPlusB(0, a)}(${reduireAxPlusB(1, b)})^2=0$ est :`\n            this.correction = `On isole le carré : <br>\n                $\\\\begin{aligned}\n                ${reduireAxPlusB(0, a)}(${reduireAxPlusB(1, b)})^2&=0\\\\\\\\\n                \\\\dfrac{${reduireAxPlusB(0, a)}}{${miseEnEvidence(reduireAxPlusB(0, a))}}(${reduireAxPlusB(1, b)})^2&=\\\\dfrac{${-c}}{${miseEnEvidence(reduireAxPlusB(0, a))}}\\\\\\\\\n                (${reduireAxPlusB(1, b)})^2&=${maFraction.texFractionSimplifiee} \n                        \\\\end{aligned}$<br>\n                Il y a un nombre dont le carré est nul, donc l'équation a une solution. `\n\n            this.reponse = 1\n          }\n        }\n        if (-c / a < 0) {\n          this.question = `Le nombre de solutions de l'équation  \n       $${reduireAxPlusB(0, a)}(${reduireAxPlusB(1, b)})^2${ecritureAlgebrique(c)}=0$ est :`\n          this.correction = `On isole le carré : <br>\n                 $\\\\begin{aligned}\n                 ${reduireAxPlusB(0, a)}(${reduireAxPlusB(1, b)})^2${ecritureAlgebrique(c)}&=0\\\\\\\\\n                 ${reduireAxPlusB(0, a)}(${reduireAxPlusB(1, b)})^2${ecritureAlgebrique(c)}${miseEnEvidence(ecritureAlgebrique(-c))}&=0${miseEnEvidence(ecritureAlgebrique(-c))}\\\\\\\\\n                 \\\\dfrac{${reduireAxPlusB(0, a)}}{${miseEnEvidence(reduireAxPlusB(0, a))}}(${reduireAxPlusB(1, b)})^2&=\\\\dfrac{${-c}}{${miseEnEvidence(reduireAxPlusB(0, a))}}\\\\\\\\\n                 (${reduireAxPlusB(1, b)})^2&=${maFraction.texFractionSimplifiee} \n                         \\\\end{aligned}$<br>\n                         Puisque $${maFraction.texFractionSimplifiee}$ est strictement négatif, il n'existe pas de nombres réels dont le carré est strictement négatif, donc l'équation n'a pas de solution. `\n\n          this.reponse = 0\n        }\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","dateDePublication","NombreSolutionsSecondDegre","typeExercice","formatChampTexte","a","b","c","d","maFraction","choice","randint","question","reduirePolynomeDegre3","correction","ecritureParentheseSiNegatif","texteEnCouleur","reponse","fraction","reduireAxPlusB","ecritureAlgebrique","miseEnEvidence","texFractionSimplifiee"],"sourceRoot":""}