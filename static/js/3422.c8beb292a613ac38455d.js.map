{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5L10.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","amcType","interactifReady","titre","EcrireUneExpressionLitterale","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","interactif","nouvelleVersion","autoCorrection","listeQuestions","listeCorrections","typeDeQuestionsDisponibles","range1","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","lettresDisponibles","x","choice","enleveElement","y","k","randint","propositions","statut","feedback","texFraction","enonce","options","ordered","lastChoice","indexOf","propositionsQcm","push","listeQuestionsToContenu","context","amc","id","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","length","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","type","querySelectorAll","uicheck","classList","add","espace","undefined","shuffleJusqua","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","a","digits","decimals","signe","exposant_nb_chiffres","exposant_signe","approx","reponse","valeur","exerciceInteractif","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"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","file":"js/3422.c8beb292a613ac38455d.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, range1, combinaisonListes, texFraction } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType =2 //type de question AMC qcm Mult \nexport const interactifReady = true\nexport const titre = 'Écrire une expression littérale'\n\n/**\n* Écrire une expression littérale à partir d'une phrase :\n* * Double, triple, moitié, tiers, quart\n* * Successeur, prédécesseur\n* * Carré, cube, opposé, inverse\n* * Somme, produit, quotient\n* * Nombre pair, nombre impair, multiple d'un nombre donné\n* @Auteur Rémi Angot\n* 5L10\n*/\nexport default function EcrireUneExpressionLitterale () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 4\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.interactifReady = true\n  this.interactif = true\n  this.amcType = amcType\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeDeQuestionsDisponibles = range1(17)\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n      const lettresDisponibles = ['x', 'y', 'z', 't', 'a', 'b', 'c', 'n', 'm']\n      const x = choice(lettresDisponibles)\n      enleveElement(lettresDisponibles, x)\n      const y = choice(lettresDisponibles)\n      const k = randint(2, 10)\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // 2x\n          texte = `Exprimer le double de $${x}$ en fonction de $${x}$.`\n          texteCorr = `Le double de $${x}$ se note : $2${x}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$2\\\\times ${x}$`,\n              statut: true,\n              feedback: 'Correct mais non simplifié.'\n            },\n            {\n              texte: `$2${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}+${x}$`,\n              statut: true,\n              feedback: 'Correct mais non simplifié.'\n            },\n            {\n              texte: `$2+${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et produit.'\n            },\n            {\n              texte: `$${x}^2$`,\n              statut: false,\n              feedback: 'Tu as confondu le double et le carré.'\n            },\n            {\n              texte: `$${x}2$`,\n              statut: false,\n              feedback: 'Cette écriture est incorrecte.'\n            }\n          ]\n          break\n        case 2: // 3x\n          texte = `Exprimer le triple de $${x}$  en fonction de $${x}$.`\n          texteCorr = `Le triple de $${x}$  se note : $3${x}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$3\\\\times ${x}$`,\n              statut: true,\n              feedback: 'Correct mais non simplifié.'\n            },\n            {\n              texte: `$3${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}+2${x}$`,\n              statut: true,\n              feedback: 'Correct mais non simplifié.'\n            },\n            {\n              texte: `$3+${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et produit.'\n            },\n            {\n              texte: `$${x}^3$`,\n              statut: false,\n              feedback: 'Tu as confondu le triple et le cube.'\n            },\n            {\n              texte: `$${x}3$`,\n              statut: false,\n              feedback: 'Cette écriture est incorrecte.'\n            }\n          ]\n          break\n        case 3: // x/2\n          texte = `Exprimer la moitié de $${x}$ en fonction de $${x}$.`\n          texteCorr = `La moitié de $${x}$  se note :  $${texFraction(x, 2)}=${x}\\\\div 2=0,5${x}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${x}\\\\div 2$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$\\\\dfrac{${x}}{2}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$0,5${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}-2$`,\n              statut: false,\n              feedback: 'Tu as confondu quotient et différence.'\n            },\n            {\n              texte: `$\\\\dfrac{1}{2}+${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu muliplier par $\\\\dfrac{1}{2}$ et ajouter $\\\\dfrac{1}{2}$.'\n            },\n            {\n              texte: `$${x}\\\\div 0,5$`,\n              statut: false,\n              feedback: 'Cela revient à multiplier par $2$ et non à diviser par $2$.'\n            }\n          ]\n          break\n        case 4: // x/4\n          texte = `Exprimer le quart de $${x}$  en fonction de $${x}$.`\n          texteCorr = `Le quart de $${x}$  se note :  $${texFraction(x, 4)}=${x}\\\\div 4=0,25${x}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${x}\\\\div 4$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$\\\\dfrac{${x}}{4}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$0,25${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}-\\\\dfrac{1}{4}$`,\n              statut: false,\n              feedback: 'Tu as confondu quotient et différence.'\n            },\n            {\n              texte: `$\\\\dfrac{1}{4}+${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu muliplier par $\\\\dfrac{1}{4}$ et ajouter $\\\\dfrac{1}{4}$.'\n            },\n            {\n              texte: `$${x}\\\\div 0,25$`,\n              statut: false,\n              feedback: 'Cela revient à multiplier par $4$ et non à diviser par $4$.'\n            }\n          ]\n          break\n        case 5: // x+1\n          texte = `$${x}$ étant un nombre entier, exprimer l'entier suivant en fonction de $${x}$.`\n          texteCorr = `Le successeur de $${x}$ se note :  $${x}+1$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$1+${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}+1$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}+${x}$`,\n              statut: false,\n              feedback: \"Le double est rarement le suivant. En fait, ça n'arrive que pour 1\"\n            },\n            {\n              texte: `$2${x}$`,\n              statut: false,\n              feedback: \"Le double est rarement le suivant. En fait, ça n'arrive que pour 1\"\n            },\n            {\n              texte: `$${x}-1$`,\n              statut: false,\n              feedback: 'Tu as confondu suivant et précédent.'\n            },\n            {\n              texte: `$${x}2$`,\n              statut: false,\n              feedback: 'Cette écriture est incorrecte.'\n            }\n          ]\n          break\n        case 6: // x-1\n          texte = `$${x}$ étant un nombre entier, exprimer l'entier précédent en fonction de $${x}$.`\n          texteCorr = `Le prédecesseur de $${x}$  se note :  $${x}-1$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${x}-1$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}+(-1)$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$1-${x}$`,\n              statut: false,\n              feedback: ''\n            },\n            {\n              texte: `$${x}-${x}$`,\n              statut: false,\n              feedback: 'Cela fait zéro, il me semble... donc ça ne fonctionne que pour 1'\n            },\n            {\n              texte: `$-1${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu multiplier et ajouter.'\n            },\n            {\n              texte: `$${x}+1$`,\n              statut: false,\n              feedback: 'Tu as confondu précédent et suivant.'\n            }\n          ]\n          break\n        case 7: // x^2\n          texte = `Exprimer le carré de $${x}$  en fonction de $${x}$.`\n          texteCorr = `Le carré de $${x}$  se note : $${x}^2$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${x}${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}\\\\times ${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}^2$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}2$`,\n              statut: false,\n              feedback: 'Cette écriture est incorrecte.'\n            },\n            {\n              texte: `$2${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu le carré et le double.'\n            },\n            {\n              texte: `$${x}+2$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et puissance.'\n            }\n          ]\n          break\n        case 8: // x^3\n          texte = `Exprimer le cube de $${x}$  en fonction de $${x}$.`\n          texteCorr = `Le cube de $${x}$  se note : $${x}^3$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${x}${x}${x}$`,\n              statut: true,\n              feedback: 'Correct, mais non simplifié'\n            },\n            {\n              texte: `$${x}\\\\times ${x}\\\\times ${x}$`,\n              statut: true,\n              feedback: 'Correct, mais non simplifié'\n            },\n            {\n              texte: `$${x}^3$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}3$`,\n              statut: false,\n              feedback: 'Cette écriture est incorrecte.'\n            },\n            {\n              texte: `$3${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu le cube et le triple.'\n            },\n            {\n              texte: `$${x}+3$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et puissance.'\n            }\n          ]\n          break\n        case 9: // -x\n          texte = `Exprimer l'opposé de $${x}$  en fonction de $${x}$.`\n          texteCorr = `L'opposé de $${x}$  se note : $-${x}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$-${x}$`,\n              statut: true,\n              feedback: 'Correct, mais non simplifié'\n            },\n            {\n              texte: `$-1\\\\times ${x}$`,\n              statut: true,\n              feedback: 'Correct, mais non simplifié'\n            },\n            {\n              texte: `$${x}-1$`,\n              statut: false,\n              feedback: 'Tu as confondu multiplication et addition.'\n            },\n            {\n              texte: `$\\\\dfrac{1}{${x}}$`,\n              statut: false,\n              feedback: 'Tu as confondu opposé et inverse.'\n            },\n            {\n              texte: `$${x}$`,\n              statut: false,\n              feedback: \"Cela n'est vrai que pour zéro.\"\n            },\n            {\n              texte: `$1-${x}$`,\n              statut: false,\n              feedback: \"C'est un de trop...\"\n            }\n          ]\n          break\n        case 10: // 1/x\n          texte = `Exprimer l'inverse de $${x}$  en fonction de $${x}$.`\n          texteCorr = `L'inverse de $${x}$ se note : $${texFraction(1, x)}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$\\\\dfrac{1}{${x}}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$-1\\\\times ${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu inverse et opposé.'\n            },\n            {\n              texte: `$${x}-1$`,\n              statut: false,\n              feedback: 'Tu as confondu division et soustraction.'\n            },\n            {\n              texte: `$-${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu inverse et opposé.'\n            },\n            {\n              texte: `$${x}$`,\n              statut: false,\n              feedback: \"Cela n'est vrai que pour 1.\"\n            },\n            {\n              texte: `$1-${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu division et soustraction.'\n            }\n          ]\n          break\n        case 11: // x+k\n          texte = `Exprimer la somme de $${x}$ et ${k} en fonction de $${x}$.`\n          texteCorr = `La somme de $${x}$ et ${k} se note : $${x}+${k}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${k}+${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}+${k}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${k}${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu addition et multiplication.'\n            },\n            {\n              texte: `$${x}${k}$`,\n              statut: false,\n              feedback: 'Cette écriture est incorrecte.'\n            },\n            {\n              texte: `$${x}-${k}$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et différence.'\n            },\n            {\n              texte: `$${k}\\\\times ${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et produit.'\n            }\n          ]\n          break\n        case 12: // kx\n          texte = `Exprimer le produit de $${x}$  par ${k} en fonction de $${x}$.`\n          texteCorr = `Le produit de $${x}$ par ${k} se note : $${k}${x}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${k}${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${k}\\\\times ${x}$`,\n              statut: true,\n              feedback: 'Correct, mais non simplifié.'\n            },\n            {\n              texte: `$${k}+${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu addition et multiplication.'\n            },\n            {\n              texte: `$${x}${k}$`,\n              statut: false,\n              feedback: 'Cette écriture est incorrecte.'\n            },\n            {\n              texte: `$${x}+${k}$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et produit.'\n            },\n            {\n              texte: `$${x}-${k}$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et produit.'\n            }\n          ]\n          break\n        case 13: // x/k\n          texte = `Exprimer le quotient de $${x}$ par ${k} en fonction de $${x}$.`\n          texteCorr = `Le quotient de $${x}$ par ${k} se note : $${texFraction(x, k)}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${x}\\\\div ${k}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$\\\\dfrac{${x}}{${k}}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${k}\\\\div ${x}$`,\n              statut: false,\n              feedback: \"C'est l'inverse\"\n            },\n            {\n              texte: `$${x}\\\\times ${k}$`,\n              statut: false,\n              feedback: 'Cette écriture est incorrecte.'\n            },\n            {\n              texte: `$${x}+${k}$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et quotient.'\n            },\n            {\n              texte: `$${x}-${k}$`,\n              statut: false,\n              feedback: 'Tu as confondu différence et quotient.'\n            }\n          ]\n          break\n        case 14: // k/x\n          texte = `Exprimer le quotient de ${k} par $${x}$ en fonction de $${x}$.`\n          texteCorr = `Le quotient de ${k} par $${x}$ se note : $${texFraction(k, x)}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${k}\\\\div ${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$\\\\dfrac{${k}}{${x}}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}\\\\div ${k}$`,\n              statut: false,\n              feedback: \"C'est l'inverse\"\n            },\n            {\n              texte: `$${k}\\\\times ${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu produit et quotient.'\n            },\n            {\n              texte: `$${x}\\\\times ${k}$`,\n              statut: false,\n              feedback: 'Tu as confondu produit et quotient.'\n            },\n            {\n              texte: `$${k}-${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu différence et quotient.'\n            }\n          ]\n          break\n        case 15: // xy\n          texte = `Comment se note le produit de $${x}$ par $${y}$ ?`\n          texteCorr = `Le produit de $${x}$ par $${y}$ se note $${x}${y}$.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${y}${x}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${x}${y}$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${y}\\\\times ${x}$`,\n              statut: true,\n              feedback: 'Correct, mais non simplifié.'\n            },\n            {\n              texte: `$${x}+${y}$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et produit.'\n            },\n            {\n              texte: `$${y}+${x}$`,\n              statut: false,\n              feedback: 'Tu as confondu somme et produit.'\n            },\n            {\n              texte: `$${x}-${y}$`,\n              statut: false,\n              feedback: 'Tu as confondu différence et produit.'\n            }\n          ]\n          break\n        case 16: // pair\n          texte = 'Écrire une expression littérale qui permet de représenter un nombre pair.'\n          texteCorr = 'Un nombre pair peut s\\'écrire sous la forme $2n$ avec $n$ un entier naturel.'\n          this.autoCorrection[i].propositions = [\n            {\n              texte: '$2n$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: '$2(n+1)$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: '$n+2$',\n              statut: false,\n              feedback: 'Le nombre n est-il pair ?'\n            },\n            {\n              texte: '$n-2$',\n              statut: false,\n              feedback: 'Le nombre n est-il pair ?'\n            },\n            {\n              texte: '$n\\\\div 2$',\n              statut: false,\n              feedback: 'Le résultat est-il un nombre entier ?'\n            },\n            {\n              texte: '$n^2$',\n              statut: false,\n              feedback: \"Le carré d'un nombre impair est-il pair ?\"\n            }\n          ]\n          break\n        case 17: // impair\n          texte = 'Écrire une expression littérale qui permet de représenter un nombre impair.'\n          texteCorr = 'Un nombre impair peut s\\'écrire sous la forme $2n+1$ avec $n$ un entier naturel.'\n          this.autoCorrection[i].propositions = [\n            {\n              texte: '$2n+1$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: '$n+1$',\n              statut: false,\n              feedback: 'Que se passe-t-il si n est un nombre impair ?'\n            },\n            {\n              texte: '$n+3$',\n              statut: false,\n              feedback: 'Que se passe-t-il si n est un nombre impair ?'\n            },\n            {\n              texte: '$3n$',\n              statut: false,\n              feedback: 'Et si n est un nombre pair ?'\n            },\n            {\n              texte: '$n-1$',\n              statut: false,\n              feedback: 'Que se passe-t-il si n est un nombre impair ?'\n            },\n            {\n              texte: '$n+7$',\n              statut: false,\n              feedback: 'Que se passe-t-il si n est un nombre impair ?'\n            }\n          ]\n          break\n        case 18: // multiple de k\n          texte = `Écrire une expression littérale qui permet de représenter un multiple de ${k}.`\n          texteCorr = `Un multiple de ${k} peut s'écrire sous la forme $${k}n$ avec $n$ un entier naturel.`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${k}n$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${k}\\\\times n$`,\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: `$${k}+n$`,\n              statut: false,\n              feedback: 'Tu as confondu produit et somme.'\n            },\n            {\n              texte: `$${k}-n$`,\n              statut: false,\n              feedback: 'Tu as confondu produit et différence.'\n            },\n            {\n              texte: `$\\\\dfrac{${k}}{n}$`,\n              statut: false,\n              feedback: ''\n            },\n            {\n              texte: `$n-${k}$`,\n              statut: false,\n              feedback: 'Tu as confondu produit et différence.'\n            }\n          ]\n          break\n      }\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 5\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        if (this.interactif) {\n          texte += propositionsQcm(this, i).texte\n        }\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n    if (context.isAmc) {\n      this.amc = [this.id, this.autoCorrection, titre, amcType]\n    }\n  }\n  // this.besoinFormulaireCaseACocher = [\"Uniquement la lettre $n$.\"]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposant_nb_chiffres = 0, exposant_signe = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.valeur = { digits, decimals, signe, exposant_nb_chiffres, exposant_signe, approx }\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}