{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G14.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Proprietes_paralleles_perpendiculaires","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","type_de_questions_disponibles","questions_par_niveau","push","range","rangeMinMax","parseInt","concat","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","code","raisonnement","textetemp","droiteP","PP","Inter","droites","numDroites","phrases","d","P","objets","couleurd","droitecolor","num","couleurs","sortieHtml","texte","texteCorr","i","cpt","length","shuffle","randint","j","point","droiteParPointEtPente","epaisseur","droite","x","droiteParPointEtParallele","pointilles","droiteParPointEtPerpendiculaire","pointIntersectionDD","rotation","codageAngleDroit","mathalea","fenetreMathalea2d","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","mainlevee","amplitude","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/4888.e7ec5c06af0ce56427d2.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,range,rangeMinMax,shuffle,combinaisonListes} from '../../modules/outils.js'\nimport {point,pointIntersectionDD,droite,droiteParPointEtParallele,droiteParPointEtPerpendiculaire,droiteParPointEtPente,rotation,codageAngleDroit,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Utiliser les propriétés des droites perpendiculaires'\n\n/**\n * Ref 6G14\n * @Auteur Jean-Claude Lhote\n * publié le 22/11/2020\n */\nexport default function Proprietes_paralleles_perpendiculaires() {\n  \"use strict\";\n  Exercice.call(this);\n  this.titre = titre;\n  this.nbQuestions = 3;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 4;\n  this.correctionDetailleeDisponible = true;\n  this.correctionDetaillee = false;\n  this.nouvelleVersion = function () {\n    let type_de_questions_disponibles, questions_par_niveau = [];\n    questions_par_niveau.push(range(3))\n    questions_par_niveau.push(rangeMinMax(9, 15))\n    questions_par_niveau.push(rangeMinMax(19, 31, 20))\n\n    if (this.sup < 4) type_de_questions_disponibles = questions_par_niveau[parseInt(this.sup) - 1]\n    else type_de_questions_disponibles = questions_par_niveau[0].concat(questions_par_niveau[1].concat(questions_par_niveau[2]))\n\n    let listeTypeDeQuestions = combinaisonListes(\n      type_de_questions_disponibles,\n      this.nbQuestions\n    );\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let droites = [], code, raisonnement, numDroites = [], phrases = [], textetemp\n    let d = [], P = [], objets = [],  couleurd = [], droiteP, PP, Inter\n    let droitecolor = function (num) {\n      let couleurs\n      sortieHtml ? couleurs = ['red', 'blue', 'green', 'black', 'magenta', 'orange'] : couleurs = ['black', 'black', 'black', 'black', 'black', 'black'];\n      return couleurs[num]\n    }\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      texte = \"\"\n      texteCorr = \"\"\n      phrases.length = 0;\n      droites.length = 0;\n      objets.length = 0;\n      d.length = 0;\n      P.length = 0;\n      couleurd.length = 0\n      numDroites = shuffle([1, 2, 3, 4, 5]);\n      raisonnement = listeTypeDeQuestions[i]\n\n      switch (raisonnement) {\n        case 0: // si 1//2 et 2//3 alors 1//3\n          code = [[1, 2, 1], [2, 3, 1]];\n          break;\n        case 1: // si 1//2 et 2T3 alors 1T3\n          code = [[1, 2, 1], [2, 3, -1]]\n          break;\n        case 2: // si 1T2 et 2T3 alors 1//3\n          code = [[1, 2, -1], [2, 3, -1]]\n          break;\n        case 3: // si 1T2 et 2//3 alors 1T3\n          code = [[1, 2, -1], [2, 3, 1]]\n          break;\n        case 8: // Si 1//2 et 2//3 et 3//4 alors 1//4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1]];\n          break;\n        case 9: // Si 1//2 et 2//3 et 3T4 alors 1T4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1]];\n          break;\n        case 10: // Si 1//2 et 2T3 et 3//4 alors 1T4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1]];\n          break;\n        case 11: // Si 1//2 et 2T3 et 3T4 alors 1//4\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1]];\n          break;\n        case 12: // Si 1T2 et 2//3 et 3//4 alors 1T4\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1]];\n          break;\n        case 13: // Si 1T2 et 2//3 et 3T4 alors 1//4\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1]];\n          break;\n        case 14: // Si 1T2 et 2T3 et 3//4 alors 1//4\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1]];\n          break;\n        case 15: // Si 1T2 et 2T3 et 3T4 alors 1T4\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1]];\n          break;\n        case 16: // Si 1//2 et 2//3 et 3//4 et 4//5 alors 1//5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, 1]];\n          break;\n        case 17: // Si 1//2 et 2//3 et 3T4 et 4//5 alors 1T5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1], [4, 5, 1]];\n          break;\n        case 18: // Si 1//2 et 2T3 et 3//4 et 4//5 alors 1T5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, 1], [4, 5, 1]];\n          break;\n        case 19: // Si 1//2 et 2T3 et 3T4 et 4//5 alors 1//5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1], [4, 5, 1]];\n          break;\n        case 20: // Si 1T2 et 2//3 et 3//4 et 4//5 alors 1T5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1], [4, 5, 1]];\n          break;\n        case 21: // Si 1T2 et 2//3 et 3T4 et 4//5 alors 1//5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1], [4, 5, 1]];\n          break;\n        case 22: // Si 1T2 et 2T3 et 3//4 et 4//5 alors 1//5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1], [4, 5, 1]];\n          break;\n        case 23: // Si 1T2 et 2T3 et 3T4 et 4//5 alors 1T5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1], [4, 5, 1]];\n          break;\n        case 24: // Si 1//2 et 2//3 et 3//4 et 4T5 alors 1T5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, -1]];\n          break;\n        case 25: // Si 1//2 et 2//3 et 3T4 et 4T5 alors 1//5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1], [4, 5, -1]];\n          break;\n        case 26: // Si 1//2 et 2T3 et 3//4 et 4T5 alors 1//5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, 1], [4, 5, -1]];\n          break;\n        case 27: // Si 1//2 et 2T3 et 3T4 et 4T5 alors 1T5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1], [4, 5, -1]];\n          break;\n        case 28: // Si 1T2 et 2//3 et 3//4 et 4T5 alors 1//5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1], [4, 5, -1]];\n          break;\n        case 29: // Si 1T2 et 2//3 et 3T4 et 4T5 alors 1T5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1], [4, 5, -1]];\n          break;\n        case 30: // Si 1T2 et 2T3 et 3//4 et 4T5 alors 1T5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1], [4, 5, -1]];\n          break;\n        case 31: // Si 1T2 et 2T3 et 3T4 et 4T5 alors 1//5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1], [4, 5, -1]];\n          break;\n\n      }\n\n      // enoncé mélangé\n      texte += `On sait que `\n      couleurd.push(randint(0, 5))\n      for (let j = 0; j < code.length; j++) {\n        textetemp = `$(d_${numDroites[code[j][0] - 1]})`;\n        if (code[j][2] == 1) {\n          textetemp += `//`\n          couleurd.push(couleurd[j])\n        }\n        else {\n          textetemp += `\\\\perp`\n          couleurd.push((couleurd[j] + 1) % 6)\n        }\n        textetemp += `(d_${numDroites[code[j][1] - 1]})$`\n        phrases.push(textetemp)\n      }\n      //phrases=shuffle(phrases)\n      for (let j = 0; j < code.length - 1; j++) {\n        texte += phrases[j]\n        if (j != code.length - 2) texte += `, `\n        else texte += ` et `\n      }\n      texte += phrases[code.length - 1]\n      texte += `.<br>Que peut-on dire de $(d_${numDroites[code[0][0] - 1]})$ et $(d_${numDroites[code[code.length - 1][1] - 1]})$ ?`\n\n      //construction de la figure\n\n      P.push(point(0, 0))\n      droiteP = droiteParPointEtPente(P[0], randint(-1, 1, 0) / 10, `(d_${numDroites[code[0][0] - 1]})`, droitecolor(couleurd[0]))\n      droiteP.epaisseur = 2\n      droite.pointilles = false\n      d.push(droiteP)\n      objets.push(d[0])\n      for (let x = 0; x < code.length; x++) {\n        if (code[x][2] == 1) {\n          P.push(point((x + 1) * 2, (x + 1) * 2))\n          droiteP = droiteParPointEtParallele(P[x + 1], d[x], `(d_${numDroites[code[x][1] - 1]})`, droitecolor(couleurd[x + 1]))\n          droiteP.epaisseur = 2\n          droiteP.pointilles = d[x].pointilles\n          d.push(droiteP)\n        }\n        else {\n          P.push(point((x + 1) * 2, (x + 1) * 2))\n          droiteP = droiteParPointEtPerpendiculaire(P[x + 1], d[x], `(d_${numDroites[code[x][1] - 1]})`, droitecolor(couleurd[x + 1]))\n          droiteP.epaisseur = 2\n          droiteP.pointilles = x % 3 + 1\n          Inter = pointIntersectionDD(d[x], droiteP)\n          PP = rotation(P[x + 1], Inter, 90)\n          d.push(droiteP)\n          objets.push(codageAngleDroit(PP, Inter, P[x + 1], 'black', 0.6))\n        }\n        objets.push(d[x + 1])\n      }\n      for (let i = 0; i < code.length; i++) { // on ajoute les angles droits\n\n      }\n      // correction raisonnement ordonné\n      mathalea.fenetreMathalea2d = [-2, -2, 15, 10]\n      texteCorr = `À partir de l\\'énoncé, on peut réaliser le schéma suivant (il en existe une infinité)<br> Les droites données parallèles dans l'énoncé sont de même couleur/style.<br>`\n      texteCorr += mathalea2d({ xmin: -2, xmax: 15, ymin: -2, ymax: 10, pixelsParCm: 20, scale: 0.3, mainlevee: false, amplitude: 0.3 }, objets) + `<br>`\n      for (let j = 0; j < code.length - 1; j++) {\n        if (this.correctionDetaillee) texteCorr += `On sait que : `\n        else texteCorr += `Comme `\n        texteCorr += `$(d_${numDroites[code[j][0] - 1]})`;\n        if (code[j][2] == 1) texteCorr += `//`\n        else texteCorr += `\\\\perp`\n        texteCorr += `(d_${numDroites[code[j][1] - 1]})$ et `\n        texteCorr += `$(d_${numDroites[code[j + 1][0] - 1]})`;\n        if (code[j + 1][2] == 1) texteCorr += `//`\n        else texteCorr += `\\\\perp`\n        texteCorr += `(d_${numDroites[code[j + 1][1] - 1]})$`\n        // quelle propriété ?\n        if (code[j][2] * code[j + 1][2] == -1) { // Une parallèle et une perpendiculaire\n          if (this.correctionDetaillee) texteCorr += `.<br> Or «Si deux droites sont parallèles alors toute droite perpendiculaire à l'une est aussi perpendiculaire à l'autre».<br>Donc`\n          else texteCorr += `, on en déduit que `\n          texteCorr += ` $(d_${numDroites[code[0][0] - 1]})\\\\perp(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = -1\n        }\n        else if (code[j][2] > 0) { // deux parallèles\n          if (this.correctionDetaillee) texteCorr += `.<br> Or «Si deux droites sont parallèles à une même droite alors elles sont parallèles entre elles».<br>Donc`\n          else texteCorr += `, on en déduit que `\n          texteCorr += ` $(d_${numDroites[code[0][0] - 1]})//(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = 1\n\n        }\n        else { //deux perpendiculaires\n          if (this.correctionDetaillee) texteCorr += `.<br> Or «Si deux droites sont perpendiculaires à une même droite alors elles sont parallèles entre elles».<br>Donc`\n          else texteCorr += `, on en déduit que `\n          texteCorr += ` $(d_${numDroites[code[0][0] - 1]})//(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = 1\n\n        }\n\n\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte + \"<br>\");\n        this.listeCorrections.push(texteCorr + \"<br>\");\n        i++;\n      }\n      cpt++;\n    }\n\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = ['Nombre d\\'étapes de raisonnement :', 4, `1 : 1 étape\\n 2 : 2 étapes\\n 3 : 3 étapes\\n4 : Mélange aléatoire`]\n  // this.besoinFormulaire2CaseACocher = [\n  //  \"Avec figure ? \",false];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}