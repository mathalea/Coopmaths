{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N43.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","amcType","interactifReady","titre","CriteresDeDivisibilite","Exercice","this","sup","consigne","spacing","spacingCorr","nbQuestions","nouvelleVersion","listeExercicesDisponibles","parseInt","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","n","u","texte","texteCorr","sommeString","i","cpt","autoCorrection","enonce","propositions","statut","options","ordered","randint","texNombre","choice","toString","sommeDesChiffres","calcul","interactif","propositionsQcm","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/4595.96837bb6070b3078fc96.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, sommeDesChiffres, calcul, texNombre } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const amcType =1 //type de question AMC \nexport const interactifReady = true\nexport const titre = 'Critères de divisibilité'\n\n/**\n * Un nombre est-il divisible par :\n *\n * * 2, 5, 10 ?\n * * 3, 9 ?\n * * 2, 3, 5, 9, 10 ?\n * * 2, 3, 5, 9, 10  et un autre nombre qui peut être 7, 13, 17, ou 19 ?\n * @author Rémi Angot\n * 6N43\n */\nexport default function CriteresDeDivisibilite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 4 // Correspond au facteur commun\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.consigne = 'Répondre aux questions suivantes en justifiant.'\n  this.spacing = 2\n  this.spacingCorr = 1\n  this.nbQuestions = 5\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeExercicesDisponibles\n    if (this.sup === 1) {\n      listeExercicesDisponibles = [2, 5, 10]\n    }\n    if (this.sup === 2) {\n      listeExercicesDisponibles = [3, 9]\n    }\n    if (this.sup === 3) {\n      listeExercicesDisponibles = [2, 3, 5, 9, 10]\n    }\n    if (this.sup > 3) {\n      listeExercicesDisponibles = [2, 3, 5, 9, 10, 'autre']\n    }\n    const listeTypeDeQuestions = combinaisonListes(\n      listeExercicesDisponibles,\n      this.nbQuestions\n    )\n    for (let i = 0, n, u, texte, texteCorr, sommeString, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: 'Oui',\n          statut: false\n        },\n        {\n          texte: 'Non',\n          statut: false\n        },\n        {\n          texte: 'Je ne sais pas',\n          statut: false\n        }\n      ]\n      this.autoCorrection[i].options = { ordered: true } // On ne mélange pas les propositions 'Oui', 'Non' et 'Je ne sais pas'\n      switch (listeTypeDeQuestions[i]) {\n        case 2:\n          u = randint(1, 2)\n          n = randint(10, 999) * 10 + u\n          texte = `$${texNombre(n)}$ est-il divisible par $2$ ?`\n          if (u % 2 === 0) {\n            texteCorr = `Le chiffre des unités de $${texNombre(\n              n\n            )}$ est $${u}$ donc $${texNombre(n)}$ est divisible par $2$.`\n            this.autoCorrection[i].propositions[0].statut = true\n          } else {\n            texteCorr = `Le chiffre des unités de $${texNombre(\n              n\n            )}$ est $${u}$ donc $${texNombre(\n              n\n            )}$ n'est pas divisible par $2$.`\n            this.autoCorrection[i].propositions[1].statut = true\n          }\n          break\n\n        case 3:\n          n = choice([randint(100, 999), randint(10000, 99999)]).toString() // transformé en string pour avoir accès aux chiffres\n          sommeString = sommeDesChiffres(n)\n          texte = `$${texNombre(n)}$ est-il divisible par $3$ ?`\n          if (calcul(sommeString) % 3 === 0) {\n            texteCorr = `$${sommeString}=${calcul(sommeString)}=3\\\\times${calcul(sommeString) / 3\n              }$<br>`\n            texteCorr += `La somme des chiffres de $${texNombre(\n              n\n            )}$ est divisible par $3$ donc $${texNombre(\n              n\n            )}$ est divisible par $3$.`\n            this.autoCorrection[i].propositions[0].statut = true\n          } else {\n            texteCorr = `$${sommeString}=${calcul(sommeString)}=3\\\\times${(calcul(sommeString) - (calcul(sommeString) % 3)) / 3\n              }+${calcul(sommeString) % 3}$<br>`\n            texteCorr += `La somme des chiffres de $${texNombre(\n              n\n            )}$ n'est pas divisible par $3$ donc $${texNombre(\n              n\n            )}$ n'est pas divisible par $3$.`\n            this.autoCorrection[i].propositions[1].statut = true\n          }\n          break\n\n        case 9:\n          n = choice([randint(100, 999), randint(10000, 99999)]).toString() // transformé en string pour avoir accès aux chiffres\n          sommeString = sommeDesChiffres(n)\n          texte = `$${texNombre(n)}$ est-il divisible par $9$ ?`\n          if (calcul(sommeString) % 9 === 0) {\n            texteCorr = `$${sommeString}=${calcul(sommeString)}=9\\\\times${calcul(sommeString) / 9\n              }$<br>`\n            texteCorr += `La somme des chiffres de $${texNombre(\n              n\n            )}$ est divisible par $9$ donc $${texNombre(\n              n\n            )}$ est divisible par $9$.`\n            this.autoCorrection[i].propositions[0].statut = true\n          } else {\n            texteCorr = `$${sommeString}=${calcul(sommeString)}=9\\\\times${(calcul(sommeString) - (calcul(sommeString) % 9)) / 9\n              }+${calcul(sommeString) % 9}$<br>`\n            texteCorr += `La somme des chiffres de $${texNombre(\n              n\n            )}$ n'est pas divisible par $9$ donc $${texNombre(\n              n\n            )}$ n'est pas divisible par $9$.`\n            this.autoCorrection[i].propositions[1].statut = true\n          }\n          break\n\n        case 5:\n          u = choice([randint(1, 9, [0, 5]), randint(1, 9, [0, 5]), 5, 0]) // 1 fois sur 2 ça sera divisible par 5\n          n = randint(10, 9999) * 10 + u\n          texte = `$${texNombre(n)}$ est-il divisible par $5$ ?`\n          if (u % 5 === 0) {\n            texteCorr = `Le chiffre des unités de $${texNombre(\n              n\n            )}$ est $${u}$ donc $${texNombre(n)}$ est divisible par $5$.`\n            this.autoCorrection[i].propositions[0].statut = true\n          } else {\n            texteCorr = `Le chiffre des unités de $${texNombre(\n              n\n            )}$ est $${u}$ donc $${texNombre(\n              n\n            )}$ n'est pas divisible par $5$.`\n            this.autoCorrection[i].propositions[1].statut = true\n          }\n          break\n\n        case 10:\n          u = choice([randint(1, 9), 0]) // 1 fois sur 2 ça sera divisible par 10\n          n = randint(10, 9999) * 10 + u\n          texte = `$${texNombre(n)}$ est-il divisible par $10$ ?`\n          if (u === 0) {\n            texteCorr = `Le chiffre des unités de $${texNombre(\n              n\n            )}$ est $${u}$ donc $${texNombre(n)}$ est divisible par $10$.`\n            this.autoCorrection[i].propositions[0].statut = true\n          } else {\n            texteCorr = `Le chiffre des unités de $${texNombre(\n              n\n            )}$ est $${u}$ donc $${texNombre(\n              n\n            )}$ n'est pas divisible par $10$.`\n            this.autoCorrection[i].propositions[1].statut = true\n          }\n          break\n\n        case 'autre':\n          n = randint(100, 999)\n          u = choice([7, 7, 7, 7, 13, 17, 19])\n          if (u === 7) {\n            n = choice(\n              [randint(10, 99) * 10 + 7],\n              7 * randint(11, 99),\n              randint(100, 999)\n            ) // un nombre qui se termine par 7, un divisible par 7, un au hasard\n          } else {\n            n = choice(\n              [randint(10, 99) * 100 + u],\n              u * randint(11, 99),\n              randint(100, 999)\n            ) // un nombre qui se termine par u, un divisible par u, un au hasard\n          }\n          texte = `$${texNombre(n)}$ est-il divisible par $${u}$ ?`\n          texteCorr = `On ne connait pas de critère de divisibilité par $${u}$, on calcule donc la division euclidienne de $${texNombre(\n            n\n          )}$ par $${u}$.<br>`\n          if (n % u === 0) {\n            texteCorr += `$${texNombre(n)}=${u}\\\\times${texNombre(\n              n / u\n            )}$<br>`\n            texteCorr += `Le reste de la division euclidienne est nul donc $${texNombre(\n              n\n            )}$ est divisible par $${u}$.`\n            this.autoCorrection[i].propositions[0].statut = true\n          } else {\n            texteCorr += `$${texNombre(n)}=${u}\\\\times${(n - (n % u)) / u}+${n % u\n              }$<br>`\n            texteCorr += `Le reste de la division euclidienne n'est pas nul donc $${texNombre(\n              n\n            )}$ n'est pas divisible par $${u}$.`\n            this.autoCorrection[i].propositions[1].statut = true\n          }\n\n          break\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Choix des questions', 4, '1 : Critères de divisibilité par 2, 5, 10\\n2 : Critères de divisibilité par 3,9\\n3 : Critères de divisibilité par 2, 3, 5, 9, 10\\n4 : Avec ou sans critère de divisibilité']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}