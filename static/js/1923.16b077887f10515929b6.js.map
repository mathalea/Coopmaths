{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N41.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","amcReady","amcType","interactifReady","EgalitesEntreFractions","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","qcmDisponible","modeQcm","nouvelleVersion","parseInt","listeQuestions","listeCorrections","listeFractions","listeTypeDeQuestions","combinaisonListes","nbQuestions","fraction","a","b","c","d","k","choix","texte","texteCorr","i","choice","randint","Math","max","enleveElement","texFraction","miseEnEvidence","autoCorrection","enonce","propositions","statut","abs","interactif","context","propositionsQcm","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","length","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","id","feedback","type","querySelectorAll","uicheck","classList","add","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","digits","decimals","signe","exposant_nb_chiffres","exposant_signe","approx","reponse","valeur","exerciceInteractif","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"sPAIO,MAAMA,EAAQ,mCACRC,GAAW,EACXC,EAAS,EACTC,GAAkB,EAQhB,SAASC,IACtBC,eAAcC,MACdA,KAAKC,IAAM,GACXD,KAAKE,KAAO,EACZF,KAAKN,MAAQA,EACbM,KAAKL,SAAWA,EAChBK,KAAKJ,QAAUA,EACfI,KAAKH,gBAAkBA,EACvBG,KAAKG,SAAW,0BAChBH,KAAKI,QAAU,EACfJ,KAAKK,YAAc,EACnBL,KAAKM,eAAgB,EACrBN,KAAKO,SAAU,EAEfP,KAAKQ,gBAAkB,WACrBR,KAAKC,IAAMQ,SAAST,KAAKC,KACzBD,KAAKE,KAAOO,SAAST,KAAKE,MAC1BF,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxB,MAAMC,EAAiB,CACrB,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,KAEAC,GAAuBC,SAC3B,CAAC,EAAG,EAAG,EAAG,EAAG,GACbd,KAAKe,aAEP,IACE,IAAWC,EAAUC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAOC,EAAOC,EAA9CC,EAAI,EACRA,EAAIzB,KAAKe,YACTU,IACA,CACA,GAAgC,IAA5BZ,EAAqBY,GAkBvB,OAhBAT,GAAWU,SAAOd,GAClBK,EAAID,EAAS,GACbE,EAAIF,EAAS,GAEXK,EADErB,KAAKO,SACHoB,SAAQ,EAAGC,KAAKC,IAAI7B,KAAKC,IAAK,KAE9B0B,SAAQ,EAAGC,KAAKC,IAAI,EAAG7B,KAAKC,MAElCkB,EAAIE,EAAIJ,EACRG,EAAIC,EAAIH,GACRY,SAAclB,EAAgBI,GAE5BM,EADgB,IAAdtB,KAAKE,KACCuB,EAAI,EAEJzB,KAAKE,KAAO,EAEdoB,GACN,KAAK,EACHC,EAAS,KAAGQ,SAAYd,EAAGC,SAAQa,SAAY,4BAA6B,mCAAkCA,SAAY,kBAAmBX,MAC7II,EAAa,KAAGO,SAAYd,EAAGC,SAAQa,SAAYd,GAAIe,QAAe,UAAYX,GAAIH,GAAIc,QAAe,UAAYX,UAASU,SAAYZ,EAAGC,MAC7IpB,KAAKiC,eAAeR,GAAK,GACzBzB,KAAKiC,eAAeR,GAAGS,OAAU,GAAEX,MACnCvB,KAAKiC,eAAeR,GAAGU,aAAe,CACpC,CACEZ,MAAQ,KAAGQ,SAAYZ,EAAGC,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYd,EAAGG,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,UAAaV,EAAI,GAAKJ,EAAGG,MACpCgB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,UAAaV,EAAI,GAAKJ,EAAGG,MACpCgB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYH,KAAKS,IAAIjB,EAAIH,GAAIG,MACxCgB,QAAQ,IAGZ,MACF,KAAK,EACHb,EAAS,KAAGQ,SAAYd,EAAGC,SAAQa,SAAY,4BAA6B,mCAAkCA,SAAYZ,EAAG,sBAC7HK,EAAa,KAAGO,SAAYd,EAAGC,SAAQa,SAAYd,GAAIe,QAAe,UAAYX,GAAIH,GAAIc,QAAe,UAAYX,UAASU,SAAYZ,EAAGC,MAC7IpB,KAAKiC,eAAeR,GAAK,GACzBzB,KAAKiC,eAAeR,GAAGS,OAAU,GAAEX,MACnCvB,KAAKiC,eAAeR,GAAGU,aAAe,CACpC,CACEZ,MAAQ,KAAGQ,SAAYZ,EAAGC,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYZ,EAAGD,MAC1BkB,QAAQ,GAEV,CACEb,MAAQ,YAAWJ,OAAOE,EAAI,GAAKH,MACnCkB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYZ,GAAIE,EAAI,GAAKH,MACpCkB,QAAQ,GAEV,CACEb,MAAQ,YAAWJ,MAAMS,KAAKS,IAAIlB,EAAID,OACtCkB,QAAQ,SAoBhB,OAZAnB,GAAIU,SAAQ,EAAG,GAEbP,EADEpB,KAAKsC,aAAeC,YAClBZ,SAAQ,EAAG,EAAG,CAACV,EAAG,EAAIA,KAEtBU,SAAQ,EAAG,GAEjBR,EAAIF,EAAIG,EAENE,EADgB,IAAdtB,KAAKE,KACCuB,EAAI,EAEJzB,KAAKE,KAAO,EAEdoB,GACN,KAAK,EACHC,EAAS,IAAGN,QAAOc,SAAY,4BAA6B,mCAAkCA,SAAY,kBAAmBX,MACzHpB,KAAKsC,aACPf,EAAS,IAAGN,gBAEdO,EAAa,IAAGP,eAAeA,WAAUc,SAAYd,GAAIe,QAAe,UAAYZ,GAAI,KAAMY,QAAe,UAAYZ,UAASW,SAAYZ,EAAGC,MACjJpB,KAAKiC,eAAeR,GAAK,GACzBzB,KAAKiC,eAAeR,GAAGS,OAAU,GAAEX,MACnCvB,KAAKiC,eAAeR,GAAGU,aAAe,CACpC,CACEZ,MAAQ,KAAGQ,SAAYZ,EAAGC,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYd,EAAGG,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYX,EAAIH,EAAGG,MAC9BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYH,KAAKS,IAAIjB,EAAIH,GAAIG,MACxCgB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,UAAad,EAAI,GAAKG,EAAGA,MACpCgB,QAAQ,IAGZ,MACF,KAAK,EACHb,EAAS,IAAGN,QAAOc,SAAY,4BAA6B,mCAAkCA,SAAYZ,EAAG,sBACzGnB,KAAKsC,aACPf,EAAS,IAAGN,gBAEdO,EAAa,IAAGP,eAAeA,WAAUc,SAAYd,GAAIe,QAAe,UAAYZ,GAAI,KAAMY,QAAe,UAAYZ,UAASW,SAAYZ,EAAGC,MACjJpB,KAAKiC,eAAeR,GAAK,GACzBzB,KAAKiC,eAAeR,GAAGS,OAAU,GAAEX,MACnCvB,KAAKiC,eAAeR,GAAGU,aAAe,CACpC,CACEZ,MAAQ,KAAGQ,SAAYZ,EAAGC,MAC1BgB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYZ,EAAGA,EAAIF,MAC9BmB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYZ,EAAGF,MAC1BmB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYZ,EAAGA,EAAIF,MAC9BmB,QAAQ,GAEV,CACEb,MAAQ,KAAGQ,SAAYZ,EAAGA,EAAIF,MAC9BmB,QAAQ,IAOdpC,KAAKsC,aACPf,GAAS,QAASiB,QAAgBxC,KAAMyB,GAAGF,OAE7CvB,KAAKU,eAAe+B,KAAKlB,GACzBvB,KAAKW,iBAAiB8B,KAAKjB,IAE7BkB,SAAwB1C,OAE1BA,KAAK2C,0BAA4B,CAAC,oCAAqC,IACvE3C,KAAK4C,2BAA6B,CAAC,mBAAoB,EAAG,oE,6BC5O7C,SAAS7C,IAEtBC,KAAKN,MAAQ,GACbM,KAAKG,SAAW,GAChBH,KAAK6C,mBAAqB,GAC1B7C,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxBX,KAAK8C,aAAe,GACpB9C,KAAK+C,QAAU,GACf/C,KAAKgD,kBAAoB,GACzBhD,KAAKe,YAAc,GACnBf,KAAKiD,OAAS,EACdjD,KAAKkD,WAAa,EAClBlD,KAAKI,QAAU,EACfJ,KAAKK,YAAc,EACnBL,KAAKmD,QAAS,EAEdnD,KAAK2C,2BAA4B,EACjC3C,KAAKoD,uBAAwB,EAC7BpD,KAAKqD,6BAA8B,EACnCrD,KAAKsD,oBAAqB,EAC1BtD,KAAKuD,uBAAwB,EAC7BvD,KAAKwD,kBAAmB,EACxBxD,KAAKyD,sBAAuB,EAC5BzD,KAAK0D,mBAAoB,EACzB1D,KAAK2D,uBAAwB,EAC7B3D,KAAK4D,+BAAgC,EACrC5D,KAAK6D,qBAAsB,EAC3B7D,KAAK8D,MAAQ,GACb9D,KAAK+D,YAAa,EAClB/D,KAAKgE,gBAAkB,GAMvBhE,KAAKiE,mBAAoB,EACzBjE,KAAKsC,YAAa,EAClBtC,KAAKkE,uBAAwB,EAC7BlE,KAAKmE,KAAM,EACXnE,KAAKM,eAAgB,EACrBN,KAAKO,SAAU,EACfP,KAAKiC,eAAiB,GACtBjC,KAAKoE,sBAAwB,GAC7BpE,KAAKqE,cAAe,EACpBrE,KAAKQ,gBAAkB,SAAU8D,KACjCtE,KAAKuE,cAAgB,G,6ICzChB,SAASC,EAAaC,GAC3BC,SAASC,iBAAiB,qBAAqB,KAE7CC,EAAE,gBAAgBC,WAElB,MAEMC,EAASJ,SAASK,cAAe,YAAWN,EAASH,kBACvDQ,GACFA,EAAOH,iBAAiB,SAASK,IAC/B,IAAK,IAAIvD,EAAI,EAAGA,EAAIgD,EAAS1D,YAAaU,IAAK,CAE7C,IAGIwD,EAHAC,EAAmB,EACnBC,EAAsB,EACtBC,EAA4B,EAGhC,IAAK,IAAI/D,EAAI,EAAGA,EAAIoD,EAASxC,eAAeR,GAAGU,aAAakD,OAAQhE,IAC9DoD,EAASxC,eAAeR,GAAGU,aAAad,GAAGe,QAAQgD,IAEzD,MAAME,EAAmBZ,SAASK,cAAe,mBAAkBN,EAASH,kBAAkB7C,KAC9FgD,EAASxC,eAAeR,GAAGU,aAAaoD,SAAQ,CAACC,EAAaC,KAC5D,MAAMC,EAAQhB,SAASK,cAAe,WAAUN,EAASH,kBAAkB7C,KAAKgE,KAC1EE,EAAQjB,SAASK,cAAe,WAAUN,EAASH,kBAAkB7C,KAAKgE,KAC5ED,EAAYpD,QACdsD,EAAME,MAAMC,gBAnBN,2BAoBFF,EAAMG,UACRZ,IACAD,EAAiBQ,KAEQ,IAAlBE,EAAMG,UACfJ,EAAME,MAAMC,gBA1BL,yBA2BPV,IACAF,EAAiBQ,MAGrB,IAAIM,EAAe,WACS,IAAxBZ,GAA6BD,IAAqBE,EACpDE,EAAiBU,UAAY,MAE7BV,EAAiBU,UAAY,KAC7BD,EAAe,SAEjBT,EAAiBM,MAAMK,SAAW,QAC9BhB,GAAkB,IACpBiB,OAAgB,CACdC,GAAK,aAAY1B,EAASH,kBAAkB7C,IAC5CF,MAAOkD,EAASxC,eAAeR,GAAGU,aAAa8C,GAAgBmB,SAC/DC,KAAMN,IAIKrB,SAAS4B,iBAAkB,kBAAiB7B,EAASH,kBAC7DiB,SAAQ,SAAUgB,GACzBA,EAAQC,UAAUC,IAAI,gBAExB3B,EAAO0B,UAAUC,IAAI,kBAatB,SAASjE,EAAiBiC,EAAUhD,GACzCgD,EAAS/E,MAAQ,aACjB,IAAI6B,EAAQ,GACRC,EAAY,GACZkF,EAAS,GAeb,GAbEA,EADEnE,YACO,SAEA,eAGgCoE,IAAvClC,EAASxC,eAAeR,GAAGmF,QACxBnC,EAASxC,eAAeR,GAAGmF,QAAQC,UACtCpC,EAASxC,eAAeR,GAAGU,cAAe2E,SAAcrC,EAASxC,eAAeR,GAAGU,aAAcsC,EAASxC,eAAeR,GAAGmF,QAAQG,aAGtItC,EAASxC,eAAeR,GAAGU,cAAe2E,SAAcrC,EAASxC,eAAeR,GAAGU,cAqChF,SAA0BA,GAC/B,IAAI6E,GAAkB,EACtB,IAAK,IAAIvF,EAAI,EAAGA,EAAIU,EAAakD,OAAS,EAAG5D,IAC3C,IAAK,IAAIwF,EAAIxF,EAAI,EAAGwF,EAAI9E,EAAakD,QAC/BlD,EAAaV,GAAGF,QAAUY,EAAa8E,GAAG1F,OAE5CyF,GAAkB,EACd7E,EAAaV,GAAGW,OAClBD,EAAa+E,OAAOD,EAAG,GACd9E,EAAa8E,GAAG7E,QAEzBD,EAAa+E,OAAOD,EAAG,GACvB9E,EAAaV,GAAGW,QAAS,GAEzBD,EAAa+E,OAAOD,EAAG,IAGzBA,IApDNE,CAAgB1C,EAASxC,eAAeR,GAAGU,eACtCI,WAAe,CACdA,YACFhB,GAAU,yBAAwBkD,EAASH,kBAAkB7C,MAE7DF,GAAS,OAEX,IAAK,IAAI6F,EAAM,EAAGA,EAAM3C,EAASxC,eAAeR,GAAGU,aAAakD,OAAQ+B,IAClE7E,YACFhB,GAAU,6BAA4BkD,EAASH,sGACqBG,EAASH,kBAAkB7C,KAAK2F,sCAC5E3C,EAASH,kBAAkB7C,KAAK2F,MAAQ3C,EAASxC,eAAeR,GAAGU,aAAaiF,GAAK7F,MAAQmF,8BAGrHnF,GAAU,iBAAgBkD,EAASxC,eAAeR,GAAGU,aAAaiF,GAAK7F,QAAUmF,EAE/EjC,EAASxC,eAAeR,GAAGU,aAAaiF,GAAKhF,OAC/CZ,GAAc,sBAAqBiD,EAASxC,eAAeR,GAAGU,aAAaiF,GAAK7F,QAAUmF,EAE1FlF,GAAc,iBAAgBiD,EAASxC,eAAeR,GAAGU,aAAaiF,GAAK7F,QAAUmF,EAGrFnE,cACFhB,GAAU,4BAA2BkD,EAASH,kBAAkB7C,aAChEF,GAAU,wBAAuBkD,EAASH,kBAAkB7C,qBAGhE,MAAO,CAAEF,MAAOA,EAAOC,UAAWA,GA+D7B,SAAS6F,EAAkB5C,EAAUhD,GAAG,MAAEF,EAAQ,GAAV,WAAc+F,EAAa,GAA3B,OAA+BC,GAAS,EAAxC,QAA8CC,GAAU,GAAS,IAC9G,OAAIjF,YACM,uBAAsBgF,EAAS,SAAW,uDAEzChG,uCACciG,EAAU,6DAA+D,uBAAuB/C,EAASH,kBAAkB7C,qBACxI6F,4CACmB7C,EAASH,kBAAkB7C,qCAIjD,GAUJ,SAASgG,EAAYhD,EAAUhD,EAAGR,GAAG,OAACyG,EAAS,EAAV,SAAaC,EAAW,EAAxB,MAA2BC,GAAQ,EAAnC,qBAA0CC,EAAuB,EAAjE,eAAoEC,GAAiB,EAArF,OAA4FC,EAAS,GAAK,SACjHpB,IAA/BlC,EAASxC,eAAeR,KAC1BgD,EAASxC,eAAeR,GAAK,SAEYkF,IAAvClC,EAASxC,eAAeR,GAAGuG,UAC7BvD,EAASxC,eAAeR,GAAGuG,QAAU,IAEvCvD,EAASxC,eAAeR,GAAGuG,QAAQC,OAAShH,EAC5CwD,EAASxC,eAAeR,GAAGuG,QAAQC,OAAS,CAAEP,SAAQC,WAAUC,QAAOC,uBAAsBC,iBAAgBC,UAGxG,SAASG,EAAoBzD,GACT,IAArBA,EAAS7E,SA1DR,SAA4B6E,GACjCC,SAASC,iBAAiB,qBAAqB,KAC7C,MAAMG,EAASJ,SAASK,cAAe,YAAWN,EAASH,kBACvDQ,GACFA,EAAOH,iBAAiB,SAASK,IAGGP,EAAS1D,YAC3C,IAAK,MAAMU,KAAKgD,EAASxC,eAAgB,CACvC,MAAMqD,EAAmBZ,SAASK,cAAe,mBAAkBN,EAASH,kBAAkB7C,KAE1FiD,SAASyD,eAAgB,eAAc1D,EAASH,kBAAkB7C,KAAK2G,MAAMC,WAAW,IAAK,MAAQ5D,EAASxC,eAAeR,GAAGuG,QAAQC,OAAOK,WAAWD,WAAW,IAAK,IAC5K/C,EAAiBU,UAAY,KAG7BV,EAAiBU,UAAY,KAG/BV,EAAiBM,MAAMK,SAAW,eAwCdsC,CAAkB9D,GACrB,IAArBA,EAAS7E,SAAe4E,EAAYC,GACf,IAArBA,EAAS7E,SAAe4E,EAAYC,K,4BC7N1C,SAAS+D,EAAYC,GAEnB,MAAsB,WAAlBA,EAAOC,OACD,8KAE+BD,EAAO/I,4BAE1C+I,EAAOE,oBAGS,YAAlBF,EAAOC,OACD,2KAE0BD,EAAO/I,4BAErC+I,EAAOE,oBAGS,SAAlBF,EAAOC,OACD,uKAE8BD,EAAO/I,4BAEzC+I,EAAOE,yBALb,EAeK,SAASC,EAAoBH,GAClC,IAAII,EAAY,GACI,wBAAhBJ,EAAOK,KACTD,EAAYL,EAAW,CACrB9I,MAAO,yCACPiJ,QAAU,iBAAgBF,EAAOhE,iHACjCiE,OAAQ,WAEe,aAAhBD,EAAOK,KAChBD,EAAYL,EAAW,CACrB9I,MAAO,sCACPiJ,QAAU,sPAEVD,OAAQ,YAEe,gBAAhBD,EAAOK,OAChBD,EAAYL,EAAW,CACrB9I,MAAO,yCACPiJ,QAAU,sPAEVD,OAAQ,aAGZhE,SAASyD,eAAe,mBAAmBnC,UAAY6C,EACvDnE,SAASyD,eAAe,uBAAuBxD,iBAAiB,SAAS,WACvED,SAASyD,eAAe,mBAAmBY,YASxC,SAAS7C,GAAiB,GAAEC,EAAF,MAAM5E,EAAQ,GAAd,KAAkB8E,EAAO,SAAY,IAEpE,GAAIF,GAAM5E,EAAO,CACf,MAAMyH,EAAQ,2BAA0B7C,gBAFtBE,GAAQ,6DAEgGF,uCACpH5E,cAENmD,SAASyD,eAAehC,GAAIH,UAAYgD,EACxCtE,SAASyD,eAAgB,iBAAgBhC,KAAMxB,iBAAiB,SAAS,WACvED,SAASyD,eAAgB,kBAAiBhC,KAAM4C,a","file":"js/1923.16b077887f10515929b6.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, combinaisonListes, miseEnEvidence, texFraction } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const titre = 'Égalités entre fractions simples'\nexport const amcReady = true\nexport const amcType =1 // QCM \nexport const interactifReady = true\n\n/**\n * Écrire une fraction avec un nouveau dénominateur qui est un multiple de son dénominateur (ce multiple est inférieur à une valeur maximale de 11 par défaut)\n * @Auteur Rémi Angot\n * @auteur Jean-claude Lhote (Mode QCM et alternance numérateur / dénominateur)\n * 5N13-2 et 6N41\n */\nexport default function EgalitesEntreFractions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 11 // Correspond au facteur commun\n  this.sup2 = 2 // alternace numérateur ou dénominateur imposé.\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.consigne = 'Compléter les égalités.'\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.sup2 = parseInt(this.sup2)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const listeFractions = [\n      [1, 2],\n      [1, 3],\n      [2, 3],\n      [1, 4],\n      [3, 4],\n      [1, 5],\n      [2, 5],\n      [3, 5],\n      [4, 5],\n      [1, 6],\n      [5, 6],\n      [1, 7],\n      [2, 7],\n      [3, 7],\n      [4, 7],\n      [5, 7],\n      [6, 7],\n      [1, 8],\n      [3, 8],\n      [5, 8],\n      [7, 8],\n      [1, 9],\n      [2, 9],\n      [4, 9],\n      [5, 9],\n      [7, 9],\n      [8, 9],\n      [1, 10],\n      [3, 10],\n      [7, 10],\n      [9, 10]\n    ] // Couples de nombres premiers entre eux\n    const listeTypeDeQuestions = combinaisonListes(\n      [1, 1, 1, 1, 2],\n      this.nbQuestions\n    )\n    for (\n      let i = 0, fraction, a, b, c, d, k, choix, texte, texteCorr;\n      i < this.nbQuestions;\n      i++\n    ) {\n      if (listeTypeDeQuestions[i] === 1) {\n        // égalité entre 2 fractions\n        fraction = choice(listeFractions) //\n        a = fraction[0]\n        b = fraction[1]\n        if (this.modeQcm) {\n          k = randint(3, Math.max(this.sup, 4))\n        } else {\n          k = randint(2, Math.max(3, this.sup))\n        }\n        c = k * a\n        d = k * b\n        enleveElement(listeFractions, fraction) // Il n'y aura pas 2 fois la même fraction de départ\n        if (this.sup2 === 3) {\n          choix = i % 2\n        } else {\n          choix = this.sup2 % 2\n        }\n        switch (choix) {\n          case 0 :\n            texte = `$${texFraction(a, b)} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction('\\\\phantom{0000}', d)}$`\n            texteCorr = `$${texFraction(a, b)} = ${texFraction(a + miseEnEvidence('\\\\times' + k), b + miseEnEvidence('\\\\times' + k))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction((k - 1) * a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction((k + 1) * a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(Math.abs(d - a), d)}$`,\n                statut: false\n              }\n            ]\n            break\n          case 1 :\n            texte = `$${texFraction(a, b)} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction(c, '\\\\phantom{0000}')}$`\n            texteCorr = `$${texFraction(a, b)} = ${texFraction(a + miseEnEvidence('\\\\times' + k), b + miseEnEvidence('\\\\times' + k))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(c, b)}$`,\n                statut: false\n              },\n              {\n                texte: `$\\\\dfrac{${c}}{${(k - 1) * b}}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, (k + 1) * b)}$`,\n                statut: false\n              },\n              {\n                texte: `$\\\\dfrac{${c}}{${Math.abs(c - b)}}$`,\n                statut: false\n              }\n            ]\n\n            break\n        }\n      } else {\n        // écrire un entier sous la forme d'une fraction\n        a = randint(1, 9)\n        if (this.interactif && !context.isAmc) {\n          d = randint(3, 9, [a, 2 * a])\n        } else {\n          d = randint(2, 9)\n        }\n        c = a * d\n        if (this.sup2 === 3) {\n          choix = i % 2\n        } else {\n          choix = this.sup2 % 2\n        }\n        switch (choix) {\n          case 0 :\n            texte = `$${a} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction('\\\\phantom{0000}', d)}$`\n            if (this.interactif) {\n              texte = `$${a} = \\\\ldots$`\n            }\n            texteCorr = `$${a} = \\\\dfrac{${a}}{1} =${texFraction(a + miseEnEvidence('\\\\times' + d), '1' + miseEnEvidence('\\\\times' + d))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(d + a, d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(Math.abs(d - a), d)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction((a + 1) * d, d)}$`,\n                statut: false\n              }\n            ]\n            break\n          case 1 :\n            texte = `$${a} = ${texFraction('\\\\phantom{00000000000000}', '\\\\phantom{00000000000000}')} = ${texFraction(c, '\\\\phantom{0000}')}$`\n            if (this.interactif) {\n              texte = `$${a} = \\\\ldots$`\n            }\n            texteCorr = `$${a} = \\\\dfrac{${a}}{1} =${texFraction(a + miseEnEvidence('\\\\times' + d), '1' + miseEnEvidence('\\\\times' + d))} = ${texFraction(c, d)}$`\n            this.autoCorrection[i] = {}\n            this.autoCorrection[i].enonce = `${texte}\\n`\n            this.autoCorrection[i].propositions = [\n              {\n                texte: `$${texFraction(c, d)}$`,\n                statut: true\n              },\n              {\n                texte: `$${texFraction(c, c - a)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, a)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, c + a)}$`,\n                statut: false\n              },\n              {\n                texte: `$${texFraction(c, c * a)}$`,\n                statut: false\n              }\n            ]\n\n            break\n        }\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale du facteur commun', 99]\n  this.besoinFormulaire2Numerique = ['Type de question', 3, '1 : Numérateur imposé\\n2 : Dénominateur imposé\\n3 : Alternance']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposant_nb_chiffres = 0, exposant_signe = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.valeur = { digits, decimals, signe, exposant_nb_chiffres, exposant_signe, approx }\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}