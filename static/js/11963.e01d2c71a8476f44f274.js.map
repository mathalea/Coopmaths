{"version":3,"sources":["webpack://mathalea/./src/js/exercices/2e/2G51-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","equationcartesienne","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","parseInt","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","xA","yA","xu","yu","texte","texteCorr","i","cpt","randint","ecritureAlgebriqueSauf1","ecritureParentheseSiNegatif","ecritureAlgebrique","reduireAxPlusB","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/11963.e01d2c71a8476f44f274.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, ecritureAlgebrique, ecritureParentheseSiNegatif, ecritureAlgebriqueSauf1, reduireAxPlusB } from '../../modules/outils.js'\nexport const titre = 'Déterminer une équation cartésienne de droite à partir d\\'un point et d\\'un vecteur directeur.'\n// totoche\n/**\n * Description didactique de l'exercice\n * @author Stéphane Guyon\n * Référence\n*/\nexport default function equationcartesienne () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Déterminer une équation cartésienne de la droite $\\\\bm(d)$'\n  this.nbQuestions = 2\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeQuestionsDisponibles = ['cartesienne1']\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, xA, yA, xu, yu, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'cartesienne1':\n          xA = randint(-5, 5)\n          yA = randint(-5, 5)\n          xu = randint(-5, 5)\n          yu = randint(-5, 5)\n          texte = `passant par le point $A$ de coordonnées : $A(${xA};${yA})$ et ayant le vecteur $\\\\vec u \\\\begin{pmatrix}${xu}\\\\\\\\${yu}\\\\end{pmatrix}$ comme vecteur directeur.`\n          if (this.sup === 1) {\n            texte += '<br><i>On demande une rédaction utilisant un résultat de cours.</i>'\n            texteCorr = 'On sait, d\\'après le cours, que si une droite $(d)$ admet un vecteur directeur de coordonnées :'\n            texteCorr += ' $\\\\vec {u} \\\\begin{pmatrix}-b\\\\\\\\a\\\\end{pmatrix}$, '\n            texteCorr += '<br>alors une équation cartésienne de la droite $(d)$ est de la forme $ax+by+c=0$. '\n            texteCorr += `<br>Avec les données de l'énoncé, $\\\\vec u \\\\begin{pmatrix}${xu}\\\\\\\\${yu}\\\\end{pmatrix}$,`\n            texteCorr += ` <br>on en déduit donc que :$-b = ${xu}$ et $a=${yu}$.`\n            texteCorr += ` <br>L'équation cartésienne est donc de la forme : $ ${yu} x ${ecritureAlgebriqueSauf1(-xu)} y + c=0$. `\n            texteCorr += `<br>On cherche maintenant la valeur correspondante de $c$. <br>On utilise pour cela que $A(${xA};${yA}) \\\\in(d)$. `\n            texteCorr += ` <br>$\\\\iff ${yu} \\\\times ${ecritureParentheseSiNegatif(xA)} ${ecritureAlgebrique(-xu)} \\\\times ${ecritureParentheseSiNegatif(yA)}+ c=0$ `\n            texteCorr += ` <br>$\\\\iff  ${yu * xA} ${ecritureAlgebrique(-xu * yA)} + c=0$ `\n            texteCorr += ` <br>$\\\\iff  c= ${-xA * yu + yA * xu}$ `\n            if (xu === 0) { texteCorr += ` <br>Une équation cartésienne est donc de la forme : $ (d): ${reduireAxPlusB(yu, 0)} ${ecritureAlgebrique(-xA * yu + yA * xu)}=0$ ` } else {\n              if (xu === 1) { texteCorr += ` <br>Une équation cartésienne est donc de la forme : $ (d): ${reduireAxPlusB(yu, 0)}-y ${ecritureAlgebrique(-xA * yu + yA * xu)}=0$ ` }\n              if (xu === -1 & yu !== 0) { texteCorr += ` <br>Une équation cartésienne est donc de la forme : $ (d): ${reduireAxPlusB(yu, 0)}+y ${ecritureAlgebrique(-xA * yu + yA * xu)}=0$ ` }\n              if (xu === -1 & yu === 0) { texteCorr += ` <br>Une équation cartésienne est donc de la forme : $ (d): y ${ecritureAlgebrique(-xA * yu + yA * xu)}=0$ ` }\n              if (xu !== 0 & xu !== 1 & xu !== -1) { texteCorr += ` <br>Une équation cartésienne est donc de la forme : $ (d): ${reduireAxPlusB(yu, -xu)}y ${ecritureAlgebrique(-xA * yu + yA * xu)}=0$ ` }\n            }\n          }\n          if (this.sup === 2) {\n            texte += '<br><i>On demande une démonstration n\\'utilisant pas de résultat de cours.</i>'\n\n            texteCorr = '<br>Soit $M(x;y)$ un point du plan distinct de $A$.'\n            texteCorr += '<br>$M(x;y) \\\\in (d)$'\n            texteCorr += ' <br>$\\\\iff \\\\overrightarrow {AM}$ est un vecteur directeur de la droite $(d)$. '\n            texteCorr += ' <br>$\\\\iff \\\\overrightarrow {AM}$ et $\\\\vec u$ sont donc des vecteurs colinéaires. '\n            texteCorr += ' <br>$\\\\iff Det\\\\big(\\\\overrightarrow {AM};\\\\vec u\\\\big)=0$ <br>'\n            texteCorr += ' <br>$\\\\iff \\\\begin{vmatrix}x-x_A&x_u\\\\\\\\y-y_A&y_u\\\\end{vmatrix}=0$ <br>'\n            texteCorr += `<br>$\\\\iff \\\\begin{vmatrix}x-${ecritureParentheseSiNegatif(xA)}&${xu}\\\\\\\\y-${ecritureParentheseSiNegatif(yA)}&${yu}\\\\end{vmatrix}=0$<br>`\n            texteCorr += `<br>$\\\\iff (x-${ecritureParentheseSiNegatif(xA)})\\\\times ${yu}-( y-${ecritureParentheseSiNegatif(yA)}) \\\\times ${ecritureParentheseSiNegatif(xu)}=0$`\n            texteCorr += `<br>$\\\\iff ${yu} x ${ecritureAlgebriqueSauf1(-xu)} y -${ecritureParentheseSiNegatif(xA)} \\\\times ${yu} ${ecritureAlgebrique(yA)} \\\\times ${ecritureParentheseSiNegatif(xu)}=0$`\n            texteCorr += ` <br>Après réduction, une équation cartésienne est de la forme : $ (d): ${reduireAxPlusB(yu, -xu)}y ${ecritureAlgebriqueSauf1(-xA * yu + yA * xu)}=0$ `\n          }\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de correction :', 2, '1 : Correction avec le cours\\n2 : Correction avec la démonstration']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}