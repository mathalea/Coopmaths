{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5N20.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["amcReady","titre","Exercice_additionner_ou_soustraire_des_fractions_5e","max","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","qcmDisponible","modeQcm","nouvelleVersion","listeTypeDeQuestions","tabrep","qcm","level","listeQuestions","listeCorrections","combinaisonListes","tabicone","espace","sortieHtml","a","b","c","d","k","texte","texteCorr","i","randint","choice","texFractionReduite","texFraction","ordre_des_fractions","push","mathalea","sortieAMC","shuffle2tableaux","miseEnEvidence","s","pgcd","Algebrite","Math","abs","replaceAll","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/4847.ffabfca4722f50520e8f.js","sourcesContent":["/* eslint-disable camelcase */\n\nimport Exercice from '../ClasseExercice.js'\nimport { shuffle2tableaux, exportQcmAmc, texNombre2, listeQuestionsToContenu, randint, choice, combinaisonListes, abs, pgcd, miseEnEvidence, texFraction, texFractionReduite } from '../../modules/outils.js'\nimport Algebrite from 'algebrite'\n\nexport const amcReady = true\n\nexport const titre = 'Additionner ou soustraire deux fractions (dénominateurs multiples)'\n\n/**\n* Effectuer l'addition ou la soustraction de deux fractions dont un dénominateur est un multiple de l'autre.\n*\n* Le résultat de la soustraction sera toujours positif.\n*\n* Le coefficient est paramétrable, par défaut il est inférieur à 11.\n*\n* On peut paramétrer de n'avoir que des soustractions.\n* @Auteur Rémi Angot\n* 5N20\n*/\nexport default function Exercice_additionner_ou_soustraire_des_fractions_5e (max = 11) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max // Correspond au facteur commun\n  this.sup2 = false // Si true alors il n'y aura que des soustractions\n  this.titre = titre\n  this.consigne = \"Calculer et donner le résultat sous la forme d'une fraction simplifiée\"\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.sup2 = 3\n  /** ************ modeQcm disponible dans Mathalea ***********************/\n  this.qcmDisponible = true\n  this.modeQcm = false\n  /***********************************************************************/\n\n  this.nouvelleVersion = function () {\n    this.qcm = ['5N20', [], 'Additionner ou soustraire deux fractions (dénominateurs multiples)', 1]\n    if (this.level == 6) this.qcm[0] = '6C23'\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    if (this.sup2 == 1) {\n      listeTypeDeQuestions = combinaisonListes(['+'], this.nbQuestions)\n    }\n    if (this.sup2 == 2) {\n      listeTypeDeQuestions = combinaisonListes(['-'], this.nbQuestions)\n    }\n    if (this.sup2 == 3) {\n      listeTypeDeQuestions = combinaisonListes(['+', '-'], this.nbQuestions)\n    }\n\n    /** ************* Pour QCM html/latex hors AMC *****************************/\n    let tabrep; let tabicone = [1, 0, 0, 0]\n    let espace = ''\n    if (sortieHtml) {\n\t\t  espace = '&emsp;'\n    } else {\n\t\t  espace = '\\\\qquad'\n    }\n    /**************************************************************************/\n\n    for (let i = 0, a, b, c, d, k, texte, texteCorr; i < this.nbQuestions; i++) {\n      texteCorr = ''\n      // les numérateurs\n      a = randint(1, 9)\n      // les dénominateurs\n      b = randint(2, 9, a)\n      while (b == a) {\n        b = randint(2, 9) // pas de fraction avec numérateur et dénominateur égaux\n      }\n      if (this.sup > 1) {\n        k = randint(2, this.sup)\n      } else k = 1\n      d = b * k\n      if (listeTypeDeQuestions[i] == '-') {\n        c = choice([randint(1, b * k), randint(b * k, 9 * k)])\n      } else {\n        c = randint(1, 19, d)\n      }\n      if (listeTypeDeQuestions[i] == '+') { // une addition\n        /** ***************** Choix des réponses du QCM ***********************************/\n        tabrep = [`$${texFractionReduite(a * d + c * b, b * d)}$`, `$${texFraction(a + c, b + d)}$`, `$${texFraction(a + c, b * d)}$`, `$${texFraction(a * c, b * d)}$`]\n        tabicone = [1, 0, 0, 0]\n        /*************************************************************************/\n        const ordre_des_fractions = randint(1, 2)\n        if (ordre_des_fractions == 1) {\n          texte = `$${texFraction(a, b)}+${texFraction(c, d)}=$`\n          /** ****************** AMC question/questionmult ********************************/\n          this.qcm[1].push([`$${texFraction(a, b)}+${texFraction(c, d)}=$\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone])\n          /*******************************************************************************/\n        } else {\n          texte = `$${texFraction(c, d)}+${texFraction(a, b)}=$`\n          /** ****************** AMC question/questionmult ******************************/\n          this.qcm[1].push([`$${texFraction(c, d)}+${texFraction(a, b)}=$\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone])\n          /*******************************************************************************/\n        }\n\n        if (this.modeQcm && !mathalea.sortieAMC) { //  pour Mathalea & Mathalealatex pas pour AMC ******/\n          texte += `<br><br>Réponses possibles : ${espace}  `\n          shuffle2tableaux(tabrep, tabicone)\n          for (let i = 0; i < 4; i++) {\n\t\t\t\t\t  texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n\t\t\t\t\t if (tabicone[i] == 1) {\n\t\t\t\t\t   texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace\n\t\t\t\t\t } else {\n\t\t\t\t\t   texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n\t\t\t\t\t }\n\t\t\t\t   }\n        } else {\n          if (ordre_des_fractions == 1) {\n            texteCorr = `$${texFraction(a, b)}+${texFraction(c, d)}=`\n\n            if (this.level != 6) {\n              texteCorr += `${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}+${texFraction(c, d)}=${texFraction(a * k, b * k)}+${texFraction(c, d)}=`\n            }\n            texteCorr += `${texFraction(a * k + '+' + c, d)}=${texFraction(a * k + c, d)}$`\n          } else {\n            texteCorr = `$${texFraction(c, d)}+${texFraction(a, b)}=`\n            if (this.level != 6) {\n\t\t\t\t\t\t texteCorr += `${texFraction(c, d)}+${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}=${texFraction(c, d)}+${texFraction(a * k, b * k)}=`\n            }\n            texteCorr += `${texFraction(c + '+' + a * k, d)}=${texFraction(a * k + c, d)}$`\n          }\n          // Est-ce que le résultat est simplifiable ?\n          const s = pgcd(a * k + c, d)\n          if (s != 1) {\n            texteCorr += `$=${texFraction(Algebrite.eval((a * k + c) / s) + miseEnEvidence('\\\\times ' + s), Algebrite.eval(d / s) + miseEnEvidence('\\\\times ' + s))}=${texFraction(Algebrite.eval((a * k + c) / s), Algebrite.eval(d / s))}$`\n          }\n        }\n      } else { // une soustraction\n        /** ***************** Choix des réponses du QCM ***********************************/\n        tabrep = [`$${texFractionReduite(Math.abs(a * d - c * b), Math.abs(b * d))}$`, `$${texFraction(Math.abs(a - c), Math.abs(b - d))}$`, `$${texFraction(Math.abs(a - c), b * d)}$`, `$${texFraction(a * c, b * d)}$`]\n        tabicone = [1, 0, 0, 0]\n        /*********************************************************************************/\n        if ((a / b) > (c / d)) {\n          texte = `$${texFraction(a, b)}-${texFraction(c, d)}=$`\n          this.qcm[1].push([`$${texFraction(a, b)}-${texFraction(c, d)}=$\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone])\n        } else {\n          texte = texte = `$${texFraction(c, d)}-${texFraction(a, b)}=$`\n          /** ****************** AMC question/questionmult ******************************/\n          this.qcm[1].push([`$${texFraction(c, d)}-${texFraction(a, b)}=$\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone])\n          /*****************************************************************************/\n        }\n        if ((a / b) > (c / d)) {\n          if (this.modeQcm && !mathalea.sortieAMC) {\n            texte += `<br><br>Réponses possibles : ${espace}  `\n            shuffle2tableaux(tabrep, tabicone)\n            for (let i = 0; i < 4; i++) {\n\t\t\t\t\t\t  texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n\t\t\t\t\t\t if (tabicone[i] == 1) {\n\t\t\t\t\t\t   texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace\n\t\t\t\t\t\t } else {\n\t\t\t\t\t\t   texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n\t\t\t\t\t\t }\n\t\t\t\t\t   }\n          } else {\n            texteCorr = `$${texFraction(a, b)}-${texFraction(c, d)}=`\n            if (this.level != 6) {\n              texteCorr += `${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}-${texFraction(c, d)}=${texFraction(a * k, b * k)}-${texFraction(c, d)}=`\n            }\n            texteCorr += `${texFraction(a * k + '-' + c, d)}=${texFraction(a * k - c, d)}$`\n          }\n        } else {\n          if (this.modeQcm && !mathalea.sortieAMC) {\n            texte += `<br>\tRéponses possibles : ${espace}  `\n            shuffle2tableaux(tabrep, tabicone)\n            for (let i = 0; i < 4; i++) {\n\t\t\t\t\t\t  texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n\t\t\t\t\t\t if (tabicone[i] == 1) {\n\t\t\t\t\t\t   texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace\n\t\t\t\t\t\t } else {\n\t\t\t\t\t\t   texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n\t\t\t\t\t\t }\n\t\t\t\t\t   }\n          } else {\n            texteCorr = `$${texFraction(c, d)}-${texFraction(a, b)}=`\n            if (this.level != 6) {\n              texteCorr += `${texFraction(c, d)}-${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}=${texFraction(c, d)}-${texFraction(a * k, b * k)}=${texFraction(c + '-' + a * k, d)}=`\n            }\n            texteCorr += `${texFraction(c - a * k, d)}$`\n          }\n        }\n        // Est-ce que le résultat est simplifiable ?\n        const s = pgcd(a * k - c, d)\n        if (!this.modeQcm) {\n          if (abs(a * k - c) % d == 0) { // si la fraction peut-être un nombre entier\n            texteCorr += `$=${Algebrite.eval((abs(a * k - c)) / d)}$`\n          } else if (s != 1) {\n            texteCorr += `$=${texFraction(Algebrite.eval((abs(a * k - c)) / s) + miseEnEvidence('\\\\times ' + s), Algebrite.eval(d / s) + miseEnEvidence('\\\\times ' + s))}=${texFraction(Algebrite.eval((abs(a * k - c)) / s), Algebrite.eval(d / s))}$`\n          }\n        }\n      }\n\n\t  texte = texte.replaceAll('$$', ' ')\n\t  texteCorr = texteCorr.replaceAll('$$', ' ')\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale du coefficient multiplicateur', 99999]\n  this.besoinFormulaire2Numerique = ['Types de calculs ', 3, '1 : Additions\\n2 : Soustractions\\n3 : Additions et soustractions']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}