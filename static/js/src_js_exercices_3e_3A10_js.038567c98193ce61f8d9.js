/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_3e_3A10_js"],{

/***/ "./src/js/exercices/3e/3A10.js":
/*!*************************************!*\
  !*** ./src/js/exercices/3e/3A10.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ DivisionEuclidienne_multiplesDiviseurs_Criteres)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\n\nconst titre = 'Division Euclidienne - Diviseurs - Multiples'\n\n/**\n * 3A10 - Division Euclidienne; diviseurs, multiples, critères de divisibilité\n * Exercice bilan\n * @author Sébastien Lozano\n */\nfunction DivisionEuclidienne_multiplesDiviseurs_Criteres() {\n\t'use strict';\n\t_ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `Divisions euclidiennes - Diviseurs - Multiples.`;\n\t//sortie_html ? this.spacing = 3 : this.spacing = 2;\n\tsortie_html ? this.spacing = 1 : this.spacing = 2;\n\t//sortie_html ? this.spacing_corr = 2 : this.spacing_corr = 1;\n\tsortie_html ? this.spacing_corr = 2 : this.spacing_corr = 2;\n\tthis.nb_questions = 5;\n\t//this.correction_detaillee_disponible = true;\n\tthis.nb_cols = 1;\n\tthis.nb_cols_corr = 1;\n\n\tthis.nouvelle_version = function (numero_de_l_exercice) {\n\t\tlet type_de_questions;\n\t\tif (sortie_html) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.bouton_aide = '';\n\t\t\tthis.bouton_aide = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.modal_pdf)(numero_de_l_exercice, \"assets/pdf/FicheArithmetique-3A10.pdf\", \"Aide mémoire sur la division euclidienne (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\t//this.bouton_aide += modal_video('conteMathsNombresPremiers','/videos/LesNombresPremiers.mp4','Petit conte mathématique','Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.liste_questions = []; // Liste de questions\n\t\tthis.liste_corrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenu_correction = ''; // Liste de questions corrigées\n\n\t\tlet type_de_questions_disponibles = [1, 2, 3, 4, 5];\n\t\t//let type_de_questions_disponibles = [1];\n\t\tlet liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(type_de_questions_disponibles, this.nb_questions);\n\n\t\tfor (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n\t\t\ttype_de_questions = liste_type_de_questions[i];\n\n\t\t\tvar dividende;\n\t\t\tvar diviseur;\n\t\t\tvar quotient;\n\t\t\tvar reste;\n\n\t\t\tswitch (type_de_questions) {\n\t\t\t\tcase 1: // plus grand reste dans une division euclidienne\n\t\t\t\t\tdiviseur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99);\n\t\t\t\t\ttexte = `Dire quel est le plus grand reste possible dans une division euclidienne par ${diviseur}.`;\n\t\t\t\t\ttexte_corr = `Si on divise par ${diviseur}, il ne peut pas rester plus de ${diviseur - 1}, sinon c'est qu'on peut encore ajouter au moins 1 fois ${diviseur} dans le dividende et donc 1 au quotient.`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // quotient et reste d'une division euclidienne donnée\n\t\t\t\t\tdiviseur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99);\n\t\t\t\t\tdividende = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1001, 99999);\n\t\t\t\t\tquotient = Math.trunc(dividende / diviseur);\n\t\t\t\t\treste = dividende % diviseur;\n\n\t\t\t\t\ttexte = `On a ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(diviseur)}$\\\\times$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(quotient)} $+$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(reste)}`;\n\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\ttexte += `Écrire le quotient et le reste de la division euclidienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${diviseur}.`;\n\t\t\t\t\ttexte_corr = `Dans la division euclidienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${diviseur}, le quotient vaut ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(quotient)} et le reste ${reste}.`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // caractérisation des multiples et diviseurs par le reste de la division euclidienne\n\t\t\t\t\tdividende = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(101, 9999);\n\t\t\t\t\tlet rg_diviseur; // rang du diviseur choisi\n\t\t\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(dividende).length % 2 == 0) { //si il y a un nombre pair de diviseurs on prend le (n/2+1) eme\n\t\t\t\t\t\trg_diviseur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(dividende).length / 2 + 1;\n\t\t\t\t\t} else { // il y a nbre impair de diviseurs on prend le ((n-1)/2 +1) eme\n\t\t\t\t\t\trg_diviseur = ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(dividende).length - 1) / 2 + 1;\n\t\t\t\t\t}\n\t\t\t\t\tdiviseur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(dividende)[rg_diviseur - 1]; // on choisit le diviseur central de dividende, ATTENTION rang des tableaux commence à 0 \n\t\t\t\t\tlet candidats_diviseurs = [diviseur - 1, diviseur, diviseur + 1]; // on prend l'entier précédent et le successeur de ce diviseur\n\n\t\t\t\t\t// Faut-il que je conditionne pour éviter le diviseur 1 ?\n\t\t\t\t\tcandidats_diviseurs = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)(candidats_diviseurs); // on mélange le tableau\n\t\t\t\t\ttexte = 'Les trois divisions euclidiennes suivantes sont exactes : <br>';\n\t\t\t\t\ttexte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])}$\\\\times$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(Math.trunc(dividende / candidats_diviseurs[0]))} $+$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende % candidats_diviseurs[0])}`;\n\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\ttexte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])}$\\\\times$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(Math.trunc(dividende / candidats_diviseurs[1]))} $+$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende % candidats_diviseurs[1])}`;\n\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\ttexte += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])}$\\\\times$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(Math.trunc(dividende / candidats_diviseurs[2]))} $+$ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende % candidats_diviseurs[2])}`;\n\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\ttexte += `Sans calculer, dire si les nombres ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])}; ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])}; ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])} sont des diviseurs de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}. Justifier.`;\n\t\t\t\t\ttexte_corr = ``;\n\t\t\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.egal)(dividende % candidats_diviseurs[0], 0)) { //egal() est une fonction de JC pour éviter les problèmes de virgule flottante\n\t\t\t\t\t\ttexte_corr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])} vaut 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])} est un diviseur de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])} ne vaut pas 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[0])} n'est pas un diviseur de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}`;\n\t\t\t\t\t}\n\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.egal)(dividende % candidats_diviseurs[1], 0)) { //egal() est une fonction de JC pour éviter les problèmes de virgule flottante\n\t\t\t\t\t\ttexte_corr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])} vaut 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])} divise ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])} ne vaut pas 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[1])} ne divise pas ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)}`;\n\t\t\t\t\t}\n\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.egal)(dividende % candidats_diviseurs[2], 0)) { //egal() est une fonction de JC pour éviter les problèmes de virgule flottante\n\t\t\t\t\t\ttexte_corr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])} vaut 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} est divisible par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr += `Le reste de la division euclienne de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])} ne vaut pas 0 donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(dividende)} n'est pas divisible par ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(candidats_diviseurs[2])}`;\n\t\t\t\t\t}\n\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4: // vocabulaire diviseurs et multiples\n\t\t\t\t\t// on déclare des tableaux utiles \n\t\t\t\t\tlet diviseurs = [];\n\t\t\t\t\tlet multiplicateurs = [];\n\t\t\t\t\tlet multiples = [];\n\t\t\t\t\tlet quotients = [];\n\t\t\t\t\tlet textes = [];\n\t\t\t\t\tlet textes_corr = [];\n\t\t\t\t\t// on tire au hasard 4 diviseurs différents entre 2 et 999 et 4 multiplicateurs différents entre 2 et 9 \n\t\t\t\t\tdiviseurs = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, [diviseurs[0]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, [diviseurs[0], diviseurs[1]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, [diviseurs[0], diviseurs[1], diviseurs[2]])];\n\t\t\t\t\tmultiplicateurs = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9, [multiplicateurs[0]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9, [multiplicateurs[0], multiplicateurs[1]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 9, [multiplicateurs[0], multiplicateurs[1], multiplicateurs[2]])];\n\t\t\t\t\t// on calcule les multiples\n\t\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\t\tmultiples[j] = diviseurs[j] * multiplicateurs[j];\n\t\t\t\t\t\tquotients[j] = multiples[j] / diviseurs[j];\n\t\t\t\t\t\tdiviseurs[j] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(diviseurs[j]);\n\t\t\t\t\t\tmultiples[j] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(multiples[j]);\n\t\t\t\t\t\tquotients[j] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(quotients[j]);\n\t\t\t\t\t};\n\t\t\t\t\t// on crée les phrases \n\t\t\t\t\ttextes[0] = `${diviseurs[0]} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${multiples[0]}`;\n\t\t\t\t\ttextes_corr[0] = `${diviseurs[0]} est un diviseur de ${multiples[0]} car ${multiples[0]}=${diviseurs[0]}$\\\\times$${quotients[0]}`;\n\t\t\t\t\ttextes[1] = `${diviseurs[1]} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${multiples[1]}`;\n\t\t\t\t\ttextes_corr[1] = `${diviseurs[1]} est un diviseur de ${multiples[1]} car ${multiples[1]}=${diviseurs[1]}$\\\\times$${quotients[1]}`;\n\t\t\t\t\ttextes[2] = `${multiples[2]} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${diviseurs[2]}`;\n\t\t\t\t\ttextes_corr[2] = `${multiples[2]} est un multiple de ${diviseurs[2]} car ${multiples[2]}=${diviseurs[2]}$\\\\times$${quotients[2]}`;\n\t\t\t\t\ttextes[3] = `${multiples[3]} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${diviseurs[3]}`;\n\t\t\t\t\ttextes_corr[3] = `${multiples[3]} est un multiple de ${diviseurs[3]} car ${multiples[3]}=${diviseurs[3]}$\\\\times$${quotients[3]}`;\n\t\t\t\t\t// on ajoute deux cas ni multiple ni diviseur\n\t\t\t\t\t// on choisit deux nombres\n\t\t\t\t\tlet n1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, [diviseurs[0], diviseurs[1], diviseurs[2], diviseurs[3]]));\n\t\t\t\t\tlet p1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, [diviseurs[0], diviseurs[1], diviseurs[2], diviseurs[3], n1]));\n\t\t\t\t\t// on choisit un autre qui n'est pas dans la liste des diviseurs de n1\n\t\t\t\t\tlet n2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(n1)));\n\t\t\t\t\tlet p2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 999, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(p1)));\n\t\t\t\t\ttextes[4] = `${n1} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${n2}`;\n\t\t\t\t\ttextes_corr[4] = `${n1} n'est ni un multiple ni un diviseur de ${n2} car ${n1}=${n2}$\\\\times$${Math.trunc(n1 / n2)}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(n1 % n2)} et ${n2}=${n1}$\\\\times$${Math.trunc(n2 / n1)}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(n2 % n1)}`;\n\t\t\t\t\ttextes[5] = `${p2} $\\\\ldots\\\\ldots\\\\ldots\\\\ldots$ ${p1}`;\n\t\t\t\t\ttextes_corr[5] = `${p2} n'est ni un multiple ni un diviseur de ${p1} car ${p1}=${p2}$\\\\times$${Math.trunc(p1 / p2)}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(p1 % p2)} et ${p2}=${p1}$\\\\times$${Math.trunc(p2 / p1)}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(p2 % p1)}`;\n\t\t\t\t\t// on mélange pour que l'ordre change!\n\t\t\t\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle2tableaux)(textes, textes_corr);\n\t\t\t\t\ttexte = `Avec la calculatrice, compléter chaque phrase avec \"est un diviseur de\" ou \"est un multiple de\" ou \"n'est ni un diviseur ni un multiple de\".`;\n\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\ttexte_corr = ``;\n\t\t\t\t\tfor (let j = 0; j < 5; j++) {\n\t\t\t\t\t\ttexte += textes[j];\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte_corr += textes_corr[j];\n\t\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte += textes[5];\n\t\t\t\t\t//texte +=`<br>`;\n\t\t\t\t\ttexte_corr += textes_corr[5];\n\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5: // liste des diviseurs\n\t\t\t\t\t// on définit un tableau pour les choix du nombre dont on veut les diviseurs\n\t\t\t\t\t// 3 parmis 2,99 y compris les premiers et 1 parmis les entiers à 3 chiffres ayant au moins 8 diviseurs, il y en a 223 !\n\t\t\t\t\tlet tableau_de_choix = [];\n\t\t\t\t\ttableau_de_choix = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99, [tableau_de_choix[0]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99, [tableau_de_choix[0], tableau_de_choix[1]]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 99, [tableau_de_choix[0], tableau_de_choix[1], tableau_de_choix[2]])];\n\t\t\t\t\tlet tableau_de_choix_3chiffres = [];\n\t\t\t\t\tfor (let m = 101; m < 999; m++) {\n\t\t\t\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(m).length > 8) {\n\t\t\t\t\t\t\ttableau_de_choix_3chiffres.push(m);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\t// on ajoute un nombre à trois chiffre avec au moins 8 diviseurs dans les choix possibles\n\t\t\t\t\tlet rg_Nb_3chiffres = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, (tableau_de_choix_3chiffres.length - 1));\n\t\t\t\t\ttableau_de_choix.push(tableau_de_choix_3chiffres[rg_Nb_3chiffres]);\n\t\t\t\t\tlet N; // on déclare le nombre dont on va chercher les diviseurs\n\t\t\t\t\tlet rg_N; // pour tirer le rang du nombre dans le tableau des choix\n\t\t\t\t\trg_N = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, (tableau_de_choix.length - 1));\n\t\t\t\t\tN = tableau_de_choix[rg_N];\n\t\t\t\t\ttexte = `Écrire la liste de tous les diviseurs de ${N}.`;\n\t\t\t\t\ttexte_corr = `Pour trouver la liste des diviseurs de ${N} on cherche tous les produits de deux facteurs qui donnent ${N}. En écrivant toujours le plus petit facteur en premier.<br>`;\n\t\t\t\t\ttexte_corr += `Il est suffisant de chercher des diviseurs inférieurs au plus grand nombre dont le carré vaut ${N}, par exemple ici, ${Math.trunc(Math.sqrt(N))}$\\\\times$${Math.trunc(Math.sqrt(N))} = ${Math.trunc(Math.sqrt(N)) * Math.trunc(Math.sqrt(N))}<${N}`;\n\t\t\t\t\ttexte_corr += ` et ${Math.trunc(Math.sqrt(N)) + 1}$\\\\times$${Math.trunc(Math.sqrt(N)) + 1} = ${(Math.trunc(Math.sqrt(N)) + 1) * (Math.trunc(Math.sqrt(N)) + 1)}>${N} donc il suffit d'arrêter la recherche de facteur à ${Math.trunc(Math.sqrt(N))}.`;\n\t\t\t\t\ttexte_corr += ` En effet, si ${N} est le produit de deux entiers p$\\\\times$q avec p < q alors si p$\\\\times$p > ${N} c'est que q$\\\\times$q < ${N} mais dans ce cas p serait supérieur à q sinon p$\\\\times$q serait inférieur à ${N} ce qui ne doit pas être le cas.<br>`;\n\t\t\t\t\tif ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length % 2 == 0) { //si il y a un nombre pair de diviseurs\n\t\t\t\t\t\tfor (let m = 0; m < ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length / 2); m++) {\n\t\t\t\t\t\t\ttexte_corr += `` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[m] + `$\\\\times$` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length - m - 1)] + ` = ${N}<br>`;\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let m = 0; m < (((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length - 1) / 2); m++) {\n\t\t\t\t\t\t\ttexte_corr += `` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[m] + `$\\\\times$` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length - m - 1)] + `<br>`;\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexte_corr += `` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length - 1) / 2] + `$\\\\times$` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length - 1) / 2] + ` = ${N}<br>`;\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `Chacun des facteurs de la liste ci-dessus est un diviseur de ${N}.<br>`;\n\t\t\t\t\ttexte_corr += `La liste des diviseurs de ${N} est donc `;\n\t\t\t\t\ttexte_corr += `1`;\n\t\t\t\t\tfor (let w = 1; w < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N).length; w++) {\n\t\t\t\t\t\ttexte_corr += ` ; ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_diviseurs)(N)[w];\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `.`;\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.liste_questions.push(texte);\n\t\t\t\tthis.liste_corrections.push(texte_corr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\t};\n\t//this.besoin_formulaire_numerique = ['Règle à travailler',5,\"1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissance\\n4 : Produit de puissances de même exposant\\n5 : Mélange\"]; \n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/3e/3A10.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);