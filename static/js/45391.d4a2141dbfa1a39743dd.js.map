{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C11.js","webpack://mathalea/./src/js/exercices/6e/6C21.js"],"names":["amcReady","amcType","interactifReady","interactifType","titre","DivisionsEuclidiennes","Exercice","this","sup","parseInt","consigne","spacing","context","spacingCorr","nbQuestions","listePackages","nouvelleVersion","typesDeQuestionsDisponibles","typesDeQuestions","autoCorrection","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","a","b","q","r","i","texte","texteCorr","cpt","enonce","propositions","statut","feedback","randint","choice","texNombre","Operation","operande1","operande2","type","setReponse","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","DivisionsEuclidiennesNiv2","tailleDiaporama"],"mappings":"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","file":"js/45391.d4a2141dbfa1a39743dd.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, texNombre } from '../../modules/outils.js'\nimport Operation from '../../modules/operations.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 'AMCOpen' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\nexport const titre = 'Divisions euclidiennes'\n\n/**\n * Poser et effectuer les divisions euclidiennes suivantes puis donner l'égalité fondamentale correspondante.\n *\n * Niveau de difficulté 1 :\n * * division par 2, 3 , 4 ou 5\n * * division par 6 à 9\n * * un 0 dans le quotient\n *\n * Niveau de difficulté 2 :\n * * division par 11, 12, 15, 25\n * * division par 13,14,21,22,23 ou 24 et un 0 dans le quotient\n * * division par un multiple de 10 et un 0 dans le quotient\n * @author Rémi Angot\n * Référence 6C11\n */\nexport default function DivisionsEuclidiennes () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = parseInt(this.sup)\n  this.titre = titre\n  this.consigne =\n    \"Poser et effectuer les divisions euclidiennes suivantes puis donner l'égalité fondamentale correspondante.\"\n  this.spacing = 2\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1) // Important sinon opidiv n'est pas joli\n  this.nbQuestions = 4\n  this.sup = 1\n  this.listePackages = 'xlop'\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles, typesDeQuestions\n    if (this.sup === 0) typesDeQuestionsDisponibles = [1, 1, 1, 1]\n    else if (this.sup === 1) typesDeQuestionsDisponibles = [1, 2, 2, 3]\n    else if (this.sup === 2) typesDeQuestionsDisponibles = [4, 4, 5, 6]\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n    for (\n      let i = 0, texte = '', texteCorr = '', cpt = 0, a, b, q, r;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      // La ligne suivante ne doit pas être mise après les setReponses car sinon elle les efface\n      this.autoCorrection[i] = { enonce: texte, propositions: [{ texte: texteCorr, statut: 4, feedback: '' }] }\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        case 1: // division par 2, 3 , 4 ou 5\n          q = randint(2, 5) * 100 + randint(2, 5) * 10 + randint(2, 5)\n          b = randint(2, 5)\n          break\n        case 2: // division par 6 à 9\n          q = randint(5, 9) * 100 + randint(2, 5) * 10 + randint(5, 9)\n          b = randint(6, 9)\n          break\n        case 3: // un 0 dans le quotient\n          if (randint(1, 2) === 1) {\n            q = randint(2, 9) * 1000 + randint(2, 9) * 100 + randint(2, 9)\n          } else {\n            q = randint(2, 9) * 1000 + randint(2, 9) * 10 + randint(2, 9)\n          }\n          b = randint(7, 9)\n          break\n        case 4: // division par 11, 12, 15, 25\n          q = randint(1, 5) * 100 + randint(1, 5) * 10 + randint(1, 5)\n          b = choice([11, 12, 15, 25])\n          break\n        case 5: // division par 13,14,21,22,23 ou 24 et un 0 dans le quotient\n          q = randint(1, 5) * 1000 + randint(6, 9) * 100 + randint(1, 5)\n          b = choice([11, 12, 13, 14, 21, 22, 23, 24])\n          break\n        case 6: // division par un multiple de 10 et un 0 dans le quotient\n          q = randint(6, 9) * 1000 + randint(6, 9) * 10 + randint(1, 5)\n          b = randint(2, 9) * 10\n          break\n      }\n      r = randint(0, b - 1) // reste inférieur au diviseur\n      a = b * q + r\n      texte = `$${texNombre(a)}\\\\div${b}$`\n      if (r === 0) {\n        texteCorr = `${Operation({ operande1: a, operande2: b, type: 'divisionE' })}$${texNombre(a)}\\\\div${b}=${q}$`\n        setReponse(this, i, [`${a}=${b}\\\\times${q}`, `${a}=${q}\\\\times${b}`])\n      } else {\n        texteCorr = `${Operation({ operande1: a, operande2: b, type: 'divisionE' })}$${texNombre(a)}=${b}\\\\times${q}+${r}$`\n        setReponse(this, i, [`${a}=${b}\\\\times${q}+${r}`, `${a}=${q}\\\\times${b}+${r}`])\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      // Pour AMC question AmcOpen\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte\n        this.autoCorrection[i].propositions[0].texte = texteCorr\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    2,\n    '1 : Diviseur inférieur à 10\\n2: Diviseur à 2 chiffres'\n  ]\n}\n","import DivisionsEuclidiennes from './6C11.js'\nexport const amcReady = true\nexport const amcType = 'AMCOpen' // type de question AMC\n\nexport const titre = 'Divisions euclidiennes - Niveau 2'\n\n/**\n * @author Rémi Angot\n * référence 6C21\n*/\n\nexport default function DivisionsEuclidiennesNiv2 () {\n  DivisionsEuclidiennes.call(this)\n  this.sup = 2\n  this.titre = titre\n  this.tailleDiaporama = 100\n}\n"],"sourceRoot":""}