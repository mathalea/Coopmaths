{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C32-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","amcReady","amcType","interactifType","interactifReady","CalculsAvecPuissancesDeDix","Exercice","this","sup","sup2","nbCols","nbColsCorr","nbQuestions","nouvelleVersion","typeDeQuestionsDisponibles","parseInt","consigne","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","mantisse1","exp1","decalage","mantisse","exp","decimalstring","scientifiquestring","i","cpt","randint","calcul","choice","texNombrec","texNombre","miseEnEvidence","autoCorrection","enonce","options","ordered","lastChoice","propositions","statut","interactif","propositionsQcm","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/52136.d30c05f48580d1a4fad1.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombrec, texNombre, miseEnEvidence } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const titre = 'Calcul avec les puissances de dix'\n\nexport const amcReady = true // tant qu'il n'a pas été adapté à la version 2.6\nexport const amcType = 1 // QCM\nexport const interactifType = 'qcm'\nexport const interactifReady = true\n\n/**\n * type 1 : Un nombre est donné par le produit d'un décimal par une puissance de dix, il faut l'écrire en notation scientifique\n * type 2 : On donne la notation scientifique d'un nombre et on doit trouver l'exposant manquant de 10 dans le membre de gauche.\n * @author Jean-Claude Lhote\n * 4C32-1\n */\nexport default function CalculsAvecPuissancesDeDix () {\n  Exercice.call(this)\n  this.sup = 1\n  this.sup2 = 1\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nbQuestions = 5\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.sup2 = parseInt(this.sup2)\n\n    if (this.sup === 1) this.consigne = 'Donner l\\'écriture scientifique des nombres suivants.'\n    else this.consigne = 'Compléter l\\'égalité des nombres suivants.'\n    let typeDeQuestionsDisponibles\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (this.sup2 === 1) typeDeQuestionsDisponibles = [0, 0, 0, 1, 1]\n    else if (this.sup2 === 2) typeDeQuestionsDisponibles = [0, 1, 1, 2, 2]\n    else typeDeQuestionsDisponibles = [2, 2, 3, 3, 3]\n\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, mantisse1, exp1, decalage, mantisse, exp, decimalstring, scientifiquestring, cpt = 0;\n      i < this.nbQuestions && cpt < 50;) {\n      //        nombre=calcul(randint(1001,9999)/10**randint(1,6))\n      //      mantisse=calcul(nombre/10**(Math.floor(Math.log10(nombre))))\n      //        exp=Math.floor(Math.log10(nombre))\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          decalage = randint(-1, 1, 0)\n          mantisse = randint(1, 9)\n          exp = randint(1, 5)\n          break\n        case 1:\n          decalage = randint(-2, 2, 0)\n          mantisse = calcul(randint(11, 99) / 10)\n          exp = randint(1, 5)\n          break\n        case 2:\n          decalage = randint(-3, 3, 0)\n          if (randint(0, 1) === 1) mantisse = calcul(randint(111, 999) / 100)\n          else mantisse = calcul((randint(1, 9) * 100 + randint(1, 9)) / 100)\n          exp = randint(1, 7) * choice([-1, 1])\n          break\n        case 3:\n          decalage = randint(-4, 4, 0)\n          if (randint(0, 1) === 1) mantisse = calcul((randint(1, 9) * 1000 + randint(1, 19) * 5) / 1000)\n          else mantisse = calcul(randint(1111, 9999) / 1000)\n          exp = randint(3, 7) * choice([-1, 1])\n          break\n      }\n      // nombre = calcul(mantisse * 10 ** exp)\n      mantisse1 = calcul(mantisse * 10 ** decalage)\n      exp1 = exp - decalage\n\n      decimalstring = `${texNombrec(mantisse1)} \\\\times 10^{${exp1}}`\n      scientifiquestring = `${texNombre(mantisse)} \\\\times 10^{${exp}}`\n      if (this.sup === 1) {\n        texte = `$${decimalstring}$`\n        texteCorr = `$${miseEnEvidence(`${texNombrec(mantisse1)}`, 'blue')}\\\\times ${miseEnEvidence(`10^{${exp1}}`)} = ${miseEnEvidence(`${texNombre(mantisse)}\\\\times 10^{${decalage}}`, 'blue')}\\\\times  ${miseEnEvidence(`10^{${exp1}}`)} = ${scientifiquestring}$`\n        this.autoCorrection[i] = {}\n        this.autoCorrection[i].enonce = `${texte}\\n`\n        this.autoCorrection[i].options = {\n          ordered: false,\n          lastChoice: 5\n        }\n        this.autoCorrection[i].propositions = [\n          {\n            texte: `$${scientifiquestring}$`,\n            statut: true\n          },\n          {\n            texte: `$${texNombre(mantisse)} \\\\times 10^{${exp - 1}}$`,\n            statut: false\n          },\n          {\n            texte: `$${texNombre(mantisse)} \\\\times 10^{${exp + 1}}$`,\n            statut: false\n          },\n          {\n            texte: `$${texNombre(mantisse)} \\\\times 10^{${-exp}}$`,\n            statut: false\n          }\n        ]\n      } else {\n        texteCorr = `$${miseEnEvidence(texNombre(mantisse1), 'blue')}\\\\times  ${miseEnEvidence(`10^{${exp1}}`)}=${miseEnEvidence(texNombre(mantisse) + `\\\\times 10^{${decalage}}`, 'blue')}\\\\times  ${miseEnEvidence(`10^{${exp1}}`)} =${scientifiquestring}$`\n        texte = `$${texNombre(mantisse1)}\\\\times 10^{${miseEnEvidence('....')}}=${scientifiquestring}$`\n        this.autoCorrection[i] = {}\n        this.autoCorrection[i].enonce = `${texte}\\n`\n        this.autoCorrection[i].propositions = [\n          {\n            texte: `$${exp1}$`,\n            statut: true\n          },\n          {\n            texte: `$${exp1 - 1}$`,\n            statut: false\n          },\n          {\n            texte: `$${exp1 + 1}$`,\n            statut: false\n          },\n          {\n            texte: `$${-exp1}$`,\n            statut: false\n          }\n        ]\n        this.autoCorrection[i].options = {\n          ordered: false,\n          lastChoice: 5\n        }\n        if (this.interactif) {\n          texte += propositionsQcm(this, i).texte\n        }\n      }\n      if (this.interactif) {\n        texte += propositionsQcm(this, i).texte\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n\n  this.besoinFormulaireNumerique = [\"Type d'exercices\", 2, '1 : Traduire en notation scientifique\\n2 : Exercice à trou']\n  this.besoinFormulaire2Numerique = ['Niveaux de difficulté', 3, '1 : Facile\\n2 : Moyen\\n3 : Difficile']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}