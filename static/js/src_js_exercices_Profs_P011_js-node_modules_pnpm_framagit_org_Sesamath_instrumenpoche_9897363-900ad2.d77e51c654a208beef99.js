/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_Profs_P011_js-node_modules_pnpm_framagit_org_Sesamath_instrumenpoche_9897363-900ad2"],{

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ }),

/***/ "./src/js/exercices/Profs/P011.js":
/*!****************************************!*\
  !*** ./src/js/exercices/Profs/P011.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Exercice_zero_mathalea2d)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n/* harmony import */ var _modules_Alea2iep_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../modules/Alea2iep.js */ \"./src/js/modules/Alea2iep.js\");\n\n\n\n\n\nconst titre = 'Construis mon triangle'\n\nfunction Exercice_zero_mathalea2d() {\n    \"use strict\"\n    _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this)\n    this.titre = titre;\n    this.nb_questions = 1; // Ici le nombre de questions\n    this.nb_questions_modifiable=false // Active le formulaire nombre de questions\n    this.nb_cols = 1; // Le nombre de colonnes dans l'énoncé LaTeX\n    this.nb_cols_corr = 1;// Le nombre de colonne pour la correction LaTeX\n    this.pas_de_version_LaTeX=true // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n    this.pas_de_version_HMTL=false // mettre à true si on ne veut pas de l'exercice en ligne\n    this.sup=1;\n    this.sup2='ABC'\n    this.sup3='3 4 5'\n    this.type_exercice = 'IEP'\n  \n    this.nouvelle_version = function () {\n      let params=this.sup3.split(' ');\n      let type=parseInt(this.sup);\n      let nom=this.sup2;\n      let anim=new _modules_Alea2iep_js__WEBPACK_IMPORTED_MODULE_3__.default();\n      let triangle\n      let objets_enonceml=[]\n      for (let i=0;i<params.length;i++){\n        params[i]=parseFloat(params[i])\n      }\n      switch (type) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n          case 1:\n            \n            triangle=anim.triangle3longueurs(nom, params[0], params[1], params[2], true, true) \n            objets_enonceml.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[1],triangle[0]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[2],triangle[1]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[0],triangle[2]))\n          break;\n  \n          case 2:\n            triangle=anim.triangle1longueur2angles(nom, params[0], params[1], params[2], true, true)\n            objets_enonceml.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[1],triangle[0]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(triangle[2],triangle[0],triangle[1]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(triangle[0],triangle[1],triangle[2]))\n \n          break\n  \n          case 3:\n            triangle=anim.triangleRectangle2Cotes(nom, params[0], params[1], true)\n            objets_enonceml.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[1],triangle[0]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[2],triangle[1]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(triangle[0],triangle[1],triangle[2]))\n          break\n            \n          case 4:\n            triangle=anim.triangleRectangleCoteHypotenuse(nom, params[0], params[1], true)\n            objets_enonceml.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[1],triangle[0]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[0],triangle[2]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(triangle[0],triangle[1],triangle[2]))\n            break  \n\n          case 5:\n            triangle=anim.triangleEquilateral(nom, params[0], true)\n          objets_enonceml.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[1],triangle[0]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||','red',triangle[0],triangle[1],triangle[2],triangle[0],triangle[1],triangle[2]))\n            break\n\n            case 6:\n              triangle=anim.triangle2longueurs1angle(nom,params[0],params[1],params[2],true)\n              objets_enonceml.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[0],triangle[1]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheLongueurSegment)(triangle[0],triangle[2]),(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(triangle[1],triangle[0],triangle[2]))\n          break\n            \n        }\n        let poly=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(triangle)\n        objets_enonceml.push(poly[0],poly[1])\n        let params_enonce = { xmin:Math.min(triangle[0].x-1,triangle[1].x-1,triangle[2].x-1),\n           ymin: Math.min(triangle[0].y-1,triangle[1].y-1,triangle[2].y-1),\n            xmax: Math.max(triangle[0].x+1,triangle[1].x+1,triangle[2].x+1),\n             ymax: Math.max(triangle[0].y+1,triangle[1].y+1,triangle[2].y+1),\n              pixelsParCm: 20, scale: 1, mainlevee: true,amplitude:0.5}\n        let texte = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(params_enonce, objets_enonceml)+'<br>'+anim.htmlBouton()\n        this.contenu=texte;\n    }\n  this.besoin_formulaire_numerique = ['Type de triangle', 6, `1 : Triangle par 3 longueurs\\n 2 : Triangle par 1 longueur et 2 angles\\n 3 : Triangle rectangle 2 côtés angle droit\\n 4 : Triangle rectangle 1 coté et l'hypoténuse\\n 5 : Triangle équilatéral\\n 6 : Triangle 2 longueurs et l'angle entre ces côtés`]\n  this.besoin_formulaire2_texte = [\"Nom du triangle\",`ABC par exemple`];\n  this.besoin_formulaire3_texte =['paramètres séparés par des espaces','3 4 5']\n  \n  } // Fin de l'exercice.\n  \n\n//# sourceURL=webpack://mathalea/./src/js/exercices/Profs/P011.js?");

/***/ })

}]);