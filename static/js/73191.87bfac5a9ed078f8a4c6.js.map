{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N22-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","RapportsSurUnSegment","typesDeQuestionsDisponibles","Exercice","this","beta","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","singPlur","nombre","singulier","pluriel","entierMax","m","randint","n","params","xmin","ymin","xmax","ymax","pixelsParCm","scale","yEnonce","rayon","nomsChoix","noms","length","situations","Math","min","max","rapport","rapport_inverse","fig","mathalea2d","fraction","representation","segment_corr1","longueur_corr1","m_color_corr","n_color_corr","fig_corr1","segment_corr2","longueur_corr2","fig_corr2","enonces","k","push","enonce","question","correction","texFractionSimplifiee","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/73191.87bfac5a9ed078f8a4c6.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListesSansChangerOrdre } from '../../modules/outils.js'\nimport { mathalea2d } from '../../modules/2d.js'\nimport { fraction } from '../../modules/fractions.js'\nexport const titre = 'Rapport de deux longueurs sur un segment'\n\n/**\n * * Exprimer un rapport de longueurs sur un segment\n * * 6N22-1\n * @author Sébastien Lozano\n */\n\nexport default function RapportsSurUnSegment () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.beta = false\n  if (this.beta) {\n    this.nbQuestions = 2\n  } else {\n    this.nbQuestions = 2\n  };\n\n  this.consigne = 'Sur tous les axes, les graduations sont régulières.'\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  // this.nbQuestionsModifiable = false;\n  context.isHtml ? this.spacing = 3 : this.spacing = 2\n  context.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    if (this.beta) {\n      typesDeQuestionsDisponibles = [0, 1]\n    } else {\n      // typesDeQuestionsDisponibles = shuffle([choice([1,3]),choice([2,4]),0]);\n      typesDeQuestionsDisponibles = [0, 1]\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    // let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // une fonction pour le singulier pluriel\n      function singPlur (nombre, singulier, pluriel) {\n        if (nombre > 1) {\n          return pluriel\n        } else {\n          return singulier\n        };\n      };\n\n      // on choisit deux entiers pour former les fractions\n      const entierMax = 9\n      const m = randint(1, entierMax)\n      const n = randint(1, entierMax, m) // on évite l'autre pour éviter la fraction 1\n      const params = {\n        xmin: -0.4,\n        ymin: -2,\n        xmax: 15 * entierMax, // pour éviter un cadrage trop large\n        ymax: 1,\n        pixelsParCm: 20,\n        scale: 1\n      }\n      // on colle la figure à l'énoncé\n      const yEnonce = -1.2\n\n      // on a parfois des figure trop petites ou trop grandes\n      //\n      const rayon = 5\n      // if (m<n) {\n      //   rayon = 15\n      // } else {\n      //   rayon = 15/Math.ceil(m/n)\n      // };\n\n      // on choisit de façon aléatoire un triplet de noms pour les points\n      const nomsChoix = [['A', 'B', 'C'], ['D', 'E', 'F'], ['I', 'J', 'K'], ['L', 'M', 'N']]\n      const noms = nomsChoix[randint(0, nomsChoix.length - 1)]\n\n      // pour les situations, autant de situations que de cas dans le switch !\n      const situations = [\n        { // case 0 --> m < n\n          m: Math.min(m, n),\n          n: Math.max(m, n),\n          rapport: `\\\\dfrac{${noms[0] + noms[1]}}{${noms[0] + noms[2]}}`,\n          rapport_inverse: `\\\\dfrac{${noms[0] + noms[2]}}{${noms[0] + noms[1]}}`,\n          fig: mathalea2d(\n            params,\n            fraction(Math.min(m, n), Math.max(m, n)).representation(0, 0, rayon, 0, 'segment', '', noms[0], noms[1], 1, noms[2])\n          ),\n          segment_corr1: `\\\\textcolor{red}{[${noms[0] + noms[2]}]}`,\n          longueur_corr1: `\\\\textcolor{red}{${noms[0] + noms[2]}}`,\n          m_color_corr: `\\\\textcolor{red}{${Math.min(m, n)}}`,\n          n_color_corr: `\\\\textcolor{blue}{${Math.max(m, n)}}`,\n          fig_corr1: mathalea2d(\n            params,\n            fraction(Math.min(m, n), Math.max(m, n)).representation(0, yEnonce, rayon, 0, 'segment', 'red', noms[0], noms[1], 1, noms[2])\n          ),\n          segment_corr2: `\\\\textcolor{blue}{[${noms[0] + noms[1]}]}`,\n          longueur_corr2: `\\\\textcolor{blue}{${noms[0] + noms[1]}}`,\n          fig_corr2: mathalea2d(\n            params,\n            fraction(Math.max(m, n), Math.min(m, n)).representation(0, yEnonce, (Math.min(m, n) / Math.max(m, n)) * rayon, 0, 'segment', 'blue', noms[0], noms[2], 1, noms[1])\n          )\n        },\n        { // case 1 --> m > n\n          m: Math.max(m, n),\n          n: Math.min(m, n),\n          rapport: `\\\\dfrac{${noms[0] + noms[1]}}{${noms[0] + noms[2]}}`,\n          rapport_inverse: `\\\\dfrac{${noms[0] + noms[2]}}{${noms[0] + noms[1]}}`,\n          fig: mathalea2d(\n            params,\n            fraction(Math.max(m, n), Math.min(m, n)).representation(0, 0, 5, 0, 'segment', '', noms[0], noms[1], 1, noms[2])\n          ),\n          segment_corr1: `\\\\textcolor{red}{[${noms[0] + noms[2]}]}`,\n          longueur_corr1: `\\\\textcolor{red}{${noms[0] + noms[2]}}`,\n          m_color_corr: `\\\\textcolor{red}{${Math.max(m, n)}}`,\n          n_color_corr: `\\\\textcolor{blue}{${Math.min(m, n)}}`,\n          fig_corr1: mathalea2d(\n            params,\n            fraction(Math.max(m, n), Math.min(m, n)).representation(0, yEnonce, 5, 0, 'segment', 'red', noms[0], noms[1], 1, noms[2])\n          ),\n          segment_corr2: `\\\\textcolor{blue}{[${noms[0] + noms[1]}]}`,\n          longueur_corr2: `\\\\textcolor{blue}{${noms[0] + noms[1]}}`,\n          fig_corr2: mathalea2d(\n            params,\n            fraction(Math.min(m, n), Math.max(m, n)).representation(0, yEnonce, (Math.max(m, n) / Math.min(m, n)) * 5, 0, 'segment', 'blue', noms[0], noms[2], 1, noms[1])\n          )\n        }\n\n      ]\n\n      const enonces = []\n      for (let k = 0; k < situations.length; k++) {\n        enonces.push({\n          enonce: `\n          Exprimer les rapports suivants $${situations[k].rapport}$ et $${situations[k].rapport_inverse}$.\n          <br>\n          ${situations[k].fig}     \n`,\n          question: '',\n          correction: `\n          Les graduations étant régulières, comptons le nombre de graduations pour chaque segment :<br>\n          ${situations[k].fig_corr1}<br>\n          Le segment $${situations[k].segment_corr1}$ compte $${situations[k].m_color_corr}$ ${singPlur(situations[k].m, 'graduation', 'graduations')}.<br>\n          ${situations[k].fig_corr2}<br>\n          Le segment $${situations[k].segment_corr2}$ compte $${situations[k].n_color_corr}$ ${singPlur(situations[k].n, 'graduation', 'graduations')}.<br><br>\n          Donc $\\\\dfrac{${situations[k].longueur_corr2}}{${situations[k].longueur_corr1}}=\\\\dfrac{${situations[k].n_color_corr}}{${situations[k].m_color_corr}}$\n          et $\\\\dfrac{${situations[k].longueur_corr1}}{${situations[k].longueur_corr2}}=\\\\dfrac{${situations[k].m_color_corr}}{${situations[k].n_color_corr}}$<br><br>\n          $\\\\textbf{D'où $\\\\mathbf{${situations[k].rapport}=}${fraction(situations[k].n, situations[k].m).texFractionSimplifiee}$ et $\\\\mathbf{${situations[k].rapport_inverse}=}${fraction(situations[k].m, situations[k].n).texFractionSimplifiee}$}$<br>\n\n`\n        })\n      };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n        case 1:\n          texte = `${enonces[1].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[1].correction}`\n          };\n          break\n        case 2:\n          texte = `${enonces[2].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[2].correction}`\n          };\n          break\n        case 3:\n          texte = `${enonces[3].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[3].correction}`\n          };\n          break\n        case 4:\n          texte = `${enonces[4].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[4].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[4].correction}`\n          };\n          break\n      };\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  // this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\n};\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}