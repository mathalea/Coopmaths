{"version":3,"file":"js/17740.1959dca343ff390412f0.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C20-2.js","webpack://mathalea/./src/js/exercices/5e/5N14-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["export const titre = 'Fractions égales et égalité des produits en croix 4e'\n\n// eslint-disable-next-line import/first\nimport EqResolvantesThales from '../5e/5N14-3.js'\nexport { amcReady, amcType } from '../5e/5N14-3.js'\nexport { interactifReady, interactifType } from '../5e/5N14-3.js'\n\nexport const dateDePublication = '24/11/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Clone de 5N14-3 pour les 4e\n * 5N14-3 sort du niveau 5e\n * @author Sébastien Lozano\n */\n\nexport default function EqResolvantesThales4e () {\n  EqResolvantesThales.call(this)\n  this.niveau = '4e'\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { fraction } from '../../modules/fractions.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListesSansChangerOrdre, calcul, texNombre2, texteEnCouleur } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Fractions égales et égalité des produits en croix'\n\nexport const amcReady = true\nexport const amcType = 'qcmMono'\nexport const interactifType = 'qcm'\nexport const interactifReady = true\n\nexport const description = 'Déterminer si une égalité de deux fractions est vraie en utilisant les produits en croix.<br> 4 niveaux : petits entiers, grands entiers, décimaux, mélange.'\n\n/**\n * * Fractions et égalité des produits en croix\n * * 5N14-3\n * * publication initiale le 23/05/2021\n * * modification le jj/mm/aaaa pour ....\n * @author Sébastien Lozano\n */\nexport default function EqResolvantesThales () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.debug = false\n  if (this.debug) {\n    this.nbQuestions = 4\n  } else {\n    this.nbQuestions = 4\n  };\n  this.sup = 1 // Niveau de difficulté\n  this.consigne = 'Les égalités suivantes sont-elles vraies ? Justifier.'\n\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  context.isHtml ? this.spacing = 3 : this.spacing = 2\n  context.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5\n\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.niveau = '5e'\n\n  this.nouvelleVersion = function () {\n    let typesDeQuestionsDisponibles = []\n    if (this.debug) {\n      typesDeQuestionsDisponibles = [0, 1, 2, 3]\n    } else {\n      typesDeQuestionsDisponibles = [0, 1, 2, 3]\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let numLowInt, fLowInt, fEqOrNotLowInt, denLowInt, numBigInt, denBigInt, fBigInt, fEqOrNotBigInt, numDec, denDec, fDec, masterChoice, fEqOrNotDec\n\n    // const listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n    // if (this.niveau === '5e') {\n    //   this.introduction = infoMessage({\n    //     titre: 'ATTENTION - Hors programme 5e',\n    //     texte: 'Cet exercice ne correspond plus au programme de 5e, vous le retrouvez au niveau 4e <a href=\"https://coopmaths.fr/mathalea.html?ex=4C20-2\"> en cliquant ici</a>.',\n    //     couleur: 'nombres'\n    //   })\n    // }\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // On a besoin d'un booléen pour que tout ne soit pas vrai ou faux\n      let equalOrNot\n      // On a besoin de variables opur les fractions\n      let f, fEqOrNot\n      // On a besoin d'un numerateur d'un dénominateur et d'un coefficient pour les fractions égales\n      let num, den\n      // On a besoin d'un string pour stocker l'égalité et un autre pour la justification\n      let egalite, justification\n      /**\n      * Une fonction pour rendre deux fractions égales ou pas\n      * @param {boolean} bool\n      * @returns deux fractions egales ou non\n      */\n      function fracEqualOrNot (bool, n, d) {\n        // On a besoin de deux fractions\n        let f2\n        const f1 = fraction(n, d)\n        if (bool) {\n          f2 = fraction(calcul(n * k), calcul(d * k))\n        } else {\n          f2 = fraction(calcul(n + k), calcul(d + k))\n        }\n        return { frac: f1, fracEqualOrNot: f2 }\n      }\n      /**\n      * Une fonction pour afficher des fraction avec num et/ou den décimaux\n      * @param num le numerateur de type number\n      * @param den le dénominateur de type number\n      */\n      function showFracNumDenDec (num, den) {\n        const f = fraction(num, den)\n        return `\\\\dfrac{${texNombre2(f.n)}}{${texNombre2(f.d)}}`\n      }\n\n      /**\n      * Une fonction pour la correction\n      * @param bool le booléen pour savoir si il y a égalité ou pas\n      * @param f une fraction\n      * @param fEqOrNot l'autre fraction égale ou pas\n      */\n      function justifyEq (bool, f, fEqOrNot) {\n        let strOut\n        if (bool) {\n          strOut = `D'une part, ${texNombre2(f.n)}$\\\\times$${texNombre2(fEqOrNot.d)} $=$ ${texteEnCouleur(texNombre2(f.n * fEqOrNot.d))}.<br>\n          D'autre part, ${texNombre2(f.d)}$\\\\times$${texNombre2(fEqOrNot.n)} $=$ ${texteEnCouleur(texNombre2(f.d * fEqOrNot.n))}.<br>\n          On constate que les produits en croix sont égaux.<br>\n          `\n          if (Number.isInteger(f.n)) {\n            strOut += `Les fractions $${f.texFraction}$ et $${fEqOrNot.texFraction}$ sont donc égales.`\n          } else {\n            strOut += `Les fractions $${showFracNumDenDec(f.n, f.d)}$ et $${showFracNumDenDec(fEqOrNot.n, fEqOrNot.d)}$ sont donc égales.`\n          }\n        } else {\n          strOut = `D'une part, ${texNombre2(f.n)}$\\\\times$${texNombre2(fEqOrNot.d)} $=$ ${texteEnCouleur(texNombre2(f.n * fEqOrNot.d))}.<br>\n          D'autre part, ${texNombre2(f.d)}$\\\\times$${texNombre2(fEqOrNot.n)} $=$ ${texteEnCouleur(texNombre2(f.d * fEqOrNot.n))}.<br>\n          On constate que les produits en croix ne sont pas égaux.<br>\n          `\n          if (Number.isInteger(f.n)) {\n            strOut += `Les fractions $${f.texFraction}$ et $${fEqOrNot.texFraction}$ ne sont donc pas égales.`\n          } else {\n            strOut += `Les fractions $${showFracNumDenDec(f.n, f.d)}$ et $${showFracNumDenDec(fEqOrNot.n, fEqOrNot.d)}$ ne sont donc pas égales.`\n          }\n        }\n        return strOut\n      }\n      const k = randint(2, 9)\n      // On prépare tous les contenus selon le type de questions\n      this.sup = Number(this.sup) // attention le formulaire renvoie un string, on a besoin d'un number pour le switch !\n      switch (this.sup) {\n        case 1: // petits entiers égalité\n          equalOrNot = choice([true, false])\n          num = randint(1, 9)\n          den = randint(2, 9, num)\n          egalite = `$${fracEqualOrNot(equalOrNot, num, den).frac.texFraction}\\\\overset{?}{=}${fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot.texFraction}$`\n          justification = justifyEq(equalOrNot, fracEqualOrNot(equalOrNot, num, den).frac, fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot)\n          break\n        case 2: // grands entiers\n          equalOrNot = choice([true, false])\n          num = randint(11, 99)\n          den = randint(11, 99, num)\n          egalite = `$${fracEqualOrNot(equalOrNot, num, den).frac.texFraction}=${fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot.texFraction}$`\n          justification = justifyEq(equalOrNot, fracEqualOrNot(equalOrNot, num, den).frac, fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot)\n          break\n        case 3: // décimaux\n          equalOrNot = choice([true, false])\n          num = calcul(randint(11, 99) * 0.1)\n          den = calcul(randint(11, 99, num) * 0.1)\n          f = fracEqualOrNot(equalOrNot, num, den).frac\n          fEqOrNot = fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot\n          egalite = `$${showFracNumDenDec(f.n, f.d)}=${showFracNumDenDec(fEqOrNot.n, fEqOrNot.d)}$`\n          justification = justifyEq(equalOrNot, fracEqualOrNot(equalOrNot, num, den).frac, fracEqualOrNot(equalOrNot, num, den).fracEqualOrNot)\n          break\n        case 4: // mélange\n          equalOrNot = choice([true, false])\n          numLowInt = randint(2, 9)\n          denLowInt = randint(2, 9, numLowInt)\n          fLowInt = fracEqualOrNot(equalOrNot, numLowInt, denLowInt).frac\n          fEqOrNotLowInt = fracEqualOrNot(equalOrNot, numLowInt, denLowInt).fracEqualOrNot\n          numBigInt = randint(11, 99)\n          denBigInt = randint(11, 99, numBigInt)\n          fBigInt = fracEqualOrNot(equalOrNot, numBigInt, denBigInt).frac\n          fEqOrNotBigInt = fracEqualOrNot(equalOrNot, numBigInt, denBigInt).fracEqualOrNot\n          numDec = calcul(randint(11, 99) * 0.1)\n          denDec = calcul(randint(11, 99, numDec) * 0.1)\n          fDec = fracEqualOrNot(equalOrNot, numDec, denDec).frac\n          fEqOrNotDec = fracEqualOrNot(equalOrNot, numDec, denDec).fracEqualOrNot\n          masterChoice = choice([\n            { equalOrNot: equalOrNot, num: numLowInt, den: denLowInt, k: k, f: fLowInt, fEqOrNot: fEqOrNotLowInt },\n            { equalOrNot: equalOrNot, num: numBigInt, den: denBigInt, k: k, f: fBigInt, fEqOrNot: fEqOrNotBigInt },\n            { equalOrNot: equalOrNot, num: numDec, den: denDec, k: k, f: fDec, fEqOrNot: fEqOrNotDec }\n          ])\n          egalite = ''\n          if (Number.isInteger(masterChoice.n)) {\n            egalite += `$${masterChoice.f.texFraction}=${masterChoice.fEqOrNot.texFraction}$`\n          } else {\n            egalite += `$${showFracNumDenDec(masterChoice.f.n, masterChoice.f.d)}=${showFracNumDenDec(masterChoice.fEqOrNot.n, masterChoice.fEqOrNot.d)}$`\n          }\n          justification = justifyEq(equalOrNot, masterChoice.f, masterChoice.fEqOrNot)\n          break\n      };\n\n      const enonces = []\n      for (let k = 0; k < 4; k++) {\n        enonces.push({\n          enonce: egalite,\n          question: '',\n          correction: justification\n        })\n      };\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n        case 1:\n          texte = `${enonces[1].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[1].correction}`\n          };\n          break\n        case 2:\n          texte = `${enonces[2].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[2].correction}`\n          };\n          break\n        case 3:\n          texte = `${enonces[3].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[3].correction}`\n          };\n          break\n      };\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: 'L\\'égalité est vraie',\n          statut: equalOrNot\n        },\n        {\n          texte: 'L\\'égalité est fausse',\n          statut: !equalOrNot\n        },\n        {\n          texte: 'Je ne sais pas',\n          statut: false\n        }\n      ]\n      this.autoCorrection[i].options = { ordered: true } // On ne mélange pas les propositions 'Oui', 'Non' et 'Je ne sais pas'\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de nombres', 4, '1 : Petits entiers\\n2 : Grands entiers\\n3 : Décimaux\\n4 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","dateDePublication","EqResolvantesThales4e","EqResolvantesThales","this","niveau","amcReady","amcType","interactifType","interactifReady","description","Exercice","debug","nbQuestions","sup","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","tailleDiaporama","video","nouvelleVersion","numLowInt","fLowInt","fEqOrNotLowInt","denLowInt","numBigInt","denBigInt","fBigInt","fEqOrNotBigInt","numDec","denDec","fDec","masterChoice","fEqOrNotDec","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","autoCorrection","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","equalOrNot","f","fEqOrNot","num","den","egalite","justification","fracEqualOrNot","bool","n","d","f2","f1","fraction","calcul","k","frac","showFracNumDenDec","texNombre2","justifyEq","strOut","texteEnCouleur","Number","isInteger","texFraction","randint","choice","enonces","push","enonce","question","correction","propositions","statut","options","ordered","interactif","propositionsQcm","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}