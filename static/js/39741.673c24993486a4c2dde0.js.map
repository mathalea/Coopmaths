{"version":3,"file":"js/39741.673c24993486a4c2dde0.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G31-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, texFraction, texFractionReduite, pgcd, ecritureParentheseSiNegatif, unSiPositifMoinsUnSinon } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = \"Déterminer le coefficient directeur d'une droite.\"\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n/**\n * Description didactique de l'exercice\n * @author Stéphane Guyon\n * 2G31-1, ex 2G50\n*/\nexport default function CoefficientDirecteurDeDroite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n\n  this.nbQuestions = 3\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeQuestionsDisponibles = ['Droite oblique', 'Droite oblique', 'Droite oblique', 'Droite oblique', 'Droite verticale'] // On créé 2 types de questions\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, xA, yA, xB, yB, n, d, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      if (!this.interactif) {\n        this.consigne = \"Soit $\\\\big(O,\\\\vec i;\\\\vec j\\\\big)$ un repère orthogonal.  Déterminer, s'il existe et en l'expliquant, le coefficient directeur de la droite $\\\\bm{(AB)}$,\"\n      } else {\n        this.consigne = \"Soit $\\\\big(O,\\\\vec i;\\\\vec j\\\\big)$ un repère orthogonal.  Déterminer, s'il existe et en l'expliquant, le coefficient directeur de la droite $\\\\bm{(AB)}$, écrire 'non' si la droite n'a pas de coefficicient directeur,\"\n      }\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'Droite oblique':\n          xA = randint(-5, 5)\n          yA = randint(-5, 5)\n          xB = randint(-5, 5, xA)\n          yB = randint(-5, 5)\n          n = yB - yA\n          d = xB - xA\n\n          texte = `avec $A(${xA};${yA})$ et $B(${xB};${yB})$. `\n          texteCorr = 'On observe que $ x_B\\\\neq x_A$.'\n          texteCorr += \"<br>La droite $(AB)$ n'est donc pas verticale.\"\n          texteCorr += '<br>On peut donc calculer le coefficient directeur de la droite.'\n          texteCorr += \"<br>On sait d'après le cours : $m=\\\\dfrac{y_B-y_A}{x_B-x_A}$.\"\n          texteCorr += `<br>On applique avec les données de l'énoncé : $m=\\\\dfrac{${yB}-${ecritureParentheseSiNegatif(yA)}}{${xB}-${ecritureParentheseSiNegatif(xA)}}=${texFraction(n, d)}`\n          if ((pgcd(n, d) !== 1 || d === 1 || d < 0) && n !== 0) {\n            texteCorr += `=${texFractionReduite(n, d)}`\n          }\n          texteCorr += '$'\n          setReponse(this, i, texFractionReduite(n, d))\n          if (context.isAmc) {\n            n = unSiPositifMoinsUnSinon(n) * unSiPositifMoinsUnSinon(d) * Math.abs(n)\n            d = Math.abs(d)\n            this.autoCorrection[i] = {\n              enonce: `Soit $\\\\big(O,\\\\vec i;\\\\vec j\\\\big)$ un repère orthogonal. Soit $A(${xA};${yA})$ et $B(${xB};${yB})$.<br>Déterminer, s'il existe, le coefficient directeur de la droite $\\\\bm{(AB)}$ sous la forme d'une fraction irréductible (coder deux fois zéro si le coefficient n'existe pas).<br>`,\n              propositions: [\n                {\n                  type: 'qcmMono',\n                  propositions: [{\n                    texte: 'Le coefficient existe',\n                    statut: true,\n                    feedback: \"On observe que $ x_B\\\\neq x_A$, donc la droite n'est pas verticale et elle a un coefficient directeur.\"\n                  },\n                  {\n                    texte: \"Le coefficient n'existe pas\",\n                    statut: false,\n                    feedback: \"On observe que $ x_B\\\\neq x_A$, donc la droite n'est pas verticale et elle a un coefficient directeur.\"\n                  }\n                  ]\n                },\n                {\n                  type: 'AMCNum',\n                  propositions: [{\n                    texte: texteCorr,\n                    statut: '',\n                    reponse: {\n                      texte: 'numérateur',\n                      valeur: n,\n                      param: {\n                        digits: 1,\n                        decimals: 0,\n                        signe: true,\n                        approx: 0\n                      }\n                    }\n                  }]\n                },\n                {\n                  type: 'AMCNum',\n                  propositions: [{\n                    texte: '',\n                    statut: '',\n                    reponse: {\n                      texte: 'dénominateur',\n                      valeur: d,\n                      param: {\n                        digits: 1,\n                        decimals: 0,\n                        signe: false,\n                        approx: 0\n                      }\n                    }\n                  }]\n                }\n              ]\n            }\n          }\n          break\n        case 'Droite verticale':\n          xA = randint(-5, 5)\n          yA = randint(-5, 5)\n          xB = xA\n          yB = randint(-5, 5)\n          n = yB - yA\n          d = xB - xA\n\n          texte = `avec $A(${xA};${yA})$ et $B(${xB};${yB})$. `\n          texteCorr = 'On observe que $ x_B = x_A$.'\n          texteCorr += '<br>La droite $(AB)$ est donc verticale.'\n          texteCorr += \"<br>Elle n'admet donc pas de coefficient directeur.\"\n          setReponse(this, i, ['non', '\\\\times'])\n          if (context.isAmc) {\n            this.autoCorrection[i] = {\n              enonce: `Soit $\\\\big(O,\\\\vec i;\\\\vec j\\\\big)$ un repère orthogonal. Soit $A(${xA};${yA})$ et $B(${xB};${yB})$.<br>Déterminer, s'il existe, le coefficient directeur de la droite $\\\\bm{(AB)}$ sous la forme d'une fraction irréductible (coder deux fois zéro si le coefficient n'existe pas).<br>`,\n              propositions: [\n                {\n                  type: 'qcmMono',\n                  propositions: [{\n                    texte: 'Le coefficient existe',\n                    statut: false,\n                    feedback: \"On observe que $ x_B = x_A$, donc la droite est verticale et elle n'a pas de coefficient directeur.\"\n                  },\n                  {\n                    texte: \"Le coefficient n'existe pas\",\n                    statut: true,\n                    feedback: \"On observe que $ x_B\\\\neq x_A$, donc la droite n'est pas verticale et elle a un coefficient directeur.\"\n                  }\n                  ]\n                },\n                {\n                  type: 'AMCNum',\n                  propositions: [{\n                    texte: texteCorr,\n                    statut: '',\n                    reponse: {\n                      texte: 'numérateur',\n                      valeur: 0,\n                      param: {\n                        digits: 1,\n                        decimals: 0,\n                        signe: true,\n                        approx: 0\n                      }\n                    }\n                  }]\n                },\n                {\n                  type: 'AMCNum',\n                  propositions: [{\n                    texte: texteCorr,\n                    statut: '',\n                    reponse: {\n                      texte: 'dénominateur',\n                      valeur: 0,\n                      param: {\n                        digits: 1,\n                        decimals: 0,\n                        signe: true,\n                        approx: 0\n                      }\n                    }\n                  }]\n                }\n              ]\n            }\n          }\n\n          break\n      }\n      if (!this.interactif) {\n        this.consigne = \"Soit $\\\\big(O,\\\\vec i;\\\\vec j\\\\big)$ un repère orthogonal.  Déterminer, s'il existe et en l'expliquant, le coefficient directeur de la droite $\\\\bm{(AB)}$,\"\n      } else {\n        this.consigne = \"Soit $\\\\big(O,\\\\vec i;\\\\vec j\\\\big)$ un repère orthogonal.  Déterminer, s'il existe et en l'expliquant, le coefficient directeur de la droite $\\\\bm{(AB)}$, écrire 'non' si la droite n'a pas de coefficicient directeur,\"\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.questionJamaisPosee(i, xA, yA, xB, yB)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","CoefficientDirecteurDeDroite","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","texte","xA","yA","xB","yB","n","d","texteCorr","i","cpt","interactif","consigne","randint","ecritureParentheseSiNegatif","texFraction","pgcd","texFractionReduite","setReponse","context","unSiPositifMoinsUnSinon","Math","abs","autoCorrection","enonce","propositions","type","statut","feedback","reponse","valeur","param","digits","decimals","signe","approx","ajouteChampTexteMathLive","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}