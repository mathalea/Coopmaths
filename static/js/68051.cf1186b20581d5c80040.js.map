{"version":3,"file":"js/68051.cf1186b20581d5c80040.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2F10-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, reduireAxPlusB, choice, ecritureAlgebrique, ecritureParentheseSiNegatif, texFractionReduite } from '../../modules/outils.js'\nimport { repere2, droite, mathalea2d, point, tracePoint, labelPoint, texteParPosition } from '../../modules/2d.js'\nimport { min, max } from 'mathjs'\n\nexport const titre = 'Représentation graphique d’une fonction affine'\n\n/**\n* @author Stéphane Guyon\n* 2F10-3\n*/\nexport default function representerfonctionaffine () {\n  Exercice.call(this)\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 3 // On complète le nb de questions\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.tailleDiaporama = 100\n  this.video = ''\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = []\n    this.listeCorrections = []\n    // let typesDeQuestionsDisponibles = []\n    // typesDeQuestionsDisponibles = [1, 2]// On complète selon le nb de cas dans l'exo (switch)\n\n    // const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    const o = texteParPosition('O', -0.5, -0.5, 'milieu', 'black', 1)\n\n    for (let i = 0, a, b, r, c, d, tA, lA, tB, lB, xA, yA, lC, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;) { // on rajoute les variables dont on a besoin\n      // typesDeQuestions = listeTypeDeQuestions[i]\n      if (this.sup === 1) {\n        a = randint(0, 3) * choice([-1, 1])// coefficient a de la fonction affine\n        b = randint(0, 3) * choice([-1, 1])// coefficient b de la fonction affine\n\n        if (a === 0 && b === 0) { // On évite la fonction nulle\n          a = 1\n        }\n        c = droite(a, -1, b)\n        c.color = 'red'\n        c.epaisseur = 2\n        xA = randint(1, 3) * choice([-1, 1])// Abscisse de A\n        yA = a * xA + b// Ordonnée de A\n        r = repere2({\n          xMin: -6,\n          yMin: min(-8, yA - 2),\n          xMax: 6,\n          yMax: max(8, yA + 2)\n        })\n\n        const B = point(xA, yA, 'B')\n        const A = point(0, b, 'A')\n\n        tA = tracePoint(A, 'red') // Variable qui trace les points avec une croix\n        tB = tracePoint(B, 'red') // Variable qui trace les points avec une croix\n        lA = labelPoint(A, 'red')// Variable qui trace les nom s A et B\n        lB = labelPoint(B, 'red')// Variable qui trace les nom s A et B\n\n        tA.taille = 5\n        tA.epaisseur = 2\n\n        tB.taille = 5\n        tB.epaisseur = 2\n        texte = `Représenter graphiquement la fonction affine $f$ définie sur $\\\\mathbb R$ par $f(x)=${reduireAxPlusB(a, b)}$ <br>`\n        if (a !== 0) {\n          texteCorr = 'On sait que la représentation graphique d\\'une fonction affine est une droite.<br>'\n          texteCorr += 'Il suffit donc de déterminer les coordonnées de deux points pour pouvoir représenter $f$.<br>'\n          texteCorr += `Comme $f(0)=${b}$, on a  $A(0;${b}) \\\\in \\\\mathcal{C_f}$.<br>`\n          texteCorr += 'On cherche un deuxième point, et on prend un antécédent au hasard :<br>'\n          texteCorr += `Soit $x=${xA}$ :<br>`\n          texteCorr += `On calcule : $f(${xA})=${a} \\\\times ${ecritureParentheseSiNegatif(xA)}${ecritureAlgebrique(b)}=${yA}$<br>`\n          texteCorr += `On en déduit que $B(${xA};${yA}) \\\\in \\\\mathcal{C_f}$.`\n        } else {\n          texteCorr = 'On oberve que $f$ est une fonction constante<br>'\n          texteCorr += `Sa représentation graphique est donc une droite parallèle à l'axe des abscisses, d'équation $y=${b}$.<br>`\n        }\n        texteCorr += mathalea2d({\n          xmin: -6,\n          ymin: min(-8, yA - 2),\n          xmax: 6,\n          ymax: max(8, yA + 2)\n        }, lA, lB, r, c, tA, tB, o)\n      }\n      if (this.sup === 2) { // cas du coeff directeur fractionnaire\n        a = randint(-5, 5, [0]) // numérateut coefficient directeur non nul\n        b = randint(-5, 5) // ordonnée à l'origine\n        d = randint(2, 5, [a, 2 * a, -a, -2 * a]) // dénominateur coefficient directeur non multiple du numérateur pour éviter nombre entier\n        if (a === 0 && b === 0) {\n          a = 1\n          d = 3\n        }// On évite la situation de double nullité\n        xA = d // Abscisse de A\n        yA = a / d * xA + b// Ordonnée de A\n\n        const B1 = point(xA, yA, 'B')\n        const A1 = point(0, b, 'A')\n        // const f = point(xA / 2, (b + yA) / 2)\n        r = repere2({\n          xMin: -8,\n          yMin: -10,\n          xMax: 8,\n          yMax: 8\n        })// On définit le repère\n        c = droite(a / d, -1, b)\n        c.color = 'red'\n        c.epaisseur = 2\n\n        texte = `Représenter graphiquement la fonction affine $f$ définie sur $\\\\mathbb R$ par $f(x)=${texFractionReduite(a, d)}x ${ecritureAlgebrique(b)}$ <br>`\n\n        texteCorr = 'On sait que la représentation graphique d\\'une fonction affine est une droite.<br>'\n        texteCorr += 'Il suffit donc de déterminer les coordonnées de deux points pour pouvoir représenter $f$.<br>'\n        texteCorr += `Comme $f(0)=${b}$, on a : $A(0;${b}) \\\\in \\\\mathcal{C_f}$.<br>`\n        texteCorr += 'On cherche un deuxième point, et on prend un antécédent qui facilite les calculs :<br>'\n        texteCorr += `Par exemple $x=${xA}$ :<br>`\n        texteCorr += `On calcule : $f(${xA})=${texFractionReduite(a, d)} \\\\times ${ecritureParentheseSiNegatif(xA)}${ecritureAlgebrique(b)}=${yA}$<br>`\n        texteCorr += `On en déduit que $B(${xA};${yA}) \\\\in \\\\mathcal{C_f}$.`\n\n        tA = tracePoint(A1, 'red') // Variable qui trace les points avec une croix\n        lA = labelPoint(A1, 'red')// Variable qui trace les nom s A et B\n        tB = tracePoint(B1, 'red') // Variable qui trace les points avec une croix\n        lB = labelPoint(B1, 'red')// Variable qui trace les nom s A et B\n        // lC = labelPoint(f, 'C_f')// Variable qui trace les nom s A et B\n        texteCorr += mathalea2d({\n          xmin: -8,\n          ymin: -10,\n          xmax: 8,\n          ymax: 8\n\n        }, r, c, tA, lA, tB, lB, lC, o)\n        // On trace le graphique\n      }\n\n      if (this.questionJamaisPosee(i, this.sup, a, b)) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Types de question ', 2, '1 : Valeurs entières\\n2 : Valeurs fractionnaires.']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","representerfonctionaffine","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","spacing","spacingCorr","sup","nouvelleVersion","parseInt","listeQuestions","listeCorrections","o","texteParPosition","a","b","r","c","d","tA","lA","tB","lB","xA","yA","lC","texte","texteCorr","i","cpt","randint","choice","droite","color","epaisseur","repere2","xMin","yMin","min","xMax","yMax","max","B","point","A","tracePoint","labelPoint","taille","reduireAxPlusB","ecritureParentheseSiNegatif","ecritureAlgebrique","mathalea2d","xmin","ymin","xmax","ymax","B1","A1","texFractionReduite","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}