{"version":3,"file":"js/85035.595611ca3d08f4bc6e61.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/1e/1E12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, rienSi1, ecritureAlgebrique, ecritureAlgebriqueSauf1, ecritureParentheseSiNegatif, texNombrec, lettreMinusculeDepuisChiffre, texNombre, miseEnEvidence } from '../../modules/outils.js'\nimport { repere, courbe, mathalea2d } from '../../modules/2d.js'\nimport { calcule } from '../../modules/fonctionsMaths.js'\n\nexport const titre = 'Trouver l’équation d’une parabole'\n\n/**\n * @author Jean-Claude Lhote\n * Trois type de questions proposées :\n * 1) passant par trois dont deux d'abscisses opposées et le troisième d'abscisse 0 (pour simplifier la résolution du système)\n * 2) Passant par un point et dont on connait le sommet\n * 3) connaissant les deux racines et un autre point de passage à coordonnées entières\n * référence 1E12\n */\nexport default function TrouverEquationParabole () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Trouver l'expression de la fonction f.\"\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacingCorr = 3\n  this.sup = 4\n  this.correctionDetailleeDisponible = true\n\n  this.nouvelleVersion = function () {\n    const pixelsParCm = 20\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles\n    if (this.sup < 4) typesDeQuestionsDisponibles = [parseInt(this.sup)]\n    else typesDeQuestionsDisponibles = [1, 2, 2, 3, 3]\n    const fName = []; let Ymin; let Yscale; let Ymax\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, a, b, c, x1, x2, x3, f, r, svgYmin, svgYmax, F, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      fName.push(lettreMinusculeDepuisChiffre(i + 6))\n      texte = `Quelle est l'expression de la fonction polynomiale $\\\\mathscr{${fName[i]}}$ du second degré `\n      texteCorr = ''\n      switch (listeTypeDeQuestions[i]) {\n        case 1 : // passe par 3 points à coordonnées entières dont -x1, 0 et x1.\n          a = randint(-4, 4, 0)\n          b = randint(-6, 6, 0)\n          c = randint(-10, 10, 0)\n          x1 = randint(1, 5)\n          x2 = randint(-5, 5, x1)\n          x3 = randint(-5, 5, [x1, x2])\n          f = function (x) {\n            return calcule(a * x ** 2 + b * x + c)\n          }\n          texte += `qui passe par les points de coordonnées $(${-x1};${f(-x1)})$, $(0;${f(0)})$ et $(${x1};${f(x1)})$ ?<br>`\n          texteCorr = `Soit $\\\\mathscr{${fName[i]}}(x)=ax^2+bx+c$ , l'expression de la fonction cherchée, comme $\\\\mathscr{${fName[i]}}(0)=${f(0)}$ nous en déduisons que $c=${miseEnEvidence(f(0), 'red')}$.<br>`\n          texteCorr += `Donc $\\\\mathscr{${fName[i]}}(x)=ax^2+bx${miseEnEvidence(ecritureAlgebrique(f(0)), 'red')}$.<br>`\n          texteCorr += 'En substituant dans cette expression les valeurs de l\\'énoncé, nous obtenons :<br>'\n          texteCorr += `$\\\\begin{cases}\n${f(x1)}=a\\\\times${x1}^2+b\\\\times${x1}${ecritureAlgebrique(f(0))}=${ecritureAlgebriqueSauf1(x1 ** 2)}a ${ecritureAlgebriqueSauf1(x1)}b ${ecritureAlgebrique(f(0))} \\\\\\\\\n${f(-x1)}=a\\\\times(${-x1})^2+b\\\\times(${-x1})${ecritureAlgebrique(f(0))}=${ecritureAlgebriqueSauf1(x1 ** 2)}a ${ecritureAlgebriqueSauf1(-x1)}b ${ecritureAlgebrique(f(0))}\n \\\\end{cases}$<br>`\n          if (this.correctionDetaillee) {\n            texteCorr += `Ce qui équivaut à <br>$\\\\begin{cases}\n ${f(x1)}${ecritureAlgebrique(-f(0))}=${f(x1) - f(0)}=${ecritureAlgebriqueSauf1(x1 ** 2)}a ${ecritureAlgebriqueSauf1(x1)}b \\\\\\\\\n ${f(-x1)}${ecritureAlgebrique(-f(0))}=${f(-x1) - f(0)}=${ecritureAlgebriqueSauf1(x1 ** 2)}a ${ecritureAlgebriqueSauf1(-x1)}b\n   \\\\end{cases}$<br>`\n            texteCorr += `En ajoutant et en soustrayant les équations membre à membre, on obtient :<br>\n$\\\\begin{cases}\n${f(x1) + f(-x1) - 2 * f(0)}=${2 * x1 ** 2}a \\\\\\\\\n${f(x1) - f(-x1)}=${2 * x1}b\n \\\\end{cases}$<br>`\n          }\n          texteCorr += `La résolution de ce système donne $a=${miseEnEvidence(texNombre(a), 'blue')}$ et $b=${miseEnEvidence(texNombre(b), 'green')}$.<br>`\n          texteCorr += `D'où $\\\\mathscr{${fName[i]}}(x)=${miseEnEvidence(ecritureAlgebriqueSauf1(a), 'blue')}x^2 ${miseEnEvidence(ecritureAlgebriqueSauf1(b), 'green')}x  ${miseEnEvidence(ecritureAlgebrique(c), 'red')}$<br>`\n\n          break\n        case 2 : // Passant par le sommet (x1,y1) et par le point (x2,y2)\n          a = randint(-3, 3, 0)\n          b = randint(-3, 3, 0) * 2 * a\n          c = randint(-10, 10)\n          x1 = calcule(-b / (2 * a))\n          x2 = randint(-5, 5, x1)\n          x3 = randint(-5, 5, [x1, x2])\n\n          f = function (x) {\n            return calcule(a * x ** 2 + b * x + c)\n          }\n          texte += `dont la parabole a pour sommet le point de coordonnées $(${x1};${f(x1)})$ et passe par le point de coordonnées $(${x2};${f(x2)})$ ?<br>`\n          texteCorr = `D'après les coordonnées $(${x1};${f(x1)})$ du sommet, $\\\\mathscr{${fName[i]}}$ a pour forme canonique : $\\\\mathscr{${fName[i]}}(x)=a(x${ecritureAlgebrique(-x1)})^2${ecritureAlgebrique(f(x1))}$.<br>`\n          texteCorr += `De plus $\\\\mathscr{${fName[i]}}(${x2})=${f(x2)}$`\n          if (this.correctionDetaillee) {\n            texteCorr += ` donc $a(${x2}${ecritureAlgebrique(-x1)})^2${ecritureAlgebrique(f(x1))}=${f(x2)}$ `\n            texteCorr += `soit $${x2 ** 2}a ${ecritureAlgebrique(-2 * x1 * x2)}a ${ecritureAlgebrique(x1 ** 2)}a ${ecritureAlgebrique(f(x1))}=${f(x2)}$.<br>`\n            if (x2 ** 2 - 2 * x1 * x2 + x1 ** 2 !== 1) { texteCorr += `On en déduit que $a=\\\\dfrac{${f(x2)}${ecritureAlgebrique(-f(x1))}}{${(x2 ** 2 - 2 * x1 * x2 + x1 ** 2)}}=${a}$.<br>` } else { texteCorr += `On en déduit que $a=${f(x2)}${ecritureAlgebrique(-f(x1))}=${a}$.<br>` }\n          } else texteCorr += ` donc $a=${a}$.<br>`\n          if (this.correctionDetaillee) {\n            texteCorr += `Développons la forme canonique : $\\\\mathscr{${fName[i]}}(x)=\n  a(x${ecritureAlgebrique(-x1)})^2${ecritureAlgebrique(f(x1))}=\n  a(x^2${miseEnEvidence(ecritureAlgebrique(-2 * x1), 'green')}x+${miseEnEvidence(texNombrec(x1 ** 2), 'red')})${miseEnEvidence(ecritureAlgebrique(f(x1)), 'red')}\n  =${miseEnEvidence('a', 'blue')}x^2${miseEnEvidence(ecritureAlgebrique(-2 * x1) + 'a', 'green')}x${miseEnEvidence(ecritureAlgebriqueSauf1(x1 ** 2) + 'a' + ecritureAlgebrique(f(x1)), 'red')}$.<br>`\n          }\n          texteCorr += `En remplaçant $a$ par sa valeur $${a}$ dans l'expression canonique développée $${miseEnEvidence('a', 'blue')}x^2${miseEnEvidence(ecritureAlgebrique(-2 * x1) + 'a', 'green')}x${miseEnEvidence(ecritureAlgebriqueSauf1(x1 ** 2) + 'a' + ecritureAlgebrique(f(x1)), 'red')}$ on obtient :<br>`\n          texteCorr += `$\\\\mathscr{${fName[i]}}(x)=${miseEnEvidence(rienSi1(a), 'blue')}x^2${miseEnEvidence(ecritureAlgebriqueSauf1(b), 'green')}x${miseEnEvidence(ecritureAlgebrique(c), 'red')}$`\n          break\n        case 3: // on a deux racines x1 et x2 et un troisième point (x3;f(x3))\n          x1 = randint(-6, -1)\n          x2 = randint(1, 6, -x1)\n          x3 = randint(-5, 5, [x1, x2])\n          a = randint(-4, 4, 0)\n          b = calcule(-a * (x1 + x2))\n          c = a * x1 * x2\n          f = function (x) {\n            return calcule(a * x ** 2 + b * x + c)\n          }\n          texte += `qui s'annule en $x=${x1}$ et en $x=${x2}$ et dont la parabole passe par le point de coordonnées $(${x3};${f(x3)})$ ?<br>`\n          texteCorr += `Comme $${x1}$ et $${x2}$ sont les deux solutions de l'équation $\\\\mathscr{${fName[i]}}(x)=0$, on peut factoriser $\\\\mathscr{${fName[i]}}(x)$ :<br>`\n          texteCorr += `$\\\\mathscr{${fName[i]}}(x)=a(x${ecritureAlgebrique(-x1)})(x${ecritureAlgebrique(-x2)})$.<br>`\n          texteCorr += `Comme $\\\\mathscr{${fName[i]}}(${x3})=${f(x3)}$, on en déduit que `\n          if (this.correctionDetaillee) {\n            texteCorr += `$${f(x3)}=a(${x3}${ecritureAlgebrique(-x1)})(${x3}${ecritureAlgebrique(-x2)})$ `\n            texteCorr += `d'où $a=${f(x3)}\\\\div ${ecritureParentheseSiNegatif((x3 - x1) * (x3 - x2))}=${a}$.<br>`\n          } else texteCorr += `$a=${a}$.<br>`\n          texteCorr += `On obtient ainsi $\\\\mathscr{${fName[i]}}(x)=${rienSi1(a)}(x${ecritureAlgebrique(-x1)})(x${ecritureAlgebrique(-x2)})$ ou en développant $\\\\mathscr{${fName[i]}}(x)=${ecritureAlgebriqueSauf1(a)}x^2 ${ecritureAlgebriqueSauf1(b)}x  ${ecritureAlgebrique(c)}$`\n          break\n      }\n      if (a < 0) {\n        Ymax = Math.ceil(f(-b / (2 * a)) + 2)\n        Ymin = Math.min(f(x1), f(x2), f(x3), f(-x1), f(0), f(-6), f(6))\n      } else {\n        Ymin = Math.floor(f(-b / (2 * a)) - 2)\n        Ymax = Math.max(f(x1), f(x2), f(x3), f(-x1), f(0), f(-6), f(6))\n      }\n\n      if (Ymax - Ymin < 10) Yscale = 2\n      else Yscale = Math.max(1, calcule(Math.round(Math.ceil((Ymax - Ymin) / 10) / 5) * 5)) * 2\n      r = repere({\n        xmin: -10,\n        ymin: Ymin - Yscale,\n        ymax: Ymax + Yscale,\n        xmax: 10,\n        xscale: 1,\n        yscale: Yscale,\n        positionLabelY: -0.8\n      })\n\n      svgYmin = Math.min(calcule(Ymin / Yscale), -1)\n      svgYmax = Math.max(calcule(Ymax / Yscale), 1)\n      F = x => a * x ** 2 + b * x + c\n      texte += mathalea2d({ xmin: -10, xmax: 11, ymin: svgYmin, ymax: svgYmax + 2, pixelsParCm: pixelsParCm, scale: 0.6 }, courbe(F, -10, 10, 'blue', 1.5, r), r)\n      if (this.questionJamaisPosee(i, a, b, c)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de questions ', 4, '1 : Passant par trois points à coordonnées entières 1\\n2 : Connaissant le sommet et un point de passage\\n3 : Connaissant les deux racines et un point de passage\\n4 : Mélange des trois type de questions']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","TrouverEquationParabole","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","spacingCorr","sup","correctionDetailleeDisponible","nouvelleVersion","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","parseInt","fName","Ymin","Yscale","Ymax","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","x1","x2","x3","f","r","svgYmin","svgYmax","F","i","cpt","push","lettreMinusculeDepuisChiffre","randint","x","calcule","miseEnEvidence","ecritureAlgebrique","ecritureAlgebriqueSauf1","correctionDetaillee","texNombre","texNombrec","rienSi1","ecritureParentheseSiNegatif","Math","ceil","min","floor","max","round","repere","xmin","ymin","ymax","xmax","xscale","yscale","positionLabelY","mathalea2d","pixelsParCm","scale","courbe","questionJamaisPosee","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}