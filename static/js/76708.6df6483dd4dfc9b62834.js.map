{"version":3,"file":"js/76708.6df6483dd4dfc9b62834.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5G30-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, arrondi, choisitLettresDifferentes, miseEnEvidence, numAlpha } from '../../modules/outils.js'\nimport { point, pointSurSegment, pointIntersectionDD, labelPoint, droite, droiteParPointEtParallele, rotation, similitude, codeAngle, longueur, angle, mathalea2d } from '../../modules/2d.js'\n\nexport const titre = 'Déterminer des angles en utilisant les cas d’égalité'\n\n/**\n * Déterminer des angles en utilisant les cas d'égalités : opposés par le sommet, alternes-internes, correspondants...\n * ref 5G30-1\n * publié le 14/11/2020\n * @author Jean-Claude Lhote Inspiré d'exercices du manuel sésamath.\n */\nexport default function Egalite_d_angles () {\n  'use strict'\n  Exercice.call(this)\n  this.sup = 1\n  this.nbQuestions = 1\n  if (context.isHtml) {\n    this.spacing = 2\n    this.spacingCorr = 3\n  } else {\n    this.spacing = 2\n    this.spacingCorr = 2\n  }\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.titre = titre\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    // this.consigne = \"Cet exercice est inspiré d'un exercice du manuel sésamath 5e\"\n    let figure = []; let choix\n    const fig1 = function () {\n      let A; let B; let C; let D; let E; let a; let ac; let ce; let c; let AE; let BD; let CA; let CE; let c1; let c2; let c3; let c4; let c5; let m1; let m2; let l1; const objets = []; let enonce; let correction; let params\n      const noms = choisitLettresDifferentes(5, 'Q', true); let gras\n      context.isHtml ? gras = '#f15929' : gras = 'black'\n      A = point(0, 0, noms[0], 'above left')\n      a = randint(45, 85)\n      ac = randint(8, 10)\n      ce = randint(7, 10, ac)\n      C = similitude(rotation(point(1, 0), A, randint(-45, 45)), A, a, ac, noms[2], 'left')\n      c = randint(45, 70)\n      E = similitude(A, C, c, ce / ac, noms[4], 'above right')\n      CA = droite(C, A)\n      CE = droite(C, E)\n      AE = droite(A, E, '', 'gray')\n      AE.epaisseur = 2\n      B = pointSurSegment(A, C, randint(3, ac - 4), noms[1], 'above left')\n      BD = droiteParPointEtParallele(B, AE, '', 'gray')\n      BD.epaisseur = 2\n      D = pointIntersectionDD(BD, CE, noms[3], 'above right')\n      m1 = codeAngle(E, A, C, 1, '', 'black', 2, 1, 'black', 0.1, true)\n      m2 = codeAngle(A, C, E, 1, '', 'black', 2, 1, 'black', 0.1, true)\n      l1 = labelPoint(A, B, C, D, E)\n      c1 = codeAngle(D, B, A, 1, '', 'blue', 2, 1, 'blue')\n      c2 = codeAngle(B, D, E, 1, '', 'orange', 2, 1, 'orange')\n      c3 = codeAngle(D, E, A, 1, '', 'green', 2, 1, 'green')\n      c4 = codeAngle(D, B, C, 1, '', 'pink', 2, 1, 'pink')\n      c5 = codeAngle(C, D, B, 1, '', 'red', 2, 1, 'red')\n      objets.push(CA, CE, AE, BD, m1, m2, c1, c2, c3, c4, c5, l1)\n      a = Math.round(angle(E, A, C))\n      enonce = `Dans la figure ci-dessous,  les droites $(${noms[0]}${noms[4]})$ et $(${noms[1]}${noms[3]})$ sont parallèles.<br>`\n      enonce += `On veut déterminer la mesure des angles du quadrilatère $${noms[0]}${noms[1]}${noms[3]}${noms[4]}$ (toutes les réponses doivent être justifiées).<br>`\n      enonce += `${numAlpha(0)} Déterminer la mesure de l'angle $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$.<br>`\n      enonce += `${numAlpha(1)} En déduire la mesure de l'angle $\\\\widehat{${noms[0]}${noms[1]}${noms[3]}}$.<br>`\n      enonce += `${numAlpha(2)} En utilisant la question ${numAlpha(0)}, déterminer la mesure de l'angle $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}$.<br>`\n      enonce += `${numAlpha(3)} En déduire la mesure de l'angle $\\\\widehat{${noms[1]}${noms[3]}${noms[4]}}$.<br>`\n      enonce += `${numAlpha(4)} En utilisant la question ${numAlpha(2)} déterminer la mesure de l'angle $\\\\widehat{${noms[3]}${noms[4]}${noms[0]}}$.<br>`\n      enonce += `${numAlpha(5)} Vérifier la conjecture suivante : « La somme des angles d'un quadrilatère vaut 360°.»<br>`\n      correction = `${numAlpha(0)} Comme les droites $(${noms[0]}${noms[4]})$ et $(${noms[1]}${noms[3]})$ sont parallèles, les angles correspondants $\\\\widehat{${noms[4]}${noms[0]}${noms[1]}}$ et $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$ sont égaux, donc $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$ mesure $${a}\\\\degree$.<br>`\n      correction += `${numAlpha(1)} Les angles $\\\\widehat{${noms[0]}${noms[1]}${noms[3]}}$ et $\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}$ sont adjacents supplémentaires, donc $\\\\widehat{${noms[0]}${noms[1]}${noms[3]}}$ mesure $180\\\\degree-${a}\\\\degree=${miseEnEvidence(180 - a, gras)}\\\\degree$.<br>`\n      correction += `${numAlpha(2)} Dans un triangle, la somme des angles vaut $180\\\\degree$ donc $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}=180\\\\degree-\\\\widehat{${noms[3]}${noms[1]}${noms[2]}}-\\\\widehat{${noms[1]}${noms[2]}${noms[3]}}=180\\\\degree-${a}\\\\degree-${c}\\\\degree=${180 - a - c}\\\\degree$.<br>`\n      correction += `${numAlpha(3)} Les angles $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}$ et $\\\\widehat{${noms[1]}${noms[3]}${noms[4]}}$ sont adjacents supplémentaires, donc $\\\\widehat{${noms[1]}${noms[3]}${noms[4]}}$ mesure $180\\\\degree-${180 - a - c}\\\\degree=${miseEnEvidence(a + c, gras)}\\\\degree$.<br>`\n      correction += `${numAlpha(4)} Comme les droites $(${noms[0]}${noms[4]})$ et $(${noms[1]}${noms[3]})$ sont parallèles, les angles correspondants $\\\\widehat{${noms[1]}${noms[3]}${noms[2]}}$ et $\\\\widehat{${noms[3]}${noms[4]}${noms[0]}}$ sont égaux, donc $\\\\widehat{${noms[3]}${noms[4]}${noms[0]}}$ mesure $${miseEnEvidence(180 - a - c, gras)}\\\\degree$.<br>`\n      correction += `${numAlpha(5)} La somme des angles du quadrilatère vaut donc : $${a}\\\\degree+${miseEnEvidence(180 - a, gras)}\\\\degree+${miseEnEvidence(a + c, gras)}\\\\degree+${miseEnEvidence(180 - a - c, gras)}\\\\degree=180\\\\degree+180\\\\degree=360\\\\degree$.<br>`\n      correction += '$\\\\phantom{f}$ La conjecture est finalement vraie.'\n      params = { xmin: Math.min(A.x - 8, C.x - 8, E.x - 8), ymin: Math.min(A.y - 1, E.y - 1, C.y - 1), xmax: Math.max(E.x + 2, A.x + 2, C.x + 2), ymax: Math.max(C.y + 2, A.y + 2, E.y + 2), scale: 0.7 }\n\n      return [objets, params, enonce, correction]\n    }\n    const fig2 = function () {\n      let A; let B; let C; let D; let E; let a; let ac; let ab; let cd; let ad; let d; let AB; let BE; let CA; let CE; let cA; let cD; let cE; let c3; let c4; let c5; let c6; let l1; const objets = []; let enonce; let correction; let params\n      const noms = choisitLettresDifferentes(5, 'Q', true)\n      A = point(0, 0, noms[0], 'above left')\n      B = rotation(point(randint(8, 10), randint(1, 3)), A, randint(-40, 40), noms[1], 'right')\n      ab = longueur(A, B)\n      ac = randint(6, 8)\n      a = randint(40, 60)\n      C = similitude(B, A, a, ac / ab, noms[2], 'above left')\n      CA = droite(C, A)\n      AB = droite(A, B)\n      D = pointSurSegment(A, B, ab / 2 + randint(-1, 1, 0) / 10, noms[3], 'below')\n      CE = droite(C, D)\n      cd = longueur(C, D)\n      ad = longueur(A, D)\n      E = pointSurSegment(C, D, cd * ab / ad, noms[4], 'below right')\n      BE = droite(B, E)\n      d = arrondi(angle(C, D, B), 0)\n      cA = codeAngle(D, A, C, 1, '', 'black', 2, 1, 'black', 0.2, true)\n      cD = codeAngle(C, D, B, 1, '', 'red', 2, 1, 'red', 0.2, true)\n      cE = codeAngle(D, E, B, 1, '', 'blue', 2, 1, 'blue', 0.2, true)\n      c4 = codeAngle(A, C, D, 1, '', 'green', 2, 1, 'green', 0.2)\n      c5 = codeAngle(B, D, E, 1, '', 'orange', 2, 1, 'orange', 0.2)\n      c6 = codeAngle(E, B, D, 1, '', 'pink', 2, 1, 'pink', 0.2)\n      c3 = codeAngle(A, D, C, 1, '', 'gray', 2, 1, 'gray', 0.2)\n      l1 = labelPoint(A, B, C, D, E)\n      objets.push(CA, AB, CE, BE, cA, cD, cE, c3, c4, c5, c6, l1)\n      enonce = 'La figure n\\'est pas en vraie grandeur. Toutes les réponses devront être justifiées.<br>'\n      enonce += `${numAlpha(0)} Déterminer la mesure de l'angle $\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}$.<br>`\n      enonce += `${numAlpha(1)} En déduire la mesure de l'angle $\\\\widehat{${noms[3]}${noms[2]}${noms[0]}}$.<br>`\n      enonce += `${numAlpha(2)} Déterminer si les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ sont parallèles.<br>`\n      enonce += `${numAlpha(3)} Si on considère que les segments $[${noms[0]}${noms[2]}]$ et $[${noms[4]}${noms[1]}]$ sont de même longueur, Déterminer la nature du quadrilatère $${noms[0]}${noms[2]}${noms[1]}${noms[4]}$.<br>`\n      correction = `${numAlpha(0)} Les angles $\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}$ et $\\\\widehat{${noms[2]}${noms[3]}${noms[1]}}$ sont adjacents supplémentaires, donc $\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}$ mesure $180\\\\degree-${d}\\\\degree=${180 - d}\\\\degree$.<br>`\n      correction += `${numAlpha(1)} Dans un triangle, la somme des angles vaut $180\\\\degree$ donc $\\\\widehat{${noms[0]}${noms[2]}${noms[3]}}=180-\\\\widehat{${noms[3]}${noms[0]}${noms[2]}}-\\\\widehat{${noms[0]}${noms[3]}${noms[2]}}=180\\\\degree-${a}\\\\degree-${180 - d}\\\\degree=${-a + d}\\\\degree$.<br>`\n      correction += `${numAlpha(2)} Pour les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ coupées par la sécante $(${noms[2]}${noms[4]})$ les angles $\\\\widehat{${noms[0]}${noms[2]}${noms[3]}}$ et $\\\\widehat{${noms[1]}${noms[4]}${noms[3]}}$ sont des angles alternes-internes.<br>`\n      correction += '$\\\\phantom{c/}$ Or si des angles alternes-internes sont égaux, cela signifie que les droites coupées par la sécante sont parallèles.<br>'\n      correction += `$\\\\phantom{c/}$ Les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ sont donc parallèles.<br>`\n      correction += `${numAlpha(3)} Les droites $(${noms[0]}${noms[2]})$ et $(${noms[4]}${noms[1]})$ sont parallèles et les segments $[${noms[0]}${noms[2]}]$ et $[${noms[4]}${noms[1]}]$ sont de même longueur.<br>`\n      correction += '$\\\\phantom{c/}$ Or, un quadrilatère qui possède des côtés opposés parallèles et de même longueur est un parallèlogramme.<br>'\n      correction += `$\\\\phantom{c/}$ Donc $${noms[0]}${noms[2]}${noms[1]}${noms[4]}$ est un parallèlogramme et $${noms[3]}$ est son centre.`\n      params = { xmin: Math.min(A.x, B.x, C.x, D.x, E.x) - 1, ymin: Math.min(A.y, B.y, C.y, D.y, E.y) - 1, xmax: Math.max(A.x, B.x, C.x, D.x, E.x) + 2, ymax: Math.max(A.y, B.y, C.y, D.y, E.y) + 2 }\n\n      return [objets, params, enonce, correction]\n    }\n    if (this.sup == 3) { choix = randint(1, 2) } else { choix = parseInt(this.sup) }\n    switch (choix) {\n      case 1:\n        figure = fig1()\n        figure[2] += mathalea2d(figure[1], figure[0])\n        break\n      case 2:\n        figure = fig2()\n        figure[2] += mathalea2d(figure[1], figure[0])\n        break\n    }\n    this.listeQuestions.push(figure[2])\n    this.listeCorrections.push(figure[3])\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Numéro de figure', 3, '1 : Le trapèze\\n2: Le papillon\\n3: Au hasard']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Egalite_d_angles","Exercice","this","sup","nbQuestions","context","spacing","spacingCorr","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","choix","figure","randint","parseInt","A","B","C","D","E","a","ac","ce","c","AE","BD","CA","CE","c1","c2","c3","c4","c5","m1","m2","l1","objets","enonce","correction","params","noms","choisitLettresDifferentes","gras","point","similitude","rotation","droite","epaisseur","pointSurSegment","droiteParPointEtParallele","pointIntersectionDD","codeAngle","labelPoint","push","Math","round","angle","numAlpha","miseEnEvidence","xmin","min","x","ymin","y","xmax","max","ymax","scale","fig1","mathalea2d","ab","cd","ad","d","AB","BE","cA","cD","cE","c6","longueur","arrondi","fig2","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}