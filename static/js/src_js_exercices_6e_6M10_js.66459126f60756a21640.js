/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e_6M10_js"],{

/***/ "./src/js/exercices/6e/6M10.js":
/*!*************************************!*\
  !*** ./src/js/exercices/6e/6M10.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Reglages_6M10)\n/* harmony export */ });\n/* harmony import */ var _Exercice_perimetres_et_aires_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_Exercice_perimetres_et_aires.js */ \"./src/js/exercices/6e/_Exercice_perimetres_et_aires.js\");\n\nconst titre = 'Calculer des périmètres et des aires de figures usuelles'\n\n/**\n * @Auteur Rémi Angot\n * Référence 6M10\n */\nfunction Reglages_6M10() {\n  _Exercice_perimetres_et_aires_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this);\n  this.titre = titre;\n  this.sup = 1;\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/6M10.js?");

/***/ }),

/***/ "./src/js/exercices/6e/_Exercice_perimetres_et_aires.js":
/*!**************************************************************!*\
  !*** ./src/js/exercices/6e/_Exercice_perimetres_et_aires.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice_perimetres_et_aires)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\n\n/**\n * Déterminer le périmètre et l'aire d'un carré, d'un rectangle, d'un triangle rectangle, d'un cercle\n *\n * * 1 : Carré, rectangle et triangle rectangle\n * * 2: Uniquement des cercles\n * * 3 : Les 4 sont demandés\n * @Auteur Rémi Angot// modifié par Mireille Gain pour le support des décimaux\n */\nfunction Exercice_perimetres_et_aires(difficulte = 1) {\n  //Calculer le périmètre et l'aire de figures\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.sup = difficulte;\n  this.titre = \"Calculs de périmètres et d'aires\";\n  this.consigne =\n    \"Pour chacune des figures, calculer son périmètre puis son aire (valeur exacte et si nécessaire valeur approchée au dixième près).\";\n  this.spacing = 1;\n  this.nb_questions = 4;\n\n  this.nouvelle_version = function () {\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n\n    let triplets_pythagoriciens = [\n      [3, 4, 5],\n      [6, 8, 10],\n      [15, 8, 17],\n      [24, 10, 26],\n      [5, 12, 13],\n      [12, 16, 20],\n      [21, 20, 29],\n      [9, 40, 41],\n    ];\n    let type_de_questions_disponibles = [\n      \"carre\",\n      \"rectangle\",\n      \"triangle_rectangle\",\n      \"cercle\",\n    ],type_de_questions;\n    let partieDecimale1, partieDecimale2, partieDecimale3;\n    if (this.sup2) {\n      partieDecimale1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 10);\n      partieDecimale2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 10);\n      partieDecimale3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 10 * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1));\n    }\n    else {\n      partieDecimale1 = 0;\n      partieDecimale2 = 0;\n      partieDecimale3 = 0;\n    }\n\n    if (this.sup == 1) {\n      (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.enleve_element)(type_de_questions_disponibles, \"cercle\");\n      this.nb_cols = 1;\n    } else if (this.sup == 2) {\n      type_de_questions_disponibles = [\"cercle\"];\n    }\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(\n      type_de_questions_disponibles,\n      this.nb_questions\n    ); // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n      type_de_questions = liste_type_de_questions[i];\n      switch (type_de_questions) {\n        case \"carre\":\n          let cote = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 11) + partieDecimale1);\n          let nom_carre = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.creerNomDePolygone)(4);\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([true, false])) {\n            // 2 énoncés possibles équiprobables\n            texte = `Un carré $${nom_carre}$ de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(cote)}$ cm de côté .`;\n          } else {\n            texte = `Un carré $${nom_carre}$ tel que $${nom_carre[0] + nom_carre[1]} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(cote)}$ cm.`;\n          }\n\n          texte_corr = `$\\\\mathcal{P}_{${nom_carre}}=4\\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(cote)}~\\\\text{cm}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombrec)(4 * cote)}~\\\\text{cm}$<br>`;\n          texte_corr += `$\\\\mathcal{A}_{${nom_carre}}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(cote)}~\\\\text{cm}\\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(cote)}~\\\\text{cm}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombrec)(cote * cote)}~\\\\text{cm}^2$`;\n          break;\n        case \"rectangle\":\n          let L = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 11) + partieDecimale2);\n          let l = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, L - 1);\n          let nom_rectangle = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.creerNomDePolygone)(4);\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([true, false])) {\n            // 2 énoncés possibles équiprobables\n            texte = `Un rectangle $${nom_rectangle}$ de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(L)}$ cm de longueur et de $${l}$ cm de largeur.`;\n          } else {\n            texte = `Un rectangle $${nom_rectangle}$ tel que $${nom_rectangle[0] + nom_rectangle[1] + \" = \" + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(L)}$ cm et $${nom_rectangle[1] + nom_rectangle[2] + \" = \" + l}$ cm.`;\n          }\n\n          texte_corr = `$\\\\mathcal{P}_{${nom_rectangle}}=(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(L)}~\\\\text{cm}+${l}~\\\\text{cm})\\\\times2=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombrec)((L + l) * 2)}~\\\\text{cm}$<br>`;\n          texte_corr += `$\\\\mathcal{A}_{${nom_rectangle}}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(L)}~\\\\text{cm}\\\\times${l}~\\\\text{cm}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombrec)(L * l)}~\\\\text{cm}^2$`;\n          break;\n        case \"triangle_rectangle\":\n          let triplet = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(triplets_pythagoriciens);\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.enleve_element)(triplets_pythagoriciens, triplet);\n          let a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(triplet[0] * (1 + partieDecimale1));\n          let b = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(triplet[1] * (1 + partieDecimale1));\n          let c = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(triplet[2] * (1 + partieDecimale1));\n          let nom_triangle = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.creerNomDePolygone)(3);\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([true, false])) {\n            texte = `Un triangle $${nom_triangle}$ rectangle en $${nom_triangle[1]}$ tel que $${nom_triangle[0] + nom_triangle[1] + \" = \" + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$ cm, $${nom_triangle[1] + nom_triangle[2] + \" = \" + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(b)}$ cm\\\n et $${nom_triangle[0] + nom_triangle[2] + \" = \" + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c)}$ cm.`;\n          } else {\n            texte = `Un triangle rectangle $${nom_triangle}$ a pour côtés : $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}$ cm, $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c)}$ cm et $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(b)}$ cm.`;\n          }\n\n          texte_corr = `$\\\\mathcal{P}_{${nom_triangle}}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}~\\\\text{cm}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(b)}\n          ~\\\\text{cm}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(c)}~\\\\text{cm}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a + b + c)}~\\\\text{cm}$<br>`;\n          texte_corr += `$\\\\mathcal{A}_{${nom_triangle}}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a)}~\\\\text{cm}\\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(b)}~\\\\text{cm}\\\\div2=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombrec)(a * b / 2)}~\\\\text{cm}^2$`;\n          break;\n        case \"cercle\":\n          let R = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 11);\n          let donne_le_diametre = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([true, false]);\n          if (donne_le_diametre) {\n            texte = `Un cercle de $${2 * R}$ cm de diamètre.`;\n            texte_corr = `Le diamètre est de $${2 * R}$ cm donc le rayon est de $${R}$ cm.<br>`;\n          } else {\n            texte = `Un cercle de $${R}$ cm de rayon.`;\n            texte_corr = \"\";\n          }\n\n          texte_corr += `$\\\\mathcal{P}=2\\\\times${R}\\\\times\\\\pi~\\\\text{cm}=${2 * R}\\\\pi~\\\\text{cm}\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(\n            2 * R * Math.PI,\n            1\n          )}~\\\\text{cm}$<br>`;\n          texte_corr += `$\\\\mathcal{A}=${R}\\\\times${R}\\\\times\\\\pi~\\\\text{cm}^2=${R * R}\\\\pi~\\\\text{cm}^2\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi_virgule)(\n            R * R * Math.PI,\n            1\n          )}~\\\\text{cm}^2$`;\n          break;\n      }\n\n      if (this.liste_questions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  this.besoin_formulaire_numerique = [\n    \"Niveau de difficulté\",\n    3,\n    \"1 : Carré, rectangle et triangle rectangle\\n2: Cercles\\n3: Mélangé\",\n  ];\n  this.besoin_formulaire2_case_a_cocher = [\"Avec des décimaux\", false];\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/_Exercice_perimetres_et_aires.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);