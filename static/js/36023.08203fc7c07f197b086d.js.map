{"version":3,"file":"js/36023.08203fc7c07f197b086d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C10-5.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/c3/c3C10-2.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, texteEnCouleurEtGras } from '../../modules/outils.js'\nimport { mathalea2d, labyrinthe } from '../../modules/2d.js'\nexport const amcReady = true\nexport const amcType = 'AMCOpen' // type de question AMC\nexport const interactifReady = false\nexport const titre = 'Labyrinthe de multiples'\n\n/**\n * @author Jean-Claude Lhote\n * Publié le 6/12/2020\n * Ref : c3C10-2 et 6C10-5\n * Parcourir un labyrinthe de nombres en passant par les multiples du nombre choisi.\n */\n\nexport default function ExerciceLabyrintheMultiples () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.consigne = ''\n  this.niveau = '6e'\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  this.tailleDiaporama = 100\n  this.sup3 = 3\n  this.sup = 9\n  if (this.niveau === 'CM') {\n    this.sup2 = 10\n    this.sup3 = 3\n  } else {\n    this.sup2 = 13\n    this.sup3 = 4\n  }\n  this.nouvelleVersion = function () {\n    this.listeCorrections = []\n    this.listeQuestions = []\n\n    let texte, texteCorr, trouve\n    const laby = labyrinthe()\n    laby.niveau = parseInt(this.sup3) // Le niveau (de 1 à 6=mélange) définit le nombre d'étapes\n    laby.chemin = laby.choisitChemin(laby.niveau) // On choisi un chemin\n    laby.murs2d = laby.construitMurs(laby.chemin) // On construit le labyrinthe\n    laby.chemin2d = laby.traceChemin(laby.chemin) // On trace le chemin solution\n    const monchemin = laby.chemin\n    const table = parseInt(this.sup)\n    const maximum = parseInt(this.sup2)\n    //   this.consigne=`Trouve la sortie en ne passant que par les cases contenant un multiple de $${table}$.`\n    texte = `${texteEnCouleurEtGras('Trouve la sortie en ne passant que par les cases contenant un multiple de ', 'black')}$${table}$.<br>`\n    texteCorr = `${texteEnCouleurEtGras(`Voici le chemin en marron et la sortie était la numéro $${2 - monchemin[monchemin.length - 1][1] + 1}$.`, 'black')}<br>`\n    // Zone de construction du tableau de nombres : Si ils sont sur monchemin et seulement si, ils doivent vérifier la consigne\n    let listeMultiples = []; let index = 0\n    for (let i = 2; i <= maximum; i++) {\n      listeMultiples.push(table * i)\n    }\n    listeMultiples = combinaisonListes(listeMultiples, 12)\n    for (let a = 1; a < 7; a++) {\n      laby.nombres.push([0, 0, 0])\n    }\n    for (let a = 1; a < 7; a++) {\n      for (let b = 0; b < 3; b++) {\n        trouve = false\n        for (let k = 0; k < monchemin.length; k++) {\n          if (monchemin[k][0] === a && monchemin[k][1] === b) trouve = true\n        }\n        if (!trouve) {\n          laby.nombres[a - 1][b] = randint(2, maximum) * table + randint(1, table - 1)\n        } else {\n          laby.nombres[a - 1][b] = listeMultiples[index]\n          index++\n        }\n      }\n    } // Le tableau de nombre étant fait, on place les objets nombres.\n    laby.nombres2d = laby.placeNombres(laby.nombres, 1.5)\n    const params = { xmin: -4, ymin: 0, xmax: 22, ymax: 11, pixelsParCm: 20, scale: 0.7 }\n    texte += mathalea2d(params, laby.murs2d, laby.nombres2d)\n    texteCorr += mathalea2d(params, laby.murs2d, laby.nombres2d, laby.chemin2d)\n\n    /** ********************** AMC Open *****************************/\n    this.autoCorrection = [{ enonce: texte, propositions: [{ texte: texteCorr, statut: 3, feedback: '' }] }]\n    /****************************************************/\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Table ']\n  this.besoinFormulaire2Numerique = ['Facteur maximum ']\n  this.besoinFormulaire3Numerique = ['Niveau de rapidité', 6, '1 : Guépard\\n 2 : Antilope\\n 3 : Lièvre\\n 4 : Tortue\\n 5 : Escargot\\n 6 : Au hasard']\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import ExerciceLabyrintheMultiples from '../6e/6C10-5.js'\nexport const titre = 'Labyrinthe de multiples'\n\n/**\n * Lire des nombres déciamux sur une portion de droite graduée\n * Une question demande la forme décimale, une autre, la partie entière plus la fraction décimale, et une troisième demande une seule fraction décimale.\n * ref 6N23-2\n *\n * @author Jean-Claude Lhote\n */\nexport default function LabyrintheDeMultiplesCM () {\n  ExerciceLabyrintheMultiples.call(this)\n  this.niveau = 'CM'\n  this.sup = 5\n  this.sup2 = 10\n  this.sup3 = 3\n}\n"],"names":["amcReady","amcType","interactifReady","titre","ExerciceLabyrintheMultiples","Exercice","this","consigne","niveau","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","tailleDiaporama","sup3","sup","sup2","nouvelleVersion","texte","texteCorr","trouve","listeCorrections","listeQuestions","laby","labyrinthe","parseInt","chemin","choisitChemin","murs2d","construitMurs","chemin2d","traceChemin","monchemin","table","maximum","texteEnCouleurEtGras","length","listeMultiples","index","i","push","combinaisonListes","a","nombres","b","k","randint","nombres2d","placeNombres","params","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","autoCorrection","enonce","propositions","statut","feedback","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","besoinFormulaire3Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf","LabyrintheDeMultiplesCM"],"sourceRoot":""}