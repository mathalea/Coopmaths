{"version":3,"file":"js/95365.70c446895c612ecc168c.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5N20.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { calcul, listeQuestionsToContenu, randint, choice, combinaisonListes, abs, pgcd, miseEnEvidence, texFraction, texFractionReduite } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, propositionsQcm, setReponse } from '../../modules/gestionInteractif.js'\nimport Fraction from '../../modules/Fraction.js'\n\nexport const amcReady = true\nexport const amcType = 'qcmMono' // QCM\nexport const interactifReady = true\nexport const interactifType = 'mathLive' // Le QCM est prêt mais pas géré\n\nexport const titre = 'Additionner ou soustraire deux fractions (dénominateurs multiples)'\n\n/**\n* Effectuer l'addition ou la soustraction de deux fractions dont un dénominateur est un multiple de l'autre.\n*\n* Le résultat de la soustraction sera toujours positif.\n*\n* Le coefficient est paramétrable, par défaut il est inférieur à 11.\n*\n* On peut paramétrer de n'avoir que des soustractions.\n* @author Rémi Angot\n* 5N20\n*/\nexport default function ExerciceAdditionnerSoustraireFractions5e (max = 11) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.sup = max // Correspond au facteur commun\n  this.sup2 = false // Si true alors il n'y aura que des soustractions\n  this.titre = titre\n  this.consigne = \"Calculer et donner le résultat sous la forme d'une fraction simplifiée\"\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.sup2 = 3\n  /** ************ modeQcm disponible dans Mathalea ***********************/\n  this.qcmDisponible = true\n  this.modeQcm = false\n  /***********************************************************************/\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.qcm = ['5N20', [], 'Additionner ou soustraire deux fractions (dénominateurs multiples)', 1]\n    if (this.level === 6) this.qcm[0] = '6C23'\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    if (parseInt(this.sup2) === 1) {\n      listeTypeDeQuestions = combinaisonListes(['+'], this.nbQuestions)\n    }\n    if (parseInt(this.sup2) === 2) {\n      listeTypeDeQuestions = combinaisonListes(['-'], this.nbQuestions)\n    }\n    if (parseInt(this.sup2) === 3) {\n      listeTypeDeQuestions = combinaisonListes(['+', '-'], this.nbQuestions)\n    }\n    for (let i = 0, a, b, c, d, k, texte, texteCorr; i < this.nbQuestions; i++) {\n      this.autoCorrection[i] = {}\n      texte = ''\n      texteCorr = ''\n      // les numérateurs\n      a = randint(1, 9)\n      // les dénominateurs\n      b = randint(2, 9, a)\n      while (b === a) {\n        b = randint(2, 9) // pas de fraction avec numérateur et dénominateur égaux\n      }\n      if (this.sup > 1) {\n        k = randint(2, this.sup)\n      } else k = 1\n      d = b * k\n      if (listeTypeDeQuestions[i] === '-') {\n        c = choice([randint(1, b * k), randint(b * k, 9 * k)])\n      } else {\n        c = randint(1, 19, d)\n      }\n      if (listeTypeDeQuestions[i] === '+') { // une addition\n        /** ***************** Choix des réponses du QCM ***********************************/\n        this.autoCorrection[i].propositions = [\n          {\n            texte: `$${texFractionReduite(a * d + c * b, b * d)}$`,\n            statut: true\n          },\n          {\n            texte: `$${texFraction(a + c, b + d)}$`,\n            statut: false\n          },\n          {\n            texte: `$${texFraction(a + c, b * d)}$`,\n            statut: false\n          },\n          {\n            texte: `$${texFraction(a * c, b * d)}$`,\n            statut: false\n          }\n        ]\n        this.autoCorrection[i].options = {\n          ordered: false,\n          lastChoice: 5\n        }\n        if (this.level === 6) {\n          // En 6e, pas de fraction simplifiée\n          // Les fractions ont le même dénominateur (b=d)\n          this.autoCorrection[i].propositions[0].texte = `$${texFraction(a + c, b)}$`\n        }\n        /*************************************************************************/\n        const ordreDesFractions = randint(1, 2)\n        if (ordreDesFractions === 1) {\n          texte = `$${texFraction(a, b)}+${texFraction(c, d)}=$`\n          /** ****************** AMC question/questionmult ********************************/\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          /*******************************************************************************/\n        } else {\n          texte = `$${texFraction(c, d)}+${texFraction(a, b)}=$`\n          /** ****************** AMC question/questionmult ******************************/\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          /*******************************************************************************/\n        }\n\n        if (ordreDesFractions === 1) {\n          texteCorr = `$${texFraction(a, b)}+${texFraction(c, d)}=`\n\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}+${texFraction(c, d)}=${texFraction(a * k, b * k)}+${texFraction(c, d)}=`\n          }\n          texteCorr += `${texFraction(a * k + '+' + c, d)}=${texFraction(a * k + c, d)}$`\n        } else {\n          texteCorr = `$${texFraction(c, d)}+${texFraction(a, b)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(c, d)}+${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}=${texFraction(c, d)}+${texFraction(a * k, b * k)}=`\n          }\n          texteCorr += `${texFraction(c + '+' + a * k, d)}=${texFraction(a * k + c, d)}$`\n        }\n        // Est-ce que le résultat est simplifiable ?\n        const s = pgcd(a * k + c, d)\n        if (s !== 1) {\n          texteCorr += `$=${texFraction(calcul((a * k + c) / s) + miseEnEvidence('\\\\times ' + s), calcul(d / s) + miseEnEvidence('\\\\times ' + s))}=${texFractionReduite(calcul((a * k + c) / s), calcul(d / s))}$`\n        }\n        if ((this.modeQcm && !context.isAmc) || (this.interactif && this.interactifType === 'qcm')) {\n          texte += '<br>' + propositionsQcm(this, i).texte\n        }\n        if (context.isHtml && this.interactifType === 'mathLive') {\n          setReponse(this, i, new Fraction(a * d + c * b, b * d), { formatInteractif: 'fractionEgale' })\n        }\n      } else { // une soustraction\n        /** ***************** Choix des réponses du QCM ***********************************/\n        this.autoCorrection[i].propositions = [\n          {\n            texte: `$${texFractionReduite(Math.abs(a * d - c * b), Math.abs(b * d))}$`,\n            statut: true\n          },\n          {\n            texte: `$${texFraction(Math.abs(a - c), Math.abs(b - d))}$`,\n            statut: false\n          },\n          {\n            texte: `$${texFraction(Math.abs(a - c), b * d)}$`,\n            statut: false\n          },\n          {\n            texte: `$${texFraction(a * c, b * d)}$`,\n            statut: false\n          }\n        ]\n        this.autoCorrection[i].options = {\n          ordered: false,\n          lastChoice: 5\n        }\n        if (this.level === 6) {\n          // En 6e, pas de fraction simplifiée\n          // Les fractions ont le même dénominateur (b=d)\n          this.autoCorrection[i].propositions[0].texte = `$${texFraction(Math.abs(a - c), b)}$`\n        }\n        /*********************************************************************************/\n        if ((a / b) > (c / d)) {\n          texte = `$${texFraction(a, b)}-${texFraction(c, d)}=$`\n        } else {\n          texte = `$${texFraction(c, d)}-${texFraction(a, b)}=$`\n          /** ****************** AMC question/questionmult ******************************/\n\n          /*****************************************************************************/\n        }\n        if ((a / b) > (c / d)) {\n          texteCorr = `$${texFraction(a, b)}-${texFraction(c, d)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}-${texFraction(c, d)}=${texFraction(a * k, b * k)}-${texFraction(c, d)}=`\n          }\n          texteCorr += `${texFraction(a * k + '-' + c, d)}=${texFraction(a * k - c, d)}$`\n        } else {\n          texteCorr = `$${texFraction(c, d)}-${texFraction(a, b)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(c, d)}-${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}=${texFraction(c, d)}-${texFraction(a * k, b * k)}=${texFraction(c + '-' + a * k, d)}=`\n          }\n          texteCorr += `${texFraction(c - a * k, d)}$`\n        }\n        // Est-ce que le résultat est simplifiable ?\n        const s = pgcd(a * k - c, d)\n        if (!this.modeQcm) {\n          if (abs(a * k - c) % d === 0) { // si la fraction peut-être un nombre entier\n            texteCorr += `$=${calcul((abs(a * k - c)) / d)}$`\n          } else if (s !== 1) {\n            texteCorr += `$=${texFraction(calcul((abs(a * k - c)) / s) + miseEnEvidence('\\\\times ' + s), calcul(d / s) + miseEnEvidence('\\\\times ' + s))}=${texFractionReduite(calcul((abs(a * k - c)) / s), calcul(d / s))}$`\n          }\n        }\n        if ((this.modeQcm && !context.isAmc) || (this.interactif && this.interactifType === 'qcm')) {\n          texte += '<br>' + propositionsQcm(this, i).texte\n        }\n        if (context.isHtml && this.interactifType === 'mathLive') {\n          setReponse(this, i, new Fraction(Math.abs(a * d - c * b), b * d), { formatInteractif: 'fractionEgale' })\n        }\n      }\n      if (context.isHtml && this.interactifType === 'mathLive') texte += ajouteChampTexteMathLive(this, i)\n      texte = texte.replaceAll('$$', ' ')\n      texteCorr = texteCorr.replaceAll('$$', ' ')\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n\n  this.besoinFormulaireNumerique = ['Valeur maximale du coefficient multiplicateur', 99999]\n  this.besoinFormulaire2Numerique = ['Types de calculs ', 3, '1 : Additions\\n2 : Soustractions\\n3 : Additions et soustractions']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","ExerciceAdditionnerSoustraireFractions5e","max","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","qcmDisponible","modeQcm","nouvelleVersion","listeTypeDeQuestions","parseInt","qcm","level","listeQuestions","listeCorrections","combinaisonListes","a","b","c","d","k","texte","texteCorr","i","autoCorrection","randint","choice","propositions","texFractionReduite","statut","texFraction","options","ordered","lastChoice","ordreDesFractions","enonce","miseEnEvidence","s","pgcd","calcul","context","interactif","propositionsQcm","setReponse","Fraction","formatInteractif","Math","abs","ajouteChampTexteMathLive","replaceAll","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}