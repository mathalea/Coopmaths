{"version":3,"file":"js/88637.2632c7e2cd4ff5ac7f5c.js","mappings":"2LAGO,MAAMA,EAAQ,oDAQN,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,SAAW,GAChBD,KAAKE,YAAc,EACnBF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKK,IAAM,EACXL,KAAKM,MAAO,EACZN,KAAKO,QAAU,EAEfP,KAAKQ,gBAAkB,WACrB,IAAIC,EACAC,EAAMC,EAAMC,EAAMC,EAClBC,EACcA,EAAdd,KAAKK,IAAM,EAAiC,CAACU,SAASf,KAAKK,MAC5B,CAAC,EAAG,EAAG,GAC1C,MAAMW,GAAuBC,EAAAA,EAAAA,KAC3BH,EACAd,KAAKE,aAEPF,KAAKkB,eAAiB,GACtBlB,KAAKmB,iBAAmB,GACTV,EAAXT,KAAKM,KAAgB,KAAMc,EAAAA,EAAAA,KAAQ,EAAG,GAC3B,EAEf,IACE,IAAWC,EAAOC,EAAdC,EAAI,EAAqBC,EAAM,EACnCD,EAAIvB,KAAKE,aAAesB,EAAM,IAE9B,CAOA,OANAX,GAAYY,EAAAA,EAAAA,SAA2B,EAAGhB,GAC1CC,EAAOG,EAAU,GACjBF,EAAOE,EAAU,GACjBD,EAAOC,EAAU,GACjBQ,EAAQ,GACRC,EAAY,GACJN,EAAqBO,IAC3B,KAAK,EACHF,IACEK,EAAAA,EAAAA,KAASH,GACT,mFACFb,EAAO,IAAMA,EAAKiB,UAAU,GAC5BN,GAAU,GAAEX,KACZY,IAAaI,EAAAA,EAAAA,KAASH,GAAM,GAAEb,aAAgBC,KAC9C,MACF,KAAK,EACCA,EAAKiB,QAAQ,MAAQ,IAAKjB,EAAOA,EAAKgB,UAAU,EAAGhB,EAAKiB,QAAQ,QACpEP,IACEK,EAAAA,EAAAA,KAASH,GAAK,mDAChBF,GAAU,GAAEV,IACZD,EAAO,IAAMA,EAAKiB,UAAU,GAC5BL,IAAaI,EAAAA,EAAAA,KAASH,GAAM,GAAEZ,SAAYD,KAC1C,MACF,KAAK,EACHW,IACEK,EAAAA,EAAAA,KAASH,GACT,6DACFb,EAAO,IAAMA,EAAKiB,UAAU,GAC5BN,GAAU,GAAEX,KACZA,EAAO,IAAMA,EAAKiB,UAAU,GAC5BL,IAAaI,EAAAA,EAAAA,KAASH,GAAM,GAAEb,aAAgBC,SAC9CW,GAAc,GAAEV,MAGwB,IAAxCZ,KAAKkB,eAAeU,QAAQP,KAE9BrB,KAAKkB,eAAeW,KAAKR,GACzBrB,KAAKmB,iBAAiBU,KAAKP,GAC3BC,KAEFC,KAEFM,EAAAA,EAAAA,KAAkC9B,OAEpCA,KAAK+B,0BAA4B,CAC/B,oBACA,EACA,+FAEF/B,KAAKgC,6BAA+B,CAAC,YAAY,K,gBCrFpC,SAASjC,IAItBC,KAAKH,MAAQ,GACbG,KAAKiC,YAAa,EAclBjC,KAAKC,SAAW,GAChBD,KAAKkC,mBAAqB,GAC1BlC,KAAKmC,aAAe,GACpBnC,KAAKkB,eAAiB,GACtBlB,KAAKmB,iBAAmB,GACxBnB,KAAKoC,QAAU,GACfpC,KAAKqC,kBAAoB,GACzBrC,KAAKsC,eAAiB,GACtBtC,KAAKuC,sBAAwB,GAK7BvC,KAAKO,QAAU,EACfP,KAAKwC,YAAc,EAKnBxC,KAAKyC,mBAAoB,EACzBzC,KAAK0C,cAAgB,GACrB1C,KAAK2C,oBAAqB,EAC1B3C,KAAK4C,uBAAwB,EAC7B5C,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAK6C,kBAAmB,EACxB7C,KAAK8C,sBAAuB,EAC5B9C,KAAK+C,mBAAoB,EACzB/C,KAAKgD,uBAAwB,EAM7BhD,KAAKiD,QAAS,EACdjD,KAAKkD,gBAAkB,GAKvBlD,KAAKE,YAAc,GACnBF,KAAKmD,+BAAgC,EACrCnD,KAAKoD,qBAAsB,EAC3BpD,KAAKqD,MAAQ,GAEbrD,KAAKsD,YAAa,EAClBtD,KAAKuD,uBAAwB,EAE7BvD,KAAK+B,2BAA4B,EACjC/B,KAAKwD,uBAAwB,EAC7BxD,KAAKyD,6BAA8B,EAEnCzD,KAAK0D,4BAA6B,EAClC1D,KAAK2D,wBAAyB,EAC9B3D,KAAKgC,8BAA+B,EAEpChC,KAAK4D,4BAA6B,EAClC5D,KAAK6D,wBAAyB,EAC9B7D,KAAK8D,8BAA+B,EAMpC9D,KAAK+D,cAAe,EAMpB/D,KAAKgE,eAAiB,GAEtBhE,KAAKQ,gBAAkB,SAAUyD,KAQjCjE,KAAKkE,oBAAsB,SAAU3C,KAAM4C,GAC/B,IAAN5C,IAASvB,KAAKgE,eAAiB,IACnC,IAAII,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIvE,KAAKgE,eAAepC,QAAQwC,IAAmB,KAGjDpE,KAAKgE,eAAenC,KAAKuC,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/6e/6C13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenuSansNumero, randint, combinaisonListes, numAlpha } from '../../modules/outils.js'\nimport choisirExpressionNumerique from '../5e/_choisirExpressionNumerique.js'\nexport const titre = 'Traduire des phrases en calculs et réciproquement'\n\n/**\n * Mettre en relation un calcul, une traduction en français, une expression, un résultat, pour les décliner dans différents exercices.\n * Exercice sur le vocabulaire : somme,différence, produit, quotient...\n * @author Jean-Claude Lhote\n * Référence 6C13\n */\nexport default function VocabulaireEtOperations () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 4\n  this.sup2 = false\n  this.spacing = 2\n\n  this.nouvelleVersion = function () {\n    let decimal\n    let expf, expn, expc, resultats\n    let typesDeQuestionsDisponibles\n    if (this.sup < 4) typesDeQuestionsDisponibles = [parseInt(this.sup)]\n    else typesDeQuestionsDisponibles = [1, 2, 3]\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    )\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (this.sup2) decimal = 10 ** randint(1, 2)\n    else decimal = 1\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      resultats = choisirExpressionNumerique(1, decimal)\n      expf = resultats[0]\n      expn = resultats[1]\n      expc = resultats[2]\n      texte = ''\n      texteCorr = ''\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte +=\n            numAlpha(i) +\n            'Traduire la phrase par un calcul (il n’est pas demandé d’effectuer ce calcul) : '\n          expf = 'l' + expf.substring(1)\n          texte += `${expf}.`\n          texteCorr += numAlpha(i) + `${expf} s'écrit ${expn}.`\n          break\n        case 2:\n          if (expn.indexOf('ou') > 0) { expn = expn.substring(0, expn.indexOf('ou')) } // on supprime la deuxième expression fractionnaire\n          texte +=\n            numAlpha(i) + 'Traduire le calcul par une phrase en français : '\n          texte += `${expn}`\n          expf = 'l' + expf.substring(1)\n          texteCorr += numAlpha(i) + `${expn} est ${expf}.`\n          break\n        case 3:\n          texte +=\n            numAlpha(i) +\n            'Traduire la phrase par un calcul et effectuer ce calcul : '\n          expf = 'l' + expf.substring(1)\n          texte += `${expf}.`\n          expf = 'L' + expf.substring(1)\n          texteCorr += numAlpha(i) + `${expf} s'écrit ${expn}.<br>`\n          texteCorr += `${expc}.`\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Type de questions',\n    4,\n    '1 : Phrase -> Calcul\\n 2 : Calcul -> Phrase\\n 3 : Phrase -> Calcul + résultat\\n 4 : Mélange'\n  ]\n  this.besoinFormulaire2CaseACocher = ['Décimaux', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","VocabulaireEtOperations","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","sup2","spacing","nouvelleVersion","decimal","expf","expn","expc","resultats","typesDeQuestionsDisponibles","parseInt","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","randint","texte","texteCorr","i","cpt","choisirExpressionNumerique","numAlpha","substring","indexOf","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}