/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_3e_3G32-3_js"],{

/***/ "./src/js/exercices/3e/3G32-3.js":
/*!***************************************!*\
  !*** ./src/js/exercices/3e/3G32-3.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Calculs_trigonometriques3)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\nconst titre = 'Calculer la hauteur d’une falaise'\n\n/**\n * Propose de calculer la hauteur d'une falaise en utilisant les angles de vue depuis deux positions d'un bateau sans s'en approcher.\n * @Auteur Jean-Claude Lhote\n * Référence 3G32-3\n*/\nfunction Calculs_trigonometriques3() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nb_cols = 1; // Uniquement pour la sortie LaTeX\n  this.nb_cols_corr = 1; // Uniquement pour la sortie LaTeX\n  this.sup = true; // Niveau de difficulté à ne définir que si on peut le modifier avec un formulaire en paramètre\n  this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = \"\" // Id YouTube ou url\n  this.nb_questions = 1\n  this.spacing_corr=2\n  this.spacing=2\n\n  this.nouvelle_version = function () {\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n    let distance, alfa,baita, beta, alpha, taille, A, B, H, S, objets = [], p\n    if (sortie_html) {\n      alfa='α'\n      baita='β'\n    }\n    else {\n      alfa='\\\\alpha'\n      baita='\\\\beta'\n    }\n\n    for (let i = 0, texte, texte_corr,cpt = 0; i < this.nb_questions && cpt < 50;) {\n        objets=[]\n          alpha = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(25, 45)\n          beta = Math.tan(alpha * Math.PI / 180) * Math.tan((alpha + 1) * Math.PI / 180) / (Math.tan((alpha + 1) * Math.PI / 180) - Math.tan(alpha * Math.PI / 180))\n          distance = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(5, 10)\n          taille = beta * distance\n          A = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0, 'A')\n          B = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(A, 5, 0, 'B')\n          H = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(A, 12, 0, 'H')\n          S = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointAdistance)(H, 7, 90, 'S')\n          p = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(A, B, H, S)\n          objets.push(p[1], p[0], (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(S, B), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A, H, S))\n          objets.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(H, A, S, 'black', 2, `${alfa}`), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.afficheMesureAngle)(H, B, S, 'black', 2, `${baita}`))\n          objets.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteSurSegment)(`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(distance)} m`, A, B, 'black', -0.5), (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)(`h`, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.milieu)(H, S).x + 0.5, (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.milieu)(H, S).y, 0, 'black', 2, \"middle\", true))\n\n          texte = `Un observateur sur un bateau s'approche d'une falaise dont il veut mesurer la hauteur.<br>`;\n          texte += `Il jette l'ancre puis constate qu'il voit la falaise sous un angle de $${alpha}\\\\degree$.<br>`\n          texte += `Il se rapproche ensuite de la falaise jusqu'à la voir sous un angle de $${alpha + 5}\\\\degree$.<br>`\n          texte += `Il constate qu'entre ses deux mesures, il s'est rapproché de la falaise de $${distance}$ m.<br>`\n          if (this.sup) {\n            texte += `Le schéma ci-dessous n'est pas en vraie grandeur.<br>` + (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: -1, ymin: -1, xmax: 14, ymax: 8, pixelsParCm: 20, scale: 0.5 }, objets);\n            texte += `<br>Exprimer $h$ en fonction de $BH$ et $${alfa}$ puis en fonction de $AH$ et $${baita}$.<br>`\n            texte += `En déduire $BH$ en fonction de $AB$, $${alfa}$ et $${baita}$.<br>`\n            texte += `Exprimer $HS$ en fonction de $AB$, $${alfa}$ et $${baita}$.<br>`\n          }\n          texte += `Quelle est la hauteur de la falaise ?<br>`\n          texte += `A quelle distance du pied de la falaise se trouve l'observateur lors du deuxième relevé ?<br>`\n          texte += `Arrondir les résultats au mètre près. (On supposera le point d'observation au niveau de l'eau)`\n          texte_corr = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: -1, ymin: -1, xmax: 14, ymax: 8, pixelsParCm: 20, scale: 0.5 }, objets)\n          texte_corr += `<br>Dans le triangle $BHS$ rectangle en $H$, $\\\\tan(${baita})=\\\\dfrac{h}{BH}$.<br>D'où $h=BH\\\\times \\\\tan(${baita})$.<br>`\n          texte_corr += `<br>Dans le triangle $AHS$ rectangle en $H$, $\\\\tan(${alfa})=\\\\dfrac{h}{AH}$.<br>D'où $h=AH\\\\times \\\\tan(${alfa})$.<br>`\n          texte_corr += `Or $AH=AB+BH$ donc $h=(AB+BH)\\\\times \\\\tan(${alfa})$.<br>`\n          texte_corr += `On en déduit que $BH\\\\times \\\\tan(${baita})=(AB+BH)\\\\times \\\\tan(${alfa})$ soit $BH\\\\times \\\\tan(${baita})=AB\\\\times \\\\tan(${alfa})+BH\\\\times \\\\tan(${alfa})$.<br>`\n          texte_corr += `D'où $AB\\\\times \\\\tan(${alfa})=BH\\\\times \\\\tan(${baita})-BH\\\\times \\\\tan(${alfa})=BH\\\\times (\\\\tan(${baita})-\\\\tan(${alfa}))$.<br>`\n          texte_corr += `Et $BH=\\\\dfrac{AB\\\\times \\\\tan(${alfa})}{\\\\tan(${baita})-\\\\tan(${alfa})}$.<br>`\n          texte_corr += `Ainsi $h=BH\\\\times \\\\tan(${baita})=\\\\dfrac{AB\\\\times \\\\tan(${alfa})\\\\times \\\\tan(${baita})}{\\\\tan(${baita})-\\\\tan(${alfa})}$.<br>`\n          texte_corr += `Application numérique : <br>`\n          texte_corr += `$h=\\\\dfrac{${distance}\\\\times \\\\tan(${alpha})\\\\times \\\\tan(${alpha + 5})}{\\\\tan(${alpha + 5})-\\\\tan(${alpha})}\\\\approx ${Math.round(taille)}$ m.<br>`\n          texte_corr += `$BH=\\\\dfrac{${distance}\\\\times \\\\tan(${alpha})}{\\\\tan(${alpha + 5})-\\\\tan(${alpha})}\\\\approx ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombrec)(Math.round(taille / Math.tan((alpha + 5) * Math.PI / 180)))}$ m.<br>`\n          texte_corr += `La hauteur de la falaise est de $${Math.round(taille)}$ m et l'observateur se trouve à $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombrec)(Math.round(taille / Math.tan((alpha + 5) * Math.PI / 180)))}$ m de celle-ci lors du deuxième relevé.<br>`;\n      if (this.liste_questions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  this.besoin_formulaire_case_a_cocher = ['Afficher un schéma et des questions intermédiaires'];\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/3e/3G32-3.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);