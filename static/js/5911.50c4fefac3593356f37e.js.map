{"version":3,"file":"js/5911.50c4fefac3593356f37e.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6P10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, range, combinaisonListes, arrondi, calcul, texNombrec, prenomF, prenomM, texNombre, miseEnEvidence, texPrix, compteOccurences, contraindreValeur } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nimport { getVueFromUrl } from '../../modules/gestionUrl.js'\nexport const titre = 'Reconnaître une situation de proportionnalité'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\nexport const amcReady = true\nexport const amcType = 'qcmMono'\n\n/**\n * Exercice sur la notion de proportionnalité (ou pas)\n * @author Jean-Claude Lhote\n * référence 6P10\n */\nexport default function ProportionnalitePasProportionnalite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  context.isHtml ? this.spacing = 2 : this.spacing = 1.4\n  context.isHtml ? this.spacingCorr = 1.5 : this.spacingCorr = 1\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.nbCols = 1\n  this.nbColsModifiable = false\n  this.nbColsCorrModifiable = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let bonneReponse\n\n    this.nbQuestions > 1 ? this.consigne = 'Répondre aux questions posées en justifiant.' : this.consigne = 'Répondre à la question posée en justifiant.'\n    const listeIndexDisponibles = [0, 1, 2, 3, 4]\n    const listeIndex = combinaisonListes(\n      listeIndexDisponibles,\n      this.nbQuestions\n    )\n    let listeChoixDisponibles = []\n    if (!this.sup || this.sup === 'NaN') { // Si aucune liste n'est saisie\n      listeChoixDisponibles = [1, 2, 3, 4, 5]\n    } else {\n      if (typeof (this.sup) === 'number') { // Si c'est un nombre c'est qu'il y a qu'une expression\n        listeChoixDisponibles[0] = this.sup\n      } else {\n        listeChoixDisponibles = this.sup.split('-')// Sinon on créé un tableau à partir des valeurs séparées par des -\n        for (let i = 0; i < listeChoixDisponibles.length; i++) { // on a un tableau avec des strings : ['1', '1', '2']\n          listeChoixDisponibles[i] = contraindreValeur(1, 5, parseInt(listeChoixDisponibles[i]), 1)\n        }\n      }\n    }\n\n    const listeChoix = combinaisonListes(\n      listeChoixDisponibles,\n      this.nbQuestions\n    )\n    const nombre = compteOccurences(listeChoix, '1') + compteOccurences(listeChoix, '5')\n    const listeProportionnelOuPas = combinaisonListes(\n      [true, false],\n      nombre\n    )\n    const listeDeLieux = [\n      'dans un magasin de bricolage',\n      'dans une animalerie',\n      'au supermarché local',\n      \"à l'épicerie\",\n      'dans la boutique du musée'\n    ]\n    const listeDeChoses = [[]]\n    const listeDePrixUnit = [[]]\n    const tirages = [[]]\n    let index3 = []\n    const villes = ['Moscou', 'Berlin', 'Paris', 'Bruxelles', 'Rome', 'Belgrade']\n    const verbes = [\n      'double',\n      'triple',\n      'quadruple',\n      'est multiplié par 5',\n      'est multiplié par 6'\n    ]\n    listeDeChoses[0] = [\n      'articles',\n      'outils',\n      'accessoires',\n      \"pièces d'outillage\",\n      'pinceaux',\n      'ampoules',\n      'tournevis',\n      'spatules',\n      'raccords de tuyaux'\n    ]\n    listeDeChoses[1] = [\n      'poissons rouges',\n      'canetons',\n      'perruches',\n      'phasmes',\n      'colliers anti-puces',\n      'souris',\n      'lapereaux',\n      'paquets de graines'\n    ]\n    listeDeChoses[2] = [\n      'sets de tables',\n      'verres',\n      'assiettes',\n      'os à macher',\n      'dosettes de café',\n      'packs de lait',\n      'paquets de pâtes'\n    ]\n    listeDeChoses[3] = [\n      'mangues',\n      'ananas',\n      'fruits de la passion',\n      'melons',\n      'paquets de madeleines de Commercy',\n      'bergamottes',\n      'bredeles',\n      'pots de cancoillotte'\n    ]\n    listeDeChoses[4] = [\n      'cartes',\n      'livres',\n      'gravures',\n      'puzzles',\n      'maquettes',\n      'roches',\n      'jeux de société'\n    ]\n    listeDePrixUnit[0] = [5, 4, 1.25, 3, 0.5, 1.5, 2, 6, 4.5]\n    listeDePrixUnit[1] = [1.5, 7, 20, 2.5, 25, 2, 15, 8]\n    listeDePrixUnit[2] = [1.25, 1.5, 2, 0.5, 5, 4.5, 3]\n    listeDePrixUnit[3] = [2, 2.5, 1.25, 1.5, 4, 7, 12, 3]\n    listeDePrixUnit[4] = [0.5, 5, 7, 13.5, 10, 15, 20]\n\n    for (\n      let i = 0,\n        x,\n        y,\n        z,\n        pu,\n        n,\n        p,\n        somme,\n        prenoms,\n        index1,\n        index2,\n        objet,\n        met,\n        compteurProportionnelsOuPas = 0,\n        texte,\n        texteCorr,\n        cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (parseInt(listeChoix[i])) {\n        case 1: // Achat\n          if (listeProportionnelOuPas[compteurProportionnelsOuPas]) {\n            index1 = listeIndex[i]\n            prenoms = [prenomF(), prenomM()]\n            index2 = randint(0, listeDeChoses[index1].length - 1)\n            objet = listeDeChoses[index1][index2]\n            pu =\n            listeDePrixUnit[index1][index2] *\n            (1 + randint(1, 2) * 0.2 * randint(-1, 1))\n            y = randint(2, 5)\n            somme = calcul(y * pu, 2)\n            p = y * randint(2, 5)\n            z = calcul(p * pu, 2)\n            texte = `${prenoms[0]} achète ${listeDeLieux[index1]} des ${objet}.<br>`\n            // texte += parseInt('p')\n            texte += `Elle  repart avec ${y} ${objet} pour $${texPrix(somme)}$€.<br> ${prenoms[1]} achète quant à lui, au même endroit ${p} ${objet} pour $${texPrix(z)}$€.<br>`\n            texte += `Le prix des ${objet} est-il proportionnel à la quantité achetée  ?<br>`\n            texteCorr = `${prenoms[0]} dépense $${miseEnEvidence(texPrix(somme), 'blue')}$€.<br>`\n            texteCorr += `${prenoms[1]} a acheté  $${miseEnEvidence(texNombre(p / y))}$ fois la quantité des ${objet} achetée par ${prenoms[0]} pour $${miseEnEvidence(texPrix(somme), 'blue')}$€.<br>`\n            texteCorr += `Il a payé $${texPrix(z)}$€ $=${miseEnEvidence(texNombrec(p / y))}\\\\times${miseEnEvidence(texPrix(somme), 'blue')}$€.<br>`\n            texteCorr += `À l'aide de ces données, on constate que le prix des ${objet} et leur quantité sont tous les deux multipliés par le même nombre, donc ces deux grandeurs sont proportionnelles.<br>`\n            bonneReponse = 'oui'\n          } else {\n            index1 = listeIndex[i]\n            prenoms = [prenomF(), prenomM()]\n            index2 = randint(0, listeDeChoses[index1].length - 1)\n            objet = listeDeChoses[index1][index2]\n            pu =\n            listeDePrixUnit[index1][index2] *\n            (1 + randint(1, 2) * 0.2 * randint(-1, 1))\n            y = randint(2, 5)\n            somme = calcul(y * pu, 2)\n            pu -= 0.1\n            p = y * randint(2, 5)\n            z = calcul(p * pu, 2)\n            texte = `${prenoms[0]} achète ${listeDeLieux[index1]} des ${objet}.<br>`\n            texte += `Elle a obtenu ${y} ${objet} pour $${texPrix(somme)}$€.<br> ${prenoms[1]} achète quant à lui, au même endroit ${p} ${objet} pour $${texPrix(z)}$€.<br>`\n            texte += `Le prix des ${objet} est-il proportionnel à la quantité achetée  ?<br>`\n            texteCorr = `${prenoms[0]} dépense $${miseEnEvidence(texPrix(somme), 'blue')}$€.<br>`\n            texteCorr += `${prenoms[1]} a acheté  $${miseEnEvidence(texNombrec(p / y))}$ fois la quantité des ${objet} achetée par ${prenoms[0]} pour $${miseEnEvidence(texPrix(somme), 'blue')}$€.<br>`\n            texteCorr += `Il a payé $${texPrix(z)}$€.<br>Mais $${miseEnEvidence(texNombrec(p / y))}\\\\times${miseEnEvidence(texPrix(somme), 'blue')}$€ $=${texPrix(calcul((p * somme) / y))}$€.<br>`\n            texteCorr += `À l'aide de ces données, on constate que le prix unitaire des ${objet} n'est pas le même pour ${prenoms[0]} qui en a acheté $${y}$ que pour ${prenoms[1]} qui en a acheté ${p}, donc ces deux grandeurs ne sont pas proportionnelles.<br>`\n            bonneReponse = 'non'\n          }\n          compteurProportionnelsOuPas += 1\n          break\n        case 2: // Distance\n          prenoms = [prenomF(), prenomM()]\n          x = randint(5, 20)\n          y = randint(5, 20, x) * 100\n          x = x * 100\n          n = arrondi(calcul((x / 60) * (1 + randint(0, 2) * 0.2)), 0)\n          p = arrondi(calcul((y / 60) * (1 + randint(0, 2) * 0.2)), 0)\n          index1 = calcul(x / n) // vitesse fille\n          index2 = calcul(y / p) // vitesse garçon\n\n          texte = `${prenoms[0]} habite à $${texNombre(x)}$ m du collège. Elle met ${n} minutes pour s'y rendre depuis chez elle.<br>`\n          texte += `${prenoms[1]}, lui, habite à $${texNombre(y)}$ m du collège. Il met ${p} minutes pour s'y rendre depuis chez lui.<br>`\n          texte += 'Les durées de trajet pour venir au collège sont-elles proportionnelles aux distances parcoures ?<br>'\n          texteCorr = `${prenoms[0]} parcourt ${x} m en ${n} minutes soit environ $\\\\dfrac{${x}\\\\text{ m}}{${n}\\\\text{ min}} ${arrondi(index1, 1) === index1 ? '=' : '\\\\approx'} ${texNombrec(arrondi(index1, 1))}\\\\text{ m}/_{\\\\text{ min}}$`\n          texteCorr += ` et ${prenoms[1]} parcourt ${y} m en ${p} minutes soit environ $\\\\dfrac{${y}\\\\text{ m}}{${p}\\\\text{ min}} ${arrondi(index2, 1) === index2 ? '=' : '\\\\approx'} ${texNombrec(arrondi(index2, 1))}\\\\text{ m}/_{\\\\text{ min}}$.<br>`\n          if (index1 === index2) {\n            texteCorr += 'Pour ces deux élèves, le temps mis et la distance parcourue sont proportionnelles (si l\\'on compare leur vitesse moyenne).'\n          } else {\n            texteCorr += 'La distance parcourue en une minute (vitesse moyenne) n\\'est pas la même dans ces deux situations, il n\\'y a donc pas proportionnalité.<br>'\n            bonneReponse = 'non'\n          }\n          break\n        case 3: // Âge\n          prenoms = [prenomF(), prenomM()]\n          x = randint(5, 20)\n          y = x + randint(25, 35)\n          texte = `${prenoms[0]} vient d'avoir ${x} ans cette année.<br> Son père ${prenoms[1]} vient de fêter  son ${y}ème anniversaire.<br>`\n          texte += `L'âge de son père est-il proportionnel à l'âge de ${prenoms[0]} ?<br>`\n          texteCorr = `Aujourd'hui, la différence d'âge entre ${prenoms[0]\n            } et ${prenoms[1]} est de ${y - x} ans.<br>`\n          texteCorr += `${prenoms[0]} a ${x} ans aujourd'hui. Dans ${x} années, ${prenoms[0]} aura ${2 * x\n            } ans (${x} + ${x}), c'est-à-dire le double d'aujourd'hui.<br>`\n          texteCorr += `Son père ${prenoms[1]} qui a actuellement ${y} ans aura ${x + y} ans cette année-là (${y}+${x}).<br>`\n          texteCorr += `Quand l'âge de ${prenoms[0]} double, l'âge de ${prenoms[1]} ne double pas, donc l'âge de ${prenoms[0]} et l'âge de son père ne sont pas propotionnels.<br>`\n          texteCorr += `Dans ${x} années, la différence d'âge restera la même : ${x + y} - ${2 * x} = ${y - x}.`\n          bonneReponse = 'non'\n          break\n        case 4: // Épidémie\n          index1 = randint(0, 5)\n          index2 = randint(0, 4)\n          texte = `Une épidémie se répand dans la ville de ${villes[index1]}.<br>`\n          texte += `Le nombre de malades ${verbes[index2]} tous les ${index2 + 2\n            } jours.<br>`\n          texte += `Le nombre de malades est-il proportionnel au nombre de${getVueFromUrl() === 'multi' ? '<br>' : ' '}`\n          texte += 'jours passés depuis le début de l\\'épidémie ?<br>'\n          texteCorr = `Admettons qu'il y ait 10 malades le 1er jour. Le ${1 + 2 + index2}e jour il y aura $10 \\\\times ${index2 + 2} = ${10 * (index2 + 2)}$ malades.<br>`\n          texteCorr += `Entre le 1er jour et le ${3 + index2}e jour, le nombre de malades est multiplié par ${index2 + 2} mais le nombre de jours est multiplié par ${3 + index2}.<br>`\n          texteCorr += 'Donc le nombre de malades n\\'est pas proportionnel au nombre de jours passés.<br>'\n          bonneReponse = 'non'\n          break\n        case 5: // Achat (tableau de proportionnalité)\n          prenoms = [prenomF(), prenomM()]\n          index1 = randint(0, 5)\n          objet = listeDeChoses[4][index1]\n          index2 = randint(0, 4)\n          pu =\n            listeDePrixUnit[4][index1] *\n            (1 + randint(1, 2) * 0.2 * randint(-1, 1))\n          n = randint(2, 6)\n          p = randint(0, 3)\n          tirages[0] = [n, n * pu]\n          tirages[1] = [n + 1, (n + 1) * pu]\n          tirages[2] = [2 * n + 1, (2 * n + 1) * pu]\n          tirages[3] = [3 * n + 3, (3 * n + 3) * pu]\n          met = listeProportionnelOuPas[compteurProportionnelsOuPas]\n          compteurProportionnelsOuPas += 1\n          if (!met) tirages[p][1] -= 0.1\n          texte = `${prenoms[1]} relève les prix des ${objet} sur un catalogue par${getVueFromUrl() === 'multi' ? '<br>' : ' '}correspondance en fonction de la quantité saisie dans le panier.<br>`\n          texte += 'Il note les prix dans le tableau suivant :<br> <br>'\n          texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // construction du tableau des effectifs en un seul morceau\n          for (let j = 0; j <= tirages.length; j++) texte += '|c'\n          texte += `|}\\\\hline  \\\\text{${objet}}`\n          for (let j = 0; j < tirages.length; j++) texte += `&${tirages[j][0]}`\n          texte += '\\\\\\\\\\\\hline \\\\text{Prix (en €})'\n          for (let j = 0; j < tirages.length; j++) { texte += `&${texPrix(arrondi(tirages[j][1], 2))}` }\n          texte += '\\\\\\\\\\\\hline\\\\end{array}$<br> <br>'\n          texte += `Le prix des ${objet} est-il proportionnel à la quantité achetée ?<br>`\n          texteCorr = `On peut calculer le prix unitaire des ${objet} dans chaque cas de figure :<br><br>`\n          if (met) index3 = range(3)\n          else index3 = range(3, [p])\n          texteCorr += '$'\n          for (let j = 0; j < index3.length; j++) {\n            texteCorr += `\\\\dfrac{${texPrix(arrondi(tirages[index3[j]][1], 2))}\\\\text{ €}}{${tirages[index3[j]][0]}\\\\text{ ${objet}}}=`\n          }\n          texteCorr += `${texPrix(pu)}\\\\text{ €}/_{\\\\text{${objet.substring(0, objet.length - 1)}}}$<br><br>`\n          if (!met) {\n            texteCorr += `Mais $\\\\dfrac{${texPrix(arrondi(tirages[p][1], 2))}\\\\text{ €}}{${tirages[p][0]}\\\\text{ ${objet}}}\n            =${texPrix(arrondi(calcul(tirages[p][1] / tirages[p][0]), 2))}\\\\text{ €}/_{\\\\text{${objet.substring(0, objet.length - 1)}}}$.<br>`\n            texteCorr += `Le prix des ${objet} n'est pas proportionnel à leur nombre.<br>`\n            bonneReponse = 'non'\n          } else {\n            texteCorr += `Le prix des ${objet} est bien proportionnel à leur nombre.<br>`\n            bonneReponse = 'oui'\n          }\n          break\n      }\n      if (this.questionJamaisPosee(i, x, y, p, z, pu, listeChoix[i])) {\n        if (this.interactif || context.isAmc) {\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].options = { ordered: true }\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'oui',\n              statut: bonneReponse !== 'non'\n            },\n            {\n              texte: 'non',\n              statut: bonneReponse !== 'oui'\n            },\n            {\n              texte: 'je ne sais pas',\n              statut: false\n            }\n          ]\n          if (this.interactif) {\n            texte += propositionsQcm(this, i).texte\n          }\n        }\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n  this.besoinFormulaireTexte = ['Type de questions', 'Nombres séparés par des tirets\\n1 : Achat\\n2 : Distance\\n3 : Âge\\n4 : Épidémie\\n5 : Catalogue (tableau de proportionnalité)']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","ProportionnalitePasProportionnalite","Exercice","this","context","spacing","spacingCorr","nbQuestions","nbColsCorr","nbCols","nbColsModifiable","nbColsCorrModifiable","nouvelleVersion","bonneReponse","listeQuestions","listeCorrections","autoCorrection","consigne","listeIndex","combinaisonListes","listeChoixDisponibles","sup","split","i","length","contraindreValeur","parseInt","listeChoix","nombre","compteOccurences","listeProportionnelOuPas","listeDeLieux","listeDeChoses","listeDePrixUnit","tirages","index3","villes","verbes","x","y","z","pu","n","p","somme","prenoms","index1","index2","objet","met","texte","texteCorr","compteurProportionnelsOuPas","cpt","prenomF","prenomM","randint","calcul","texPrix","miseEnEvidence","texNombre","texNombrec","arrondi","getVueFromUrl","j","range","substring","questionJamaisPosee","interactif","options","ordered","enonce","propositions","statut","propositionsQcm","push","listeQuestionsToContenu","besoinFormulaireTexte","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}