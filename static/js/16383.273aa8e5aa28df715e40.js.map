{"version":3,"file":"js/16383.273aa8e5aa28df715e40.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/CM/CM000.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, miseEnEvidence, nombreDeChiffresDansLaPartieEntiere } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n// on importait amcReady de 5L10 cf commit cf25dab mais mieux vaut le déclarer explicitement\n\nexport const titre = 'Additions et de soustractions'\nexport const interactifReady = true\nexport const interactifType = 'numerique'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\n/**\n * Additions et/ou soustractions classique et/ou à trou.\n *\n * Par défaut c'est un mélange d'additions, soustractions avec et sans trou avec des nombres jusqu'à 20.\n * @author Rémi Angot\n * Référence CM000\n */\nexport default function TablesAdditionsSoustractions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 20\n  this.sup2 = 6 // additions|additions à trous|soustractions|soustractions à trous|mélange sans trou|mélange avec trou\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.tailleDiaporama = 3\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.sup = parseInt(this.sup)\n    this.sup2 = parseInt(this.sup2)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions = []\n    if (this.sup2 === 1) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['addition'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup2 === 2) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['addition_a_trou'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup2 === 3) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['soustraction'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup2 === 4) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['soustraction_a_trou'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup2 === 5) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['addition', 'soustraction'],\n        this.nbQuestions\n      )\n    }\n    if (this.sup2 === 6) {\n      listeTypeDeQuestions = combinaisonListes(\n        ['addition', 'addition_a_trou', 'soustraction', 'soustraction_a_trou'],\n        this.nbQuestions\n      )\n    }\n    for (let i = 0, a, b, texte, texteCorr; i < this.nbQuestions; i++) {\n      a = randint(2, this.sup)\n      b = randint(2, this.sup)\n      this.autoCorrection[i] = {}\n      switch (listeTypeDeQuestions[i]) {\n        case 'addition':\n          texte = `$${a} + ${b} = \\\\dotfill$`\n          if (this.interactif && context.isHtml) {\n            texte = ajouteChampTexte(this, i, {\n              texte: `$${a} + ${b} = $`\n            })\n          }\n          texteCorr = `$${a} + ${b} = ${a + b}$`\n          setReponse(this, i, a + b)\n          break\n        case 'addition_a_trou':\n          texte = `$${a} + \\\\ldots\\\\ldots = ${a + b}$`\n          if (this.interactif && context.isHtml) {\n            texte = ajouteChampTexte(this, i, {\n              texte: `$${a}~+ $`,\n              texteApres: `$= ${a + b}$`\n            })\n          }\n          texteCorr = `$${a} + ${miseEnEvidence(b)} = ${a + b}$`\n          setReponse(this, i, b)\n          break\n        case 'soustraction':\n          if (a === b) {\n            a = randint(2, this.sup, b)\n          }\n          if (a < b) {\n            b = [a, (a = b)][0] // échange les variables a et b\n          }\n          texte = `$${a} - ${b} = \\\\dotfill$`\n          if (this.interactif && context.isHtml) {\n            texte = ajouteChampTexte(this, i, {\n              texte: `$${a} - ${b} = $`\n            })\n          }\n          texteCorr = `$${a} - ${b} = ${a - b}$`\n          setReponse(this, i, a - b)\n          break\n        case 'soustraction_a_trou':\n          if (a === b) {\n            a = randint(2, this.sup, b)\n          }\n          if (a < b) {\n            b = [a, (a = b)][0] // échange les variables a et b\n          }\n          texte = `$${a} - \\\\ldots\\\\ldots = ${a - b}$`\n          if (this.interactif && context.isHtml) {\n            texte = ajouteChampTexte(this, i, {\n              texte: `$${a}~- $`,\n              texteApres: `$= ${a - b}$`\n            })\n          }\n          texteCorr = `$${a} - ${miseEnEvidence(b)} = ${a - b}$`\n          setReponse(this, i, b)\n          break\n      }\n\n      if (context.isDiaporama) {\n        texte = texte.replace('= \\\\dotfill', '')\n      }\n      this.autoCorrection[i].reponse.param = { digits: nombreDeChiffresDansLaPartieEntiere(this.autoCorrection[i].reponse.valeur[0]), decimals: 0, signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 }\n      this.autoCorrection[i].enonce = texte\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 9999] // Texte, tooltip\n  this.besoinFormulaire2Numerique = [\n    'Style de questions',\n    6,\n    '1 : Additions\\n2: Additions à trous\\n3: Soustractions\\n4 : Soustractions à trous\\n5 : Additions et soustractions \\n6 : Additions et soustractions avec ou sans trous'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","TablesAdditionsSoustractions","Exercice","this","sup","sup2","consigne","spacing","tailleDiaporama","nouvelleVersion","autoCorrection","parseInt","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","nbQuestions","a","b","texte","texteCorr","i","randint","interactif","context","ajouteChampTexte","setReponse","texteApres","miseEnEvidence","replace","reponse","param","digits","nombreDeChiffresDansLaPartieEntiere","valeur","decimals","signe","exposantNbChiffres","exposantSigne","approx","enonce","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}