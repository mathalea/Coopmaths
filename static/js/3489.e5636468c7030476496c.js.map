{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G23-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","amcType","interactifReady","titre","MesurerUnAngle","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","video","nouvelleVersion","angle","anglerot","Apos","Bpos","Cpos","p","texte","texteCorr","A","B","C","s2","s1","bis","parseInt","listeQuestions","listeCorrections","signes","labels","secteur","xMin","xMax","yMin","yMax","objetsEnonce","objetsCorrection","secteur0","i","push","choice","randint","lettreDepuisChiffre","interactif","point","rotation","texteParPoint","similitude","homothetie","demiDroite","pointSurSegment","labelPoint","afficheMesureAngle","Math","min","x","max","y","context","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","autoCorrection","enonce","propositions","abs","statut","round","options","ordered","lastChoice","propositionsQcm","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/3489.e5636468c7030476496c.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { point, labelPoint, rotation, mathalea2d, afficheMesureAngle, homothetie, demiDroite, texteParPoint, similitude, pointSurSegment } from '../../modules/2d.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType =1 // QCM \nexport const interactifReady = true\n\nexport const titre = 'Mesurer un angle'\n\n/**\n * Construire un angle\n * @author Jean-Claude Lhote\n * Référence 6G23\n */\nexport default function MesurerUnAngle () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbQuestionsModifiable = true\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1\n  this.video = 'TEzu9uky56M'\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let angle; let anglerot; let Apos; let Bpos; let Cpos; let p; let texte; let texteCorr; let A; let B; let C; let s2; let s1; let bis; const signes = []\n    let labels, secteur, xMin, xMax, yMin, yMax, objetsEnonce, objetsCorrection, secteur0\n\n    for (let i = 0; i < this.nbQuestions; i++) {\n      signes.push(choice([-1, 1]))\n      if (this.sup === 1) {\n        angle = randint(2, 16, 9) * 10\n      } else if (this.sup === 2) {\n        angle = randint(4, 32, 18) * 5\n      } else {\n        angle = randint(20, 160, 90)\n      }\n      anglerot = randint(-180, 180)\n      angle = signes[i] * angle\n      p = [choice(['x', 'y', 'z', 't']), lettreDepuisChiffre(randint(1, 16)), choice(['s', 'u', 'v', 'w'])]\n      if (this.interactif) {\n        texte = `Estime la mesure de l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$ sans instrument.<br>`\n      } else {\n        texte = `Mesure l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$.<br>`\n      }\n      A = point(0, 0)\n      B = point(6, 0)\n      B = rotation(B, A, anglerot)\n\n      // texte, A, orientation = \"milieu\", color = 'black', scale = 1, ancrageDeRotation = \"middle\", math_on = false\n      Bpos = texteParPoint(p[0], similitude(A, homothetie(B, A, 0.95), signes[i] * 90, 0.1), 'milieu', 'black', 1, 'middle', true)\n      s1 = demiDroite(A, B)\n      C = rotation(B, A, angle)\n      bis = rotation(B, A, angle / 2)\n      Apos = texteParPoint(p[1], pointSurSegment(A, bis, -0.5), 'milieu', 'black', 1, 'middle', true)\n      Cpos = texteParPoint(p[2], similitude(A, homothetie(C, A, 0.95), -signes[i] * 90, 0.1), 'milieu', 'black', 1, 'middle', true)\n      s2 = demiDroite(A, C)\n      labels = labelPoint(A, B, C)\n      secteur = afficheMesureAngle(B, A, C)\n      secteur0 = afficheMesureAngle(B, A, C, 'black', 1.5, ' ')\n      texteCorr = ''\n      xMin = Math.min(A.x, C.x, B.x) - 1\n      xMax = Math.max(A.x, C.x, B.x) + 1\n      yMin = Math.min(A.y, C.y, B.y) - 1\n      yMax = Math.max(A.y, C.y, B.y) + 1\n      context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n      objetsEnonce = [s1, s2, labels, Apos, Bpos, Cpos, secteur0]\n      objetsCorrection = [s1, s2, labels, Apos, Bpos, Cpos, secteur]\n      texte += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.8 }, objetsEnonce)\n      texteCorr += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection)\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${Math.abs(angle)}\\\\degree$`,\n          statut: true\n        },\n        {\n          texte: `$${Math.abs(180 - angle)}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: `$${Math.abs(angle / 2)}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: `$${Math.abs(Math.round((180 + angle) / 2))}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: '$180\\\\degree$',\n          statut: false\n        },\n        {\n          texte: '$90\\\\degree$',\n          statut: false\n        }\n      ]\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 6\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Précision de l\\'angle', 3, '1 : Angle à 10°\\n2 : Angle à 5°\\n3 : Angle à 1°']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}