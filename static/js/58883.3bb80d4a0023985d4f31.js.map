{"version":3,"file":"js/58883.3bb80d4a0023985d4f31.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N14-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, texNombrec, texNombre } from '../../modules/outils.js'\n\nexport const titre = 'Déterminer le plus petit ensemble de nombres dans lequel le nombre proposé appartient'\n\n/**\n * 2N14-1, ex 2N20\n * @author Stéphane Guyon\n */\nexport default function EnsembleDeNombres () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Déterminer le plus petit ensemble de nombres dans lequel le nombre proposé appartient. :'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1 //\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7, 8, 9]; let typesDeQuestions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, a, b, c, d, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        // Cas par cas, on définit le type de nombres que l'on souhaite\n        // Combien de chiffres ? Quelles valeurs ?\n        case 1:\n\n          a = randint(0, 150)\n\n          texte = `$${a} \\\\in \\\\dots$`\n          texteCorr = `$${a}$ est un entier naturel, on a donc $${a}\\\\in \\\\mathbb{N}$\n                    `\n\n          break\n        case 2:\n\n          a = randint(0, 150) * (-1)\n\n          texte = `$${a} \\\\in \\\\dots$`\n          texteCorr = `$${a}$ est un entier relatif, on a donc $${a}\\\\in \\\\mathbb{Z}$\n                    `\n\n          break\n        case 3:\n\n          d = randint(0, 9)\n          b = randint(0, 9) * choice([-1, 1])\n          c = randint(0, 9)\n          a = b + c / 10 + d / 100\n          a = a * choice([-1, 1])\n\n          texte = `$${texNombrec(b + c / 10 + d / 100)}\\\\in \\\\dots$`\n          texteCorr = `$${texNombrec(b + c / 10 + d / 100)}$ est un nombre décimal, on a donc $${texNombrec(b + c / 10 + d / 100)}\\\\in \\\\mathbb{D}$\n                    `\n\n          break\n        case 4:\n\n          a = randint(2, 16)\n          b = randint(0, 9)\n          c = randint(0, 9)\n\n          texte = `$\\\\sqrt{${texNombrec(a * a)}}\\\\in \\\\dots$`\n          texteCorr = `$\\\\sqrt{${a * a}}=${a}$  est un entier naturel, on a donc $\\\\sqrt{${texNombrec(a * a)}}\\\\in \\\\mathbb{N}$\n                    `\n\n          break\n        case 5:\n\n          a = randint(2, 16)\n          b = randint(2, 6)\n          c = randint(0, 9)\n\n          texte = `$\\\\dfrac{${texNombrec(b * a)}}{${a}}\\\\in \\\\dots$`\n          texteCorr = `$\\\\dfrac{${texNombrec(b * a)}}{${a}}=\\\\dfrac{${b}\\\\times ${a}}{${a}}=${b}$  est un entier naturel, on a donc $\\\\dfrac{${texNombrec(b * a)}}{${a}}\\\\in \\\\mathbb{N}$\n                    `\n\n          break\n        case 6:\n\n          a = choice([3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 39, 41, 43, 47, 53, 57, 61, 67, 71, 73, 79, 83, 87, 89])\n          b = choice([3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 39, 41, 43, 47, 53, 57, 61, 67, 71, 73, 79, 83, 87, 89], [a])\n\n          texte = `$\\\\dfrac{${a}}{${b}}\\\\in \\\\dots$`\n          texteCorr = `$\\\\dfrac{${a}}{${b}}$ n'est pas un nombre décimal. On a donc $\\\\dfrac{${a}}{${b}}\\\\in \\\\mathbb{Q}$\n                    `\n\n          break\n        case 7:\n\n          b = choice([4, 5, 8, 10])\n          a = randint(4, 100)\n          while (a % b === 0) { a = randint(4, 100) }\n\n          texte = `$\\\\dfrac{${a}}{${b}}\\\\in \\\\dots$`\n          texteCorr = `$\\\\dfrac{${a}}{${b}}=${texNombre(a / b)}$  est un nombre décimal. On a donc $\\\\dfrac{${a}}{${b}}\\\\in \\\\mathbb{D}$\n                    `\n\n          break\n        case 8:\n\n          a = randint(2, 100, [4, 9, 16, 25, 36, 49, 64, 81])\n          texte = `$\\\\sqrt{${a}} \\\\in \\\\dots$`\n          texteCorr = `$\\\\sqrt{${a}}$  est un nombre irrationnel. On a donc $\\\\sqrt{${a}}\\\\in \\\\mathbb{R}$\n                    `\n\n          break\n        case 9:\n          a = randint(2, 9)\n          texte = `$${a}\\\\pi \\\\in \\\\dots$`\n          texteCorr = `$${a}\\\\pi$   est un nombre irrationnel. On a donc $${a}\\\\pi \\\\in \\\\mathbb{R}$\n                    `\n\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","EnsembleDeNombres","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","a","b","c","d","texte","texteCorr","i","cpt","randint","choice","texNombrec","texNombre","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}