{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5N20.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/modules/gestionQcm.js"],"names":["amcReady","amcType","titre","ExerciceAdditionnerSoustraireFractions5e","max","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","qcmDisponible","modeQcm","nouvelleVersion","listeTypeDeQuestions","tabrep","parseInt","qcm","level","listeQuestions","listeCorrections","combinaisonListes","tabicone","a","b","c","d","k","texte","texteCorr","i","randint","choice","texFractionReduite","texFraction","ordreDesFractions","push","miseEnEvidence","s","pgcd","calcul","shuffle2tableaux","mathalea","sortieAMC","tableauSolutionsDuQcm","propositionsQcm","numeroExercice","Math","abs","replaceAll","listeQuestionsToContenu","gestionQcmInteractif","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","mg32Editable","listePackages","exercice","document","addEventListener","$","checkbox","button","querySelector","event","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","reduce","spanReponseLigne","forEach","solution","rep","label","check","style","backgroundColor","checked","innerHTML","color","fontSize","querySelectorAll","uicheck","classList","add","espace","sortieHtml","length"],"mappings":"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","file":"js/4847.10d94e2d4010bdb1dae8.js","sourcesContent":["/* global mathalea */\nimport Exercice from '../ClasseExercice.js'\nimport { shuffle2tableaux, calcul, listeQuestionsToContenu, randint, choice, combinaisonListes, abs, pgcd, miseEnEvidence, texFraction, texFractionReduite } from '../../modules/outils.js'\nimport { gestionQcmInteractif, propositionsQcm } from '../../modules/gestionQcm.js'\n\nexport const amcReady = true\nexport const amcType = 1 // type de question AMC\n\nexport const titre = 'Additionner ou soustraire deux fractions (dénominateurs multiples)'\n\n/**\n* Effectuer l'addition ou la soustraction de deux fractions dont un dénominateur est un multiple de l'autre.\n*\n* Le résultat de la soustraction sera toujours positif.\n*\n* Le coefficient est paramétrable, par défaut il est inférieur à 11.\n*\n* On peut paramétrer de n'avoir que des soustractions.\n* @Auteur Rémi Angot\n* 5N20\n*/\nexport default function ExerciceAdditionnerSoustraireFractions5e (max = 11) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max // Correspond au facteur commun\n  this.sup2 = false // Si true alors il n'y aura que des soustractions\n  this.titre = titre\n  this.consigne = \"Calculer et donner le résultat sous la forme d'une fraction simplifiée\"\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.sup2 = 3\n  /** ************ modeQcm disponible dans Mathalea ***********************/\n  this.qcmDisponible = true\n  this.modeQcm = false\n  /***********************************************************************/\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.qcm = ['5N20', [], 'Additionner ou soustraire deux fractions (dénominateurs multiples)', 1]\n    if (this.level === 6) this.qcm[0] = '6C23'\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    if (this.sup2 === 1) {\n      listeTypeDeQuestions = combinaisonListes(['+'], this.nbQuestions)\n    }\n    if (this.sup2 === 2) {\n      listeTypeDeQuestions = combinaisonListes(['-'], this.nbQuestions)\n    }\n    if (this.sup2 === 3) {\n      listeTypeDeQuestions = combinaisonListes(['+', '-'], this.nbQuestions)\n    }\n\n    /** ************* Pour QCM html/latex hors AMC *****************************/\n    let tabrep; let tabicone = [1, 0, 0, 0]\n    /**************************************************************************/\n\n    for (let i = 0, a, b, c, d, k, texte, texteCorr; i < this.nbQuestions; i++) {\n      texteCorr = ''\n      // les numérateurs\n      a = randint(1, 9)\n      // les dénominateurs\n      b = randint(2, 9, a)\n      while (b === a) {\n        b = randint(2, 9) // pas de fraction avec numérateur et dénominateur égaux\n      }\n      if (this.sup > 1) {\n        k = randint(2, this.sup)\n      } else k = 1\n      d = b * k\n      if (listeTypeDeQuestions[i] === '-') {\n        c = choice([randint(1, b * k), randint(b * k, 9 * k)])\n      } else {\n        c = randint(1, 19, d)\n      }\n      if (listeTypeDeQuestions[i] === '+') { // une addition\n        /** ***************** Choix des réponses du QCM ***********************************/\n        tabrep = [`$${texFractionReduite(a * d + c * b, b * d)}$`, `$${texFraction(a + c, b + d)}$`, `$${texFraction(a + c, b * d)}$`, `$${texFraction(a * c, b * d)}$`]\n        tabicone = [1, 0, 0, 0]\n        /*************************************************************************/\n        const ordreDesFractions = randint(1, 2)\n        if (ordreDesFractions === 1) {\n          texte = `$${texFraction(a, b)}+${texFraction(c, d)}=$`\n          /** ****************** AMC question/questionmult ********************************/\n          this.qcm[1].push([`$${texFraction(a, b)}+${texFraction(c, d)}=$\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone])\n          /*******************************************************************************/\n        } else {\n          texte = `$${texFraction(c, d)}+${texFraction(a, b)}=$`\n          /** ****************** AMC question/questionmult ******************************/\n          this.qcm[1].push([`$${texFraction(c, d)}+${texFraction(a, b)}=$\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone])\n          /*******************************************************************************/\n        }\n\n        if (ordreDesFractions === 1) {\n          texteCorr = `$${texFraction(a, b)}+${texFraction(c, d)}=`\n\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}+${texFraction(c, d)}=${texFraction(a * k, b * k)}+${texFraction(c, d)}=`\n          }\n          texteCorr += `${texFraction(a * k + '+' + c, d)}=${texFraction(a * k + c, d)}$`\n        } else {\n          texteCorr = `$${texFraction(c, d)}+${texFraction(a, b)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(c, d)}+${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}=${texFraction(c, d)}+${texFraction(a * k, b * k)}=`\n          }\n          texteCorr += `${texFraction(c + '+' + a * k, d)}=${texFraction(a * k + c, d)}$`\n        }\n        // Est-ce que le résultat est simplifiable ?\n        const s = pgcd(a * k + c, d)\n        if (s !== 1) {\n          texteCorr += `$=${texFraction(calcul((a * k + c) / s) + miseEnEvidence('\\\\times ' + s), calcul(d / s) + miseEnEvidence('\\\\times ' + s))}=${texFractionReduite(calcul((a * k + c) / s), calcul(d / s))}$`\n        }\n        shuffle2tableaux(tabrep, tabicone)\n        if (this.modeQcm && !mathalea.sortieAMC) {\n          this.tableauSolutionsDuQcm[i] = tabicone\n          texte += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n          // texteCorr += '<br><br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n        }\n      } else { // une soustraction\n        /** ***************** Choix des réponses du QCM ***********************************/\n        tabrep = [`$${texFractionReduite(Math.abs(a * d - c * b), Math.abs(b * d))}$`, `$${texFraction(Math.abs(a - c), Math.abs(b - d))}$`, `$${texFraction(Math.abs(a - c), b * d)}$`, `$${texFraction(a * c, b * d)}$`]\n        tabicone = [1, 0, 0, 0]\n        /*********************************************************************************/\n        if ((a / b) > (c / d)) {\n          texte = `$${texFraction(a, b)}-${texFraction(c, d)}=$`\n          this.qcm[1].push([`$${texFraction(a, b)}-${texFraction(c, d)}=$\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone])\n        } else {\n          texte = texte = `$${texFraction(c, d)}-${texFraction(a, b)}=$`\n          /** ****************** AMC question/questionmult ******************************/\n          this.qcm[1].push([`$${texFraction(c, d)}-${texFraction(a, b)}=$\\\\\\\\ \\n Réponses possibles`,\n            tabrep,\n            tabicone])\n          /*****************************************************************************/\n        }\n        if ((a / b) > (c / d)) {\n          texteCorr = `$${texFraction(a, b)}-${texFraction(c, d)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}-${texFraction(c, d)}=${texFraction(a * k, b * k)}-${texFraction(c, d)}=`\n          }\n          texteCorr += `${texFraction(a * k + '-' + c, d)}=${texFraction(a * k - c, d)}$`\n          shuffle2tableaux(tabrep, tabicone)\n          if (this.modeQcm && !mathalea.sortieAMC) {\n            this.tableauSolutionsDuQcm[i] = tabicone\n            texte += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n            // texteCorr += '<br><br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n          }\n        } else {\n          texteCorr = `$${texFraction(c, d)}-${texFraction(a, b)}=`\n          if (this.level !== 6) {\n            texteCorr += `${texFraction(c, d)}-${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}=${texFraction(c, d)}-${texFraction(a * k, b * k)}=${texFraction(c + '-' + a * k, d)}=`\n          }\n          texteCorr += `${texFraction(c - a * k, d)}$`\n          shuffle2tableaux(tabrep, tabicone)\n          if (this.modeQcm && !mathalea.sortieAMC) {\n            this.tableauSolutionsDuQcm[i] = tabicone\n            texte += '<br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texte\n            // texteCorr += '<br><br>' + propositionsQcm(this.numeroExercice, i, tabrep, tabicone).texteCorr\n          }\n        }\n        // Est-ce que le résultat est simplifiable ?\n        const s = pgcd(a * k - c, d)\n        if (!this.modeQcm) {\n          if (abs(a * k - c) % d === 0) { // si la fraction peut-être un nombre entier\n            texteCorr += `$=${calcul((abs(a * k - c)) / d)}$`\n          } else if (s !== 1) {\n            texteCorr += `$=${texFraction(calcul((abs(a * k - c)) / s) + miseEnEvidence('\\\\times ' + s), calcul(d / s) + miseEnEvidence('\\\\times ' + s))}=${texFractionReduite(calcul((abs(a * k - c)) / s), calcul(d / s))}$`\n          }\n        }\n      }\n\n      texte = texte.replaceAll('$$', ' ')\n      texteCorr = texteCorr.replaceAll('$$', ' ')\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n  gestionQcmInteractif(this)\n  this.besoinFormulaireNumerique = ['Valeur maximale du coefficient multiplicateur', 99999]\n  this.besoinFormulaire2Numerique = ['Types de calculs ', 3, '1 : Additions\\n2 : Soustractions\\n3 : Additions et soustractions']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ mathalea sortieHtml */\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function gestionQcmInteractif (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          const nbBonnesReponsesAttendues = exercice.tableauSolutionsDuQcm[i].reduce((a, b) => a + b, 0)\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.tableauSolutionsDuQcm[i].forEach((solution, rep) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${rep}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${rep}`)\n            if (solution === 1) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n            }\n          })\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '✔︎'\n            spanReponseLigne.style.color = 'green'\n          } else {\n            spanReponseLigne.innerHTML = '✖︎'\n            spanReponseLigne.style.color = 'red'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (numeroExercice, i, tabrep, tabicone) {\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (sortieHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  if (!mathalea.sortieAMC) {\n    if (sortieHtml) {\n      texte += `<br>  <form id=\"formEx${numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < tabrep.length; rep++) {\n      if (sortieHtml) {\n        texte += `<div class=\"ui checkbox ex${numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${numeroExercice}Q${i}R${rep}\">${tabrep[rep] + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n      if (tabicone[rep] === 1) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[rep]}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n    }\n    if (sortieHtml) {\n      texte += `<span id=\"resultatCheckEx${numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n"],"sourceRoot":""}