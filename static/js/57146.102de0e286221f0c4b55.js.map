{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta2F22.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","representer_fonction_affine","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","A","B","a","b","r","f","c","t","l","xA","yA","texte","texteCorr","typesDeQuestions","i","cpt","randint","repere2","x","courbe2","repere","mathalea2d","xmin","ymin","xmax","ymax","reduireAxPlusB","choice","point","tracePoint","labelPoint","color","taille","epaisseur","ecritureAlgebrique","indexOf","push","listeQuestionsToContenu"],"mappings":"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","file":"js/57146.102de0e286221f0c4b55.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, combinaisonListes, quotientier, randint, reduireAxPlusB, choice, ecritureAlgebrique } from '../../modules/outils.js'\nimport { repere2, courbe2, mathalea2d, point, tracePoint, labelPoint } from '../../modules/2d.js'\n\n\n\nexport const titre = 'Représentation graphique d’une fonction affine'\n\n/**\n\n*/\nexport default function representer_fonction_affine() {\n  Exercice.call(this);\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 3;//On complète le nb de questions\n  this.nbCols = 2;\n  this.nbColsCorr = 2;\n  this.tailleDiaporama = 100;\n  this.video = \"\";\n  this.spacing = 1;\n  this.spacingCorr = 1;\n  this.spacingCorr = 3\n\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [];\n    this.listeCorrections = [];\n    let typesDeQuestionsDisponibles = [];\n    typesDeQuestionsDisponibles = [1, 2];// On complète selon le nb de cas dans l'exo (switch)\n\n    let listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions);\n\n    for (let i = 0, A, B, a, b, r, f, c, t, l, xA, xB, yA, yB, texte, texteCorr, cpt = 0, typesDeQuestions;\n      i < this.nbQuestions && cpt < 50;) // on rajoute les variables dont on a besoin\n    {\n      typesDeQuestions = listeTypeDeQuestions[i];\n\n\n      switch (typesDeQuestions) {\n\n        case 1:\n          a = randint(0, 10)\n          a = a - 5;//coefficient directeur\n          b = randint(0, 10);\n          b = b - 5//ordonnée à l'origine\n          if (a == 0 && b == 0) {\n            a = 1\n          }// On évite la fonction nulle\n          r = repere2()//On définit le repère\n          f = x => a * x + b//On définit la fonction affine\n          c = courbe2(f, { repere: r })// On définit l'objet qui tracera la courbe dans le repère\n          texte = `Déterminer graphiquement l'expression algébrique de la fonction affine $f$ représentée ci-dessous :<br>`;\n          texte += mathalea2d({\n            xmin: -6,\n            ymin: -6,\n            xmax: 6,\n            ymax: 6\n          }, r, f, c);// On trace le graphique\n          texteCorr = `On sait que l'expression algébrique d'une fonction affine est de la forme :$f(x)=ax+b$, avec $a$ et $b$ deux réels.<br>`;\n          texteCorr +=`Le premier coefficient qu'on peut facilement lire graphiquement est $b$, l'ordonnée à l'origine de la droite.<br>`\n          texteCorr +=`On lit ici que le point $(0;${b}) \\\\in \\\\mathcal{C_f}$.<br>`\n          texteCorr += `On peut alors conclure que l'ordonnée à l'origine est : $${b}$. <br>`\n          texteCorr += `On peut lire le coefficient directeur de la droite, en lisant le déplacement vertical correspondant à un déplacement horizontal d'une unité .<br>`\n          texteCorr += `On lit alors que le coefficient directeur de la droite est : $${a}$.<br>`          \n          texteCorr += ` On peut en déduire que l'expression de la fonction $f$ est`\n\n          texteCorr += `$f(x)=${reduireAxPlusB(a, b)}$`\n          texteCorr += mathalea2d({\n            xmin: -6,\n            ymin: -6,\n            xmax: 6,\n            ymax: 6\n          }, r, f, c);// On trace le graphique\n\n         \n          break;\n        case 2:\n          a = randint(0, 3)*choice([-1,1])// coefficient a de la fonction affine\n          b = randint(0, 3)*choice([-1,1])// coefficient b de la fonction affine\n   \n          if (a == 0 && b == 0) // On évite la fonction nulle\n              { a == 1}\n          r = repere2()\n          f = x => a * x + b\n          c = courbe2(f, { repere: r })\n          xA = randint(1, 3) * choice([-1, 1])// Abscisse de A\n          yA = a * xA + b// Ordonnée de A\n         \n          A = point(xA, yA)\n          B = point(0, b)\n  \n             \n          t = tracePoint(A, B,'red') // Variable qui trace les points avec une croix\n          l = labelPoint(A,B)// Variable qui trace les nom s A et B\n          l.color='red'\n          t.taille=5\n          t.epaisseur=2\n          texte = `Représenter graphiquement la fonction affinne $f$ défiie sur $\\\\mathbb R$ par $f(x)=${reduireAxPlusB(a, b)}$ <br>`;\n          texteCorr = `On sait que la représentation graphique d'une fonction affine est une droite.<br>`\n          texteCorr += `Il suffit donc de déterminer les coordonnées de deux points pour pouvoir représenter $f$.<br>`                \n          texteCorr +=`On sait que si $f(x)=ax+b$, le coefficient $b$ est l'ordonnée à l'origine.<br>`\n          texteCorr +=`On lit donc ici que $b=${b}$, donc que le point $(0;${b}) \\\\in \\\\mathcal{C_f}$.<br>`\n          texteCorr += `On cherche un deuxième point, et on prend une abscisse au hasard :<br>` \n          texteCorr += `Soit $x=${xA}$ :<br>` \n          texteCorr += `On calcule : $y=${a} \\\\times ${xA}${ecritureAlgebrique(b)}$:<br>` \n          texteCorr += `On obtient : $y=${yA}$<br>` \n          texteCorr +=`Le point $(${xA};${yA}) \\\\in \\\\mathcal{C_f}$.<br>`\n          texteCorr += mathalea2d({\n          xmin: -6,\n          ymin: -10,\n          xmax: 6,\n          ymax: 10\n          }, r,c,t, l);\n          break;\n                }\n\n\n                if (this.listeQuestions.indexOf(texte) === -1) {\n                  // Si la question n'a jamais été posée, on en créé une autre\n                  this.listeQuestions.push(texte);\n                  this.listeCorrections.push(texteCorr);\n                  i++;\n                }\n                cpt++;\n              }\n              \n              listeQuestionsToContenu(this);\n\n\n\n            };\n          }\n"],"sourceRoot":""}