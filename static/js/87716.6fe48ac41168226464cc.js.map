{"version":3,"file":"js/87716.6fe48ac41168226464cc.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N10-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, shuffle, combinaisonListesSansChangerOrdre, texNombre, miseEnEvidence } from '../../modules/outils.js'\nexport const titre = 'Chiffre des ... Nombre de ...'\n\n/**\n * * Donner le chiffre des ... le nombre de ...\n * * 6N10-3\n * @author Sébastien Lozano\n */\n\nexport default function chiffreNombreDe () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.beta = false\n  this.sup = 1\n  if (this.beta) {\n    this.nbQuestions = 6\n  } else {\n    this.nbQuestions = 6\n  };\n\n  this.consigne = ''\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  // this.nbQuestionsModifiable = false;\n  context.isHtml ? this.spacing = 3 : this.spacing = 2\n  context.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    if (this.beta) {\n      typesDeQuestionsDisponibles = [0, 1, 2, 3, 4, 5]\n    } else {\n      // typesDeQuestionsDisponibles = shuffle([choice([1,3]),choice([2,4]),0]);\n      typesDeQuestionsDisponibles = shuffle([0, 1, 2, 3, 4, 5])\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    // let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      const mmc = randint(0, 9, [0])\n      const mmd = randint(0, 9, [mmc])\n      const mmu = randint(0, 9, [mmc, mmd])\n      const mc = randint(0, 9, [mmu, mmd, mmc])\n      const md = randint(0, 9, [mmu, mmd, mmc, mc])\n      const mu = randint(0, 9, [mmu, mmd, mmc, mc, md])\n      const c = randint(0, 9, [mmu, mmd, mmc, mu, md, mc])\n      const d = randint(0, 9, [mmu, mmd, mmc, mu, md, mc, c])\n      const u = randint(0, 9, [mmu, mmd, mmc, mu, md, mc, c, d])\n      // let nb = randint(100000000,999999999);\n      // let nbStr = nb.toString();\n      const nbStr = mmc.toString() + mmd.toString() + mmu.toString() + mc.toString() + md.toString() + mu.toString() + c.toString() + d.toString() + u.toString()\n      const nb = Number(nbStr)\n      const cdu = ['unites', 'dizaines', 'centaines']\n      const chiffreNombre = {\n        chiffre: {\n          unites: {\n            unites: { determinant: 'des', cdu: ['unités', ''], rangs: [8] },\n            dizaines: { determinant: 'des', cdu: ['dizaines', ''], rangs: [7] },\n            centaines: { determinant: 'des', cdu: ['centaines', ''], rangs: [6] }\n          },\n          milliers: {\n            unites: { determinant: 'des', cdu: ['unités de milliers', ''], rangs: [5] },\n            dizaines: { determinant: 'des', cdu: ['dizaines de milliers', ''], rangs: [4] },\n            centaines: { determinant: 'des', cdu: ['centaines de milliers', ''], rangs: [3] }\n          },\n          millions: {\n            unites: { determinant: 'des', cdu: ['unités de millions', ''], rangs: [2] },\n            dizaines: { determinant: 'des', cdu: ['dizaines de millions', ''], rangs: [1] },\n            centaines: { determinant: 'des', cdu: ['centaines de millions', ''], rangs: [0] }\n          }\n        },\n        nombre: {\n          unites: {\n            unites: { determinant: 'd\\'', cdu: ['unités', 1], rangs: [0, 1, 2, 3, 4, 5, 6, 7, 8] },\n            dizaines: { determinant: 'de', cdu: ['dizaines', 10], rangs: [0, 1, 2, 3, 4, 5, 6, 7] },\n            centaines: { determinant: 'de', cdu: ['centaines', 100], rangs: [0, 1, 2, 3, 4, 5, 6] }\n          },\n          milliers: {\n            unites: { determinant: 'd\\'', cdu: ['unités de milliers', 1000], rangs: [0, 1, 2, 3, 4, 5] },\n            dizaines: { determinant: 'de', cdu: ['dizaines de milliers', 10000], rangs: [0, 1, 2, 3, 4] },\n            centaines: { determinant: 'de', cdu: ['centaines de milliers', 100000], rangs: [0, 1, 2, 3] }\n          },\n          millions: {\n            unites: { determinant: 'd\\'', cdu: ['unités de millions', 1000000], rangs: [0, 1, 2] },\n            dizaines: { determinant: 'de', cdu: ['dizaines de millions', 10000000], rangs: [0, 1] },\n            centaines: { determinant: 'de', cdu: ['centaines de millions', 100000000], rangs: [0] }\n          }\n        }\n      }\n\n      // pour les situations, autant de situations que de cas dans le switch !\n      const situations = [\n        { // case 0 --> chiffre des\n          type: 'chiffre',\n          tranche: 'unites',\n          cdu: choice(cdu)\n        },\n        { // case 1 --> chiffre des\n          type: 'chiffre',\n          tranche: 'milliers',\n          cdu: choice(cdu)\n        },\n        { // case 2 --> chiffre des\n          type: 'chiffre',\n          tranche: 'millions',\n          cdu: choice(cdu)\n        },\n        { // case 3 --> nombre de\n          type: 'nombre',\n          tranche: 'unites',\n          cdu: choice(cdu)\n        },\n        { // case 4 --> nombre de\n          type: 'nombre',\n          tranche: 'milliers',\n          cdu: choice(cdu)\n        },\n        { // case 5 --> nombre de\n          type: 'nombre',\n          tranche: 'millions',\n          cdu: choice(cdu)\n        }\n      ]\n\n      // une fonction pour la correction selon le type de question\n      function chiffreNombreCorr (type, str, rang) {\n        let sortie\n        if (type === 'chiffre') {\n          sortie = str.split('')[rang[0]]\n        };\n        if (type === 'nombre') {\n          sortie = str.split('')[rang[0]]\n          for (let k = 1; k < rang.length; k++) {\n            sortie += str.split('')[rang[k]]\n          };\n        };\n        return sortie\n      };\n\n      // une fonction pour la justification supplémentaire dans le cas nombre de ...\n      function nombreDeJustif (type, str, rang, cduNum) {\n        let sortie\n        if (type === 'chiffre') {\n          sortie = ''\n        };\n        if (type === 'nombre') {\n          let nbDe = str.split('')[rang[0]]\n          for (let k = 1; k < rang.length; k++) {\n            nbDe += str.split('')[rang[k]]\n          };\n          let j = rang[rang.length - 1]\n          j++\n          let nbDeReste = ''\n          while (j !== 9) {\n            nbDeReste += str.split('')[j]\n            j++\n          };\n          sortie = `comme $${texNombre(str)} = ${texNombre(nbDe)}\\\\times ${texNombre(cduNum)}+${texNombre(nbDeReste)}$ alors `\n        };\n        return sortie\n      };\n\n      const enonces = []\n      for (let k = 0; k < situations.length; k++) {\n        enonces.push({\n          enonce: `\n          Dans $${texNombre(nb)}$, quel est le ${situations[k].type} ${chiffreNombre[situations[k].type][situations[k].tranche][situations[k].cdu].determinant} ${chiffreNombre[situations[k].type][situations[k].tranche][situations[k].cdu].cdu[0]} ?\n`,\n          question: '',\n          correction: `\n          Dans $${texNombre(nb)}$,           \n          ${nombreDeJustif(situations[k].type, nbStr, chiffreNombre[situations[k].type][situations[k].tranche][situations[k].cdu].rangs, chiffreNombre[situations[k].type][situations[k].tranche][situations[k].cdu].cdu[1])}          \n          le ${situations[k].type} ${chiffreNombre[situations[k].type][situations[k].tranche][situations[k].cdu].determinant}  ${chiffreNombre[situations[k].type][situations[k].tranche][situations[k].cdu].cdu[0]} est \n          $${miseEnEvidence(texNombre(chiffreNombreCorr(situations[k].type, nbStr, chiffreNombre[situations[k].type][situations[k].tranche][situations[k].cdu].rangs)))}$\n`\n        })\n      };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n        case 1:\n          texte = `${enonces[1].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[1].correction}`\n          };\n          break\n        case 2:\n          texte = `${enonces[2].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[2].correction}`\n          };\n          break\n        case 3:\n          texte = `${enonces[3].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[3].correction}`\n          };\n          break\n        case 4:\n          texte = `${enonces[4].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[4].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[4].correction}`\n          };\n          break\n        case 5:\n          texte = `${enonces[5].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[5].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[5].correction}`\n          };\n          break\n      };\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  // this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\n};\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","chiffreNombreDe","typesDeQuestionsDisponibles","Exercice","this","beta","sup","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","shuffle","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","mmc","randint","mmd","mmu","mc","md","mu","c","d","u","nbStr","toString","nb","Number","cdu","chiffreNombre","chiffre","unites","determinant","rangs","dizaines","centaines","milliers","millions","nombre","situations","type","tranche","choice","chiffreNombreCorr","str","rang","sortie","split","k","length","nombreDeJustif","cduNum","nbDe","j","nbDeReste","texNombre","enonces","push","enonce","question","correction","miseEnEvidence","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined"],"sourceRoot":""}