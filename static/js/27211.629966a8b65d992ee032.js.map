{"version":3,"file":"js/27211.629966a8b65d992ee032.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/2e/can2L05.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { fraction } from '../../../modules/fractions'\nimport { randint, listeQuestionsToContenu, texteEnCouleur, reduireAxPlusB, sp, ecritureParentheseSiNegatif, choice } from '../../../modules/outils.js'\nimport { propositionsQcm } from '../../../modules/gestionInteractif.js'\nexport const titre = 'Résoudre une inéquation (QCM)'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence can2L05 // pour l'instant\n * Date de publication 24/10/2021\n*/\nexport default function SolutionInequationQCM () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 1\n  this.spacing = 3\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.date = 1635094684684\n    let texte, texteCorr, a, b, maFraction, n, N\n    switch (choice([1, 2])) { //, 'b'\n      case 1 :// cas a>0\n        a = randint(2, 6)\n        n = randint(2, 7) * choice([-1, 1])\n        b = n * a\n        maFraction = fraction(-b, a)\n        N = choice(['a', 'b', 'c', 'd'])//, 'a', 'b'\n        if (N === 'a') {\n          texte = `L'inéquation ${sp(1)} $${reduireAxPlusB(a, b)}>0$ a pour ensemble de solutions :`\n          this.autoCorrection[0] = {\n            enonce: texte,\n            options: { vertical: true },\n            propositions: [\n              {\n                texte: `$\\\\bigg]${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: true\n              },\n              {\n                texte: `$\\\\bigg[${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: false\n              },\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ;${sp(1)} ${maFraction.texFractionSimplifiee} \\\\bigg[$ `,\n                statut: false\n              }\n            ]\n          }\n\n          texte += propositionsQcm(this, 0).texte\n\n          texteCorr = `L'ensemble de solutions est : $\\\\bigg]${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$<br>\n            En ajoutant $${ecritureParentheseSiNegatif(-b)}$ dans chaque membre, on obtient :<br>\n            $${a}x>${-b}$<br>\n            En divisant par $${a}$ dans chaque membre, on obtient :<br>\n            $x>${maFraction.texFractionSimplifiee}$<br>\n            Les solutions sont les nombres strictement supérieurs à $${maFraction.texFractionSimplifiee}$.   `\n        }\n        if (N === 'b') {\n          texte = `L'inéquation ${sp(1)} $${reduireAxPlusB(a, b)}\\\\geqslant 0$ a pour ensemble de solutions :`\n          this.autoCorrection[0] = {\n            enonce: texte,\n            options: { vertical: true },\n            propositions: [\n              {\n                texte: `$\\\\bigg[${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: true\n              },\n              {\n                texte: `$\\\\bigg]${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: false\n              },\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ;${sp(1)} ${maFraction.texFractionSimplifiee} \\\\bigg]$ `,\n                statut: false\n              }\n            ]\n          }\n\n          texte += propositionsQcm(this, 0).texte\n\n          texteCorr = `L'ensemble de solutions est : $\\\\bigg[${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$.<br>\n                    En ajoutant $${ecritureParentheseSiNegatif(-b)}$ dans chaque membre, on obtient :<br>\n                    $${a}x\\\\geqslant${-b}$<br>\n                    En divisant par $${a}$ dans chaque membre, on obtient :<br>\n                    $x\\\\geqslant${maFraction.texFractionSimplifiee}$<br>\n                    Les solutions sont les nombres  supérieurs ou égaux  à $${maFraction.texFractionSimplifiee}$.   `\n        }\n        if (N === 'c') {\n          texte = `L'inéquation ${sp(1)} $${reduireAxPlusB(a, b)}\\\\leqslant 0$ a pour ensemble de solutions :`\n          this.autoCorrection[0] = {\n            enonce: texte,\n            options: { vertical: true },\n            propositions: [\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ; ${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg]$ `,\n                statut: true\n              },\n              {\n                texte: `$\\\\bigg[${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: false\n              },\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ; ${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg[$ `,\n                statut: false\n              }\n            ]\n          }\n          texte += propositionsQcm(this, 0).texte\n          texteCorr = `L'ensemble de solutions est : $\\\\bigg]-\\\\infty${sp(1)} ; ${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg]$.<br>\n                      En ajoutant $${ecritureParentheseSiNegatif(-b)}$ dans chaque membre, on obtient :<br>\n                      $${a}x\\\\leqslant${-b}$<br>\n                      En divisant par $${a}$ dans chaque membre, on obtient :<br>\n                      $x\\\\leqslant${maFraction.texFractionSimplifiee}$<br>\n                      Les solutions sont les nombres  inférieurs ou égaux  à $${maFraction.texFractionSimplifiee}$.   `\n        }\n        if (N === 'd') {\n          texte = `L'inéquation ${sp(1)} $${reduireAxPlusB(a, b)}< 0$ a pour ensemble de solutions :`\n          this.autoCorrection[0] = {\n            enonce: texte,\n            options: { vertical: true },\n            propositions: [\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ; ${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg[$ `,\n                statut: true\n              },\n              {\n                texte: `$\\\\bigg]${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: false\n              },\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ; ${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg]$ `,\n                statut: false\n              }\n            ]\n          }\n\n          texte += propositionsQcm(this, 0).texte\n\n          texteCorr = `L'ensemble de solutions est : $\\\\bigg]-\\\\infty${sp(1)} ; ${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg[$.<br>\n                      En ajoutant $${ecritureParentheseSiNegatif(-b)}$ dans chaque membre, on obtient :<br>\n                      $${a}x<${-b}$<br>\n                      En divisant par $${a}$ dans chaque membre, on obtient :<br>\n                      $x<${maFraction.texFractionSimplifiee}$<br>\n                      Les solutions sont les nombres strictement inférieurs   à $${maFraction.texFractionSimplifiee}$.   `\n        }\n        break\n\n      case 2:// cas a<0\n        a = randint(-6, -2)\n        n = randint(2, 7) * choice([-1, 1])\n        b = n * a\n        maFraction = fraction(-b, a)\n        N = choice(['a', 'b', 'c', 'd'])//\n        if (N === 'a') {\n          texte = `L'inéquation ${sp(1)} $${reduireAxPlusB(a, b)}>0$ a pour ensemble de solutions :`\n          this.autoCorrection[0] = {\n            enonce: texte,\n            options: { vertical: true },\n            propositions: [\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ;${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg[$ `,\n                statut: true\n              },\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ;${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg]$ `,\n                statut: false\n              },\n              {\n                texte: `$\\\\bigg]${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: false\n              }\n            ]\n          }\n\n          texte += propositionsQcm(this, 0).texte\n\n          texteCorr = `L'ensemble de solutions est : $\\\\bigg]-\\\\infty${sp(1)} ;${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg[$.<br>\n            En ajoutant $${ecritureParentheseSiNegatif(-b)}$ dans chaque membre, on obtient :<br>\n            $${a}x>${-b}$<br>\n            En divisant par $(${a})$ dans chaque membre, on obtient :<br>\n            $x$${texteEnCouleur('$<$')}$${maFraction.texFractionSimplifiee}$ ${sp(3)} \n            ${texteEnCouleur('(quand on divise par un nombre strictement négatif, on change le sens de l’inégalité).')}<br>\n            Les solutions sont les nombres strictement inférieurs   à $${maFraction.texFractionSimplifiee}$. `\n        }\n        if (N === 'b') {\n          texte = `L'inéquation ${sp(1)} $${reduireAxPlusB(a, b)}\\\\geqslant 0$ a pour ensemble de solutions :`\n          this.autoCorrection[0] = {\n            enonce: texte,\n            options: { vertical: true },\n            propositions: [\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ;${sp(1)} ${maFraction.texFractionSimplifiee} \\\\bigg]$ `,\n                statut: true\n              },\n              {\n                texte: `$\\\\bigg[${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: false\n              },\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ;${sp(1)} ${maFraction.texFractionSimplifiee} \\\\bigg[$ `,\n                statut: false\n              }\n            ]\n          }\n\n          texte += propositionsQcm(this, 0).texte\n\n          texteCorr = `L'ensemble de solutions est : $\\\\bigg]-\\\\infty${sp(1)} ;${sp(1)} ${maFraction.texFractionSimplifiee} \\\\bigg]$.<br>\n          En ajoutant $${ecritureParentheseSiNegatif(-b)}$ dans chaque membre, on obtient :<br>\n          $${a}x\\\\geqslant${-b}$<br>\n          En divisant par $(${a})$ dans chaque membre, on obtient :<br>\n          $x$${texteEnCouleur('$\\\\leqslant$')}$${maFraction.texFractionSimplifiee}$ ${sp(3)} \n          ${texteEnCouleur('(quand on divise par un nombre strictement négatif, on change le sens de l’inégalité).')}<br>\n          Les solutions sont les nombres  inférieurs ou égaux  à $${maFraction.texFractionSimplifiee}$. `\n        }\n        if (N === 'c') {\n          texte = `L'inéquation ${sp(1)} $${reduireAxPlusB(a, b)}\\\\leqslant 0$ a pour ensemble de solutions :`\n          this.autoCorrection[0] = {\n            enonce: texte,\n            options: { vertical: true },\n            propositions: [\n              {\n                texte: `$\\\\bigg[${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: true\n              },\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ; ${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg]$ `,\n                statut: false\n              },\n              {\n                texte: `$\\\\bigg]${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: false\n              }\n            ]\n          }\n\n          texte += propositionsQcm(this, 0).texte\n\n          texteCorr = `L'ensemble de solutions est : $\\\\bigg[${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$.<br>\n          En ajoutant $${ecritureParentheseSiNegatif(-b)}$ dans chaque membre, on obtient :<br>\n          $${a}x\\\\leqslant${-b}$<br>\n          En divisant par $(${a})$ dans chaque membre, on obtient :<br>\n          $x$${texteEnCouleur('$\\\\geqslant$')}$${maFraction.texFractionSimplifiee}$ ${sp(3)} \n          ${texteEnCouleur('(quand on divise par un nombre strictement négatif, on change le sens de l’inégalité).')}<br>\n          Les solutions sont les nombres  supérieurs ou égaux  à $${maFraction.texFractionSimplifiee}$. `\n        }\n        if (N === 'd') {\n          texte = `L'inéquation ${sp(1)} $${reduireAxPlusB(a, b)}< 0$ a pour ensemble de solutions :`\n          this.autoCorrection[0] = {\n            enonce: texte,\n            options: { vertical: true },\n            propositions: [\n              {\n                texte: `$\\\\bigg]${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: true\n              },\n              {\n                texte: `$\\\\bigg]-\\\\infty${sp(1)} ; ${sp(1)}${maFraction.texFractionSimplifiee} \\\\bigg[$ `,\n                statut: false\n              },\n              {\n                texte: `$\\\\bigg[${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$ `,\n                statut: false\n              }\n            ]\n          }\n\n          texte += propositionsQcm(this, 0).texte\n\n          texteCorr = `L'ensemble de solutions est : $\\\\bigg]${maFraction.texFractionSimplifiee}${sp(1)} ;${sp(1)} +\\\\infty\\\\bigg[$.<br>\n                      En ajoutant $${ecritureParentheseSiNegatif(-b)}$ dans chaque membre, on obtient :<br>\n                      $${a}x<${-b}$<br>\n                      En divisant par $(${a})$ dans chaque membre, on obtient :<br>\n          $x$${texteEnCouleur('$>$')}$${maFraction.texFractionSimplifiee}$ ${sp(3)} \n          ${texteEnCouleur('(quand on divise par un nombre strictement négatif, on change le sens de l’inégalité).')}<br>\n          Les solutions sont les nombres strictement supérieurs   à $${maFraction.texFractionSimplifiee}$. `\n        }\n        break\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","SolutionInequationQCM","texte","texteCorr","a","b","maFraction","n","N","date","choice","randint","fraction","sp","reduireAxPlusB","enonce","options","vertical","propositions","texFractionSimplifiee","statut","propositionsQcm","ecritureParentheseSiNegatif","texteEnCouleur","listeQuestionsToContenu"],"sourceRoot":""}