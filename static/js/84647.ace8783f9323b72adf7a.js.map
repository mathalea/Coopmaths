{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R20.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","amcType","interactifReady","interactifType","titre","ExerciceAdditionsRelatifs","max","Exercice","this","sup","sup2","consigne","spacing","qcmDisponible","modeQcm","nouvelleVersion","parseInt","listeQuestions","listeCorrections","a","b","k","texte","texteCorr","i","cpt","nbQuestions","randint","choice","texNombre","ecritureAlgebrique","ecritureNombreRelatif","ecritureNombreRelatifc","autoCorrection","options","enonce","propositions","statut","interactif","propositionsQcm","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"mQAIO,MAAMA,GAAW,EACXC,EAAU,UACVC,GAAkB,EAClBC,EAAiB,MAEjBC,EAAQ,oCASN,SAASC,EAA2BC,EAAM,IACvDC,eAAcC,MACdA,KAAKC,IAAMH,EACXE,KAAKE,MAAO,EACZF,KAAKJ,MAAQA,EACbI,KAAKR,SAAWA,EAChBQ,KAAKP,QAAUA,EACfO,KAAKN,gBAAkBA,EACvBM,KAAKL,eAAiBA,EACtBK,KAAKG,SAAW,WAChBH,KAAKI,QAAU,EACfJ,KAAKK,eAAgB,EACrBL,KAAKM,SAAU,EAEfN,KAAKO,gBAAkB,WACrBP,KAAKC,IAAMO,SAASR,KAAKC,KACzBD,KAAKS,eAAiB,GACtBT,KAAKU,iBAAmB,GACxB,IAAK,IAAWC,EAAGC,EAAGC,EAAGC,EAAOC,EAAvBC,EAAI,EAA8BC,EAAM,EAAGD,EAAIhB,KAAKkB,aAAeD,EAAM,IAChFN,GAAIQ,SAAQ,EAAGnB,KAAKC,KACpBW,GAAIO,SAAQ,EAAGnB,KAAKC,KACpBY,GAAIO,SAAO,CAAC,EAAE,GAAI,GAAI,EAAE,EAAG,GAAI,CAAC,GAAI,KACpCT,GAAQE,EAAE,GACVD,GAAQC,EAAE,GACNb,KAAKE,MACPY,EAAS,MAAIO,SAAUV,MAAKW,SAAmBV,mBAC/CG,EAAa,KAAIJ,KAAIW,SAAmBV,QAAQD,EAAIC,QAEpDE,EAAQ,MAAOS,SAAsBZ,GAAK,OAAQY,SAAsBX,GAAK,iBAC7EG,EAAY,MAAOS,SAAuBb,GAAK,OAAQa,SAAuBZ,GAAK,OAAQY,SAAuBb,EAAIC,GAAK,MAE7HZ,KAAKyB,eAAeT,GAAK,GACzBhB,KAAKyB,eAAeT,GAAGU,QAAU,GACjC1B,KAAKyB,eAAeT,GAAGW,OAAU,GAAEb,MACnCd,KAAKyB,eAAeT,GAAGY,aAAe,CACpC,CACEd,MAAQ,IAAGH,EAAIC,KACfiB,QAAQ,GAEV,CACEf,MAAQ,IAAGH,EAAIC,KACfiB,QAAQ,GAEV,CACEf,MAAQ,KAAIH,EAAIC,KAChBiB,QAAQ,GAEV,CACEf,MAAQ,KAAIH,EAAIC,KAChBiB,QAAQ,IAGR7B,KAAK8B,aACPhB,IAASiB,QAAgB/B,KAAMgB,GAAGF,QAEQ,IAAxCd,KAAKS,eAAeuB,QAAQlB,KAC9Bd,KAAKS,eAAewB,KAAKnB,GACzBd,KAAKU,iBAAiBuB,KAAKlB,GAC3BC,KAEFC,KAEFiB,SAAwBlC,OAE1BA,KAAKmC,0BAA4B,CAAC,kBAAmB,OACrDnC,KAAKoC,6BAA+B,CAAC,oC,6BC7ExB,SAASrC,IAEtBC,KAAKJ,MAAQ,GACbI,KAAKG,SAAW,GAChBH,KAAKqC,mBAAqB,GAC1BrC,KAAKS,eAAiB,GACtBT,KAAKU,iBAAmB,GACxBV,KAAKsC,aAAe,GACpBtC,KAAKuC,QAAU,GACfvC,KAAKwC,kBAAoB,GACzBxC,KAAKkB,YAAc,GACnBlB,KAAKyC,OAAS,EACdzC,KAAK0C,WAAa,EAClB1C,KAAKI,QAAU,EACfJ,KAAK2C,YAAc,EACnB3C,KAAK4C,QAAS,EAEd5C,KAAKmC,2BAA4B,EACjCnC,KAAK6C,uBAAwB,EAC7B7C,KAAK8C,6BAA8B,EACnC9C,KAAK+C,4BAA6B,EAClC/C,KAAKgD,wBAAyB,EAC9BhD,KAAKoC,8BAA+B,EACpCpC,KAAKiD,4BAA6B,EAClCjD,KAAKkD,wBAAyB,EAC9BlD,KAAKmD,8BAA+B,EACpCnD,KAAKoD,oBAAqB,EAC1BpD,KAAKqD,uBAAwB,EAC7BrD,KAAKsD,kBAAmB,EACxBtD,KAAKuD,sBAAuB,EAC5BvD,KAAKwD,mBAAoB,EACzBxD,KAAKyD,uBAAwB,EAC7BzD,KAAK0D,+BAAgC,EACrC1D,KAAK2D,qBAAsB,EAC3B3D,KAAK4D,MAAQ,GACb5D,KAAK6D,YAAa,EAClB7D,KAAK8D,gBAAkB,GAMvB9D,KAAK+D,mBAAoB,EACzB/D,KAAK8B,YAAa,EAClB9B,KAAKgE,uBAAwB,EAC7BhE,KAAKiE,KAAM,EACXjE,KAAKK,eAAgB,EACrBL,KAAKM,SAAU,EACfN,KAAKyB,eAAiB,GACtBzB,KAAKkE,sBAAwB,GAC7BlE,KAAKmE,cAAe,EACpBnE,KAAKO,gBAAkB,SAAU6D,KACjCpE,KAAKqE,cAAgB,G","file":"js/84647.ace8783f9323b72adf7a.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureNombreRelatif, ecritureNombreRelatifc, ecritureAlgebrique, texNombre } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 'qcmMono' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\nexport const titre = 'Addition de deux entiers relatifs'\n\n/**\n* Additionner deux relatifs inférieurs à la valeur maximale en paramètre qui est par défaut à 20.\n*\n* Paramètre supplémentaire ; utilisation des écritures simplifiées\n* @author Rémi Angot\n* 5R20\n*/\nexport default function ExerciceAdditionsRelatifs (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    for (let i = 0, a, b, k, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(1, this.sup)\n      b = randint(1, this.sup)\n      k = choice([[-1, -1], [-1, 1], [1, -1]]) // Les deux nombres relatifs ne peuvent pas être tous les deux positifs\n      a = a * k[0]\n      b = b * k[1]\n      if (this.sup2) {\n        texte = `$ ${texNombre(a)}${ecritureAlgebrique(b)} = \\\\dotfill $`\n        texteCorr = `$ ${a}${ecritureAlgebrique(b)} = ${a + b} $`\n      } else {\n        texte = '$ ' + ecritureNombreRelatif(a) + ' + ' + ecritureNombreRelatif(b) + ' = \\\\dotfill $'\n        texteCorr = '$ ' + ecritureNombreRelatifc(a) + ' + ' + ecritureNombreRelatifc(b) + ' = ' + ecritureNombreRelatifc(a + b) + ' $'\n      }\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].options = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${a + b}$`,\n          statut: true\n        },\n        {\n          texte: `$${a - b}$`,\n          statut: false\n        },\n        {\n          texte: `$${-a + b}$`,\n          statut: false\n        },\n        {\n          texte: `$${-a - b}$`,\n          statut: false\n        }\n      ]\n      if (this.interactif) {\n        texte += propositionsQcm(this, i).texte\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}