{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G30.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["amcReady","amcType","titre","Calcul_de_longueur","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","correctionDetailleeDisponible","correctionDetaillee","sortieHtml","spacing","spacingCorr","nouvelleVersion","reponse","listeQuestions","listeCorrections","level","qcm","choix_rapport_trigo","ab","bc","ac","angleABC","angleABCr","nom","creerNomDePolygone","texte","texteCorr","objets_enonce","objets_correction","choice","randint","Math","PI","calcul","cos","sin","tan","a","point","b","c","p1","polygone","p2","rotation","A","listePoints","B","C","codage","codageAngleDroit","codeangle","nomme","nommePolygone","hypo","segment","epaisseur","color","codeAngle","m4","t1","t2","t3","M1","milieu","M2","M3","G","barycentre","m3","homothetie","longueur","m1","m2","latexParPoint","push","params_enonce","xmin","min","x","ymin","y","xmax","max","ymax","pixelsParCm","scale","mainlevee","amplitude","params_correction","mathalea2d","texFraction","texte_en_couleur_et_gras","quatriemeProportionnelle","texNombre","arrondi","digits","decimals","signe","exposant_nb_chiffres","exposant_signe","approx","listeQuestionsToContenu","besoinFormulaireCaseACocher","consigne","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"sNAIO,MAAMA,GAAW,EACXC,EAAU,EAEVC,EAAQ,kFASN,SAASC,IACpBC,eAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,YAAc,EACnBD,KAAKE,uBAAwB,EAC7BF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKK,KAAM,EACXL,KAAKM,+BAA8B,EACnCN,KAAKO,qBAAoB,EAErBC,YACAR,KAAKS,QAAU,EACfT,KAAKU,YAAc,IAEnBV,KAAKS,QAAU,EACfT,KAAKU,YAAc,GAGvBV,KAAKW,gBAAkB,WAGnB,IAAIC,EAFJZ,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GAIZ,GAAZd,KAAKe,MACLf,KAAKgB,IAAM,CAAC,OAAQ,GAAI,6CAA6C,GAGrEhB,KAAKgB,IAAM,CAAC,OAAQ,GAAI,6CAA6C,GAIrE,IAC4EC,EACxEC,EAAIC,EAAIC,EAAIC,EAAUC,EAFtBC,GAAMC,SAAmB,GACzBC,EAAQ,GAAIC,EAAY,GAAIC,EAAgB,GAAIC,EAAoB,GAaxE,OAVIX,EADc,GAAdjB,KAAKe,OACiBc,SAAO,CAAC,UAAW,gBAGnBA,SAAO,CAAC,UAAW,QAAS,WAAY,aAAc,WAAY,gBAE5FR,GAAWS,SAAQ,GAAI,IACvBR,EAAYD,EAAWU,KAAKC,GAAK,KAC5BxB,YAAYR,KAAKK,MAClBoB,GAAS,sCAELR,GACJ,IAAK,UACDE,GAAKW,SAAQ,GAAI,IACjBZ,GAAKe,SAAOd,EAAKY,KAAKG,IAAIZ,IAC1BF,GAAKa,SAAOd,EAAKY,KAAKI,IAAIb,IAC1BG,GAAU,qBAAoBF,oBAAsBA,EAAI,aAAaA,EAAI,GAAKA,EAAI,MAAMJ,uBAAwBI,MAAQF,kBACxHI,GAAU,aAAYF,EAAI,GAAKA,EAAI,2BACnC,MACJ,IAAK,QACDJ,GAAKW,SAAQ,GAAI,IACjBZ,GAAKe,SAAOd,EAAKY,KAAKG,IAAIZ,IAC1BF,GAAKa,SAAOd,EAAKY,KAAKI,IAAIb,IAC1BG,GAAU,qBAAoBF,oBAAsBA,EAAI,aAAaA,EAAI,GAAKA,EAAI,MAAMJ,uBAAwBI,MAAQF,kBACxHI,GAAU,aAAYF,EAAI,GAAKA,EAAI,2BACnC,MACJ,IAAK,WACDL,GAAKY,SAAQ,EAAE,IACfV,GAAKa,SAAOf,EAAKa,KAAKK,IAAId,IAC1BH,GAAKc,SAAOf,EAAKa,KAAKG,IAAIZ,IAC1BG,GAAU,qBAAoBF,oBAAsBA,EAAI,aAAaA,EAAI,GAAKA,EAAI,MAAML,uBAAwBK,MAAQF,kBACxHI,GAAU,aAAYF,EAAI,GAAKA,EAAI,2BACnC,MACJ,IAAK,aACDL,GAAKY,SAAQ,EAAE,IACfX,GAAKc,SAAOf,EAAKa,KAAKG,IAAIZ,IAC1BF,GAAKa,SAAOd,EAAKY,KAAKI,IAAIb,IAC1BG,GAAU,qBAAoBF,oBAAsBA,EAAI,aAAaA,EAAI,GAAKA,EAAI,MAAML,uBAAwBK,MAAQF,kBACxHI,GAAU,aAAYF,EAAI,GAAKA,EAAI,2BACnC,MACJ,IAAK,WACDH,GAAKU,SAAQ,EAAE,IACfX,GAAKc,SAAOb,EAAKW,KAAKI,IAAIb,IAC1BJ,GAAKe,SAAOd,EAAKY,KAAKG,IAAIZ,IAC1BG,GAAU,qBAAoBF,oBAAsBA,EAAI,aAAaA,EAAI,GAAKA,EAAI,MAAMH,uBAAwBG,MAAQF,kBACxHI,GAAU,aAAYF,EAAI,GAAKA,EAAI,2BACnC,MACJ,IAAK,cACDH,GAAKU,SAAQ,EAAE,IACfX,GAAKc,SAAOb,EAAKW,KAAKI,IAAIb,IAC1BJ,GAAKe,SAAOd,EAAKY,KAAKG,IAAIZ,IAC1BG,GAAU,qBAAoBF,oBAAsBA,EAAI,aAAaA,EAAI,GAAKA,EAAI,MAAMH,uBAAwBG,MAAQF,kBACxHI,GAAU,aAAYF,EAAI,GAAKA,EAAI,4BAItCf,YAAYR,KAAKK,MAClBoB,GAAS,uBAEb,IAAIY,GAAIC,SAAM,EAAG,GACbC,GAAID,SAAMpB,EAAI,GACdsB,GAAIF,SAAM,EAAGlB,GACbqB,GAAKC,SAASL,EAAGE,EAAGC,GAEpBG,GAAKC,SAASH,EAAIJ,GAAGP,SAAQ,EAAG,MAChCe,EAAIF,EAAGG,YAAY,GACnBC,EAAIJ,EAAGG,YAAY,GACnBE,EAAIL,EAAGG,YAAY,GACnBG,GAASC,SAAiBH,EAAGF,EAAGG,GACpCH,EAAEtB,IAAMA,EAAI,GAAIwB,EAAExB,IAAMA,EAAI,GAAIyB,EAAEzB,IAAMA,EAAI,GAC5C,IAAmC4B,EAA/BC,GAAQC,SAAcV,EAAIpB,GAC3B+B,GAAOC,SAAQP,EAAGD,GACrBO,EAAKE,UAAY,EACjBF,EAAKG,MAAQ,OAGfN,GAAUO,SAAUb,EAAEE,EAAEC,EAAE,GAC1B,IAOIW,EACAC,EAAGC,EAAGC,EARNC,GAAGC,SAAOnB,EAAEE,GACZkB,GAAGD,SAAOnB,EAAEG,GACZkB,GAAGF,SAAOjB,EAAEC,GACZmB,GAAEC,SAAWzB,GACb0B,GAAGC,SAAWJ,EAAGC,EAAE,EAAE,KAAII,SAASJ,EAAED,GAAI,KAAK,UAC7CM,GAAGF,SAAWP,EAAGG,EAAG,EAAE,KAAIK,SAASL,EAAGH,GAAI,KAAK,UAC/CU,GAAGH,SAAWL,EAAGC,EAAG,EAAE,KAAIK,SAASL,EAAGD,GAAI,KAAK,UAGnD,OAAQhD,GACN,IAAK,UACD6C,GAAGY,SAAe,GAAEvD,gBAAiBkD,EAAG,QAAQ,IAAI,GAAG,IACvDR,GAAGa,SAAe,IAAGF,EAAG,QAAQ,IAAI,GAAG,IACvCb,GAAGW,SAAWH,EAAEpB,EAAE,KAAIwB,SAASxB,EAAEoB,GAAG,KAAK,UACzCP,GAAGc,SAAe,GAAErD,YAAmBsC,EAAG,QAAQ,GAAG,GAAG,IACxD,MACJ,IAAK,QACDG,GAAGY,SAAe,GAAEvD,gBAAiBkD,EAAG,QAAQ,IAAI,GAAG,IACvDR,GAAGa,SAAe,IAAGD,EAAG,QAAQ,IAAI,GAAG,IACvCd,GAAGW,SAAWH,EAAEpB,EAAE,KAAIwB,SAASxB,EAAEoB,GAAG,KAAK,UACzCP,GAAGc,SAAe,GAAErD,YAAmBsC,EAAG,QAAQ,IAAI,GAAG,IACzD,MACJ,IAAK,WACDC,GAAGc,SAAe,GAAExD,gBAAiBsD,EAAG,QAAQ,IAAI,GAAG,IACvDX,GAAGa,SAAe,IAAGD,EAAG,QAAQ,IAAI,GAAG,IACvCd,GAAGW,SAAWH,EAAEpB,EAAE,KAAIwB,SAASxB,EAAEoB,GAAG,KAAK,UACzCL,GAAGY,SAAe,GAAErD,YAAmBsC,EAAG,QAAQ,IAAI,GAAG,IACzD,MACJ,IAAK,aACDC,GAAGc,SAAe,GAAExD,gBAAiBsD,EAAG,QAAQ,IAAI,GAAG,IACvDV,GAAGY,SAAe,IAAGL,EAAG,QAAQ,IAAI,GAAG,IACvCV,GAAGW,SAAWH,EAAEpB,EAAE,KAAIwB,SAASxB,EAAEoB,GAAG,KAAK,UACzCN,GAAGa,SAAe,GAAErD,YAAmBsC,EAAG,QAAQ,IAAI,GAAG,IACzD,MACJ,IAAK,WACDE,GAAGa,SAAe,GAAEtD,gBAAiBqD,EAAG,QAAQ,IAAI,GAAG,IACvDX,GAAGY,SAAe,IAAGL,EAAG,QAAQ,IAAI,GAAG,IACvCV,GAAGW,SAAWH,EAAEpB,EAAE,KAAIwB,SAASxB,EAAEoB,GAAG,KAAK,UACzCP,GAAGc,SAAe,GAAErD,YAAmBsC,EAAG,QAAQ,IAAI,GAAG,IACzD,MACJ,IAAK,cACDE,GAAGa,SAAe,GAAEtD,gBAAiBqD,EAAG,QAAQ,IAAI,GAAG,IACvDb,GAAGc,SAAe,IAAGF,EAAG,QAAQ,IAAI,GAAG,IACvCb,GAAGW,SAAWH,EAAEpB,EAAE,KAAIwB,SAASxB,EAAEoB,GAAG,KAAK,UACzCL,GAAGY,SAAe,GAAErD,YAAmBsC,EAAG,QAAQ,IAAI,GAAG,IAG7DhC,EAAcgD,KAAKhC,EAAIM,EAAQG,EAAMQ,EAAGC,EAAGC,EAAGX,GAC9CvB,EAAkB+C,KAAKhC,EAAIM,EAAQG,EAAOQ,EAAIC,EAAIC,EAAIR,EAAKH,GAE3D,IAAIyB,EAAgB,CAAEC,KAAM9C,KAAK+C,IAAIjC,EAAEkC,EAAGhC,EAAEgC,EAAG/B,EAAE+B,GAAK,EAAGC,KAAMjD,KAAK+C,IAAIjC,EAAEoC,EAAGlC,EAAEkC,EAAGjC,EAAEiC,GAAK,EAAGC,KAAMnD,KAAKoD,IAAItC,EAAEkC,EAAGhC,EAAEgC,EAAG/B,EAAE+B,GAAK,EAAGK,KAAMrD,KAAKoD,IAAItC,EAAEoC,EAAGlC,EAAEkC,EAAGjC,EAAEiC,GAAK,EAAGI,YAAa,GAAIC,MAAO,IAAMC,WAAW,EAAKC,UAAU,IACtNC,EAAoB,CAAEZ,KAAM9C,KAAK+C,IAAIjC,EAAEkC,EAAGhC,EAAEgC,EAAG/B,EAAE+B,GAAK,EAAGC,KAAMjD,KAAK+C,IAAIjC,EAAEoC,EAAGlC,EAAEkC,EAAGjC,EAAEiC,GAAK,EAAGC,KAAMnD,KAAKoD,IAAItC,EAAEkC,EAAGhC,EAAEgC,EAAG/B,EAAE+B,GAAK,EAAGK,KAAMrD,KAAKoD,IAAItC,EAAEoC,EAAGlC,EAAEkC,EAAGjC,EAAEiC,GAAK,EAAGI,YAAa,GAAIC,MAAO,IAAKC,WAAW,GAa9M,QAZK/E,YAAYR,KAAKK,MAClBoB,GAAS,sCAETzB,KAAKK,MACLoB,IAASiE,SAAWd,EAAejD,GAAiB,SAEnDnB,YAAYR,KAAKO,sBAClBmB,GAAa,sCAAqCgE,SAAWD,EAAmB7D,GAAnE,0DAEZpB,YAAYR,KAAKK,MAClBoB,GAAS,uBAELR,GACJ,IAAK,UACDS,GAAc,qBAAoBH,oBAAsBA,EAAI,6CAA6CA,2BACzGG,GAAc,0BAAyBH,sBAAwBA,EAAI,GAAKA,EAAI,OAAOA,EAAI,GAAKA,EAAI,YAChGG,GAAc,oCACdA,GAAc,wBAAuBL,wCAA8CsE,SAAYpE,EAAI,GAAKA,EAAI,GAAIJ,UAChHO,GAAc,IAAEkE,SAAyB,0CAA2C,aACpFlE,GAAc,IAAGH,EAAI,GAAKA,EAAI,OAAMsE,SAAyB,kBAAkB1E,EAAI,eAAcE,wBACjGK,GAAc,SAAQH,EAAI,GAAKA,EAAI,cAAauE,UAAUC,SAAQ7E,EAAI,WACtFN,GAASmF,SAAQ7E,EAAG,GACJ,MACJ,IAAK,QACDQ,GAAc,qBAAoBH,oBAAsBA,EAAI,2CAA2CA,2BACvGG,GAAc,2BAA0BH,eAAgBoE,SAAYpE,EAAI,GAAKA,EAAI,GAAIA,EAAI,GAAKA,EAAI,WAClGG,GAAc,oCACdA,GAAc,wBAAuBL,wCAA8CsE,SAAYpE,EAAI,GAAKA,EAAI,GAAIJ,UAChHO,GAAc,IAAEkE,SAAyB,0CAA2C,aACpFlE,GAAc,IAAGH,EAAI,GAAKA,EAAI,OAAMsE,SAAyB,kBAAmB1E,EAAK,eAAcE,wBACnGK,GAAc,SAAQH,EAAI,GAAKA,EAAI,cAAauE,UAAUC,SAAQ3E,EAAI,WACtER,GAASmF,SAAQ3E,EAAG,GACpB,MACJ,IAAK,WACDM,GAAc,qBAAoBH,oBAAsBA,EAAI,8CAA8CA,2BAC1GG,GAAc,2BAA0BH,eAAgBoE,SAAYpE,EAAI,GAAKA,EAAI,GAAIA,EAAI,GAAKA,EAAI,WAClGG,GAAc,oCACdA,GAAc,wBAAuBL,wCAA8CsE,SAAYpE,EAAI,GAAKA,EAAI,GAAIL,UAChHQ,GAAc,IAAEkE,SAAyB,0CAA2C,aACpFlE,GAAc,IAAGH,EAAI,GAAKA,EAAI,OAAMsE,SAAyB,kBAAmB3E,EAAK,eAAcG,wBACnGK,GAAc,SAAQH,EAAI,GAAKA,EAAI,cAAauE,UAAUC,SAAQ3E,EAAI,WACtER,GAASmF,SAAQ3E,EAAG,GACpB,MACJ,IAAK,aACDM,EAAa,qBAAoBH,oBAAsBA,EAAI,6CAA6CA,2BACxGG,GAAc,0BAAyBH,sBAAwBA,EAAI,GAAKA,EAAI,OAAOA,EAAI,GAAKA,EAAI,YAChGG,GAAc,oCACdA,GAAc,wBAAuBL,wCAA8CsE,SAAYzE,EAAIK,EAAI,GAAKA,EAAI,WAChHG,GAAc,IAAEkE,SAAyB,0CAA2C,aACpFlE,GAAc,IAAGH,EAAI,GAAKA,EAAI,OAAMsE,SAA0B,eAAcxE,oBAA4BH,EAAI,sBAC5GQ,GAAc,SAAQH,EAAI,GAAKA,EAAI,cAAauE,UAAUC,SAAQ5E,EAAI,WACtEP,GAASmF,SAAQ5E,EAAG,GACpB,MACJ,IAAK,WACDO,GAAc,qBAAoBH,oBAAsBA,EAAI,2CAA2CA,2BACvGG,GAAc,2BAA0BH,eAAgBoE,SAAYpE,EAAI,GAAKA,EAAI,GAAIA,EAAI,GAAKA,EAAI,WAClGG,GAAc,oCACdA,GAAc,wBAAuBL,wCAA8CsE,SAAYvE,EAAIG,EAAI,GAAKA,EAAI,WAChHG,GAAc,IAAEkE,SAAyB,0CAA2C,aACpFlE,GAAc,IAAGH,EAAI,GAAKA,EAAI,OAAMsE,SAA0B,eAAcxE,oBAA4BD,EAAI,sBAC5GM,GAAc,SAAQH,EAAI,GAAKA,EAAI,cAAauE,UAAUC,SAAQ5E,EAAI,WACtEP,GAASmF,SAAQ5E,EAAG,GACpB,MACJ,IAAK,cACDO,GAAc,qBAAoBH,oBAAsBA,EAAI,8CAA8CA,2BAC1GG,GAAc,2BAA0BH,eAAgBoE,SAAYpE,EAAI,GAAKA,EAAI,GAAIA,EAAI,GAAKA,EAAI,WAClGG,GAAc,oCACdA,GAAc,wBAAuBL,wCAA8CsE,SAAYvE,EAAIG,EAAI,GAAKA,EAAI,WAChHG,GAAc,IAAEkE,SAAyB,0CAA2C,aACpFlE,GAAc,IAAGH,EAAI,GAAKA,EAAI,OAAMsE,SAA0B,eAAcxE,oBAA4BD,EAAI,sBAC5GM,GAAc,SAAQH,EAAI,GAAKA,EAAI,cAAauE,UAAUC,SAAQ7E,EAAI,WACtEN,GAASmF,SAAQ7E,EAAG,IAG/BV,YAAYR,KAAKO,sBAClBmB,GAAW,uBAIP1B,KAAKgB,IAAI,GAAG,GAAK,CAACS,EAAO,CAACC,EAAUd,EAAQ,GAAI,CAACoF,OAAO,EAAEC,SAAS,EAAEC,OAAM,EAAMC,qBAAqB,EAAEC,gBAAe,EAAMC,OAAO,IAEpIrG,KAAKa,eAAe8D,KAAKlD,GACzBzB,KAAKc,iBAAiB6D,KAAKjD,IAC3B4E,SAAwBtG,OAG5BA,KAAKuG,4BAA8B,CAAC,uBAAuB,K,6BCrQhD,SAASxG,IAEtBC,KAAKH,MAAQ,GACbG,KAAKwG,SAAW,GAChBxG,KAAKyG,mBAAqB,GAC1BzG,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GACxBd,KAAK0G,aAAe,GACpB1G,KAAK2G,QAAU,GACf3G,KAAK4G,kBAAoB,GACzB5G,KAAKC,YAAc,GACnBD,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKS,QAAU,EACfT,KAAKU,YAAc,EACnBV,KAAK6G,QAAS,EAEd7G,KAAK8G,2BAA4B,EACjC9G,KAAK+G,uBAAwB,EAC7B/G,KAAKuG,6BAA8B,EACnCvG,KAAKgH,oBAAqB,EAC1BhH,KAAKE,uBAAwB,EAC7BF,KAAKiH,kBAAmB,EACxBjH,KAAKkH,sBAAuB,EAC5BlH,KAAKmH,mBAAoB,EACzBnH,KAAKoH,uBAAwB,EAC7BpH,KAAKM,+BAAgC,EACrCN,KAAKO,qBAAsB,EAC3BP,KAAKqH,MAAQ,GACbrH,KAAKsH,YAAa,EAClBtH,KAAKuH,gBAAkB,GAMvBvH,KAAKwH,mBAAoB,EACzBxH,KAAKgB,KAAM,EACXhB,KAAKyH,eAAgB,EACrBzH,KAAK0H,SAAU,EACf1H,KAAK2H,sBAAwB,GAC7B3H,KAAK4H,cAAe,EACpB5H,KAAKW,gBAAkB,SAAUkH,KACjC7H,KAAK8H,cAAgB,G","file":"js/6583.42611b35351fcbc654be.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {homothetie,codeAngle,longueur,barycentre,milieu,latexParPoint, mathalea2d, point, polygone, rotation, codageAngleDroit, nommePolygone, segment } from '../../modules/2d.js'\nimport { calcul, texFraction, quatriemeProportionnelle, texNombre, arrondi, texte_en_couleur_et_gras, listeQuestionsToContenu, randint, creerNomDePolygone, choice } from '../../modules/outils.js'\n\nexport const amcReady = true\nexport const amcType = 5 // type de question AMC\n\nexport const titre = 'Calculer une longueurs dans un triangle rectangle en utilisant la trigonométrie'\n\n/**\n * @auteur Jean-Claude Lhote à partir de 3G30-1 de Rémi Angot\n * 3G30 Exercice remplaçant l'exercice initial utilisant MG32\n * Calculer une longueur en utilisant l'un des trois rapport trigonométrique.\n * * Si this.level=4 alors seul le cosinus sera utilisé.\n * Mars 2021\n */\nexport default function Calcul_de_longueur() {\n    Exercice.call(this)\n    this.titre = titre;\n    this.nbQuestions = 1;\n    this.nbQuestionsModifiable = false;\n    this.nbCols = 1;\n    this.nbColsCorr = 1;\n    this.sup = false\n    this.correctionDetailleeDisponible=true\n    this.correctionDetaillee=false\n\n    if (sortieHtml) {\n        this.spacing = 0;\n        this.spacingCorr = 0;\n    } else {\n        this.spacing = 2;\n        this.spacingCorr = 2;\n    }\n\n    this.nouvelleVersion = function () {\n        this.listeQuestions = []\n        this.listeCorrections = []\n        let reponse\n    /*********************************************************/\n    // On ajoute cette ligne pour AMC\n    if (this.level!=4){\n        this.qcm = ['3G30', [], 'Calculs de longueurs avec la trigonométrie',5]\n    }\n    else {\n        this.qcm = ['4G40', [], 'Calculs de longueurs avec la trigonométrie',5]\n    }\n    /**********************************************************/\n\n        let nom = creerNomDePolygone(3)\n        let texte = '', texteCorr = '', objets_enonce = [], objets_correction = [], choix_rapport_trigo;\n        let ab, bc, ac, angleABC, angleABCr\n        if (this.level == 4) {\n            choix_rapport_trigo = choice(['cosinus', 'invCosinus'])\n        }\n        else {\n            choix_rapport_trigo = choice(['cosinus', 'sinus', 'tangente', 'invCosinus', 'invSinus', 'invTangente'])\n        }\n        angleABC = randint(35, 55)\n        angleABCr = angleABC * Math.PI / 180\n        if (!sortieHtml&&this.sup) {\n            texte += '\\\\begin{minipage}{.7\\\\linewidth}\\n'\n        }\n        switch (choix_rapport_trigo) {\n            case 'cosinus': // AB=BCxcos(B)\n                bc = randint(10, 15)\n                ab = calcul(bc * Math.cos(angleABCr))\n                ac = calcul(bc * Math.sin(angleABCr))\n                texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[1] + nom[2]}=${bc}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n                texte += `Calculer $${nom[0] + nom[1]}$ à $0,1$ cm près.<br>`\n                break\n            case 'sinus':\n                bc = randint(10, 15)\n                ab = calcul(bc * Math.cos(angleABCr))\n                ac = calcul(bc * Math.sin(angleABCr))\n                texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[1] + nom[2]}=${bc}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n                texte += `Calculer $${nom[0] + nom[2]}$ à $0,1$ cm près.<br>`\n                break\n            case 'tangente':\n                ab = randint(7,10)\n                ac = calcul(ab * Math.tan(angleABCr))\n                bc = calcul(ab / Math.cos(angleABCr))\n                texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[0] + nom[1]}=${ab}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n                texte += `Calculer $${nom[0] + nom[2]}$ à $0,1$ cm près.<br>`\n                break\n            case 'invCosinus':\n                ab = randint(7,10)\n                bc = calcul(ab / Math.cos(angleABCr))\n                ac = calcul(bc * Math.sin(angleABCr))\n                texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[0] + nom[1]}=${ab}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n                texte += `Calculer $${nom[1] + nom[2]}$ à $0,1$ cm près.<br>`\n                break\n            case 'invSinus':\n                ac = randint(7,10)\n                bc = calcul(ac / Math.sin(angleABCr))\n                ab = calcul(bc * Math.cos(angleABCr))\n                texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[0] + nom[2]}=${ac}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n                texte += `Calculer $${nom[1] + nom[2]}$ à $0,1$ cm près.<br>`\n                break\n            case 'invTangente':\n                ac = randint(7,10)\n                bc = calcul(ac / Math.sin(angleABCr))\n                ab = calcul(bc * Math.cos(angleABCr))\n                texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> $${nom[0] + nom[2]}=${ac}$ cm et $\\\\widehat{${nom}}=${angleABC}\\\\degree$.<br>`\n                texte += `Calculer $${nom[0] + nom[1]}$ à $0,1$ cm près.<br>`\n                break\n        }\n\n        if (!sortieHtml&&this.sup) {\n            texte += '\\n\\\\end{minipage}\\n'\n        }\n        let a = point(0, 0)\n        let b = point(ab, 0)\n        let c = point(0, ac)\n        let p1 = polygone(a, b, c)\n        //p1.isVisible = false\n        let p2 = rotation(p1, a, randint(0, 360))\n        let A = p2.listePoints[0]\n        let B = p2.listePoints[1]\n        let C = p2.listePoints[2]\n        let codage = codageAngleDroit(B, A, C)\n        A.nom = nom[0], B.nom = nom[1], C.nom = nom[2];\n        let nomme = nommePolygone(p2, nom),codeangle\n       let hypo = segment(C, B)\n        hypo.epaisseur = 2\n        hypo.color = 'blue'\n     //   codageAngle.epaisseur = 3\n      //  codageAngle2.epaisseur = 3\n      codeangle=codeAngle(A,B,C,2)\n      let M1=milieu(A,B)\n      let M2=milieu(A,C)\n      let M3=milieu(B,C)\n      let G=barycentre(p2)\n      let m3=homothetie(M3,G,1+1.5/longueur(G,M3),'m3','center')\n      let m1=homothetie(M1,M3,1+1.5/longueur(M3,M1),'m1','center')\n      let m2=homothetie(M2,M3,1+1.5/longueur(M3,M2),'m2','center')\n      let m4\n      let t1,t2,t3\n      switch (choix_rapport_trigo) {\n        case 'cosinus': // AB=BCxcos(B)\n            t3=latexParPoint(`${bc} \\\\text{ cm}`,m3,'black',120,12,'')\n            t2=latexParPoint(`?`,m1,'black',120,12,'')\n            m4=homothetie(G,B,2.7/longueur(B,G),'B2','center')\n            t1=latexParPoint(`${angleABC}\\\\degree`,m4,'black',20,12,'')\n            break\n        case 'sinus':\n            t3=latexParPoint(`${bc} \\\\text{ cm}`,m3,'black',120,12,'')\n            t2=latexParPoint(`?`,m2,'black',120,12,'')\n            m4=homothetie(G,B,2.7/longueur(B,G),'B2','center')\n            t1=latexParPoint(`${angleABC}\\\\degree`,m4,'black',100,12,'')\n            break\n        case 'tangente':\n            t1=latexParPoint(`${ab} \\\\text{ cm}`,m1,'black',120,12,'')\n            t2=latexParPoint(`?`,m2,'black',120,12,'')\n            m4=homothetie(G,B,2.7/longueur(B,G),'B2','center')\n            t3=latexParPoint(`${angleABC}\\\\degree`,m4,'black',100,12,'')\n            break\n        case 'invCosinus':\n            t1=latexParPoint(`${ab} \\\\text{ cm}`,m1,'black',120,12,'')\n            t3=latexParPoint(`?`,m3,'black',120,12,'')\n            m4=homothetie(G,B,2.7/longueur(B,G),'B2','center')\n            t2=latexParPoint(`${angleABC}\\\\degree`,m4,'black',100,12,'')\n            break\n        case 'invSinus':\n            t2=latexParPoint(`${ac} \\\\text{ cm}`,m2,'black',120,12,'')\n            t3=latexParPoint(`?`,m3,'black',120,12,'')\n            m4=homothetie(G,B,2.7/longueur(B,G),'B2','center')\n            t1=latexParPoint(`${angleABC}\\\\degree`,m4,'black',100,12,'')\n            break\n        case 'invTangente':\n            t2=latexParPoint(`${ac} \\\\text{ cm}`,m2,'black',120,12,'')\n            t1=latexParPoint(`?`,m1,'black',120,12,'')\n            m4=homothetie(G,B,2.7/longueur(B,G),'B2','center')\n            t3=latexParPoint(`${angleABC}\\\\degree`,m4,'black',100,12,'')\n            break\n    }\n        objets_enonce.push(p2, codage, nomme,t1,t2,t3,codeangle)\n        objets_correction.push(p2, codage, nomme, t1, t2, t3, hypo,codeangle)\n\n        let params_enonce = { xmin: Math.min(A.x, B.x, C.x) - 4, ymin: Math.min(A.y, B.y, C.y) - 4, xmax: Math.max(A.x, B.x, C.x) + 2, ymax: Math.max(A.y, B.y, C.y) + 2, pixelsParCm: 20, scale: 0.37, mainlevee: true,amplitude:0.4 }\n        let params_correction = { xmin: Math.min(A.x, B.x, C.x) - 4, ymin: Math.min(A.y, B.y, C.y) - 4, xmax: Math.max(A.x, B.x, C.x) + 2, ymax: Math.max(A.y, B.y, C.y) + 2, pixelsParCm: 20, scale: .35, mainlevee: false }\n        if (!sortieHtml&&this.sup) {\n            texte += '\\\\begin{minipage}{.3\\\\linewidth}\\n'\n        }\n        if (this.sup) {\n            texte += mathalea2d(params_enonce, objets_enonce) + '<br>'\n        }\n        if (!sortieHtml&&this.correctionDetaillee){\n            texteCorr += '\\\\begin{minipage}{.4\\\\linewidth}\\n'+mathalea2d(params_correction, objets_correction)+'\\n\\\\end{minipage}\\n'+'\\\\begin{minipage}{.7\\\\linewidth}\\n'\n            }\n        if (!sortieHtml&&this.sup) {\n            texte += '\\n\\\\end{minipage}\\n'\n        }\n        switch (choix_rapport_trigo) {\n            case 'cosinus': // AB=BCxcos(B)\n                texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> le cosinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n                texteCorr += `$\\\\cos\\\\left(\\\\widehat{${nom}}\\\\right)=\\\\dfrac{${nom[0] + nom[1]}}{${nom[1] + nom[2]}}$.<br>`\n                texteCorr += `Avec les données numériques :<br>`;\n                texteCorr += `$\\\\dfrac{\\\\cos\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(nom[0] + nom[1], bc)}$<br>`;\n                texteCorr += `${texte_en_couleur_et_gras('Les produits en croix sont égaux, donc ', 'red')}<br>`;\n                texteCorr += `$${nom[0] + nom[1]}=${quatriemeProportionnelle(\"\\\\color{red}{1}\",bc,`\\\\cos\\\\left(${angleABC}\\\\degree\\\\right)`)}$`;\n                texteCorr += `soit $${nom[0] + nom[1]}\\\\approx${texNombre(arrondi(ab, 1))}$ cm.`;\nreponse =arrondi(ab,1)\n                break\n            case 'sinus':\n                texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> le sinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`;\n                texteCorr += `$\\\\sin \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[1] + nom[2])}$<br>`;\n                texteCorr += `Avec les données numériques :<br>`;\n                texteCorr += `$\\\\dfrac{\\\\sin\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(nom[0] + nom[2], bc)}$<br>`;\n                texteCorr += `${texte_en_couleur_et_gras('Les produits en croix sont égaux, donc ', 'red')}<br>`;\n                texteCorr += `$${nom[0] + nom[2]}=${quatriemeProportionnelle(\"\\\\color{red}{1}\", bc, `\\\\sin\\\\left(${angleABC}\\\\degree\\\\right)`)}$`;\n                texteCorr += `soit $${nom[0] + nom[2]}\\\\approx${texNombre(arrondi(ac, 1))}$ cm.`;\n                reponse =arrondi(ac,1)\n                break\n            case 'tangente':\n                texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> la tangente de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`;\n                texteCorr += `$\\\\tan \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[0] + nom[1])}$<br>`;\n                texteCorr += `Avec les données numériques :<br>`;\n                texteCorr += `$\\\\dfrac{\\\\tan\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(nom[0] + nom[2], ab)}$<br>`;\n                texteCorr += `${texte_en_couleur_et_gras('Les produits en croix sont égaux, donc ', 'red')}<br>`;\n                texteCorr += `$${nom[0] + nom[2]}=${quatriemeProportionnelle(\"\\\\color{red}{1}\", ab, `\\\\tan\\\\left(${angleABC}\\\\degree\\\\right)`)}$`;\n                texteCorr += `soit $${nom[0] + nom[2]}\\\\approx${texNombre(arrondi(ac, 1))}$ cm.`;\n                reponse =arrondi(ac,1)\n                break\n            case 'invCosinus':\n                texteCorr = `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> le cosinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n                texteCorr += `$\\\\cos\\\\left(\\\\widehat{${nom}}\\\\right)=\\\\dfrac{${nom[0] + nom[1]}}{${nom[1] + nom[2]}}$.<br>`\n                texteCorr += `Avec les données numériques :<br>`;\n                texteCorr += `$\\\\dfrac{\\\\cos\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(ab, nom[1] + nom[2])}$<br>`;\n                texteCorr += `${texte_en_couleur_et_gras('Les produits en croix sont égaux, donc ', 'red')}<br>`;\n                texteCorr += `$${nom[1] + nom[2]}=${quatriemeProportionnelle(`\\\\cos\\\\left(${angleABC}\\\\degree\\\\right)`, ab, \"\\\\color{red}{1}\")}$`;\n                texteCorr += `soit $${nom[1] + nom[2]}\\\\approx${texNombre(arrondi(bc, 1))}$ cm.`;\n                reponse =arrondi(bc,1)\n                break\n            case 'invSinus':\n                texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> le sinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`;\n                texteCorr += `$\\\\sin \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[1] + nom[2])}$<br>`;\n                texteCorr += `Avec les données numériques :<br>`;\n                texteCorr += `$\\\\dfrac{\\\\sin\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(ac, nom[1] + nom[2])}$<br>`;\n                texteCorr += `${texte_en_couleur_et_gras('Les produits en croix sont égaux, donc ', 'red')}<br>`;\n                texteCorr += `$${nom[1] + nom[2]}=${quatriemeProportionnelle(`\\\\sin\\\\left(${angleABC}\\\\degree\\\\right)`, ac, \"\\\\color{red}{1}\")}$`;\n                texteCorr += `soit $${nom[1] + nom[2]}\\\\approx${texNombre(arrondi(bc, 1))}$ cm.`;\n                reponse =arrondi(bc,1)\n                break\n            case 'invTangente':\n                texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,<br> la tangente de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`;\n                texteCorr += `$\\\\tan \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[0] + nom[1])}$<br>`;\n                texteCorr += `Avec les données numériques :<br>`;\n                texteCorr += `$\\\\dfrac{\\\\tan\\\\left(${angleABC}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(ac, nom[0] + nom[1])}$<br>`;\n                texteCorr += `${texte_en_couleur_et_gras('Les produits en croix sont égaux, donc ', 'red')}<br>`;\n                texteCorr += `$${nom[0] + nom[1]}=${quatriemeProportionnelle(`\\\\tan\\\\left(${angleABC}\\\\degree\\\\right)`, ac, \"\\\\color{red}{1}\")}$`;\n                texteCorr += `soit $${nom[0] + nom[1]}\\\\approx${texNombre(arrondi(ab, 1))}$ cm.`;\n                reponse =arrondi(ab,1)\n                break\n        }\nif (!sortieHtml&&this.correctionDetaillee) {\n    texteCorr+='\\n\\\\end{minipage}\\n'\n}\n        /*****************************************************/\n        // Pour AMC\n        this.qcm[1][0] = [texte, [texteCorr,reponse,4], {digits:3,decimals:1,signe:false,exposant_nb_chiffres:0,exposant_signe:false,approx:1}]\n        /****************************************************/\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        listeQuestionsToContenu(this); // On envoie l'exercice à la fonction de mise en page\n    };\n\n    this.besoinFormulaireCaseACocher = ['Figure à main levée', false];\n}  ","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}