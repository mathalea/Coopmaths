{"version":3,"file":"js/83713.44e07f8ad447c7bc8c62.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4L20.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, rienSi1, ecritureAlgebrique, ecritureParentheseSiNegatif, signe, abs, pgcd, texFractionReduite, miseEnEvidence, texFraction, lampeMessage, nombreDeChiffresDansLaPartieEntiere } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { fraction } from '../../modules/fractions.js'\n\nexport const titre = 'Équation du premier degré'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n/**\n * Équation du premier degré\n * * Type 1 : x+a=b ou ax=b\n * * Type 2 : ax+b=c\n * * Type 3 : ax+b=cx+d\n * * Tous les types\n * @author Rémi Angot\n * 4L20 et 3L13\n */\nexport default function ExerciceEquation1 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre les équations suivantes'\n  this.spacing = 2\n  this.interactif = true\n  this.interactifType = 'mathLive'\n  context.isHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 2)\n  this.correctionDetailleeDisponible = true\n  if (!context.isHtml) {\n    this.correctionDetaillee = false\n  } else {\n    this.correctionDetaillee = true\n  }\n  this.sup = true // Avec des nombres relatifs\n  this.sup2 = 4 // Choix du type d'équation\n  this.nbQuestions = 6\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.introduction = lampeMessage({\n      titre: 'Calculatrice autorisée.',\n      texte: `Résoudre les équations au brouillon et écrire les solutions dans les cases.<br> Pour une solution comme 0,333... seule une fraction (par ex : $${texFraction(1, 3)})$ est correcte`,\n      couleur: 'nombres'\n    })\n    let listeTypeDeQuestions\n    switch (this.sup2.toString()) {\n      case '1':\n        listeTypeDeQuestions = ['ax=b', 'x+b=c']\n        break\n      case '2':\n        listeTypeDeQuestions = ['ax+b=c']\n        break\n      case '3':\n        listeTypeDeQuestions = ['ax+b=cx+d']\n        break\n      default:\n        listeTypeDeQuestions = [\n          'ax+b=0',\n          'ax+b=c',\n          'ax=b',\n          'x+b=c',\n          'ax+b=cx+d'\n        ]\n        break\n    }\n    listeTypeDeQuestions = combinaisonListes(\n      listeTypeDeQuestions,\n      this.nbQuestions\n    )\n    for (let i = 0, a, b, c, d, texte, texteCorr, reponse, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(2, 13)\n      b = randint(1, 13)\n      c = randint(1, 13)\n      d = randint(1, 13)\n      if (this.sup) {\n        a *= choice([-1, 1])\n        b *= choice([-1, 1])\n        c *= choice([-1, 1])\n        d *= choice([-1, 1])\n      }\n      if (listeTypeDeQuestions[i] === 'ax+b=0' ||\n        listeTypeDeQuestions[i] === 'ax+b=c') {\n        if (listeTypeDeQuestions[i] === 'ax+b=0') {\n          c = 0\n        }\n        do {\n          a = randint(2, 13)\n        } while (Math.abs(c - b) % a === 0)\n        if (this.sup) {\n          a *= choice([-1, 1])\n        }\n        if (!this.sup && c < b) { // Si c-b < 0 et que l'on ne veut pas de relatif, on échange c et b.\n          if (c === 0) { // si c=0, on change le signe de b, pour garder c=0\n            b *= -1\n          } else {\n            d = b\n            b = c\n            c = d\n          }\n        }\n        texte = `$${a}x${ecritureAlgebrique(b)}=${c}$`\n        texteCorr = texte\n        texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline', { texte: '<br>$ x = $ ' })\n        if (this.correctionDetaillee) {\n          if (b > 0) {\n            texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${a}x${ecritureAlgebrique(b)}${miseEnEvidence(\n          ecritureAlgebrique(-1 * b)\n        )}=${c}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n        texteCorr += `$${a}x=${c - b}$<br>`\n        if (this.correctionDetaillee) {\n          texteCorr += `On divise les deux membres par $${a}$.<br>`\n        }\n        texteCorr += `$${a}x${miseEnEvidence(\n          '\\\\div' + ecritureParentheseSiNegatif(a)\n        )}=${c - b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a))}$<br>`\n        texteCorr += `$x=${texFraction(c - b, a)}$`\n        if (pgcd(abs(a), abs(c - b)) > 1 || a < 0) {\n          texteCorr += `<br>$x=${texFractionReduite(c - b, a)}$`\n        }\n        texteCorr += `<br> La solution est $${texFractionReduite(\n          c - b,\n          a\n        )}$.`\n        reponse = fraction(c - b, a).simplifie()\n        if (!context.isAmc) {\n          setReponse(this, i, reponse, { formatInteractif: 'fractionEgale' })\n        } else {\n          this.autoCorrection[i] = {\n            enonce: `Résoudre ${texte} et donner la solution sous la forme d'une fraction irréductible`,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: texteCorr,\n                  statut: '',\n                  reponse: {\n                    texte: 'Numérateur ',\n                    valeur: reponse.signe * Math.abs(reponse.num),\n                    param: {\n                      digits: nombreDeChiffresDansLaPartieEntiere(Math.abs(reponse.num)),\n                      decimals: 0,\n                      signe: this.sup,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: '',\n                  statut: '',\n                  reponse: {\n                    texte: 'Dénominateur',\n                    valeur: reponse.den,\n                    param: {\n                      digits: nombreDeChiffresDansLaPartieEntiere(reponse.den),\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n        }\n      }\n      if (listeTypeDeQuestions[i] === 'x+b=c') {\n        if (!this.sup && c < b) {\n          b = randint(-9, 9, [0]) // b peut être négatif, ça sera une équation du type x-b=c\n          c = abs(randint(b, 15)) // c sera plus grand que b pour que c-b>0\n        }\n        texte = `$x${ecritureAlgebrique(b)}=${c}$`\n        texteCorr = texte\n        texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline', { texte: '<br>$ x = $ ' })\n        if (this.correctionDetaillee) {\n          if (b > 0) {\n            texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$x${ecritureAlgebrique(b)}${miseEnEvidence(\n          ecritureAlgebrique(-1 * b)\n        )}=${c}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n        texteCorr += `$x=${c - b}$`\n        texteCorr += `<br> La solution est $${c - b}$.`\n        reponse = c - b\n        if (!context.isAmc) {\n          setReponse(this, i, fraction(c - b, 1), { formatInteractif: 'fractionEgale' })\n        } else {\n          this.autoCorrection[i] = {\n            enonce: `Résoudre ${texte} et coder la solution`,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: texteCorr,\n                  statut: '',\n                  reponse: {\n                    texte: 'Solution : ',\n                    valeur: reponse,\n                    param: {\n                      digits: nombreDeChiffresDansLaPartieEntiere(reponse),\n                      decimals: 0,\n                      signe: this.sup,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n        }\n      }\n      if (listeTypeDeQuestions[i] === 'ax=b') {\n        do {\n          a = randint(2, 13)\n          b = randint(1, 13)\n        } while (b % a === 0)\n        if (this.sup) {\n          a *= choice([-1, 1])\n          b *= choice([-1, 1])\n        }\n        texte = `$${a}x=${b}$`\n        texteCorr = texte\n        texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline', { texte: '<br>$ x = $ ' })\n        if (this.correctionDetaillee) {\n          texteCorr += `On divise les deux membres par $${a}$.<br>`\n        }\n        texteCorr += `$${a}x${miseEnEvidence(\n          '\\\\div' + ecritureParentheseSiNegatif(a)\n        )}=${b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a))}$<br>`\n        texteCorr += `$x=${texFraction(b, a)}$`\n        if (pgcd(abs(a), abs(b)) > 1 || a < 0) {\n          texteCorr += `<br>$x=${texFractionReduite(b, a)}$`\n        }\n        texteCorr += `<br> La solution est $${texFractionReduite(b, a)}$.`\n        reponse = fraction(b, a).simplifie()\n        if (!context.isAmc) {\n          setReponse(this, i, reponse, { formatInteractif: 'fractionEgale' })\n        } else {\n          this.autoCorrection[i] = {\n            enonce: `Résoudre ${texte} et donner la solution sous la forme d'une fraction irréductible`,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: texteCorr,\n                  statut: '',\n                  reponse: {\n                    texte: 'Numérateur ',\n                    valeur: reponse.signe * Math.abs(reponse.num),\n                    param: {\n                      digits: nombreDeChiffresDansLaPartieEntiere(Math.abs(reponse.num)),\n                      decimals: 0,\n                      signe: this.sup,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: '',\n                  statut: '',\n                  reponse: {\n                    texte: 'Dénominateur',\n                    valeur: reponse.den,\n                    param: {\n                      digits: nombreDeChiffresDansLaPartieEntiere(reponse.den),\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n        }\n      }\n      if (listeTypeDeQuestions[i] === 'ax+b=cx+d') {\n        do {\n          a = randint(2, 13)\n          b = randint(1, 13)\n          c = randint(1, 13)\n          d = randint(1, 13)\n\n          if (c === a) {\n            c = randint(1, 13, [a])\n          } // sinon on arrive à une division par 0\n          if (!this.sup && a < c) {\n            c = randint(1, 9)\n            a = randint(c + 1, 15) // a sera plus grand que c pour que a-c>0\n          }\n          if (!this.sup && d < b) {\n            b = randint(1, 9)\n            d = randint(b + 1, 15) // d sera plus grand que b pour que d-b>0\n          }\n        } while ((d - b) % (a - c) === 0)\n        texte = `$${rienSi1(a)}x${ecritureAlgebrique(b)}=${rienSi1(\n          c\n        )}x${ecritureAlgebrique(d)}$`\n        texteCorr = texte\n        texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline', { texte: '<br>$ x = $ ' })\n        if (this.correctionDetaillee) {\n          if (c > 0) {\n            texteCorr += `On soustrait $${rienSi1(\n              c\n            )}x$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${rienSi1(\n              -1 * c\n            )}x$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${rienSi1(a)}x${ecritureAlgebrique(\n          b\n        )}${miseEnEvidence(\n          signe(-1 * c) + rienSi1(abs(c)) + 'x'\n        )}=${c}x${ecritureAlgebrique(d)}${miseEnEvidence(\n          signe(-1 * c) + rienSi1(abs(c)) + 'x'\n        )}$<br>`\n        texteCorr += `$${rienSi1(a - c)}x${ecritureAlgebrique(\n          b\n        )}=${d}$<br>`\n        if (this.correctionDetaillee) {\n          if (b > 0) {\n            texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${rienSi1(a - c)}x${ecritureAlgebrique(\n          b\n        )}${miseEnEvidence(\n          ecritureAlgebrique(-1 * b)\n        )}=${d}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n        texteCorr += `$${rienSi1(a - c)}x=${d - b}$<br>`\n\n        if (this.correctionDetaillee) {\n          texteCorr += `On divise les deux membres par $${a - c}$.<br>`\n        }\n        texteCorr += `$${rienSi1(a - c)}x${miseEnEvidence(\n          '\\\\div' + ecritureParentheseSiNegatif(a - c)\n        )}=${d -\n        b +\n        miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a - c))}$<br>`\n        texteCorr += `$x=${texFraction(d - b, a - c)}$`\n        if (pgcd(abs(d - b), abs(a - c)) > 1 || a - c < 0) {\n          texteCorr += `<br>$x=${texFractionReduite(d - b, a - c)}$`\n        }\n        texteCorr += `<br> La solution est $${texFractionReduite(\n          d - b,\n          a - c\n        )}$.`\n        reponse = fraction(d - b, a - c).simplifie()\n        if (!context.isAmc) {\n          setReponse(this, i, reponse, { formatInteractif: 'fractionEgale' })\n        } else {\n          this.autoCorrection[i] = {\n            enonce: `Résoudre ${texte} et donner la solution sous la forme d'une fraction irréductible`,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: texteCorr,\n                  statut: '',\n                  reponse: {\n                    texte: 'Numérateur ',\n                    valeur: reponse.signe * Math.abs(reponse.num),\n                    param: {\n                      digits: nombreDeChiffresDansLaPartieEntiere(Math.abs(reponse.num)),\n                      decimals: 0,\n                      signe: this.sup,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: '',\n                  statut: '',\n                  reponse: {\n                    texte: 'Dénominateur',\n                    valeur: reponse.den,\n                    param: {\n                      digits: nombreDeChiffresDansLaPartieEntiere(reponse.den),\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte) // replace(/1x/g,'x')); //remplace 1x par x\n        this.listeCorrections.push(texteCorr) // .replace(/1x/g,'x')); //remplace 1x par x\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Avec des nombres relatifs']\n  this.besoinFormulaire2Numerique = [\n    \"Type d'équations\",\n    4,\n    '1 : ax=b ou x+a=b ou x-a=b\\n2: ax+b=c\\n3: ax+b=cx+d\\n4: Les 2 types précédents'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","ExerciceEquation1","Exercice","this","consigne","spacing","interactif","context","spacingCorr","correctionDetailleeDisponible","correctionDetaillee","sup","sup2","nbQuestions","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","introduction","lampeMessage","texte","texFraction","couleur","toString","combinaisonListes","a","b","c","d","texteCorr","reponse","i","cpt","randint","choice","Math","abs","ecritureAlgebrique","ajouteChampTexteMathLive","miseEnEvidence","ecritureParentheseSiNegatif","pgcd","texFractionReduite","fraction","simplifie","autoCorrection","enonce","propositions","type","statut","valeur","signe","num","param","digits","nombreDeChiffresDansLaPartieEntiere","decimals","approx","den","setReponse","formatInteractif","rienSi1","indexOf","push","listeQuestionsToContenu","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","boutonAide","consigneCorrection","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined"],"sourceRoot":""}