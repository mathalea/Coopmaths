/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_beta_beta3F23_js"],{

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice() {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigneCorrection = '';\n  this.listeQuestions = [];\n  this.listeCorrections = [];\n  this.introduction = '';\n  this.contenu = '';\n  this.contenuCorrection = '';\n  this.nbQuestions = 10;\n  this.nbCols = 2;\n  this.nbColsCorr = 2;\n  this.spacing = 1;\n  this.spacingCorr = 1;\n  this.beamer = false;\n  this.besoinFormulaireNumerique = false; // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n\n  this.besoinFormulaireTexte = false; // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n\n  this.besoinFormulaireCaseACocher = false; // Sinon this.besoinFormulaireCaseACocher = [texte];\n\n  this.consigneModifiable = true;\n  this.nbQuestionsModifiable = true;\n  this.nbColsModifiable = true;\n  this.nbColsCorrModifiable = true;\n  this.spacingModifiable = true;\n  this.spacingCorrModifiable = true;\n  this.correctionDetailleeDisponible = false;\n  this.correctionDetaillee = true;\n  this.video = '';\n  this.boutonAide = false;\n  this.tailleDiaporama = 50; // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  this.pasDeVersionLatex = false;\n  this.qcm = false; // Pour les exercices de type QCM : contient un tableau.\n\n  this.qcmDisponible = false; // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n\n  this.modeQcm = false; // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false; // pas d'interface par défaut pour les figures MG32\n\n  this.nouvelleVersion = function (numeroExercice) {};\n\n  this.listePackages = []; // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWF0aGFsZWEvLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzP2RiNDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogIENsYXNzZSBwYXJlbnRlIGRlIHRvdXMgbGVzIGV4ZXJjaWNlc1xuICpcbiAqIEBBdXRldXIgUsOpbWkgQW5nb3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRXhlcmNpY2UgKCkge1xuICAvLyBDbGFzc2UgcGFyZW50ZSBkZSB0b3VzIGxlcyBleGVyY2ljZXMgcXVpIHNlcm9udCBjcsOpw6lzXG4gIHRoaXMudGl0cmUgPSAnJ1xuICB0aGlzLmNvbnNpZ25lID0gJydcbiAgdGhpcy5jb25zaWduZUNvcnJlY3Rpb24gPSAnJ1xuICB0aGlzLmxpc3RlUXVlc3Rpb25zID0gW11cbiAgdGhpcy5saXN0ZUNvcnJlY3Rpb25zID0gW11cbiAgdGhpcy5pbnRyb2R1Y3Rpb24gPSAnJ1xuICB0aGlzLmNvbnRlbnUgPSAnJ1xuICB0aGlzLmNvbnRlbnVDb3JyZWN0aW9uID0gJydcbiAgdGhpcy5uYlF1ZXN0aW9ucyA9IDEwXG4gIHRoaXMubmJDb2xzID0gMlxuICB0aGlzLm5iQ29sc0NvcnIgPSAyXG4gIHRoaXMuc3BhY2luZyA9IDFcbiAgdGhpcy5zcGFjaW5nQ29yciA9IDFcbiAgdGhpcy5iZWFtZXIgPSBmYWxzZVxuXG4gIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IGZhbHNlIC8vIFNpbm9uIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IFt0ZXh0ZSxtYXgsdG9vbHRpcCBmYWN1bHRhdGlmXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlVGV4dGUgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVUZXh0ZSA9IFt0ZXh0ZSx0b29sdGlwXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlQ2FzZUFDb2NoZXIgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVDYXNlQUNvY2hlciA9IFt0ZXh0ZV07XG4gIHRoaXMuY29uc2lnbmVNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iUXVlc3Rpb25zTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5uYkNvbHNNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iQ29sc0NvcnJNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdDb3JyTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5jb3JyZWN0aW9uRGV0YWlsbGVlRGlzcG9uaWJsZSA9IGZhbHNlXG4gIHRoaXMuY29ycmVjdGlvbkRldGFpbGxlZSA9IHRydWVcbiAgdGhpcy52aWRlbyA9ICcnXG4gIHRoaXMuYm91dG9uQWlkZSA9IGZhbHNlXG4gIHRoaXMudGFpbGxlRGlhcG9yYW1hID0gNTAgLy8gVGFpbGxlIGVuIHBpeGVscyBwb3VyIGxlIGNhbGN1bCBjaHJvbm9tw6l0csOpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsVGV4dGVDb3VydChudW1lcm9FeGVyY2ljZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFRleHRlTG9uZyhudW1lcm9FeGVyY2ljZSx0aXRyZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFlvdXR1YmUobnVtZXJvRXhlcmNpY2UsaWRfeW91dHViZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlIC0gVmlkw6lvXCIsaWNvbmU9XCJ5b3V0dWJlXCIpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsUGRmKG51bWVyb0V4ZXJjaWNlLHVybF9wZGYsdGV4dGU9XCJBaWRlXCIsbGFiZWxfYm91dG9uPVwiQWlkZSAtIFBERlwiLGljb25lPVwiZmlsZSBwZGZcIilcbiAgLy8gdGhpcy52c3BhY2UgPSAtMSAvL0Fqb3V0ZSB1biBcXHZzcGFjZXstMWNtfSBhdmFudCBsJ8Opbm9uY8OpIGNlIHF1aSBwZXV0IMOqdHJlIHByYXRpcXVlIHBvdXIgZGVzIGV4ZXJjaWNlcyBhdmVjIGRlcyBmaWd1cmVzLlxuICB0aGlzLnBhc0RlVmVyc2lvbkxhdGV4ID0gZmFsc2VcbiAgdGhpcy5xY20gPSBmYWxzZSAvLyBQb3VyIGxlcyBleGVyY2ljZXMgZGUgdHlwZSBRQ00gOiBjb250aWVudCB1biB0YWJsZWF1LlxuICB0aGlzLnFjbURpc3BvbmlibGUgPSBmYWxzZSAvLyBQb3VyIGFqb3V0ZXIgdW5lIGNhc2Ugw6AgY29jaGVyIE1vZGUgUUNNIHF1aSBwZXJtZXQgZGUgY2hhbmdlciBsZSBzdGF0dXQgZGUgdGhpcy5tb2RlUWNtXG4gIHRoaXMubW9kZVFjbSA9IGZhbHNlIC8vIFBvdXIgY2hvaXNpciBsYSB2ZXJzaW9uIFFDTSBvdSBsYSB2ZXJzaW9uIGNsYXNzaXF1ZSAoZmFsc2UgPSB2ZXJzaW9uIGNsYXNzaXF1ZSlcblxuICB0aGlzLm1nMzJFZGl0YWJsZSA9IGZhbHNlIC8vIHBhcyBkJ2ludGVyZmFjZSBwYXIgZMOpZmF1dCBwb3VyIGxlcyBmaWd1cmVzIE1HMzJcbiAgdGhpcy5ub3V2ZWxsZVZlcnNpb24gPSBmdW5jdGlvbiAobnVtZXJvRXhlcmNpY2UpIHt9XG4gIHRoaXMubGlzdGVQYWNrYWdlcyA9IFtdIC8vIHN0cmluZyBvdSBsaXN0ZSBkZSBzdHJpbmcgYXZlYyBsZSBub20gZGVzIHBhY2thZ2VzIHNww6ljaWZpcXVlcyDDoCBham91dGVyIGRhbnMgbGUgcHLDqWFtYnVsZVxuICAvLyB0aGlzLnR5cGVFeGVyY2ljZSA9IFwiTUczMlwiO1xuICAvLyB0aGlzLmRpbWVuc2lvbnNEaXZNZzMyID0gWzUwMCwgNDUwXTtcbiAgLy8gdGhpcy50eXBlRXhlcmNpY2UgPSBcIlNjcmF0Y2hcIlxuICAvLyB0aGlzLnFjbT1bXCJRdWVscyBzb250IGxlcyBub21icmVzIHBhaXJzID9cIixbNywxMiwzNCwyNSwxOF0sWzAsMSwxLDAsMV1dID0+W1wiTGEgcXVlc3Rpb25cIixbbGVzIHLDqXBvbnNlc10sW2Jvbm5lPTEgZXQgbWF1dmFpc2U9MF1dXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/exercices/ClasseExercice.js\n");

/***/ }),

/***/ "./src/js/exercices/beta/beta3F23.js":
/*!*******************************************!*\
  !*** ./src/js/exercices/beta/beta3F23.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ antecedent_par_calcul)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst titre = 'Déterminer un antécédent';\n/**\n * Reconnaître une fonction affine\n* @auteur Erwan Duplessy\n* 3F23\n* date : 2021/02/21\n* référentiel 3F23 - Déterminer de manière algébrique l’antécédent par une fonction, dans des cas se ramenant à la résolution d’une équation du premier degré.\n* plusieurs cas : \n* f(x) = ax + b avec a et b petits relatifs\n* f(x) = ax + b avec a et b grands relatifs\n* f(x) = a(x + b) + c avec a, b, c petits relatifs\n* f(x) = a(bx + c) + dx + e  avec a, b, c, d petits relatifs\n*/\n\nfunction antecedent_par_calcul() {\n  \"use strict\";\n\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this);\n  this.titre = titre;\n  this.consigne = \"Répondre aux questions suivantes avec une valeur exacte simplifiée. \";\n  this.nbQuestions = 4; // Ici le nombre de questions\n\n  this.nbQuestionsModifiable = true; // Active le formulaire nombre de questions\n\n  this.nbCols = 1; // Le nombre de colonnes dans l'énoncé LaTeX\n\n  this.nbColsCorr = 1; // Le nombre de colonne pour la correction LaTeX\n\n  this.pasDeVersionLatex = false; // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n\n  this.pas_de_version_HMTL = false; // mettre à true si on ne veut pas de l'exercice en ligne\n\n  this.spacingCorr = sortieHtml ? 3 : 1; // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n  //  this.sup = 1; // A décommenter : valeur par défaut d'un premier paramètre\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.sup3 = false; // A décommenter : valeur par défaut d'un troisième paramètre\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // tableau contenant la liste des questions \n\n    this.listeCorrections = [];\n    let type_de_questions_disponibles = [1, 2, 3, 4]; // tableau à compléter par valeurs possibles des types de questions\n\n    let listeTypeDeQuestions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaisonListes)(type_de_questions_disponibles, this.nbQuestions);\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = ``; // Nous utilisons souvent cette variable pour construire le texte de la question.\n\n      texteCorr = ``; // Idem pour le texte de la correction.\n\n      let a = 0,\n          b = 0,\n          c = 0,\n          d = 0,\n          e = 0,\n          m = 0;\n      let expr = ``;\n\n      switch (listeTypeDeQuestions[i]) {\n        // Chaque question peut être d'un type différent\n        case 1:\n          // f(x) = ax + b avec a et b petits relatifs\n          a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20, [-1, 0, 1]);\n          b = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20);\n          m = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20);\n          expr = `$f(x)=${a}x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(b)}$`;\n          texte += `Déterminer l'antécédent de $${m}$ par la fonction $f$ définie par ${expr}. `;\n          texteCorr += `On cherche un nombre $x$ tel que $f(x) = ${m}$. `;\n          texteCorr += `On résout donc l'équation : $f(x) = ${m}$. <br>`;\n          texteCorr += `$\\\\begin{aligned} `;\n          texteCorr += `${a}x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(b)} &= ${m} \\\\\\\\ `;\n          texteCorr += `${a}x &= ${m} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(-b)} \\\\\\\\ `;\n\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.pgcd)(m - b, a) == 1 && m - b > 0 && a > 0) {\n            // teste si la fraction est simplifiable\n            texteCorr += `x &= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFraction)(m - b, a)} \\\\\\\\`;\n          } else {\n            texteCorr += `x &= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFraction)(m - b, a)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFractionReduite)(m - b, a)}\\\\\\\\ `;\n          }\n\n          texteCorr += `\\\\end{aligned}$`;\n          break;\n\n        case 2:\n          // f(x) = ax + b avec a et b grands relatifs\n          a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-999, 999, [-1, 0, 1]);\n          b = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-999, 999, [0]);\n          m = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-999, 999, [0]);\n          expr = `$f(x)=${a}x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(b)}$`;\n          texte += `Déterminer l'antécédent de $${m}$ par la fonction $f$ définie par ${expr}. `;\n          texteCorr += `On cherche un nombre $x$ tel que $f(x) = ${m}$. `;\n          texteCorr += `On résout donc l'équation : $f(x) = ${m}$. <br>`;\n          texteCorr += `$\\\\begin{aligned} `;\n          texteCorr += ` ${a}x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(b)}&= ${m} \\\\\\\\ `;\n          texteCorr += ` ${a}x &= ${m} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(-b)}\\\\\\\\ `;\n\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.pgcd)(m - b, a) == 1 && m - b > 0 && a > 0) {\n            // teste si la fraction est simplifiable\n            texteCorr += `x &= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFraction)(m - b, a)}\\\\\\\\`;\n          } else {\n            texteCorr += `x &= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFraction)(m - b, a)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFractionReduite)(m - b, a)}\\\\\\\\`;\n          }\n\n          texteCorr += `\\\\end{aligned}$`;\n          break;\n\n        case 3:\n          // f(x) = a(x + b) + c avec a, b, c petits relatifs\n          a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20, [-1, 0, 1]);\n          b = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20, [0]);\n          c = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20, [0]);\n          m = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20);\n          expr = `$f(x)=${a}(x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(b)})${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(c)}$`;\n          texte += `Déterminer l'antécédent de $${m}$ par la fonction $f$ définie par ${expr}. `;\n          texteCorr += `On cherche un nombre $x$ tel que $f(x) = ${m}$. `;\n          texteCorr += `On résout donc l'équation : $f(x) = ${m}$. <br>`;\n          texteCorr += `$\\\\begin{aligned} `;\n          texteCorr += `${a}(x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(b)})${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(c)} &= ${m}\\\\\\\\`;\n          texteCorr += `${a}x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(a * b)}${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(c)} &= ${m}\\\\\\\\`;\n          texteCorr += `${a}x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(a * b + c)} &= ${m}\\\\\\\\`;\n          texteCorr += `${a}x &= ${m} ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(-a * b - c)}\\\\\\\\`;\n\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.pgcd)(m - a * b - c, a) == 1 && m - a * b - c > 0 && a > 0) {\n            // teste si la fraction est simplifiable\n            texteCorr += `x &= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFraction)(m - a * b - c, a)}\\\\\\\\`;\n          } else {\n            texteCorr += `x &= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFraction)(m - a * b - c, a)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFractionReduite)(m - a * b - c, a)}\\\\\\\\`;\n          }\n\n          texteCorr += `\\\\end{aligned}$`;\n          break;\n\n        case 4:\n          // f(x) = a(bx + c) + dx + e  avec a, b, c, d petits relatifs\n          a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20, [-1, 0, 1]);\n          b = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20, [-1, 0, 1]);\n          c = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20, [0]);\n          d = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20, [-1, 0, 1, -a * b]); // d différent de -ab pour assurer une solution\n\n          e = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20, [0]);\n          m = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-20, 20);\n          expr = `$f(x)=${a}(${b}x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(c)})${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(d)}x${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(e)}$`;\n          texte += `Déterminer l'antécédent de $${m}$ par la fonction $f$ définie par ${expr}. `;\n          texteCorr += `On cherche un nombre $x$ tel que $f(x) = ${m}$. `;\n          texteCorr += `On résout donc l'équation : $f(x) = ${m}$. <br>`;\n          texteCorr += `$\\\\begin{aligned} `;\n          texteCorr += `${a}(${b}x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(c)})${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(d)}x${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(e)} &= ${m}\\\\\\\\`;\n          texteCorr += `${a * b}x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(a * c)}${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(d)}x${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(e)} &= ${m}\\\\\\\\`;\n          texteCorr += `${a * b + d}x ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(a * c + e)} &= ${m}\\\\\\\\`;\n          texteCorr += `${a * b + d}x  &= ${m}${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.ecritureAlgebrique)(-a * c - e)}\\\\\\\\`;\n          texteCorr += `${a * b + d}x &= ${m - a * c - e}\\\\\\\\`;\n\n          if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.pgcd)(m - a * c - e, a * b + d) == 1 && m - a * c - e > 0 && a * b + d > 0) {\n            // teste si la fraction est simplifiable\n            texteCorr += `x &= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFraction)(m - a * c - e, a * b + d)}\\\\\\\\`;\n          } else {\n            texteCorr += `x &= ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFraction)(m - a * c - e, a * b + d)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFractionReduite)(m - a * c - e, a * b + d)}\\\\\\\\`;\n          }\n\n          texteCorr += `\\\\end{aligned}$`;\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n\n      cpt++;\n    }\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeQuestionsToContenu)(this); // On envoie l'exercice à la fonction de mise en page\n  }; // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  //\tthis.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoin_formulaire2_numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoin_formulaire3_case_a_cocher =['figure à main levée',true]\n\n} // Fin de l'exercice.//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/exercices/beta/beta3F23.js\n");

/***/ })

}]);