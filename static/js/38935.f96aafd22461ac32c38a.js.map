{"version":3,"file":"js/38935.f96aafd22461ac32c38a.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5N11-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, calcul, texNombre, texPrix, arrondi } from '../../modules/outils.js'\nexport const titre = 'Exprimer une fraction sous la forme d’une valeur approchée d’un pourcentage'\n\n/**\n * Déterminer une valeur approchée d'un pourcentage à l'aide de la calculatrice\n * @author Rémi Angot\n * Référence 5N11-4\n * 2021-02-06\n*/\nexport default function ValeurApprocheeDePourcentages () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"À l'aide de la calculatrice, donner une valeur approchée au centième près du quotient puis l'écrire sous la forme d'un pourcentage à l'unité près.\"\n  this.nbQuestions = 6\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const denominateurDisponibles = [100, 200, 300, 1000]\n    const listeTypeDeQuestions = combinaisonListes(denominateurDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    if (this.sup === 2) {\n      this.consigne = \"À l'aide de la calculatrice, donner une valeur approchée au millième près du quotient puis l'écrire sous la forme d'un pourcentage au dixième près.\"\n    }\n    for (let i = 0, texte, texteCorr, num, den, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      den = randint(10, listeTypeDeQuestions[i])\n      num = randint(1, den - 8)\n      while (calcul(num / den) === arrondi(num / den, 4)) {\n        den = randint(10, listeTypeDeQuestions[i])\n        num = randint(1, den - 8)\n      }\n      texte = `$\\\\dfrac{${num}}{${den}}\\\\approx \\\\ldots\\\\ldots\\\\ldots $ soit environ $\\\\ldots\\\\ldots\\\\ldots~\\\\%$`\n      if (this.sup === 1) {\n        texteCorr = `$\\\\dfrac{${num}}{${den}}\\\\approx ${texPrix(calcul(num / den, 2))} $ soit environ $${calcul(calcul(num / den, 2) * 100)}~\\\\%$ $\\\\left(\\\\text{car } ${texPrix(calcul(num / den, 2))}=\\\\dfrac{${calcul(calcul(num / den, 2) * 100)}}{100}\\\\right)$.`\n      }\n      if (this.sup === 2) {\n        texteCorr = `$\\\\dfrac{${num}}{${den}}\\\\approx ${texNombre(calcul(num / den, 3))} $ soit environ $${texNombre(calcul(num / den * 100, 1))}~\\\\%$ $\\\\left(\\\\text{car } ${texNombre(calcul(num / den, 3))}=\\\\dfrac{${texNombre(calcul(num / den * 100, 1))}}{100}\\\\right)$.`\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de précision', 2, \"1 : Donner un pourcentage à l'unité près\\n2 : Donner un pourcentage au dixième près\"]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ValeurApprocheeDePourcentages","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","num","den","i","cpt","randint","calcul","arrondi","texPrix","texNombre","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}