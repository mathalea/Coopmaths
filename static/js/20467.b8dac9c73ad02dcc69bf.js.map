{"version":3,"file":"js/20467.b8dac9c73ad02dcc69bf.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/5e/can5P03.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { calcul, choice, texNombrec, randint, texPrix } from '../../../modules/outils.js'\nexport const titre = 'Résoudre un problème de proportionnalité'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\nexport const dateDePublication = '28/10/2021'\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence can5P03\n * Date de publication\n*/\nexport default function PoucentageP2 () {\n  Exercice.call(this)\n  this.typeExercice = 'simple'\n  this.nbQuestions = 1\n  this.formatChampTexte = 'largeur25 inline'\n  this.nouvelleVersion = function () {\n    let a, b, c, d, n, u\n    const fruits = [\n      ['pêches', 3.5, 10, 30], ['Noix', 4.5, 4, 13], ['cerises', 5.5, 11, 20], ['pommes', 2.5, 20, 40],\n      ['framboises', 6.5, 1, 5], ['fraises', 4.5, 5, 10], ['citrons', 1.5, 15, 30], ['bananes', 2.5, 15, 25]\n    ]\n    const plat = [\n      ['nems'], ['samossas'], ['parts de quiches'], ['parts de pizzas'], ['beignets']\n    ]\n    switch (choice([1, 2, 3, 4, 5])) { //\n      case 1:// proportionnalité avec fruits\n        a = randint(0, 7) // index du fruit\n        b = calcul(fruits[a][1] + choice([-1, 1]))// prix au kg\n        c = randint(2, 8) // nombre de kg première valeur\n        d = randint(3, 6, c) // nombre de kg supplémentaires\n        this.reponse = calcul(d * b)\n        this.question = `$${c}$ kg de ${fruits[a][0]} coûtent $${texPrix(c * b)}$ €.<br> $${c + d}$ kg de ces mêmes ${fruits[a][0]} coûtent $${texPrix((c + d) * b)}$ €.<br>Combien coûtent ${d} kg de ces ${fruits[a][0]} ?`\n        this.correction = `$${texPrix((c + d) * b)} € - ${texPrix(c * b)} € =${texPrix(this.reponse)} €$`\n        break\n      case 2:// proportionnalité débit\n        a = choice([50, 100])\n        b = choice([10, 20, 30])\n        c = choice([150, 250, 300, 350])\n\n        this.reponse = calcul((c / a) * b)\n        this.question = `Le débit d’un robinet est de $${a}$ L en $${b}$ min. Combien de temps (en minutes) faut-il pour remplir un réservoir de $${c}$ L ?`\n        this.correction = `$\\\\dfrac{${c}}{${a}}\\\\times ${b}=${this.reponse}$. Il faut donc $${this.reponse}$ minutes pour remplir le réservoir.`\n        break\n      case 3:// proportionnalité plats\n        c = randint(0, 4) // index du plat\n        b = randint(12, 15)\n        u = randint(2, 5)\n        n = randint(3, 6)\n        a = randint(2, 6)\n        this.reponse = calcul(n * u * a)\n        this.question = `$${a}$ ${plat[c]} coûtent $${u * a}$ €, combien coûtent $${n * a}$ ${plat[c]} ?`\n        this.correction = `$${n * a}$ ${plat[c]} coûtent $${u}\\\\times ${n * a}$ €, soit $${this.reponse}$ €.`\n        break\n\n      case 4:// proportionnalité 4ième proportionnelle\n        if (choice([true, false])) {\n          a = randint(1, 4) //\n          n = randint(3, 7)\n          c = a * n\n          b = randint(2, 5, a) * n\n          c = a * n\n          this.reponse = calcul(b / n)\n          this.question = `Déterminer la valeur qui manque dans ce tableau de proportionnalité : <br>\n          $\\\\begin{array}{|l|c|}\\n`\n          this.question += '\\\\hline\\n'\n          this.question += `\\\\\\\\\\n\\\\phantom{-5}? \\\\phantom{-5}& \\\\phantom{-5}${a} \\\\phantom{-5} \\\\\\\\\\n \\\\\\\\\\n`\n          this.question += '\\\\hline\\n'\n          this.question += `\\\\\\\\\\n\\\\phantom{-5}${b}\\\\phantom{-5} & \\\\phantom{-5}${c}\\\\phantom{-5}  \\\\\\\\\\n \\\\\\\\\\n`\n          this.question += '\\\\hline\\n'\n          this.question += '\\\\end{array}\\n$'\n\n          this.correction = `On passe de la première ligne à la deuxième en multipliant par $${n}$, ainsi, ?$=\\\\dfrac{${b}}{${n}}=${calcul(b / n)}$`\n        } else {\n          a = randint(1, 9)\n          b = randint(1, 9, a)\n          n = randint(2, 9, 5) / 10\n          d = b * n\n          c = a * n\n\n          this.reponse = calcul(a + b)\n          this.question = `Déterminer la valeur qui manque dans ce tableau de proportionnalité : <br>\n$\\\\begin{array}{|l|c|c|}\\n`\n          this.question += '\\\\hline\\n'\n          this.question += `\\\\\\\\\\n\\\\phantom{-5}${texNombrec(a)} \\\\phantom{-5}& \\\\phantom{-5}${texNombrec(b)} \\\\phantom{-5}& \\\\phantom{-5}? \\\\phantom{-5} \\\\\\\\\\n \\\\\\\\\\n`\n          this.question += '\\\\hline\\n'\n          this.question += `\\\\\\\\\\n\\\\phantom{-5}${texNombrec(c)}\\\\phantom{-5} & \\\\phantom{-5}${texNombrec(d)}\\\\phantom{-5} & \\\\phantom{-5}${texNombrec(c + d)} \\\\phantom{-5} \\\\\\\\\\n \\\\\\\\\\n`\n          this.question += '\\\\hline\\n'\n          this.question += '\\\\end{array}\\n$'\n\n          this.correction = `La valeur cherchée est donnée par la somme $${a}+${b}=${a + b}$.`\n        }\n        break\n      case 5:// proportionnalité 6iemJC\n        a = choice([2, 3, 4, 5]) // choix du coefficient\n        b = randint(3, 10) // donnée 1\n        c = randint(2, 10, b) // donnée 2\n        d = choice([['un train électrique', 'il'], ['une voiture électrique', 'elle'], ['un manège', 'il']])\n        this.question = `En ${a * b} minutes, ${d[0]} fait ${a * c} tours.<br>En ${b} minutes ${d[1]} fait ${this.interactif ? '' : '$\\\\ldots \\\\ldots$ tours.'}`\n        this.correction = `En ${a} fois moins de temps, ${d[1]} fait ${a} fois moins de tours, soit : $${a * c} \\\\div ${a}=${c}$ tours.`\n        this.optionsChampTexte = { texteApres: ' tours.' }\n        this.reponse = c\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","dateDePublication","PoucentageP2","typeExercice","formatChampTexte","a","b","c","d","n","u","fruits","plat","choice","randint","calcul","reponse","question","texPrix","correction","texNombrec","optionsChampTexte","texteApres"],"sourceRoot":""}