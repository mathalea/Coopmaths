{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5L10-2.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","amcType","interactifReady","titre","TraduireUnProgrammeDeCalcul","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","spacingCorr","spacing","interactif","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","a","randint","b","c","d","itemize","autoCorrection","enonce","propositions","statut","ecritureParentheseSiNegatif","propositionsQcm","indexOf","context","replace","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceInteractif","exercice","document","addEventListener","button","querySelector","event","spanReponseLigne","champTexte","getElementById","value","replaceAll","reponse","valeur","toString","innerHTML","readOnly","style","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","length","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","messageFeedback","id","message","feedback","type","querySelectorAll","uicheck","exerciceQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","param","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","includes","div","cssIcon","remove","divTitre","test","messageUtilisateur","code","width"],"mappings":"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","file":"js/5352.01cd76a2346be64af14a.js","sourcesContent":["import { propositionsQcm } from '../../modules/gestionInteractif.js'\nimport { ecritureParentheseSiNegatif, listeQuestionsToContenu, randint, combinaisonListes, itemize } from '../../modules/outils.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nexport const amcReady = true\nexport const amcType =1 //type de question AMC \nexport const interactifReady = true\nexport const titre = 'Traduire un programme de calcul par une expression littérale'\n\n/**\n* Traduire un programme de calcul par une expression littérale de la forme ax+b après simplification\n* @Auteur Rémi Angot\n* 5L10-2\n*/\nexport default function TraduireUnProgrammeDeCalcul () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacingCorr = 1\n  this.spacing = 1\n  this.interactif = false\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.amcReady = amcReady\n  \n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6]\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      const a = randint(4, 11)\n      const b = randint(2, 11)\n      const c = randint(2, 11)\n      const d = randint(2, 5)\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // (x+a)*b+c\n          texte = 'Voici un programme de calcul : \\n'\n          texte += itemize([`Ajoute ${a}`, `Multiplie par ${b}`, `Ajoute ${c}`])\n          texte += 'Si on note $x$ le nombre de départ, quel est le résultat du programme de calcul ?'\n          texteCorr = `$x\\\\xrightarrow{+${a}} x+${a}\\\\xrightarrow{\\\\times  ${b}}(x+${a})\\\\times  ${b}=${b}x+${a * b}\\\\xrightarrow{+${c}}${b}x+${a * b + c}$`\n          texteCorr += '<br>'\n          texteCorr += `Le résultat du programme est donc $${b}x+${a * b + c}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${b}x+${a * b + c}$`,\n              statut: true\n            },\n            {\n              texte: `$${b}x+${a + c}$`,\n              statut: false\n            },\n            {\n              texte: `$${b}x+${a * c}$`,\n              statut: false\n            },\n            {\n              texte: `$${b * a}x+${c}$`,\n              statut: false\n            }\n          ]\n          break\n        case 2: // (ax+b)*c\n          texte = 'Voici un programme de calcul : \\n'\n          texte += itemize([`Multiplie par ${a}`, `Ajoute ${b}`, `Multiplie par ${c}`])\n          texte += 'Si on note $y$ le nombre de départ, quel est le résultat du programme de calcul ?'\n          texteCorr = `$y\\\\xrightarrow{\\\\times  ${a}} ${a}y\\\\xrightarrow{+${b}}${a}y+${b} \\\\xrightarrow{\\\\times  ${c}}(${a}y+${b})\\\\times ${c}=${a * c}y+${b * c}$`\n          texteCorr += '<br>'\n          texteCorr += `Le résultat du programme est donc $${a * c}y+${b * c}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${a * c}y+${b * c}$`,\n              statut: true\n            },\n            {\n              texte: `$${a}y+${b * c}$`,\n              statut: false\n            },\n            {\n              texte: `$${b * a}y+${c}$`,\n              statut: false\n            },\n            {\n              texte: `$${b}y+${a * c}$`,\n              statut: false\n            }\n          ]\n          break\n        case 3: // ax+b-2x\n          texte = 'Voici un programme de calcul : \\n'\n          texte += itemize([`Multiplie par ${a}`, `Ajoute ${b}`, 'Enlève le double du nombre de départ'])\n          texte += 'Si on note $a$ le nombre de départ, quel est le résultat du programme de calcul ?'\n          texteCorr = `$a\\\\xrightarrow{\\\\times  ${a}} ${a}a\\\\xrightarrow{+${b}}${a}a+${b} \\\\xrightarrow{-2a}${a}a+${b}-2a=${a - 2}a+${b}$`\n          texteCorr += '<br>'\n          texteCorr += `Le résultat du programme est donc $${a - 2}a+${b}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${a - 2}a+${b}$`,\n              statut: true\n            },\n            {\n              texte: `$${a + b - 2}a$`,\n              statut: false\n            },\n            {\n              texte: `$${a}a+${b - 2}$`,\n              statut: false\n            },\n            {\n              texte: `$${a + b}-2a$`,\n              statut: false\n            }\n          ]\n          break\n        case 4: // ax+b+3x\n          texte = 'Voici un programme de calcul : \\n'\n          texte += itemize([`Multiplie par ${a}`, `Ajoute ${b}`, 'Ajoute le triple du nombre de départ'])\n          texte += 'Si on note $t$ le nombre de départ, quel est le résultat du programme de calcul ?'\n          texteCorr = `$t\\\\xrightarrow{\\\\times  ${a}} ${a}t\\\\xrightarrow{+${b}}${a}t+${b} \\\\xrightarrow{+3t}${a}t+${b}+3t=${a + 3}t+${b}$`\n          texteCorr += '<br>'\n          texteCorr += `Le résultat du programme est donc $${a + 3}t+${b}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${a + 3}t+${b}$`,\n              statut: true\n            },\n            {\n              texte: `$${a + b + 3}t$`,\n              statut: false\n            },\n            {\n              texte: `$${a + b}t+3t$`,\n              statut: false\n            },\n            {\n              texte: `$${a + b}t-3t$`,\n              statut: false\n            }\n          ]\n          break\n        case 5: // (ax+b)*c-d\n          texte = 'Voici un programme de calcul : \\n'\n          texte += itemize([`Multiplie par ${a}`, `Ajoute ${b}`, `Multiplie par ${c}`, `Enlève ${d}`])\n          texte += 'Si on note $x$ le nombre de départ, quel est le résultat du programme de calcul ?'\n          texteCorr = `$x\\\\xrightarrow{\\\\times  ${a}} ${a}x\\\\xrightarrow{+${b}}${a}x+${b} \\\\xrightarrow{\\\\times  ${c}}(${a}x+${b})\\\\times  ${c}=${a * c}x+${b * c}\\\\xrightarrow{-${d}}${a * c}x+${b * c - d}$`\n          texteCorr += '<br>'\n          texteCorr += `Le résultat du programme est donc $${a * c}x+${b * c - d}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${a * c}x+${b * c - d}$`,\n              statut: true\n            },\n            {\n              texte: `$${a}x+${ecritureParentheseSiNegatif(b * c - d)}$`,\n              statut: false\n            },\n            {\n              texte: `$${a + b}x+${ecritureParentheseSiNegatif(c - d)}$`,\n              statut: false\n            },\n            {\n              texte: `$${a + b * c}x-${d}$`,\n              statut: false\n            }\n          ]\n          break\n        case 6: // (ax+b)*c+x\n          texte = 'Voici un programme de calcul : \\n'\n          texte += itemize([`Multiplie par ${a}`, `Ajoute ${b}`, `Multiplie par ${c}`, 'Ajoute le nombre de départ'])\n          texte += 'Si on note $y$ le nombre de départ, quel est le résultat du programme de calcul ?'\n          texteCorr = `$y\\\\xrightarrow{\\\\times  ${a}} ${a}y\\\\xrightarrow{+${b}}${a}y+${b} \\\\xrightarrow{\\\\times  ${c}}(${a}y+${b})\\\\times  ${c}=${a * c}y+${b * c}\\\\rightarrow ${a * c}y+${b * c}+y=${a * c + 1}y+${b * c}$`\n          texteCorr += '<br>'\n          texteCorr += `Le résultat du programme est donc $${a * c + 1}y+${b * c}$.`\n          this.autoCorrection[i] = {}\n          this.autoCorrection[i].enonce = `${texte}\\n`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: `$${a * c + 1}y+${b * c}$`,\n              statut: true\n            },\n            {\n              texte: `$${a + 1}y+${b * c}$`,\n              statut: false\n            },\n            {\n              texte: `$${a}y+${c}$`,\n              statut: false\n            },\n            {\n              texte: `$${a + b + c + 1}y$`,\n              statut: false\n            }\n          ]\n          break\n      }\n      if (this.interactif) {\n        texte += propositionsQcm(this, i).texte\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        if (context.isDiaporama) {\n          texte = texte.replace(', quel est le résultat du programme de calcul ?', ',<br> quel est le résultat de ce programme ?')\n        }\n        if (!context.isHtml && i === 0) { texte = '\\\\setlength\\\\itemsep{1em}' + texte }; // espacement entre les questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireCaseACocher = true;\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              message: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.',',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n\n\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (var prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n// Module regroupant les fonctions de gestions des erreurs.\n\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} feedback\n * @param {string} [feedback.message]\n * @param {string} [feedback.type]\n * @param {string} [feedback.titre]\n */\nexport function addFeedback (container, { message = 'Une erreur est survenue', type = 'erreur', titre } = {}) {\n  if (!types.includes(type)) {\n    console.error(Error(`type de message inconnu : ${type}`))\n    type = 'error'\n  }\n  const cssDiv = type === 'info' ? '' : type\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = type === 'error'\n    ? 'frown outline'\n    : (type === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  if (/<[a-zA-Z0-9_ \"']+/.test(message)) div.innerHTML += message\n  else addText(div, message)\n  return div\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        type: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} feedback\n * @param {string} feedback.id id du div conteneur à utiliser\n * @param {string} feedback.message Le message à afficher\n * @param {string} feedback.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, message = '', type = 'error' } = {}) {\n  if (!id || !message) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message, type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}