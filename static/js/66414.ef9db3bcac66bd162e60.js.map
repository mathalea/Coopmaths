{"version":3,"file":"js/66414.ef9db3bcac66bd162e60.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G22-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, texNombre, texNombrec } from '../../modules/outils.js'\nexport const titre = 'Agrandissement et réduction'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '25/10/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\nexport const dateDeModifImportante = '24/10/2021' // Une date de modification importante au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Description didactique de l'exercice\n * @author Stéphane Guyon\n * Référence\n*/\nexport default function agrandissement () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 3 // Nombre de questions par défaut\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeQuestionsDisponibles = ['type1', 'type2', 'type3', 'type4', 'type5'] // On créé 3 types de questions\n\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    for (let i = 0, V1, V2, A1, A2, l1, l2, k, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'type1':\n          V1 = randint(2, 20)\n          k = randint(2, 20) / 10\n          V2 = V1 * k * k * k\n          texte = `Un solide a un volume de $${V1}$ cm³.`\n          texte += k > 1 ? ' On l’agrandit ' : ' On le réduit '\n\n          texte += ` à l'échelle $${texNombrec(k)}$. <br>Quel est le volume du nouveau solide ?` // Le LateX entre deux symboles $, les variables dans des ${ }\n          texteCorr = 'On sait que dans une réduction ou un agrandissement de rapport $k$, les volumes sont multipliés par $k^3$.'\n          texteCorr += '<br>Dans notre exercice, on'\n          texteCorr += k > 1 ? ' agrandit ' : ' réduit '\n          texteCorr += `un solide à l'échelle $${texNombrec(k)}$.`\n          texteCorr += `<br>Le volume obtenu est donc multiplié par $${texNombrec(k)}^3$.`\n          texteCorr += `<br>Le volume obtenu est donc $V=${V1}\\\\times ${texNombrec(k)}^3=${texNombrec(V2)} ~cm^3$.`\n          break\n        case 'type2':\n          V1 = randint(2, 20)\n          l1 = randint(2, 20)\n          A1 = randint(2, 20)\n          k = randint(2, 20) / 10\n\n          l2 = l1 * k\n          A2 = A1 * k * k\n          V2 = V1 * k * k * k\n          texte = `Une figure a une aire de $${A1}$ cm². `\n          texte += k > 1 ? ' On l\\'agrandit ' : ' On la réduit '\n          texte += `et l’aire obtenue est de $${texNombrec(A1 * k ** 2)}$ cm².`\n          texte += '<br> Quel est le coefficient '\n          texte += k > 1 ? ' d\\'agrandissement ? ' : ' de réduction ? '\n          texteCorr = 'On sait que dans une réduction ou un agrandissement de rapport $k$, les aires sont multipliées par $k^2$.'\n          texteCorr += '<br>Dans notre exercice, en appelant $k$ le coefficient'\n          texteCorr += k > 1 ? ' d\\'agrandissement' : ' de réduction'\n          texteCorr += `, on a l'égalité :  $${texNombrec(A2)}=k^2\\\\times${texNombrec(A1)}.$`\n          texteCorr += `<br>On en déduit que : $k^2=\\\\dfrac{${texNombrec(A2)}}{${texNombre(A1)}}=${texNombrec(A2 / A1)}$.`\n          texteCorr += `<br>$k$ est un nombre positif, on peut conclure que : $k=\\\\sqrt{${texNombrec(A2 / A1)}}=${texNombrec(k)}$.`\n          texteCorr += '<br>L\\'échelle '\n          texteCorr += k > 1 ? ' d\\'agrandissement' : ' de réduction'\n          texteCorr += `est donc $k=${texNombrec(k)}$ `\n          break\n        case 'type3':\n          V1 = randint(2, 20)\n          l1 = randint(2, 20)\n          A1 = randint(2, 20)\n          k = randint(1, 20, 10)\n          k = k / 10\n          l2 = l1 * k\n          A2 = A1 * k * k\n          V2 = V1 * k * k * k\n          texte = `Sur une figure, on relève une longueur de $${l1}~cm$. <br>`\n          texte += k > 1 ? ' On agrandit ' : ' On réduit '\n          texte += `cette figure et la longueur obtenue mesure alors $${texNombrec(l2)}~cm$.`\n          texte += '<br> Quelle est l\\'échelle '\n          texte += k > 1 ? ' d\\'agrandissement ? ' : ' de réduction ? '\n          texteCorr = 'Dans cette situation, la longueur dont on connaît la mesure a été multipliée par '\n          texteCorr += `$k=\\\\dfrac{${texNombrec(l2)}}{${texNombrec(l1)}}= ${texNombrec(k)}$.<br>`\n          texteCorr += 'Comme $k'\n          texteCorr += k > 1 ? ' >' : ' <'\n          texteCorr += '1$, on en déduit qu\\'il s\\'agit d\\'un'\n          texteCorr += k > 1 ? 'agrandissement' : 'e réduction'\n          texteCorr += ` à l'échelle $${texNombrec(k)}$.`\n          break\n        case 'type4':\n          V1 = randint(10, 120)\n          l1 = randint(2, 20)\n          A1 = randint(2, 20)\n          k = randint(1, 20, 10)\n          k = k / 10\n          l2 = l1 * k\n          A2 = A1 * k * k\n          V2 = V1 * k * k * k\n          texte = `Sur une figure, on relève la mesure d'un angle :  de $\\\\widehat{ABC}=${V1} °$. <br>`\n          texte += k > 1 ? ' On agrandit ' : ' On réduit '\n          texte += `cette figure à l'échelle $${texNombrec(k)}$.`\n          texte += '<br> Déterminer la mesure de l\\'angle $\\\\widehat{A\\'B\\'C\\'}$ de la figure '\n          texte += k > 1 ? '  agrandie. ' : ' réduite. '\n          texteCorr = 'On sait que dans un agrandissement ou une réduction à l\\'échelle $k$,  '\n          texteCorr += 'les longueurs sont toutes multipliées par $k$.<br> Par contre, les mesures d\\'angles ne sont pas modifiées.<br>'\n          texteCorr += `<br>On en déduit : $\\\\widehat{A'B'C'}=\\\\widehat{ABC}=${V1} °$`\n\n          break\n        case 'type5':\n          V1 = randint(2, 20)\n          l1 = randint(2, 20)\n          A1 = randint(2, 20)\n          k = randint(2, 20) / 10\n\n          l2 = l1 * k\n          A2 = A1 * k * k\n          V2 = V1 * k * k * k\n          texte = `Une figure a une aire de $${A1}$ cm². `\n          texte += k > 1 ? ' On l\\'agrandit ' : ' On la réduit '\n          texte += `à l'échelle $k=${texNombrec(k)}$.`\n          texte += '<br> Calculer l\\'aire de la figure  '\n          texte += k > 1 ? ' agrandie. ' : ' réduite. '\n          texteCorr = 'On sait que dans une réduction ou un agrandissement de rapport $k$, les aires sont multipliées par $k^2$.'\n          texteCorr += '<br>Dans notre exercice, en appelant $A$ l\\'aire '\n          texteCorr += k > 1 ? ' agrandie, ' : ' réduite, '\n          texteCorr += `on a l'égalité :  $A=${texNombrec(k)}^2\\\\times${texNombrec(A1)}.$`\n          texteCorr += `<br>D'où :  $A=${texNombrec(k ** 2 * A1)}~ cm^2$`\n          break\n      }\n      // Si la question n'a jamais été posée, on l'enregistre\n      if (this.questionJamaisPosee(i, texte)) { // <- laisser le i et ajouter toutes les variables qui rendent les exercices différents (par exemple a, b, c et d)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","dateDePublication","dateDeModifImportante","agrandissement","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","nouvelleVersion","numeroExercice","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","V1","V2","A1","A2","l1","l2","k","texte","texteCorr","i","cpt","randint","texNombrec","texNombre","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}