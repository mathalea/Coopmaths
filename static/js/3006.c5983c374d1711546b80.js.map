{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4L13-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Forme_litterale_introduire_une_lettre","type_de_questions_disponibles","Exercice","this","debug","sup","nbQuestions","consigne","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","pluriel","n","obj","plur","sing","sliceUn","situations","prenom","elt1","lettre","article","elt2","enonces","randint","p","situation","length","push","enonce","question","correction","texte_en_couleur","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"8KAEO,MAAMA,EAAQ,4FAON,SAASC,IAoBtB,IAAIC,EAlBJC,eAAcC,MACdA,KAAKC,OAAQ,EACbD,KAAKE,IAAM,EACPF,KAAKC,MACPD,KAAKG,YAAc,EAEnBH,KAAKG,YAAc,EAGrBH,KAAKJ,MAAQA,EACbI,KAAKI,SAAW,wFAEhBJ,KAAKK,OAAS,EACdL,KAAKM,WAAa,EAOlBN,KAAKO,gBAAkB,WAEnBT,GADEE,KAAKC,MACyB,CAAC,IAKnCD,KAAKQ,eAAiB,GACtBR,KAAKS,iBAAmB,GACxBX,EAAgC,CAAC,GACjC,IAAIY,GAAuBC,SAAkBb,EAA+BE,KAAKG,aAGjF,IAAK,IAAWS,EAAOC,EAAdC,EAAI,EAAqBC,EAAM,EAAGD,EAAId,KAAKG,aAAeY,EAAM,IAAK,CAG5E,SAASC,EAAQC,EAAGC,GAClB,OAAID,EAAI,EACCC,EAAIC,KAEJD,EAAIE,KAKf,SAASC,EAAQJ,GACf,OAAS,GAALA,EACM,GAEA,GAAEA,IAKd,IAAIK,EAAa,CACf,CAAEC,QAAQA,WAAUC,KAAM,CAAEC,OAAQ,IAAKC,QAAS,KAAMN,KAAM,SAAUD,KAAM,WAAaQ,KAAM,CAAEF,OAAQ,IAAKC,QAAS,MAAON,KAAM,QAASD,KAAM,WACrJ,CAAEI,QAAQA,WAAUC,KAAM,CAAEC,OAAQ,IAAKC,QAAS,MAAON,KAAM,QAASD,KAAM,UAAYQ,KAAM,CAAEF,OAAQ,IAAKC,QAAS,MAAON,KAAM,UAAWD,KAAM,aACtJ,CAAEI,QAAQA,WAAUC,KAAM,CAAEC,OAAQ,IAAKC,QAAS,MAAON,KAAM,QAASD,KAAM,UAAYQ,KAAM,CAAEF,OAAQ,IAAKC,QAAS,MAAON,KAAM,SAAUD,KAAM,YACrJ,CAAEI,QAAQA,WAAUC,KAAM,CAAEC,OAAQ,IAAKC,QAAS,KAAMN,KAAM,UAAWD,KAAM,YAAcQ,KAAM,CAAEF,OAAQ,IAAKC,QAAS,MAAON,KAAM,aAAcD,KAAM,gBAC5J,CAAEI,QAAQA,WAAUC,KAAM,CAAEC,OAAQ,IAAKC,QAAS,KAAMN,KAAM,UAAWD,KAAM,YAAcQ,KAAM,CAAEF,OAAQ,IAAKC,QAAS,MAAON,KAAM,UAAWD,KAAM,cAEvJS,EAAU,GACVX,GAAIY,SAAQ,EAAG,GACfC,GAAID,SAAQ,EAAG,GACfE,EAAYT,GAAWO,SAAQ,EAAGP,EAAWU,OAAS,IAW1D,OAVAJ,EAAQK,KAAK,CACXC,OAAS,GAAEH,EAAUR,uBAAuBN,KAAKD,EAAQC,EAAGc,EAAUP,YAAYM,KAAKd,EAAQc,EAAGC,EAAUJ,gCACjGI,EAAUP,KAAKC,sBAAqBM,EAAUP,KAAKE,WAAWK,EAAUP,KAAKJ,YAAYW,EAAUJ,KAAKF,sBAAqBM,EAAUJ,KAAKD,WAAWK,EAAUJ,KAAKP,QACjLe,SAAW,GACXC,WAAa,aACXL,EAAUR,oBAAoBN,qBAAqBc,EAAUP,KAAKE,WAAWK,EAAUP,KAAKJ,YAAYU,qBAAqBC,EAAUJ,KAAKD,WAAWK,EAAUJ,KAAKP,qCACnJH,YAAYc,EAAUP,KAAKC,YAAYK,YAAYC,EAAUJ,KAAKF,YAAYJ,EAAQJ,KAAKc,EAAUP,KAAKC,YAAYJ,EAAQS,KAAKC,EAAUJ,KAAKF,0BACjKY,SAAkB,uCAAsChB,EAAQJ,KAAKc,EAAUP,KAAKC,YAAYJ,EAAQS,KAAKC,EAAUJ,KAAKF,0BAG5Hf,EAAqBI,IAC3B,KAAK,EACHF,EAAS,GAAEgB,EAAQ,GAAGM,SAClBlC,KAAKC,OACPW,GAAU,OACVA,GAAU,iCAAgCgB,EAAQ,GAAGQ,aACrDvB,EAAa,IAEbA,EAAa,GAAEe,EAAQ,GAAGQ,cAKW,GAAvCpC,KAAKQ,eAAe8B,QAAQ1B,KAC9BZ,KAAKQ,eAAeyB,KAAKrB,GACzBZ,KAAKS,iBAAiBwB,KAAKpB,GAC3BC,KAEFC,KAEFwB,SAAwBvC,S,6BCpGb,SAASD,IAEtBC,KAAKJ,MAAQ,GACbI,KAAKI,SAAW,GAChBJ,KAAKwC,mBAAqB,GAC1BxC,KAAKQ,eAAiB,GACtBR,KAAKS,iBAAmB,GACxBT,KAAKyC,aAAe,GACpBzC,KAAK0C,QAAU,GACf1C,KAAK2C,kBAAoB,GACzB3C,KAAKG,YAAc,GACnBH,KAAKK,OAAS,EACdL,KAAKM,WAAa,EAClBN,KAAK4C,QAAU,EACf5C,KAAK6C,YAAc,EACnB7C,KAAK8C,QAAS,EAEd9C,KAAK+C,2BAA4B,EACjC/C,KAAKgD,uBAAwB,EAC7BhD,KAAKiD,6BAA8B,EACnCjD,KAAKkD,oBAAqB,EAC1BlD,KAAKmD,uBAAwB,EAC7BnD,KAAKoD,kBAAmB,EACxBpD,KAAKqD,sBAAuB,EAC5BrD,KAAKsD,mBAAoB,EACzBtD,KAAKuD,uBAAwB,EAC7BvD,KAAKwD,+BAAgC,EACrCxD,KAAKyD,qBAAsB,EAC3BzD,KAAK0D,MAAQ,GACb1D,KAAK2D,YAAa,EAClB3D,KAAK4D,gBAAkB,GAMvB5D,KAAK6D,mBAAoB,EACzB7D,KAAK8D,KAAM,EACX9D,KAAK+D,eAAgB,EACrB/D,KAAKgE,SAAU,EACfhE,KAAKiE,sBAAwB,GAC7BjE,KAAKkE,cAAe,EACpBlE,KAAKO,gBAAkB,SAAU4D,KACjCnE,KAAKoE,cAAgB,G","file":"js/3006.c5983c374d1711546b80.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,combinaisonListes,prenom,texte_en_couleur} from '../../modules/outils.js'\nexport const titre = 'Produire une forme littérale en introduisant une lettre pour désigner une valeur inconnue'\n\n/**\n * Produire une forme littérale en introduisant une lettre pour désigner une valeur inconnue\n * * 4L13-1\n * @author Sébastien Lozano\n */\nexport default function Forme_litterale_introduire_une_lettre() {\n  'use strict';\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.debug = false;\n  this.sup = 1;\n  if (this.debug) {\n    this.nbQuestions = 3;\n  } else {\n    this.nbQuestions = 2;\n  };\n\n  this.titre = titre;\n  this.consigne = \"Exprimer le prix total de l'achat, en fonction des lettres introduites dans l'énoncé.\";\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  //this.nbQuestionsModifiable = false;\n  //sortieHtml? this.spacing = 3 : this.spacing = 2; \n  //sortieHtml? this.spacingCorr = 3 : this.spacingCorr = 2;\n\n  let type_de_questions_disponibles;\n\n  this.nouvelleVersion = function () {\n    if (this.debug) {\n      type_de_questions_disponibles = [1];\n    } else {\n      type_de_questions_disponibles = [1];\n    };\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    type_de_questions_disponibles = [1];\n    let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    //let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(type_de_questions_disponibles,this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\n      // une fonction pour gérer le pluriel \n      function pluriel(n, obj) {\n        if (n > 1) {\n          return obj.plur\n        } else {\n          return obj.sing\n        };\n      };\n\n      // une fonction pour gérer la chaine de sortie et supprimer le coeff 1 !\n      function sliceUn(n) {\n        if (n == 1) {\n          return ``;\n        } else {\n          return `${n}`;\n        };\n      };\n\n      // on definit un tableau de couples possibles\t\t\t\n      let situations = [\n        { prenom: prenom(), elt1: { lettre: 'c', article: 'un', sing: 'crayon', plur: 'crayons' }, elt2: { lettre: 'g', article: 'une', sing: 'gomme', plur: 'gommes' } },\n        { prenom: prenom(), elt1: { lettre: 'r', article: 'une', sing: 'règle', plur: 'règles' }, elt2: { lettre: 'e', article: 'une', sing: 'équerre', plur: 'équerres' } },\n        { prenom: prenom(), elt1: { lettre: 'p', article: 'une', sing: 'poire', plur: 'poires' }, elt2: { lettre: 'b', article: 'une', sing: 'banane', plur: 'bananes' } },\n        { prenom: prenom(), elt1: { lettre: 'c', article: 'un', sing: 'couteau', plur: 'couteaux' }, elt2: { lettre: 'f', article: 'une', sing: 'fourchette', plur: 'fourchettes' } },\n        { prenom: prenom(), elt1: { lettre: 'm', article: 'un', sing: 'marteau', plur: 'marteaux' }, elt2: { lettre: 'e', article: 'une', sing: 'enclume', plur: 'enclumes' } },\n      ]\n      let enonces = [];\n      let n = randint(1, 6);\n      let p = randint(1, 6);\n      let situation = situations[randint(0, situations.length - 1)];\n      enonces.push({\n        enonce: `${situation.prenom} veut acheter ${n} ${pluriel(n, situation.elt1)} et ${p} ${pluriel(p, situation.elt2)}.\n\t\t\t\t<br>On note $${situation.elt1.lettre}$\tle prix d'${situation.elt1.article} ${situation.elt1.sing} et $${situation.elt2.lettre}$\tle prix d'${situation.elt2.article} ${situation.elt2.sing}.`,\n        question: ``,\n        correction: `\n        ${situation.prenom} va payer $${n}$ fois le prix d'${situation.elt1.article} ${situation.elt1.sing} et $${p}$ fois le prix d'${situation.elt2.article} ${situation.elt2.sing}.\n        <br> C'est à dire $${n}\\\\times ${situation.elt1.lettre} + ${p}\\\\times ${situation.elt2.lettre} = ${sliceUn(n)}${situation.elt1.lettre} + ${sliceUn(p)}${situation.elt2.lettre}$.\n        <br>${texte_en_couleur(`Donc le prix total de l'achat est  $${sliceUn(n)}${situation.elt1.lettre} + ${sliceUn(p)}${situation.elt2.lettre}$.`)}\n        `\n      })\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte = `${enonces[0].enonce}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[0].correction}`;\n          };\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n\n  }\n  //this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  //this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\t\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}