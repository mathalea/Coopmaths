{"version":3,"sources":["webpack://mathalea/./src/js/modules/gestionQcm.js","webpack://mathalea/./src/js/exercices/6e/6C30-4.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["propositionsQcm","numeroExercice","i","tabrep","tabicone","texte","texteCorr","espace","sortieHtml","mathalea","sortieAMC","rep","length","amcReady","titre","PlacerLaVirgule","exercice","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","consigne","qcmDisponible","modeQcm","sup","nouvelleVersion","qcm","listeQuestions","listeCorrections","rang","tableauSolutionsDuQcm","coef","nombre","nombreentier","resultat","exposant","cpt","randint","calcul","choice","texNombre2","push","shuffle2tableaux","texFraction","texNombrec","indexOf","listeQuestionsToContenu","besoinFormulaireCaseACocher","document","addEventListener","$","checkbox","button","querySelector","event","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","reduce","a","b","spanReponseLigne","forEach","solution","label","check","style","backgroundColor","checked","innerHTML","color","fontSize","querySelectorAll","uicheck","classList","add","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","mg32Editable","listePackages"],"mappings":"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","file":"js/4462.a6a1f6aec1a426156ce8.js","sourcesContent":["/* global $ mathalea sortieHtml */\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function gestionQcmInteractif (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          const nbBonnesReponsesAttendues = exercice.tableauSolutionsDuQcm[i].reduce((a, b) => a + b, 0)\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.tableauSolutionsDuQcm[i].forEach((solution, rep) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${rep}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${rep}`)\n            if (solution === 1) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n            }\n          })\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '✔︎'\n            spanReponseLigne.style.color = 'green'\n          } else {\n            spanReponseLigne.innerHTML = '✖︎'\n            spanReponseLigne.style.color = 'red'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * \n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (numeroExercice, i, tabrep, tabicone) {\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (sortieHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  if (!mathalea.sortieAMC) {\n    texte += `<br>  Réponses possibles : ${espace}  <form id=\"formEx${numeroExercice}Q${i}\">`\n    for (let rep = 0; rep < tabrep.length; rep++) {\n      texte += `<div class=\"ui checkbox ex${numeroExercice}\">\n          <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${numeroExercice}Q${i}R${rep}\">\n          <label id=\"labelEx${numeroExercice}Q${i}R${rep}\">${tabrep[rep] + espace}</label>\n        </div>`\n      if (tabicone[rep] === 1) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[rep]}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n    }\n    texte += `<span id=\"resultatCheckEx${numeroExercice}Q${i}\"></span></form>`\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n","/* global mathalea */\nimport Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenu, randint, texNombrec, texNombre2, calcul, choice, texFraction, shuffle2tableaux } from '../../modules/outils.js'\nimport { gestionQcmInteractif, propositionsQcm } from '../../modules/gestionQcm.js'\n\nexport const amcReady = true\n\nexport const titre = 'Multiplication par 0,1 ; 0,01 ; 0,001 (Placer la virgule)'\n\n/**\n * @Auteur Jean-claude Lhote\n * Publié le 20/02/2021\n * Référence 6C30-4\n */\nexport default function PlacerLaVirgule () {\n  'use strict'\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 4 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.consigne = 'Les égalités suivantes sont fausses. Place la virgule correctement dans le résultat pour que l\\'égalité soit juste.'\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n  this.qcmDisponible = true\n  this.modeQcm = false\n  this.sup = false\n\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n  this.nouvelleVersion = function (numeroExercice) {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n\n    // On exporte le numéro de l'exercice pour adapter l'id du bouton de validation du QCM\n    this.numeroExercice = numeroExercice\n\n    this.qcm = ['6C30-4', [], 'Multiplication par 0,1 ; 0,01 ; 0,001 (Placer la virgule)', 1]\n\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    const rang = ['millièmes', 'centièmes', 'dixièmes']\n\n    // Indispensable d'exporter les solutions pour rendre le QCM interactif\n    this.tableauSolutionsDuQcm = []\n    for (let i = 0, texte, texteCorr, coef, nombre, nombreentier, resultat, exposant, tabrep, tabicone, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = '' // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n      coef = -randint(1, 3)\n      if (!this.sup) {\n        exposant = -randint(1, 3)\n      } else {\n        exposant = 0\n      }\n      nombreentier = calcul(randint(10, 1000) + randint(10, 999) * choice([0, 1000]))\n      nombre = calcul(nombreentier * 10 ** exposant)\n      resultat = calcul(nombre * 10 ** coef)\n      tabrep = [`$${texNombre2(resultat)}$`, `$${texNombre2(calcul(resultat / 10))}$`, `$${texNombre2(calcul(resultat * 10))}$`, `$${texNombre2(calcul(resultat / 100))}$`]\n      tabicone = [1, 0, 0, 0]\n      this.qcm[1].push([`Ou doit être placée la virgule dans le résultat ? $${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10 ** coef))}~~ = ~~\\\\ldots\\\\ldots\\\\ldots\\\\ldots$.\\\\\\\\ \\n`,\n        tabrep,\n        tabicone])\n\n      texte = `$${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10 ** coef))}~~ = ~~\\\\phantom{......}${texNombre2(nombreentier)}$<br>`\n      // eslint-disable-next-line no-undef\n      shuffle2tableaux(tabrep, tabicone)\n      if (this.modeQcm && !mathalea.sortieAMC) {\n        this.tableauSolutionsDuQcm[i] = tabicone\n        texte += propositionsQcm(numeroExercice, i, tabrep, tabicone, texte, texteCorr).texte\n        texteCorr += propositionsQcm(numeroExercice, i, tabrep, tabicone).texteCorr\n      } else {\n        texteCorr = `Quand on multiplie par $${texNombre2(calcul(10 ** coef))}=${texFraction(1, calcul(10 ** (-coef)))}$ chaque chiffre prend une valeur $${texNombrec(10 ** (-coef))}$ fois plus petite.<br>`\n        texteCorr += `Le chiffre des unités se positionne donc dans les ${rang[3 + coef]} :<br>`\n        texteCorr += `$${texNombre2(nombre)} \\\\times ${texNombre2(calcul(10 ** coef))} = ${texNombre2(resultat)}$`// ${texNombrec(Math.floor(resultat))}${miseEnEvidence(',')}${texNombrec(resultat-Math.floor(resultat)).replace('0,','')}$`\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n\n  this.besoinFormulaireCaseACocher = ['Nombres entiers', true]\n  // this.besoin_formulaire2_case_a_cocher = [\"Mode QCM\",false];\n  // this.besoin_formulaire3_case_a_cocher =['figure à main levée',true]\n  gestionQcmInteractif(this)\n} // Fin de l'exercice.\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}