{"version":3,"file":"js/2755.99fd739b63fb24e139e6.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G31-5.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureParentheseSiNegatif, ecritureAlgebrique } from '../../modules/outils.js'\nexport const titre = 'Déterminer une équation cartésienne à partir d\\'un point et de la pente.'\n/**\n * Description didactique de l'exercice\n * @author Stéphane Guyon\n * Référence\n*/\nexport default function Determinerequationcartesienneavecpente () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    for (let i = 0, xA, yA, m, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      xA = randint(-5, 5)\n      yA = randint(-5, 5)\n      m = randint(1, 5) * choice([-1, 1])\n      texte = `Soit $A(${xA};${yA})$ un point d'un repère $(O ; \\\\vec{i} ;\\\\vec{j})$.`\n      texte += `<br>Déterminer une équation cartésienne de la droite$(d)$ passant par le point $A$ et ayant pour coefficent directeur $${m}$.`\n      texteCorr = '<br>On sait que si une droite $(d)$ possède une pente égale à un réel $m$, alors elle admet $\\\\vec{u}(1;m)$ comme vecteur directeur.'\n      texteCorr += `<br>Dans notre situation, cela signifie que la droite $(d)$ dont nous cherchons une équation cartésienne, admet comme vecteur directeur $ \\\\vec{u}(1;${m})$.`\n      texteCorr += '<br>On sait d\\'autre part qu\\'une droite portée par un vecteur directeur de coordonnées $\\\\vec {u}(-b;a)$, avec $(-b;a)\\\\neq (0;0)$, admet une équation cartesienne de la forme $ax+by+c=0$'\n      texteCorr += `<br>Ce qui signifie que : $-b=1$ donc $b=-1$ et $a=${m}$.`\n      texteCorr += `<br>On en déduit que la droite $(d)$ admet une équation cartésienne de la forme $${m} x-y+c=0.$`\n      texteCorr += '<br>Il reste à déterminer la valeur de $c$.'\n      texteCorr += `<br>Pour cela nous allons utiliser le fait que $A$ appartient à la droite $(d)$, donc ses coordonnées $(${xA};${yA})$ vérifient l'équation : `\n      texteCorr += `$${m} x-y+c=0$`\n      texteCorr += `<br>Ce qui implique que  $${m}\\\\times ${ecritureParentheseSiNegatif(xA)}-${ecritureParentheseSiNegatif(yA)}+c=0$`\n      texteCorr += `<br>d'où $c=${-m * xA + yA}$.`\n      texteCorr += `<br>Ce qui permet de conclure qu'une équation cartésienne de $(d)$ est $(d):~${m} x-y${ecritureAlgebrique(-m * xA + yA)}=0$.`\n      if (m < 0 & -m * xA + yA < 0) {\n        texteCorr += `<br>ou encore plus simplement : $(d):~$  $${-m} x+y${ecritureAlgebrique(m * xA - yA)}=0$.`\n      }\n      if (this.questionJamaisPosee(i, xA, yA, m)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Determinerequationcartesienneavecpente","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","xA","yA","m","texte","texteCorr","i","cpt","randint","choice","ecritureParentheseSiNegatif","ecritureAlgebrique","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}