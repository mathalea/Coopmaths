{"version":3,"file":"js/64085.0fc22b33097e3c9938a4.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4G15.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,combinaisonListes,randint} from \"../../modules/outils.js\"\nimport {symetrieAnimee,rotationAnimee,translationAnimee,polygone,pointIntersectionDD,mathalea2d,point,milieu,pointSurSegment,droite,mediatrice,translation,similitude,rotation,pointAdistance,longueur,symetrieAxiale,vecteur,latexParPoint,tracePoint,labelPoint,polygoneAvecNom, renommePolygone} from \"../../modules/2d.js\"\nimport { nommePolygone } from '../../modules/2d.js';\nimport Alea2iep from \"../../modules/Alea2iep.js\";\n\nexport const titre=\"Tranformations de triangle\"\nexport default function LeNomDeLaFonctionExercice() {\n    \"use strict\"\n    Exercice.call(this)\n    this.titre=\"Tranformations de triangle\";\n    this.nbQuestions = 1; // Ici le nombre de questions (une seule pour cet exercice non modifiable)\n    this.nbQuestionsModifiable=false // désactive le formulaire nombre de questions\n    this.nbCols = 1; // Le nombre de colonnes dans l'énoncé LaTeX\n    this.nbColsCorr = 1;// Le nombre de colonne pour la correction LaTeX\n    this.pasDeVersionLatex=false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n    this.pas_de_version_HMTL=false // mettre à true si on ne veut pas de l'exercice en ligne\n    this.typeExercice = \"IEP\";\n   // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n  \n  //  this.sup = false; // A décommenter : valeur par défaut d'un premier paramètre\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.sup3 = false; // A décommenter : valeur par défaut d'un troisième paramètre\n  \n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n    this.nouvelleVersion = function (numeroExercice) {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n  \n    this.listeQuestions = [] // tableau contenant la liste des questions \n    this.listeCorrections = []\n  // Ci-dessus On crée une liste aléatoire comprenant nbQuestions parmi les types disponibles.\n  /* Un exemple ci-dessous : si la classe est 6, alors les types dispo sont 1 et 2 sinon , 1,2,3 et 4.\n  if (this.classe == 6) typesDeQuestionsDisponibles = [1, 2]\n      else typesDeQuestionsDisponibles = [1, 2, 3,4]\n  listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n  */\n  // boucle pour fabriquer les nbQuestions questions en s'assurant que si il n'y a pas nbQuestions différentes\n  // La boucle s'arrête après 50 tentatives.\n  \n      let objetsEnonce,objetsCorrection,paramsEnonce,paramsCorrection\n  \n        objetsEnonce = [] // on initialise le tableau des objets Mathalea2d de l'enoncé\n        objetsCorrection = [] // Idem pour la correction\n  \n\n        let texteCorr = `` // Idem pour le texte de la correction.\n        let largeur=20,hauteur=20\n        let A,B,C,triangle,triangle0,O,M,X,Y,triangle1,A1,B1,C1,d1,AA1,triangle2,med,nomd,D,F,triangle3,triangle4,triangle5,traces,labels\n        let xMin,xMax,yMin,yMax\n        let bordure,alpha,beta\n        let anim = new Alea2iep()\n        /***************************************/\n/********Ici on définit les objets 2d */\n/*************************************/\nwhile (largeur>16 && hauteur>16) {\n    xMin=0;\n    xMax=0;\n    yMin=0;\n    yMax=0;\nA=point(0,0,'A')\nB=pointAdistance(A,randint(40,60)/10,randint(70,100),'B')\nC=similitude(B,A,randint(20,50),randint(8,12)/10,'C')\ntriangle0=polygone(A,B,C)\ntriangle=polygoneAvecNom(A,B,C)\n//d0=droite(A,B)\nO=pointSurSegment(B,A,2+longueur(A,B))\n//d0.isVisible=false\nbeta=randint(-45,-20)\nA1=rotation(A,O,beta,'A')\nB1=rotation(B,O,beta,'B')\nC1=rotation(C,O,beta,'C')\ntriangle1=polygone(A1,B1,C1)\nrenommePolygone(triangle1,['A_1','B_1','C_1'])\nM=milieu(A,A1)\nd1=droite(A1,B1)\nAA1=droite(A,A1)\ntriangle2=symetrieAxiale(triangle1,d1)\nrenommePolygone(triangle2,['A_1','B_1','C_1'])\nmed=mediatrice(A,A1)\nX=pointSurSegment(M,O,5)\nY=pointSurSegment(O,M,10)\nD=similitude(B1,A1,randint(-40,-10),1.5,'D')\ntriangle3=rotation(triangle2,D,180)\nrenommePolygone(triangle3,['A_2','B_2','C_2'])\nF=translation(D,vecteur(B,A),'F')\ntraces = tracePoint(D,F)\nlabels=labelPoint(D,F)\ntriangle4=translation(triangle3,vecteur(D,F))\nrenommePolygone(triangle4,['A_3','B_3','C_3'])\nalpha=-randint(80,110)\ntriangle5=rotation(triangle4,F,alpha)\nrenommePolygone(triangle5,['A_4','B_4','C_4'])\n\nfor (let i =0; i<3; i++) {\nxMin=Math.min(xMin,triangle0.listePoints[i].x,triangle1.listePoints[i].x,triangle2.listePoints[i].x,triangle3.listePoints[i].x,triangle4.listePoints[i].x,triangle5.listePoints[i].x)\nxMax=Math.max(xMax,triangle0.listePoints[i].x,triangle1.listePoints[i].x,triangle2.listePoints[i].x,triangle3.listePoints[i].x,triangle4.listePoints[i].x,triangle5.listePoints[i].x)\nyMin=Math.min(yMin,triangle0.listePoints[i].y,triangle1.listePoints[i].y,triangle2.listePoints[i].y,triangle3.listePoints[i].y,triangle4.listePoints[i].y,triangle5.listePoints[i].y)\nyMax=Math.max(yMax,triangle0.listePoints[i].y,triangle1.listePoints[i].y,triangle2.listePoints[i].y,triangle3.listePoints[i].y,triangle4.listePoints[i].y,triangle5.listePoints[i].y)\n}\nxMax+=4\nxMin--\nyMin--\nyMax++\nlargeur=xMax-xMin\nhauteur=yMax-yMin\n\n}\n\nlet texte = `Construire<br>$A_1B_1C_1$ le triangle symétrique de $ABC$ par rapport à la droite $(d)$;<br>` // Nous utilisons souvent cette variable pour construire le texte de la question.\ntexte += `$A_2B_2C_2$ le triangle symétrique de $A_1B_1C_1$ par rapport au point $D$;<br>`\ntexte += `$A_3B_3C_3$ le triangle translaté de $A_2B_2C_2$ tel que $D$ soit transformé en $F$;<br>`\ntexte += `$A_4B_4C_4$ le triangle obtenu par la rotation de $A_3B_3C_3$ de centre $F$ et d'angle $${Math.abs(alpha)}\\\\degree$ dans le sens des aiguilles d'une montre.<br>`\n\nbordure=droite(point(xMin,yMin+2),point(xMax,yMin+2))\nnomd=latexParPoint('(d)',translation(milieu(B,B1),vecteur(1,0)),'black',30,12,\"\")\nlet triangle2a=symetrieAnimee(triangle0,med,`id='anim${numeroExercice}A' begin=\"0s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\nlet triangle3a=rotationAnimee(triangle2,D,180,`id='anim${numeroExercice}B' begin=\"2s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\nlet triangle4a=translationAnimee(triangle3,vecteur(D,F),`id='anim${numeroExercice}C' begin=\"4s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\nlet triangle5a=rotationAnimee(triangle4,F,alpha,`id='anim${numeroExercice}D' begin=\"6s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\nanim.vitesse=15\nanim.tempo=0.5\nanim.recadre(xMin,yMax)\nanim.polygoneRapide(...triangle0.listePoints)\nanim.pointsCreer(A,B,C,F,D)\nanim.couleur='black'\nanim.traitRapide(X,Y)\nanim.textePoint('(d)',milieu(B,B1))\nanim.symetrieAxialePolygone(triangle0,med,['A_1','B_1','C_1'],{couleur:'blue',couleurCodage:'lightblue'})\nanim.demiTourPolygone(triangle2,D,['A_2','B_2','C_2'],{couleur:'red',couleurCodage:'pink'})\nanim.translationPolygone(triangle3,D,F,['A_3','B_3','C_3'],{couleur:'brown',couleurCodage:'orange'})\nanim.rotationPolygone(triangle4,F,alpha,['A_4','B_4','C_4'],{couleur:'green',couleurCodage:'lightgreen'})\nanim.crayonMasquer()\n\ncontext.fenetreMathalea2d=[xMin,yMin,xMax,yMax]\n   objetsEnonce.push (triangle0,triangle[1],traces,labels,med,nomd) // On rempli les tableaux d'objets Mathalea2d\n  objetsCorrection.push(triangle0,triangle[1],traces,labels,med,nomd,triangle2,nommePolygone(triangle2),triangle3,nommePolygone(triangle3),triangle4,nommePolygone(triangle4),triangle5,nommePolygone(triangle5),triangle2a,triangle3a,triangle4a,triangle5a)\n  \n  //paramètres de la fenêtre Mathalea2d pour l'énoncé main levée\n    //    paramsEnonceml = { xmin: Math.min(objetsEnonceml.x), ymin: Math.min(objetsEnonceml.y), xmax: Math.max(objetsEnonceml.x), ymax: Math.max(objetsEnonceml.y), pixelsParCm: 20, scale: 1, mainlevee: true, amplitude: 1 }\n  //paramètres de la fenêtre Mathalea2d pour l'énoncé normal\n        paramsEnonce = { xmin:xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 1, mainlevee: false}\n  //paramètres de la fenêtre Mathalea2d pour la correction\n        paramsCorrection = {xmin:xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 1 }\n  // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n        texte += mathalea2d(paramsEnonce, objetsEnonce)\n  // On ajoute au texte de la correction, la figure de la correction\n        texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n        texteCorr += '<br>'\n        texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}A').beginElement()\"><i class=\"redo circle icon\"></i>symétrie axiale</button>`\n        texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}B').beginElement()\"><i class=\"redo circle icon\"></i>symétrie centrale</button>`\n        texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}C').beginElement()\"><i class=\"redo circle icon\"></i>translation</button>`\n        texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}D').beginElement()\"><i class=\"redo circle icon\"></i>rotation</button>`\n    \n        texteCorr += anim.html(numeroExercice)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        listeQuestionsToContenu(this); // On envoie l'exercice à la fonction de mise en page\n    };\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  \n  //\tthis.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n  \n  } // Fin de l'exercice.\n  ","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","LeNomDeLaFonctionExercice","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","typeExercice","nouvelleVersion","numeroExercice","objetsEnonce","objetsCorrection","paramsEnonce","paramsCorrection","listeQuestions","listeCorrections","A","B","C","triangle","triangle0","O","M","X","Y","triangle1","A1","B1","C1","d1","AA1","triangle2","med","nomd","D","F","triangle3","triangle4","triangle5","traces","labels","xMin","xMax","yMin","yMax","bordure","alpha","beta","texteCorr","largeur","hauteur","anim","Alea2iep","point","pointAdistance","randint","similitude","polygone","polygoneAvecNom","pointSurSegment","longueur","rotation","renommePolygone","milieu","droite","symetrieAxiale","mediatrice","translation","vecteur","tracePoint","labelPoint","i","Math","min","listePoints","x","max","y","texte","abs","latexParPoint","triangle2a","symetrieAnimee","triangle3a","rotationAnimee","triangle4a","translationAnimee","triangle5a","vitesse","tempo","recadre","polygoneRapide","pointsCreer","couleur","traitRapide","textePoint","symetrieAxialePolygone","couleurCodage","demiTourPolygone","translationPolygone","rotationPolygone","crayonMasquer","context","push","nommePolygone","xmin","ymin","xmax","ymax","pixelsParCm","scale","mainlevee","mathalea2d","html","listeQuestionsToContenu","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}