{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N31-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Encadrer_un_decimal_par_deux_entiers_consecutifs","typesDeQuestionsDisponibles","Exercice","this","beta","sup","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","shuffle","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","m","randint","c","d","u","di","ci","mi","enonces","push","enonce","texNombre","calcul","question","correction","miseEnEvidence","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/32657.41a293f049be34f75682.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,shuffle,combinaisonListesSansChangerOrdre,calcul,texNombre,miseEnEvidence} from '../../modules/outils.js'\n\nexport const titre = 'Encadrer un décimal par deux entiers consécutifs'\n\n/**\n * * Encadrer_un_decimal_par_deux_entiers_consecutifs\n * * 6N31-1\n * @author Sébastien Lozano\n */\nexport default function Encadrer_un_decimal_par_deux_entiers_consecutifs() {\n  'use strict';\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.beta = false;\n  this.sup = 1;\n  if (this.beta) {\n    this.nbQuestions = 3;\n  } else {\n    this.nbQuestions = 3;\n  };\n\n  this.titre = titre;\n  this.consigne = `Encadrer chaque nombre proposé par deux nombres entiers consécutifs.`;\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  //this.nbQuestionsModifiable = false;\n  context.isHtml ? this.spacing = 3 : this.spacing = 2;\n  context.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5;\n\n  let typesDeQuestionsDisponibles;\n\n  this.nouvelleVersion = function () {\n    if (this.beta) {\n      typesDeQuestionsDisponibles = [0, 1, 2];\n    } else {\n      //typesDeQuestionsDisponibles = shuffle([choice([1,3]),choice([2,4]),0]);\n      typesDeQuestionsDisponibles = shuffle([0, 1, 2]);\n\n    };\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n\n    //let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions); // Tous les types de questions sont posées --> à remettre comme ci dessus\t\t\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      let m = randint(1, 9),\n        c = randint(1, 9),\n        d = randint(1, 9),\n        u = randint(1, 9),\n        di = randint(1, 9),\n        ci = randint(1, 9),\n        mi = randint(1, 9);\n\n      // pour les situations, autant de situations que de cas dans le switch !\n\n      let enonces = [];\n      //for (let k=0;k<3;k++) {\n      enonces.push({\n        enonce: `\n          $\\\\ldots < ${texNombre(m * 1000 + c * 100 + d * 10 + u * 1 + calcul(di * 0.1 + ci * 0.01 + mi * 0.001))} < \\\\ldots$          \n\t\t\t\t\t`,\n        question: ``,\n        correction: `\n\t\t\t\t\t$${miseEnEvidence(texNombre(m * 1000 + c * 100 + d * 10 + u * 1))} < ${texNombre(m * 1000 + c * 100 + d * 10 + u * 1 + calcul(di * 0.1 + ci * 0.01 + mi * 0.001))} < ${miseEnEvidence(texNombre(m * 1000 + c * 100 + d * 10 + u * 1 + 1))}$\t\t\t\t\t`\n      });\n      enonces.push({\n        enonce: `\n          $\\\\ldots < ${texNombre(m * 1000 + c * 100 + d * 10 + u * 1 + calcul(di * 0.1 + ci * 0.01))} < \\\\ldots$          \n\t\t\t\t\t`,\n        question: ``,\n        correction: `\n\t\t\t\t\t$${miseEnEvidence(texNombre(m * 1000 + c * 100 + d * 10 + u * 1))} < ${texNombre(m * 1000 + c * 100 + d * 10 + u * 1 + calcul(di * 0.1 + ci * 0.01))} < ${miseEnEvidence(texNombre(m * 1000 + c * 100 + d * 10 + u * 1 + 1))}$\t\t\t\t\t`\n      });\n      enonces.push({\n        enonce: `\n          $\\\\ldots < ${texNombre(m * 1000 + c * 100 + d * 10 + u * 1 + calcul(di * 0.1))} < \\\\ldots$          \n\t\t\t\t\t`,\n        question: ``,\n        correction: `\n\t\t\t\t\t$${miseEnEvidence(texNombre(m * 1000 + c * 100 + d * 10 + u * 1))} < ${texNombre(m * 1000 + c * 100 + d * 10 + u * 1 + calcul(di * 0.1))} < ${miseEnEvidence(texNombre(m * 1000 + c * 100 + d * 10 + u * 1 + 1))}$\t\t\t\t\t`\n      });\n\n      //};\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n            texte += `             `;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[0].correction}`;\n          };\n          break;\n        case 1:\n          texte = `${enonces[1].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[1].correction}`;\n          };\n          break;\n        case 2:\n          texte = `${enonces[2].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[2].correction}`;\n          };\n          break;\n      };\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}