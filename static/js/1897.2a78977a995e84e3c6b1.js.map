{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N10-4.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Ecrire_nombres_entiers_formates","Exercice","this","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","zeroSuperflus","n","nzero","randint","nombrestring","toString","k","consigne","listeQuestions","listeCorrections","texte","texteCorr","a","b","c","nombre","tranche","i","cpt","splice","j","push","choice","est_diaporama","texNombre","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"8KAEO,MAAMA,EAAQ,kDAON,SAASC,IAEtBC,eAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,YAAc,EACnBD,KAAKE,OAAS,EACdF,KAAKG,WAAa,EAElBH,KAAKI,gBAAkB,WAIrB,SAASC,EAAcC,GACrB,IAAIC,GAAQC,SAAQ,EAAG,GAAIC,EAAeH,EAAEI,WAC5C,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAOI,IAAKF,EAAgB,IAAKA,EACrD,OAAOA,EANTT,KAAKY,SAAY,8FACjBZ,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GAMxB,IACE,IAAWC,EAAOC,EAAWC,EAAGC,EAAGC,EAAGC,EAAQC,EAASZ,EAAnDa,EAAI,EAA6DC,EAAM,EAC3ED,EAAItB,KAAKC,aAAesB,EAAM,IAE9B,CAIA,IAFAH,EAAS,EACTC,EAAU,GACO,GAAVD,GAAa,CAClBC,EAAQG,OAAO,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrBR,GAAIT,SAAQ,EAAG,GACfU,GAAIV,SAAQ,EAAG,GACfW,GAAIX,SAAQ,EAAG,GACfa,EAAQK,MAAKC,SAAO,CAAC,EAAG,IAAK,GAAI,GAAIV,EAAO,IAAJA,EAAa,IAAJA,EAAc,GAAJC,EAASC,EAAO,IAAJF,EAAU,GAAKC,EAAO,GAAJD,EAAY,IAAJA,EAAc,GAAJC,EAAS,KAEtH,IAAK,IAAIO,EAAI,EAAGA,EAAI,EAAGA,IACrBL,GAAUC,EAAQI,GAAK,KAAW,EAAJA,GAEd,GAAdJ,EAAQ,KAASD,EAAS,GAEhCX,EAAeJ,EAAce,GAExBL,EADAa,cACS,IAAGnB,KADY,IAAGA,iBAG3BO,EADAY,cACa,IAAEC,SAAUT,MADG,IAAGX,MAAgBoB,SAAUT,QAEnB,GAAvCpB,KAAKa,eAAeiB,QAAQf,KAE9Bf,KAAKa,eAAea,KAAKX,GACzBf,KAAKc,iBAAiBY,KAAKV,GAC3BM,KAEFC,KAEFQ,SAAwB/B,S,6BCtDb,SAASD,IAEtBC,KAAKH,MAAQ,GACbG,KAAKY,SAAW,GAChBZ,KAAKgC,mBAAqB,GAC1BhC,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GACxBd,KAAKiC,aAAe,GACpBjC,KAAKkC,QAAU,GACflC,KAAKmC,kBAAoB,GACzBnC,KAAKC,YAAc,GACnBD,KAAKE,OAAS,EACdF,KAAKG,WAAa,EAClBH,KAAKoC,QAAU,EACfpC,KAAKqC,YAAc,EACnBrC,KAAKsC,QAAS,EAEdtC,KAAKuC,2BAA4B,EACjCvC,KAAKwC,uBAAwB,EAC7BxC,KAAKyC,6BAA8B,EACnCzC,KAAK0C,oBAAqB,EAC1B1C,KAAK2C,uBAAwB,EAC7B3C,KAAK4C,kBAAmB,EACxB5C,KAAK6C,sBAAuB,EAC5B7C,KAAK8C,mBAAoB,EACzB9C,KAAK+C,uBAAwB,EAC7B/C,KAAKgD,+BAAgC,EACrChD,KAAKiD,qBAAsB,EAC3BjD,KAAKkD,MAAQ,GACblD,KAAKmD,YAAa,EAClBnD,KAAKoD,gBAAkB,GAMvBpD,KAAKqD,mBAAoB,EACzBrD,KAAKsD,KAAM,EACXtD,KAAKuD,eAAgB,EACrBvD,KAAKwD,SAAU,EACfxD,KAAKyD,eAAiB,GACtBzD,KAAK0D,sBAAwB,GAC7B1D,KAAK2D,cAAe,EACpB3D,KAAKI,gBAAkB,SAAUwD,KACjC5D,KAAK6D,cAAgB,G","file":"js/1897.2a78977a995e84e3c6b1.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,choice,texNombre} from '../../modules/outils.js'\nexport const titre = 'Écrire correctement les grands nombres entiers.'\n\n/**\n * 6N10-4\n * Supprimer les zéros inutiles, séparer les classes d'un nombre entier.\n * @Auteur Jean-Claude Lhote\n */\nexport default function Ecrire_nombres_entiers_formates() {\n  \"use strict\"\n  Exercice.call(this)\n  this.titre = titre;\n  this.nbQuestions = 5;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n\n  this.nouvelleVersion = function () {\n    this.consigne = `Écrire les nombres en chiffres en supprimant les zéros inutiles et en séparant les classes.`\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées \n    function zeroSuperflus(n) {\n      let nzero = randint(0, 2), nombrestring = n.toString()\n      for (let k = 0; k < nzero; k++) nombrestring = `0` + nombrestring\n      return nombrestring\n    }\n    for (\n      let i = 0, texte, texteCorr, a, b, c, nombre, tranche, nombrestring, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n\n      nombre = 0\n      tranche = []\n      while (nombre == 0) {\n        tranche.splice(0)\n        for (let j = 0; j < 3; j++) {\n          a = randint(1, 9)\n          b = randint(1, 9)\n          c = randint(1, 9)\n          tranche.push(choice([0, 100, 20, 80, a, a * 100, a * 100 + b * 10 + c, a * 100 + 80 + b, a * 10, a * 100 + b * 10 + 1]))\n        }\n        for (let j = 0; j < 3; j++) {\n          nombre += tranche[j] * 10 ** (j * 3)\n        }\n        if (tranche[2] == 0) nombre = 0\n      }\n      nombrestring = zeroSuperflus(nombre)\n      if (!est_diaporama) texte = `$${nombrestring}$ : \\\\dotfill`\n      else texte = `$${nombrestring}$`\n      if (!est_diaporama) texteCorr = `$${nombrestring}=${texNombre(nombre)}$.`\n      else texteCorr = `${texNombre(nombre)}.`\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  //this.besoinFormulaireNumerique = ['Type d\\'exercice', 2, '1 : Écrire en lettres un nombre donné en chiffres\\n2 : Écrire en chiffres un nombre donné en lettres'];\n  //this.besoinFormulaire2Numerique = ['Niveau', 3, '1 : Facile\\n2 : Moyen\\n3 : Difficile']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}