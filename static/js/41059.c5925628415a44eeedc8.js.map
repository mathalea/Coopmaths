{"version":3,"file":"js/41059.c5925628415a44eeedc8.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, calcul, choisitLettresDifferentes, lettreDepuisChiffre, arcenciel, texNombre } from '../../modules/outils.js'\nimport { point, tracePoint, labelPoint, segment, dansLaCibleCarree, cibleCarree, homothetie, longueur, mathalea2d } from '../../modules/2d.js'\nimport Alea2iep from '../../modules/Alea2iep.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Construire l’image d’un point par une homothetie avec cible auto-corrective'\n\n/**\n* Construction d'images par homothétie avec dispositif d'auto-correction aléatoire\n* Ref 3G11\n* @author Jean-Claude Lhote\n* Publié le 30/11/2020\n*/\nexport default function ConstruireHomothetiePoint3e () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 3\n  this.typeExercice = 'IEP'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    let nontrouve, assezloin, cible, s\n    const anim = new Alea2iep()\n    const k = randint(-4, 4, [0, -2, 2]) / 2\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let result = [0, 0]; let texteCorr = ''; const nbpoints = parseInt(this.sup)\n    const celluleAlea = function (rang) {\n      const lettre = lettreDepuisChiffre(randint(1, rang))\n      const chiffre = Number(randint(1, rang)).toString()\n      return lettre + chiffre\n    }\n    // On prépare la figure...\n    const O = point(0, 0, 'O')\n    const noms = choisitLettresDifferentes(nbpoints, 'QO', true)\n    this.consigne = `Construire l'image des points $${noms[0]}$`\n    for (let i = 1; i < nbpoints - 1; i++) {\n      this.consigne += `, $${noms[i]}$`\n    }\n    this.consigne += ` et $${noms[nbpoints - 1]}$ par l'homothétie de centre $O$`\n    this.consigne += ` et de rapport $${texNombre(k)}$.`\n    const cibles = []; const M = []; const N = []; const objetsEnonce = []; const objetsCorrection = [] // cibles, M point marqués, N symétrique de M\n    const cellules = []\n    let xMin, yMin, xMax, yMax;\n    [xMin, yMin, xMax, yMax] = [0, 0, 0, 0]\n    for (let i = 0; i < nbpoints; i++) { // On place les cibles.\n      N.push(point(calcul(randint(-60, 60, 0) / 10), calcul(randint(-60, 60, 0) / 10), noms[i] + \"'\"))\n      nontrouve = true\n      while (longueur(N[i], O) < 3 || nontrouve) {\n        nontrouve = true\n        if (longueur(N[i], O) < 3) {\n          N[i].x = calcul(randint(-60, 60, 0) / 10)\n          N[i].y = calcul(randint(-60, 60, 0) / 10)\n        } else {\n          assezloin = true\n          for (let j = 0; j < i; j++) {\n            if (longueur(N[i], N[j]) < 4.5) { assezloin = false }\n          }\n          if (assezloin === false) { // éloigner les points donc les grilles\n            N[i].x = calcul(randint(-60, 60, 0) / 10)\n            N[i].y = calcul(randint(-60, 60, 0) / 10)\n          } else { nontrouve = false }\n        }\n      }\n    }\n\n    objetsEnonce.push(tracePoint(O), labelPoint(O))\n    objetsCorrection.push(tracePoint(O), labelPoint(O))\n\n    for (let i = 0; i < nbpoints; i++) {\n      cellules.push(celluleAlea(4))\n      result = dansLaCibleCarree(N[i].x, N[i].y, 4, 0.6, cellules[i])\n      cible = cibleCarree({ x: result[0], y: result[1], rang: 4, num: i + 1, taille: 0.6 })\n      cible.taille = 0.6\n      cible.color = 'orange'\n      cible.opacite = 0.7\n      cibles.push(cible)\n    }\n    for (let i = 0; i < nbpoints; i++) {\n      M.push(homothetie(N[i], O, 1 / k, noms[i]))\n\n      objetsEnonce.push(tracePoint(M[i]), labelPoint(M[i]), cibles[i])\n      objetsCorrection.push(tracePoint(M[i], N[i]), labelPoint(M[i], N[i]), cibles[i])\n      if (k < 0) {\n        s = segment(M[i], N[i])\n      } else {\n        if (k < 1) {\n          s = segment(O, M[i])\n        } else {\n          s = segment(O, N[i])\n        }\n      }\n      s.color = arcenciel(i)\n      objetsCorrection.push(s)\n      texteCorr += `$${noms[i]}'$, l'image du point $${noms[i]}$ est dans la case ${cellules[i]} de la grille ${i + 1}.<br>`\n    }\n\n    for (let i = 0; i < nbpoints; i++) {\n      xMin = Math.min(xMin, N[i].x - 3, M[i].x - 3)\n      yMin = Math.min(yMin, N[i].y - 3, M[i].y - 3)\n      xMax = Math.max(xMax, N[i].x + 3, M[i].x + 3)\n      yMax = Math.max(yMax, N[i].y + 3, M[i].y + 3)\n    }\n    context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n    anim.xMin = xMin\n    anim.xMax = xMax\n    anim.yMin = yMin\n    anim.yMax = yMax\n\n    anim.recadre(xMin, yMax)\n\n    anim.pointCreer(O)\n    for (let i = 0; i < nbpoints; i++) {\n      anim.pointCreer(M[i])\n      anim.homothetiePoint(M[i], O, k, '', { positionTexte: { x: 2, y: -1 } })\n    }\n    this.listeQuestions.push(mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.5 }, objetsEnonce))\n    this.listeCorrections.push(texteCorr + mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.5 }, objetsCorrection) + anim.html(numeroExercice))\n    listeQuestionsToContenu(this)\n\n    //  let nonchoisi,coords=[],x,y,objetsEnonce=[],objetsCorrection=[],nomd,label_pos\n  }\n  this.besoinFormulaireNumerique = ['Nombre de points (1 à 5)', 5]\n  // this.besoinFormulaire2CaseACocher = [\"Avec des points de part et d'autre\"];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ConstruireHomothetiePoint3e","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","typeExercice","nouvelleVersion","numeroExercice","nontrouve","assezloin","cible","s","anim","Alea2iep","k","randint","listeQuestions","listeCorrections","result","texteCorr","nbpoints","parseInt","O","point","noms","choisitLettresDifferentes","i","texNombre","cibles","M","N","objetsEnonce","objetsCorrection","cellules","xMin","yMin","xMax","yMax","push","calcul","longueur","x","y","j","tracePoint","labelPoint","rang","lettreDepuisChiffre","Number","toString","dansLaCibleCarree","cibleCarree","num","taille","color","opacite","homothetie","segment","arcenciel","Math","min","max","context","recadre","pointCreer","homothetiePoint","positionTexte","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","html","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}