{"version":3,"file":"js/72415.cbafff616302f6009601.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5N20-0.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, shuffle, combinaisonListesSansChangerOrdre, calcul, texteEnCouleur, texteGras, numAlpha } from '../../modules/outils.js'\nimport { point, labelPoint, segment, cercleCentrePoint, rotation, codageAngleDroit, codeAngle, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Résoudre un problème en utilisant des fractions'\n\n/**\n * * résoudre un problème additif de fractions niv 5e\n * * 5N20-0\n * @author Sébastien Lozano\n */\nexport default function ProblemesAdditifsFractions5e () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.debug = false\n  this.sup = 1\n  this.nbQuestions = 1\n\n  this.titre = titre\n  this.consigne = 'Calculatrice autorisée.'\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  // this.nbQuestionsModifiable = false;\n  context.isHtml ? this.spacing = 1 : this.spacing = 1\n  context.isHtml ? this.spacingCorr = 1 : this.spacingCorr = 1\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    if (this.debug) {\n      typesDeQuestionsDisponibles = [0]\n    } else {\n      // typesDeQuestionsDisponibles = shuffle([choice([1,3]),choice([2,4]),0]);\n      typesDeQuestionsDisponibles = [0]\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    // let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // on définit les fractions pour les vols et les arguments pour le graphique\n      let fracVols = [\n        [1, 12, [1.8, ' ', 'black', 2, 1, 'red', 0.4]],\n        [1, 12, [1.8, ' ', 'black', 2, 1, 'red', 0.4]],\n        [1, 12, [1.8, ' ', 'black', 2, 1, 'red', 0.4]],\n        [1, 4, [1.8, ' ', 'black', 2, 1, 'blue', 0.4]],\n        [1, 2, [1.8, ' ', 'black', 2, 1, 'green', 0.4]]\n      ]\n      // on mélange pour l'aléatoire tant que les deux premieres fractions sont égales\n      do {\n        fracVols = shuffle(fracVols)\n      } while (fracVols[0][1] === fracVols[1][1])\n\n      // let q1a = randint(1,5); // indice pour faire varier la 1ere question sur la destination\n      // let q1b = randint(1,5,[q1a]); // indice pour faire varier la 2eme question sur la destination\n      let nbVolsTotal\n      let destinationsVols = [['l\\'', 'Afrique'], ['l\\'', 'Asie'], ['l\\'', 'Amerique'], ['l\\'', 'Europe'], ['la', ' France']]\n      destinationsVols = shuffle(destinationsVols)\n      do {\n        nbVolsTotal = randint(200, 600)\n      } while (nbVolsTotal % 2 !== 0 || nbVolsTotal % 3 !== 0 || nbVolsTotal % 4 !== 0)\n\n      // pour les situations\n      const situations = [\n        { // case 0 --> vols\n          fin_enonce_situation: 'vols d\\'une compagnie aérienne selon la destination',\n          nom_enonce: 'vols',\n          last_question: ['cette compagnie a affrété', 'vols', 'le nombre de vols', 'Le nombre de vols'],\n          cat1: {\n            destination: destinationsVols[0][0] + destinationsVols[0][1],\n            article: destinationsVols[0][0],\n            nom: destinationsVols[0][1],\n            frac: fracVols[0],\n            angle: calcul(360 / fracVols[0][1]),\n            arg_graph: fracVols[0][2]\n          },\n          cat2: {\n            destination: destinationsVols[1][0] + destinationsVols[1][1],\n            article: destinationsVols[1][0],\n            nom: destinationsVols[1][1],\n            frac: fracVols[1],\n            angle: calcul(360 / fracVols[1][1]),\n            arg_graph: fracVols[1][2]\n          },\n          cat3: {\n            destination: destinationsVols[2][0] + destinationsVols[2][1],\n            article: destinationsVols[2][0],\n            nom: destinationsVols[2][1],\n            frac: fracVols[2],\n            angle: calcul(360 / fracVols[2][1]),\n            arg_graph: fracVols[2][2]\n          },\n          cat4: {\n            destination: destinationsVols[3][0] + destinationsVols[3][1],\n            article: destinationsVols[3][0],\n            nom: destinationsVols[3][1],\n            frac: fracVols[3],\n            angle: calcul(360 / fracVols[3][1]),\n            arg_graph: fracVols[3][2]\n          },\n          cat5: {\n            destination: destinationsVols[4][0] + destinationsVols[4][1],\n            article: destinationsVols[4][0],\n            nom: destinationsVols[4][1],\n            frac: fracVols[4],\n            angle: calcul(360 / fracVols[4][1]),\n            arg_graph: fracVols[4][2]\n          },\n          // q1a:q1a,\n          // q1b:q1b,\n          nb_total: nbVolsTotal,\n          fig: ''\n        },\n        {// case 1 --> courses\n        },\n        {// case 2 --> activités sportives\n        },\n        {// case 3 -->\n        },\n        {// case 4 -->\n        }\n      ]\n      // une fonction pour gérer le codage des angles\n      function myCodageAngle (A, O, B, angle, [...args]) {\n        if (angle === 90) {\n          return codageAngleDroit(A, O, B)\n        } else {\n          return codeAngle(A, O, angle, ...args)\n        };\n      };\n\n      // une fonction pour gérer l'affichage correct de la légende\n      // param est l'ordonnée du point qui sert à la mediatrice !\n      ;\n\n      // une fonction pour positionner le label\n      // y est l'ordonnée du point\n      function myLabelPosition (y) {\n        if (y < 0) {\n          return 'below'\n        } else {\n          return 'above'\n        };\n      };\n\n      // une fonction pour gérer le texte en fonction de l'angle\n      function myTexteVolsCorr (angle) {\n        switch (angle) {\n          case 90:\n            return `du secteur est un angle droit, il mesure $${angle}\\\\degree$ sur les $360\\\\degree$ d'un tour complet, donc il représente $\\\\dfrac{${angle}}{360}$ du disque soit $\\\\dfrac{1}{4}$.`\n          case 30:\n            return `rouge apparaît 3 fois, l'angle vert vaut $180\\\\degree$ et il y a un angle droit.<br>\nL'angle pour un tour complet vaut $360\\\\degree$, donc l'angle rouge vaut $(360-180-90)\\\\div 3 = ${angle}\\\\degree$.<br>\nL'angle rouge mesure $${angle}\\\\degree$ sur les $360\\\\degree$ d'un tour complet, donc il représente $\\\\dfrac{${angle}}{360}$ du disque soit $\\\\dfrac{1}{12}$.\n`\n          case 180:\n            return `du secteur est un angle plat, il mesure $${angle}\\\\degree$ sur les $360\\\\degree$ d'un tour complet, donc il représente $\\\\dfrac{${angle}}{360}$ du disque soit $\\\\dfrac{1}{2}$.`\n        }\n      };\n\n      // on prépare la fenetre mathalea2d\n      const fenetreMathalea2D = { xmin: -10, ymin: -8, xmax: 10, ymax: 8, pixelsParCm: 20, scale: 0.5 }\n      const OVols = point(0, 0)\n      const AVols = point(fenetreMathalea2D.xmin + 6, 0)\n      const cVols = cercleCentrePoint(OVols, AVols, 'blue')\n      cVols.epaisseur = 2\n      // on trace les quartiers\n      // cat1\n      const BVols = rotation(AVols, OVols, situations[0].cat1.angle)\n      const segmentOAVols = segment(OVols, AVols)\n      const segmentOBVols = segment(OVols, BVols)\n      const codageAOB = myCodageAngle(AVols, OVols, BVols, situations[0].cat1.angle, situations[0].cat1.arg_graph)\n      // cat2\n      const CVols = rotation(BVols, OVols, situations[0].cat2.angle)\n      const segmentOCVols = segment(OVols, CVols)\n      const codageBOC = myCodageAngle(BVols, OVols, CVols, situations[0].cat2.angle, situations[0].cat2.arg_graph)\n      // cat3\n      const DVols = rotation(CVols, OVols, situations[0].cat3.angle)\n      const segmentODVols = segment(OVols, DVols)\n      const codageCOD = myCodageAngle(CVols, OVols, DVols, situations[0].cat3.angle, situations[0].cat3.arg_graph)\n      // cat4\n      const EVols = rotation(DVols, OVols, situations[0].cat4.angle)\n      const segmentOEVols = segment(OVols, EVols)\n      const codageDOE = myCodageAngle(DVols, OVols, EVols, situations[0].cat4.angle, situations[0].cat4.arg_graph)\n      // cat5\n      const FVols = rotation(EVols, OVols, situations[0].cat5.angle)\n      const segmentOFVols = segment(OVols, FVols)\n      const codageEOF = myCodageAngle(EVols, OVols, FVols, situations[0].cat5.angle, situations[0].cat5.arg_graph)\n\n      // légende\n      const ALegende = point(fenetreMathalea2D.xmin + 4, 0)\n      const LVolsegmentcat1 = rotation(ALegende, OVols, situations[0].cat1.angle / 2, situations[0].cat1.nom)\n      LVolsegmentcat1.positionLabel = myLabelPosition(LVolsegmentcat1.y)\n      const LLVolsegmentcat1 = rotation(AVols, OVols, situations[0].cat1.angle / 2, situations[0].cat1.nom)\n      const segmentLegendeCat1 = segment(LVolsegmentcat1, LLVolsegmentcat1)\n      segmentLegendeCat1.styleExtremites = '->'\n      segmentLegendeCat1.pointilles = true\n\n      const LVolsegmentcat2 = rotation(LVolsegmentcat1, OVols, situations[0].cat1.angle / 2 + situations[0].cat2.angle / 2, situations[0].cat2.nom)\n      LVolsegmentcat2.positionLabel = myLabelPosition(LVolsegmentcat2.y)\n      const LLVolsegmentcat2 = rotation(BVols, OVols, situations[0].cat2.angle / 2, situations[0].cat2.nom)\n      const segmentLegendeCat2 = segment(LVolsegmentcat2, LLVolsegmentcat2)\n      segmentLegendeCat2.styleExtremites = '->'\n      segmentLegendeCat2.pointilles = true\n\n      const LVolsegmentcat3 = rotation(LVolsegmentcat2, OVols, situations[0].cat2.angle / 2 + situations[0].cat3.angle / 2, situations[0].cat3.nom)\n      LVolsegmentcat3.positionLabel = myLabelPosition(LVolsegmentcat3.y)\n      const LLVolsegmentcat3 = rotation(CVols, OVols, situations[0].cat3.angle / 2, situations[0].cat3.nom)\n      const segmentLegendeCat3 = segment(LVolsegmentcat3, LLVolsegmentcat3)\n      segmentLegendeCat3.styleExtremites = '->'\n      segmentLegendeCat3.pointilles = true\n\n      const LVolsegmentcat4 = rotation(LVolsegmentcat3, OVols, situations[0].cat3.angle / 2 + situations[0].cat4.angle / 2, situations[0].cat4.nom)\n      LVolsegmentcat4.positionLabel = myLabelPosition(LVolsegmentcat4.y)\n      const LLVolsegmentcat4 = rotation(DVols, OVols, situations[0].cat4.angle / 2, situations[0].cat4.nom)\n      const segmentLegendeCat4 = segment(LVolsegmentcat4, LLVolsegmentcat4)\n      segmentLegendeCat4.styleExtremites = '->'\n      segmentLegendeCat4.pointilles = true\n\n      const LVolsegmentcat5 = rotation(LVolsegmentcat4, OVols, situations[0].cat4.angle / 2 + situations[0].cat5.angle / 2, situations[0].cat5.nom)\n      LVolsegmentcat5.positionLabel = myLabelPosition(LVolsegmentcat5.y)\n      const LLVolsegmentcat5 = rotation(EVols, OVols, situations[0].cat5.angle / 2, situations[0].cat5.nom)\n      const segmentLegendeCat5 = segment(LVolsegmentcat5, LLVolsegmentcat5)\n      segmentLegendeCat5.styleExtremites = '->'\n      segmentLegendeCat5.pointilles = true\n\n      const mesAppels = [\n        cVols,\n        segmentOAVols,\n        segmentOBVols,\n        segmentOCVols,\n        segmentODVols,\n        segmentOEVols,\n        segmentOFVols,\n        codageAOB,\n        codageBOC,\n        codageCOD,\n        codageDOE,\n        codageEOF,\n        labelPoint(LVolsegmentcat1),\n        labelPoint(LVolsegmentcat2),\n        labelPoint(LVolsegmentcat3),\n        labelPoint(LVolsegmentcat4),\n        labelPoint(LVolsegmentcat5),\n        segmentLegendeCat1,\n        segmentLegendeCat2,\n        segmentLegendeCat3,\n        segmentLegendeCat4,\n        segmentLegendeCat5\n      ]\n      const figVols = mathalea2d(\n        fenetreMathalea2D,\n        mesAppels\n      )\n      situations[0].fig = figVols\n\n      const enonces = []\n      let indexSouSegmentQuestion = 0\n      let indexSouSegmentQuestionCorr = 0\n\n      for (let k = 0; k < 1; k++) {\n        enonces.push({\n          enonce: `\nOn a représenté sur le diagramme circulaire ci-contre la répartition des ${situations[k].fin_enonce_situation}.<br>\n${texteGras('Les angles de même couleur ont la même mesure.')}<br>\n${texteGras('L\\'angle vert est un angle plat.')}<br>\n${situations[k].fig}<br>\n${numAlpha(indexSouSegmentQuestion++)} Quelle fraction représente les ${situations[k].nom_enonce} vers ${situations[k].cat1.destination} ?<br>\n${numAlpha(indexSouSegmentQuestion++)} Quelle fraction représente les ${situations[k].nom_enonce} vers ${situations[k].cat2.destination} ?<br>\n${numAlpha(indexSouSegmentQuestion++)} Sachant que ${situations[k].last_question[0]} ${situations[k].nb_total} ${situations[k].last_question[1]}\net que les ${situations[k].nom_enonce} vers ${situations[k].cat3.destination} représentent $\\\\dfrac{${situations[k].cat3.frac[0]}}{${situations[k].cat3.frac[1]}}$ de ce total,\ncaluler ${situations[k].last_question[2]} vers ${situations[k].cat3.destination}?\n\n`,\n          correction: `\n${numAlpha(indexSouSegmentQuestionCorr++)} Pour ${situations[k].cat1.destination} l'angle ${myTexteVolsCorr(situations[k].cat1.angle)}<br>\n${texteEnCouleur(`La fraction qui représente les ${situations[k].nom_enonce} vers ${situations[k].cat1.destination} vaut donc $\\\\dfrac{${situations[k].cat1.frac[0]}}{${situations[k].cat1.frac[1]}}$`)}.<br>\n\n${numAlpha(indexSouSegmentQuestionCorr++)} Pour ${situations[k].cat2.destination} l'angle ${myTexteVolsCorr(situations[k].cat2.angle)}<br>\n${texteEnCouleur(`La fraction qui représente les ${situations[k].nom_enonce} vers ${situations[k].cat2.destination} vaut donc $\\\\dfrac{${situations[k].cat2.frac[0]}}{${situations[k].cat2.frac[1]}}$`)}<br>\n\n${numAlpha(indexSouSegmentQuestionCorr++)} Calculons $\\\\dfrac{${situations[k].cat3.frac[0]}}{${situations[k].cat3.frac[1]}}$ de ${situations[k].nb_total} :<br> \n$\\\\dfrac{${situations[k].cat3.frac[0]}}{${situations[k].cat3.frac[1]}}\\\\times ${situations[k].nb_total} = \\\\dfrac{${situations[k].cat3.frac[0]}\\\\times ${situations[k].nb_total}}{${situations[k].cat3.frac[1]}} = \\\\dfrac{${situations[k].cat3.frac[0]}\\\\times ${calcul(situations[k].nb_total / situations[k].cat3.frac[1])}\\\\times ${situations[k].cat3.frac[1]}}{${situations[k].cat3.frac[1]}} = \\\\dfrac{${situations[k].cat3.frac[0]}\\\\times ${calcul(situations[k].nb_total / situations[k].cat3.frac[1])}\\\\times \\\\cancel{${situations[k].cat3.frac[1]}}}{\\\\cancel{${situations[k].cat3.frac[1]}}} = ${situations[k].cat3.frac[0]}\\\\times ${calcul(situations[k].nb_total / situations[k].cat3.frac[1])} = ${calcul(situations[k].nb_total / situations[k].cat3.frac[1])}$<br>\n${texteEnCouleur(`${situations[k].last_question[3]} vers ${situations[k].cat3.destination} vaut donc ${calcul(situations[k].nb_total / situations[k].cat3.frac[1])}.`)}\n`\n        })\n      };\n\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  // this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\n};\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ProblemesAdditifsFractions5e","typesDeQuestionsDisponibles","Exercice","this","debug","sup","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","nbVolsTotal","fracVols","shuffle","destinationsVols","randint","situations","fin_enonce_situation","nom_enonce","last_question","cat1","destination","article","nom","frac","angle","calcul","arg_graph","cat2","cat3","cat4","cat5","nb_total","fig","myCodageAngle","A","O","B","args","codageAngleDroit","codeAngle","myLabelPosition","y","myTexteVolsCorr","fenetreMathalea2D","xmin","ymin","xmax","ymax","pixelsParCm","scale","OVols","point","AVols","cVols","cercleCentrePoint","epaisseur","BVols","rotation","segmentOAVols","segment","segmentOBVols","codageAOB","CVols","segmentOCVols","codageBOC","DVols","segmentODVols","codageCOD","EVols","segmentOEVols","codageDOE","FVols","segmentOFVols","codageEOF","ALegende","LVolsegmentcat1","positionLabel","LLVolsegmentcat1","segmentLegendeCat1","styleExtremites","pointilles","LVolsegmentcat2","LLVolsegmentcat2","segmentLegendeCat2","LVolsegmentcat3","LLVolsegmentcat3","segmentLegendeCat3","LVolsegmentcat4","LLVolsegmentcat4","segmentLegendeCat4","LVolsegmentcat5","LLVolsegmentcat5","segmentLegendeCat5","mesAppels","labelPoint","figVols","mathalea2d","enonces","indexSouSegmentQuestion","indexSouSegmentQuestionCorr","k","push","enonce","texteGras","numAlpha","correction","texteEnCouleur","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}