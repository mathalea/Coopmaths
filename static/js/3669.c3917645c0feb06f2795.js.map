{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R20.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/modules/gestionQcm.js"],"names":["amcReady","titre","ExerciceAdditionsRelatifs","max","Exercice","this","sup","sup2","consigne","spacing","qcmDisponible","modeQcm","nouvelleVersion","numeroExercice","tabrep","tabicone","qcm","listeQuestions","listeCorrections","a","b","k","texte","texteCorr","i","cpt","nbQuestions","randint","choice","texNombre","ecritureAlgebrique","ecritureNombreRelatif","ecritureNombreRelatifc","shuffle2tableaux","mathalea","sortieAMC","tableauSolutionsDuQcm","propositionsQcm","indexOf","push","listeQuestionsToContenu","gestionQcmInteractif","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","mg32Editable","listePackages","exercice","document","addEventListener","$","checkbox","button","querySelector","event","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","reduce","spanReponseLigne","forEach","solution","rep","label","check","style","backgroundColor","checked","innerHTML","color","fontSize","querySelectorAll","uicheck","classList","add","espace","sortieHtml","length"],"mappings":"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","file":"js/3669.c3917645c0feb06f2795.js","sourcesContent":["/* global mathalea */\nimport Exercice from '../ClasseExercice.js'\nimport { shuffle2tableaux, listeQuestionsToContenu, randint, choice, ecritureNombreRelatif, ecritureNombreRelatifc, ecritureAlgebrique, texNombre } from '../../modules/outils.js'\nimport { gestionQcmInteractif, propositionsQcm } from '../../modules/gestionQcm.js'\n\nexport const amcReady = true\n\nexport const titre = 'Addition de deux entiers relatifs'\n\n/**\n* Additionner deux relatifs inférieurs à la valeur maximale en paramètre qui est par défaut à 20.\n*\n* Paramètre supplémentaire ; utilisation des écritures simplifiées\n* @Auteur Rémi Angot\n* 5R20\n*/\nexport default function ExerciceAdditionsRelatifs (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.qcmDisponible = true\n  this.modeQcm = false\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.numeroExercice = numeroExercice\n    this.qcm = ['5R20', [], 'tables et multiples de 10,100 et 1000', 1]\n    let tabrep, tabicone\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    for (let i = 0, a, b, k, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(1, this.sup)\n      b = randint(1, this.sup)\n      k = choice([[-1, -1], [-1, 1], [1, -1]]) // Les deux nombres relatifs ne peuvent pas être tous les deux positifs\n      a = a * k[0]\n      b = b * k[1]\n      if (this.sup2) {\n        texte = `$ ${texNombre(a)}${ecritureAlgebrique(b)} = \\\\dotfill $`\n        texteCorr = `$ ${a}${ecritureAlgebrique(b)} = ${a + b} $`\n      } else {\n        texte = '$ ' + ecritureNombreRelatif(a) + ' + ' + ecritureNombreRelatif(b) + ' = \\\\dotfill $'\n        texteCorr = '$ ' + ecritureNombreRelatifc(a) + ' + ' + ecritureNombreRelatifc(b) + ' = ' + ecritureNombreRelatifc(a + b) + ' $'\n      }\n      tabrep = [`$${a + b}$`, `$${a - b}$`, `$${-a + b}$`, `$${-a - b}$`]\n      tabicone = [1, 0, 0, 0]\n      shuffle2tableaux(tabrep, tabicone)\n      if (this.modeQcm && !mathalea.sortieAMC) {\n        this.tableauSolutionsDuQcm[i] = tabicone\n        texte += propositionsQcm(numeroExercice, i, tabrep, tabicone).texte\n        texteCorr += propositionsQcm(numeroExercice, i, tabrep, tabicone).texteCorr\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        this.qcm[1].push([`${texte}\\n`,\n          tabrep,\n          tabicone])\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n    gestionQcmInteractif(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ mathalea sortieHtml */\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function gestionQcmInteractif (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          const nbBonnesReponsesAttendues = exercice.tableauSolutionsDuQcm[i].reduce((a, b) => a + b, 0)\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.tableauSolutionsDuQcm[i].forEach((solution, rep) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${rep}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${rep}`)\n            if (solution === 1) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n            }\n          })\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '✔︎'\n            spanReponseLigne.style.color = 'green'\n          } else {\n            spanReponseLigne.innerHTML = '✖︎'\n            spanReponseLigne.style.color = 'red'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (numeroExercice, i, tabrep, tabicone) {\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (sortieHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  if (!mathalea.sortieAMC) {\n    if (sortieHtml) {\n      texte += `<br>  Réponses possibles : ${espace}  <form id=\"formEx${numeroExercice}Q${i}\">`\n    } else {\n      texte += `<br>  Réponses possibles : ${espace}`\n    }\n    for (let rep = 0; rep < tabrep.length; rep++) {\n      if (sortieHtml) {\n        texte += `<div class=\"ui checkbox ex${numeroExercice}\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${numeroExercice}Q${i}R${rep}\">${tabrep[rep] + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n      if (tabicone[rep] === 1) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[rep]}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${tabrep[rep]}` + espace\n      }\n    }\n    if (sortieHtml) {\n      texte += `<span id=\"resultatCheckEx${numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n"],"sourceRoot":""}