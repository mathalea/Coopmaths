{"version":3,"file":"js/82167.6c06c5924a73e082fc5d.js","mappings":"4GAMe,SAASA,IAItBC,KAAKC,MAAQ,GACbD,KAAKE,YAAa,EAclBF,KAAKG,SAAW,GAChBH,KAAKI,mBAAqB,GAC1BJ,KAAKK,aAAe,GACpBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKQ,QAAU,GACfR,KAAKS,kBAAoB,GACzBT,KAAKU,eAAiB,GACtBV,KAAKW,sBAAwB,GAK7BX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EAKnBb,KAAKc,mBAAoB,EACzBd,KAAKe,cAAgB,GACrBf,KAAKgB,oBAAqB,EAC1BhB,KAAKiB,uBAAwB,EAC7BjB,KAAKkB,OAAS,EACdlB,KAAKmB,WAAa,EAClBnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAM7BvB,KAAKwB,QAAS,EACdxB,KAAKyB,gBAAkB,EAKvBzB,KAAK0B,YAAc,GACnB1B,KAAK2B,mBAAqB,EAC1B3B,KAAK4B,+BAAgC,EACrC5B,KAAK6B,qBAAsB,EAC3B7B,KAAK8B,oBAAqB,EAC1B9B,KAAK+B,MAAQ,GAEb/B,KAAKgC,YAAa,EAClBhC,KAAKiC,uBAAwB,EAE7BjC,KAAKkC,2BAA4B,EACjClC,KAAKmC,uBAAwB,EAC7BnC,KAAKoC,6BAA8B,EAEnCpC,KAAKqC,4BAA6B,EAClCrC,KAAKsC,wBAAyB,EAC9BtC,KAAKuC,8BAA+B,EAEpCvC,KAAKwC,4BAA6B,EAClCxC,KAAKyC,wBAAyB,EAC9BzC,KAAK0C,8BAA+B,EAEpC1C,KAAK2C,4BAA6B,EAClC3C,KAAK4C,wBAAyB,EAC9B5C,KAAK6C,8BAA+B,EAMpC7C,KAAK8C,cAAe,EASpB9C,KAAK+C,eAAiB,GAMtB/C,KAAKgD,gBAAkB,SAAUC,KAQjCjD,KAAKkD,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAASnD,KAAK+C,eAAiB,IACnC,IAAIM,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIxD,KAAK+C,eAAeU,QAAQJ,IAAmB,KAGjDrD,KAAK+C,eAAeW,KAAKL,IAClB,I,yIC5HN,MAAMpD,EAAQ,mCAON,SAAS0D,IACtB5D,EAAAA,QAAAA,KAAcC,MACdA,KAAKG,SAAW,8CAChBH,KAAK0B,YAAc,EACnB1B,KAAKkB,OAAS,EACdlB,KAAKmB,WAAa,EAClBnB,KAAK4D,IAAM,EACX5D,KAAKyB,gBAAkB,EACvBzB,KAAK+B,MAAQ,GACb/B,KAAK6D,aAAe,OACpBC,EAAAA,GAAAA,OAAkB9D,KAAKa,YAAc,EAAMb,KAAKa,YAAc,IAC9Db,KAAKe,cAAgB,UAErBf,KAAKgD,gBAAkB,WACrBhD,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GAExB,IAAK,IAAWwD,EAAOC,EAAOC,EAAWC,EAAGC,EAAGC,EAAOC,EAAOC,EAApDnB,EAAI,EAAwDoB,EAAM,EAAGpB,EAAInD,KAAK0B,aAAe6C,EAAM,IAE1GL,GAAIM,EAAAA,EAAAA,MAAS,EAAG,EAAG,GAAK,OAAQA,EAAAA,EAAAA,MAAS,GAAI,IAC7CL,GAAIK,EAAAA,EAAAA,MAAS,EAAG,EAAG,GAAK,OAAQA,EAAAA,EAAAA,MAAS,GAAI,IAC7CR,EAAQ,CACD,eAAcE,KACf,mBACC,eAAcC,KACf,mBACJM,SAAQC,GAAM,IAAEC,EAAAA,EAAAA,KAAKD,OACvBN,GAAU,IAAEO,EAAAA,EAAAA,KAAK,WAAa,EAAI,aAAe,eACjDN,GAAU,IAAEM,EAAAA,EAAAA,KAAK,WAAa,EAAI,KAAO,KACzCX,EAAQ,CACD,kBAAiBK,EAAM,OACvB,kBAAiBA,EAAM,OACxB,uBACA,8CACA,uBACA,+CACJI,SAAQC,GAAM,IAAEC,EAAAA,EAAAA,KAAKD,OAGvBX,EAAS,KAAGY,EAAAA,EAAAA,KAAK,cAAaA,EAAAA,EAAAA,KAAK,QAEnCV,EAAY,qHACZK,EAAU,KAAQ,IAAEK,EAAAA,EAAAA,KAAK,kBAAqB,GAAM,EAAI,GAAM,WAASA,EAAAA,EAAAA,KAAK,kBAC5EV,GAAc,iBAAeU,EAAAA,EAAAA,KAAK,uBAAsBA,EAAAA,EAAAA,KAAK,QAAQL,KACrEL,GAAc,6BAA2BU,EAAAA,EAAAA,KAAK,aAAaP,6DAE3DH,IAAaW,EAAAA,EAAAA,KAAW,CAAEC,MAAO,GAAKC,MAAO,IAAKC,KAAM,GAAIC,KAAM,GAAKC,MAAO,KAAOC,EAAAA,EAAAA,KAAmB,CACtGC,QAAS,CACP,CAEE,CAAC,MAAO,IAAK,IAAK,CAAE,KAAGR,EAAAA,EAAAA,KAAK,QAAS,IAAK,IAAK,CAAE,KAAGA,EAAAA,EAAAA,KAAK,aAAc,IAAK,IAAK,CAAC,GAAI,IAAK,KAG7F,CAAC,aAAc,GAAK,KAAGA,EAAAA,EAAAA,KAAK,SAAU,GAAI,aAAc,KAG1DS,SAAU,CAAC,CAAC,OAAQ,GAAI,GAAI,EAAI,IAAGf,EAAM,MAAO,GAAI,IAAK,GAAK,IAAGA,EAAM,MAAO,IAC5E,CAAC,OAAQ,GAAI,GAAI,EAAI,KAAGM,EAAAA,EAAAA,KAAK,WAAY,GAAI,IAAK,GAAK,KAAGA,EAAAA,EAAAA,KAAK,WAAY,IAC3E,CAAC,OAAQ,GAAI,GAAI,EAAG,kBAAmB,GAAI,IAAK,GAAI,kBAAmB,KAGzEU,gBAAiB,GACjBC,MAAO,IACPC,QAAS,GACTC,IAAK,EACLC,cAAe,CAAC,GAAI,GAAI,GAAI,OAI9BxB,GAAc,mEAAiEU,EAAAA,EAAAA,KAAK,wBAAuBA,EAAAA,EAAAA,KAAK,YAAWA,EAAAA,EAAAA,KAAK,QAChIV,GAAc,sBAAoBU,EAAAA,EAAAA,KAAK,+BAEZ,KAAtB,IAAEA,EAAAA,EAAAA,KAAK,WACVV,GAAa,sBAEbA,GAAc,OAAKU,EAAAA,EAAAA,KAAK,YAExBL,EAAU,KAAQ,IAAEK,EAAAA,EAAAA,KAAK,qBAAwB,GAAM,EAAI,GAAM,WAASe,EAAAA,EAAAA,KAAU,IAAEf,EAAAA,EAAAA,KAAK,wBACtF,IAAEA,EAAAA,EAAAA,KAAK,eAAegB,SAAS,QAClC1B,GAAc,mDAAiDU,EAAAA,EAAAA,KAAK,WAAWL,oBAAwBK,EAAAA,EAAAA,KAAK,UAE5GV,GAAc,qEAAmEU,EAAAA,EAAAA,KAAK,WAAWL,uBAA2BK,EAAAA,EAAAA,KAAK,WAGrIV,GAAc,0DAAwDU,EAAAA,EAAAA,KAAK,iCAAgCA,EAAAA,EAAAA,KAAK,YAAWA,EAAAA,EAAAA,KAAK,QAChIV,GAAc,sBAAoBU,EAAAA,EAAAA,KAAK,+BAEZ,KAAtB,IAAEA,EAAAA,EAAAA,KAAK,WACVV,GAAa,sBAEbA,GAAc,OAAKU,EAAAA,EAAAA,KAAK,YACxBL,EAAU,KAAQ,IAAEK,EAAAA,EAAAA,KAAK,qBAAwB,GAAM,EAAI,GAAM,WAASA,EAAAA,EAAAA,KAAK,qBAC1E,IAAEA,EAAAA,EAAAA,KAAK,eAAegB,SAAS,SAElC3B,EAAS,OAAKW,EAAAA,EAAAA,KAAK,mBAAkBA,EAAAA,EAAAA,KAAK,sBAC1CV,GAAc,mDAAiDU,EAAAA,EAAAA,KAAK,WAAWL,WAAeK,EAAAA,EAAAA,KAAK,oBAEnGV,GAAc,qEAAmEU,EAAAA,EAAAA,KAAK,WAAWL,cAAkBK,EAAAA,EAAAA,KAAK,qBAIhF,IAAxC3E,KAAKM,eAAemD,QAAQM,KAE9B/D,KAAKM,eAAeoD,KAAKK,GACzB/D,KAAKO,iBAAiBmD,KAAKO,GAC3Bd,KAEFoB,KAEFqB,EAAAA,EAAAA,KAAwB5F","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaEqValAbs.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { xcas, listeQuestionsToContenu, randint, texMasse } from '../../modules/outils.js'\nimport { mathalea2d, tableauDeVariation } from '../../modules/2d.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Equation avec une valeur absolue'\n\n/**\n * Description didactique de l'exercice\n * @author Eric Schrafstetter\n * Référence\n*/\nexport default function EquationAvecUneValeurAbsolue () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Résoudre dans $\\\\mathbb{R}$ les équations :'\n  this.nbQuestions = 2\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.typeExercice = 'XCas'\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1.5)\n  this.listePackages = 'tkz-tab' // Pour la compilation LateX des tableaux de signes\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, texte, etape, texteCorr, a, b, pente, signe, entier, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      a = randint(-5, 5, 0) + '*x+' + randint(-20, 20)\n      b = randint(-5, 5, 0) + '*x+' + randint(-20, 20)\n      etape = [\n            `a:=simplify(${a})`,\n            'pente:=lcoeff(a)',\n            `b:=simplify(${b})`,\n            'x1:=solve(a)(1)'\n      ].forEach(e => `${xcas(e)}`)\n      pente = +`${xcas('pente')}` > 0 ? 'croissante' : 'décroissante'\n      signe = +`${xcas('pente')}` > 0 ? '-+' : '+-'\n      etape = [\n            `cas1:=simplify(${signe[0]}a)`,\n            `cas2:=simplify(${signe[1]}a)`,\n            'scas1:=solve(cas1=b)',\n            'xcas1:=piecewise(len(scas1)>0, scas1(1), i)',\n            'scas2:=solve(cas2=b)',\n            'xcas2:=piecewise(len(scas2)>0, scas2(1), i)'\n      ].forEach(e => `${xcas(e)}`)\n\n      // Enoncé\n      texte = `$${xcas('abs(a)')}=${xcas('b')}$`\n      // Corrigé\n      texteCorr = 'Pour supprimer la valeur absolue, on cherche la valeur remarquable qui annule l\\'expression entre les $\\\\mid.\\\\mid$'\n      entier = (1e3 * +`${xcas('approx(x1,4)')}`) % 1 === 0 ? '' : `\\\\simeq${xcas('approx(x1,4)')}`\n      texteCorr += `<br>On aura $${xcas('a')}=0$ lorsque $x=${xcas('x1')}${entier}$`\n      texteCorr += `<br>De plus la droite $y=${xcas('a')}$ est ${pente}, ce qui permet d'obtenir le tableau des signes suivant :`\n\n      texteCorr += mathalea2d({ xmin: -0.5, ymin: -8.1, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n        tabInit: [\n          [\n            // Première colonne du tableau avec le format [chaine d'entête, hauteur de ligne, nombre de pixels de largeur estimée du texte pour le centrage]\n            ['$x$', 2.5, 10], [`$${xcas('a')}$`, 1.5, 50], [`$${xcas('abs(a)')}$`, 1.5, 50], ['', 1.2, 20]\n          ],\n          // Première ligne du tableau avec chaque antécédent suivi de son nombre de pixels de largeur estimée du texte pour le centrage\n          ['$-\\\\infty$', 20, `$${xcas('x1')}$`, 40, '$+\\\\infty$', 20]\n        ],\n        // Les autres lignes du tableau dont le fonctionnement est expliqué plus haut\n        tabLines: [['Line', 20, '', 0, `$${signe[0]}$`, 50, 'z', 20, `$${signe[1]}$`, 50],\n          ['Line', 20, '', 0, `$${xcas('cas1')}$`, 50, 'z', 20, `$${xcas('cas2')}$`, 50],\n          ['Line', 20, '', 0, '$\\\\text{Cas 1}$', 50, 't', 20, '$\\\\text{Cas 2}$', 50]\n        ],\n\n        colorBackground: '',\n        espcl: 3.5, // taille en cm entre deux antécédents\n        deltacl: 0.8, // distance entre la bordure et les premiers et derniers antécédents\n        lgt: 8, // taille de la première colonne en cm\n        hauteurLignes: [15, 15, 15, 10]\n\n      }))\n\n      texteCorr += `<br>$\\\\underline{\\\\text{Cas 1}}$ : On cherche $x\\\\in ]-\\\\infty,${xcas('x1')}]$ tels que : $${xcas('cas1')}=${xcas('b')}$`\n      texteCorr += `<br>Ce qui donne $${xcas('simplify(cas1-b)')}=0$ d'où `\n\n      if (`${xcas('xcas1')}` === 'i') {\n        texteCorr += 'une impossibilité.'\n      } else {\n        texteCorr += `$x=${xcas('xcas1')}$`\n        // On teste si on doit afficher la valeur approchée du résultat\n        entier = (1e3 * +`${xcas('approx(xcas1,4)')}`) % 1 === 0 ? '' : `\\\\simeq${texMasse(`${xcas('approx(xcas1,4)')}`)}`\n        if (`${xcas('xcas1<=x1')}`.includes('true')) {\n          texteCorr += `<br>Cette solution $\\\\textbf{convient}$ car $x=${xcas('xcas1')}${entier}\\\\in ]-\\\\infty,${xcas('x1')}]$`\n        } else {\n          texteCorr += `<br>Cette solution $\\\\underline{\\\\text{ne convient pas}}$ car $x=${xcas('xcas1')}${entier}\\\\notin ]-\\\\infty,${xcas('x1')}]$`\n        }\n      }\n      texteCorr += `<br>$\\\\underline{\\\\text{Cas 2}}$ : On cherche $x\\\\in [${xcas('x1')},+\\\\infty[$ tels que : $${xcas('cas2')}=${xcas('b')}$`\n      texteCorr += `<br>Ce qui donne $${xcas('simplify(cas2-b)')}=0$ d'où `\n\n      if (`${xcas('xcas2')}` === 'i') {\n        texteCorr += 'une impossibilité.'\n      } else {\n        texteCorr += `$x=${xcas('xcas2')}$`\n        entier = (1e3 * +`${xcas('approx(xcas2,4)')}`) % 1 === 0 ? '' : `\\\\simeq${xcas('approx(xcas2,4)')}`\n        if (`${xcas('xcas2>=x1')}`.includes('true')) {\n          // eslint-disable-next-line no-unused-vars\n          etape = `$x=${xcas('xcas2')}\\\\simeq${xcas('approx(xcas2,4)')}$`\n          texteCorr += `<br>Cette solution $\\\\textbf{convient}$ car $x=${xcas('xcas2')}${entier}\\\\in [${xcas('x1')},+\\\\infty[$`\n        } else {\n          texteCorr += `<br>Cette solution $\\\\underline{\\\\text{ne convient pas}}$ car $x=${xcas('xcas2')}${entier}\\\\notin [${xcas('x1')},+\\\\infty[$`\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 3]\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","EquationAvecUneValeurAbsolue","sup","typeExercice","context","texte","etape","texteCorr","a","b","pente","signe","entier","cpt","randint","forEach","e","xcas","mathalea2d","xmin","ymin","xmax","ymax","scale","tableauDeVariation","tabInit","tabLines","colorBackground","espcl","deltacl","lgt","hauteurLignes","texMasse","includes","listeQuestionsToContenu"],"sourceRoot":""}