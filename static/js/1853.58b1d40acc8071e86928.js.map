{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3L11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","ExerciceDevelopper","difficulte","Exercice","this","sup","parseInt","consigne","spacing","nbQuestions","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","lettre","interactif","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","reponse","i","cpt","k","randint","choice","a","b","inconnue","lettreDepuisChiffre","ecritureAlgebrique","ecritureParentheseSiNegatif","signe","abs","c","ecritureParentheseSiMoins","setReponse","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1853.58b1d40acc8071e86928.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif, ecritureParentheseSiMoins, signe, abs, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Utiliser la simple distributivité'\n\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Développer en utilisant la distributivité simple\n *\n * * La lettre peut être x, y, z, t, a, b ou c\n * * 3 fois sur 6 c'est une distributivité simple :  k(ax+b)\n * * 1 fois sur 6 c'est une distributivité simple : (ax+b)×k\n * * 1 fois sur 6, la variable est en facteur : kx(ax+b)\n * * 1 fois sur 6 il faut ensuite réduire : k(ax+b)+c\n *\n * Niveau de difficulté :\n * * 1 : Multiplication par un facteur positif\n * * 2: Multiplication par un facteur relatif\n * @author Rémi Angot\n * 4L10 et 3L11\n */\nexport default function ExerciceDevelopper (difficulte = 1) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = difficulte\n  this.sup = parseInt(this.sup)\n  this.titre = titre\n  this.interactifType = interactifType\n  this.interactifReady = interactifReady\n  this.consigne = 'Développer.'\n  this.spacing = 1\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let lettre = ['x', 'y', 'z', 't', 'a', 'b', 'c']\n    if (this.interactif) lettre = ['x']\n    const typesDeQuestionsDisponibles = [\n      'simple',\n      'simple',\n      'simple2',\n      'x_en_facteur',\n      'developper_et_reduire'\n    ]\n    let typesDeQuestions\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, reponse, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      let k = randint(2, 11)\n      if (this.sup > 1) {\n        // si difficulté 2, k peut être négatif\n        k = k * choice([-1, 1])\n      }\n      const a = randint(1, 9)\n      const b = randint(1, 9) * choice([-1, 1])\n      const inconnue = choice(lettre)\n      switch (typesDeQuestions) {\n        case 'simple':\n          if (a === 1) {\n            // ne pas écrire 1x\n            texte = `$${lettreDepuisChiffre(\n              i + 1\n            )}=${k}(${inconnue}${ecritureAlgebrique(b)})$`\n          } else {\n            texte = `$${lettreDepuisChiffre(\n              i + 1\n            )}=${k}(${a}${inconnue}${ecritureAlgebrique(b)})$`\n          }\n\n          if (a === 1) {\n            // ne pas écrire 1x\n            texteCorr = `$${lettreDepuisChiffre(i + 1)}=${k}(${inconnue}${ecritureAlgebrique(b)})=${k}\\\\times ${inconnue}+${ecritureParentheseSiNegatif(k)}\\\\times${ecritureParentheseSiNegatif(b)}=${k * a}${inconnue}${ecritureAlgebrique(k * b)}$`\n          } else {\n            texteCorr = `$${lettreDepuisChiffre(\n              i + 1\n            )}=${k}(${a}${inconnue}${ecritureAlgebrique(b)})=${k}\n            \\\\times ${a}${inconnue}+${ecritureParentheseSiNegatif(\n              k\n            )}\\\\times${ecritureParentheseSiNegatif(b)}=${k * a}${inconnue}${ecritureAlgebrique(k * b)}$`\n          }\n          reponse = `${k * a}${inconnue}${ecritureAlgebrique(k * b)}`\n          break\n        case 'simple2':\n          if (a === 1) {\n            // ne pas écrire 1x\n            texte = `$${lettreDepuisChiffre(\n              i + 1\n            )}=(${inconnue}${ecritureAlgebrique(\n              b\n            )})\\\\times${ecritureParentheseSiNegatif(k)}$`\n          } else {\n            texte = `$${lettreDepuisChiffre(\n              i + 1\n            )}=(${a}${inconnue}${ecritureAlgebrique(\n              b\n            )})\\\\times${ecritureParentheseSiNegatif(k)}$`\n          }\n\n          if (a === 1) {\n            // ne pas écrire 1x\n            texteCorr = `$${lettreDepuisChiffre(i + 1)}=(${inconnue}${ecritureAlgebrique(b)})\\\\times${ecritureParentheseSiNegatif(k)}=${k}\\\\times ${inconnue}+${ecritureParentheseSiNegatif(k)}\\\\times${ecritureParentheseSiNegatif(b)}=${k * a}${inconnue}${ecritureAlgebrique(k * b)}$`\n          } else {\n            texteCorr = `$${lettreDepuisChiffre(\n              i + 1\n            )}=(${a}${inconnue}${ecritureAlgebrique(b)})\\\\times${ecritureParentheseSiNegatif(k)}=${k}\\\\times ${a}${inconnue}+${ecritureParentheseSiNegatif(k)}\\\\times${ecritureParentheseSiNegatif(b)}=${k * a}${inconnue}${ecritureAlgebrique(k * b)}$`\n          }\n          reponse = `${k * a}${inconnue}${ecritureAlgebrique(k * b)}`\n          break\n        case 'x_en_facteur':\n          if (a === 1) {\n            // ne pas écrire 1x\n            texte = `$${lettreDepuisChiffre(\n              i + 1\n            )}=${k}${inconnue}(${inconnue}${ecritureAlgebrique(b)})$`\n          } else {\n            texte = `$${lettreDepuisChiffre(\n              i + 1\n            )}=${k}${inconnue}(${a}${inconnue}${ecritureAlgebrique(b)})$`\n          }\n\n          if (a === 1) {\n            // ne pas écrire 1x\n            texteCorr = `$${lettreDepuisChiffre(\n              i + 1\n            )}=${k}${inconnue}(${inconnue}${ecritureAlgebrique(\n              b\n            )})=${k}${inconnue}\\\\times ${inconnue} ${signe(\n              k * b\n            )}${k}${inconnue}\\\\times ${abs(b)}=${k * a}${inconnue}^2${ecritureAlgebrique(k * b)}${inconnue}$`\n          } else {\n            if (k > 0) {\n              texteCorr = `$${lettreDepuisChiffre(\n                i + 1\n              )}=${k}${inconnue}(${a}${inconnue}${ecritureAlgebrique(\n                b\n              )})=${k}${inconnue}\\\\times ${a}${inconnue} + ${k}${inconnue}\\\\times ${ecritureParentheseSiNegatif(\n                b\n              )}=${k * a}${inconnue}^2${ecritureAlgebrique(\n                k * b\n              )}${inconnue}$`\n            } else {\n              texteCorr = `$${lettreDepuisChiffre(\n                i + 1\n              )}=${k}${inconnue}(${a}${inconnue}${ecritureAlgebrique(\n                b\n              )})=${k}${inconnue}\\\\times ${a}${inconnue} + (${k}${inconnue})\\\\times ${ecritureParentheseSiNegatif(\n                b\n              )}=${k * a}${inconnue}^2${ecritureAlgebrique(\n                k * b\n              )}${inconnue}$`\n            }\n          }\n          reponse = `${k * a}${inconnue}^2${ecritureAlgebrique(k * b)}${inconnue}`\n          break\n        case 'developper_et_reduire':\n          const c = randint(2, 9)\n          if (a === 1) {\n            // ne pas écrire 1x\n            texte = `$${lettreDepuisChiffre(\n              i + 1\n            )}=${k}(${inconnue}${ecritureAlgebrique(b)})+${c}$`\n          } else {\n            texte = `$${lettreDepuisChiffre(\n              i + 1\n            )}=${k}(${a}${inconnue}${ecritureAlgebrique(b)})+${c}$`\n          }\n\n          if (a === 1) {\n            // ne pas écrire 1x\n            texteCorr = `$${lettreDepuisChiffre(\n              i + 1\n            )}=${k}(${inconnue}${ecritureAlgebrique(\n              b\n            )})+${c}=${k}\\\\times ${inconnue}+${ecritureParentheseSiNegatif(\n              k\n            )}\\\\times${ecritureParentheseSiNegatif(b)}+${c}\n            =${k * a}${inconnue}${ecritureAlgebrique(k * b)}+${c}=${k * a}${inconnue}${ecritureAlgebrique(k * b + c)}$`\n          } else {\n            texteCorr = `$${lettreDepuisChiffre(\n              i + 1\n            )}=${k}(${a}${inconnue}${ecritureAlgebrique(\n              b\n            )})+${c}=${k}\\\\times${ecritureParentheseSiMoins(\n              a + inconnue\n            )}+${ecritureParentheseSiNegatif(\n              k\n            )}\\\\times${ecritureParentheseSiNegatif(b)}+${c}\n            =${k * a}${inconnue}${ecritureAlgebrique(k * b)}+${c}=${k * a}${inconnue}${ecritureAlgebrique(k * b + c)}$`\n          }\n          reponse = `${k * a}${inconnue}${ecritureAlgebrique(k * b + c)}`\n          break\n      }\n      setReponse(this, i, reponse)\n      texte += ajouteChampTexteMathLive(this, i)\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    2,\n    '1 : Multiplication par un facteur positif\\n2: Multiplication par un facteur relatif'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}