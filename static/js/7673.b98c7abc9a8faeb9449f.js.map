{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G32.js"],"names":["titre","Calculs_trigonometriques","Exercice","this","consigne","nbCols","nbColsCorr","sup","tailleDiaporama","video","nbQuestions","spacingCorr","spacing","nouvelleVersion","listeQuestions","listeCorrections","distance","alfa","baita","beta","alpha","taille","A","B","S","C","R","p","objets","context","texte","texteCorr","j","i","cpt","randint","Math","round","tan","PI","point","polygoneAvecNom","color","couleurDeRemplissage","opaciteDeRemplissage","opacite","push","segment","codageAngleDroit","afficheMesureAngle","texteSurSegment","texNombre","texteParPosition","milieu","x","y","numAlpha","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","indexOf","listeQuestionsToContenu","besoinFormulaireCaseACocher"],"mappings":"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","file":"js/7673.b98c7abc9a8faeb9449f.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, numAlpha,arrondi, calcul, texNombre, texNombrec, arrondiVirgule } from '../../modules/outils.js'\nimport { texteSurSegment, tracePoint,labelPoint,projectionOrtho, pointAdistance,droite, polygoneAvecNom, afficheMesureAngle, codageAngleDroit, point, segment, texteParPosition, milieu, mathalea2d } from '../../modules/2d.js';\nimport {point3d,vecteur3d,sphere3d,arete3d,rotationV3d,demicercle3d,homothetie3d} from '../../modules/3d.js'\nexport const titre = 'Calculer la largeur d’une rivière'\n\n/**\n * Propose de calculer la largeur d'une rivière\n * @author Jean-Claude Lhote\n * Référence 3G32\n*/\nexport default function Calculs_trigonometriques() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbCols = 1; // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1; // Uniquement pour la sortie LaTeX\n  this.sup = true;\n  this.tailleDiaporama = 100; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = \"\" // Id YouTube ou url\n  this.nbQuestions = 1\n  this.spacingCorr=2\n  this.spacing=2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let distance, hauteur,alfa,baita, beta,alf,bait, alpha, teta, taille, index, A, B, O, H, S, C,M,R,R2,Axe,normalV,normalH,P,HP,Sph,OP,PoleNord,PoleSud, objets = [], p\n    if (context.isHtml) {\n      alfa='α'\n      baita='β'\n    }\n    else {\n      alfa='\\\\alpha'\n      baita='\\\\beta'\n    }\n    for (let i = 0, texte, texteCorr,j, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n          objets=[]\n            alpha = randint(25, 65)\n            j=0\n            beta = alpha+randint(2,5)\n            distance=randint(7,15)*10\n            taille=Math.round(distance*(Math.tan(beta*Math.PI/180)-Math.tan(alpha*Math.PI/180)))\n            A = point(0, 7, 'A')\n            B = point(0, 0, 'B')\n            C = point(7, 0, 'C')\n            S = point(12,0, 'S')\n            p = polygoneAvecNom(A, B, C,S)\n            R = polygoneAvecNom(point(7,-1),point(12,-1),point(12,8),point(7,8))\n            R[0].color='blue'\n            R[0].couleurDeRemplissage='blue'\n            R[0].opaciteDeRemplissage=0.5\n            R[0].opacite=0.5\n            objets.push(p[1], p[0],R[0], segment(A, C),  codageAngleDroit(A, B, C))\n            objets.push(afficheMesureAngle(B,A,C, 'black', 1, `${alfa}`), afficheMesureAngle(B,A,S, 'black', 2, `${baita}`))\n            objets.push(texteSurSegment(`${texNombre(distance)} m`, A, B, 'black', -0.5), texteParPosition(`l`, milieu(C, S).x, milieu(C, S).y+0.5, 0, 'black', 2, \"middle\", true))\n  \n            texte = `Un géomètre veut mesurer la largeur d'une rivière.<br>`\n            texte+=`Pour cela, il remarque une souche notée $S$ sur la rive opposée.<br>`;\n            texte += `Il a placé un cône sur sa rive en face de la souche, son emplacement est noté $C$.<br>`\n            texte+=`Ensuite il s'est éloigné de la berge en restant aligné avec la souche $S$ et le cône $C$ jusqu'à un endroit où il place un bâton noté $B$.<br>`\n            texte+=`Du bâton, il effectue un quart de tour et s'éloigne d'une distance de $${distance}$ m jusqu'à son appareil de mesure noté $A$.<br>`\n            texte+=`A l'aide de son appareil, il mesure l'angle $\\\\widehat{BAC}$ noté $${alfa}$  et l'angle $\\\\widehat{BAS}$ noté $${baita}$.<br>`\n            if (this.sup) {\n              texte+=`${numAlpha(j)}Exprimer $BC$ en fonction de $AB$ et de $${alfa}$.<br>`\n              j++\n              texte+=`${numAlpha(j)}Exprimer $BS$ en fonction de $AB$ et de $${baita}$.<br>`\n              j++\n            }\n            texte+=`${numAlpha(j)}Exprimer $CS$ en fonction de $AB$, de $${alfa}$ et de $${baita}$.<br>`\n            j++\n            texte+=`${numAlpha(j)}Calculer la largeur de la rivière au mètre près sachant que $${alfa}=${alpha}\\\\degree$ et $${baita}=${beta}\\\\degree$.<br>`\n            texte+=mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 8, pixelsParCm: 20, scale: 0.5 }, objets)+'<br>';\n            j=0\n            texteCorr = mathalea2d({ xmin: -1, ymin: -1, xmax: 14, ymax: 8, pixelsParCm: 20, scale: 0.5 }, objets)+'<br>'\n            if (this.sup) {\n              texteCorr+=`${numAlpha(j)}Dans le triangle $ABC$ rectangle en $B$ on a : $\\\\tan(${alfa})=\\\\dfrac{BC}{AB}$ d'où $BC=AB\\\\times \\\\tan(${alfa})$.<br>`\n              j++\n              texteCorr+=`${numAlpha(j)}Dans le triangle $ABS$ rectangle en $B$ on a : $\\\\tan(${baita})=\\\\dfrac{BS}{AB}$ d'où $BS=AB\\\\times \\\\tan(${baita})$.<br>`\n              j++\n            }\n            texteCorr+=`${numAlpha(j)}Comme $BS=AB\\\\times \\\\tan(${baita})$ et $BC=AB\\\\times \\\\tan(${alfa})$, alors $CS=AB\\\\times (\\\\tan(${baita})-\\\\tan(${alfa}))$.<br>`\n            j++\n            texteCorr+=`${numAlpha(j)}Donc $CS=${distance}\\\\times (\\\\tan(${beta})-\\\\tan(${alpha}))\\\\approx ${taille}$ m.<br>`\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireCaseACocher = ['Afficher un schéma et des questions intermédiaires'];\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n\n"],"sourceRoot":""}