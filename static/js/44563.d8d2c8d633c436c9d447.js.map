{"version":3,"file":"js/44563.d8d2c8d633c436c9d447.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6G25.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, calcul, choisitLettresDifferentes, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { point, tracePoint, pointAdistance, labelPoint, droite, droiteParPointEtPerpendiculaire, codageMediatrice, segmentAvecExtremites, cercle, pointIntersectionLC, dansLaCibleCarree, cibleCarree, homothetie, similitude, texteParPoint, mathalea2d, positionLabelDroite, fixeBordures, norme, translation, vecteur } from '../../modules/2d.js'\nexport const titre = 'Construire des médiatrices avec cible auto-corrective'\nexport const amcReady = true\nexport const amcType = 'AMCOpen'\n/**\n * Construction de médiatrices avec dispositif d'auto-correction aléatoire\n * Ref 6G25\n * @author Jean-Claude Lhote (Ajout AMC par Eric Elter)\n * Publié le 30/11/2020\n */\nexport default function ConstruireMediatrices6e () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let result = [0, 0]\n    let texteCorr = ''\n    let texte = ''\n\n    const celluleAlea = function (rang) {\n      const lettre = lettreDepuisChiffre(randint(1, rang))\n      const chiffre = Number(randint(1, rang)).toString()\n      return lettre + chiffre\n    }\n    // On prépare la figure...\n    const noms = choisitLettresDifferentes(4, 'QI', true)\n    texte = `Construire la médiatrice $(d)$ du segment $[${noms[0]}${noms[1]}]$ et la médiatrice $(d')$ du segment $[${noms[2]}${noms[3]}]$.<br>`\n    texte += 'Prolonger les droites $(d)$ et $(d\\')$ pour obtenir leur point d\\'intersection.<br>'\n    const marks = ['/', '//', '///', 'x', 'o', 'S', 'V']\n    const I = point(0, 0, 'I')\n    const A = pointAdistance(I, randint(3, 6))\n    const B = similitude(A, I, randint(65, 150), randint(8, 15) / 10)\n    const medA = droite(I, A)\n    const medB = droite(I, B)\n\n    const dA = droiteParPointEtPerpendiculaire(A, medA)\n    const dB = droiteParPointEtPerpendiculaire(B, medB)\n    medA.color = 'blue'\n    medB.color = 'green'\n    const cA = cercle(A, calcul(randint(25, 40) / 20))\n    const cB = cercle(B, calcul(randint(45, 60) / 20))\n    const A1 = pointIntersectionLC(dA, cA, noms[0], 1)\n    const A2 = pointIntersectionLC(dA, cA, noms[1], 2)\n    const B1 = pointIntersectionLC(dB, cB, noms[2], 1)\n    const B2 = pointIntersectionLC(dB, cB, noms[3], 2)\n    const sA = segmentAvecExtremites(A1, A2)\n    const sB = segmentAvecExtremites(B1, B2)\n    sA.color = 'black'\n    sB.color = 'black'\n\n    const objetsEnonce = []\n    const objetsCorrection = []\n    const nomA1 = texteParPoint(noms[0], translation(A1, homothetie(vecteur(A2, A1), A, 0.5 / norme(vecteur(A2, A1)))), 'milieu', 'black', 1, '', true)\n    const nomA2 = texteParPoint(noms[1], translation(A2, homothetie(vecteur(A1, A2), A, 0.5 / norme(vecteur(A2, A1)))), 'milieu', 'black', 1, '', true)\n    const nomB1 = texteParPoint(noms[2], translation(B1, homothetie(vecteur(B2, B1), A, 0.5 / norme(vecteur(B2, B1)))), 'milieu', 'black', 1, '', true)\n    const nomB2 = texteParPoint(noms[3], translation(B2, homothetie(vecteur(B1, B2), A, 0.5 / norme(vecteur(B2, B1)))), 'milieu', 'black', 1, '', true)\n\n    const cellule = celluleAlea(6)\n    result = dansLaCibleCarree(I.x, I.y, 6, 0.6, cellule)\n    const cible = cibleCarree({ x: result[0], y: result[1], rang: 6, taille: 0.6 })\n    cible.taille = 0.6\n    cible.color = 'orange'\n    cible.opacite = 0.7\n\n    objetsEnonce.push(cible, sA, sB, nomA1, nomA2, nomB1, nomB2)\n    objetsCorrection.push(cible, sA, sB, tracePoint(I), labelPoint(I), nomA1, nomA2, nomB1, nomB2)\n    objetsCorrection.push(medA, medB, codageMediatrice(A1, A2, 'blue', marks[1]), codageMediatrice(B1, B2, 'green', marks[2]))\n\n    //      objetsCorrection.push(segment(M[i],N[i],arcenciel(i)),codageMediatrice(M[i],N[i],arcenciel(i+5),marks[i]))\n    //      objetsCorrection.push(traceCompas(A1,N[i],20),traceCompas(B,N[i],20))\n    texteCorr += `Le point $I$ d'intersection des deux médiatrices est dans la case ${cellule} de la grille.<br>`\n    /* const xMin = Math.min(A1.x - 1, A2.x - 1, B1.x - 1, B2.x - 1, I.x - 4)\n    const yMin = Math.min(A1.y - 1, A2.y - 1, B1.y - 1, B2.y - 1, I.y - 4)\n    const xMax = Math.max(A1.x + 1, A2.x + 1, B1.x + 1, B2.x + 1, I.x + 4)\n    const yMax = Math.max(A1.y + 1, A2.y + 1, B1.y + 1, B2.y + 1, I.y + 4)\n    */\n    // On appelle la fonction fixBordures qui va déterminer la fenêtre Mathalea2d.\n    // Ici, la cible était un objet centré sur (cible.x, cible.y) et de taille 4, on crée deux points en diagonale\n    // afin qu'elle soit prise en compte dans son intégralité avec les entêtes de lignes et de colonnes.\n    const params = fixeBordures([nomA1, nomA2, nomB1, nomB2, point(cible.x - 2.5, cible.y - 2.5), point(cible.x + 2.5, cible.y + 2.5)])\n    params.pixelsParCm = 20\n    params.scale = 0.7\n    objetsCorrection.push(texteParPoint('(d)', positionLabelDroite(medA, params), 'milieu', 'black', 1, 'middle', true))\n    objetsCorrection.push(texteParPoint('(d\\')', positionLabelDroite(medB, params), 'milieu', 'black', 1, 'middle', true))\n\n    this.autoCorrection = [\n      {\n        enonce: texte + mathalea2d(params, objetsEnonce),\n        propositions: [\n          {\n            texte: texteCorr + mathalea2d(params, objetsCorrection),\n            statut: 3, // (ici c'est le nombre de lignes du cadre pour la réponse de l'élève sur AMC)\n            feedback: '',\n            enonce: 'Texte écrit au dessus ou avant les cases à cocher', // EE : ce champ est facultatif et fonctionnel qu'en mode hybride (en mode normal, il n'y a pas d'intérêt)\n            sanscadre: true // EE : ce champ est facultatif et permet (si true) de cacher le cadre et les lignes acceptant la réponse de l'élève\n\n          }\n        ]\n      }\n    ]\n\n    this.listeQuestions.push(texte + mathalea2d(params, objetsEnonce))\n    this.listeCorrections.push(texteCorr + mathalea2d(params, objetsCorrection))\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","amcType","ConstruireMediatrices6e","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","result","texteCorr","texte","noms","choisitLettresDifferentes","marks","I","point","A","pointAdistance","randint","B","similitude","medA","droite","medB","dA","droiteParPointEtPerpendiculaire","dB","color","cA","cercle","calcul","cB","A1","pointIntersectionLC","A2","B1","B2","sA","segmentAvecExtremites","sB","objetsEnonce","objetsCorrection","nomA1","texteParPoint","translation","homothetie","vecteur","norme","nomA2","nomB1","nomB2","cellule","rang","lettreDepuisChiffre","Number","toString","dansLaCibleCarree","x","y","cible","cibleCarree","taille","opacite","push","tracePoint","labelPoint","codageMediatrice","params","fixeBordures","pixelsParCm","scale","positionLabelDroite","enonce","mathalea2d","propositions","statut","feedback","sanscadre","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}