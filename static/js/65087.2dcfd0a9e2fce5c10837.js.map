{"version":3,"file":"js/65087.2dcfd0a9e2fce5c10837.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3L13-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, rienSi1, ecritureAlgebrique, ecritureParentheseSiNegatif, signe, abs, pgcd, texFractionReduite, miseEnEvidence, texFraction, lampeMessage } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport Fraction from '../../modules/Fraction.js'\nexport const titre = 'Équation du premier degré (utilisant la distributivité)'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = false // AMC : pour l'instant on ne peut pas tester une réponse parfois décimale parfois fractionnaire\n\n/**\n* Équation du premier degré\n* * Type 1 : ax+b=cx+d\n* * Type 2 : k(ax+b)=cx+d\n* * Type 3 : k-(ax+b)=cx+d\n* * Tous les types\n* @author Rémi Angot\n* Rendre interactif Laurence Candille\n* 3L13-1\n*/\nexport default function ExerciceEquation1Tiret2 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Résoudre les équations suivantes :'\n  this.spacing = 2\n  this.interactif = true\n  this.interactifType = 'mathLive'\n  context.isHtml ? this.spacingCorr = 3 : this.spacingCorr = 2\n  this.correctionDetailleeDisponible = true\n  if (!context.isHtml) {\n    this.correctionDetaillee = false\n  }\n  this.nbQuestions = 3\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (this.interactif) {\n      this.introduction = lampeMessage({\n        titre: '',\n        texte: `Résoudre les équations au brouillon et écrire les solutions dans les cases.<br> On rappelle qu'il faut donner une solution exacte (par exemple $${texFraction(1, 3)})$ plutôt qu'une valeur aprrochée (comme 0,3333).`,\n        couleur: 'nombres'\n      })\n    }\n    let listeTypeDeQuestions = ['ax+b=cx+d', 'k(ax+b)=cx+d', 'k-(ax+b)=cx+d']\n    listeTypeDeQuestions = combinaisonListes(listeTypeDeQuestions, this.nbQuestions)\n    for (let i = 0, a, b, c, d, k, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(-9, 9, 0)\n      b = randint(-9, 9, 0)\n      c = randint(-9, 9, 0)\n      d = randint(-9, 9, 0)\n      k = randint(2, 9)\n      if (listeTypeDeQuestions[i] === 'ax+b=cx+d') {\n        if (c === a) { c = randint(1, 9, [a]) } // sinon on arrive à une division par 0\n        if (!this.sup && a < c) {\n          c = randint(1, 9)\n          a = randint(c + 1, 15) // a sera plus grand que c pour que a-c>0\n        }\n        texte = `$${rienSi1(a)}x${ecritureAlgebrique(b)}=${rienSi1(c)}x${ecritureAlgebrique(d)}$<br>`\n        texteCorr = texte\n        if (this.interactif) {\n          texte += '$x =$' + ajouteChampTexteMathLive(this, i, 'inline largeur25') + '<br><br>'\n          setReponse(this, i, new Fraction(d - b, a - c), { formatInteractif: 'fractionEgale' })\n        }\n        if (this.correctionDetaillee) {\n          if (c > 0) {\n            texteCorr += `On soustrait $${rienSi1(c)}x$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${rienSi1(-1 * c)}x$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${rienSi1(a)}x${ecritureAlgebrique(b)}${miseEnEvidence(signe(-1 * c) + rienSi1(abs(c)) + 'x')}=${c}x+${d}${miseEnEvidence(signe(-1 * c) + rienSi1(abs(c)) + 'x')}$<br>`\n        texteCorr += `$${rienSi1(a - c)}x${ecritureAlgebrique(b)}=${d}$<br>`\n        if (this.correctionDetaillee) {\n          if (b > 0) {\n            texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${rienSi1(a - c)}x${ecritureAlgebrique(b)}${miseEnEvidence(ecritureAlgebrique(-1 * b))}=${d}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n        texteCorr += `$${rienSi1(a - c)}x=${d - b}$<br>`\n\n        if (this.correctionDetaillee) { texteCorr += `On divise les deux membres par $${a - c}$.<br>` }\n        texteCorr += `$${rienSi1(a - c)}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a - c))}=${d - b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a - c))}$<br>`\n        texteCorr += `$x=${texFraction(d - b, a - c)}$`\n        if (pgcd(abs(d - b), abs(a - c)) > 1 || (a - c) < 0) {\n          texteCorr += `<br>$x=${texFractionReduite(d - b, a - c)}$`\n        }\n        texteCorr += `<br> La solution est $${texFractionReduite(d - b, a - c)}$.`\n      }\n\n      if (listeTypeDeQuestions[i] === 'k(ax+b)=cx+d') {\n        if (c === k * a) { c = randint(1, 9, [a]) } // sinon on arrive à une division par 0\n        texte = `$${k}(${rienSi1(a)}x${ecritureAlgebrique(b)})=${rienSi1(c)}x${ecritureAlgebrique(d)}$<br>`\n        texteCorr = texte\n        if (this.interactif) {\n          texte += '$x =$' + ajouteChampTexteMathLive(this, i, 'inline largeur25') + '<br><br>'\n          setReponse(this, i, new Fraction(d - k * b, a * k - c), { formatInteractif: 'fractionEgale' })\n        }\n        if (this.correctionDetaillee) {\n          texteCorr += 'On développe le membre de gauche.<br>'\n        }\n        texteCorr += `$${k * a}x${ecritureAlgebrique(k * b)}=${rienSi1(c)}x${ecritureAlgebrique(d)}$<br>`\n        if (this.correctionDetaillee) {\n          if (c > 0) {\n            texteCorr += `On soustrait $${rienSi1(c)}x$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${rienSi1(-1 * c)}x$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${k * a}x${ecritureAlgebrique(k * b)}${miseEnEvidence(signe(-1 * c) + rienSi1(abs(c)) + 'x')}=${c}x${ecritureAlgebrique(d)}${miseEnEvidence(signe(-1 * c) + rienSi1(abs(c)) + 'x')}$<br>`\n        texteCorr += `$${rienSi1(k * a - c)}x${ecritureAlgebrique(k * b)}=${d}$<br>`\n        if (this.correctionDetaillee) {\n          if (k * b > 0) {\n            texteCorr += `On soustrait $${k * b}$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${-k * b}$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${rienSi1(k * a - c)}x${ecritureAlgebrique(k * b)}${miseEnEvidence(ecritureAlgebrique(-k * b))}=${d}${miseEnEvidence(ecritureAlgebrique(-k * b))}$<br>`\n        texteCorr += `$${rienSi1(k * a - c)}x=${d - k * b}$<br>`\n\n        if (this.correctionDetaillee) { texteCorr += `On divise les deux membres par $${k * a - c}$.<br>` }\n        texteCorr += `$${rienSi1(k * a - c)}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(k * a - c))}=${d - k * b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(k * a - c))}$<br>`\n        texteCorr += `$x=${texFraction(d - k * b, k * a - c)}$`\n        if (pgcd(abs(d - k * b), abs(k * a - c)) > 1 || (k * a - c) < 0) {\n          texteCorr += `<br>$x=${texFractionReduite(d - k * b, k * a - c)}$`\n        }\n        texteCorr += `<br> La solution est $${texFractionReduite(d - k * b, k * a - c)}$.`\n      }\n\n      if (listeTypeDeQuestions[i] === 'k-(ax+b)=cx+d') {\n        if (c === -a) { c = randint(-9, 9, [0, a]) } // sinon on arrive à une division par 0\n        texte = `$${k}-(${rienSi1(a)}x${ecritureAlgebrique(b)})=${rienSi1(c)}x${ecritureAlgebrique(d)}$<br>`\n        texteCorr = texte\n        if (this.interactif) {\n          texte += '$x =$' + ajouteChampTexteMathLive(this, i, 'inline largeur25') + '<br><br>'\n          setReponse(this, i, new Fraction(k - b - d, a + c), { formatInteractif: 'fractionEgale' })\n        }\n        if (this.correctionDetaillee) {\n          texteCorr += 'On développe le membre de gauche.<br>'\n        }\n        texteCorr += `$${k}${ecritureAlgebrique(-a)}x${ecritureAlgebrique(-b)}=${rienSi1(c)}x${ecritureAlgebrique(d)}$<br>`\n        texteCorr += `$${rienSi1(-a)}x${ecritureAlgebrique(k - b)}=${rienSi1(c)}x${ecritureAlgebrique(d)}$<br>`\n\n        // On reprend le cas ax+b=cx+d en changeant les valeurs de a et b\n        a = -a\n        b = k - b\n\n        if (this.correctionDetaillee) {\n          if (c > 0) {\n            texteCorr += `On soustrait $${rienSi1(c)}x$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${rienSi1(-1 * c)}x$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${rienSi1(a)}x${ecritureAlgebrique(b)}${miseEnEvidence(signe(-1 * c) + rienSi1(abs(c)) + 'x')}=${c}x+${d}${miseEnEvidence(signe(-1 * c) + rienSi1(abs(c)) + 'x')}$<br>`\n        texteCorr += `$${rienSi1(a - c)}x${ecritureAlgebrique(b)}=${d}$<br>`\n        if (this.correctionDetaillee) {\n          if (b > 0) {\n            texteCorr += `On soustrait $${b}$ aux deux membres.<br>`\n          } else {\n            texteCorr += `On ajoute $${-1 * b}$ aux deux membres.<br>`\n          }\n        }\n        texteCorr += `$${rienSi1(a - c)}x${ecritureAlgebrique(b)}${miseEnEvidence(ecritureAlgebrique(-1 * b))}=${d}${miseEnEvidence(ecritureAlgebrique(-1 * b))}$<br>`\n        texteCorr += `$${rienSi1(a - c)}x=${d - b}$<br>`\n\n        if (this.correctionDetaillee) { texteCorr += `On divise les deux membres par $${a - c}$.<br>` }\n        texteCorr += `$${rienSi1(a - c)}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a - c))}=${d - b + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(a - c))}$<br>`\n        texteCorr += `$x=${texFraction(d - b, a - c)}$`\n        if (pgcd(abs(d - b), abs(a - c)) > 1 || (a - c) < 0) {\n          texteCorr += `<br>$x=${texFractionReduite(d - b, a - c)}$`\n        }\n        texteCorr += `<br> La solution est $${texFractionReduite(d - b, a - c)}$.`\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte) // replace(/1x/g,'x')); //remplace 1x par x\n        this.listeCorrections.push(texteCorr) // .replace(/1x/g,'x')); //remplace 1x par x\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","ExerciceEquation1Tiret2","Exercice","this","consigne","spacing","interactif","context","spacingCorr","correctionDetailleeDisponible","correctionDetaillee","nbQuestions","nouvelleVersion","listeQuestions","listeCorrections","introduction","lampeMessage","texte","texFraction","couleur","listeTypeDeQuestions","combinaisonListes","a","b","c","d","k","texteCorr","i","cpt","randint","sup","rienSi1","ecritureAlgebrique","ajouteChampTexteMathLive","setReponse","Fraction","formatInteractif","miseEnEvidence","signe","abs","ecritureParentheseSiNegatif","pgcd","texFractionReduite","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}