{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G30-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Mon_Exercice","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","sortieHtml","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","choix_rapport_trigo","texte","texteCorr","objets_enonce","objets_correction","a","point","b","randint","c","similitude","longueur","p1","polygone","p2","rotation","A","listePoints","B","C","codage","codageAngleDroit","nom","creerNomDePolygone","t2","t3","t22","t32","codageAngle","codageAngle2","nomme","nommePolygone","t1","texteSurSegment","afficheMesureAngle","hypo","segment","epaisseur","color","d","droite","isVisible","H","projectionOrtho","pointNomH","pointSurSegment","codage2","t23","t33","t4","texteParPoint","sAH","t13","hypo3","push","params_enonce","xmin","Math","min","x","ymin","y","xmax","max","ymax","pixelsParCm","scale","mainlevee","params_correction","mathalea2d","choice","objets_correction2","objets_correction3","listeQuestionsToContenu","besoinFormulaireNumerique","consigne","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/5936.bdeb17ec312098a115bd.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport { mathalea2d, point, similitude, longueur, polygone,rotation, codageAngleDroit, nommePolygone, segment, codeAngle, texteSurSegment, droite, projectionOrtho, pointSurSegment, texteParPoint, afficheMesureAngle  } from '../../modules/2d.js';\nimport { listeQuestionsToContenu, randint, creerNomDePolygone, choice } from '../../modules/outils.js';\n\n\nexport const titre = 'Exprimer le cosinus, le sinus ou la tangente d’un angle en fonction des côtés du triangle'\n\n/**\n * @auteur Rémi Angot\n * 3G30-1\n * Donner un rapport trigonométriques en fonctions des longueurs des côtés (pas de valeurs numériques)\n * * Donner les 3 rapports d'un angle\n * * Un triangle est donné, on demande les 6 rapports\n * * Un triangle rectangle et une hauteur, il faut exprimer un rapport de deux manières différentes\n *\n * janvier 2021\n */\nexport default function Mon_Exercice() {\n    Exercice.call(this)\n    this.titre = titre;\n    this.nbQuestions = 1; \n    this.nbQuestionsModifiable = false;\n    this.nbCols = 1; \n    this.nbColsCorr = 2;\n    this.sup = 1\n    if (sortieHtml){\n        this.spacing = 4;\n        this.spacingCorr = 4;\n    } else {\n        this.spacing = 2;\n        this.spacingCorr = 2;\n    }\n\n    this.nouvelleVersion = function () {\n    this.listeQuestions = [] \n    this.listeCorrections = []\n  \n  \n    let texte = '', texteCorr = '', objets_enonce = [], objets_correction = [], choix_rapport_trigo;\n\n    let a = point (0,0)\n    let b = point(randint(3,7),0)\n    let c = similitude(b,a,90,randint(3,7)/longueur(a,b))\n    let p1 = polygone(a,b,c) \n    //p1.isVisible = false\n    let p2 = rotation(p1,a,randint(0,360))\n    let A = p2.listePoints[0]\n    let B = p2.listePoints[1]\n    let C = p2.listePoints[2]\n    let codage = codageAngleDroit(B,A,C)\n    let nom = creerNomDePolygone(4)\n    A.nom = nom[0], B.nom = nom[1], C.nom = nom[2];\n    let nomme = nommePolygone(p2, nom)\n    let t1 = texteSurSegment('hypoténuse',C,B)\n    let t2, t3, t22, t32, codageAngle, codageAngle2;\n    if (sortieHtml) {\n        t2 = texteSurSegment(\"adjacent à ⍺\",B,A)\n        t3 = texteSurSegment(\"opposé à ⍺\",A,C)\n        t22 = texteSurSegment(\"opposé à 𝛽\",B,A)\n        t32 = texteSurSegment(\"adjacent à 𝛽\",A,C)\n        codageAngle = afficheMesureAngle(A,B,C,'red',1.5,'⍺')\n        codageAngle2 = afficheMesureAngle(A,C,B,'red',1.5,'𝛽')\n    } else {\n        t2 = texteSurSegment(\"adjacent à $\\\\alpha$\",B,A)\n        t3 = texteSurSegment(\"opposé à $\\\\alpha$\",A,C)\n        t22 = texteSurSegment(\"opposé à $\\\\beta$\",B,A)\n        t32 = texteSurSegment(\"adjacent à $\\\\beta$\",A,C)\n        codageAngle = afficheMesureAngle(A,B,C,'red',1.5,'\\\\alpha')\n        codageAngle2 = afficheMesureAngle(A,C,B,'red',1.5,'\\\\beta')\n    }\n    let hypo = segment(C,B)\n    hypo.epaisseur = 2\n    hypo.color = 'blue'\n    codageAngle.epaisseur = 3\n    codageAngle2.epaisseur = 3\n    let d = droite(B,C)\n    d.isVisible = false\n    let H = projectionOrtho(A,d)\n    H.nom = 'H'\n    let pointNomH = pointSurSegment(H,A,-.5)\n    let codage2 = codageAngleDroit(A,H,B)\n    H.nom = nom[3];\n    let t4 = texteParPoint(H.nom,pointNomH)\n    let sAH = segment(A,H)\n    let sAB = segment(A,B)\n    let t13 = texteSurSegment('hypoténuse',B,A)\n    let t23\n    let t33\n    if (sortieHtml) {\n    t23 = texteSurSegment(\"opposé à ⍺\",A,H)\n    t33 = texteSurSegment(\"adjacent à ⍺\",H,B)\n    }\n    else {\n        t23 = texteSurSegment(\"opposé à $\\\\alpha$\",A,H)\n        t33 = texteSurSegment(\"adjacent à $\\\\alpha$\",H,B)\n    }\n    let hypo3 = segment(A,B)\n    hypo3.epaisseur = 2\n    hypo3.color = 'blue'\n\n    objets_enonce.push(p2, codage, nomme)\n    objets_correction.push(p2, codage, nomme, t1, t2, t3, hypo, codageAngle)\n\n    if (this.sup == 3) {\n        objets_enonce.push(sAH, t4, codage2)\n    }\n\n    let params_enonce = { xmin : Math.min(A.x,B.x,C.x)-1, ymin : Math.min(A.y,B.y,C.y)-1, xmax : Math.max(A.x,B.x,C.x)+1, ymax : Math.max(A.y,B.y,C.y)+1, pixelsParCm: 20, scale: .5, mainlevee: false}\n    let params_correction = { xmin : Math.min(A.x,B.x,C.x)-1, ymin : Math.min(A.y,B.y,C.y)-1, xmax : Math.max(A.x,B.x,C.x)+1, ymax : Math.max(A.y,B.y,C.y)+1, pixelsParCm: 20, scale: .5, mainlevee: false}\n    if (!sortieHtml){\n        texte += '\\\\begin{minipage}{.4\\\\linewidth}\\n'\n    }\n    texte += mathalea2d(params_enonce, objets_enonce)+'<br>'\n    if (!sortieHtml){\n        texte += '\\n\\\\end{minipage}\\n'\n        texte += '\\\\begin{minipage}{.6\\\\linewidth}\\n'\n    }\n    if (this.sup == 1) {\n        texte += `Compléter à l'aide des longueurs $${A.nom+B.nom}$, $${A.nom+C.nom}$, $${B.nom+C.nom}$ : ` \n        texte += `<br>$\\\\cos\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=$`\n        texte += `<br>$\\\\sin\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=$`\n        texte += `<br>$\\\\tan\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=$`\n    } \n    if (this.sup == 2) {\n        texte += `Écrire les 6 rapports trigonométriques pour ce triangle.` \n    }\n    if (this.sup == 3) {\n        choix_rapport_trigo = choice(['cosinus','sinus','tangente'])\n        texte+= `Exprimer le ${choix_rapport_trigo} de $\\\\widehat{${A.nom+B.nom+C.nom}}$ de deux manières différentes.`\n    }\n    if (!sortieHtml){\n        texte += '\\n\\\\end{minipage}\\n'\n    }\n    if (this.sup == 1 || this.sup == 2 || this.sup == 3) {\n        texteCorr += mathalea2d(params_correction, objets_correction)\n    }\n    if (this.sup == 2) {\n        let objets_correction2 = [p2, codage, nomme, t1, t22, t32, hypo, codageAngle2]\n        texteCorr += mathalea2d(params_correction, objets_correction2)\n    }\n    if (this.sup == 3) {\n        let objets_correction3 = [p2, codage2, nomme, t13, t23, t33, t4, hypo3, codageAngle, sAH]\n        texteCorr += mathalea2d(params_correction, objets_correction3)\n    }\n\n    if (this.sup == 1 || this.sup == 2) {\n        texteCorr += `<br>$${A.nom+B.nom+C.nom}$ est rectangle en $${A.nom}$ donc :`\n        texteCorr += `<br>$\\\\cos\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=\\\\dfrac{${A.nom+B.nom}}{${B.nom+C.nom}}$ ;`\n        texteCorr += `<br>$\\\\sin\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=\\\\dfrac{${A.nom+C.nom}}{${B.nom+C.nom}}$ ;`\n        texteCorr += `<br>$\\\\tan\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=\\\\dfrac{${A.nom+C.nom}}{${A.nom+B.nom}}$.`\n    }\n    if (this.sup == 2) {\n        texteCorr += `<br>$\\\\cos\\\\left(\\\\widehat{${A.nom+C.nom+B.nom}}\\\\right)=\\\\dfrac{${A.nom+C.nom}}{${B.nom+C.nom}}$ ;`\n        texteCorr += `<br>$\\\\sin\\\\left(\\\\widehat{${A.nom+C.nom+B.nom}}\\\\right)=\\\\dfrac{${A.nom+B.nom}}{${B.nom+C.nom}}$ ;`\n        texteCorr += `<br>$\\\\tan\\\\left(\\\\widehat{${A.nom+C.nom+B.nom}}\\\\right)=\\\\dfrac{${A.nom+B.nom}}{${A.nom+C.nom}}$.`\n    }\n    if (this.sup == 3) {\n        if (choix_rapport_trigo == 'cosinus') {\n            texteCorr += `<br>$${A.nom+B.nom+C.nom}$ est rectangle en $${A.nom}$ donc `\n            if (!sortieHtml) {\n                texteCorr+='<br>'\n            }\n            texteCorr += `$\\\\cos\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=\\\\dfrac{${A.nom+B.nom}}{${B.nom+C.nom}}$ ;`  \n            texteCorr += `<br>$${A.nom+B.nom+H.nom}$ est rectangle en $${H.nom}$ donc `\n            texteCorr += `$\\\\cos\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=\\\\dfrac{${B.nom+H.nom}}{${A.nom+B.nom}}$.`  \n        }\n        if (choix_rapport_trigo == 'sinus') {\n            texteCorr += `<br>$${A.nom+B.nom+C.nom}$ est rectangle en $${A.nom}$ donc `\n            if (!sortieHtml) {\n                texteCorr+='<br>'\n            }\n            texteCorr += `$\\\\sin\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=\\\\dfrac{${A.nom+C.nom}}{${B.nom+C.nom}}$ ;`  \n            texteCorr += `<br>$${A.nom+B.nom+H.nom}$ est rectangle en $${H.nom}$ donc `\n            texteCorr += `$\\\\sin\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=\\\\dfrac{${A.nom+H.nom}}{${A.nom+B.nom}}$.`  \n\n        }\n        if (choix_rapport_trigo == 'tangente') {\n            texteCorr += `<br>$${A.nom+B.nom+C.nom}$ est rectangle en $${A.nom}$ donc `\n            if (!sortieHtml) {\n                texteCorr+='<br>'\n            }\n            texteCorr += `$\\\\tan\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=\\\\dfrac{${A.nom+C.nom}}{${A.nom+B.nom}}$ ;`  \n            texteCorr += `<br>$${A.nom+B.nom+H.nom}$ est rectangle en $${H.nom}$ donc `\n            texteCorr += `$\\\\tan\\\\left(\\\\widehat{${A.nom+B.nom+C.nom}}\\\\right)=\\\\dfrac{${A.nom+H.nom}}{${B.nom+H.nom}}$.`  \n        }\n        \n    }\n    \n    this.listeQuestions.push(texte);\n    this.listeCorrections.push(texteCorr);\n    listeQuestionsToContenu(this); // On envoie l'exercice à la fonction de mise en page\n    };\n  \n    this.besoinFormulaireNumerique = ['Type de questions',3,'1 : Compléter 3 rapports trigonométriques\\n2 : Donner les 6 rapports trigonométriques\\n3 : Deux triangles imbriqués, donner un rapport de deux manières différentes'];\n}  ","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}