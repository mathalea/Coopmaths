{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/_Solide_6e.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["Solide_6e","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","sup2","titre","nouvelleVersion","type_de_questions_disponibles","parseInt","type","n","length","Xmin","Xmax","Ymin","Ymax","ppc","sc","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","A","B","C","D","E","F","G","H","AB","BC","CD","DA","EF","FG","GH","HE","AE","BF","CG","DH","coeffpersp","enonce","correction","carreaux","g","p","codesseg","objets_enonce","objets_correction","texte","i","cpt","nom","creerNomDePolygone","anglepersp","choice","sortieHtml","k","l","s","aretes_paralleles","faces_paralleles","aretes_perp","faces_perp","randint","point","polygone","similitude","x","Math","round","y","translation2Points","segment","epaisseur","color","pointilles","opacite","min","max","grille","seyes","push","labelPoint","params","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","codeSegments","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/6863.83c9f0f4019d081d3046.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,creerNomDePolygone} from '../../modules/outils.js'\nimport {point,labelPoint,segment,polygone,translation2Points,similitude,codeSegments,grille,seyes,mathalea2d} from '../../modules/2d.js'\n/**\n * fonction servant à plusieurs exercice autour du cube et du pavé droit\n * références : 6G42 et 6G43\n * @Auteur Jean-Claude Lhote\n */\nexport default function Solide_6e() {\n  \"use strict\";\n  Exercice.call(this);\n  this.nbQuestions = 1;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 1;\n  this.sup2 = 1;\n  this.titre = \"\";\n  this.nouvelleVersion = function () {\n    let type_de_questions_disponibles;\n    if (this.sup == 3) type_de_questions_disponibles = [1, 2]\n    else type_de_questions_disponibles = [parseInt(this.sup)];\n\n    if (this.type == \"vocabulaire\")\n      for (let n = 0; n < type_de_questions_disponibles.length; n++)\n        type_de_questions_disponibles[n] += 2\n    let listeTypeDeQuestions = combinaisonListes(\n      type_de_questions_disponibles,\n      this.nbQuestions\n    );\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let Xmin, Xmax, Ymin, Ymax, ppc, sc;\n\n    if (this.sup2 == 1) sc = 0.5;\n    else sc = 0.8;\n\n    let A, B, C, D, E, F, G, H,\n      AB, BC, CD, DA, EF, FG, GH, HE, AE, BF, CG, DH,\n      coeffpersp,\n      codesseg = [],\n      enonce,\n      correction,\n      carreaux, g,\n      objets_enonce = [],\n      objets_correction = [],\n      p;\n    for (\n      let i = 0, texte, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      let nom = creerNomDePolygone(8, \"PQ\"),\n        anglepersp = choice([30, 45, -30, -45, 150, 135, -150, -135])\n      if (anglepersp % 10 == 0) coeffpersp = 0.6\n      else coeffpersp = 0.4\n      objets_correction = []\n      objets_enonce = []\n      switch (listeTypeDeQuestions[i]) {\n        case 1: //cube\n          enonce = `${nom} est un cube.<br>`\n          if (sortieHtml) enonce += ` Reproduire la figure ci-dessous sur le cahier.<br>`;\n          enonce += ` Repasse tous les segments de même longueur dans une même couleur.<br>`;\n          correction = `Le cube ${nom}.<br>`\n          break;\n\n        case 2:\n          enonce = `${nom} est un pavé droit.<br>`\n          if (sortieHtml) enonce += ` Reproduire la figure ci-dessous sur le cahier.<br>`;\n          enonce += ` Repasse tous les segments de même longueur dans une même couleur.<br>`;\n          correction = `Le pavé droit ${nom}.<br>`\n          break;\n\n        case 3:\n          enonce = `${nom} est un cube.<br>`\n          break;\n\n        case 4:\n          enonce = `${nom} est un pavé droit.<br>`\n          break;\n      }\n      let aretes_paralleles = [[[0, 1], [3, 2], [4, 5], [7, 6]], [[0, 3], [1, 2], [4, 7], [5, 6]], [[0, 4], [1, 5], [2, 6], [3, 7]]]\n      let faces_paralleles = [[[0, 1, 2, 3], [4, 5, 6, 7]], [[0, 4, 7, 3], [1, 5, 6, 2]], [[0, 1, 5, 4], [3, 2, 6, 7]]]\n      let aretes_perp = [[[0, 1], [0, 4], [0, 3], [1, 5], [1, 2]], [[0, 4], [0, 1], [0, 3], [4, 5], [4, 7]], [[0, 3], [0, 1], [0, 4], [3, 2], [3, 7]], [[1, 2], [1, 0], [1, 5], [2, 3], [2, 6]], [[1, 5], [1, 0], [1, 2],\n      [5, 4], [5, 6]], [[5, 4], [5, 1], [5, 6], [4, 0], [4, 7]], [[5, 6], [5, 1], [5, 4], [6, 2], [6, 7]]\n        , [[6, 2], [6, 5], [6, 7], [2, 1], [2, 3]], [[2, 3], [2, 1], [2, 6], [3, 0], [3, 7]], [[3, 7], [3, 2], [3, 0], [7, 4], [7, 6]], [[7, 4], [4, 0], [4, 5], [7, 3], [7, 6]], [[7, 6], [6, 2], [6, 5], [7, 3], [7, 4]]]\n      let faces_perp = [[[0, 1, 2, 3], [1, 5, 6, 2], [2, 6, 7, 3], [3, 7, 4, 0], [0, 1, 5, 4]], [[1, 5, 6, 2], [0, 1, 2, 3], [2, 6, 7, 3], [5, 6, 7, 4], [1, 5, 4, 0]], [[0, 1, 5, 4], [1, 5, 6, 2], [4, 5, 6, 7], [0, 4, 7, 3], [0, 1, 2, 3]],\n      [[4, 5, 6, 7], [0, 1, 5, 4], [1, 5, 6, 2], [2, 6, 7, 3], [0, 4, 7, 3]], [[0, 4, 7, 3], [0, 1, 2, 3], [0, 1, 5, 4], [4, 5, 6, 7], [3, 2, 6, 7]], [[3, 2, 6, 7], [0, 1, 2, 3], [1, 5, 6, 2], [4, 5, 6, 7], [0, 4, 7, 3]]]\n      let k, l, s\n\n      switch (randint(1, 4)) {\n\n        case 1: // citer les arêtes parallèles à une arrête donnée\n          [k, l, s] = [randint(0, 2), randint(0, 3), randint(0, 1)]\n          enonce += `Citer toutes les arêtes parallèles à [$${nom[aretes_paralleles[k][l][s]] + nom[aretes_paralleles[k][l][(s + 1) % 2]]}$].<br>`\n          correction = `Les arêtes parallèles à [$${nom[aretes_paralleles[k][l][s]] + nom[aretes_paralleles[k][l][(s + 1) % 2]]}$] sont [$${nom[aretes_paralleles[k][(l + 1) % 4][s]] + nom[aretes_paralleles[k][(l + 1) % 4][(s + 1) % 2]]}$], [$${nom[aretes_paralleles[k][(l + 2) % 4][s]] + nom[aretes_paralleles[k][(l + 2) % 4][(s + 1) % 2]]}$] et [$${nom[aretes_paralleles[k][(l + 3) % 4][s]] + nom[aretes_paralleles[k][(l + 3) % 4][(s + 1) % 2]]}$].<br>`\n          break;\n\n        case 2: // citer la face parallèle à une face donnée\n          [k, l, s] = [randint(0, 2), randint(0, 1), randint(0, 3)]\n          enonce += `Quelle est la face parallèle à $${nom[faces_paralleles[k][l][s]] + nom[faces_paralleles[k][l][(s + 1) % 4]] + nom[faces_paralleles[k][l][(s + 2) % 4]] + nom[faces_paralleles[k][l][(s + 3) % 4]]}$ ?<br>`\n          correction = `La face parallèle à $${nom[faces_paralleles[k][l][s]] + nom[faces_paralleles[k][l][(s + 1) % 4]] + nom[faces_paralleles[k][l][(s + 2) % 4]] + nom[faces_paralleles[k][l][(s + 3) % 4]]}$ est la face $${nom[faces_paralleles[k][(l + 1) % 2][s]] + nom[faces_paralleles[k][(l + 1) % 2][(s + 1) % 4]] + nom[faces_paralleles[k][(l + 1) % 2][(s + 2) % 4]] + nom[faces_paralleles[k][(l + 1) % 2][(s + 3) % 4]]}$.<br>`\n          break;\n\n        case 3: // citer les arêtes perpendiculaires à une arête donnée\n          [k, l, s] = [randint(0, 11), 0, randint(0, 1)]\n          enonce += `Quelles sont les arêtes peprendiculaires à l'arête [$${nom[aretes_perp[k][l][s]] + nom[aretes_perp[k][l][(s + 1) % 2]]}$] ?<br>`\n          correction = `Les arêtes perpendiculaires à l'arête [$${nom[aretes_perp[k][l][s]] + nom[aretes_perp[k][l][(s + 1) % 2]]}$] sont [$${nom[aretes_perp[k][1][s]] + nom[aretes_perp[k][1][(s + 1) % 2]]}$], [$${nom[aretes_perp[k][2][s]] + nom[aretes_perp[k][2][(s + 1) % 2]]}$], [$${nom[aretes_perp[k][3][s]] + nom[aretes_perp[k][3][(s + 1) % 2]]}$] et [$${nom[aretes_perp[k][4][s]] + nom[aretes_perp[k][4][(s + 1) % 2]]}$].`\n          break;\n\n        case 4: // citer les faces perpendiculaires à une face donnée\n          [k, l, s] = [randint(0, 5), 0, randint(0, 3)]\n          enonce += `Quelles sont les faces perpendiculaires à la face $${nom[faces_perp[k][l][s]] + nom[faces_perp[k][l][(s + 1) % 4]] + nom[faces_perp[k][l][(s + 2) % 4]] + nom[faces_perp[k][l][(s + 3) % 4]]}$ ?<br>`\n          correction = `Les faces perpendiculaires à la face $${nom[faces_perp[k][l][s]] + nom[faces_perp[k][l][(s + 1) % 4]] + nom[faces_perp[k][l][(s + 2) % 4]] + nom[faces_perp[k][l][(s + 3) % 4]]}$ `\n          correction += `sont les faces $${nom[faces_perp[k][l + 1][s]] + nom[faces_perp[k][l + 1][(s + 1) % 4]] + nom[faces_perp[k][l + 1][(s + 2) % 4]] + nom[faces_perp[k][l + 1][(s + 3) % 4]]}$, `\n          correction += `$${nom[faces_perp[k][l + 2][s]] + nom[faces_perp[k][l + 2][(s + 1) % 4]] + nom[faces_perp[k][l + 2][(s + 2) % 4]] + nom[faces_perp[k][l + 2][(s + 3) % 4]]}$, `\n          correction += `$${nom[faces_perp[k][l + 3][s]] + nom[faces_perp[k][l + 3][(s + 1) % 4]] + nom[faces_perp[k][l + 3][(s + 2) % 4]] + nom[faces_perp[k][l + 3][(s + 3) % 4]]}$ et `\n          correction += `$${nom[faces_perp[k][l + 4][s]] + nom[faces_perp[k][l + 4][(s + 1) % 4]] + nom[faces_perp[k][l + 4][(s + 2) % 4]] + nom[faces_perp[k][l + 4][(s + 3) % 4]]}$.`\n          break;\n      }\n\n      switch (listeTypeDeQuestions[i] % 2) {\n        case 1:\n          A = point(6, 0, nom[0], \"left\");\n          B = point(11, 0, nom[1], \"right\");\n          C = point(11, 5, nom[2], \"right\");\n          D = point(6, 5, nom[3], \"left\");\n          p = polygone(A, B, C, D)\n          E = similitude(B, A, anglepersp, coeffpersp, nom[4], 'left')\n          E.x = Math.round(E.x)\n          E.y = Math.round(E.y)\n          break;\n\n        case 0:\n          A = point(5, 0, nom[0], \"left\");\n          B = point(9 + randint(1, 3), 0, nom[1], \"right\");\n          C = point(B.x, randint(3, 7), nom[2], \"right\");\n          D = point(A.x, C.y, nom[3], \"left\");\n          p = polygone(A, B, C, D)\n          E = similitude(B, A, anglepersp, coeffpersp * randint(5, 12) / 10, nom[4], 'left')\n          E.x = Math.round(E.x)\n          E.y = Math.round(E.y)\n          break;\n      }\n\n      p = polygone(A, B, C, D)\n      F = translation2Points(E, A, B, nom[5], 'right')\n      G = translation2Points(F, B, C, nom[6], 'right')\n      H = translation2Points(G, C, D, nom[7], 'left')\n      AB = segment(A, B)\n      BC = segment(B, C)\n      CD = segment(C, D)\n      DA = segment(D, A)\n      EF = segment(E, F)\n      FG = segment(F, G)\n      GH = segment(G, H)\n      HE = segment(H, E)\n      AE = segment(A, E)\n      BF = segment(B, F)\n      CG = segment(C, G)\n      DH = segment(D, H)\n      AB.epaisseur = 2\n      BC.epaisseur = 2\n      CD.epaisseur = 2\n      DA.epaisseur = 2\n      EF.epaisseur = 2\n      FG.epaisseur = 2\n      GH.epaisseur = 2\n      HE.epaisseur = 2\n      AE.epaisseur = 2\n      BF.epaisseur = 2\n      CG.epaisseur = 2\n      DH.epaisseur = 2\n      AB.color = 'black'\n      BC.color = 'black'\n      CD.color = 'black'\n      DA.color = 'black'\n      EF.color = 'black'\n      FG.color = 'black'\n      GH.color = 'black'\n      HE.color = 'black'\n      AE.color = 'black'\n      BF.color = 'black'\n      CG.color = 'black'\n      if (G.y < C.y && G.x < C.x) {\n        CG.pointilles = true\n        CG.color = 'gray'\n        CG.opacite = 0.7\n        GH.pointilles = true\n        GH.color = 'gray'\n        GH.opacite = 0.7\n        FG.pointilles = true\n        FG.color = 'gray'\n        FG.opacite = 0.7\n      }\n      else if (E.y > A.y && E.x > A.x) {\n        AE.pointilles = true\n        EF.pointilles = true\n        HE.pointilles = true\n        AE.color = 'gray'\n        EF.color = 'gray'\n        HE.color = 'gray'\n        AE.opacite = 0.7\n        EF.opacite = 0.7\n        HE.opacite = 0.7\n      }\n      else if (F.x < B.x && F.y > B.y) {\n        BF.pointilles = true\n        FG.pointilles = true\n        EF.pointilles = true\n        BF.color = 'gray'\n        FG.color = 'gray'\n        EF.color = 'gray'\n        BF.opacite = 0.7\n        FG.opacite = 0.7\n        EF.opacite = 0.7\n      }\n      else if (H.x > D.x && H.y < D.y) {\n        DH.pointilles = true\n        GH.pointilles = true\n        HE.pointilles = true\n        DH.color = 'gray'\n        GH.color = 'gray'\n        HE.color = 'gray'\n        DH.opacite = 0.7\n        GH.opacite = 0.7\n        HE.opacite = 0.7\n      }\n      Xmin = Math.min(A.x, E.x) - 1;\n      Ymin = Math.min(A.y, E.y) - 1;\n      Xmax = Math.max(B.x, F.x) + 2;\n      Ymax = Math.max(D.y, H.y) + 1;\n      ppc = 20;\n\n      if (this.sup2 < 3) g = grille(Xmin, Ymin, Xmax, Ymax, \"gray\", 0.7);\n      else g = \"\";\n      if (this.sup2 == 2) {\n        carreaux = seyes(Xmin, Ymin, Xmax, Ymax);\n        sc = 0.8\n      }\n      else {\n        carreaux = \"\";\n        sc = 0.5\n      }\n      objets_enonce.push(AB, BC, CD, DA, EF, FG, GH, HE, AE, BF, CG, DH, labelPoint(A, B, C, D, E, F, G, H), p,\n        g,\n        carreaux\n      );\n\n      let params = {\n        xmin: Xmin,\n        ymin: Ymin,\n        xmax: Xmax,\n        ymax: Ymax,\n        pixelsParCm: ppc,\n        scale: sc,\n      }\n\n      enonce += mathalea2d(params, objets_enonce);\n      if (listeTypeDeQuestions[i] == 1) {\n        codesseg = [codeSegments('||', 'green', [A, B, C, D, A, E, F, G, H, E]), codeSegments('||', 'green', B, F, C, G, D, H)]\n        AB.color = 'green'\n        BC.color = 'green'\n        CD.color = 'green'\n        DA.color = 'green'\n        EF.color = 'green'\n        FG.color = 'green'\n        GH.color = 'green'\n        HE.color = 'green'\n        AE.color = 'green'\n        BF.color = 'green'\n        CG.color = 'green'\n        DH.color = 'green'\n      }\n      else {\n        codesseg = [codeSegments('||', 'green', A, B, C, D, E, F, G, H), codeSegments('O', 'red', A, E, B, F, C, G, D, H), codeSegments('×', 'blue', D, A, B, C, F, G, H, E)]\n        AB.color = 'green'\n        BC.color = 'blue'\n        CD.color = 'green'\n        DA.color = 'blue'\n        EF.color = 'green'\n        FG.color = 'blue'\n        GH.color = 'green'\n        HE.color = 'blue'\n        AE.color = 'red'\n        BF.color = 'red'\n        CG.color = 'red'\n        DH.color = 'red'\n      }\n\n      objets_correction.push(AB, BC, CD, DA, EF, FG, GH, HE, AE, BF, CG, DH, labelPoint(A, B, C, D, E, F, G, H),\n        g,\n        carreaux\n      );\n\n      if (listeTypeDeQuestions[i] < 3) correction += mathalea2d(params, objets_correction, codesseg);\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(enonce + \"<br>\");\n        this.listeCorrections.push(correction + \"<br>\");\n        i++;\n      }\n      cpt++;\n    }\n\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = ['Type de solides', 3, `1 : Cubes\\n 2 : Pavés droits\\n 3 : Mélange`]\n  this.besoinFormulaire2Numerique = [\n    \"Type de cahier\",\n    3,\n    `1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`,\n  ];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}