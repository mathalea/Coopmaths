{"version":3,"file":"js/51081.3042a17a2864ea7d2561.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3L11-7.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { randint, combinaisonListes, lettreDepuisChiffre, printlatex, listeQuestionsToContenuSansNumero, rienSi1 } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Développer des carrés avec la double distributivité'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const dateDePublication = '12/12/2021'\n\n/**\n* Utiliser la double distributivité pour développer (a+b)² ou (a-b)²\n*\n* @author Rémi Angot\n* 3L11-7\n*/\nexport default function CarreDoubleDistributivite () {\n  Exercice.call(this)\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Développer et réduire les expressions suivantes.'\n  this.nbQuestions = 4\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = context.isHtml ? 3 : 2\n  this.spacingCorr = context.isHtml ? 3 : 2\n  this.sup = true\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = ['(ax+b)2', '(b+ax)2', '(ax-b)2', '(b-ax)2']\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, reponse, a, b, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      a = randint(1, 11, 0)\n      b = randint(1, 11, 0)\n      switch (listeTypeDeQuestions[i]) {\n        case '(ax+b)2':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`(${a}x+${b})^2`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`(${a}x+${b})^2`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`(${a}x+${b})*(${a}x+${b})`)}$`\n          if (this.sup) {\n            texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}= ${rienSi1(a)}x \\\\times ${rienSi1(a)}x + ${rienSi1(a)}x \\\\times ${b} + ${b} \\\\times ${rienSi1(a)}x  + ${b} \\\\times ${b}$`\n          }\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * a}x^2 + ${a * b}x + ${a * b}x + ${b * b}`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * a}x^2 + ${2 * a * b}x + ${b * b}`)}$`\n          reponse = printlatex(`${a * a}x^2 + ${2 * a * b}x + ${b * b}`)\n          break\n        case '(b+ax)2':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`(${b}+${a}x)^2`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`(${b}+${a}x)^2`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`(${b}+${a}x)*(${b}+${a}x)`)}$`\n          if (this.sup) {\n            texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}= ${b} \\\\times ${b} +  ${b} \\\\times ${rienSi1(a)}x +  ${rienSi1(a)}x \\\\times ${b}  + ${rienSi1(a)}x \\\\times ${rienSi1(a)}x $`\n          }\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${b * b} + ${a * b}x + ${a * b}x + ${a * a}x^2`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * a}x^2 + ${2 * a * b}x + ${b * b}`)}$`\n          reponse = printlatex(`${a * a}x^2 + ${2 * a * b}x + ${b * b}`)\n          break\n        case '(ax-b)2':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`(${a}x-${b})^2`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`(${a}x-${b})^2`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`(${a}x-${b})*(${a}x-${b})`)}$`\n          if (this.sup) {\n            texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}= ${rienSi1(a)}x \\\\times ${rienSi1(a)}x + ${rienSi1(a)}x \\\\times (${-b}) + (${-b}) \\\\times ${rienSi1(a)}x  + (${-b}) \\\\times (${-b})$`\n          }\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * a}x^2 - ${a * b}x - ${a * b}x + ${b * b}`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * a}x^2 - ${2 * a * b}x + ${b * b}`)}$`\n          reponse = printlatex(`${a * a}x^2 - ${2 * a * b}x + ${b * b}`)\n          break\n        case '(b-ax)2':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`(${b}-${a}x)^2`)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`(${b}-${a}x)^2`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`(${b}-${a}x)*(${b}-${a}x)`)}$`\n          if (this.sup) {\n            texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}= ${b} \\\\times ${b} +  ${b} \\\\times (-${rienSi1(a)}x) +  (-${rienSi1(a)}x) \\\\times ${b}  + (-${rienSi1(a)}x) \\\\times (-${rienSi1(a)}x) $`\n          }\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${b * b} - ${a * b}x - ${a * b}x + ${a * a}x^2`)}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${printlatex(`${a * a}x^2 - ${2 * a * b}x + ${b * b}`)}$`\n          reponse = printlatex(`${a * a}x^2 - ${2 * a * b}x + ${b * b}`)\n          break\n      }\n      if (!context.isAmc && this.interactif) {\n        setReponse(this, i, reponse)\n        texte += `<br>$${lettreDepuisChiffre(i + 1)} = $` + ajouteChampTexteMathLive(this, i, 'largeur75 inline')\n      }\n      if (this.questionJamaisPosee(a, b, listeTypeDeQuestions[i])) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Écrire toutes les multiplications dans la correction']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","dateDePublication","CarreDoubleDistributivite","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","spacing","context","spacingCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","reponse","a","b","i","cpt","randint","lettreDepuisChiffre","printlatex","rienSi1","interactif","setReponse","ajouteChampTexteMathLive","questionJamaisPosee","push","listeQuestionsToContenuSansNumero","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}