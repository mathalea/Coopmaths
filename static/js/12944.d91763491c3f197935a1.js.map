{"version":3,"file":"js/12944.d91763491c3f197935a1.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6M30-0.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint } from '../../modules/outils.js'\nimport { mathalea2d } from '../../modules/2d.js'\nimport { barre3d, cube3d, paveLPH3d, plaque3d } from '../../modules/3d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Déterminer le volume de pavés droit par dénombrement'\nexport const interactifReady = true\nexport const amcReady = true\nexport const interactifType = 'mathLive'\nexport const amcType = 'AMCNum'\n\nexport default function VolumesPavesParDenombrement () {\n  Exercice.call(this)\n  this.nbQuestions = 1 // Ici le nombre de questions\n  this.nbQuestionsModifiable = true // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.pasDeVersionLatex = false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n  this.pas_de_version_HMTL = false // mettre à true si on ne veut pas de l'exercice en ligne\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = true\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n    this.autoCorrection = []\n    context.anglePerspective = 30\n    context.coeffPerspective = 0.5\n    const dimensions = []\n    for (let q = 0, cpt = 0, l, p, h, monPave, pavesCorr, cubes, plaques, barres, texte, texteCorr; q < this.nbQuestions && cpt < 50;) {\n      l = randint(5, 10)\n      p = randint(2, 5)\n      h = randint(3, 6)\n      monPave = paveLPH3d(0, 0, 0, 1, l, p, h, 'black')\n      pavesCorr = []\n      cubes = []\n      barres = []\n      plaques = []\n\n      texte = 'Donner le nombre de petits cubes qui constituent ce pavé droit<br>' + mathalea2d({ xmin: -1, ymin: -1, xmax: l + 0.9 * p, ymax: h + 0.6 * p }, ...monPave.c2d)\n      if (!context.isAmc) texte += ajouteChampTexteMathLive(this, q, 'largeur25')\n      for (let i = 0; i < h - 1; i++) {\n        pavesCorr.push(...plaque3d(0, 0, i * 1.5, 1, l, p, 'black').c2d)\n        plaques.push(...plaque3d(0, 0, i * 1.5, 1, l, p).c2d)\n      }\n      plaques.push(...plaque3d(0, 0, (h - 1) * 1.5, 1, l, p).c2d)\n      for (let i = p - 1; i > 0; i--) {\n        pavesCorr.push(...barre3d(0, i * 1.5, h * 1.5 - 1.5, 1, l, 'black').c2d)\n        barres.push(...barre3d(0, i * 1.5, 0, 1, l).c2d)\n      }\n      barres.push(...barre3d(0, 0, 0, 1, l).c2d)\n      for (let i = 0; i < l; i++) {\n        pavesCorr.push(...cube3d(i * 1.2 - 0.06 * l, 0, h * 1.5 - 1.5, 1, 'black').c2d)\n        cubes.push(...cube3d(1.5 * i - 0.06 * l, 0, 0, 1).c2d)\n      }\n      if (this.correctionDetaillee) {\n        texteCorr = `Il y a ${l} cubes par barre :<br>`\n        texteCorr += mathalea2d({ xmin: -0.5, xmax: l * 1.5 + 2, ymin: -0.5, ymax: 1.5 }, cubes)\n        texteCorr += `<br>Il y a ${p} barres par plaque :<br>`\n        texteCorr += mathalea2d({ xmin: -0.5, xmax: l * 1.5 + 2, ymin: -0.5, ymax: 1.5 + p * 0.75 }, barres)\n        texteCorr += `<br>Enfin, il y a ${h} plaques empilées :<br>`\n        texteCorr += mathalea2d({ xmin: -1, ymin: -1, xmax: 15, ymax: h * 1 * 1.5 + p * 0.75 + 0.5 }, plaques)\n        texteCorr += `<br>Il y a donc $${l} \\\\times ${p} \\\\times ${h} = ${h * l * p}$ cubes.<br>`\n      } else {\n        texteCorr = `Il y a  ${l} cubes par barre, ${p} barres par plaque et ${h} plaques. Il y a donc $${l} \\\\times ${p} \\\\times ${h} = ${h * l * p}$ cubes.<br>`\n        texteCorr += mathalea2d({ xmin: -1, ymin: -1, xmax: Math.max(l * 1.2 + 1, l + p * 0.8), ymax: h * 1.5 + p * 0.8 }, pavesCorr)\n      }\n      if (dimensions.indexOf([l, p, h]) === -1) {\n        setReponse(this, q, l * p * h)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        dimensions.push([l, p, h])\n        q++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n}\n"],"names":["titre","interactifReady","amcReady","interactifType","amcType","VolumesPavesParDenombrement","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","correctionDetailleeDisponible","correctionDetaillee","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","context","dimensions","l","p","h","monPave","pavesCorr","cubes","plaques","barres","texte","texteCorr","q","cpt","randint","paveLPH3d","mathalea2d","xmin","ymin","xmax","ymax","c2d","ajouteChampTexteMathLive","i","push","plaque3d","barre3d","cube3d","Math","max","indexOf","setReponse","listeQuestionsToContenu"],"sourceRoot":""}