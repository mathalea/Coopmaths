{"version":3,"file":"js/70328.4b889deb19a7f3a4cbaf.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaCaNCM2.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, calcul, texNombrec, texNombre, combinaisonListesSansChangerOrdre, range1 } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Course aux nombres CM2'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\n/**\n * Ensemble de questions pour course aux nombres\n * @author Jean-Claude Lhote\n * Référence\n*/\nexport default function CourseAuxNombresCM (numeroExercice) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  if (this.interactif) {\n    this.consigne = \"Saisir la réponse numérique uniquement sauf si l'unité est explicitement demandée.\"\n  } else {\n    this.consigne = ''\n  }\n\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let a, b, c, resultat\n    let questions = []\n    if (!this.sup) {\n      // Si aucune question n'est sélectionnée\n      questions = combinaisonListesSansChangerOrdre(range1(10), this.nbQuestions)\n    } else {\n      if (typeof this.sup === 'number') {\n        // Si c'est un nombre c'est qu'il y a qu'une seule question\n        questions[0] = this.sup\n        this.nbQuestions = 1\n      } else {\n        questions = this.sup.split('-') // Sinon on créé un tableau à partir des valeurs séparées par des -\n        this.nbQuestions = questions.length\n      }\n    }\n    for (let i = 0; i < questions.length; i++) {\n      questions[i] = parseInt(questions[i]) - 1\n    }\n    const listeIndex = combinaisonListesSansChangerOrdre(questions, this.nbQuestions)\n    const typeQuestionsDisponibles = [ // les dix premières sont communes à betaCaNCM1\n      'q1', // Somme d'entiers\\n\n      'q2', // Différence d'entiers\\n\n      'q3', // Somme d'entiers avec retenue\\n\n      'q4', // Différence d'entiers avec retenue\\n\n      'q5', // Décomposition\\n\n      'q6', // Division d'entiers\\n\n      'q7', // Somme décimal et entier\\n\n      'q8', // Somme de décimaux\\n\n      'q9', // Différence de décimaux\\n\n      'q10', // Différence décimaux\\n\n      'q11', // Addition d'entiers\\n\n      'q12', // Soustraction d'entiers\\n\n      'q13', // Produit de trois entiers\\n\n      'q14', // Produit entier et décimal\\n\n      'q15', // division d'entiers\\n\n      'q16', // soustraction entier et décimal coût\\n\n      'q17', // soustraction entier et décimal coût\\n\n      'q18', // triple de décimal\\n\n      'q19', // quart de décimal\\n\n      'q20', // Périmètre carré\\n\n      'q21', // Division entier par 10\\n\n      'q22', // Multiplication et addition d'entiers\\n\n      'q23', // Soustraction de grands entiers\\n\n      'q24', // Suite de nombres\\n\n      'q25', // Augmentation décimaux\\n\n      'q26', // Soustraction décimaux\\n\n      'q27', // Multiplication entier par décimal\\n\n      'q28', // Moitié de décimal\\n\n      'q29', // Soustraction grands entiers\\n\n      'q30' // Quotient d'entiers\n    ]\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (typeQuestionsDisponibles[listeIndex[i]]) { // Suivant le type de question, le contenu sera différent\n        case 'q1': // somme d'entiers à deux chiffres sans retenue\n          a = randint(1, 3) * 10 + randint(1, 5)\n          b = randint(1, 5) * 10 + randint(1, 4)\n          texte = `$${a}+${b}$`\n          texteCorr = `$${a}+${b}=${a + b}$`\n          setReponse(this, i, a + b, { formatInteractif: 'calcul' })\n          break\n        case 'q2': // différence d'entiers sans retenue\n          a = randint(1, 3) * 10 + randint(1, 5)\n          b = randint(1, 5) * 10 + randint(1, 4)\n          texte = `$${a + b}-${a}$`\n          texteCorr = `$${a + b}-${a}=${b}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q3': // somme d'entiers à deux chiffres avec retenue\n          a = randint(1, 3) * 10 + randint(5, 9)\n          b = randint(1, 5) * 10 + randint(11 - a % 10, 9)\n          texte = `$${a}+${b}$`\n          texteCorr = `$${a}+${b}=${a + b}$`\n          setReponse(this, i, a + b, { formatInteractif: 'calcul' })\n          break\n        case 'q4': // difference avec retenue\n          a = randint(1, 3) * 10 + randint(5, 9)\n          b = randint(1, 5) * 10 + randint(11 - a % 10, 9)\n          texte = `$${a + b}-${a}$`\n          texteCorr = `$${a + b}-${a}=${b}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q5': // Décomposition\n          a = randint(1, 3)\n          b = randint(1, 9, a)\n          c = randint(1, 9, [a, b])\n          resultat = calcul(a * 1000 + b * 10 + c * 100)\n          texte = `$${texNombre(a)}\\\\times 1000 + ${texNombre(b)}\\\\times 10 + ${texNombre(c)}\\\\times 100$`\n          texteCorr = `$${texNombre(a)}\\\\times 1000 + ${texNombre(b)}\\\\times 10 + ${texNombre(c)}\\\\times 100 =${texNombre(resultat)}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q6': // Division d'entiers\n          a = randint(2, 9)\n          b = randint(3, 9)\n          texte = `$${a * b}\\\\div${a}$`\n          texteCorr = `$${a * b}\\\\div${a}=${b}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q7': // Somme entier et décimal\n          a = calcul(randint(1, 5) + randint(1, 5) / 10)\n          b = randint(1, 4)\n          texte = `$${texNombre(a)}+${b}$`\n          texteCorr = `$${texNombre(a)}+${b}=${texNombrec(a + b)}$`\n          setReponse(this, i, a + b, { formatInteractif: 'calcul' })\n          break\n        case 'q8': // Somme décimaux\n          a = calcul(randint(1, 5) + randint(1, 5) / 10)\n          b = calcul(randint(1, 4) + randint(1, 4) / 10 + randint(1, 9) / 100)\n          texte = `$${texNombre(a)}+${texNombre(b)}$`\n          texteCorr = `$${texNombre(a)}+${texNombre(b)}=${texNombrec(a + b)}$`\n          setReponse(this, i, calcul(a + b), { formatInteractif: 'calcul' })\n          break\n        case 'q9': // Différence décimaux\n          a = calcul(randint(1, 5) + randint(1, 5) / 10)\n          b = calcul(randint(1, 4) + randint(1, 4) / 10 + randint(1, 9) / 100)\n          texte = `$${texNombrec(a + b)}-${texNombre(a)}$`\n          texteCorr = `$${texNombrec(a + b)}-${texNombre(a)}=${texNombre(b)}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q10': // Différence décimaux avec retenue\n          a = calcul(randint(1, 5) + randint(5, 9) / 10)\n          b = calcul(randint(1, 4) + randint(5, 9) / 10)\n          texte = `$${texNombrec(a + b)}-${texNombre(a)}$`\n          texteCorr = `$${texNombrec(a + b)}-${texNombre(a)}=${texNombre(b)}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = ['Choix des questions (nombres séparés par des tirets)',\n  `1 : Somme d'entiers\\n\n  2 : Différence d'entiers\\n\n  3 : Somme d'entiers avec retenue\\n\n  4 : Différence d'entiers avec retenue\\n\n  5 : Décomposition\\n\n  6 : Division d'entiers\\n\n  7 : Somme décimal et entier\\n\n  8 : Somme de décimaux\\n\n  9 : Différence de décimaux\\n\n  10 : Différence décimaux\\n\n  11 : Addition d'entiers\\n\n  12 : Soustraction d'entiers\\n\n  13 : Produit de trois entiers\\n\n  14 : Produit entier et décimal\\n\n  15 : division d'entiers\\n\n  16 : soustraction entier et décimal coût\\n\n  17 : soustraction entier et décimal coût\\n\n  18 : triple de décimal\\n\n  19 : quart de décimal\\n\n  20 : Périmètre carré\\n\n  21 : Division entier par 10\\n\n  22 : Multiplication et addition d'entiers\\n\n  23 : Soustraction de grands entiers\\n\n  24 : Suite de nombres\\n\n  25 : Augmentation décimaux\\n\n  26 : Soustraction décimaux\\n\n  27 : Multiplication entier par décimal\\n\n  28 : Moitié de décimal\\n\n  29 : Soustraction grands entiers\\n\n  30 : Quotient d'entiers`]\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","CourseAuxNombresCM","a","b","c","resultat","questions","sup","split","length","combinaisonListesSansChangerOrdre","range1","parseInt","listeIndex","typeQuestionsDisponibles","texte","texteCorr","cpt","randint","setReponse","formatInteractif","calcul","texNombre","texNombrec","ajouteChampTexteMathLive","listeQuestionsToContenu"],"sourceRoot":""}