{"version":3,"file":"js/5088.7221606ba3006b29085b.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N11-2.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/2dinteractif.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, lettreDepuisChiffre, htmlConsigne, texNombre, egal, shuffle } from '../../modules/outils.js'\nimport { pointCliquable } from '../../modules/2dinteractif.js'\nimport { afficheScore } from '../../modules/gestionInteractif.js'\nimport { droiteGraduee2, labelPoint, mathalea2d, point, tracePoint } from '../../modules/2d.js'\n\nexport const titre = 'Placer un point d’abscisse entière (grands nombres)'\nexport const interactifReady = true\nexport const interactifType = 'custom'\nexport const amcReady = true\nexport const amcType = 'AMCOpen'\n/**\n * Placer un point d'abscisse entière\n * @author Jean-Claude Lhote et Rémi Angot\n * référence 6N11-2\n */\nexport default function PlacerUnPointAbscisseEntiere2d () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 5\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    if (this.interactif) {\n      this.consigne = 'Placer un point sur un axe gradué.'\n    } else {\n      this.consigne = 'Placer trois points sur un axe gradué.'\n    }\n    // numeroExercice est 0 pour l'exercice 1\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.autoCorrection = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (parseInt(this.sup) === 4) { typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else {\n      typesDeQuestions = combinaisonListes(\n        [parseInt(this.sup)],\n        this.nbQuestions\n      )\n    }\n    const pointsSolutions = []\n    const pointsNonSolutions = [] // Pour chaque question, la liste des points qui ne doivent pas être cliqués\n    const tailleUnite = 4\n    const d = []\n    let abscisse = []\n    this.contenu = htmlConsigne(this.consigne)\n    for (let i = 0, abs0, l1, l2, l3, x1, x2, x3, x11, x22, x33, A, B, C, traceA, traceB, traceC, labels, pas1, texte = '', texteCorr = ''; i < this.nbQuestions; i++) {\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n      this.autoCorrection[3 * i] = { propositions: [{ statut: 4, feedback: '' }] }\n      this.autoCorrection[3 * i + 1] = { propositions: [{ statut: 4, feedback: '' }] }\n      this.autoCorrection[3 * i + 2] = { propositions: [{ statut: 4, feedback: '' }] }\n      switch (typesDeQuestions[i]) {\n        case 1: // Placer des entiers sur un axe (milliers)\n          abs0 = randint(1, 9) * 1000\n          pas1 = 1000\n          break\n\n        case 2: // Placer des entiers sur un axe (dizaines de mille)\n          abs0 = randint(5, 15) * 10000\n          pas1 = 10000\n          break\n\n        case 3: // Placer des entiers sur un axe (centaines de mille)\n          abs0 = randint(35, 85) * 100000\n          pas1 = 100000\n          break\n      }\n      x1 = randint(0, 2) + randint(1, 9) / 10\n      x2 = randint(3, 4) + randint(1, 9) / 10\n      x3 = randint(5, 6) + randint(1, 9) / 10\n      x11 = abs0 + x1 * pas1\n      x22 = abs0 + x2 * pas1\n      x33 = abs0 + x3 * pas1\n      abscisse = shuffle([[x1, x11], [x2, x22], [x3, x33]])\n      d[2 * i] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        thickSec: true,\n        step1: 10,\n        labelListe: [[0, `${texNombre(abs0)}`], [1, `${texNombre(calcul(abs0 + pas1))}`]]\n      })\n      d[2 * i + 1] = droiteGraduee2({\n        Unite: 4,\n        Min: 0,\n        Max: 7.1,\n        axeStyle: '->',\n        pointTaille: 5,\n        pointStyle: 'x',\n        labelsPrincipaux: false,\n        labelListe: [[0, `${texNombre(abs0)}`], [1, `${texNombre(calcul(abs0 + pas1))}`]],\n        thickSec: true,\n        step1: 10\n      })\n      const mesObjets = [d[2 * i]]\n      if (this.interactif) {\n        texte = `Place le point $${l1}\\\\left(${abscisse[0][1]}\\\\right).$`\n      } else {\n        texte = `Place les points $${l1}\\\\left(${abscisse[0][1]}\\\\right)$, $~${l2}\\\\left(${abscisse[1][1]}\\\\right)$ et $~${l3}\\\\left(${abscisse[2][1]}\\\\right)$.`\n      }\n      pointsNonSolutions[i] = []\n      if (this.interactif) {\n        for (let indicePoint = 0, monPoint; indicePoint < 70; indicePoint++) {\n          monPoint = pointCliquable(indicePoint / 10 * tailleUnite, 0, { size: 5, width: 3, color: 'blue', radius: tailleUnite / 25 })\n          mesObjets.push(monPoint)\n          if (egal(indicePoint * pas1 / 10 + abs0, abscisse[0][1])) {\n            pointsSolutions[i] = monPoint\n          } else {\n            pointsNonSolutions[i].push(monPoint)\n          }\n        }\n      }\n      texte += mathalea2d({ xmin: -2, ymin: -1, xmax: 30, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i], mesObjets)\n      if (this.interactif) {\n        texte += `<div id=\"resultatCheckEx${this.numeroExercice}Q${i}\"></div>`\n      }\n\n      A = point(abscisse[0][0] * tailleUnite, 0, l1)\n      traceA = tracePoint(A)\n      traceA.color = 'blue'\n      traceA.epaisseur = 3\n      traceA.taille = 5\n      labels = labelPoint(A)\n      if (!this.interactif) {\n        A.nom = lettreDepuisChiffre(i * 3 + 1)\n        B = point(abscisse[1][0] * tailleUnite, 0, l2)\n        traceB = tracePoint(B)\n        traceB.color = 'blue'\n        traceB.epaisseur = 3\n        traceB.taille = 5\n        C = point(abscisse[2][0] * tailleUnite, 0, l3)\n        traceC = tracePoint(C)\n        traceC.color = 'blue'\n        traceC.epaisseur = 3\n        traceC.taille = 5\n        labels = labelPoint(A, B, C)\n      }\n      if (this.interactif) {\n        texteCorr = `$${l1}\\\\left(${abscisse[0][1]}\\\\right).$`\n        texteCorr += '<br>' + mathalea2d({ xmin: -2, xmax: 30, ymin: -1, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i + 1], traceA, labels)\n      } else {\n        texteCorr = `$${l1}\\\\left(${abscisse[0][1]}\\\\right)$, $~${l2}\\\\left(${abscisse[1][1]}\\\\right)$ et $~${l3}\\\\left(${abscisse[2][1]}\\\\right)$`\n        texteCorr += '<br>' + mathalea2d({ xmin: -2, xmax: 30, ymin: -1, ymax: 1, pixelsParCm: 20, scale: 0.5 }, d[2 * i + 1], traceA, traceB, traceC, labels)\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    this.correctionInteractive = () => {\n      let nbBonnesReponses = 0\n      let nbMauvaisesReponses = 0\n      for (let i = 0, aucunMauvaisPointsCliques; i < this.nbQuestions; i++) {\n        aucunMauvaisPointsCliques = true\n        const divFeedback = document.querySelector(`#resultatCheckEx${this.numeroExercice}Q${i}`)\n        pointsSolutions[i].stopCliquable()\n        for (const monPoint of pointsNonSolutions[i]) {\n          if (monPoint.etat) aucunMauvaisPointsCliques = false\n          monPoint.stopCliquable()\n        }\n        if (aucunMauvaisPointsCliques && pointsSolutions[i].etat) {\n          divFeedback.innerHTML = '😎'\n          nbBonnesReponses++\n        } else {\n          divFeedback.innerHTML = '☹️'\n          nbMauvaisesReponses++\n        }\n      }\n      afficheScore(this, nbBonnesReponses, nbMauvaisesReponses)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    '1 : Ordre de grandeur : milliers\\n2 : Ordre de grandeur : dizaines de mille\\n3 : centaines de mille\\n4 : Mélange'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { ObjetMathalea2D, point, tracePoint } from './2d.js'\n\n/**\n * @author Rémi ANGOT\n * @param {number} x abscisse du point\n * @param {number} y ordonnée du point\n * @param {object} options over, out et click sont des ojets pour le style css des évènements de la souris, radius, width, color, size, style sont les paramètres possibles pour la trace du point\n */\nfunction PointCliquable (x, y, options) {\n  ObjetMathalea2D.call(this)\n  const A = point(x, y)\n  if (!options) options = {}\n  const out = options.out || { opacity: 0 }\n  const over = options.over || { opacity: 0.5 }\n  const click = options.click || { opacity: 1 }\n  this.etat = false // Pour récupérer si le point est affiché ou pas\n  this.svg = function (coeff) {\n    let code\n    const trace = tracePoint(A)\n    trace.color = options.color || options.couleur || 'black'\n    trace.epaisseur = options.width || options.epaisseur || 1\n    trace.taille = options.size || options.taille || 3\n    trace.isVisible = false\n    trace.style = options.style || 'x'\n    code = `<g id=\"${this.id}\">\\n`\n    code += trace.svg(coeff) + '\\n'\n    // Le cercle est la zone d'effet pour les évènements\n    // Comme fill est à none, il faut ajouter pointer-events=\"visible\" cf https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/\n    code += `<circle cx=\"${A.xSVG(coeff)}\" cy=\"${A.ySVG(coeff)}\" r=\"${(options.radius || options.rayon || 1) * coeff}\" fill=\"none\" pointer-events=\"visible\" />\\n`\n    code += '</g>'\n    return code\n  }\n  const moi = this // Pour utiliser this dans les fonctions\n  const gestionDeLaSouris = () => {\n    document.removeEventListener('exercicesAffiches', gestionDeLaSouris)\n    const groupe = document.getElementById(`${this.id}`)\n    const changeEtatPoint = (etat) => {\n      this.etat = etat\n    }\n    // On initialise avec le style de out\n    if (groupe) {\n      for (const key in out) {\n        groupe.style[key] = out[key]\n      }\n      groupe.addEventListener('mouseover', mouseOverEffect)\n      groupe.addEventListener('mouseout', mouseOutEffect)\n      groupe.addEventListener('click', mouseClick)\n      function mouseOverEffect () {\n        for (const key in over) {\n          this.style[key] = over[key]\n        }\n      }\n      function mouseOutEffect () {\n        for (const key in out) {\n          this.style[key] = out[key]\n        }\n      }\n      function mouseClick () {\n        if (moi.etat) {\n          // On désactive le point\n          groupe.addEventListener('mouseover', mouseOverEffect)\n          groupe.addEventListener('mouseout', mouseOutEffect)\n          // On lui remet le style de out\n          for (const key in out) {\n            this.style[key] = out[key]\n          }\n          moi.etat = false\n          changeEtatPoint(false)\n        } else {\n          // On désactive les listeners\n          groupe.removeEventListener('mouseover', mouseOverEffect)\n          groupe.removeEventListener('mouseout', mouseOutEffect)\n          // On applique le style de click\n          for (const key in click) {\n            this.style[key] = click[key]\n          }\n          moi.etat = true\n        }\n      }\n    }\n  }\n  document.addEventListener('exercicesAffiches', gestionDeLaSouris)\n  this.stopCliquable = () => {\n    const groupe = document.getElementById(`${this.id}`)\n    // On retire tous les listener en le remplaçant par un clone\n    groupe.replaceWith(groupe.cloneNode(true))\n  }\n}\n\nexport function pointCliquable (...args) {\n  return new PointCliquable(...args)\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","PlacerUnPointAbscisseEntiere2d","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","nouvelleVersion","typesDeQuestions","interactif","consigne","listeQuestions","listeCorrections","autoCorrection","contenu","contenuCorrection","parseInt","combinaisonListes","pointsSolutions","pointsNonSolutions","d","abscisse","htmlConsigne","abs0","l1","l2","l3","x1","x2","x3","x11","x22","x33","A","B","C","traceA","traceB","traceC","labels","pas1","i","texte","texteCorr","lettreDepuisChiffre","propositions","statut","feedback","randint","shuffle","droiteGraduee2","Unite","Min","Max","axeStyle","pointTaille","pointStyle","labelsPrincipaux","thickSec","step1","labelListe","texNombre","calcul","mesObjets","monPoint","indicePoint","pointCliquable","size","width","color","radius","tailleUnite","push","egal","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","numeroExercice","point","tracePoint","epaisseur","taille","labelPoint","nom","correctionInteractive","nbBonnesReponses","nbMauvaisesReponses","aucunMauvaisPointsCliques","divFeedback","document","querySelector","stopCliquable","etat","innerHTML","afficheScore","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf","PointCliquable","x","y","options","ObjetMathalea2D","out","opacity","over","click","svg","coeff","code","trace","couleur","isVisible","style","id","xSVG","ySVG","rayon","moi","gestionDeLaSouris","removeEventListener","groupe","getElementById","changeEtatPoint","key","mouseOverEffect","mouseOutEffect","mouseClick","addEventListener","replaceWith","cloneNode"],"sourceRoot":""}