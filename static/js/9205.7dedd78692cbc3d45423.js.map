{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6M31-2.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Unites_de_volumes_et_de_capacite","niveau","Exercice","this","sup","sup2","consigne","spacing","nbQuestions","nbColsCorr","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","combinaisonListes","liste_de_n","n","texte","texteCorr","i","cpt","calcul","randint","texNombre","texNombrec","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"8KAEO,MAAMA,EAAQ,yDAiBN,SAASC,EAAiCC,EAAS,GAChEC,eAAcC,MACdA,KAAKC,IAAMH,EACXE,KAAKE,MAAO,EACZF,KAAKJ,MAAQA,EACbI,KAAKG,SAAW,YAChBH,KAAKI,QAAU,EACfJ,KAAKK,YAAc,EACnBL,KAAKM,WAAa,EAElBN,KAAKO,gBAAkB,WAGrB,IAAIC,EAFJR,KAAKS,eAAiB,GACtBT,KAAKU,iBAAmB,GAER,GAAZV,KAAKC,MACPO,GAAuBG,SACrB,CAAC,UAAW,QAAS,SAAU,UAC/BX,KAAKK,cAGO,GAAZL,KAAKC,MACPO,GAAuBG,SACrB,CAAC,SAAU,SAAU,SACrBX,KAAKK,cAGO,GAAZL,KAAKC,MACPO,GAAuBG,SACrB,CACE,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SAEFX,KAAKK,cAGT,IAAIO,EAAa,GAEfA,EADEZ,KAAKE,MACMS,SAAkB,CAAC,EAAG,EAAG,EAAG,GAAIX,KAAKK,cAErCM,SAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIX,KAAKK,aAE1D,IACE,IAAWQ,EAAGC,EAAOC,EAAjBC,EAAI,EAAwBC,EAAM,EACtCD,EAAIhB,KAAKK,aAAeY,EAAM,IAE9B,CACA,GAAIjB,KAAKE,KACP,OAAQU,EAAWI,IACjB,KAAK,EACHH,GAAIK,UAAOC,SAAQ,EAAG,GAAK,IAC3B,MACF,KAAK,EACHN,GAAIK,UAAOC,SAAQ,GAAI,IAAM,KAC7B,MACF,KAAK,EACHN,GAAIK,SAAuB,IAAhBC,SAAQ,EAAG,IAAUA,SAAQ,EAAG,GAAK,IAChD,MACF,KAAK,EACHN,GAAIK,UACFC,SAAQ,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,UAK9D,OAAQP,EAAWI,IACjB,KAAK,EACHH,GAAIM,SAAQ,EAAG,GACf,MACF,KAAK,EACHN,GAAIM,SAAQ,GAAI,IAChB,MACF,KAAK,EACHN,EAAoB,IAAhBM,SAAQ,EAAG,GACf,MACF,KAAK,EACHN,EAAoB,KAAhBM,SAAQ,EAAG,GACf,MACF,KAAK,EACHN,EAAsB,KAAlBM,SAAQ,GAAI,IAChB,MACF,KAAK,EACHN,EAAoB,KAAhBM,SAAQ,EAAG,GAIrB,OAAQX,EAAqBQ,IAC3B,IAAK,UACHF,EAAS,KAAGM,SAAUP,wCACtBE,EAAa,KAAGK,SAAUP,qBAAoBO,SAC5CP,4CACwCQ,SACpC,IAAJR,gBAEF,MACF,IAAK,QACHC,EAAS,KAAGM,SAAUP,sCACtBE,EAAa,KAAGK,SAAUP,mBAAkBO,SAC1CP,gCAC4BQ,SAAe,IAAJR,gBACzC,MACF,IAAK,SACHC,EAAS,KAAGM,SAAUP,uCACtBE,EAAa,KAAGK,SAAUP,oBAAmBO,SAC3CP,gBAEF,MACF,IAAK,SACHC,EAAS,KAAGM,SAAUP,uCACtBE,EAAa,KAAGK,SAAUP,oBAAmBO,SAC3CP,+BAC2BQ,SAAWR,EAAI,kBAC5C,MACF,IAAK,SACHC,EAAS,KAAGM,SAAUP,uCACtBE,EAAa,KAAGK,SAAUP,oBAAmBO,SAC3CP,yCACqCQ,SACrCR,EAAI,kBAEN,MACF,IAAK,SACHC,EAAS,KAAGM,SAAUP,uCACtBE,EAAa,KAAGK,SAAUP,iBAAgBO,SACxCP,mBAEF,MACF,IAAK,SACHC,EAAS,KAAGM,SAAUP,uCACtBE,EAAa,KAAGK,SAAUP,iBAAgBO,SACxCP,oBACgBO,SAChBP,gCAC4BQ,SAAe,IAAJR,mBACzC,MACF,IAAK,QACHC,EAAS,KAAGM,SAAUP,sCACtBE,EAAa,KAAGK,SAAUP,iBAAgBO,SACxCP,oBACgBO,SAAUP,6BAA4BQ,SACtDR,EAAI,qBAKiC,GAAvCb,KAAKS,eAAea,QAAQR,KAE9Bd,KAAKS,eAAec,KAAKT,GACzBd,KAAKU,iBAAiBa,KAAKR,GAC3BC,KAEFC,KAEFO,SAAwBxB,OAE1BA,KAAKyB,0BAA4B,CAC/B,uBACA,EACA,sHAEFzB,KAAK0B,6BAA+B,CAAC,+B,6BClLxB,SAAS3B,IAEtBC,KAAKJ,MAAQ,GACbI,KAAKG,SAAW,GAChBH,KAAK2B,mBAAqB,GAC1B3B,KAAKS,eAAiB,GACtBT,KAAKU,iBAAmB,GACxBV,KAAK4B,aAAe,GACpB5B,KAAK6B,QAAU,GACf7B,KAAK8B,kBAAoB,GACzB9B,KAAKK,YAAc,GACnBL,KAAK+B,OAAS,EACd/B,KAAKM,WAAa,EAClBN,KAAKI,QAAU,EACfJ,KAAKgC,YAAc,EACnBhC,KAAKiC,QAAS,EAEdjC,KAAKyB,2BAA4B,EACjCzB,KAAKkC,uBAAwB,EAC7BlC,KAAKmC,6BAA8B,EACnCnC,KAAKoC,oBAAqB,EAC1BpC,KAAKqC,uBAAwB,EAC7BrC,KAAKsC,kBAAmB,EACxBtC,KAAKuC,sBAAuB,EAC5BvC,KAAKwC,mBAAoB,EACzBxC,KAAKyC,uBAAwB,EAC7BzC,KAAK0C,+BAAgC,EACrC1C,KAAK2C,qBAAsB,EAC3B3C,KAAK4C,MAAQ,GACb5C,KAAK6C,YAAa,EAClB7C,KAAK8C,gBAAkB,GAMvB9C,KAAK+C,mBAAoB,EACzB/C,KAAKgD,KAAM,EACXhD,KAAKiD,eAAgB,EACrBjD,KAAKkD,SAAU,EACflD,KAAKmD,sBAAwB,GAC7BnD,KAAKoD,cAAe,EACpBpD,KAAKO,gBAAkB,SAAU8C,KACjCrD,KAAKsD,cAAgB,G","file":"js/9205.7dedd78692cbc3d45423.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,combinaisonListes,calcul,texNombrec,texNombre} from '../../modules/outils.js'\nexport const titre = 'Conversions avec des unités de volumes ou de capacités'\n\n/**\n * Conversions d'unités de volumes vers les unités de capacité ou inversement.\n *\n * Dans la correction, on passe systématiquement par l'équivalence dm3 = L\n *\n * * 1 : De dam3, m3, dm3, cm3 ou mm3 vers L ou inversement\n * * 2 :\n * * 3 :\n * * 4 :\n * * 5 :\n * * 6 : Un mélange de toutes les conversions\n * * Paramètre supplémentaire : utiliser des nombres décimaux (par défaut tous les nombres sont entiers)\n * @Auteur Rémi Angot\n * Référence 6M31-2\n */\nexport default function Unites_de_volumes_et_de_capacite(niveau = 1) {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.sup = niveau; // Niveau de difficulté de l'exercice\n  this.sup2 = false; // Avec des nombres décimaux ou pas\n  this.titre = titre;\n  this.consigne = \"Compléter\";\n  this.spacing = 2;\n  this.nbQuestions = 8;\n  this.nbColsCorr = 1;\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let listeTypeDeQuestions\n    if (this.sup == 1) {\n      listeTypeDeQuestions = combinaisonListes(\n        [\"dam3toL\", \"m3toL\", \"dm3toL\", \"cm3toL\"],\n        this.nbQuestions\n      );\n    }\n    if (this.sup == 2) {\n      listeTypeDeQuestions = combinaisonListes(\n        [\"Ltodm3\", \"Ltocm3\", \"Ltom3\"],\n        this.nbQuestions\n      );\n    }\n    if (this.sup == 3) {\n      listeTypeDeQuestions = combinaisonListes(\n        [\n          \"dam3toL\",\n          \"m3toL\",\n          \"dm3toL\",\n          \"cm3toL\",\n          \"mm3toL\",\n          \"Ltodm3\",\n          \"Ltocm3\",\n          \"Ltom3\",\n        ],\n        this.nbQuestions\n      );\n    }\n    let liste_de_n = [];\n    if (this.sup2) {\n      liste_de_n = combinaisonListes([1, 2, 3, 4], this.nbQuestions);\n    } else {\n      liste_de_n = combinaisonListes([1, 2, 3, 4, 5, 6], this.nbQuestions);\n    }\n    for (\n      let i = 0, n, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      if (this.sup2) {\n        switch (liste_de_n[i]) {\n          case 1:\n            n = calcul(randint(2, 9) / 10);\n            break;\n          case 2:\n            n = calcul(randint(11, 99) / 100);\n            break;\n          case 3:\n            n = calcul(randint(1, 9) * 10 + randint(1, 9) / 10);\n            break;\n          case 4:\n            n = calcul(\n              randint(11, 99, [10, 20, 30, 40, 50, 60, 70, 80, 90]) / 100\n            );\n            break;\n        }\n      } else {\n        switch (liste_de_n[i]) {\n          case 1:\n            n = randint(2, 9);\n            break;\n          case 2:\n            n = randint(11, 99);\n            break;\n          case 3:\n            n = randint(1, 9) * 10;\n            break;\n          case 4:\n            n = randint(1, 9) * 100;\n            break;\n          case 5:\n            n = randint(11, 99) * 100;\n            break;\n          case 6:\n            n = randint(1, 9) * 1000;\n            break;\n        }\n      }\n      switch (listeTypeDeQuestions[i]) {\n        case \"dam3toL\":\n          texte = `$${texNombre(n)}~\\\\text{dam}^3=\\\\dotfill~\\\\text{L}$`;\n          texteCorr = `$${texNombre(n)}~\\\\text{dam}^3=${texNombre(\n            n\n          )}\\\\times1~000\\\\times1~000~\\\\text{dm}^3=${texNombrec(\n            n * 1000000\n          )}~\\\\text{L}$`;\n          break;\n        case \"m3toL\":\n          texte = `$${texNombre(n)}~\\\\text{m}^3=\\\\dotfill~\\\\text{L}$`;\n          texteCorr = `$${texNombre(n)}~\\\\text{m}^3=${texNombre(\n            n\n          )}\\\\times1~000~\\\\text{dm}^3=${texNombrec(n * 1000)}~\\\\text{L}$`;\n          break;\n        case \"dm3toL\":\n          texte = `$${texNombre(n)}~\\\\text{dm}^3=\\\\dotfill~\\\\text{L}$`;\n          texteCorr = `$${texNombre(n)}~\\\\text{dm}^3=${texNombre(\n            n\n          )}~\\\\text{L}$`;\n          break;\n        case \"cm3toL\":\n          texte = `$${texNombre(n)}~\\\\text{cm}^3=\\\\dotfill~\\\\text{L}$`;\n          texteCorr = `$${texNombre(n)}~\\\\text{cm}^3=${texNombre(\n            n\n          )}\\\\div 1~000~\\\\text{dm}^3=${texNombrec(n / 1000)}~\\\\text{L}$`;\n          break;\n        case \"mm3toL\":\n          texte = `$${texNombre(n)}~\\\\text{mm}^3=\\\\dotfill~\\\\text{L}$`;\n          texteCorr = `$${texNombre(n)}~\\\\text{mm}^3=${texNombre(\n            n\n          )}\\\\div1~000\\\\div 1~000~\\\\text{dm}^3=${texNombrec(\n            n / 1000000\n          )}~\\\\text{L}$`;\n          break;\n        case \"Ltodm3\":\n          texte = `$${texNombre(n)}~\\\\text{L}=\\\\dotfill~\\\\text{dm}^3$`;\n          texteCorr = `$${texNombre(n)}~\\\\text{L}=${texNombre(\n            n\n          )}~\\\\text{dm}^3$`;\n          break;\n        case \"Ltocm3\":\n          texte = `$${texNombre(n)}~\\\\text{L}=\\\\dotfill~\\\\text{cm}^3$`;\n          texteCorr = `$${texNombre(n)}~\\\\text{L}=${texNombre(\n            n\n          )}~\\\\text{dm}^3=${texNombre(\n            n\n          )}\\\\times1~000~\\\\text{cm}^3=${texNombrec(n * 1000)}~\\\\text{cm}^3$`;\n          break;\n        case \"Ltom3\":\n          texte = `$${texNombre(n)}~\\\\text{L}=\\\\dotfill~\\\\text{m}^3$`;\n          texteCorr = `$${texNombre(n)}~\\\\text{L}=${texNombre(\n            n\n          )}~\\\\text{dm}^3=${texNombre(n)}\\\\div1~000~\\\\text{m}^3=${texNombrec(\n            n / 1000\n          )}~\\\\text{m}^3$`;\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    3,\n    \"1 : Unités de volume vers litre\\n2 : Litre vers unités de volume\\n3 : Unités de volumes vers litre ou inversement \",\n  ];\n  this.besoinFormulaire2CaseACocher = [\"Avec des nombres décimaux\"];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}