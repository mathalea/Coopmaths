{"version":3,"file":"js/16320.fc96c5737192b46ccc2d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaCan2G01.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { context } from '../../modules/context'\nimport { ajouteChampTexteMathLive, propositionsQcm, setReponse } from '../../modules/gestionInteractif'\nimport { calcul, choice, listeQuestionsToContenuSansNumero, randint } from '../../modules/outils'\nimport Exercice from '../Exercice'\nexport const titre = 'Périmètres de carrés et de rectangles'\nexport const interactifReady = true\nexport const interactifType = ['qcm', 'mathLive']\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\n/*!\n * @author Gilles Mora\n */\nexport default function PerimetreCarreRectangle () {\n  Exercice.call(this)\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.interactifType = ''\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.autoCorrection[0] = {}\n    let a, b, question, correction, reponse, monQcm\n    switch (choice(['a', 'b', 'c'])) {\n      case 'a':\n        a = randint(2, 9)\n        b = randint(0, 1)\n        this.interactifType = 'qcm'\n        if (b === 0) {\n          question = `Un carré de côté ${a} cm a le même périmètre qu'un rectangle de largeur ${a - b} cm et de longueur ${a + 1} cm ?`\n          reponse = 'Faux'\n          correction = `Faux car $4\\\\times ${a}$ cm$\\\\neq 2\\\\times ${a}$ cm$ + 2\\\\times ${a + 1}$ cm.`\n        } else {\n          question = `Un carré de côté ${a} cm a le même périmètre qu'un rectangle de largeur ${a - b} cm et de longueur ${a + 1} cm ?`\n          reponse = 'Vrai'\n          correction = `Vrai car $4\\\\times ${a}$ cm = $2\\\\times ${a - 1}$ cm $ + 2\\\\times ${a + 1}$ cm$= ${4 * a}$ cm.`\n        }\n        this.autoCorrection[0] = {\n          enonce: question,\n          propositions: [\n            {\n              texte: 'Vrai',\n              statut: reponse === 'Vrai'\n            },\n            {\n              texte: 'Faux',\n              statut: reponse === 'Faux'\n            },\n            {\n              texte: 'Je ne sais pas',\n              statut: false\n            }\n          ],\n          options: { ordered: true, vertical: false }\n        }\n        if (!context.isAmc) {\n          monQcm = propositionsQcm(this, 0)\n          question += monQcm.texte\n          correction += monQcm.correction\n        }\n        break\n      case 'b':\n        a = randint(5, 20) * 4\n        this.interactifType = 'mathLive'\n        question = `Le périmètre d'un carré est $${a}$ cm.<br>Quelle est la longueur du côté du carré ? `\n        question += ajouteChampTexteMathLive(this, 0, 'largeur 10 inline', { texteApres: ' cm' })\n        reponse = calcul(a / 4)\n        correction = `Le côté du carré est $${a}\\\\div 4=${reponse}$ cm.`\n        setReponse(this, 0, reponse)\n        break\n      case 'c':\n        a = randint(5, 10) * 2\n        b = randint(2, a - 1)\n        this.interactifType = 'mathLive'\n        if (choice([true, false])) {\n          question = `Le périmètre d'un rectangle de largeur $${b}$ cm est $${(a + b) * 2}$ cm.<br>Quelle est sa longueur ? `\n          question += ajouteChampTexteMathLive(this, 0, 'largeur 10 inline', { texteApres: ' cm' })\n          reponse = a\n          correction = `Le demi-périmètre de ce rectangle est $${b}+L=${a + b}$ cm. Donc $L=${a}$ cm.`\n        } else {\n          question = `Le périmètre d'un rectangle de longueur $${a}$ cm est $${(a + b) * 2}$ cm.<br>Quelle est sa largeur ? `\n          question += ajouteChampTexteMathLive(this, 0, 'largeur 10 inline', { texteApres: ' cm' })\n          reponse = b\n          correction = `Le demi-périmètre de ce rectangle est $${a}+l=${a + b}$ cm. Donc $l=${b}$ cm.`\n        }\n        setReponse(this, 0, reponse)\n        break\n    }\n    this.listeQuestions[0] = question\n    this.listeCorrections[0] = correction\n    listeQuestionsToContenuSansNumero(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","PerimetreCarreRectangle","a","b","question","correction","reponse","monQcm","choice","randint","enonce","propositions","texte","statut","options","ordered","vertical","context","propositionsQcm","ajouteChampTexteMathLive","texteApres","calcul","setReponse","listeQuestionsToContenuSansNumero"],"sourceRoot":""}