{"version":3,"file":"js/54776.cfbdbed6259fa67ec3da.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C21.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, ecritureNombreRelatif, ecritureParentheseSiNegatif, pgcd, simplificationDeFractionAvecEtapes, calcul, miseEnEvidence, texFraction, ppcm, fractionSimplifiee } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { fraction } from '../../modules/fractions.js'\n\nexport const amcReady = true\nexport const amcType = 'AMCOpenNum✖︎2' // type de question AMC\nexport const titre = 'Additionner ou soustraire deux fractions'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n* Effectuer la somme ou la différence de deux fractions\n*\n* * Niveau 1 : 4 fois sur 5 un dénominateur est un multiple de l'autre et une fois sur 5 il faut additionner une fraction et un entier\n* * Niveau 2 : 2 fois sur 5, il faut trouver le ppcm, 1 fois sur 5 le ppcm correspond à leur produit, 1 fois sur 5 un dénominateur est multiple de l'autre, 1 fois sur 5 il faut additionner une fraction et un entier\n* * Paramètre supplémentaire : utiliser des nommbres relatifs (par défaut tous les nombres sont positifs)\n* * 2 fois sur 4 il faut faire une soustraction\n* @author Rémi Angot\n* 4C21\n*/\nexport default function ExerciceAdditionnerOuSoustraireDesFractions () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = 2 // Niveau de difficulté\n  this.sup2 = false // Avec ou sans relatifs\n  this.consigne = \"Calculer et donner le résultat sous la forme d'une fraction simplifiée.\"\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = ['b_multiple_de_d', 'd_multiple_de_b', 'b_multiple_de_d', 'd_multiple_de_b', 'entier']\n    }\n    if (this.sup === 2) {\n      typesDeQuestionsDisponibles = ['ppcm', 'ppcm', 'premiers_entre_eux', choice(['b_multiple_de_d', 'd_multiple_de_b']), 'entier']\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeDePlusOuMoins = combinaisonListes(['-', '-', '+', '+'], this.nbQuestions)\n    const listeCouplesDeDenominateurs = [[6, 9], [4, 6], [8, 12], [9, 12], [10, 15], [10, 25], [6, 21], [12, 30], [6, 8], [50, 75]]\n    for (let i = 0, a, b, c, d, k, k1, k2, num, den, texte, texteCorr, reponse, couplesDeDenominateurs, typesDeQuestions; i < this.nbQuestions; i++) {\n      const plusOuMoins = listeDePlusOuMoins[i]\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        case 'ppcm':\n          couplesDeDenominateurs = choice(listeCouplesDeDenominateurs)\n          if (choice([true, false])) {\n            b = couplesDeDenominateurs[0]\n            d = couplesDeDenominateurs[1]\n          } else {\n            b = couplesDeDenominateurs[1]\n            d = couplesDeDenominateurs[0]\n          }\n          k1 = ppcm(b, d) / b\n          k2 = ppcm(b, d) / d\n          break\n\n        case 'premiers_entre_eux':\n          b = randint(2, 9)\n          d = randint(2, 9)\n          while (pgcd(b, d) !== 1) {\n            b = randint(2, 9)\n            d = randint(2, 9)\n          }\n          k1 = ppcm(b, d) / b\n          k2 = ppcm(b, d) / d\n          break\n\n        case 'd_multiple_de_b':\n          b = randint(2, 9)\n          k = randint(2, 11)\n          d = b * k\n          break\n\n        case 'b_multiple_de_d':\n          d = randint(2, 9)\n          k = randint(2, 11)\n          b = d * k\n          break\n      }\n\n      a = randint(1, 9, [b])\n      c = randint(1, 9, [d])\n      if (this.sup2) { // si les numérateurs sont relatifs\n        a = a * choice([-1, 1])\n        c = c * choice([-1, 1])\n      }\n      if (!this.sup2 && plusOuMoins === '-' && a / b < c / d) { // s'il n'y a pas de relatifs, il faut s'assurer que la soustraction soit positive\n        [a, b, c, d] = [c, d, a, b] // on échange les 2 fractions\n        k1 = ppcm(b, d) / b\n        k2 = ppcm(b, d) / d\n        if (typesDeQuestions === 'd_multiple_de_b') {\n          typesDeQuestions = 'b_multiple_de_d' // comme on a échangé les 2 fractions, le type de la question change\n          k = b / d\n        } else if (typesDeQuestions === 'b_multiple_de_d') {\n          typesDeQuestions = 'd_multiple_de_b' // comme on a échangé les 2 fractions, le type de la question change\n          k = d / b\n        }\n      }\n      texte = `$${texFraction(a, b)}${plusOuMoins}${texFraction(c, d)}=$`\n      texteCorr = `$${texFraction(a, b)}${plusOuMoins}${texFraction(c, d)}`\n\n      // a/b(+ou-)c/d = num/den (résultat non simplifié)\n      if (typesDeQuestions === 'ppcm' || typesDeQuestions === 'premiers_entre_eux') {\n        texteCorr += `=${texFraction(a + miseEnEvidence('\\\\times ' + k1), b + miseEnEvidence('\\\\times ' + k1))}${plusOuMoins}${texFraction(c + miseEnEvidence('\\\\times ' + k2), d + miseEnEvidence('\\\\times ' + k2))}`\n        num = calcul(a * k1 + plusOuMoins + ecritureNombreRelatif(c * k2))\n        den = b * k1\n        texteCorr += `=${texFraction(a * k1 + plusOuMoins + ecritureParentheseSiNegatif(c * k2), den)}`\n      }\n\n      if (typesDeQuestions === 'd_multiple_de_b') {\n        texteCorr += `=${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}${plusOuMoins}${texFraction(c, d)}`\n        num = calcul(a * k + plusOuMoins + ecritureNombreRelatif(c))\n        den = b * k\n        texteCorr += `=${texFraction(a * k + plusOuMoins + ecritureParentheseSiNegatif(c), den)}`\n      }\n\n      if (typesDeQuestions === 'b_multiple_de_d') {\n        texteCorr += `=${texFraction(a, b)}${plusOuMoins}${texFraction(c + miseEnEvidence('\\\\times ' + k), d + miseEnEvidence('\\\\times ' + k))}`\n        num = calcul(a + plusOuMoins + ecritureNombreRelatif(c * k))\n        den = b\n        texteCorr += `=${texFraction(a + plusOuMoins + ecritureParentheseSiNegatif(c * k), den)}`\n      }\n\n      if (typesDeQuestions === 'entier') {\n        a = randint(1, 9)\n        b = randint(2, 9, [a])\n        let n = randint(1, 9)\n        if (this.sup2) {\n          a = a * choice([-1, 1])\n          n = n * choice([-1, 1])\n        }\n        if (choice([true, false])) {\n          // n+-a/b\n          if (!this.sup2 && plusOuMoins === '-' && n < a / b) {\n            n = randint(5, 9) // max(a/b)=9/2\n          }\n          texte = `$${n}${plusOuMoins}${texFraction(a, b)}=$`\n          texteCorr = texte\n          texteCorr += `$${texFraction(n + miseEnEvidence('\\\\times ' + b), miseEnEvidence(b))}${plusOuMoins}${texFraction(a, b)}`\n          texteCorr += `=${texFraction(n * b + plusOuMoins + ecritureParentheseSiNegatif(a), b)}`\n        } else {\n          // a/b +-n\n          if (!this.sup2 && plusOuMoins === '-' && n > a / b) {\n            n = randint(1, 4) //\n            a = n * b + randint(1, 9) // (n*b+?)/b-n>0\n          }\n          texte = `$${texFraction(a, b)}${plusOuMoins}${ecritureParentheseSiNegatif(n)}=$`\n          texteCorr = texte\n          texteCorr += `$${texFraction(a, b)}${plusOuMoins}${texFraction(n + miseEnEvidence('\\\\times ' + b), miseEnEvidence(b))}`\n          texteCorr += `=${texFraction(a + '+' + ecritureParentheseSiNegatif(n * b), b)}`\n        }\n        num = calcul(n * b + plusOuMoins + ecritureParentheseSiNegatif(a))\n        den = b\n      }\n      texteCorr += `=${texFraction(num, den)}`\n      texteCorr += simplificationDeFractionAvecEtapes(num, den) + '$'\n      // Pour l'instant pour tester je mets num et den dans reponse\n\n      if (context.isAmc) {\n        this.autoCorrection[i] = {\n          enonce: `Calculer $${texte.substring(1, texte.length - 2)}$ et donner le résultat sous forme irreductible`,\n          propositions: [\n            {\n              texte: texteCorr,\n              statut: 3,\n              feedback: ''\n            }\n          ],\n          reponse: {\n            texte: 'numérateur',\n            valeur: fractionSimplifiee(num, den)[0],\n            param: {\n              digits: 2,\n              decimals: 0,\n              exposantNbChiffres: 0,\n              exposantSigne: false,\n              signe: true,\n              approx: 0\n            }\n          },\n          reponse2: {\n            texte: 'dénominateur',\n            valeur: fractionSimplifiee(num, den)[1],\n            param: {\n              digits: 2,\n              decimals: 0,\n              exposantNbChiffres: 0,\n              exposantSigne: false,\n              signe: false,\n              approx: 0\n            }\n          }\n        }\n      } else {\n        reponse = fraction(num, den).simplifie()\n        texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n        setReponse(this, i, reponse, { formatInteractif: 'fraction' })\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n\n    listeQuestionsToContenu(this) // Espacement de 2 em entre chaque questions.\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, \"1 : Un dénominateur multiple de l'autre\\n2 : Cas général\"]\n  this.besoinFormulaire2CaseACocher = ['Avec des nombres relatifs']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","titre","interactifReady","interactifType","ExerciceAdditionnerOuSoustraireDesFractions","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","nouvelleVersion","typesDeQuestionsDisponibles","autoCorrection","listeQuestions","listeCorrections","choice","listeTypeDeQuestions","combinaisonListes","listeDePlusOuMoins","listeCouplesDeDenominateurs","a","b","c","d","k","k1","k2","num","den","texte","texteCorr","reponse","couplesDeDenominateurs","typesDeQuestions","i","plusOuMoins","ppcm","randint","pgcd","texFraction","miseEnEvidence","calcul","ecritureNombreRelatif","ecritureParentheseSiNegatif","n","simplificationDeFractionAvecEtapes","context","enonce","substring","length","propositions","statut","feedback","valeur","fractionSimplifiee","param","digits","decimals","exposantNbChiffres","exposantSigne","signe","approx","reponse2","fraction","simplifie","ajouteChampTexteMathLive","setReponse","formatInteractif","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}