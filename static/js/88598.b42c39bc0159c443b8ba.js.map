{"version":3,"file":"js/88598.b42c39bc0159c443b8ba.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C30-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, shuffle, combinaisonListesSansChangerOrdre, calcul, texNombrec, texNombre, nombreDeChiffresDansLaPartieEntiere, nombreDeChiffresDansLaPartieDecimale } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const interactifReady = true\nexport const interactifType = 'numerique'\n\nexport const amcType = 'AMCNum' // Question numérique\nexport const titre = 'Calculer le produit de deux décimaux connaissant le produit de deux entiers'\n\n/**\n * * Calculer le produit de deux décimaux à partir d'un produit de deux entiers\n * * 6C30-2\n * @author Sébastien Lozano\n */\n\nexport default function ProduitDeDecimauxAPartirProduitConnu () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.beta = false\n  this.sup = 1\n  if (this.beta) {\n    this.nbQuestions = 3\n  } else {\n    this.nbQuestions = 3\n  };\n\n  this.titre = titre\n  this.consigne = ''\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  context.isHtml ? this.spacing = 3 : this.spacing = 2\n  context.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    if (this.beta) {\n      typesDeQuestionsDisponibles = [0, 1, 2]\n    } else {\n      // typesDeQuestionsDisponibles = shuffle([choice([1,3]),choice([2,4]),0]);\n      typesDeQuestionsDisponibles = shuffle([0, 1, 2])\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let reponse\n    // let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // pour les situations, autant de situations que de cas dans le switch !\n      this.autoCorrection[i] = {}\n      const situations = [\n        { // case 0 --> (d1u1xp1)xd2u2\n          d1: randint(1, 9),\n          u1: randint(1, 9),\n          d2: randint(1, 9),\n          u2: randint(1, 9),\n          p1: randint(-3, 3, [0]),\n          p2: randint(-3, 3, [0])\n        }\n      ]\n      const enonces = []\n      // for (let k=0;k<3;k++) {\n      enonces.push({\n        enonce: `\n            Sachant que $${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)} = ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}$,\n            calculer $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (10 ** situations[0].p1)))}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)}$.\n            `,\n        question: '',\n        correction: `\n          $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (10 ** situations[0].p1)))}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)} = ${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${texNombrec(10 ** situations[0].p1)} \\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)} = ${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)}\\\\times ${texNombrec(10 ** situations[0].p1)} =  ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}\\\\times ${texNombrec(10 ** situations[0].p1)} = ${texNombrec(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)) * calcul(10 ** situations[0].p1))}$\n          `,\n        reponse: calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2) * 10 ** situations[0].p1)\n      })\n      enonces.push({\n        enonce: `\n          Sachant que $${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)} = ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}$,\n          calculer $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1)))}\\\\times ${texNombre(calcul((situations[0].d2 * 10 + situations[0].u2) * (10 ** situations[0].p2)))}$.\n            `,\n        question: '',\n        correction: `\n          $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1)))}\\\\times ${texNombre(calcul((situations[0].d2 * 10 + situations[0].u2) * (10 ** situations[0].p2)))} = ${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)}\\\\times ${texNombrec(10 ** situations[0].p2)} = ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}\\\\times ${texNombrec(10 ** situations[0].p2)} = ${texNombrec(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)) * calcul(10 ** situations[0].p2))}$\n          `,\n        reponse: calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2) * 10 ** situations[0].p2)\n      })\n      enonces.push({\n        enonce: `\n          Sachant que $${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)} = ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}$,\n          calculer $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (10 ** situations[0].p1)))}\\\\times ${texNombre(calcul((situations[0].d2 * 10 + situations[0].u2) * (10 ** situations[0].p2)))}$.\n          `,\n        question: '',\n        correction: `\n          $${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (10 ** situations[0].p1)))}\\\\times ${texNombre(calcul((situations[0].d2 * 10 + situations[0].u2) * (10 ** situations[0].p2)))} = ${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${texNombrec(10 ** situations[0].p1)} \\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)}\\\\times ${texNombrec(10 ** situations[0].p2)} = ${calcul(situations[0].d1 * 10 + situations[0].u1)}\\\\times ${calcul(situations[0].d2 * 10 + situations[0].u2)}\\\\times ${texNombrec(10 ** situations[0].p1)}\\\\times ${texNombrec(10 ** situations[0].p2)} = ${texNombre(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)))}\\\\times ${texNombrec(10 ** situations[0].p1)}\\\\times ${texNombrec(10 ** situations[0].p2)} = ${texNombrec(calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2)) * calcul(10 ** situations[0].p1) * calcul(10 ** situations[0].p2))}$\n          `,\n        reponse: calcul((situations[0].d1 * 10 + situations[0].u1) * (situations[0].d2 * 10 + situations[0].u2) * 10 ** situations[0].p1 * 10 ** situations[0].p2)\n      })\n\n      // };\n\n      // autant de case que d'elements dans le tableau des situations\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          reponse = enonces[0].reponse\n          break\n        case 1:\n          texte = `${enonces[1].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[1].correction}`\n          };\n          reponse = enonces[1].reponse\n          break\n        case 2:\n          texte = `${enonces[2].enonce}`\n          if (this.beta) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[2].correction}`\n          };\n          reponse = enonces[2].reponse\n          break\n      };\n      if (context.isHtml && this.interactif) texte += ajouteChampTexte(this, i, { inline: false })\n      setReponse(this, i, reponse)\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte\n        this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: '' }]\n        this.autoCorrection[i].reponse = { valeur: reponse, param: { digits: nombreDeChiffresDansLaPartieEntiere(reponse) + nombreDeChiffresDansLaPartieDecimale(reponse) + 2, decimals: nombreDeChiffresDansLaPartieDecimale(reponse) + 1, signe: false, exposantNbChiffres: 0 } }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n};\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","interactifReady","interactifType","amcType","titre","ProduitDeDecimauxAPartirProduitConnu","typesDeQuestionsDisponibles","Exercice","this","beta","sup","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","reponse","shuffle","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","autoCorrection","situations","d1","randint","u1","d2","u2","p1","p2","enonces","push","enonce","calcul","texNombre","question","correction","texNombrec","interactif","ajouteChampTexte","inline","setReponse","propositions","statut","valeur","param","digits","nombreDeChiffresDansLaPartieEntiere","nombreDeChiffresDansLaPartieDecimale","decimals","signe","exposantNbChiffres","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}