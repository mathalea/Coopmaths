{"version":3,"file":"js/66629.d8b53b510fbe162a4916.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/6e/can6N10.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { calcul, randint, texNombrec, choice } from '../../../modules/outils'\nimport Exercice from '../../Exercice'\nexport const titre = 'Passer de la fraction décimale à l’écriture décimale'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\nexport const dateDePublication = '15/12/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/*!\n * @author Gilles Mora\n */\nexport default function FractionDecimaleEcritureDecimale1 () {\n  Exercice.call(this)\n  this.nbQuestions = 1\n  this.tailleDiaporama = 1\n  this.typeExercice = 'simple'\n  this.formatChampTexte = 'largeur15 inline'\n  this.nouvelleVersion = function () {\n    let a, b, c, u\n    switch (choice(['a', 'b', 'c', 'd', 'e'])) { //,\n      case 'a':\n        a = randint(1, 9)\n        b = randint(1, 9)\n        c = randint(1, 9)\n\n        this.reponse = calcul(a * 0.1 + b * 0.01 + c * 0.001)\n        if (choice([true, false])) {\n          this.question = `Ecrire sous forme décimale : $\\\\dfrac{${b}}{100}+\\\\dfrac{${a}}{10}+\\\\dfrac{${c}}{1000}$ `\n          this.correction = `$\\\\dfrac{${b}}{100}+\\\\dfrac{${a}}{10}+\\\\dfrac{${c}}{1000}=${texNombrec(b / 100)}+${texNombrec(a / 10)}+${texNombrec(c / 1000)}=${texNombrec(a / 10 + b / 100 + c / 1000)}$`\n        } else {\n          this.question = `Ecrire sous forme décimale : $\\\\dfrac{${c}}{1000}+\\\\dfrac{${a}}{10}+\\\\dfrac{${b}}{100}$ `\n          this.correction = `$\\\\dfrac{${c}}{1000}+\\\\dfrac{${a}}{10}+\\\\dfrac{${b}}{100}=${texNombrec(c / 1000)}+${texNombrec(a / 10)}+${texNombrec(b / 100)}=${texNombrec(a / 10 + b / 100 + c / 1000)}$`\n        }\n        break\n      case 'b':\n        u = randint(1, 99)\n        a = randint(1, 9, [20, 30, 40, 50])\n        c = randint(1, 9)\n        this.reponse = calcul(u + a * 0.1 + c * 0.001)\n        if (choice([true, false])) {\n          this.question = `Ecrire sous forme décimale : $${u}+\\\\dfrac{${a}}{10}+\\\\dfrac{${c}}{1000}$ `\n          this.correction = `$${u}+\\\\dfrac{${a}}{10}+\\\\dfrac{${c}}{1000}=${u}+${texNombrec(a / 10)}+${texNombrec(c / 1000)}=${texNombrec(u + a / 10 + c / 1000)}$`\n        } else {\n          this.question = `Ecrire sous forme décimale : $${u}+\\\\dfrac{${c}}{1000}+\\\\dfrac{${a}}{10}$ `\n          this.correction = `$${u}+\\\\dfrac{${c}}{1000}+\\\\dfrac{${a}}{10}=${u}+${texNombrec(c / 1000)}+${texNombrec(a / 10)}=${texNombrec(u + a / 10 + c / 1000)}$\n         `\n        }\n        break\n      case 'c':\n        u = randint(1, 99)\n        b = randint(1, 9)\n        c = randint(1, 9)\n        this.reponse = calcul(u + b * 0.01 + c * 0.001)\n        if (choice([true, false])) {\n          this.question = `Ecrire sous forme décimale : $${u}+\\\\dfrac{${b}}{100}+\\\\dfrac{${c}}{1000}$ `\n          this.correction = `$${u}+\\\\dfrac{${b}}{100}+\\\\dfrac{${c}}{1000}=${u}+${texNombrec(b / 100)}+${texNombrec(c / 1000)}=${texNombrec(u + b / 100 + c / 1000)}$`\n        } else {\n          this.question = `Ecrire sous forme décimale : $${u}+\\\\dfrac{${c}}{1000}+\\\\dfrac{${b}}{100}$ `\n          this.correction = `$${u}+\\\\dfrac{${c}}{1000}+\\\\dfrac{${b}}{100}=${u}+${texNombrec(c / 1000)}+${texNombrec(b / 100)}=${texNombrec(u + b / 100 + c / 1000)}$`\n        }\n        break\n      case 'd':\n        a = randint(1, 9)\n        c = randint(1, 9)\n        this.reponse = calcul(a * 0.1 + c * 0.001)\n        if (choice([true, false])) {\n          this.question = `Ecrire sous forme décimale : $\\\\dfrac{${a}}{10}+\\\\dfrac{${c}}{1000}$ `\n          this.correction = `$\\\\dfrac{${a}}{10}+\\\\dfrac{${c}}{1000}=${texNombrec(a / 10)}+${texNombrec(c / 1000)}=${texNombrec(a / 10 + c / 1000)}$`\n        } else {\n          this.question = `Ecrire sous forme décimale : $\\\\dfrac{${c}}{1000}+\\\\dfrac{${a}}{10}$ `\n          this.correction = `$\\\\dfrac{${c}}{1000}+\\\\dfrac{${a}}{10}=${texNombrec(c / 1000)}+${texNombrec(a / 10)}=${texNombrec(a / 10 + c / 1000)}$`\n        }\n        break\n      case 'e':\n        u = randint(1, 99)\n        b = randint(11, 99)\n        c = randint(1, 9)\n        this.reponse = calcul(u + b * 0.01 + c * 0.001)\n        if (choice([true, false])) {\n          this.question = `Ecrire sous forme décimale : $${u}+\\\\dfrac{${b}}{100}+\\\\dfrac{${c}}{1000}$ `\n          this.correction = `$${u}+\\\\dfrac{${b}}{100}+\\\\dfrac{${c}}{1000}=${u}+${texNombrec(b / 100)}+${texNombrec(c / 1000)}=${texNombrec(u + b / 100 + c / 1000)}$`\n        } else {\n          this.question = `Ecrire sous forme décimale : $${u}+\\\\dfrac{${c}}{1000}+\\\\dfrac{${b}}{100}$ `\n          this.correction = `$${u}+\\\\dfrac{${c}}{1000}+\\\\dfrac{${b}}{100}=${u}+${texNombrec(c / 1000)}+${texNombrec(b / 100)}=${texNombrec(u + b / 100 + c / 1000)}$`\n        }\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","dateDePublication","FractionDecimaleEcritureDecimale1","typeExercice","formatChampTexte","a","b","c","u","choice","randint","reponse","calcul","question","correction","texNombrec"],"sourceRoot":""}