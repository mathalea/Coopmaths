{"version":3,"file":"js/77391.96e99c82aaaffd83bf43.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/c3/c3C3CaN.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListesSansChangerOrdre, randint, calcul, texNombrec, choice, texNombre, texPrix, range1, prenom, personne, miseEnEvidence } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { afficheCoteSegment, codeSegments, homothetie, mathalea2d, point, polygoneRegulier, segment, texteSurSegment } from '../../modules/2d.js'\nexport const titre = 'Course aux nombres CM1'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\n/**\n * Ensemble de questions pour course aux nombres\n * @author Jean-Claude Lhote\n * Référence\n*/\nexport default function CourseAuxNombresCM (numeroExercice) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 30\n  if (this.interactif) {\n    this.consigne = \"Saisir la réponse numérique uniquement sauf si l'unité est explicitement demandée.\"\n  } else {\n    this.consigne = ''\n  }\n\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let a, b, c, d, resultat, objets, A, B, C\n    let questions = []\n    if (!this.sup) {\n      // Si aucune question n'est sélectionnée\n      questions = combinaisonListesSansChangerOrdre(range1(30), this.nbQuestions)\n    } else {\n      if (typeof this.sup === 'number') {\n        // Si c'est un nombre c'est qu'il y a qu'une seule question\n        questions[0] = this.sup\n        this.nbQuestions = 1\n      } else {\n        questions = this.sup.split('-') // Sinon on créé un tableau à partir des valeurs séparées par des -\n        this.nbQuestions = questions.length\n      }\n    }\n    for (let i = 0; i < questions.length; i++) {\n      questions[i] = parseInt(questions[i]) - 1\n    }\n    const listeIndex = combinaisonListesSansChangerOrdre(questions, this.nbQuestions)\n    const fruits2 = [\n      ['pêches', 4.5, 10, 30],\n      ['Noix', 5.2, 4, 13],\n      ['cerises', 6.4, 11, 20],\n      ['pommes', 2.7, 20, 40],\n      ['framboises', 10.5, 1, 5],\n      ['fraises', 7.5, 5, 10],\n      ['citrons', 1.8, 15, 30],\n      ['bananes', 1.7, 15, 25]\n    ]\n    const typeQuestionsDisponibles = [ // Les dix premières sont identiques dans le fichier betaCaNCM2\n      'q1', // Somme d'entiers\n      'q2', // Différence d'entiers\n      'q3', // Somme d'entiers avec retenue\n      'q4', // Différence d'entiers avec retenue\n      'q5', // Décomposition\n      'q6', // Division d'entiers\n      'q7', // Somme décimal et entier\n      'q8', // Somme de décimaux\n      'q9', // Différence de décimaux\n      'q10', // Différence décimaux\n      'q11', // Division d'entiers\n      'q12', // Addition d'entiers\n      'q13', // Différence d'entiers\n      'q14', // Produit d'entiers\n      'q15', // Produit décimal entier\n      'q16', // Ajout d'un décimal à un entier\n      'q17', // Fait numérique table de x\n      'q18', // Multiplication par 4\n      'q19', // Différence de décimaux\n      'q20', // Somme de décimaux\n      'q21', // Multiple de 8\n      'q22', // Multiplication entier et décimal\n      'q23', // Multiplier par 20\n      'q24', // Proportionnalité\n      'q25', // Quotient par 4\n      'q26', // Triple d'entier\n      'q27', // Soustraction entiers mesures\n      'q28', // Durée\n      'q29', // Proportionnalité\n      'q30' // Addition d'entiers mesures\n    ]\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      // texNombre(n) permet d'écrire un nombre avec le bon séparateur décimal\n      // calcul(expression) permet d'éviter les erreurs de javascript avec les approximations décimales\n      // texNombrec(expression) fait les deux choses ci-dessus.\n      switch (typeQuestionsDisponibles[listeIndex[i]]) { // Suivant le type de question, le contenu sera différent\n        case 'q1': // somme d'entiers à deux chiffres sans retenue\n          a = randint(1, 3) * 10 + randint(1, 5)\n          b = randint(1, 5) * 10 + randint(1, 4)\n          texte = `$${a}+${b}$`\n          texteCorr = `$${a}+${b}=${a + b}$`\n          setReponse(this, i, a + b, { formatInteractif: 'calcul' })\n          break\n        case 'q2': // différence d'entiers sans retenue\n          a = randint(1, 3) * 10 + randint(1, 5)\n          b = randint(1, 5) * 10 + randint(1, 4)\n          texte = `$${a + b}-${a}$`\n          texteCorr = `$${a + b}-${a}=${b}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q3': // somme d'entiers à deux chiffres avec retenue\n          a = randint(1, 3) * 10 + randint(5, 9)\n          b = randint(1, 5) * 10 + randint(11 - a % 10, 9)\n          texte = `$${a}+${b}$`\n          texteCorr = `$${a}+${b}=${a + b}$`\n          setReponse(this, i, a + b, { formatInteractif: 'calcul' })\n          break\n        case 'q4': // difference avec retenue\n          a = randint(1, 3) * 10 + randint(5, 9)\n          b = randint(1, 5) * 10 + randint(11 - a % 10, 9)\n          texte = `$${a + b}-${a}$`\n          texteCorr = `$${a + b}-${a}=${b}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q5': // Décomposition\n          a = randint(1, 3)\n          b = randint(1, 9, a)\n          c = randint(1, 9, [a, b])\n          resultat = calcul(a * 1000 + b * 10 + c * 100)\n          texte = `$${texNombre(a)}\\\\times 1000 + ${texNombre(b)}\\\\times 10 + ${texNombre(c)}\\\\times 100$`\n          texteCorr = `$${texNombre(a)}\\\\times 1000 + ${texNombre(b)}\\\\times 10 + ${texNombre(c)}\\\\times 100 =${texNombre(resultat)}$`\n          setReponse(this, i, resultat, { formatInteractif: 'calcul' })\n          break\n        case 'q6': // Division d'entiers\n          a = randint(2, 9)\n          b = randint(3, 9)\n          texte = `$${a * b}\\\\div${a}$`\n          texteCorr = `$${a * b}\\\\div${a}=${b}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q7': // Somme entier et décimal\n          a = calcul(randint(1, 5) + randint(1, 5) / 10)\n          b = randint(1, 4)\n          texte = `$${texNombre(a)}+${b}$`\n          texteCorr = `$${texNombre(a)}+${b}=${texNombrec(a + b)}$`\n          setReponse(this, i, calcul(a + b), { formatInteractif: 'calcul' })\n          break\n        case 'q8': // Somme décimaux\n          a = calcul(randint(1, 5) + randint(1, 5) / 10)\n          b = calcul(randint(1, 4) + randint(1, 4) / 10 + randint(1, 9) / 100)\n          texte = `$${texNombre(a)}+${texNombre(b)}$`\n          texteCorr = `$${texNombre(a)}+${texNombre(b)}=${texNombrec(a + b)}$`\n          setReponse(this, i, calcul(a + b), { formatInteractif: 'calcul' })\n          break\n        case 'q9': // Différence décimaux\n          a = calcul(randint(1, 5) + randint(1, 5) / 10)\n          b = calcul(randint(1, 4) + randint(1, 4) / 10 + randint(1, 9) / 100)\n          texte = `$${texNombrec(a + b)}-${texNombre(a)}$`\n          texteCorr = `$${texNombrec(a + b)}-${texNombre(a)}=${texNombre(b)}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q10': // Différence décimaux avec retenue\n          a = calcul(randint(1, 5) + randint(5, 9) / 10)\n          b = calcul(randint(1, 4) + randint(5, 9) / 10)\n          texte = `$${texNombrec(a + b)}-${texNombre(a)}$`\n          texteCorr = `$${texNombrec(a + b)}-${texNombre(a)}=${texNombre(b)}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q11' : // Divisions d'entiers\n          a = choice([2, 3, 4, 5])\n          b = randint(3, 9)\n          c = prenom()\n          texte = `J'ai ${calcul(a * b)} ans. Je suis ${a} fois plus âgé que ${c}.<br>Quel âge a ${c} ?`\n          texteCorr = `L'âge de ${c} est : $${calcul(a * b)} \\\\div ${a}=${b}$ ans.`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q12' : // Addition d'entiers\n          a = randint(1, 2) * 10 + randint(1, 9)\n          b = randint(1, 2) * 10 + randint(1, 5)\n          c = randint(1, 2) * 10 + randint(1, 9)\n          d = personne()\n          texte = `${d.prenom} participe à une course par étapes. La première étape fait ${a} km, la deuxième fait ${b} km et la dernière fait ${c} km.<br>Combien de kilomètres ${d.prenom} a-t-${d.pronom} parcourus ?`\n          texteCorr = `${d.prenom} a parcouru : ${a} + ${b} + ${c} = ${a + b + c} km`\n          setReponse(this, i, calcul(a + b + c), { formatInteractif: 'calcul' })\n          break\n        case 'q13' : // Différence d'entiers\n          a = randint(11, 19)\n          b = randint(3, 8)\n          c = calcul(a - b)\n          d = personne()\n          switch (randint(1, 2)) {\n            case 1:\n              texte = `${d.prenom} a ${a} ans. ${d.pronom} a ${b} ans de plus que son frère.<br>Quel âge a son frère ?`\n              texteCorr = `Le frère de ${d.prenom} a : ${a} - ${b} = ${a - b} ans.`\n              break\n            case 2:\n              texte = `${d.prenom} a ${a} ans. Sa soeur a ${b} ans.<br>Quelle est leur différence d'âge ?`\n              texteCorr = `La différence d'âge entre ${d.prenom} et sa soeur est : ${a}-${b}=${a - b} ans.`\n              break\n          }\n          setReponse(this, i, calcul(a - b), { formatInteractif: 'calcul' })\n          break\n        case 'q14' : // Produit d'entiers\n          a = randint(2, 6)\n          b = randint(7, 12)\n          d = personne()\n          switch (randint(1, 2)) {\n            case 1:\n              texte = `${d.prenom} possède ${a} lots de ${b} ${choice(['crayons', 'cartes', 'stylos', 'livres'])}. Combien en a-t-${d.pronom} ?`\n              texteCorr = `${d.prenom} en possède : $${a} \\\\times ${b}=${calcul(a * b)}$`\n              break\n            case 2:\n              texte = `${d.prenom} a couru ${a} séquences de ${b} minutes. Combien de minutes a-t-${d.pronom} couru en tout ?`\n              texteCorr = `${d.prenom} a couru : $${a} \\\\times ${b}=${calcul(a * b)}$ minutes.`\n              break\n          }\n          setReponse(this, i, calcul(a * b), { formatInteractif: 'calcul' })\n          break\n        case 'q15': // Produit décimal entier\n          a = calcul(randint(1, 5) + randint(1, 5) / 10)\n          b = randint(2, 5)\n          c = choice(fruits2)\n          d = personne()\n          texte = `Les ${c[0]} sont vendus ${texPrix(c[1])} € par kilogramme. ${d.prenom} en achète ${b} kg. Combien va-t-${d.pronom} payer ?`\n          texteCorr = `${d.prenom} devra payer $${b}*${texPrix(c[1])}=${texPrix(c[1] * b)}$ €.`\n          setReponse(this, i, calcul(b * c[1]), { formatInteractif: 'calcul' })\n          break\n        case 'q16': // ajout d'un décimal à un entier\n          a = calcul(randint(1, 5) + randint(1, 5) / 10)\n          b = randint(1, 15)\n          switch (randint(1, 3)) {\n            case 1:\n              texte = `Combien font ${b} de plus que ${texNombre(a)} ?`\n              texteCorr = `$${texNombre(a)}+${b}=${texNombrec(a + b)}$`\n              break\n            case 2:\n              texte = `$\\\\ldots - ${texNombre(a)}=${b}$`\n              texteCorr = `$${miseEnEvidence(texNombrec(a + b))} - ${texNombre(a)}=${b}$`\n              break\n            case 3:\n              texte = `$\\\\ldots - ${b}=${texNombre(a)}$`\n              texteCorr = `$${miseEnEvidence(texNombrec(a + b))} - ${b}=${texNombre(a)}$`\n              break\n          }\n          setReponse(this, i, calcul(a + b), { formatInteractif: 'calcul' })\n          break\n        case 'q17' : // fait numérique table de multiplication\n          a = randint(2, 9)\n          b = randint(5, 9)\n          switch (randint(1, 3)) {\n            case 1:\n              texte = `$${a} \\\\times ${b}$`\n              texteCorr = `$${a} \\\\times ${b}=${calcul(a * b)}$`\n              setReponse(this, i, calcul(a * b), { formatInteractif: 'calcul' })\n              break\n            case 2:\n              texte = `$${a} \\\\times \\\\ldots = ${calcul(a * b)}$`\n              texteCorr = `$${a} \\\\times ${miseEnEvidence(b)}=${calcul(a * b)}$`\n              setReponse(this, i, b, { formatInteractif: 'calcul' })\n              break\n            case 3:\n              texte = `$\\\\ldots \\\\times ${b}= ${calcul(a * b)}$`\n              texteCorr = `$${miseEnEvidence(a)} \\\\times ${b}=${calcul(a * b)}$`\n              setReponse(this, i, a, { formatInteractif: 'calcul' })\n              break\n          }\n          break\n        case 'q18' : // fait numérique multiplication par 4\n          a = randint(6, 19)\n          switch (randint(1, 3)) {\n            case 1:\n              texte = choice([`$${a} \\\\times 4$`, `$4 \\\\times ${a}$`])\n              break\n            case 2:\n              texte = `Quel est le périmètre d'un carré de côté ${a} ?`\n              texteCorr = `$${a} \\\\times 4=${calcul(a * 4)}$`\n              break\n            case 3:\n              texte = `Le double du double de ${a}`\n              break\n          }\n          texteCorr = `$${a} \\\\times 4=${calcul(a * 4)}$`\n          setReponse(this, i, calcul(a * 4), { formatInteractif: 'calcul' })\n          break\n        case 'q19': // différences de décimaux\n          a = calcul(randint(2, 5) + randint(1, 5) / 10)\n          b = calcul(randint(2, 5) + randint(1, 5) / 10)\n          c = calcul(a + b)\n          switch (randint(1, 3)) {\n            case 1:\n              texte = `On a coupé ${texNombre(a)} cm d'une ficelle qui en faisait ${texNombre(c)}.<br>Combien de centimètres en reste-t-il ?`\n              texteCorr = `$${texNombre(c)}-${texNombre(a)}=${texNombre(b)}$`\n              break\n            case 2:\n              texte = `$\\\\ldots + ${texNombre(a)}=${texNombre(c)}$`\n              texteCorr = `$${miseEnEvidence(texNombrec(b))} + ${texNombre(a)}=${texNombre(c)}$`\n              break\n            case 3:\n              A = point(0, 0)\n              B = point(5, 0)\n              C = homothetie(B, A, a / c)\n              objets = []\n              objets[0] = segment(A, B)\n              objets[0].styleExtremites = '|-|'\n              objets[1] = afficheCoteSegment(objets[0], texNombre(c), 0.5, 'green')\n              objets[2] = segment(A, C)\n              objets[2].styleExtremites = '|-|'\n              objets[3] = afficheCoteSegment(objets[2], texNombre(a), -1, 'blue')\n              objets[4] = afficheCoteSegment(segment(C, B), '?', -1, 'red')\n              texte = mathalea2d({ xmin: -0.1, xmax: 5.1, ymin: -1.5, ymax: 1.5, pixelsParCm: 20, scale: 1 }, objets)\n              texteCorr = `$${miseEnEvidence(texNombre(c))} - ${texNombre(a)}=${texNombre(b)}$`\n              break\n          }\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q20': // somme de décimaux\n          a = calcul(randint(2, 5) + randint(1, 5) / 10)\n          b = calcul(randint(2, 5) + randint(1, 5) / 10)\n          c = calcul(a + b)\n          switch (randint(1, 3)) {\n            case 1:\n              texte = `On a soudé ensemble une barre de ${texNombre(a)} m et une autre de ${texNombre(b)} m.<br>Combien de mètres fait l'assemblage ?`\n              texteCorr = `$${texNombre(a)}+${texNombre(b)}=${texNombre(c)}$`\n              break\n            case 2:\n              texte = `$\\\\ldots - ${texNombre(a)}=${texNombre(b)}$`\n              texteCorr = `$${miseEnEvidence(texNombrec(c))} - ${texNombre(a)}=${texNombre(b)}$`\n              break\n            case 3:\n              A = point(0, 0)\n              B = point(5, 0)\n              C = homothetie(B, A, a / c)\n              objets = []\n              objets[0] = segment(A, B)\n              objets[0].styleExtremites = '|-|'\n              objets[1] = afficheCoteSegment(objets[0], '?', 0.5, 'red')\n              objets[2] = segment(A, C)\n              objets[2].styleExtremites = '|-|'\n              objets[3] = afficheCoteSegment(objets[2], texNombre(a), -1, 'blue')\n              objets[4] = afficheCoteSegment(segment(C, B), texNombre(b), -1, 'green')\n              texte = mathalea2d({ xmin: -0.1, xmax: 5.1, ymin: -1.5, ymax: 1.5, pixelsParCm: 20, scale: 1 }, objets)\n              texteCorr = `$${miseEnEvidence(texNombre(a))} + ${texNombre(b)}=${texNombre(c)}$`\n              break\n          }\n          setReponse(this, i, c, { formatInteractif: 'calcul' })\n          break\n        case 'q21' : // fait numérique multiplication par 8\n          a = randint(4, 15)\n          switch (randint(1, 3)) {\n            case 1:\n              texte = choice([`$${a} \\\\times 8$`, `$8 \\\\times ${a}$`])\n              texteCorr = `$${a} \\\\times 8=${calcul(a * 8)}$`\n\n              setReponse(this, i, calcul(a * 8), { formatInteractif: 'calcul' })\n              break\n            case 2:\n              texte = `$\\\\ldots \\\\times 8=${calcul(a * 8)}$`\n              texteCorr = `$${miseEnEvidence(a)} \\\\times 8=${calcul(a * 8)}$`\n              setReponse(this, i, a, { formatInteractif: 'calcul' })\n              break\n            case 3:\n              texte = `Le quadruple du double de ${a}`\n              texteCorr = `$${a} \\\\times 8=${calcul(a * 8)}$`\n              setReponse(this, i, calcul(a * 8), { formatInteractif: 'calcul' })\n              break\n          }\n          break\n        case 'q22': // Produit décimal entier\n          switch (randint(1, 3)) {\n            case 1:\n              a = calcul(randint(1, 5) + randint(1, 5) / 10)\n              b = randint(3, 6)\n              objets = []\n              if (b < 5) {\n                A = point(-2, 0)\n              } else {\n                A = point(0, 0)\n              }\n              B = point(2, 0)\n              C = polygoneRegulier(A, B, b)\n              objets[0] = C\n              objets[1] = texteSurSegment(`${texNombre(a)} cm`, B, A)\n              objets[2] = codeSegments('//', 'red', C.listePoints)\n              texte = 'Quel est le périmètre de ce polygone ?<br>'\n              texte += mathalea2d({ xmin: -2.5, xmax: 3, ymin: -1, ymax: 5, pixelsParCm: 20, scale: 0.8 }, objets)\n              texteCorr = `Le périmètre mesure : $${b} \\\\times ${texNombre(a)}=${calcul(a * b)}$.`\n              break\n            case 2:\n              a = calcul(randint(4, 5) + choice([0.1, 0.25, 0.5]))\n              b = choice([2, 4, 8])\n              d = personne()\n              texte = `${d.prenom} a acheté ${b} ${choice(['livres', 'gâteaux', 'jouets'])} à ${texPrix(a)} € pièce.<br>Combien a-t-${d.pronom} dépensé ?`\n              texteCorr += `${d.prenom} a dépensé : $${b} \\\\times ${texNombre(a)} = ${texPrix(calcul(a * b))} $`\n              break\n            case 3:\n              a = calcul(randint(1, 9) + randint(1, 5) / 10)\n              b = randint(2, 9)\n              d = personne()\n              texte = `${d.prenom} a vendu ${b} ${choice(['tableaux', 'photos', 'poteries'])} à ${texPrix(a)} € pièce.<br>Quelle somme d'argent a-t-${d.pronom} obtenu ?`\n              texteCorr += `${d.prenom} a obtenu : $${b} \\\\times ${texNombre(a)} = ${texPrix(calcul(a * b))} $`\n              break\n          }\n          setReponse(this, i, calcul(a * b), { formatInteractif: 'calcul' })\n          break\n        case 'q23' : // multiplication par 20\n          a = calcul(randint(1, 9) + randint(1, 5) / 10)\n          switch (randint(1, 2)) {\n            case 1:\n              texte = choice([`$${texNombre(a)} \\\\times 20$`, `$20 \\\\times ${texNombre(a)}$`])\n              texteCorr = `$${texNombre(a)} \\\\times 20=${texNombrec(a * 20)}$`\n              setReponse(this, i, calcul(a * 20), { formatInteractif: 'calcul' })\n              break\n            case 2:\n              texte = `$\\\\ldots \\\\times 20=${texNombrec(a * 20)}$`\n              texteCorr = `$${miseEnEvidence(a)} \\\\times 20=${texNombrec(a * 20)}$`\n              setReponse(this, i, a, { formatInteractif: 'calcul' })\n              break\n          }\n          break\n        case 'q24': // proportionnalité\n          a = randint(0, 7)\n          b = fruits2[a][1]\n          c = randint(2, 5)\n          d = randint(2, 5)\n          texte = `$${c}$ kg de ${fruits2[a][0]} coûtent $${texNombrec(c * b)}$ €, combien coûtent $${c * d}$ kg de ${fruits2[a][0]} ?`\n          texteCorr = `$${c * d}$ kg de ${fruits2[a][0]} coûtent : $${texNombrec(c * b)} \\\\times ${d} = ${texPrix(c * b * d)}$`\n          setReponse(this, i, calcul(c * d * b), { formatInteractif: 'calcul' })\n          break\n        case 'q25' : // quotient par 4\n          a = randint(4, 15)\n          switch (randint(1, 3)) {\n            case 1:\n              texte = `$${4 * a} \\\\div 4$`\n              texteCorr = `$${4 * a} \\\\div 4=${a}$`\n              break\n            case 2:\n              texte = `$\\\\ldots \\\\times 4=${4 * a}$`\n              texteCorr = `$${miseEnEvidence(a)} \\\\times 4=${calcul(a * 4)}$`\n              break\n            case 3:\n              texte = `La moitié de la moitié de ${4 * a}`\n              texteCorr = `$${4 * a} \\\\div 4=${a}$`\n              break\n          }\n          setReponse(this, i, a, { formatInteractif: 'calcul' })\n          break\n        case 'q26' : // double d'entiers\n          a = randint(11, 99)\n          switch (randint(1, 3)) {\n            case 1:\n              texte = `Le double de ${a}`\n              texteCorr = `$2 \\\\times ${a} = ${2 * a}$`\n              break\n            case 2:\n              texte = `Le diamètre d'un cercle de ${a} unités de rayon.`\n              texteCorr = `Le diamètre est le double du rayon : $2 \\\\times ${a} = ${2 * a}$`\n              break\n            case 3:\n              texte = choice([`$2 \\\\times ${a}$`, `$${a} \\\\times 2$`])\n              texteCorr = `$2 \\\\times ${a} = ${2 * a}$`\n              break\n          }\n          setReponse(this, i, 2 * a, { formatInteractif: 'calcul' })\n          break\n        case 'q27': // différences d'entiers mesure\n          a = randint(20, 50)\n          b = randint(20, 50)\n          c = calcul(a + b)\n          A = point(0, 0)\n          B = point(5, 0)\n          C = homothetie(B, A, a / c)\n          objets = []\n          objets[0] = segment(A, B)\n          objets[0].styleExtremites = '|-|'\n          objets[1] = afficheCoteSegment(objets[0], c, 0.5, 'green')\n          objets[2] = segment(A, C)\n          objets[2].styleExtremites = '|-|'\n          objets[3] = afficheCoteSegment(objets[2], a, -1, 'blue')\n          objets[4] = afficheCoteSegment(segment(C, B), '?', -1, 'red')\n          texte = mathalea2d({ xmin: -0.1, xmax: 5.1, ymin: -1.5, ymax: 1.5, pixelsParCm: 20, scale: 1 }, objets)\n          texteCorr = `$${miseEnEvidence(c)} - ${a}=${b}$`\n          setReponse(this, i, b, { formatInteractif: 'calcul' })\n          break\n        case 'q28':\n          a = randint(17, 21) // heure pleine de début\n          b = randint(5, 6) * 5 // minutes de début\n          c = randint(17, 23) * 5 // durée en minutes\n          d = a + ((b + c) / 60 >> 0) // heure pleine de fin\n          resultat = calcul((b + c) % 60) // minutes de fin\n          if (resultat !== 0) {\n            texte = `Le film a commencé à ${a} h ${b}. Il s'est terminé à ${d} h ${resultat}.<br> Combien de minutes a-t-il duré ?`\n          } else {\n            texte = `Le film a commencé à ${a} h ${b}. Il s'est terminé à ${d} h.<br> Combien de minutes a-t-il duré ?`\n          }\n          texteCorr = `Il a duré ${calcul(c / 60 >> 0)} h ${c % 60} soit ${c} minutes.`\n          setReponse(this, i, c, { formatInteractif: 'calcul' })\n          break\n        case 'q29': // proportionnalité\n          a = choice([2, 3, 4, 5]) // choix du coefficient\n          b = randint(3, 10) // donnée 1\n          c = randint(2, 10, b) // donnée 2\n          d = choice([['un train électrique', 'il'], ['une voiture électrique', 'elle'], ['un manège', 'il']])\n          texte = `En ${a * b} minutes, ${d[0]} fait ${a * c} tours.<br>En ${b} minutes ${d[1]} fait \\\\ldots tours.`\n          texteCorr = `En ${a} fois moins de temps, ${d[1]} fait ${a} fois moins de tours, soit : $${a * c} \\\\div ${a}=${c}$ tours.`\n          setReponse(this, i, c, { formatInteractif: 'calcul' })\n          break\n        case 'q30': // additions d'entiers mesure\n          a = randint(20, 50)\n          b = randint(20, 50)\n          c = calcul(a + b)\n          A = point(0, 0)\n          B = point(5, 0)\n          C = homothetie(B, A, a / c)\n          objets = []\n          objets[0] = segment(A, B)\n          objets[0].styleExtremites = '|-|'\n          objets[1] = afficheCoteSegment(objets[0], '?', 0.5, 'red')\n          objets[2] = segment(A, C)\n          objets[2].styleExtremites = '|-|'\n          objets[3] = afficheCoteSegment(objets[2], a, -1, 'blue')\n          objets[4] = afficheCoteSegment(segment(C, B), b, -1, 'green')\n          texte = mathalea2d({ xmin: -0.1, xmax: 5.1, ymin: -1.5, ymax: 1.5, pixelsParCm: 20, scale: 1 }, objets)\n          texteCorr = `$${a} + ${b}=${c}$`\n          setReponse(this, i, c, { formatInteractif: 'calcul' })\n          break\n      }\n\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.questionJamaisPosee(i, typeQuestionsDisponibles[listeIndex[i]], a, b, c)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = ['Choix des questions (nombres séparés par des tirets)',\n  `1 : Somme d'entiers\\n\n  2 : Différence d'entiers\\n\n  3 : Somme d'entiers avec retenue\\n\n  4 : Différence d'entiers avec retenue\\n\n  5 : Décomposition\\n\n  6 : Division d'entiers\\n\n  7 : Somme décimal et entier\\n\n  8 : Somme de décimaux\\n\n  9 : Différence de décimaux\\n\n  10 : Différence décimaux\\n\n  11 : Division d'entiers\\n\n  12 : Addition d'entiers\\n\n  13 : Différence d'entiers\\n\n  14 : Produit d'entiers\\n\n  15 : Produit décimal entier\\n\n  16 : Ajout d'un décimal à un entier\\n\n  17 : Fait numérique table de x\\n\n  18 : Multiplication par 4\\n\n  19 : Différence de décimaux\\n\n  20 : Somme de décimaux\\n\n  21 : Multiple de 8\\n\n  22 : Multiplication entier et décimal\\n\n  23 : Multiplier par 20\\n\n  24 : Proportionnalité\\n\n  25 : Quotient par 4\\n\n  26 : Triple d'entier\\n\n  27 : Soustraction entiers mesures\\n\n  28 : Durée\\n\n  29 : Proportionnalité\\n\n  30 : Addition d'entiers mesures `]\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","CourseAuxNombresCM","a","b","c","d","resultat","objets","A","B","C","questions","sup","split","length","combinaisonListesSansChangerOrdre","range1","parseInt","listeIndex","fruits2","typeQuestionsDisponibles","texte","texteCorr","cpt","randint","setReponse","formatInteractif","calcul","texNombre","texNombrec","choice","prenom","personne","pronom","texPrix","miseEnEvidence","point","homothetie","segment","styleExtremites","afficheCoteSegment","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","polygoneRegulier","texteSurSegment","codeSegments","listePoints","ajouteChampTexteMathLive","listeQuestionsToContenu"],"sourceRoot":""}