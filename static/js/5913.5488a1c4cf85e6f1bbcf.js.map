{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C11.js","webpack://mathalea/./src/js/exercices/c3/c3C11.js"],"names":["amcReady","amcType","titre","Divisions_euclidiennes","Exercice","this","consigne","spacing","sortieHtml","spacingCorr","nbQuestions","sup","listePackages","nouvelleVersion","type_de_questions_disponibles","type_de_questions","qcm","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","q","r","i","cpt","randint","choice","texNombre","Operation","operande1","operande2","type","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","Division_cycle3"],"mappings":"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","file":"js/5913.5488a1c4cf85e6f1bbcf.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,texNombre} from '../../modules/outils.js'\nimport Operation from '../../modules/operations.js';\nexport const amcReady = true\nexport const amcType = 3 // type de question AMC\n\nexport const titre = 'Divisions euclidiennes'\n\n/**\n * Poser et effectuer les divisions euclidiennes suivantes puis donner l'égalité fondamentale correspondante.\n *\n * Niveau de difficulté 1 :\n * * division par 2, 3 , 4 ou 5\n * * division par 6 à 9\n * * un 0 dans le quotient\n *\n * Niveau de difficulté 2 :\n * * division par 11, 12, 15, 25\n * * division par 13,14,21,22,23 ou 24 et un 0 dans le quotient\n * * division par un multiple de 10 et un 0 dans le quotient\n * @Auteur Rémi Angot\n * Référence 6C11\n */\nexport default function Divisions_euclidiennes() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne =\n    \"Poser et effectuer les divisions euclidiennes suivantes puis donner l'égalité fondamentale correspondante.\";\n  this.spacing = 2;\n  sortieHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1); //Important sinon opidiv n'est pas joli\n  this.nbQuestions = 4;\n  this.sup = 1;\n  this.listePackages = \"xlop\";\n\n  this.nouvelleVersion = function () {\n   if (this.sup<2) {\n     this.qcm=['6C11',[],'division euclidienne',3,{}]\n   }\n   else {\n      this.qcm=['6C21',[],'division euclidienne niveau 2',3,{}]\n   }\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let type_de_questions_disponibles,type_de_questions\n    if (this.sup == 0) type_de_questions_disponibles = [1, 1, 1, 1]\n    else if (this.sup == 1) type_de_questions_disponibles = [1, 2, 2, 3]\n    else if (this.sup == 2) type_de_questions_disponibles = [4, 4, 5, 6];\n    let listeTypeDeQuestions = combinaisonListes(\n      type_de_questions_disponibles,\n      this.nbQuestions\n    ); // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0, a, b, q, r;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      type_de_questions = listeTypeDeQuestions[i];\n      switch (type_de_questions) {\n        case 1: // division par 2, 3 , 4 ou 5\n          q = randint(2, 5) * 100 + randint(2, 5) * 10 + randint(2, 5);\n          b = randint(2, 5);\n          break;\n        case 2: // division par 6 à 9\n          q = randint(5, 9) * 100 + randint(2, 5) * 10 + randint(5, 9);\n          b = randint(6, 9);\n          break;\n        case 3: // un 0 dans le quotient\n          if (randint(1, 2) == 1) {\n            q = randint(2, 9) * 1000 + randint(2, 9) * 100 + randint(2, 9);\n          } else {\n            q = randint(2, 9) * 1000 + randint(2, 9) * 10 + randint(2, 9);\n          }\n          b = randint(7, 9);\n          break;\n        case 4: // division par 11, 12, 15, 25\n          q = randint(1, 5) * 100 + randint(1, 5) * 10 + randint(1, 5);\n          b = choice([11, 12, 15, 25]);\n          break;\n        case 5: // division par 13,14,21,22,23 ou 24 et un 0 dans le quotient\n          q = randint(1, 5) * 1000 + randint(6, 9) * 100 + randint(1, 5);\n          b = choice([11, 12, 13, 14, 21, 22, 23, 24]);\n          break;\n        case 6: // division par un multiple de 10 et un 0 dans le quotient\n          q = randint(6, 9) * 1000 + randint(6, 9) * 10 + randint(1, 5);\n          b = randint(2, 9) * 10;\n          break;\n      }\n      r = randint(0, b - 1); //reste inférieur au diviseur\n      a = b * q + r;\n      texte = `$${texNombre(a)}\\\\div${b}$`;\n      if (r == 0) {\n        texteCorr = `${Operation({operande1:a,operande2:b,type:'divisionE'})}$${texNombre(a)}\\\\div${b}=${q}$`;\n      } else {\n        texteCorr = `${Operation({operande1:a,operande2:b,type:'divisionE'})}$${texNombre(a)}=${b}\\\\times${q}+${r}$`;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        /***************** AMC Open ************************/\n        this.qcm[1].push([texte,[texteCorr],[4]])    // [question,[reponse],[nb_lignes_cadre]]\n        /*********************************************/\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    2,\n    \"1 : Diviseur inférieur à 10\\n2: Diviseur à 2 chiffres\",\n  ];\n}\n\n","import Divisions_euclidiennes from '../6e/6C11.js'\nexport const titre = 'Divisions euclidiennes'\n\n/**\n * Lire des nombres déciamux sur une portion de droite graduée\n * Une question demande la forme décimale, une autre, la partie entière plus la fraction décimale, et une troisième demande une seule fraction décimale.\n * ref 6N23-2\n *\n * @Auteur Jean-Claude Lhote\n */\nexport default function Division_cycle3() {\n    Divisions_euclidiennes.call(this);\n  this.titre = titre;\n  this.sup = 0;\n}\n"],"sourceRoot":""}