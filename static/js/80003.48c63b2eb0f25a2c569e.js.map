{"version":3,"file":"js/80003.48c63b2eb0f25a2c569e.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N50-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { randint, texNombrec, miseEnEvidence, listeQuestionsToContenu, combinaisonListes, sp, rienSi1, texNombre, texFractionReduite, reduireAxPlusB } from '../../modules/outils.js'\nimport { texteSurSegment, codeSegments, codageAngleDroit, segmentAvecExtremites, milieu, labelPoint, point, segment, texteParPosition, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Modéliser une situation géométrique à l\\'aide d\\'une équation'\nexport const dateDePublication = '16/12/2021'\n/**\n * Description didactique de l'exercice\n * @author Gilles Mora\n * Référence\n */\nexport default function modeliserEquationsGeometrie () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeQuestionsDisponibles = ['typeE1', 'typeE2', 'typeE3', 'typeE4', 'typeE5', 'typeE6', 'typeE7', 'typeE8'] //\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, a, b, c, d, e, A, B, C, D, E, M, N, P, H, F, K, L, objets, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      objets = []\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'typeE1':\n          a = randint(1, 10)// valeur ajoutée\n          d = randint(1, 7)// largeur\n          b = randint(4 * d + 2 * a + 1, 50)// périmètre\n          c = b - 2 * a - 2 * d\n          A = point(0, 0, 'A', 'below')\n          B = point(10, 0, 'B', 'below')\n          C = point(10, 6, 'C')\n          D = point(0, 6, 'D')\n\n          objets.push(segment(A, B), segment(B, C), segment(D, A), segment(C, D), labelPoint(A, B, C, D))\n          objets.push(texteParPosition(`x+${texNombrec(a)}`, milieu(C, D).x + 0, milieu(C, D).y + 0.7, 'milieu', 'black', 1, 'middle', true),\n            texteParPosition(`${texNombrec(d)}`, milieu(A, D).x - 0.5, milieu(A, D).y, 'milieu', 'black', 1, 'middle', true))\n\n          texte = ` Un rectangle a pour largeur $${d}$ cm et pour longueur $x$ cm.<br>\n            En ajoutant $${a}$ cm à la longueur de ce rectangle, on obtient un nouveau rectangle dont le périmètre est $${b}$ cm.<br>\n             Quelle est la longueur $x$ du rectangle initial ?<br>\n              `\n          texteCorr = ' On réalise une petite figure à main levée pour visualiser la situation :<br>'\n          texteCorr += mathalea2d({ xmin: -1, ymin: -1, xmax: 12, ymax: 8, pixelsParCm: 20, mainlevee: true, amplitude: 0.5, scale: 0.7 }, objets)\n          texteCorr += `<br>Le périmètre du rectangle obtenu est donnée par la formule : $2\\\\times (\\\\ell+L)$ avec $\\\\ell$ la largeur du rectangle et $L$ sa longueur. <br>\n                  Comme $\\\\ell=${d}$ et $L=x+${a}$, le périmètre est donné en fonction de $x$ par :  $ 2(${d}+x+${a})=2(x+${a + d})=2x+${2 * a + 2 * d}$.<br>\n       Puisque le périmètre du rectangle est $${b}$ cm, on cherche $x$ tel que :   $2x+${2 * a + 2 * d}=${b}$.<br>\n       $\\\\begin{aligned}\n       2x+${2 * a + 2 * d}&=${b}\\\\\\\\\n       2x+${2 * a + 2 * d}${miseEnEvidence(-2 * a - 2 * d)}&=${b}${miseEnEvidence(-2 * a - 2 * d)}\\\\\\\\\n       2x&=${b - 2 * a - 2 * d}\\\\\\\\\n       x&=\\\\dfrac{${b - 2 * a - 2 * d}}{2}\\\\\\\\\n       x&=${texNombrec(c / 2)}\\\\end{aligned}$<br>\n\n       La longueur $x$ du rectangle initial est  $${texNombrec(c / 2)}$ cm.\n       `\n          break\n        case 'typeE2':\n\n          a = randint(1, 10)\n          d = randint(1, 5)// largeur\n          b = randint(d * d + d * a + 1, 100)\n          c = b - 2 * a - 2 * d\n\n          A = point(0, 0, 'A', 'below')\n          B = point(10, 0, 'B', 'below')\n          C = point(10, 6, 'C')\n          D = point(0, 6, 'D')\n\n          objets.push(segment(A, B), segment(B, C), segment(D, A), segment(C, D), labelPoint(A, B, C, D))\n          objets.push(texteParPosition(`x+${texNombrec(a)}`, milieu(C, D).x + 0, milieu(C, D).y + 0.7, 'milieu', 'black', 1, 'middle', true),\n            texteParPosition(`${texNombrec(d)}`, milieu(A, D).x - 0.5, milieu(A, D).y, 'milieu', 'black', 1, 'middle', true))\n          texte = ` Un rectangle a pour largeur $${d}$ cm et pour longueur $x$ cm.<br>\n             En ajoutant $${a}$ cm à la longueur de ce rectangle, on obtient un nouveau rectangle dont l'aire est $${b}$ cm$^2$.<br>\n              Quelle est la longueur $x$ du rectangle initial ? <br>\n              On donnera le résultat sous la forme d'une fraction irréductible ou d'un nombre entier le cas échéant.`\n          texteCorr = ' On réalise une petite figure à main levée pour visualiser la situation :<br>'\n          texteCorr += mathalea2d({ xmin: -1, ymin: -1, xmax: 12, ymax: 8, pixelsParCm: 20, mainlevee: true, amplitude: 0.5, scale: 0.7 }, objets)\n          texteCorr += `L'aire du rectangle obtenu est donnée par la formule : $\\\\ell\\\\times L$ avec $\\\\ell$ la largeur du rectangle et $L$ sa longueur. <br>\n                   Comme $\\\\ell=${d}$ et $L=x+${a}$, l'aire est donnée en fonction de $x$ par :  $ ${rienSi1(d)}\\\\times (x+${a})=${d}x+${d * a}$.<br>\n        Puisque l'aire du rectangle est $${b}$ cm, on cherche $x$ tel que :   $${rienSi1(d)}x+${d * a}=${b}$.<br>\n       $\\\\begin{aligned}\n        ${rienSi1(d)}x+${d * a}&=${b}\\\\\\\\\n        ${rienSi1(d)}x+${d * a}${miseEnEvidence(-d * a)}&=${b}${miseEnEvidence(-d * a)}\\\\\\\\\n                ${rienSi1(d)}x&=${b - d * a}\n        \\\\end{aligned}$<br>`\n          if (d !== 1) {\n            texteCorr += `${sp(18)}$\\\\begin{aligned}\n          \\\\dfrac{${d}x}{${miseEnEvidence(d)}}&=\\\\dfrac{${b - d * a}}{${miseEnEvidence(d)}}\\\\\\\\\n               x&=${texFractionReduite(b - d * a, d)}\\\\end{aligned}$<br>`\n          } else { texteCorr += '' }\n          texteCorr += ` La longueur $x$ du rectangle initial est  $${texFractionReduite(b - d * a, d)}$ cm.\n        `\n          break\n        case 'typeE3':\n          a = randint(1, 10)\n          b = randint(a * a + 1, 100)\n          A = point(0, 0, 'A', 'below')\n          B = point(10, 0, 'B', 'below')\n          C = point(0, 6, 'C')\n          objets.push(segment(A, B), segment(B, C), segment(A, C), labelPoint(A, B, C), codageAngleDroit(B, A, C))\n          objets.push(texteParPosition(`${texNombrec(a)}`, milieu(A, B).x + 0, milieu(A, B).y - 0.5, 'milieu', 'black', 1, 'middle', true),\n            texteParPosition('x', milieu(A, C).x - 0.5, milieu(A, C).y, 'milieu', 'black', 1, 'middle', true))\n          texte = ` Un triangle $ABC$ est rectangle en $A$. On a $AB= ${a}$ cm  et $AC= x$ cm.<br>\n         Sachant que le carré de son hypoténuse est $${b}$, déterminer la valeur exacte de $x$. `\n          texteCorr = ' On réalise une petite figure à main levée pour visualiser la situation :<br>'\n          texteCorr += mathalea2d({ xmin: -1, ymin: -1, xmax: 12, ymax: 8, pixelsParCm: 20, mainlevee: true, amplitude: 0.5, scale: 0.7 }, objets)\n          texteCorr += `Le carré de l'hypoténuse  est égal à $${b}$. On a donc $BC^2=${b}$.<br>\n          Le triangle $ABC$ est rectangle en $A$, d'après le théorème de Pythagore :<br>\n        $\\\\begin{aligned}\n        AB^2+AC^2&=BC^2\\\\\\\\\n        ${a * a}+x^2&=${b}\\\\\\\\\n        ${a * a}+x^2${miseEnEvidence(-a * a)}&=${b} ${miseEnEvidence(-a * a)}\\\\\\\\\n        x^2&=${b - a * a}\\\\\\\\\n        x&=\\\\sqrt{${b - a * a}}${sp(10)}  \\\\text{car}${sp(2)} x>0\n        \\\\end{aligned}$`\n\n          if (b - a * a === 1 || b - a * a === 4 || b - a * a === 9 || b - a * a === 16 || b - a * a === 25 || b - a * a === 36 || b - a * a === 49 || b - a * a === 64 || b - a * a === 81 || b - a * a === 100) {\n            texteCorr += `<br>\n            ${sp(28)} $x=${Math.sqrt(b - a * a)}$<br>\n         La valeur de $x$ cherchée est  $${Math.sqrt(b - a * a)}$.\n         `\n          } else {\n            texteCorr += `<br>\n         La valeur de $x$ cherchée est  $\\\\sqrt{${b - a * a}}$.\n         `\n          }\n          break\n        case 'typeE4':\n\n          b = randint(1, 10)\n          a = randint(b + 1, 15)\n\n          M = point(0, 0, 'M', 'below')\n          N = point(10, 0, 'N', 'below')\n          P = point(0, 6, 'P')\n\n          objets.push(segment(M, N), segment(N, P), segment(M, P), labelPoint(M, N, P), codageAngleDroit(N, M, P))\n          objets.push(texteParPosition(`${texNombrec(a)}`, milieu(M, P).x - 0.5, milieu(M, P).y, 'milieu', 'black', 1, 'middle', true),\n            texteParPosition('x', milieu(M, N).x + 0, milieu(M, N).y - 0.5, 'milieu', 'black', 1, 'middle', true),\n            texteSurSegment(`$x+${texNombrec(b)}$`, P, N, 'black', 0.5))\n          // texteParPosition(`$$x+$$${texNombrec(b)}`, milieu(P, N).x + 1, milieu(P, N).y, 0, 'black', 2, 'middle', true))\n          texte = ` Un triangle $MNP$ est rectangle en $M$. On a $MP= ${a}$ cm  et $MN= x$ cm.<br>\n             L'hypoténuse du triangle $MNP$ mesure  $${b}$ cm de plus que le côté $[MN]$.<br>\n             Déterminer la valeur de $x$ sous la forme d'une fraction irréductible ou d'un nombre entier le cas échéant. `\n          texteCorr = ' On réalise une petite figure à main levée pour visualiser la situation :<br>'\n          texteCorr += mathalea2d({ xmin: -1, ymin: -1, xmax: 12, ymax: 8, pixelsParCm: 20, mainlevee: true, amplitude: 0.5, scale: 0.7 }, objets)\n          texteCorr += `Le triangle $MNP$ est rectangle en $M$, d'après le théorème de Pythagore :<br>\n            $\\\\begin{aligned}\n            MN^2+MP^2&=PN^2\\\\\\\\\n            x^2+${a}^2&=(x+${b})^2\\\\\\\\\n            x^2+${a * a}&= x^2+2\\\\times x\\\\times ${b}+${b}^2\\\\\\\\\n            x^2+${a * a}&= x^2+${2 * b}x+${b * b}\\\\\\\\\n            ${a * a}+\\\\cancel{x^2}&=\\\\cancel{x^2}+${2 * b}x+${b * b} \\\\\\\\\n            ${2 * b}x+${b * b}&=${a * a}\\\\\\\\\n            ${2 * b}x+${b * b}${miseEnEvidence(-b * b)}&=${a * a}${miseEnEvidence(-b * b)}\\\\\\\\\n            ${2 * b}x&=${a * a - b * b}\\\\\\\\\n            \\\\dfrac{${2 * b}x}{${miseEnEvidence(2 * b)}}&=\\\\dfrac{${a * a - b * b}}{${miseEnEvidence(2 * b)}}\\\\\\\\\n            x&=${texFractionReduite(a * a - b * b, 2 * b)}\\\\end{aligned}$<br>\n             \n       La valeur de $x$ cherchée est : $${texFractionReduite(a * a - b * b, 2 * b)}$.\n       `\n\n          break\n        case 'typeE5':\n          a = randint(1, 8)\n          b = randint(a * a + 1, 100)\n\n          texte = ` En augmentant le côté d'un carré de $${a}$ cm, son aire aumente de $${b}$ cm$^2$.<br>\n      Quelle est la longueur du côté de ce carré ? <br>\n      On donnera le résultat sous la forme d'une fraction irréductible ou d'un nombre entier le cas échéant.`\n          texteCorr = `On note $x$ la longueur du côté du carré que l'on cherche.<br>\n      La différence des aires entre les deux carrés est  $${b}$, on cherche $x$ tel que :   <br>\n      $\\\\begin{aligned}\n      (x+${a})^2-x^2&=${b}\\\\\\\\\n      \\\\cancel{x^2}+ ${2 * a}x+${a}^2-\\\\cancel{x^2}&=${b}\\\\\\\\\n       ${2 * a}x+${a * a}&=${b}\\\\\\\\\n        ${2 * a}x+${a * a}${miseEnEvidence(-a * a)}&=${b}${miseEnEvidence(-a * a)}\\\\\\\\\n         ${2 * a}x&=${b - a * a}\\\\\\\\\n         \\\\dfrac{${2 * a}x}{${miseEnEvidence(2 * a)}}&=\\\\dfrac{${b - a * a}}{${miseEnEvidence(2 * a)}}\\\\\\\\\n         x&=${texFractionReduite(b - a * a, 2 * a)}\\\\end{aligned}$\n           <br>\n           La longueur du côté du carré est  $${texFractionReduite(b - a * a, 2 * a)}$ cm.\n `\n\n          break\n        case 'typeE6':\n\n          b = randint(1, 7) // petite base\n          a = randint(b + 2, 14) // grande base\n          d = (a - b) / 2\n          e = randint(1, 10) * 2\n          c = e * (a + b) / 2 // aire\n\n          A = point(0, 0, 'A', 'below')\n          H = point(9, 0, 'H', 'below')\n          B = point(15, 0, 'B', 'below')\n          C = point(15, 8, 'C')\n          D = point(9, 8, 'D')\n          E = point(0, -1, 'E')\n          F = point(15, -1, 'F')\n\n          objets.push(segment(A, D), segmentAvecExtremites(E, F), segment(A, B), segment(B, C), segment(D, C), segment(D, H), codageAngleDroit(A, B, C), codageAngleDroit(B, C, D), labelPoint(A, H, D, B, C), codageAngleDroit(B, H, D))\n          objets.push(texteSurSegment(`${texNombre(b)} cm`, D, C, 'black', +0.5), texteSurSegment(`${texNombre(a)} cm`, E, F, 'black', -0.5), texteParPosition('x', milieu(B, C).x + 0.5, milieu(B, C).y, 'milieu', 'black', 1, 'middle', true))\n\n          texte = ' $ABCD$ est un trapèze rectangle.<br> '\n\n          texte += 'Le schéma ci-dessous n\\'est pas à l\\'échelle.<br>' + mathalea2d({ xmin: -1, ymin: -2, xmax: 16, ymax: 10, pixelsParCm: 20, scale: 1 }, objets)\n\n          texte += `Sachant que l'aire de ce trapèze est $${c}$ cm$^2$ et en utilisant les données du graphique, déterminer la hauteur de ce trapèze.<br>\n                    <br>`\n          texteCorr = mathalea2d({ xmin: -1, ymin: -3, xmax: 16, ymax: 10, pixelsParCm: 20, scale: 0.7 }, objets)\n          texteCorr += `<br>La  hauteur du trapèze est  $x$. Il est constitué du rectangle $HBCD$ et du triangle rectangle $AHD$. <br>\n                    Son aire est donc la somme des aires de ces deux figures. <br>\n                    $\\\\bullet~$ L' aire du rectangle $HBCD$ est : $${b}\\\\times x=${reduireAxPlusB(b, 0)}$.<br>\n                    $\\\\bullet~$ L' aire de triangle rectangle $AHD$ est : $\\\\dfrac{(${a}-${b})\\\\times x}{2}=${reduireAxPlusB((a - b) / 2, 0)}$.\n                    <br>\n                    Puisque l'aire du trapèze est $${c}$ cm$^2$, $x$ est donc la solution de l'équation : $${reduireAxPlusB(b, 0)} + ${reduireAxPlusB((a - b) / 2, 0)}=${c}$.<br>\n                    $\\\\begin{aligned}\n                    ${reduireAxPlusB(b, 0)} + ${reduireAxPlusB((a - b) / 2, 0)}&=${c}\\\\\\\\\n                    ${texNombrec(b + (a - b) / 2)}x&=${c}\\\\\\\\\n                    \\\\dfrac{${texNombrec(b + d)}x}{${miseEnEvidence(texNombrec(b + d))}}&=\\\\dfrac{${c}}{${miseEnEvidence(texNombrec(b + d))}}\\\\\\\\\n                    x&=${texFractionReduite(c, b + d)}\n                    \\\\end{aligned}$<br>\n                    La hauteur du trapèze est : $${texFractionReduite(c, b + d)}$ cm.`\n\n          break\n        case 'typeE7':\n\n          a = randint(3, 8) // largeur rect\n          b = randint(1, 6)// hauteur triang\n          c = randint(1, 6) // valeur ajout à x\n          e = randint(1, 20)\n          d = (e * (2 * a + b) + 2 * a * c + c * b) / 2 // aire\n\n          A = point(0, 0, 'A', 'below')\n          H = point(5, 6, 'H', 'below')\n          B = point(10, 0, 'B', 'below')\n          C = point(10, 6, 'C')\n          D = point(0, 6, 'D')\n          E = point(5, 10, 'E')\n\n          objets.push(segment(A, B), segment(B, C), segment(C, D), segment(A, D), segment(E, C), segment(E, D), segment(E, H), codageAngleDroit(E, H, C), labelPoint(A, H, D, B, C, E), codeSegments('//', 'blue', D, E, E, C))\n          objets.push(texteParPosition(`${texNombrec(a)}`, milieu(B, C).x + 0.4, milieu(B, C).y, 'milieu', 'black', 1, 'middle', true),\n            texteParPosition(`${texNombrec(b)}`, milieu(E, H).x + 0.4, milieu(E, H).y, 'milieu', 'black', 1, 'middle', true),\n            texteParPosition(`x + ${texNombrec(c)}`, milieu(A, B).x + 0.4, milieu(A, B).y - 0.4, 'milieu', 'black', 1, 'middle', true))\n\n          texte = ` La figure ci-dessous (qui n'est pas à l'échelle) est composée d'un rectangle $ABCD$ et d'un triangle isocèle $DEC$. <br>\n        L'unité est le mètre.<br> ` +\n        mathalea2d({ xmin: -1, ymin: -1, xmax: 12, ymax: 11, pixelsParCm: 20, scale: 1 }, objets)\n\n          texte += `Sachant que l'aire de cette figure est $${texNombrec(d)}$ m$^2$ et en utilisant les données du graphique, déterminer la  valeur exacte de $x$.<br>\n         <br>`\n          texteCorr = mathalea2d({ xmin: -1, ymin: -1, xmax: 16, ymax: 11, pixelsParCm: 20, scale: 0.7 }, objets)\n          texteCorr += `<br>La figure est  constituée du rectangle $ABCD$ et du triangle isocèle $DEC$.   <br>\n        Son aire est donc la somme des aires de ces deux figures. <br>\n        $\\\\bullet~$ L' aire du rectangle $ABCD$ est : $${a}\\\\times (x+${c})=${reduireAxPlusB(a, a * c)}$ ;<br>\n        $\\\\bullet~$ L' aire de triangle isocèle $DEC$ est : $\\\\dfrac{${b}\\\\times(x +${c})}{2}=${texFractionReduite(b, 2)}(x+${c})=${reduireAxPlusB(b / 2, (b * c) / 2)}$.<br>\n        L'aire de la figure étant $${texNombrec(d)}$ m$^2$, on cherche $x$ tel que : <br>\n        $\\\\begin{aligned}\n        (${reduireAxPlusB(a, a * c)})+(${reduireAxPlusB(b / 2, (b * c) / 2)})&=${texNombrec(d)}\\\\\\\\\n        ${reduireAxPlusB(a, a * c)}+${reduireAxPlusB(b / 2, (b * c) / 2)}&=${texNombrec(d)}\\\\\\\\\n        ${reduireAxPlusB(a + b / 2, a * c + (b * c) / 2)}&=${texNombrec(d)}\\\\\\\\\n        ${reduireAxPlusB(a + b / 2, a * c + (b * c) / 2)}${miseEnEvidence(texNombrec(-a * c - (b * c) / 2))}&=${d}${miseEnEvidence(texNombrec(-a * c - (b * c) / 2))}\\\\\\\\\n                ${reduireAxPlusB(a + b / 2, 0)}&=${reduireAxPlusB(0, d - a * c - (b * c) / 2)}\\\\\\\\\n                \\\\dfrac{${reduireAxPlusB(a + b / 2, 0)}}{${miseEnEvidence(texNombrec(a + b / 2))}}&=\\\\dfrac{${texNombrec(d - a * c - (b * c) / 2)}}{${miseEnEvidence(texNombrec(a + b / 2))}}\\\\\\\\\n                x&=${texFractionReduite((d - a * c - (b * c) / 2) * 10, (a + b / 2) * 10)}\n                \\\\end{aligned}$<br> \n                La valeur de $x$ cherchée est donc : $ ${texFractionReduite((d - a * c - (b * c) / 2) * 10, (a + b / 2) * 10)}$.\n                `\n\n          break\n\n        case 'typeE8':\n\n          a = randint(10, 50) // longueur seg [AB]\n\n          A = point(0, 0, 'A', 'below')\n          B = point(10, 0, 'B', 'below')\n          C = point(10, 6, 'C')\n          D = point(4, 6, 'D')\n          E = point(2, 3.46, 'E')\n          M = point(4, 0, 'M', 'below')\n          K = point(10, -1, 'K')\n          L = point(0, -1, 'L')\n\n          objets.push(segment(A, B), segment(A, E), segmentAvecExtremites(K, L), segment(E, M), segment(M, D), segment(B, C), segment(D, C), codageAngleDroit(B, M, D), codageAngleDroit(M, B, C), codageAngleDroit(B, C, D), codageAngleDroit(C, D, M), labelPoint(A, M, B, C, D, E), codeSegments('//', 'blue', A, E, E, M, A, M), codeSegments('/', 'blue', M, B, B, C, C, D, D, M))\n          objets.push(texteParPosition('$x$', milieu(A, M).x, milieu(A, M).y - 0.3, 0, 'black', 2, 'middle', true), texteParPosition(`${texNombrec(a)}`, milieu(A, B).x, milieu(A, B).y - 1.5, 'milieu', 'black', 1, 'middle', true))\n\n          texte = `$[AB]$ est un segment de longueur $${a}$ et $M$ est un point de ce segment.<br>\n      Du même côté du segment $[AB]$, on trace le triangle équilatéral $AME$ et le carré $MBCD$.<br>\n      On pose $AM=x$.<br>\n     Déterminer la valeur de $x$ pour que le périmètre du triangle $AME$ soit égal à celui du carré $MBCD$.  `\n\n          texteCorr = '<br>On réalise une figure pour visualiser la situation :<br>'\n          texteCorr += mathalea2d({ xmin: -1, ymin: -3, xmax: 12, ymax: 8, pixelsParCm: 30, scale: 2 }, objets)\n\n          texteCorr += ` Le triangle $AME$ est un triangle équilatéral de côté $x$, son périmètre est donc  $3x$.<br>\n      \n      Le carré $MBCD$ a pour côté $MB=${a}-x$. Son périmètre est donc : $4\\\\times (${a}-x)=${reduireAxPlusB(-4, 4 * a)} $.\n      <br>\n      On cherche $x$ tel que : <br>\n      $\\\\begin{aligned}\n      ${reduireAxPlusB(-4, 4 * a)}&=3x\\\\\\\\\n      ${reduireAxPlusB(-4, 4 * a)} ${miseEnEvidence('-3\\\\textit{x}')}&=3x${miseEnEvidence('-3\\\\textit{x}')}\\\\\\\\\n      ${reduireAxPlusB(-7, 4 * a)}&=0\\\\\\\\\n      ${reduireAxPlusB(-7, 4 * a)}${miseEnEvidence(-4 * a)}&=0${miseEnEvidence(-4 * a)}\\\\\\\\\n      \\\\dfrac{${reduireAxPlusB(-7, 0)}}{${miseEnEvidence('-7')}}&=\\\\dfrac{${reduireAxPlusB(0, -4 * a)}}{${miseEnEvidence('-7')}}\\\\\\\\\n      x&=${texFractionReduite(-4 * a, -7)}\n      \\\\end{aligned}$<br>\n      Les deux périmètres sont égaux lorsque  : $x=${texFractionReduite(-4 * a, -7)}$.\n      `\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","dateDePublication","modeliserEquationsGeometrie","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","a","b","c","d","e","A","B","C","D","E","M","N","P","H","F","K","L","objets","texte","texteCorr","i","cpt","randint","point","push","segment","labelPoint","texteParPosition","texNombrec","milieu","x","y","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","mainlevee","amplitude","scale","miseEnEvidence","rienSi1","sp","texFractionReduite","codageAngleDroit","Math","sqrt","texteSurSegment","segmentAvecExtremites","texNombre","reduireAxPlusB","codeSegments","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}