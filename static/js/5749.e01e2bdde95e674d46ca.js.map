{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5G24-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","TrianglesEgaux","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","spacing","nouvelleVersion","listeQuestions","listeCorrections","typeQuestionsDisponibles","listeTypeQuestions","combinaisonListes","texte","texteCorr","i","cpt","l1","randint","l2","l3","A","point","B","pointAdistance","p1","triangle2points2longueurs","C","listePoints","O","barycentre","v","vecteur","longueur","O2","translation","p2","D","E","F","code1","code2","code3","code4","code5","code6","codeA1","codeA2","codeA3","codeA4","codeA5","codeA6","nom1","nom2","nommeP1","nommeP2","Anom","Bnom","Cnom","Dnom","Enom","Fnom","rotation","angle","codeSegment","codeAngle","choisitLettresDifferentes","replaceAll","nommePolygone","polygone","shuffleLettres","mathalea2d","xmin","Math","min","x","ymin","y","xmax","max","ymax","scale","similitude","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/5749.e01e2bdde95e674d46ca.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { point, pointAdistance, rotation, similitude, translation, vecteur, barycentre, codeSegment, codeAngle, nommePolygone, mathalea2d, triangle2points2longueurs, longueur, angle, polygone } from '../../modules/2d.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, creerNomDePolygone, choisitLettresDifferentes, shuffleLettres } from '../../modules/outils.js'\nexport const titre = 'Triangles égaux et côtés homologues'\n\n/**\n * Deux triangles égaux sont codés, il faut reconnaitre les côtés homologues\n * @author Rémi Angot\n * Référence 5G24-1\n*/\nexport default function TrianglesEgaux () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Compléter les phrases suivantes.'\n  this.nbQuestions = 3\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté \n  this.tailleDiaporama = 50 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.spacing = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typeQuestionsDisponibles = ['rotation', 'similitude', 'rotation2', 'similitude2', 'rotation3', 'similitude3']\n    if (this.nbQuestions === 3) {\n      typeQuestionsDisponibles = ['similitude', 'rotation2', 'similitude3']\n    } else if (this.nbQuestions === 4) {\n      typeQuestionsDisponibles = ['rotation', 'rotation2', 'similitude2', 'rotation3', 'similitude3']\n    }\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      let l1 = randint(40, 70)\n      let l2 = randint(40, 80, l1)\n      let l3 = randint(40, l1 + l2 - 10, [l1, l2])\n      l1 /= 10\n      l2 /= 10\n      l3 /= 10\n      const A = point(0, 0)\n      const B = pointAdistance(A, l1)\n      const p1 = triangle2points2longueurs(A, B, l2, l3)\n      const C = p1.listePoints[2]\n      const O = barycentre(p1)\n      const v = vecteur(longueur(A, B) + 2, 0)\n      const O2 = translation(O, v)\n      // const p2 = similitude(p1, O2, randint(160, 200), 1)\n      let p2, D, E, F, code1, code2, code3, code4, code5, code6, codeA1, codeA2, codeA3, codeA4, codeA5, codeA6, nom1, nom2, nommeP1, nommeP2, Anom, Bnom, Cnom, Dnom, Enom, Fnom\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'rotation':\n          p2 = rotation(p1, A, angle(C, A, B) + randint(10, 100))\n          D = p2.listePoints[0]\n          E = p2.listePoints[1]\n          F = p2.listePoints[2]\n          code1 = codeSegment(A, B, '|')\n          code2 = codeSegment(D, E, '|')\n          code3 = codeSegment(B, C, '||')\n          code4 = codeSegment(E, F, '||')\n          code5 = codeSegment(C, A, '|||')\n          code6 = codeSegment(F, D, '|||')\n          codeA1 = codeAngle(A, B, C)\n          codeA2 = codeAngle(D, E, F)\n          codeA3 = codeAngle(B, C, A, 0.8, 'X')\n          codeA4 = codeAngle(E, F, D, 0.8, 'X')\n          codeA5 = codeAngle(C, A, B, 0.8, '||')\n          codeA6 = codeAngle(F, D, E, 0.8, '||')\n          nom1 = choisitLettresDifferentes(3)\n          nom1 = nom1 + ' ' + choisitLettresDifferentes(2, nom1)\n          nom1 = nom1.replaceAll(',', '')\n          nommeP1 = nommePolygone(polygone(A, B, C, D, E, F), nom1)\n          Anom = nom1[0]\n          Bnom = nom1[1]\n          Cnom = nom1[2]\n          Dnom = nom1[0]\n          Enom = nom1[4]\n          Fnom = nom1[5]\n          texte = `Ci-dessous les triangles $${shuffleLettres(Anom + Bnom + Cnom)}$ et $${shuffleLettres(Dnom + Enom + Fnom)}$ sont égaux.<br>`\n          texte += `$[${Anom + Bnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Bnom + Cnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Cnom + Anom}]$ et ............ sont homologues.<br>`\n          texte += mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, code3, code4, code5, code6, codeA1, codeA2, codeA3, codeA4, codeA5, codeA6, nommeP1)\n          texteCorr = `Correction ${i + 1} de type 1`\n          break\n        case 'similitude':\n          p2 = similitude(p1, O2, randint(160, 200), 1)\n          D = p2.listePoints[0]\n          E = p2.listePoints[1]\n          F = p2.listePoints[2]\n          code1 = codeSegment(A, B, '|')\n          code2 = codeSegment(D, E, '|')\n          code3 = codeSegment(B, C, '||')\n          code4 = codeSegment(E, F, '||')\n          code5 = codeSegment(C, A, '|||')\n          code6 = codeSegment(F, D, '|||')\n          codeA1 = codeAngle(A, B, C)\n          codeA2 = codeAngle(D, E, F)\n          codeA3 = codeAngle(B, C, A, 0.8, 'X')\n          codeA4 = codeAngle(E, F, D, 0.8, 'X')\n          codeA5 = codeAngle(C, A, B, 0.8, '||')\n          codeA6 = codeAngle(F, D, E, 0.8, '||')\n          nom1 = choisitLettresDifferentes(3)\n          nom2 = choisitLettresDifferentes(3, nom1)\n          Anom = nom1[0]\n          Bnom = nom1[1]\n          Cnom = nom1[2]\n          Dnom = nom2[0]\n          Enom = nom2[1]\n          Fnom = nom2[2]\n          nommeP1 = nommePolygone(p1, nom1)\n          nommeP2 = nommePolygone(p2, nom2)\n          texte = `Ci-dessous les triangles $${shuffleLettres(Anom + Bnom + Cnom)}$ et $${shuffleLettres(Dnom + Enom + Fnom)}$ sont égaux.<br>`\n          texte += `$[${Anom + Bnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Bnom + Cnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Cnom + Anom}]$ et ............ sont homologues.<br>`\n          texte += mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, code3, code4, code5, code6, codeA1, codeA2, codeA3, codeA4, codeA5, codeA6, nommeP1, nommeP2)\n          break\n        case 'rotation2':\n          p2 = rotation(p1, A, angle(C, A, B) + randint(10, 100))\n          D = p2.listePoints[0]\n          E = p2.listePoints[1]\n          F = p2.listePoints[2]\n          code1 = codeSegment(A, B, '|')\n          code2 = codeSegment(D, E, '|')\n          code3 = codeSegment(B, C, '||')\n          code4 = codeSegment(E, F, '||')\n          code5 = codeSegment(C, A, '|||')\n          code6 = codeSegment(F, D, '|||')\n          codeA1 = codeAngle(A, B, C)\n          codeA2 = codeAngle(D, E, F)\n          codeA3 = codeAngle(B, C, A, 0.8, 'X')\n          codeA4 = codeAngle(E, F, D, 0.8, 'X')\n          codeA5 = codeAngle(C, A, B, 0.8, '||')\n          codeA6 = codeAngle(F, D, E, 0.8, '||')\n          nom1 = choisitLettresDifferentes(3)\n          nom1 = nom1 + ' ' + choisitLettresDifferentes(2, nom1)\n          nom1 = nom1.replaceAll(',', '')\n          nommeP1 = nommePolygone(polygone(A, B, C, D, E, F), nom1)\n          Anom = nom1[0]\n          Bnom = nom1[1]\n          Cnom = nom1[2]\n          Dnom = nom1[0]\n          Enom = nom1[4]\n          Fnom = nom1[5]\n          texte = `Ci-dessous les triangles $${shuffleLettres(Anom + Bnom + Cnom)}$ et $${shuffleLettres(Dnom + Enom + Fnom)}$ sont égaux.<br>`\n          texte += `$[${Anom + Bnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Bnom + Cnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Cnom + Anom}]$ et ............ sont homologues.<br>`\n          texte += mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, code3, code4, codeA1, codeA2, nommeP1)\n          texteCorr = `Correction ${i + 1} de type 1`\n          break\n        case 'similitude2':\n          p2 = similitude(p1, O2, randint(160, 200), 1)\n          D = p2.listePoints[0]\n          E = p2.listePoints[1]\n          F = p2.listePoints[2]\n          code1 = codeSegment(A, B, '|')\n          code2 = codeSegment(D, E, '|')\n          code3 = codeSegment(B, C, '||')\n          code4 = codeSegment(E, F, '||')\n          code5 = codeSegment(C, A, '|||')\n          code6 = codeSegment(F, D, '|||')\n          codeA1 = codeAngle(A, B, C)\n          codeA2 = codeAngle(D, E, F)\n          codeA3 = codeAngle(B, C, A, 0.8, 'X')\n          codeA4 = codeAngle(E, F, D, 0.8, 'X')\n          codeA5 = codeAngle(C, A, B, 0.8, '||')\n          codeA6 = codeAngle(F, D, E, 0.8, '||')\n          nom1 = choisitLettresDifferentes(3)\n          nom2 = choisitLettresDifferentes(3, nom1)\n          Anom = nom1[0]\n          Bnom = nom1[1]\n          Cnom = nom1[2]\n          Dnom = nom2[0]\n          Enom = nom2[1]\n          Fnom = nom2[2]\n          nommeP1 = nommePolygone(p1, nom1)\n          nommeP2 = nommePolygone(p2, nom2)\n          texte = `Ci-dessous les triangles $${shuffleLettres(Anom + Bnom + Cnom)}$ et $${shuffleLettres(Dnom + Enom + Fnom)}$ sont égaux.<br>`\n          texte += `$[${Anom + Bnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Bnom + Cnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Cnom + Anom}]$ et ............ sont homologues.<br>`\n          texte += mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, code3, code4, codeA1, codeA2, nommeP1, nommeP2)\n          break\n        case 'rotation3':\n          p2 = rotation(p1, A, angle(C, A, B) + randint(10, 100))\n          D = p2.listePoints[0]\n          E = p2.listePoints[1]\n          F = p2.listePoints[2]\n          code1 = codeSegment(A, B, '|')\n          code2 = codeSegment(D, E, '|')\n          code3 = codeSegment(B, C, '||')\n          code4 = codeSegment(E, F, '||')\n          code5 = codeSegment(C, A, '|||')\n          code6 = codeSegment(F, D, '|||')\n          codeA1 = codeAngle(A, B, C)\n          codeA2 = codeAngle(D, E, F)\n          codeA3 = codeAngle(B, C, A, 0.8, 'X')\n          codeA4 = codeAngle(E, F, D, 0.8, 'X')\n          codeA5 = codeAngle(C, A, B, 0.8, '||')\n          codeA6 = codeAngle(F, D, E, 0.8, '||')\n          nom1 = choisitLettresDifferentes(3)\n          nom1 = nom1 + ' ' + choisitLettresDifferentes(2, nom1)\n          nom1 = nom1.replaceAll(',', '')\n          nommeP1 = nommePolygone(polygone(A, B, C, D, E, F), nom1)\n          Anom = nom1[0]\n          Bnom = nom1[1]\n          Cnom = nom1[2]\n          Dnom = nom1[0]\n          Enom = nom1[4]\n          Fnom = nom1[5]\n          texte = `Ci-dessous les triangles $${shuffleLettres(Anom + Bnom + Cnom)}$ et $${shuffleLettres(Dnom + Enom + Fnom)}$ sont égaux.<br>`\n          texte += `$[${Anom + Bnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Bnom + Cnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Cnom + Anom}]$ et ............ sont homologues.<br>`\n          texte += mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, codeA1, codeA2, codeA5, codeA6, nommeP1)\n          texteCorr = `Correction ${i + 1} de type 1`\n          break\n        case 'similitude3':\n          p2 = similitude(p1, O2, randint(160, 200), 1)\n          D = p2.listePoints[0]\n          E = p2.listePoints[1]\n          F = p2.listePoints[2]\n          code1 = codeSegment(A, B, '|')\n          code2 = codeSegment(D, E, '|')\n          code3 = codeSegment(B, C, '||')\n          code4 = codeSegment(E, F, '||')\n          code5 = codeSegment(C, A, '|||')\n          code6 = codeSegment(F, D, '|||')\n          codeA1 = codeAngle(A, B, C)\n          codeA2 = codeAngle(D, E, F)\n          codeA3 = codeAngle(B, C, A, 0.8, 'X')\n          codeA4 = codeAngle(E, F, D, 0.8, 'X')\n          codeA5 = codeAngle(C, A, B, 0.8, '||')\n          codeA6 = codeAngle(F, D, E, 0.8, '||')\n          nom1 = choisitLettresDifferentes(3)\n          nom2 = choisitLettresDifferentes(3, nom1)\n          Anom = nom1[0]\n          Bnom = nom1[1]\n          Cnom = nom1[2]\n          Dnom = nom2[0]\n          Enom = nom2[1]\n          Fnom = nom2[2]\n          nommeP1 = nommePolygone(p1, nom1)\n          nommeP2 = nommePolygone(p2, nom2)\n          texte = `Ci-dessous les triangles $${shuffleLettres(Anom + Bnom + Cnom)}$ et $${shuffleLettres(Dnom + Enom + Fnom)}$ sont égaux.<br>`\n          texte += `$[${Anom + Bnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Bnom + Cnom}]$ et ............ sont homologues.<br>`\n          texte += `$[${Cnom + Anom}]$ et ............ sont homologues.<br>`\n          texte += mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, codeA1, codeA2, codeA5, codeA6, nommeP1, nommeP2)\n          break\n      }\n      texteCorr = `$[${Anom + Bnom}]$ et $[${Dnom + Enom}]$ sont homologues.<br>`\n      texteCorr += `$[${Bnom + Cnom}]$ et $[${Enom + Fnom}]$ sont homologues.<br>`\n      texteCorr += `$[${Cnom + Anom}]$ et $[${Fnom + Dnom}]$ sont homologues.<br>`\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}