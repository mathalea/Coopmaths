{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N33-0.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Fraction_d_une_quantite","Exercice","this","nbQuestions","consigne","context","spacingCorr","spacing","sup","sup2","nbCols","nbColsCorr","nouvelleVersion","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","listeTypeDeQuestions","choixdenh","combinaisonListes","choixdent","choixdenb","parseInt","den","num","choix","longueur","numIrred","denIrred","k","masse","frac","frac2","texte","texteCorr","i","cpt","randint","fraction","texFraction","mathalea2d","xmin","ymin","xmax","ymax","representation","calcul","choice","pgcd","entierMoinsFraction","texFractionSimplifiee","representationIrred","texNombrec","texNombre","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/6731.173da5f6ef295625a8b9.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,pgcd,calcul,texNombrec,texNombre,texFraction} from '../../modules/outils.js'\nimport {mathalea2d} from '../../modules/2d.js'\nimport{fraction} from '../../modules/Fractions.js'\nexport const titre = 'Calculer la fraction d’une quantité'\n\n/**\n * Calculer la fracton d'une quantité avec ou sans dessin.\n * @Auteur Jean-Claude Lhote\n * référence 6N33-0\n */\nexport default function Fraction_d_une_quantite() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.nbQuestions = 5;\n  this.consigne = \"Calculer\";\n  context.isHtml ? (this.spacingCorr = 3.5) : (this.spacingCorr = 2);\n  context.isHtml ? (this.spacing = 2) : (this.spacing = 2);\n  this.sup = 1;\n  this.sup2 = true\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let typesDeQuestionsDisponibles\n    let listeTypeDeQuestions = []\n    let choixdenh=combinaisonListes([3,4,5,10,12,20,30],this.nbQuestions)\n    let choixdent=combinaisonListes([20,24,30],this.nbQuestions)\n    let choixdenb=combinaisonListes([4,5,10,12],this.nbQuestions)\n     \n    if (this.sup < 5)\n      typesDeQuestionsDisponibles = [parseInt(this.sup)]\n    else\n      typesDeQuestionsDisponibles = [1, 2, 3, 4]\n    listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (\n      let i = 0, den, num, choix, longueur, numIrred, denIrred, k, masse, frac,frac2, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n    ) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          den = choixdenh[i]\n          num = randint(1, den-1)\n          frac = fraction(num, den)\n          texte = `À combien de minutes correspondent $${frac.texFraction}$ d\\'heure ?<br>`\n          if (this.sup2) {\n            texte += `cette fraction est représentée ci dessous :<br>`\n            texte += mathalea2d({ xmin: 0, ymin: 0, xmax: 15, ymax: 5 }, frac.representation(2.5, 2.5, 2, 0, 'gateau', 'blue'))\n          }\n          texteCorr = `Comme l\\'heure est partagée en ${den} parts égales, chaque part représente $${texFraction(1, den)}$ d\\'heure, soit $${calcul(60 / den)}$ minutes.<br>`\n          texteCorr += `Ici, il y a $${texFraction(num, den)}$ d\\'heure, ce qui représente $${num}$ fois plus, soit $${num}\\\\times${calcul(60 / den)}=${calcul(num * 60 / den)}$.<br>`\n          texteCorr += `$${frac.texFraction}$ d\\'heure correspond donc à $${calcul(num * 60 / den)}$ minutes.`\n          break\n        case 2:\n          den = choixdenh[i]\n          num = randint(1, 3 * den, den)\n          frac = fraction(num, den)\n          texte = `À combien de minutes correspondent $${frac.texFraction}$ d\\'heure ?<br>`\n          if (this.sup2) {\n            texte += `Cette fraction est représentée ci dessous :<br>`\n            texte += mathalea2d({ xmin: 0, ymin: 0, xmax: 15, ymax: 5 }, frac.representation(2.5, 2.5, 2, 0, 'gateau', 'blue'))\n          }\n          texteCorr = `Comme l\\'heure est partagée en ${den} parts égales, chaque part représente $${texFraction(1, den)}$ d\\'heure, soit $${calcul(60 / den)}$ minutes.<br>`\n          texteCorr += `Ici, il y a $${texFraction(num, den)}$ d\\'heure, ce qui représente $${num}$ fois plus, soit $${num}\\\\times${calcul(60 / den)}=${calcul(num * 60 / den)}$.<br>`\n          texteCorr += `$${frac.texFraction}$ d\\'heure correspond donc à $${calcul(num * 60 / den)}$ minutes.`\n          break\n        case 3:\n          masse = choice([120, 180, 240, 300])\n          denIrred = choixdent[i]\n          numIrred = (i*randint(1, denIrred - 1))%denIrred\n          while (pgcd(denIrred, numIrred) != 1 || calcul(denIrred / numIrred) == 2) {\n            denIrred = choixdent[i]\n            numIrred = randint(1, denIrred - 1)\n          }\n          frac = fraction(numIrred, denIrred)\n          frac2 = frac.entierMoinsFraction(1)\n          texte = `Voici une tablette de chocolat dont la masse totale est de $${masse}$ grammes. Quelqu'un en a déjà consommé les $${frac.texFractionSimplifiee}$.<br>`\n          choix = randint(1, 2)\n          if (choix == 1) {\n            texte += `Quelle masse de chocoloat a-t-elle été consommée ?<br>`\n            texteCorr = `Comme la tablette a une masse de $${masse}$ grammes, $${texFraction(1, denIrred)}$ de la tablette représente une masse de $${calcul(masse / denIrred)}$ grammes.<br>`\n            texteCorr += `Ici, il y a $${frac.texFractionSimplifiee}$ de la tablette qui a été consommé, ce qui représente $${numIrred}$ fois plus, soit $${numIrred}\\\\times${calcul(masse / denIrred)}=${calcul(numIrred * masse / denIrred)}$.<br>`\n            texteCorr += `La masse de chocolat consommée est $${calcul(numIrred * masse / denIrred)}$ grammes.`\n          }\n          else {\n            texte += `Quelle masse de chocolat reste-t-il ?<br>`\n            texteCorr = `Comme la tablette a une masse de $${masse}$ grammes, $${texFraction(1, denIrred)}$ de la tablette représente une masse de $${calcul(masse / denIrred)}$ grammes.<br>`\n            texteCorr += `Ici, il y a $${frac.texFractionSimplifiee}$ de la tablette qui a été consommé, ce qui représente $${numIrred}$ fois plus, soit $${numIrred}\\\\times${calcul(masse / denIrred)}=${calcul(numIrred * masse / denIrred)}$.<br>`\n            texteCorr += `La masse de chocolat consommée est $${calcul(numIrred * masse / denIrred)}$ grammes.<br>`\n            texteCorr += `Il reste donc : $${masse}-${calcul(numIrred * masse / denIrred)}=${calcul(masse - numIrred * masse / denIrred)}$ grammes de chocolat.<br>`\n            texteCorr += `une autre façon de faire est d'utiliser la fraction restante : $${texFraction(denIrred, denIrred)}-${frac.texFractionSimplifiee}=${texFraction(denIrred - numIrred, denIrred)}$.<br>`\n            texteCorr += `$${texFraction(denIrred - numIrred, denIrred)}$ de $${masse}$ grammes c\\'est $${denIrred - numIrred}$ fois $${calcul(masse / denIrred)}$ grammes.<br>`\n            texteCorr += `Il reste donc : $${denIrred - numIrred}\\\\times${calcul(masse / denIrred)}=${(denIrred - numIrred) * masse / denIrred}$ grammes de chocolat.`\n\n          }\n          if (this.sup2) {\n            texte += `La tablette de chocolat est représentée ci dessous :<br>`\n            texte += mathalea2d({ xmin: -0.5, ymin: -0.5, xmax: 5, ymax: 7 }, frac2.representationIrred(0, 0, 4, 0, 'baton', 'brown'))\n          }\n          break\n        case 4:\n          num = randint(1, den - 1)\n          longueur = choice([120, 180, 240, 300])\n          denIrred = choixdenb[i]\n          numIrred = randint(1, denIrred - 1)\n          while (pgcd(denIrred, numIrred) != 1 || calcul(denIrred / numIrred) == 2) {\n            denIrred = choice([2, 3, 4, 5, 10])\n            numIrred = randint(1, denIrred - 1)\n          }\n          k = calcul(300 / denIrred)\n          den = calcul(denIrred * k)\n          num = calcul(numIrred * k)\n          frac = fraction(num, den)\n          texte = `Un bâton de $${texNombrec(longueur / 100)}$ mètre`\n          if (longueur >= 200) texte += `s`\n          texte += ` de longueur est coupé à $${frac.texFractionSimplifiee}$ de sa longueur.<br>`\n          texte += `Calculer la longueur de chacun des morceaux en mètres.<br>`\n          if (this.sup2) {\n            texte += `Ce bâton est représenté ci dessous :<br>`\n            texte += mathalea2d({ xmin: -0.5, ymin: 0, xmax: 10, ymax: 2 }, frac.representationIrred(0, 1, 8, 0, 'segment', 'blue', \"0\", `${texNombre(calcul(longueur / 100))}`))\n          }\n          texteCorr = `$${texFraction(1, denIrred)}$ de $${texNombrec(longueur / 100)}$ représente $${texNombrec(longueur / 100)} \\\\div ${denIrred} = ${texNombrec(longueur / 100 / denIrred)}$.<br>`\n          texteCorr += `Le premier morceau du bâton correspondant à $${frac.texFractionSimplifiee}$ du bâton mesure : $${numIrred} \\\\times ${texNombrec(longueur / 100 / denIrred)}=${texNombrec(numIrred * longueur / 100 / denIrred)}$ m.<br>`\n          texteCorr += `Le deuxième morceau mesure donc : $${texNombrec(longueur / 100)}-${texNombrec(numIrred * longueur / 100 / denIrred)}=${texNombrec(longueur / 100 - numIrred * longueur / 100 / denIrred)}$ m.`\n\n          break\n      }\n\n\n\n      if (this.listeCorrections.indexOf(texteCorr) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\"Type d\\'exercices\", 5, \"1 : Heures & minutes (inférieur à 1h)\\n2 : Heures & minutes (jusqu\\'à 3h)\\n3 : tablettes de chocolat\\n4 : Bâton cassé\\n5 : Mélange\"];\n  this.besoinFormulaire2CaseACocher = [\"Avec dessin\", true];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}