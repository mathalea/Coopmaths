{"version":3,"file":"js/94623.fb5064fb1d422458ebb8.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C31-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, shuffle, texNombre, numAlpha, arrondi } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Donner des valeurs approchées d’un quotient décimal'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Donner des valeurs approchées d'un quotient décimale.\n *\n *\n * @author Rémi Angot\n * Référence 6C31-2\n * 2020-12-07\n */\nexport default function ValeurApprocheeDivisionDecimale () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Compléter les phrases suivantes.'\n  this.nbQuestions = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Une fraction irréductible avec un dénominateur qui comporte un facteur différent de 2 ou de 5\n      // aura une écriture décimale périodique infinie\n      const k1 = choice([3, 7, 11, 13])\n      const k2 = choice([3, 7, 11, 13], k1)\n      const a = choice([3, 5, 7, 11, 13], [k1, k2]) * choice([3, 5, 7, 11, 13], [k1, k2])\n      const b = k1 * k2\n      const q = arrondi(a / b, 6)\n      texte = `On sait que $${a}\\\\div${b}\\\\approx${texNombre(q)}$.`\n      const listeDeQuestions1 = [\n        [`La valeur approchée par défaut de $${a}\\\\div${b}$ au dixième près est : `, arrondi(a / b - 0.05, 1)],\n        [`La valeur approchée par excès de $${a}\\\\div${b}$ au dixième près est : `, arrondi(a / b + 0.05, 1)],\n        [`La valeur approchée par défaut de $${a}\\\\div${b}$ au centième près est : `, arrondi(a / b - 0.005, 2)],\n        [`La troncature de $${a}\\\\div${b}$ au centième près est : `, arrondi(Math.floor(a / b * 100) / 100, 2)],\n        [`La valeur approchée par excès de $${a}\\\\div${b}$ au centième près est : `, arrondi(a / b + 0.005, 2)],\n        [`La valeur approchée par défaut de $${a}\\\\div${b}$ au millième près est : `, arrondi(a / b - 0.0005, 3)],\n        [`La troncature de $${a}\\\\div${b}$ au millième près est : `, arrondi(Math.round(a / b * 1000) / 1000, 3)],\n        [`La valeur approchée par excès de $${a}\\\\div${b}$ au millième près est : `, arrondi(a / b + 0.0005, 3)]\n      ]\n      const listeDeQuestions2 = [\n        [`La valeur arrondie de $${a}\\\\div${b}$ au dixième près est : `, arrondi(a / b, 1)],\n        [`La valeur arrondie de $${a}\\\\div${b}$ au centième près est : `, arrondi(a / b, 2)],\n        [`La valeur arrondie de $${a}\\\\div${b}$ au millième près est : `, arrondi(a / b, 3)]\n      ]\n\n      texteCorr = `On sait que $${a}\\\\div${b}\\\\approx${texNombre(q)}$.`\n      // Questions peuvent être défaut, excès ou excès, défaut ou troncature, excès ou excès, troncature\n      const choix = randint(1, 4)\n      switch (choix) {\n        case 1:\n          texte += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[0][0]} ${this.interactif ? ajouteChampTexteMathLive(this, 4 * i, 'largeur10 inline') : '\\\\ldots'}`\n          setReponse(this, 4 * i, listeDeQuestions1[0][1])\n          texte += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[4][0]} ${this.interactif ? ajouteChampTexteMathLive(this, 4 * i + 1, 'largeur10 inline') : '\\\\ldots'}`\n          setReponse(this, 4 * i + 1, listeDeQuestions1[4][1])\n          texteCorr += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[0][0]} $ ${texNombre(listeDeQuestions1[0][1])}$`\n          texteCorr += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[4][0]} $ ${texNombre(listeDeQuestions1[4][1])}$`\n          break\n        case 2:\n          texte += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[1][0]} ${this.interactif ? ajouteChampTexteMathLive(this, 4 * i, 'largeur10 inline') : '\\\\ldots'}`\n          setReponse(this, 4 * i, listeDeQuestions1[1][1])\n          texte += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[5][0]} ${this.interactif ? ajouteChampTexteMathLive(this, 4 * i + 1, 'largeur10 inline') : '\\\\ldots'}`\n          setReponse(this, 4 * i + 1, listeDeQuestions1[5][1])\n          texteCorr += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[1][0]} $ ${texNombre(listeDeQuestions1[1][1])}$`\n          texteCorr += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[5][0]} $ ${texNombre(listeDeQuestions1[5][1])}$`\n          break\n        case 3:\n          texte += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[3][0]} ${this.interactif ? ajouteChampTexteMathLive(this, 4 * i, 'largeur10 inline') : '\\\\ldots'}`\n          setReponse(this, 4 * i, listeDeQuestions1[3][1])\n          texte += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[7][0]} ${this.interactif ? ajouteChampTexteMathLive(this, 4 * i + 1, 'largeur10 inline') : '\\\\ldots'}`\n          setReponse(this, 4 * i + 1, listeDeQuestions1[7][1])\n          texteCorr += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[3][0]} $ ${texNombre(listeDeQuestions1[3][1])}$`\n          texteCorr += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[7][0]} $ ${texNombre(listeDeQuestions1[7][1])}$`\n          break\n        case 4:\n          texte += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[4][0]} ${this.interactif ? ajouteChampTexteMathLive(this, 4 * i, 'largeur10 inline') : '\\\\ldots'}`\n          setReponse(this, 4 * i, listeDeQuestions1[4][1])\n          texte += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[7][0]} ${this.interactif ? ajouteChampTexteMathLive(this, 4 * i + 1, 'largeur10 inline') : '\\\\ldots'}`\n          setReponse(this, 4 * i + 1, listeDeQuestions1[7][1])\n          texteCorr += `<br><br> ${numAlpha(0)} ${listeDeQuestions1[4][0]} $ ${texNombre(listeDeQuestions1[4][1])}$`\n          texteCorr += `<br><br> ${numAlpha(1)} ${listeDeQuestions1[7][0]} $ ${texNombre(listeDeQuestions1[7][1])}$`\n          break\n      }\n      shuffle(listeDeQuestions2)\n\n      texte += `<br><br> ${numAlpha(2)} ${listeDeQuestions2[0][0]} ${this.interactif ? ajouteChampTexteMathLive(this, 4 * i + 2, 'largeur10 inline') : '\\\\ldots'}`\n      setReponse(this, 4 * i + 2, listeDeQuestions2[0][1])\n      texte += `<br><br> ${numAlpha(3)} ${listeDeQuestions2[1][0]} ${this.interactif ? ajouteChampTexteMathLive(this, 4 * i + 3, 'largeur10 inline') : '\\\\ldots'}`\n      setReponse(this, 4 * i + 3, listeDeQuestions2[1][1])\n\n      texteCorr += `<br><br> ${numAlpha(2)} ${listeDeQuestions2[0][0]} $ ${texNombre(listeDeQuestions2[0][1])}$`\n      texteCorr += `<br><br> ${numAlpha(3)} ${listeDeQuestions2[1][0]} $ ${texNombre(listeDeQuestions2[1][1])}$`\n\n      if (this.questionJamaisPosee(i, a, b, q)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","ValeurApprocheeDivisionDecimale","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","texte","texteCorr","i","cpt","k1","choice","k2","a","b","q","arrondi","texNombre","listeDeQuestions1","Math","floor","round","listeDeQuestions2","randint","numAlpha","interactif","ajouteChampTexteMathLive","setReponse","shuffle","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}