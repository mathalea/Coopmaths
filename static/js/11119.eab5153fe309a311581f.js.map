{"version":3,"file":"js/11119.eab5153fe309a311581f.js","mappings":"8QAIO,MAAMA,EAAQ,qDACRC,GAAkB,EAClBC,EAAiB,WACjBC,GAAW,EACXC,EAAU,aAQR,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKC,YAAc,EAEnBD,KAAKE,OAAS,EACdF,KAAKG,WAAa,EAClBH,KAAKI,gBAAkB,IACvBJ,KAAKK,MAAQ,GACbL,KAAKM,0BAA4B,CAAC,4BAA6B,EAAG,qEAClEN,KAAKO,IAAM,EAEXP,KAAKQ,gBAAkB,SAAUC,GAK/B,IAAIC,EAJJV,KAAKW,eAAiB,GACtBX,KAAKY,eAAiB,GACtBZ,KAAKa,iBAAmB,GACxBb,KAAKO,IAAMO,SAASd,KAAKO,KAGvBG,EADe,IAAbV,KAAKO,IACuB,CAAC,QACT,IAAbP,KAAKO,IACgB,CAAC,QAED,CAAC,OAAQ,QAEzCG,GAA8BK,EAAAA,EAAAA,KAAkBL,EAA6BV,KAAKC,aAClF,MAEMe,GAAqBD,EAAAA,EAAAA,KAFM,CAAC,QAAS,UAAW,YAEiBf,KAAKC,aAC5E,IAAK,IAAWgB,EAAOC,EAAyBC,EAAMC,EAAGC,EAAOC,EAASC,EAAYC,EAAUC,EAAtFC,EAAI,EAAqBC,EAAW,EAA4DC,EAAM,EAAGF,EAAI1B,KAAKC,aAAe2B,EAAM,IAAK,CACnJ,GAAuC,SAAnClB,EAA4BgB,GAAe,CAE7C,OADAN,GAAIS,EAAAA,EAAAA,KAAQ,EAAG,IAAK,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC9Eb,EAAmBU,IACzB,IAAK,QACHP,EAAO,YACPG,GAAUQ,EAAAA,EAAAA,KAAeC,KAAKC,KAAKZ,GAAI,GACvCI,GAAWM,EAAAA,EAAAA,KAAeC,KAAKE,MAAMF,KAAKC,KAAKZ,IAAK,GACpDK,GAAWK,EAAAA,EAAAA,KAAeC,KAAKG,KAAKH,KAAKC,KAAKZ,IAAK,IACnDe,EAAAA,EAAAA,IAAWnC,KAAM2B,GAAUS,EAAAA,EAAAA,KAAQL,KAAKC,KAAKZ,GAAI,IACjDC,EAAQ,EACR,MACF,IAAK,UACHF,EAAO,aACPG,GAAUQ,EAAAA,EAAAA,KAAeC,KAAKC,KAAKZ,GAAI,GACvCI,GAAWM,EAAAA,EAAAA,KAAeC,KAAKE,MAAqB,GAAfF,KAAKC,KAAKZ,IAAW,GAAI,GAC9DK,GAAWK,EAAAA,EAAAA,KAAeC,KAAKG,KAAoB,GAAfH,KAAKC,KAAKZ,IAAW,GAAI,IAC7De,EAAAA,EAAAA,IAAWnC,KAAM2B,GAAUS,EAAAA,EAAAA,KAAQL,KAAKC,KAAKZ,GAAI,IACjDC,EAAQ,EACR,MACF,IAAK,WACHF,EAAO,cACPG,GAAUQ,EAAAA,EAAAA,KAAeC,KAAKC,KAAKZ,GAAI,GACvCI,GAAWM,EAAAA,EAAAA,KAAeC,KAAKE,MAAqB,IAAfF,KAAKC,KAAKZ,IAAY,IAAK,GAChEK,GAAWK,EAAAA,EAAAA,KAAeC,KAAKG,KAAoB,IAAfH,KAAKC,KAAKZ,IAAY,IAAK,IAC/De,EAAAA,EAAAA,IAAWnC,KAAM2B,GAAUS,EAAAA,EAAAA,KAAQL,KAAKC,KAAKZ,GAAI,IACjDC,EAAQ,EAGcE,EAAtBD,IAAYE,EAAuBC,EACrBD,EACbxB,KAAKqC,YAGRpB,EAAS,wCAAuCG,OAAOD,YACvDF,IAASqB,EAAAA,EAAAA,IAAyBtC,KAAM2B,EAAU,qBAHlDV,EAAS,oBAAmBG,OAAOD,kCAAqCA,UAK1ED,EAAa,WAAUE,eAAcU,EAAAA,EAAAA,KAAeC,KAAKC,KAAKZ,GAAI,WAClEF,GAAc,OAAMM,QAAcM,EAAAA,EAAAA,KAAeC,KAAKC,KAAKZ,GAAI,QAAQK,UACvEP,GAAc,QAAMY,EAAAA,EAAAA,KAAeC,KAAKC,KAAKZ,GAAI,2BAA2BE,cAAoBC,UAChGL,GAAc,kBAAiBC,qBAAwBC,YAAYE,UACvB,SAAnCZ,EAA4BgB,KACrCN,GAAIS,EAAAA,EAAAA,KAAQ,EAAG,IAAK,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACtFL,EAAWO,KAAKE,MAAMF,KAAKC,KAAKZ,IAChCK,EAAWM,KAAKG,KAAKH,KAAKC,KAAKZ,IAC/BH,EAAS,mDAAkDG,sCACvDpB,KAAKqC,aACPpB,IAASqB,EAAAA,EAAAA,IAAyBtC,KAAM2B,EAAU,oBAClDV,GAAU,cAAaG,SACvBH,IAASqB,EAAAA,EAAAA,IAAyBtC,KAAM2B,EAAW,EAAG,qBACtDQ,EAAAA,EAAAA,IAAWnC,KAAM2B,EAAUH,IAC3BW,EAAAA,EAAAA,IAAWnC,KAAM2B,EAAW,EAAGF,IAEjCP,EAAa,IAAGM,SAAgBA,GAAY,UAAUC,SAAgBA,GAAY,UAClFP,GAAc,OAAMM,GAAY,OAAOJ,OAAOK,GAAY,UAC1DP,GAAc,gBAAeM,GAAY,eAAeJ,eAAeK,GAAY,WACnFP,GAAc,UAASM,cAAqBJ,QAAQK,QAEV,IAAxCzB,KAAKY,eAAe2B,QAAQtB,KAC1BuB,EAAAA,GAAAA,QACqC,SAAnC9B,EAA4BgB,GAC9B1B,KAAKW,eAAee,GAAK,CACvBe,OAAS,iEAAgErB,OAAOD,kCAAqCA,eACrHuB,aAAc,CACZ,CACEvB,KAAM,UACNuB,aAAc,CAAC,CACbzB,MAAOC,EACPyB,OAAQ,KAGZ,CACExB,KAAM,SACNuB,aAAc,CAAC,CACbzB,MAAO,GACP0B,OAAQ,GACRrB,QAAS,CACPL,MAAQ,sBAAqBG,OAAOD,WACpCyB,OAAQC,WAAWvB,EAAQwB,WAAW,IAAK,MAC3CC,MAAO,CACLC,QAAQC,EAAAA,EAAAA,KAAoCJ,WAAWvB,EAAQwB,WAAW,IAAK,OAASzB,EACxF6B,SAAU7B,EACV8B,OAAO,EACPC,OAAQ,SAQpBpD,KAAKW,eAAee,GAAK,CACvBe,OAAS,mDAAkDrB,sCAC3DsB,aAAc,CACZ,CACEvB,KAAM,UACNuB,aAAc,CAAC,CACbzB,MAAOC,EACPyB,OAAQ,KAGZ,CACExB,KAAM,SACNuB,aAAc,CAAC,CACbzB,MAAO,GACP0B,OAAQ,GACRrB,QAAS,CACPL,MAAO,mBACP2B,OAAQpB,EACRuB,MAAO,CACLC,QAAQC,EAAAA,EAAAA,KAAoCzB,GAC5C0B,SAAU,EACVC,OAAO,EACPC,OAAQ,OAKhB,CACEjC,KAAM,SACNuB,aAAc,CAAC,CACbzB,MAAO,GACP0B,OAAQ,GACRrB,QAAS,CACPL,MAAO,mBACP2B,OAAQnB,EACRsB,MAAO,CACLC,QAAQC,EAAAA,EAAAA,KAAoCxB,GAC5CyB,SAAU,EACVC,OAAO,EACPC,OAAQ,UASxBpD,KAAKY,eAAeyC,KAAKpC,GACzBjB,KAAKa,iBAAiBwC,KAAKnC,GACY,SAAnCR,EAA4BgB,GAC9BC,IAEAA,GAAY,EAGdD,KAEFE,KAEF0B,EAAAA,EAAAA,KAAwBtD,S,gBC7Lb,SAASD,IAItBC,KAAKP,MAAQ,GACbO,KAAKuD,YAAa,EAclBvD,KAAKwD,SAAW,GAChBxD,KAAKyD,mBAAqB,GAC1BzD,KAAK0D,aAAe,GACpB1D,KAAKY,eAAiB,GACtBZ,KAAKa,iBAAmB,GACxBb,KAAK2D,QAAU,GACf3D,KAAK4D,kBAAoB,GACzB5D,KAAKW,eAAiB,GACtBX,KAAK6D,sBAAwB,GAK7B7D,KAAK8D,QAAU,EACf9D,KAAK+D,YAAc,EAKnB/D,KAAKgE,mBAAoB,EACzBhE,KAAKiE,cAAgB,GACrBjE,KAAKkE,oBAAqB,EAC1BlE,KAAKmE,uBAAwB,EAC7BnE,KAAKE,OAAS,EACdF,KAAKG,WAAa,EAClBH,KAAKoE,kBAAmB,EACxBpE,KAAKqE,sBAAuB,EAC5BrE,KAAKsE,mBAAoB,EACzBtE,KAAKuE,uBAAwB,EAM7BvE,KAAKwE,QAAS,EACdxE,KAAKI,gBAAkB,GAKvBJ,KAAKC,YAAc,GACnBD,KAAKyE,+BAAgC,EACrCzE,KAAK0E,qBAAsB,EAC3B1E,KAAKK,MAAQ,GAEbL,KAAKqC,YAAa,EAClBrC,KAAK2E,uBAAwB,EAE7B3E,KAAKM,2BAA4B,EACjCN,KAAK4E,uBAAwB,EAC7B5E,KAAK6E,6BAA8B,EAEnC7E,KAAK8E,4BAA6B,EAClC9E,KAAK+E,wBAAyB,EAC9B/E,KAAKgF,8BAA+B,EAEpChF,KAAKiF,4BAA6B,EAClCjF,KAAKkF,wBAAyB,EAC9BlF,KAAKmF,8BAA+B,EAMpCnF,KAAKoF,cAAe,EAMpBpF,KAAKqF,eAAiB,GAEtBrF,KAAKQ,gBAAkB,SAAUC,KAQjCT,KAAKsF,oBAAsB,SAAU5D,KAAM6D,GAC/B,IAAN7D,IAAS1B,KAAKqF,eAAiB,IACnC,IAAIG,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAI3F,KAAKqF,eAAe9C,QAAQiD,IAAmB,KAGjDxF,KAAKqF,eAAehC,KAAKmC,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/4e/4G20-6.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, arrondiVirgule, randint, arrondi, nombreDeChiffresDansLaPartieEntiere } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Encadrer une racine carrée et en donner un arrondi'\nexport const interactifReady = true // pour définir qu'exercice peut s'afficher en mode interactif.\nexport const interactifType = 'mathLive'\nexport const amcReady = true // pour définir que l'exercice peut servir à AMC\nexport const amcType = 'AMCHybride'\n\n/**\n * Encadrer une racine carrée et en donner une valeur approchée\n * @author Guillaume Valmont\n * Référence 4G20-6\n * Date de publication : 08/08/2021\n*/\nexport default function CalculValeurApprocheeRacineCarree () {\n  Exercice.call(this)\n  this.nbQuestions = 6\n\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.tailleDiaporama = 100\n  this.video = ''\n  this.besoinFormulaireNumerique = ['Avec ou sans calculatrice', 3, '1 : Avec calculatrice\\n2 : Sans calculatrice\\n3 : L\\'un ou l\\'autre']\n  this.sup = 3\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.autoCorrection = []\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.sup = parseInt(this.sup)\n    let listeAvecOuSansCalculatrice\n    if (this.sup === 1) {\n      listeAvecOuSansCalculatrice = ['avec']\n    } else if (this.sup === 2) {\n      listeAvecOuSansCalculatrice = ['sans']\n    } else {\n      listeAvecOuSansCalculatrice = ['avec', 'sans']\n    }\n    listeAvecOuSansCalculatrice = combinaisonListes(listeAvecOuSansCalculatrice, this.nbQuestions)\n    const typeQuestionsDisponibles = ['unite', 'dixieme', 'centieme']\n\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, indexRep = 0, type, a, nbDec, reponse, pasReponse, reponseG, reponseD, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      if (listeAvecOuSansCalculatrice[i] === 'avec') {\n        a = randint(2, 300, [4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289])\n        switch (listeTypeQuestions[i]) {\n          case 'unite':\n            type = 'à l\\'unité'\n            reponse = arrondiVirgule(Math.sqrt(a), 0)\n            reponseG = arrondiVirgule(Math.floor(Math.sqrt(a)), 0)\n            reponseD = arrondiVirgule(Math.ceil(Math.sqrt(a)), 0)\n            setReponse(this, indexRep, arrondi(Math.sqrt(a), 0))\n            nbDec = 0\n            break\n          case 'dixieme':\n            type = 'au dixième'\n            reponse = arrondiVirgule(Math.sqrt(a), 1)\n            reponseG = arrondiVirgule(Math.floor(Math.sqrt(a) * 10) / 10, 1)\n            reponseD = arrondiVirgule(Math.ceil(Math.sqrt(a) * 10) / 10, 1)\n            setReponse(this, indexRep, arrondi(Math.sqrt(a), 1))\n            nbDec = 1\n            break\n          case 'centieme':\n            type = 'au centième'\n            reponse = arrondiVirgule(Math.sqrt(a), 2)\n            reponseG = arrondiVirgule(Math.floor(Math.sqrt(a) * 100) / 100, 2)\n            reponseD = arrondiVirgule(Math.ceil(Math.sqrt(a) * 100) / 100, 2)\n            setReponse(this, indexRep, arrondi(Math.sqrt(a), 2))\n            nbDec = 2\n            break\n        }\n        if (reponse === reponseG) pasReponse = reponseD\n        else pasReponse = reponseG\n        if (!this.interactif) {\n          texte = `Encadrer $\\\\sqrt{${a}}$ ${type} près et en donner un arrondi ${type} près.`\n        } else {\n          texte = `Donner la valeur arrondie de $\\\\sqrt{${a}}$ ${type} près : `\n          texte += ajouteChampTexteMathLive(this, indexRep, 'largeur10 inline')\n        }\n        texteCorr = `$\\\\sqrt{${a}} \\\\simeq ${arrondiVirgule(Math.sqrt(a), 6)}$.<br>`\n        texteCorr += `Or $${reponseG} < ${arrondiVirgule(Math.sqrt(a), 6)} < ${reponseD}$,<br>`\n        texteCorr += `et $${arrondiVirgule(Math.sqrt(a), 6)}$ est plus proche de $${reponse}$ que de $${pasReponse}$.<br>`\n        texteCorr += `Donc l'arrondi ${type} près de $\\\\sqrt{${a}}$ est $${reponse}$.`\n      } else if (listeAvecOuSansCalculatrice[i] === 'sans') {\n        a = randint(2, 300, [4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289])\n        reponseG = Math.floor(Math.sqrt(a))\n        reponseD = Math.ceil(Math.sqrt(a))\n        texte = `Sans utiliser de calculatrice, encadrer $\\\\sqrt{${a}}$ entre deux nombres entiers.<br>`\n        if (this.interactif) {\n          texte += ajouteChampTexteMathLive(this, indexRep, 'largeur10 inline')\n          texte += ` $< \\\\sqrt{${a}} <$ `\n          texte += ajouteChampTexteMathLive(this, indexRep + 1, 'largeur10 inline')\n          setReponse(this, indexRep, reponseG)\n          setReponse(this, indexRep + 1, reponseD)\n        }\n        texteCorr = `$${reponseG}^2 = ${reponseG ** 2}$ et $${reponseD}^2 = ${reponseD ** 2}$.<br>`\n        texteCorr += `Or $${reponseG ** 2} < ${a} < ${reponseD ** 2}$,<br>`\n        texteCorr += `donc $\\\\sqrt{${reponseG ** 2}} < \\\\sqrt{${a}} < \\\\sqrt{${reponseD ** 2}}$,<br>`\n        texteCorr += `enfin $${reponseG} < \\\\sqrt{${a}} < ${reponseD}$.`\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        if (context.isAmc) {\n          if (listeAvecOuSansCalculatrice[i] === 'avec') {\n            this.autoCorrection[i] = {\n              enonce: `A l'aide de la calculatrice, donner un encadrement de $\\\\sqrt{${a}}$ ${type} près puis la valeur arrondie ${type} près: \\\\\\\\`,\n              propositions: [\n                {\n                  type: 'AMCOpen',\n                  propositions: [{\n                    texte: texteCorr,\n                    statut: 3\n                  }]\n                },\n                {\n                  type: 'AMCNum',\n                  propositions: [{\n                    texte: '',\n                    statut: '',\n                    reponse: {\n                      texte: `arrondi de $\\\\sqrt{${a}}$ ${type} près :`,\n                      valeur: parseFloat(reponse.replaceAll(',', '.')),\n                      param: {\n                        digits: nombreDeChiffresDansLaPartieEntiere(parseFloat(reponse.replaceAll(',', '.'))) + nbDec,\n                        decimals: nbDec,\n                        signe: false,\n                        approx: 0\n                      }\n                    }\n                  }]\n                }\n              ]\n            }\n          } else {\n            this.autoCorrection[i] = {\n              enonce: `Sans utiliser de calculatrice, encadrer $\\\\sqrt{${a}}$ entre deux nombres entiers.\\\\\\\\`,\n              propositions: [\n                {\n                  type: 'AMCOpen',\n                  propositions: [{\n                    texte: texteCorr,\n                    statut: 3\n                  }]\n                },\n                {\n                  type: 'AMCNum',\n                  propositions: [{\n                    texte: '',\n                    statut: '',\n                    reponse: {\n                      texte: 'Entier inférieur',\n                      valeur: reponseG,\n                      param: {\n                        digits: nombreDeChiffresDansLaPartieEntiere(reponseG),\n                        decimals: 0,\n                        signe: false,\n                        approx: 0\n                      }\n                    }\n                  }]\n                },\n                {\n                  type: 'AMCNum',\n                  propositions: [{\n                    texte: '',\n                    statut: '',\n                    reponse: {\n                      texte: 'Entier supérieur',\n                      valeur: reponseD,\n                      param: {\n                        digits: nombreDeChiffresDansLaPartieEntiere(reponseD),\n                        decimals: 0,\n                        signe: false,\n                        approx: 0\n                      }\n                    }\n                  }]\n                }\n              ]\n            }\n          }\n        }\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        if (listeAvecOuSansCalculatrice[i] === 'avec') {\n          indexRep++\n        } else {\n          indexRep += 2\n        }\n\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","CalculValeurApprocheeRacineCarree","Exercice","this","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","besoinFormulaireNumerique","sup","nouvelleVersion","numeroExercice","listeAvecOuSansCalculatrice","autoCorrection","listeQuestions","listeCorrections","parseInt","combinaisonListes","listeTypeQuestions","texte","texteCorr","type","a","nbDec","reponse","pasReponse","reponseG","reponseD","i","indexRep","cpt","randint","arrondiVirgule","Math","sqrt","floor","ceil","setReponse","arrondi","interactif","ajouteChampTexteMathLive","indexOf","context","enonce","propositions","statut","valeur","parseFloat","replaceAll","param","digits","nombreDeChiffresDansLaPartieEntiere","decimals","signe","approx","push","listeQuestionsToContenu","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}