{"version":3,"file":"js/99058.cdfdab462c4846c95f8a.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6D13.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import { context } from '../../modules/context'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif'\nimport { calcul, listeQuestionsToContenu, randint, sp } from '../../modules/outils'\nimport Exercice from '../Exercice'\nexport const titre = 'Conversion en heures et minutes'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\nexport default function ConversionHeuresMinutes () {\n  Exercice.call(this)\n  this.nbQuestions = 5\n  this.interactif = true\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    for (let i = 0, cpt = 0, a, b, d, texte, texteCorr; i < this.nbQuestions && cpt < 50;) {\n      a = randint(2, 4)\n      b = randint(10, 59)\n      d = calcul(a * 60 + b)\n      texte = `Convertir $${d}$ minutes en heures(h) et minutes(min) :` +\n     ajouteChampTexteMathLive(this, 2 * i, 'largeur10 inline', { texte: sp(5), texteApres: ' h ' }) +\n      ajouteChampTexteMathLive(this, 2 * i + 1, 'largeur10 inline', { texte: sp(5), texteApres: ' min ' })\n      texteCorr = `$${d} = ${a} \\\\times 60 + ${b}$ donc $${d}$ minutes = ${a}h ${b}min`\n      if (this.questionJamaisPosee(i, a, b, d)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        if (context.isAmc) {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            options: { multicols: true },\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: texteCorr,\n                  statut: '',\n                  reponse: {\n                    texte: 'Heure(s)',\n                    valeur: a,\n                    param: {\n                      digits: 1,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: '',\n                  statut: '',\n                  reponse: {\n                    texte: 'Minute(s)',\n                    valeur: b,\n                    param: {\n                      digits: 2,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n        } else {\n          setReponse(this, 2 * i, a)\n          setReponse(this, 2 * i + 1, b)\n        }\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","ConversionHeuresMinutes","Exercice","this","nbQuestions","interactif","nouvelleVersion","listeQuestions","listeCorrections","a","b","d","texte","texteCorr","i","cpt","randint","calcul","ajouteChampTexteMathLive","sp","texteApres","questionJamaisPosee","push","context","autoCorrection","enonce","options","multicols","propositions","type","statut","reponse","valeur","param","digits","decimals","signe","approx","setReponse","listeQuestionsToContenu","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}