{"version":3,"file":"js/60832.11b807cb653ad771b28e.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/5e/can5P02.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { calcul, choice, texNombrec, randint, texNombre, texFractionReduite, texteEnCouleur, simplificationDeFractionAvecEtapes } from '../../../modules/outils.js'\nexport const titre = 'Déterminer (ou calculer avec) un pourcentage de proportion'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence\n * Date de publication\n*/\nexport const dateDeModifImportante = '19/12/2021'\nexport default function PoucentageP2 () {\n  Exercice.call(this)\n  this.typeExercice = 'simple'\n  this.nbQuestions = 1\n  this.tailleDiaporama = 1\n  this.formatChampTexte = 'largeur15 inline'\n  this.nouvelleVersion = function () {\n    const listeCarac = [['filles', 'Elles'], ['garçons', 'Ils'], ['sportifs', 'Ils'], ['musiciens', 'Ils']]\n    const listeCarac2 = [['maisons', 'T2'], ['maisons', 'T3'], ['appartements', 'T2'], ['appartements', 'T3']\n    ]\n    let a, b, c, n, d, carac, carac2, choix\n    switch (choice(['a', 'b', 'c', 'd'])) { //\n      case 'a':\n        if (choice([true, false])) {\n          a = choice([20, 40])\n          b = choice([4, 8, 16])\n          carac = choice(listeCarac)\n          n = carac[0]\n          d = carac[1]\n          this.question = ` Dans un groupe de $${a}$ enfants, $${b}$  sont des ${n}.<br>\n      ${d} représentent ..... % du groupe.`\n          this.optionsChampTexte = { texteApres: '%' }\n          this.correction = `La proportion de ${n} est donnée par $\\\\dfrac{${b}}{${a}}=${texFractionReduite(b, a)}=${texNombrec(b / a)}$, soit $${texNombrec((b / a) * 100)}$%.`\n          this.reponse = calcul((b / a) * 100)\n        } else {\n          a = choice([30, 60])\n          b = choice([6, 12, 18, 24])\n          carac = choice(listeCarac)\n          n = carac[0]\n          d = carac[1]\n          this.question = ` Dans un groupe de $${a}$ enfants, $${b}$  sont des ${n}.<br>\n          ${d} représentent ..... % du groupe.`\n          this.optionsChampTexte = { texteApres: '%' }\n          this.correction = `La proportion de ${n} est donnée par $\\\\dfrac{${b}}{${a}}=${texFractionReduite(b, a)}=${texNombrec(b / a)}$, soit $${texNombrec((b / a) * 100)}$%.`\n          this.reponse = calcul((b / a) * 100)\n        }\n        break\n      case 'b':\n        a = calcul(randint(1, 5) * 1000)\n        b = calcul(randint(1, 8) * 10)\n        c = calcul(randint(1, 8) * 10)\n        carac2 = choice(listeCarac2)\n        n = carac2[0]\n        d = carac2[1]\n        this.question = `Une ville compte $${texNombre(a)}$ logements. Parmi ces logements, $${b}$ %  sont des ${n} et $${c}$ % de ceux-ci sont des ${d}.<br>\n        Quel est le nombre de ${d} dans cette ville ?`\n        this.optionsChampTexte = { texteApres: '' }\n        this.correction = `Les ${n}  représentent $${b}$ %  des logements.<br>\n        Il y en a donc : $${texNombrec(b / 100)}\\\\times ${texNombre(a)}=${texNombrec(b * a / 100)}$.<br>\n        Dans cette ville, il y a  $${texNombrec(b * a / 100)}$ ${n}.<br>\n        Parmi ces ${n}, il y a $${c}$ % de ${d}.<br>\n        $${c}$ % de $${texNombrec(b * a / 100)}=${texNombrec(c / 100)}\\\\times ${b * a / 100}=${texNombrec(c * b * a / 10000)}$.<br>\n        Il y a donc $${texNombrec(c * b * a / 10000)}$ ${n} de type ${d} dans cette ville.\n        `\n        this.correction += texteEnCouleur(`\n        <br> Mentalement : <br>\n                Prendre $10$ % d'une quantité revient à la diviser par $10$. <br>\n       Pour calculer $20$ %, $30$ %, $40$ %, .... d'une quantité, on \n       commence par calculer  $10$ % de cette quantité en la divisant par $10$, puis on multiplie \n       par $2$ ce résultat si on veut en calculer $20$ %, par $3$ si on veut en calculer $30$ %, ....<br>\n                           `)\n        this.reponse = calcul(c * b * a / 10000)\n        break\n\n      case 'c':\n\n        a = calcul(randint(1, 12) * 10)\n        b = calcul(a * randint(1, 6) / 10)\n        c = (b / a) * 100\n        choix = choice([true, false])\n        this.question = `Le prix d'un article coûtant $${a}$ euros ${choix ? 'baisse' : 'augmente'} de $${b}$ euros.<br>\n          Quel est le pourcentage ${choix ? 'de réduction' : 'd’augmentation'} de ce prix ?`\n        this.optionsChampTexte = { texteApres: '%' }\n        this.correction = `${choix ? 'La réduction' : 'L’augmentation'} est $${b}$ euros sur un total de $${a}$ euros.<br>\n          Le pourcentage  ${choix ? 'de baisse' : 'd’augmentation'} est donné par le quotient : $\\\\dfrac{${b}}{${a}}${simplificationDeFractionAvecEtapes(b, a)}=${texNombrec(b / a)}= ${texNombrec((b / a) * 100)}\\\\%$.\n          `\n        this.correction += texteEnCouleur(`<br> Mentalement : <br>\n        Calculez $10 \\\\%$ du prix. <br>${choix ? 'La réduction' : 'L’augmentation'} est un multiple de $10 \\\\%$.\n             `)\n        this.reponse = c\n\n        break\n      case 'd':\n\n        a = choice([20, 25, 10, 50])\n        b = randint(10, 30)\n        choix = choice([true, false])\n        this.question = ` Une ${choix ? ' réduction' : 'augmentation'} de $${a}~\\\\%$  d'un article entraîne une ${choix ? 'réduction' : 'augmentation'} du prix de $${b}$ €.<br>\n          Quel était le prix de cet article avant ${choix ? '  la réduction' : 'l’augmentation'} ?  `\n        this.optionsChampTexte = { texteApres: '€' }\n        if (a === 25) {\n          this.correction = ` $25~\\\\%$ du prix représente $${b}$ €, donc $100~\\\\%$ du prix représente $4$ fois plus que $${b}$ € (car $4\\\\times 25=100$).<br>\n        Le prix de l'article était  donc : $4\\\\times${b}=${4 * b}$ €. `\n        }\n        if (a === 20) {\n          this.correction = ` $20~\\\\%$ du prix représente $${b}$ €, donc $100~\\\\%$ du prix représente $5$ fois plus que $${b}$ € (car $5\\\\times 20=100$).<br>\n          Le prix de l'article était donc : $5\\\\times${b}=${5 * b}$ €.  `\n        }\n        if (a === 10) {\n          this.correction = ` $10~\\\\%$ du prix représente $${b}$ €, donc $100~\\\\%$ du prix représente $10$ fois plus que $${b}$ € (car $10\\\\times 10=100$).<br>\n          Le prix de l'article était donc : $10\\\\times${b}=${10 * b}$ €.  `\n        }\n        if (a === 50) {\n          this.correction = ` $50~\\\\%$ du prix représente $${b}$ €, donc $100~\\\\%$ du prix représente $2$ fois plus que $${b}$ € (car $2\\\\times 50=100$).<br>\n           Le prix de l'article était donc : $2\\\\times${b}=${2 * b}$ €.  `\n        }\n        this.reponse = calcul(100 * b / a)\n\n        break\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","dateDeModifImportante","PoucentageP2","typeExercice","formatChampTexte","listeCarac","listeCarac2","a","b","c","n","d","carac","carac2","choix","choice","question","optionsChampTexte","texteApres","correction","texFractionReduite","texNombrec","reponse","calcul","randint","texNombre","texteEnCouleur","simplificationDeFractionAvecEtapes"],"sourceRoot":""}