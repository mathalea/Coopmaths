{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C21.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["amcReady","amcType","titre","Exercice_additionner_ou_soustraire_des_fractions","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","nouvelleVersion","type_de_questions_disponibles","qcm","listeQuestions","listeCorrections","choice","listeTypeDeQuestions","combinaisonListes","liste_de_plus_ou_moins","a","b","c","d","k","k1","k2","num","den","texte","texteCorr","type_de_questions","i","plus_ou_moins","liste_couples_de_denominateurs","couples_de_denominateurs","ppcm","randint","pgcd","texFraction","miseEnEvidence","calcul","ecritureNombreRelatif","ecritureParentheseSiNegatif","n","simplificationDeFractionAvecEtapes","reponse","fractionSimplifiee","push","substring","length","digits","toString","decimals","signe","exposant_nb_chiffres","exposant_signe","approx","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"2MAKO,MAAMA,GAAW,EACXC,EAAU,EAEVC,EAAQ,2CAYN,SAASC,IACvBC,eAAcC,MACdA,KAAKC,IAAM,EACXD,KAAKE,MAAO,EACZF,KAAKH,MAAQA,EACbG,KAAKG,SAAW,0EAChBH,KAAKI,QAAU,EACfJ,KAAKK,YAAc,EACnBL,KAAKM,YAAc,EACnBN,KAAKO,WAAa,EAElBP,KAAKQ,gBAAkB,WAItB,IAAIC,EAHJT,KAAKU,IAAI,CAAC,OAAO,GAAG,2CAA2C,EAAE,IACjEV,KAAKW,eAAiB,GACtBX,KAAKY,iBAAmB,GAER,GAAZZ,KAAKC,MACRQ,EAAgC,CAAC,kBAAmB,kBAAmB,kBAAmB,kBAAmB,WAE9F,GAAZT,KAAKC,MACRQ,EAAgC,CAAC,OAAQ,OAAQ,sBAAsBI,SAAO,CAAC,kBAAmB,oBAAqB,WAExH,IAAIC,GAAuBC,SAAkBN,EAA+BT,KAAKM,aAC7EU,GAAyBD,SAAkB,CAAC,IAAK,IAAK,IAAK,KAAMf,KAAKM,aAC1E,IAAK,IAAWW,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAIC,EAAIC,EAAKC,EAAKC,EAAOC,EAAWC,EAA1DC,EAAI,EAAyEA,EAAI7B,KAAKM,YAAauB,IAAK,CAChH,IAAIC,EAAgBd,EAAuBa,GAE3C,OADAD,EAAoBd,EAAqBe,GACjCD,GACP,IAAK,OACJ,IAAIG,EAAiC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,KACxHC,GAA2BnB,SAAOkB,IAClClB,SAAO,EAAC,GAAM,KACjBK,EAAIc,EAAyB,GAC7BZ,EAAIY,EAAyB,KAE7Bd,EAAIc,EAAyB,GAC7BZ,EAAIY,EAAyB,IAE9BV,GAAKW,SAAKf,EAAGE,GAAKF,EAClBK,GAAKU,SAAKf,EAAGE,GAAKA,EAClB,MAED,IAAK,qBAGJ,IAFAF,GAAIgB,SAAQ,EAAG,GACfd,GAAIc,SAAQ,EAAG,GACM,IAAdC,SAAKjB,EAAGE,IACdF,GAAIgB,SAAQ,EAAG,GACfd,GAAIc,SAAQ,EAAG,GAEhBZ,GAAKW,SAAKf,EAAGE,GAAKF,EAClBK,GAAKU,SAAKf,EAAGE,GAAKA,EAClB,MAED,IAAK,kBACJF,GAAIgB,SAAQ,EAAG,GACfb,GAAIa,SAAQ,EAAG,IACfd,EAAIF,EAAIG,EACR,MAED,IAAK,kBACJD,GAAIc,SAAQ,EAAG,GACfb,GAAIa,SAAQ,EAAG,IACfhB,EAAIE,EAAIC,EAWV,GAPAJ,GAAIiB,SAAQ,EAAG,EAAG,CAAChB,IACnBC,GAAIe,SAAQ,EAAG,EAAG,CAACd,IACfpB,KAAKE,OACRe,IAAQJ,SAAO,EAAE,EAAG,IACpBM,IAAQN,SAAO,EAAE,EAAG,MAGhBb,KAAKE,MAAyB,KAAjB4B,GAAwBb,EAAIC,EAAIC,EAAIC,EAAG,EACvDH,EAAGC,EAAGC,EAAGC,GAAK,CAACD,EAAGC,EAAGH,EAAGC,GACzBI,GAAKW,SAAKf,EAAGE,GAAKF,EAClBK,GAAKU,SAAKf,EAAGE,GAAKA,EACO,mBAArBQ,GACHA,EAAoB,kBACpBP,EAAIH,EAAIE,GACuB,mBAArBQ,IACVA,EAAoB,kBACpBP,EAAID,EAAIF,GA8BV,GA1BAQ,EAAS,KAAGU,SAAYnB,EAAGC,KAAKY,KAAgBM,SAAYjB,EAAGC,OAC/DO,EAAa,KAAGS,SAAYnB,EAAGC,KAAKY,KAAgBM,SAAYjB,EAAGC,KAG1C,QAArBQ,GAAoD,sBAArBA,IAClCD,GAAc,KAAGS,SAAYnB,GAAIoB,QAAe,WAAaf,GAAKJ,GAAImB,QAAe,WAAaf,MAAOQ,KAAgBM,SAAYjB,GAAIkB,QAAe,WAAad,GAAKH,GAAIiB,QAAe,WAAad,MAC1MC,GAAMc,SAAOrB,EAAIK,EAAKQ,GAAgBS,SAAsBpB,EAAII,IAChEE,EAAMP,EAAII,EACVK,GAAc,KAAGS,SAAYnB,EAAIK,EAAKQ,GAAgBU,SAA4BrB,EAAII,GAAKE,MAInE,mBAArBG,IACHD,GAAc,KAAGS,SAAYnB,GAAIoB,QAAe,WAAahB,GAAIH,GAAImB,QAAe,WAAahB,MAAMS,KAAgBM,SAAYjB,EAAGC,KACtII,GAAMc,SAAOrB,EAAII,EAAIS,GAAgBS,SAAsBpB,IAC3DM,EAAMP,EAAIG,EACVM,GAAc,KAAGS,SAAYnB,EAAII,EAAIS,GAAgBU,SAA4BrB,GAAIM,MAG7D,mBAArBG,IACHD,GAAc,KAAGS,SAAYnB,EAAGC,KAAKY,KAAgBM,SAAYjB,GAAIkB,QAAe,WAAahB,GAAID,GAAIiB,QAAe,WAAahB,MACrIG,GAAMc,SAAOrB,EAAIa,GAAgBS,SAAsBpB,EAAIE,IAC3DI,EAAMP,EACNS,GAAc,KAAGS,SAAYnB,EAAIa,GAAgBU,SAA4BrB,EAAIE,GAAII,MAG7D,UAArBG,EAA+B,CAClCX,GAAIiB,SAAQ,EAAG,GACfhB,GAAIgB,SAAQ,EAAG,EAAG,CAACjB,IACnB,IAAIwB,GAAIP,SAAQ,EAAG,GACflC,KAAKE,OACRe,IAAQJ,SAAO,EAAE,EAAG,IACpB4B,IAAQ5B,SAAO,EAAE,EAAG,MAEjBA,SAAO,EAAC,GAAM,MAEZb,KAAKE,MAAyB,KAAjB4B,GAAwBW,EAAIxB,EAAIC,IACjDuB,GAAIP,SAAQ,EAAG,IAEhBR,EAAS,IAAGe,IAAIX,KAAgBM,SAAYnB,EAAGC,OAC/CS,EAAYD,EACZC,GAAc,KAAGS,SAAYK,GAAIJ,QAAe,WAAanB,IAAImB,QAAenB,MAAMY,KAAgBM,SAAYnB,EAAGC,KACrHS,GAAc,KAAGS,SAAYK,EAAIvB,EAAIY,GAAgBU,SAA4BvB,GAAIC,QAGhFlB,KAAKE,MAAyB,KAAjB4B,GAAwBW,EAAIxB,EAAIC,IACjDuB,GAAIP,SAAQ,EAAG,GACfjB,EAAIwB,EAAIvB,GAAIgB,SAAQ,EAAG,IAExBR,EAAS,KAAGU,SAAYnB,EAAGC,KAAKY,KAAgBU,SAA4BC,OAC5Ed,EAAYD,EACZC,GAAc,KAAGS,SAAYnB,EAAGC,KAAKY,KAAgBM,SAAYK,GAAIJ,QAAe,WAAanB,IAAImB,QAAenB,MACpHS,GAAc,KAAGS,SAAYnB,EAAI,KAAMuB,SAA4BC,EAAIvB,GAAIA,MAE5EM,GAAMc,SAAOG,EAAIvB,EAAIY,GAAgBU,SAA4BvB,IACjEQ,EAAMP,EAEPS,GAAc,KAAGS,SAAYZ,EAAKC,KAClCE,IAAae,SAAmClB,EAAKC,GAAO,IAE5D,IAAIkB,EAAU,CAACnB,KAAIoB,SAAmBpB,EAAIC,GAAK,GAAGA,KAAImB,SAAmBpB,EAAIC,GAAK,IAClFzB,KAAKW,eAAekC,KAAKnB,GACzB1B,KAAKY,iBAAiBiC,KAAKlB,GAC3B3B,KAAKU,IAAI,GAAGmC,KAAK,CACf,aAAYnB,EAAMoB,UAAU,EAAGpB,EAAMqB,OAAS,oDAC/C,CAAC,CAACpB,EAAUgB,EAAQnB,IAAI,GAAG,CAACG,EAAUgB,EAAQlB,IAAI,IAClD,CAAC,CAACC,MAAM,aAAasB,OAAOL,EAAQnB,IAAIyB,WAAWF,OAAOG,SAAS,EAAEC,OAAM,EAAMC,qBAAqB,EAAEC,gBAAe,EAAMC,OAAO,GAAG,CAAC5B,MAAM,eAAesB,OAAOL,EAAQlB,IAAIwB,WAAWF,OAAOG,SAAS,EAAEC,OAAM,EAAMC,qBAAqB,EAAEC,gBAAe,EAAMC,OAAO,OAG9QC,SAAwBvD,OAEzBA,KAAKwD,0BAA4B,CAAC,uBAAwB,EAAG,4DAE7DxD,KAAKyD,6BAA+B,CAAC,+B,6BC7KvB,SAAS1D,IAEtBC,KAAKH,MAAQ,GACbG,KAAKG,SAAW,GAChBH,KAAK0D,mBAAqB,GAC1B1D,KAAKW,eAAiB,GACtBX,KAAKY,iBAAmB,GACxBZ,KAAK2D,aAAe,GACpB3D,KAAK4D,QAAU,GACf5D,KAAK6D,kBAAoB,GACzB7D,KAAKM,YAAc,GACnBN,KAAK8D,OAAS,EACd9D,KAAKO,WAAa,EAClBP,KAAKI,QAAU,EACfJ,KAAKK,YAAc,EACnBL,KAAK+D,QAAS,EAEd/D,KAAKwD,2BAA4B,EACjCxD,KAAKgE,uBAAwB,EAC7BhE,KAAKiE,6BAA8B,EACnCjE,KAAKkE,oBAAqB,EAC1BlE,KAAKmE,uBAAwB,EAC7BnE,KAAKoE,kBAAmB,EACxBpE,KAAKqE,sBAAuB,EAC5BrE,KAAKsE,mBAAoB,EACzBtE,KAAKuE,uBAAwB,EAC7BvE,KAAKwE,+BAAgC,EACrCxE,KAAKyE,qBAAsB,EAC3BzE,KAAK0E,MAAQ,GACb1E,KAAK2E,YAAa,EAClB3E,KAAK4E,gBAAkB,GAMvB5E,KAAK6E,mBAAoB,EACzB7E,KAAKU,KAAM,EACXV,KAAK8E,eAAgB,EACrB9E,KAAK+E,SAAU,EACf/E,KAAKgF,eAAiB,GACtBhF,KAAKiF,sBAAwB,GAC7BjF,KAAKkF,cAAe,EACpBlF,KAAKQ,gBAAkB,SAAU2E,KACjCnF,KAAKoF,cAAgB,G","file":"js/2617.a8990114d6cc53f63cb8.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,ecritureNombreRelatif,ecritureParentheseSiNegatif,pgcd,simplificationDeFractionAvecEtapes,calcul,miseEnEvidence,texFraction,ppcm} from '../../modules/outils.js'\nimport {fractionSimplifiee,texFractionReduite} from '../../modules/outils.js'\n\n\nexport const amcReady = true\nexport const amcType = 6 // type de question AMC\n\nexport const titre = 'Additionner ou soustraire deux fractions'\n\n/**\n* Effectuer la somme ou la différence de deux fractions\n*\n* * Niveau 1 : 4 fois sur 5 un dénominateur est un multiple de l'autre et une fois sur 5 il faut additionner une fraction et un entier\n* * Niveau 2 : 2 fois sur 5, il faut trouver le ppcm, 1 fois sur 5 le ppcm correspond à leur produit, 1 fois sur 5 un dénominateur est multiple de l'autre, 1 fois sur 5 il faut additionner une fraction et un entier\n* * Paramètre supplémentaire : utiliser des nommbres relatifs (par défaut tous les nombres sont positifs)\n* * 2 fois sur 4 il faut faire une soustraction\n* @Auteur Rémi Angot\n* 4C21\n*/\nexport default function Exercice_additionner_ou_soustraire_des_fractions() {\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.sup = 2; // Niveau de difficulté\n\tthis.sup2 = false; // Avec ou sans relatifs\n\tthis.titre = titre;\n\tthis.consigne = \"Calculer et donner le résultat sous la forme d'une fraction simplifiée.\";\n\tthis.spacing = 2;\n\tthis.spacingCorr = 2;\n\tthis.nbQuestions = 5;\n\tthis.nbColsCorr = 1;\n\n\tthis.nouvelleVersion = function () {\n\t\tthis.qcm=['4C21',[],'Additionner ou soustraire deux fractions',6,{}]\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tlet type_de_questions_disponibles;\n\t\tif (this.sup == 1) {\n\t\t\ttype_de_questions_disponibles = ['b_multiple_de_d', 'd_multiple_de_b', 'b_multiple_de_d', 'd_multiple_de_b', 'entier'];\n\t\t}\n\t\tif (this.sup == 2) {\n\t\t\ttype_de_questions_disponibles = ['ppcm', 'ppcm', 'premiers_entre_eux', choice(['b_multiple_de_d', 'd_multiple_de_b']), 'entier'];\n\t\t}\n\t\tlet listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions); // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\t\tlet liste_de_plus_ou_moins = combinaisonListes(['-', '-', '+', '+'], this.nbQuestions);\n\t\tfor (let i = 0, a, b, c, d, k, k1, k2, num, den, texte, texteCorr, type_de_questions; i < this.nbQuestions; i++) {\n\t\t\tlet plus_ou_moins = liste_de_plus_ou_moins[i];\n\t\t\ttype_de_questions = listeTypeDeQuestions[i];\n\t\t\tswitch (type_de_questions) {\n\t\t\t\tcase 'ppcm':\n\t\t\t\t\tlet liste_couples_de_denominateurs = [[6, 9], [4, 6], [8, 12], [9, 12], [10, 15], [10, 25], [6, 21], [12, 30], [6, 8], [50, 75],];\n\t\t\t\t\tlet couples_de_denominateurs = choice(liste_couples_de_denominateurs);\n\t\t\t\t\tif (choice([true, false])) {\n\t\t\t\t\t\tb = couples_de_denominateurs[0];\n\t\t\t\t\t\td = couples_de_denominateurs[1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tb = couples_de_denominateurs[1];\n\t\t\t\t\t\td = couples_de_denominateurs[0];\n\t\t\t\t\t}\n\t\t\t\t\tk1 = ppcm(b, d) / b;\n\t\t\t\t\tk2 = ppcm(b, d) / d;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'premiers_entre_eux':\n\t\t\t\t\tb = randint(2, 9);\n\t\t\t\t\td = randint(2, 9);\n\t\t\t\t\twhile (pgcd(b, d) != 1) {\n\t\t\t\t\t\tb = randint(2, 9);\n\t\t\t\t\t\td = randint(2, 9);\n\t\t\t\t\t}\n\t\t\t\t\tk1 = ppcm(b, d) / b;\n\t\t\t\t\tk2 = ppcm(b, d) / d;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'd_multiple_de_b':\n\t\t\t\t\tb = randint(2, 9);\n\t\t\t\t\tk = randint(2, 11);\n\t\t\t\t\td = b * k;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b_multiple_de_d':\n\t\t\t\t\td = randint(2, 9);\n\t\t\t\t\tk = randint(2, 11);\n\t\t\t\t\tb = d * k;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ta = randint(1, 9, [b]);\n\t\t\tc = randint(1, 9, [d]);\n\t\t\tif (this.sup2) { //si les numérateurs sont relatifs\n\t\t\t\ta = a * choice([-1, 1]);\n\t\t\t\tc = c * choice([-1, 1]);\n\n\t\t\t}\n\t\t\tif (!this.sup2 && plus_ou_moins == '-' && a / b < c / d) { //s'il n'y a pas de relatifs, il faut s'assurer que la soustraction soit positive\n\t\t\t\t[a, b, c, d] = [c, d, a, b]; // on échange les 2 fractions\n\t\t\t\tk1 = ppcm(b, d) / b;\n\t\t\t\tk2 = ppcm(b, d) / d;\n\t\t\t\tif (type_de_questions == 'd_multiple_de_b') {\n\t\t\t\t\ttype_de_questions = 'b_multiple_de_d'; //comme on a échangé les 2 fractions, le type de la question change\n\t\t\t\t\tk = b / d;\n\t\t\t\t} else if (type_de_questions == 'b_multiple_de_d') {\n\t\t\t\t\ttype_de_questions = 'd_multiple_de_b'; //comme on a échangé les 2 fractions, le type de la question change\n\t\t\t\t\tk = d / b;\n\t\t\t\t}\n\t\t\t\tlet echange = true;\n\t\t\t}\n\t\t\ttexte = `$${texFraction(a, b)}${plus_ou_moins}${texFraction(c, d)}=$`;\n\t\t\ttexteCorr = `$${texFraction(a, b)}${plus_ou_moins}${texFraction(c, d)}`;\n\n\t\t\t// a/b(+ou-)c/d = num/den (résultat non simplifié)\n\t\t\tif (type_de_questions == 'ppcm' || type_de_questions == 'premiers_entre_eux') {\n\t\t\t\ttexteCorr += `=${texFraction(a + miseEnEvidence('\\\\times ' + k1), b + miseEnEvidence('\\\\times ' + k1))}${plus_ou_moins}${texFraction(c + miseEnEvidence('\\\\times ' + k2), d + miseEnEvidence('\\\\times ' + k2))}`;\n\t\t\t\tnum = calcul(a * k1 + plus_ou_moins + ecritureNombreRelatif(c * k2));\n\t\t\t\tden = b * k1;\n\t\t\t\ttexteCorr += `=${texFraction(a * k1 + plus_ou_moins + ecritureParentheseSiNegatif(c * k2), den)}`;\n\n\t\t\t}\n\n\t\t\tif (type_de_questions == 'd_multiple_de_b') {\n\t\t\t\ttexteCorr += `=${texFraction(a + miseEnEvidence('\\\\times ' + k), b + miseEnEvidence('\\\\times ' + k))}${plus_ou_moins}${texFraction(c, d)}`;\n\t\t\t\tnum = calcul(a * k + plus_ou_moins + ecritureNombreRelatif(c));\n\t\t\t\tden = b * k;\n\t\t\t\ttexteCorr += `=${texFraction(a * k + plus_ou_moins + ecritureParentheseSiNegatif(c), den)}`;\n\t\t\t}\n\n\t\t\tif (type_de_questions == 'b_multiple_de_d') {\n\t\t\t\ttexteCorr += `=${texFraction(a, b)}${plus_ou_moins}${texFraction(c + miseEnEvidence('\\\\times ' + k), d + miseEnEvidence('\\\\times ' + k))}`;\n\t\t\t\tnum = calcul(a + plus_ou_moins + ecritureNombreRelatif(c * k));\n\t\t\t\tden = b;\n\t\t\t\ttexteCorr += `=${texFraction(a + plus_ou_moins + ecritureParentheseSiNegatif(c * k), den)}`;\n\t\t\t}\n\n\t\t\tif (type_de_questions == \"entier\") {\n\t\t\t\ta = randint(1, 9);\n\t\t\t\tb = randint(2, 9, [a]);\n\t\t\t\tlet n = randint(1, 9);\n\t\t\t\tif (this.sup2) {\n\t\t\t\t\ta = a * choice([-1, 1]);\n\t\t\t\t\tn = n * choice([-1, 1]);\n\t\t\t\t}\n\t\t\t\tif (choice([true, false])) {\n\t\t\t\t\t// n+-a/b\n\t\t\t\t\tif (!this.sup2 && plus_ou_moins == \"-\" && n < a / b) {\n\t\t\t\t\t\tn = randint(5, 9); // max(a/b)=9/2\n\t\t\t\t\t}\n\t\t\t\t\ttexte = `$${n}${plus_ou_moins}${texFraction(a, b)}=$`;\n\t\t\t\t\ttexteCorr = texte;\n\t\t\t\t\ttexteCorr += `$${texFraction(n + miseEnEvidence('\\\\times ' + b), miseEnEvidence(b))}${plus_ou_moins}${texFraction(a, b)}`;\n\t\t\t\t\ttexteCorr += `=${texFraction(n * b + plus_ou_moins + ecritureParentheseSiNegatif(a), b)}`;\n\t\t\t\t} else {\n\t\t\t\t\t// a/b +-n\n\t\t\t\t\tif (!this.sup2 && plus_ou_moins == \"-\" && n > a / b) {\n\t\t\t\t\t\tn = randint(1, 4); // \n\t\t\t\t\t\ta = n * b + randint(1, 9); //(n*b+?)/b-n>0\n\t\t\t\t\t}\n\t\t\t\t\ttexte = `$${texFraction(a, b)}${plus_ou_moins}${ecritureParentheseSiNegatif(n)}=$`;\n\t\t\t\t\ttexteCorr = texte;\n\t\t\t\t\ttexteCorr += `$${texFraction(a, b)}${plus_ou_moins}${texFraction(n + miseEnEvidence('\\\\times ' + b), miseEnEvidence(b))}`;\n\t\t\t\t\ttexteCorr += `=${texFraction(a + '+' + ecritureParentheseSiNegatif(n * b), b)}`;\n\t\t\t\t}\n\t\t\t\tnum = calcul(n * b + plus_ou_moins + ecritureParentheseSiNegatif(a));\n\t\t\t\tden = b;\n\t\t\t}\n\t\t\ttexteCorr += `=${texFraction(num, den)}`;\n\t\t\ttexteCorr += simplificationDeFractionAvecEtapes(num, den) + '$';\t\t\t\n\t\t\t// Pour l'instant pour tester je mets num et den dans reponse\n\t\t\tlet reponse = {num:fractionSimplifiee(num,den)[0],den:fractionSimplifiee(num,den)[1]};\n\t\t\tthis.listeQuestions.push(texte);\n\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\tthis.qcm[1].push([\n\t\t\t\t`Calculer $${texte.substring(1, texte.length - 2)}$ et donner le résultat sous forme irreductible`,\n\t\t\t\t[[texteCorr,reponse.num,3],[texteCorr,reponse.den,3]],\n\t\t\t\t[{texte:'numérateur',digits:reponse.num.toString().length,decimals:0,signe:false,exposant_nb_chiffres:0,exposant_signe:false,approx:0},{texte:'dénominateur',digits:reponse.den.toString().length,decimals:0,signe:false,exposant_nb_chiffres:0,exposant_signe:false,approx:0}]\t\t\t\t\n\t\t\t]);\t\t\t\n\t\t}\n\t\tlisteQuestionsToContenu(this); //Espacement de 2 em entre chaque questions.\n\t};\n\tthis.besoinFormulaireNumerique = ['Niveau de difficulté', 2, \"1 : Un dénominateur multiple de l'autre\\n\\\n2 : Cas général\"];\n\tthis.besoinFormulaire2CaseACocher = ['Avec des nombres relatifs'];\n\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}