/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e__Exercice_conversions_aires_js"],{

/***/ "./src/js/exercices/6e/_Exercice_conversions_aires.js":
/*!************************************************************!*\
  !*** ./src/js/exercices/6e/_Exercice_conversions_aires.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice_conversions_aires)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst Algebrite = __webpack_require__(/*! algebrite */ \"./node_modules/.pnpm/algebrite@1.4.0/node_modules/algebrite/dist/algebrite.js\")\n\n/**\n * Conversions d'aires en utilisant le préfixe pour déterminer la multiplication ou division à faire.\n *\n * Dans la correction, on montre que l'on multiplie ou divisie à 2 reprises par le coefficient donné par le préfixe\n *\n * * 1 : De dam², hm², km² vers m²\n * * 2 : De dm², cm², mm² vers m²\n * * 3 : Conversions en mètres-carrés\n * * 4 : Conversions avec des multiplications ou des divisions\n * * 5 : Conversions avec des ares, des centiares et des hectares\n * * 6 : Un mélange de toutes les conversions\n * * Paramètre supplémentaire : utiliser des nombres décimaux (par défaut tous les nombres sont entiers)\n * @Auteur Rémi Angot\n * Référence 6M23\n */\nfunction Exercice_conversions_aires(niveau = 1) {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.sup = niveau; // Niveau de difficulté de l'exercice\n  this.sup2 = false; // Avec des nombres décimaux ou pas\n  this.titre = \"Conversions d'aires\";\n  this.consigne = \"Compléter\";\n  this.spacing = 2;\n  this.nb_cols_corr = 1;\n\n  this.nouvelle_version = function () {\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n    let prefixe_multi = [\n      [\" da\", \"\\\\times10\\\\times10\", 100],\n      [\" h\", \"\\\\times100\\\\times100\", 10000],\n      [\" k\", \"\\\\times1~000\\\\times1~000\", 1000000],\n    ];\n    let prefixe_div = [\n      [\" d\", \"\\\\div10\\\\div10\", 100],\n      [\" c\", \"\\\\div100\\\\div100\", 10000],\n      [\" m\", \"\\\\div1~000\\\\div1~000\", 1000000],\n    ];\n    let unite = \"m\";\n    let liste_unite = [\"mm\", \"cm\", \"dm\", \"m\", \"dam\", \"hm\", \"km\"];\n    let liste_de_k = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)([0, 1, 2], this.nb_questions);\n    for (let i = 0,\n      a,\n      k,\n      div,\n      resultat,\n      type_de_questions,\n      texte,\n      texte_corr,\n      cpt = 0; i < this.nb_questions && cpt < 50;) {\n      // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      if (this.sup < 6) {\n        type_de_questions = this.sup;\n      } else {\n        type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 5);\n      }\n      // k = randint(0,2); // Choix du préfixe\n      k = liste_de_k[i];\n      if (type_de_questions == 1) {\n        // niveau 1\n        div = false; // Il n'y aura pas de division\n      } else if (type_de_questions == 2) {\n        // niveau 2\n        div = true; // Avec des divisions\n      } else if (type_de_questions == 3) {\n        div = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([true, false]); // Avec des multiplications ou des divisions\n      } else if (type_de_questions == 4) {\n        div = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([true, false]); // Avec des multiplications ou des divisions sans toujours revenir au m^2\n      }\n\n      if (this.sup2) {\n        // Si la case pour les nombres décimaux est cochée\n        a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 19) + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 10, 1),\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 10, 1),\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 100, 2),\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 10 + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) / 100, 2),\n        ]);\n        // XX,X 0,X 0,0X X,XX\n      } else {\n        a = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9),\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) * 10,\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) * 100,\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9) * 10 + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 9),\n        ]);\n        // X, X0, X00, XX\n      }\n\n      if (!div && type_de_questions < 4) {\n        // Si il faut multiplier pour convertir\n        prefixe_multi = [\n          [\" da\", \"\\\\times10\\\\times10\", 100],\n          [\" h\", \"\\\\times100\\\\times100\", 10000],\n          [\" k\", \"\\\\times1~000\\\\times1~000\", 1000000],\n        ]; // On réinitialise cette liste qui a pu être modifiée dans le cas des ares\n        resultat = Algebrite.eval(a * prefixe_multi[k][2]).toString(); // Utilise Algebrite pour avoir le résultat exact même avec des décimaux\n        texte =\n          \"$ \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(prefixe_multi[k][0] + unite) +\n          \"^2\" +\n          \" = \\\\dotfill \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"^2\" +\n          \"$\";\n        texte_corr =\n          \"$ \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(prefixe_multi[k][0] + unite) +\n          \"^2\" +\n          \" =  \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          prefixe_multi[k][1] +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"^2\" +\n          \" = \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(resultat) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"^2\" +\n          \"$\";\n      } else if (div && type_de_questions < 4) {\n        prefixe_div = [\n          [\" d\", \"\\\\div10\\\\div10\", 100],\n          [\" c\", \"\\\\div100\\\\div100\", 10000],\n          [\" m\", \"\\\\div1~000\\\\div1~000\", 1000000],\n        ];\n        k = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1); // Pas de conversions de mm^2 en m^2 avec des nombres décimaux car résultat inférieur à 10e-8\n        resultat = Algebrite.eval(a / prefixe_div[k][2]).toString(); // Attention aux notations scientifiques pour 10e-8\n        texte =\n          \"$ \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(prefixe_div[k][0] + unite) +\n          \"^2\" +\n          \" = \\\\dotfill \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"^2\" +\n          \"$\";\n        texte_corr =\n          \"$ \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(prefixe_div[k][0] + unite) +\n          \"^2\" +\n          \" =  \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          prefixe_div[k][1] +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"^2\" +\n          \" = \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(resultat) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"^2\" +\n          \"$\";\n      } else if (type_de_questions == 4) {\n        let unite1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 3);\n        let ecart = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 2); // nombre de multiplication par 10 pour passer de l'un à l'autre\n        if (ecart > 4 - unite1) {\n          ecart = 4 - unite1;\n        }\n        let unite2 = unite1 + ecart;\n        if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1) > 0) {\n          resultat = Algebrite.eval(a * Math.pow(10, 2 * ecart));\n          texte =\n            \"$ \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite2]) +\n            \"^2\" +\n            \" = \\\\dotfill \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite1]) +\n            \"^2\" +\n            \"$\";\n          texte_corr =\n            \"$ \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite2]) +\n            \"^2\" +\n            \" =  \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            \"\\\\times\" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(Math.pow(10, 2 * ecart)) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite1]) +\n            \"^2\" +\n            \" = \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(resultat) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite1]) +\n            \"^2\" +\n            \"$\";\n        } else {\n          resultat = Algebrite.eval(a / Math.pow(10, 2 * ecart));\n          texte =\n            \"$ \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite1]) +\n            \"^2\" +\n            \" = \\\\dotfill \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite2]) +\n            \"^2\" +\n            \"$\";\n          texte_corr =\n            \"$ \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite1]) +\n            \"^2\" +\n            \" =  \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n            \"\\\\div\" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(Math.pow(10, 2 * ecart)) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite2]) +\n            \"^2\" +\n            \" = \" +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(resultat) +\n            (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(liste_unite[unite2]) +\n            \"^2\" +\n            \"$\";\n        }\n      } else if (type_de_questions == 5) {\n        // Pour type_de_questions==5\n        prefixe_multi = [\n          [\"ha\", 10000],\n          [\"a\", 100],\n        ];\n        k = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1);\n        resultat = Algebrite.eval(a * prefixe_multi[k][1]).toString(); // Utilise Algebrite pour avoir le résultat exact même avec des décimaux\n        texte =\n          \"$ \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(prefixe_multi[k][0]) +\n          \" = \\\\dotfill \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"^2\" +\n          \"$\";\n        texte_corr =\n          \"$ \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(prefixe_multi[k][0]) +\n          \" =  \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(a) +\n          \"\\\\times\" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(prefixe_multi[k][1]) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"^2\" +\n          \" = \" +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(resultat) +\n          (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_texte)(unite) +\n          \"^2\" +\n          \"$\";\n      }\n\n      if (this.liste_questions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        if (est_diaporama) {\n          texte = texte.replace(\"= \\\\dotfill\", \"\\\\text{ en }\");\n        }\n        if (sortie_html) {\n          texte = texte.replace(\n            \"\\\\dotfill\",\n            \"................................................\"\n          );\n        }\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  this.besoin_formulaire_numerique = [\n    \"Niveau de difficulté\",\n    6,\n    \"1 : Conversions en m² avec des multiplications\\n\\\n2 : Conversions en m² avec des divisions\\n3 : Conversions en m² avec des multiplications ou divisions\\n4 : Conversions avec des multiplications ou divisions\\n\\\n5 : Conversions d'hectares et ares en m² \\n6 : Toutes les conversions\",\n  ];\n  this.besoin_formulaire2_case_a_cocher = [\"Avec des nombres décimaux\"];\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/_Exercice_conversions_aires.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);