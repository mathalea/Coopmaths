{"version":3,"file":"js/91778.700c09b134411d05074c.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R10-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, shuffle, texNombrec, obtenirListeFacteursPremiers, choice, combinaisonListes } from '../../modules/outils.js'\n\nexport const titre = 'Deviner un nombre relatif'\n\n/**\n * Additions à trou dans les relatifs\n *\n *  @author Jean-Claude Lhote à partir de CM000 de Rémi Angot\n * Référence 5R10\n */\nexport default function DevinerNombreRelatif () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Qui suis-je ?'\n  this.spacing = 2\n  this.nbQuestions = 3\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const typesDeQuestionsDisponibles = [1, 2, 3]\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    let dixieme; let signe; let centieme; let unite; let somme; let produit; let facteurs; const type = ['négatif', 'nul', 'positif']\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions & cpt < 50;) {\n      signe = choice([-1, 1])\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          unite = randint(1, 9)\n          somme = randint(unite + 1, unite + 9)\n          dixieme = somme - unite\n          centieme = 0\n          texte = `Je suis un nombre ${type[signe + 1]} dont la distance à zéro est comprise entre ${unite} et ${unite + 1}.<br>`\n          texte += `On m'écrit avec deux chiffres dont la somme est ${somme}.<br>Qui suis-je ?`\n          break\n\n        case 2:\n          unite = randint(1, 9)\n          somme = randint(unite + 1, unite + 9)\n          dixieme = somme - unite\n          centieme = 0\n          texte = 'Je suis un nombre dont l\\'opposé est compris entre '\n          if (signe < 0) {\n            texte += `$${unite}$ et $${unite + 1}$.<br>`\n          } else {\n            texte += `$${-unite - 1}$ et $${-unite}$.<br>`\n          }\n          texte += `La somme de mes deux chiffres est $${somme}$.<br>Qui suis-je ?`\n          break\n\n        case 3:\n          produit = choice([6, 10, 15])\n          facteurs = obtenirListeFacteursPremiers(produit)\n          facteurs.push(1)\n          facteurs = shuffle(facteurs)\n          unite = facteurs[0]\n          dixieme = facteurs[1]\n          centieme = facteurs[2]\n          texte = `Je suis un nombre ${type[signe + 1]} dont la distance à zéro est comprise entre ${unite} et ${unite + 1}.<br>`\n          texte += `Le produit de mes trois chiffres vaut ${produit}.<br>`\n          if (dixieme < centieme) {\n            texte += 'Mon chiffre des centièmes est supérieur à mon chiffre des dixièmes.'\n          } else {\n            texte += 'Mon chiffre des centièmes est inférieur à mon chiffre des dixièmes.'\n          }\n          texte += ' Qui suis-je ?'\n          break\n\n        case 4:\n          break\n      }\n      texteCorr = `Je suis $${texNombrec(signe * (unite + dixieme / 10 + centieme / 100))}$.`\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n//  this.besoinFormulaireNumerique = [\"Niveau de difficulté\",2,\"1 : Nombres entiers\\n2 : Nombres décimaux\"];\n//  this.besoinFormulaire2Numerique = [\"Valeur maximale\", 9999]\n//  this.besoinFormulaire3Numerique = [\"Type d'égalité\",2,\"1 : Égalité à trou\\n2 : Équation\"];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","DevinerNombreRelatif","Exercice","this","consigne","spacing","nbQuestions","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","listeTypeDeQuestions","combinaisonListes","dixieme","signe","centieme","unite","somme","produit","facteurs","type","texte","texteCorr","i","cpt","choice","randint","obtenirListeFacteursPremiers","push","shuffle","texNombrec","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}