{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N11.js"],"names":["titre","Lire_abscisse_entiere","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","listePackages","nouvelleVersion","numeroExercice","typesDeQuestions","listeQuestions","listeCorrections","contenu","contenuCorrection","combinaisonListes","parseInt","htmlConsigne","abs0","l1","l2","l3","x1","x2","x3","x11","x22","x33","pas1","pas2","id_unique","texte","texteCorr","i","lettreDepuisChiffre","randint","context","Date","now","SVG_reperage_sur_un_axe","calcul","Latex_reperage_sur_un_axe","push","listeQuestionsToContenu","besoinFormulaireNumerique"],"mappings":"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","file":"js/3734.613ec882ea94746e7dd4.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, calcul, lettreDepuisChiffre, htmlConsigne } from '../../modules/outils.js'\nimport { SVG_reperage_sur_un_axe, Latex_reperage_sur_un_axe } from '../../modules/macroSvgJs.js'\n\nexport const titre = 'Lire l’abscisse entière d’un point (grands nombres)'\n\n/**\n * Lire l'abscisse entière d'un point\n * @author Jean-Claude Lhote et Rémi Angot\n * référence 6N11\n */\nexport default function Lire_abscisse_entiere () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Lire l'abscisse de chacun des points suivants.\"\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 4\n  this.listePackages = ['tkz-euclide']\n\n  this.nouvelleVersion = function (numeroExercice) {\n    // numeroExercice est 0 pour l'exercice 1\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (this.sup == 4) { typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else {\n      typesDeQuestions = combinaisonListes(\n        [parseInt(this.sup)],\n        this.nbQuestions\n      )\n    }\n\n    this.contenu = htmlConsigne(this.consigne)\n    for (let i = 0,\n      abs0,\n      l1,\n      l2,\n      l3,\n      x1,\n      x2,\n      x3,\n      x11,\n      x22,\n      x33,\n      pas1,\n      pas2,\n      id_unique,\n      texte,\n      texteCorr; i < this.nbQuestions; i++) {\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n      switch (typesDeQuestions[i]) {\n        case 1: // Placer des entiers sur un axe (milliers)\n          abs0 = randint(1, 9) * 1000\n          pas1 = 0.001\n          pas2 = 10\n          break\n\n        case 2: // Placer des entiers sur un axe (dizaines de mille)\n          abs0 = randint(5, 15) * 10000\n          pas1 = 0.0001\n          pas2 = 10\n          break\n\n        case 3: // Placer des entiers sur un axe (centaines de mille)\n          abs0 = randint(35, 85) * 100000\n          pas1 = 0.00001\n          pas2 = 10\n          break\n      }\n      x1 = randint(0, 2)\n      x2 = randint(3, 4)\n      x3 = randint(5, 6)\n      x11 = randint(1, 9)\n      x22 = randint(1, 9)\n      x33 = randint(1, 3)\n      if (context.isHtml) {\n        id_unique = `${i}_${Date.now()}`\n        this.contenu += `<div id=\"div_svg${numeroExercice}${id_unique}\" style=\"width: 90%; height: 200px;  \"></div>`\n        SVG_reperage_sur_un_axe(\n          `div_svg${numeroExercice}${id_unique}`,\n          abs0,\n          6,\n          pas1,\n          pas2,\n          [\n            [l1, x1, x11],\n            [l2, x2, x22],\n            [l3, x3, x33]\n          ],\n          [\n            [calcul(abs0, 0), 0, 0],\n            [calcul(abs0 + 1 / pas1, 0), 1, 0]\n          ],\n          false\n        )\n        this.contenuCorrection += `<div id=\"div_svg_corr${numeroExercice}${id_unique}\" style=\"width: 90%; height: 200px;  \"></div>`\n        SVG_reperage_sur_un_axe(\n          `div_svg_corr${numeroExercice}${id_unique}`,\n          abs0,\n          6,\n          pas1,\n          pas2,\n          [\n            [l1, x1, x11, true],\n            [l2, x2, x22, true],\n            [l3, x3, x33, true]\n          ],\n          [\n            [calcul(abs0, 0), 0, 0],\n            [calcul(abs0 + 1 / pas1, 0), 1, 0]\n          ],\n          false\n        )\n      } else {\n        // sortie Latex\n        texte = Latex_reperage_sur_un_axe(\n          2,\n          abs0,\n          pas1,\n          pas2,\n          [\n            [l1, x1, x11],\n            [l2, x2, x22],\n            [l3, x3, x33]\n          ],\n          [\n            [calcul(abs0, 0), 0, 0],\n            [calcul(abs0 + 1 / pas1, 0), 1, 0]\n          ],\n          false\n        )\n        texteCorr = Latex_reperage_sur_un_axe(\n          2,\n          abs0,\n          pas1,\n          pas2,\n          [\n            [l1, x1, x11, true],\n            [l2, x2, x22, true],\n            [l3, x3, x33, true]\n          ],\n          [\n            [calcul(abs0, 0), 0, 0],\n            [calcul(abs0 + 1 / pas1, 0), 1, 0]\n          ],\n          false\n        )\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n      }\n    }\n    if (!context.isHtml) { listeQuestionsToContenu(this) }\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    '1 : Milliers\\n2 : Dizaines de mille\\n3 : Centaines de mille\\n4 : Mélange'\n  ]\n}\n"],"sourceRoot":""}