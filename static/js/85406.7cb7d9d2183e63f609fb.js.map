{"version":3,"file":"js/85406.7cb7d9d2183e63f609fb.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/6e/can6M06.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { calcul, creerNomDePolygone, randint, texNombrec } from '../../../modules/outils'\nimport Exercice from '../../Exercice'\nimport {\n  mathalea2d, tracePoint, point, milieu, latexParCoordonnees, pointAdistance, longueur, cercle, pointIntersectionCC, polygoneAvecNom\n} from '../../../modules/2d.js'\nexport const titre = 'Périmètre d’une figure'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\n/*!\n * @author Gilles Mora\n */\nexport default function Perimetre () {\n  Exercice.call(this)\n  this.typeExercice = 'simple'\n  this.nbQuestions = 1\n  this.interactif = true\n  this.formatChampTexte = 'largeur10 inline'\n  this.nouvelleVersion = function () {\n    const nom = creerNomDePolygone(4, ['Q'])\n    const a = randint(3, 6)//\n    const c = randint(3, 5) + randint(3, 9) / 10\n    const A = point(0, 0, nom[0])\n    const B = pointAdistance(A, c, 0, nom[1])\n    const C = pointAdistance(B, a, randint(7, 11) * 10, nom[2])\n    const l = Math.ceil(longueur(A, C) + 1)\n    const b = Math.floor(l / 2)\n    const d = calcul(l - b - c + Math.floor(c))\n    const c1 = cercle(C, d)\n    const c2 = cercle(A, b)\n    const D = pointIntersectionCC(c1, c2, nom[3], 1)\n    if (!D) alert('PAs de point D')\n    const objets = []\n    const xmin = Math.min(A.x, B.x, C.x, D.x) - 1\n    const ymin = Math.min(A.y, B.y, C.y, D.y) - 1\n    const xmax = Math.max(A.x, B.x, C.x, D.x) + 1\n    const ymax = Math.max(A.y, B.y, C.y, D.y) + 1\n    const pol = polygoneAvecNom(A, B, C, D) // polygoneAvecNom s'occupe du placement des noms des sommets\n    console.log('AB : ', c, '  BC : ', a, '  CD : ', d, '  AD : ', b, '  AC : ', longueur(A, C))\n\n    objets.push(pol[0], pol[1], tracePoint(A, B, C, D)) // pol[0], c'est le tracé et pol[1] ce sont les labels\n    objets.push(latexParCoordonnees(`${texNombrec(b)}\\\\text{m}`, milieu(A, D).x - 0.5, milieu(A, D).y, 'black', 20, 10, ''),\n      latexParCoordonnees(`${texNombrec(a)}\\\\text{m}`, milieu(B, C).x + 0.5, milieu(B, C).y, 'black', 20, 10, ''),\n      latexParCoordonnees(`${texNombrec(c)}\\\\text{m}`, milieu(A, B).x, milieu(A, B).y - 0.5, 'black', 20, 10, ''),\n      latexParCoordonnees(`${texNombrec(d)}\\\\text{m}`, milieu(C, D).x, milieu(C, D).y + 0.5, 'black', 20, 10, ''))\n\n    this.question = `Quel est le périmètre de ce quadrilatère $${nom}$ ?<br>` +\n     mathalea2d({ xmin: xmin, ymin: ymin, xmax: xmax, ymax: ymax, pixelsParCm: 30, mainlevee: true, amplitude: 0.5, scale: 0.7 }, objets)\n    this.reponse = a + b + c + d\n    this.correction = ` Le périmètre est donné par : $${texNombrec(a)}+${texNombrec(b)}+${texNombrec(c)}+${texNombrec(d)}=${texNombrec(a + b + c + d)}$ cm.`\n    this.optionsChampTexte = { texteApres: ' cm' }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","amcReady","amcType","Perimetre","typeExercice","formatChampTexte","nom","creerNomDePolygone","a","randint","c","A","point","B","pointAdistance","C","l","Math","ceil","longueur","b","floor","d","calcul","c1","cercle","c2","D","pointIntersectionCC","alert","objets","xmin","min","x","ymin","y","xmax","max","ymax","pol","polygoneAvecNom","console","log","tracePoint","latexParCoordonnees","texNombrec","milieu","question","mathalea2d","pixelsParCm","mainlevee","amplitude","scale","reponse","correction","optionsChampTexte","texteApres"],"sourceRoot":""}