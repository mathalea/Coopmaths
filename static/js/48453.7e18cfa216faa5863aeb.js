"use strict";(self.webpackChunkmathalea=self.webpackChunkmathalea||[]).push([[48453,59166],{48453:(e,t,r)=>{r.r(t),r.d(t,{titre:()=>s,default:()=>i});var n=r(59166);const s="Note la couleur (scratch) 5e";function i(){n.default.call(this),this.relatif=!0}},59166:(e,t,r)=>{r.r(t),r.d(t,{titre:()=>o,default:()=>c});var n=r(25523),s=r(22380),i=r(25482),l=r(71250),a=r(54299);const o="Note la couleur (scratch)";function c(){n.default.call(this),this.titre=o,this.nbQuestions=1,this.nbQuestionsModifiable=!0,this.nbCols=1,this.nbColsCorr=1,this.pasDeVersionLatex=!1,this.pas_de_version_HMTL=!1,this.typeExercice="Scratch",this.listePackages="scratch3",this.sup=1,this.sup2=1,this.sup3=4,this.sup4=!1,this.relatif=!1,this.correctionDetailleeDisponible=!0,this.correctionDetaillee=!0,this.nouvelleVersion=function(e){this.sup=(0,i.QmD)(1,4,this.sup,1);const t=.5;let r,n;this.listeQuestions=[],this.listeCorrections=[],this.autoCorrection=[];let o=[],c=[];const u=this.relatif?{xmin:-13,ymin:-10,xmax:13,ymax:10,pixelsParCm:20,scale:t}:{xmin:-1,ymin:-1,xmax:25,ymax:19,pixelsParCm:20,scale:t};let h;const p=[];let d,m,g,B,f,b,R,N,x,C,S,q;s.Do.unitesLutinParCm=20,s.Do.pixelsParCm=20;const G=1===Number(this.sup2)?(0,i.SRM)([1],this.nbQuestions):2===Number(this.sup2)?(0,i.SRM)([2],this.nbQuestions):(0,i.SRM)([1,2],this.nbQuestions),V=(0,a.U)({type:this.sup,melange:this.sup4,scale:t,relatif:this.relatif,nx:16,ny:12,pas:30,plateau:[["Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc"],["Blanc","Noir","Jaune","Bleu","Vert","Orange","Rouge","Orange","Noir","Jaune","Gris","Vert","Rose","Noir","Jaune","Blanc"],["Blanc","Rouge","Bleu","Orange","Jaune","Rose","Gris","Jaune","Rose","Gris","Jaune","Bleu","Rouge","Gris","Rouge","Blanc"],["Blanc","Rose","Vert","Gris","Rouge","Noir","Bleu","Vert","Noir","Vert","Bleu","Rose","Gris","Vert","Orange","Blanc"],["Blanc","Vert","Bleu","Rose","Vert","Bleu","Orange","Gris","Rouge","Orange","Jaune","Gris","Rouge","Rose","Bleu","Blanc"],["Blanc","Noir","Orange","Rouge","Orange","Jaune","Rouge","Blanc","Blanc","Noir","Gris","Orange","Noir","Jaune","Rose","Blanc"],["Blanc","Rose","Gris","Noir","Bleu","Vert","Bleu","Blanc","Blanc","Rouge","Bleu","Gris","Vert","Rouge","Noir","Blanc"],["Blanc","Noir","Rouge","Rose","Vert","Orange","Rose","Noir","Orange","Vert","Jaune","Rose","Noir","Rose","Vert","Blanc"],["Blanc","Orange","Gris","Rouge","Jaune","Noir","Vert","Rouge","Rose","Noir","Bleu","Vert","Jaune","Orange","Gris","Blanc"],["Blanc","Bleu","Jaune","Orange","Vert","Gris","Jaune","Gris","Orange","Gris","Rose","Bleu","Rouge","Bleu","Orange","Blanc"],["Blanc","Rose","Bleu","Jaune","Rose","Orange","Rouge","Bleu","Noir","Jaune","Gris","Vert","Jaune","Noir","Rouge","Blanc"],["Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc","Blanc"]]});for(let $=0;$<this.nbQuestions;){c=[],o=[],o.push(V),c.push(V);let v,J,P,k="",O="",D=0;switch(G[$]){case 1:h=[["AV30","AV60","AV90","AV120","AV150"],["TD90","TG90","TG90","TG180"]];for(let e,t=0;t<5;t++)for(let r,n=0;n<4;n++)e=h[0][t],r=h[1][n],p.push([e,r,"NLC"],[r,e,"NLC"]);for(v=!0;v&&(o.length=1,R=(0,l.oik)(),x=(0,i.q$q)([90,0,-90,180]),C=30*(0,i.nSR)(4,11)-225+(this.relatif?0:240),S=30*(0,i.nSR)(3,8)-165+(this.relatif?0:180),q=(0,a.J)({x:C,y:S,orientation:x,plateau:V.plateauNLC,relatif:this.relatif}),R.color=s.Do.isHtml?"green":"black",R.epaisseur=2,R.pointilles=2,(0,l.JlY)(C,S,R),(0,l.inN)((0,l.NxE)(x),R),N=(0,l.d9v)(R),(0,l.o8R)(N),(0,l.JlY)(C,S,N),o.push(N),(0,l.o8R)(R),D++,!(D>5));)for(q.codeScratch="",f=[],g=parseInt(this.sup3),b=[],r=0,P=0,q.codeScratch="\\begin{scratch}[print,fill,blocks,scale=0.7]\n \\blockinit{quand \\greenflag est cliqué}\n ",q.codeScratch+=`\\blockmove{aller à x: \\ovalnum{${C}} y: \\ovalnum{${S}}}\n \\blockmove{s'orienter à \\ovalnum{${x}}}\n`,q.currentIndex+=q.codeScratch.length;g>r&&P<10;){for(P=0,d=(0,i.q$q)(p),n=q.testSequence(d);!n[0]&&P<10;)P++,d=(0,i.q$q)(p),n=q.testSequence(d);if(P<10){v=!1;for(let e=0;e<d.length;e++)B=d[e],m=q.testInstruction(B,R),"NLC"===B?(b.push(B),f.push(q.nlc()),r++,q.codeScratch+=m[4]+"\n",q.currentIndex+=m[4].length+1,R=m[5],(0,l.iG7)(5,R)):(b.push(B),q.currentPos.x=m[1],q.currentPos.y=m[2],q.currentOrientation=m[3],q.codeScratch+=m[4]+"\n",q.currentIndex+=m[4].length+1,R=m[5])}else x=(0,i.q$q)([90,0,-90,180]),C=30*(0,i.nSR)(4,11)-225+(this.relatif?0:240),S=30*(0,i.nSR)(3,8)-165+(this.relatif?0:180)}break;case 2:{h=[["AV30","AV60","AV90","AV120"],["TD90","TG90","TD90","TG180"]];for(let t,r=0;r<3;r++)for(let e,n=0;n<3;n++)for(let s,i=0;i<3;i++)for(let l,a=0;a<3;a++)t=h[0][r],e=h[1][n],s=h[0][i],l=h[1][a],p.push([t,e,"NLC",s,l],[e,t,"NLC",s,l],[t,e,"NLC",l,s],[e,t,"NLC",l,s],[t,e,s,"NLC",l],[e,t,l,s,"NLC"],[t,"NLC",e,s,l],[e,"NLC",t,l,s]);v=!0,f=[],g=parseInt(this.sup3),b=[];const e=g-1;for(;v&&(o.length=1,R=(0,l.oik)(),x=(0,i.q$q)([90,0,-90,180]),C=30*(0,i.nSR)(4,11)-225+(this.relatif?0:240),S=30*(0,i.nSR)(3,8)-165+(this.relatif?0:180),q=(0,a.J)({x:C,y:S,orientation:x,plateau:V.plateauNLC,relatif:this.relatif}),q.codeScratch="",R.color=s.Do.isHtml?"green":"black",R.epaisseur=2,R.pointilles=2,(0,l.JlY)(C,S,R),(0,l.inN)((0,l.NxE)(x),R),N=(0,l.d9v)(R),o.push(N),(0,l.o8R)(R),D++,!(D>5));){for(J=0,q.codeScratch="\\begin{scratch}[print,fill,blocks,scale=0.7]\n \\blockinit{quand \\greenflag est cliqué}\n ",q.codeScratch+=`\\blockmove{aller à x: \\ovalnum{${C}} y: \\ovalnum{${S}}}\n \\blockmove{s'orienter à \\ovalnum{${x}}}\n`,q.currentIndex+=q.codeScratch.length,d=(0,i.q$q)(p),n=q.testBoucle(e,d);!n[0]&&J<5;)J++,d=(0,i.q$q)(p),n=q.testBoucle(e,d);if(J<5){v=!1,q.codeScratch+=`\\blockrepeat{répéter \\ovalnum{${e}} fois}{\n`,b.push("début de boucle");for(let e=0;e<d.length;e++)B=d[e],m=q.testInstruction(B,R),"NLC"===B?(b.push(B),f.push(q.nlc()),q.codeScratch+=m[4]+"\n",q.currentIndex+=m[4].length+1,R=m[5],(0,l.iG7)(5,R)):(b.push(B),q.currentPos.x=m[1],q.currentPos.y=m[2],q.currentOrientation=m[3],q.codeScratch+=m[4]+"\n",q.currentIndex+=m[4].length+1,R=m[5]);b.push("fin de boucle"),q.codeScratch+="} \n";for(let t=1;t<e;t++)for(let e=0;e<d.length;e++)B=d[e],m=q.testInstruction(B,R),"NLC"===B?(f.push(q.nlc()),R=m[5],(0,l.iG7)(5,R)):(q.currentPos.x=m[1],q.currentPos.y=m[2],q.currentOrientation=m[3],R=m[5]);for(d=(0,i.q$q)(p),n=q.testSequence(d);!n[0];)d=(0,i.q$q)(p),n=q.testSequence(d);for(let e=0;e<d.length;e++)B=d[e],m=q.testInstruction(B,R),"NLC"===B?(b.push(B),f.push(q.nlc()),q.codeScratch+=m[4]+"\n",q.currentIndex+=m[4].length+1,R=m[5],(0,l.iG7)(5,R)):(b.push(B),q.currentPos.x=m[1],q.currentPos.y=m[2],q.currentOrientation=m[3],q.codeScratch+=m[4]+"\n",q.currentIndex+=m[4].length+1,R=m[5])}else x=(0,i.q$q)([90,0,-90,180]),C=30*(0,i.nSR)(4,11)-225+(this.relatif?0:240),S=30*(0,i.nSR)(3,8)-165+(this.relatif?0:180)}break}}q.codeScratch+="\\end{scratch}",s.Do.isHtml?(k=`Cet exercice est tiré de l'excellente activité débranchée ${(0,i.Qt6)(e,"https://www.monclasseurdemaths.fr/profs/algorithmique-scratch/note-la-couleur/","Note la couleur","info circle")} de Jean-Yves Labouche.<br>`,k+="Il a été conçu pour étendre les possibilités de fiches proposées.<br>",k+=`N'hésitez pas à vous rendre sur le site ${(0,i.Qt6)(e+1,"https://www.monclasseurdemaths.fr","Mon classeur de Maths.fr","info circle")} de Jean-Yves pour y découvrir la multitude de ressources qu'il propose.<br>`,k+=`Pour jouer, regarder les règles du jeu${(0,i.apm)(e+2,"../../pdf/reglesnlc.pdf","Règles du jeu","Règles - PDF","file pdf")} .<br>`):k="",k+="Exécuter le programme et trouver la succession de couleur.<br><br>",s.Do.isHtml?k+="<table><tr><td>"+(0,l.WS9)(q.codeScratch)+"</td><td>"+(4===this.sup||2===this.sup?"Correspondance chiffre-couleur : <br>0=Blanc ; 1=Noir ; 2=Rouge ; 3=Bleu ; 4=Orange ; 5=Rose ; 6=Jaune ; 7=Vert ; 8=Gris<br>":"")+(0,l.iR9)(u,o)+"</td></tr></table>":(k+=`\\begin{minipage}{.3 \\linewidth} \n\t ${(0,l.WS9)(q.codeScratch)} \n \\end{minipage}\n      \\begin{minipage}{.7 \\linewidth} \n\t ${4===this.sup||2===this.sup?"Correspondance chiffre-couleur : \\\\\n0=Blanc, 1=Noir, 2=Rouge, 3=Bleu, 4=Orange, 5=Rose, 6=Jaune, 7=Vert, 8=Gris\\\\\n":""} ${(0,l.iR9)(u,o)} \n\\end{minipage}`,$<this.nbQuestions-1&&!s.Do.isHtml&&(k+="\n\\newpage")),O="On obtient la série de couleurs suivante :<br> ",O+=`${(0,i.HzX)(4===this.sup||2===this.sup?"("+V.traducNum(f[0])+")"+f[0]:f[0])} `;for(let e=1;e<f.length;e++)O+=`- ${(0,i.HzX)(4===this.sup||2===this.sup?"("+V.traducNum(f[e])+")"+f[e]:f[e])} `;R.animation=`<radialGradient id="Ball" cx="8" cy="-3" r="20" gradientUnits="userSpaceOnUse">\n    <stop offset="0" style="stop-color:#FFFF99"/>\n    <stop offset="1" style="stop-color:#FF9400"/>\n  </radialGradient> <circle fill="url(#Ball)"  r="12" stroke-width="1"\n   x="${R.listeTraces[0][0]*s.Do.pixelsParCm}"\n    y="${-R.listeTraces[0][1]*s.Do.pixelsParCm}">\n\n    <animateMotion path="M ${R.listeTraces[0][0]*s.Do.pixelsParCm} ${-R.listeTraces[0][1]*s.Do.pixelsParCm} L`;for(let e=0;e<R.listeTraces.length;e++){const t=(0,l.xmu)(R.listeTraces[e][2],R.listeTraces[e][3]);R.animation+=` ${t.xSVG(s.Do.pixelsParCm)} ${t.ySVG(s.Do.pixelsParCm)} `}if(R.animation+='" begin="10s" dur="10s" repeatCount="indefinite" />; </circle>',this.correctionDetaillee){for(let e=1;e<16;e++)this.relatif?(e<7||e>9)&&c.push((0,l.xmR)((0,i.euh)(30*e-240),1.5*e-12.1,-.3,"milieu","black",1.2,"middle",!0,t)):1!==e&&c.push((0,l.xmR)((0,i.euh)(30*e),1.5*e,-.3,"milieu","black",1.2,"middle",!0,t));for(let e=1;e<12;e++)this.relatif?(e<5||e>7)&&c.push((0,l.xmR)((0,i.euh)(30*e-180),-.5,1.5*e-9,"milieu","black",1.2,"middle",!0,t)):1!==e&&c.push((0,l.xmR)((0,i.euh)(30*e),-.5,1.5*e,"milieu","black",1.2,"middle",!0,t))}O+="<br><br>"+(0,l.iR9)(u,c,R),$<this.nbQuestions-1&&!s.Do.isHtml&&(O+="\n\\newpage"),this.questionJamaisPosee($,C,S,x)&&(this.listeQuestions.push(k),this.listeCorrections.push(O),$++)}(0,i.K1R)(this)},this.besoinFormulaireNumerique=["Type de plateau",4,"1 : Plateau couleur sans numéro\n2 : Plateau couleur avec numéros\n3 : Plateau noir et blanc avec nom des couleurs\n4 : Plateau noir et blanc avec numéros"],this.besoinFormulaire2Numerique=["Type de programme",3,"1 : Avancer et tourner\n2 : Boucles\n3 : Mélange"],this.besoinFormulaire3Numerique=["Nombre de couleurs (Maximmum 6)",6],this.besoinFormulaire4CaseACocher=["Plateau de jeu original",!1]}}}]);
//# sourceMappingURL=48453.7e18cfa216faa5863aeb.js.map