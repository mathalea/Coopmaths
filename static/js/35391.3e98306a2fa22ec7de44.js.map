{"version":3,"file":"js/35391.3e98306a2fa22ec7de44.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3L15-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'// eslint-disable-next-line camelcase\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Résoudre une équation $x^2 = a$'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Résoudre une équation de type x²=a\n* @author Jean-Claude Lhote\n* 3L15\n*/\nexport default function ResoudreEquatioeX2EgalA () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Résoudre les équations suivantes.'\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  // eslint-disable-next-line no-undef\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1.5\n  this.spacing = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const listeFractions = [[1, 2], [1, 3], [2, 3], [1, 4], [3, 4], [1, 5], [2, 5], [3, 5], [4, 5],\n      [1, 6], [5, 6], [1, 7], [2, 7], [3, 7], [4, 7], [5, 7], [6, 7], [1, 8], [3, 8], [5, 8], [7, 8],\n      [1, 9], [2, 9], [4, 9], [5, 9], [7, 9], [8, 9], [1, 10], [3, 10], [7, 10], [9, 10]]\n    let listeTypeQuestions = []\n    switch (parseInt(this.sup)) {\n      case 1: listeTypeQuestions = combinaisonListes([1], this.nbQuestions)\n        break\n      case 2: listeTypeQuestions = combinaisonListes([2], this.nbQuestions)\n        break\n      case 3: listeTypeQuestions = combinaisonListes([3], this.nbQuestions)\n        break\n      case 4: listeTypeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions)\n    }\n    for (let i = 0, fraction, ns, ds, a, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeQuestions[i]) {\n        case 1: a = randint(1, 20) // x²=a*a donc x=a ou -a.\n          texte = `$x^2=${a * a}$`\n          texteCorr = `$x^2=${a * a}$ équivaut à $x = \\\\sqrt{${a * a}}$ ou $x = -\\\\sqrt{${a * a}}$<br>Soit $x = ${a}$ ou $x = -${a}$<br>`\n          texteCorr += `Il est équivalent de résoudre $x^2 - ${a * a}=0$ c'est-à-dire $x^2 - ${a}^{2}=0$ <br>Soit $(x - ${a})(x + ${a})=0$ qui donne les deux solutions ci-dessus. `\n          setReponse(this, i, [`${a};${-a}`, `${-a};${a}`])\n          break\n        case 2: // x²=(ns*ns)/(ds*ds) solutions rationnelles\n          fraction = choice(listeFractions)\n          ns = fraction[0]\n          ds = fraction[1]\n          texte = `$x^2=\\\\dfrac{${ns * ns}}{${ds * ds}}$`\n          texteCorr = `$x^2=\\\\dfrac{${ns * ns}}{${ds * ds}}$ équivaut à $x = \\\\sqrt{\\\\dfrac{${ns * ns}}{${ds * ds}}}$ ou $x = -\\\\sqrt{\\\\dfrac{${ns * ns}}{${ds * ds}}}$<br>Soit $x = \\\\dfrac{${ns}}{${ds}}$ ou $x = -\\\\dfrac{${ns}}{${ds}}$<br>`\n          texteCorr += `Il est équivalent de résoudre $x^2 - \\\\dfrac{${ns * ns}}{${ds * ds}}=0$ c'est-à-dire $x^2 - (\\\\dfrac{${ns}}{${ds}})^{2}=0$<br>Soit $(x - \\\\dfrac{${ns}}{${ds}})(x + \\\\dfrac{${ns}}{${ds}})=0$ qui donne les deux solutions ci-dessus. `\n          setReponse(this, i, [`\\\\dfrac{${ns}}{${ds}};-\\\\dfrac{${ns}}{${ds}}`, `-\\\\dfrac{${ns}}{${ds}};\\\\dfrac{${ns}}{${ds}}`])\n          break\n\n        case 3: a = randint(2, 50, [4, 9, 16, 25, 36, 49]) // solution irrationnelles\n          texte = `$x^2=${a}$`\n          texteCorr = `$x^2=${a}$ équivaut à $x = \\\\sqrt{${a}}$ ou $x = -\\\\sqrt{${a}}$<br>`\n          texteCorr += `Il est équivalent de résoudre $x^2 - ${a}=0$  c'est-à-dire $x^2 - (\\\\sqrt{${a}})^{2}=0$<br>Soit $(x - \\\\sqrt{${a}})(x + \\\\sqrt{${a}})=0$ qui donne les deux solutions ci-dessus. `\n          setReponse(this, i, `\\\\sqrt{${a}};-\\\\sqrt{${a}}`)\n          break\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        // alert(this.listeQuestions)\n        // alert(this.listeCorrections)\n        i++\n      }\n      cpt++\n    }\n    this.introduction = (this.interactif && context.isHtml) ? \"<em>S'il y a plusieurs réponses, séparer les avec un point-virgule.</em>\" : ''\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, ' 1 : Solutions entières\\n 2 : Solutions rationnelles\\n 3 : Solutions irrationnelles\\n 4 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","ResoudreEquatioeX2EgalA","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","context","spacingCorr","spacing","nouvelleVersion","listeQuestions","listeCorrections","listeFractions","listeTypeQuestions","parseInt","combinaisonListes","fraction","ns","ds","a","texte","texteCorr","i","cpt","randint","setReponse","choice","ajouteChampTexteMathLive","indexOf","push","introduction","interactif","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}