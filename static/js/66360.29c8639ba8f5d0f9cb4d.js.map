{"version":3,"file":"js/66360.29c8639ba8f5d0f9cb4d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3G30-MG32.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, choice, arrondiVirgule, quatriemeProportionnelle, lettreDepuisChiffre, texFraction, modalYoutube } from '../../modules/outils.js'\nimport { degres } from '../../modules/fonctionsMaths.js'\nexport const titre = 'Déterminer une longueur grâce à la trigonométrie'\n\n/**\n * @author Jean-Claude Lhote\n * 3G30-MG32 initialement 3G30.\n * Publié au printemps 2020\n * Version de remplacement utilisant 2D mise au point en Mars 2021.\n */\nexport default function Exercice_Trigo_longueurs () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.quatrieme = false\n  this.sup = 1 // 1 utilisation du cosinus exclusivement 2 utilisation des 3 fonctions trigo\n  context.isHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 1.5)\n  this.listePackages = 'tkz-euclide'\n  this.typeExercice = 'MG32'\n  this.nouvelleVersion = function (numeroExercice) {\n    let lettre1, lettre2, texte, texteCorr\n    this.boutonAide = modalYoutube(\n      numeroExercice,\n      'DYW-BTMFzd4',\n      'Trigonométrie (vidéo de digiSchool)'\n    )\n    this.dimensionsDivMg32 = [700, 500]\n    this.listeQuestions = []\n    this.listeCorrections = [] // Liste de questions corrigées\n    const lettre0 = randint(11, 25) // aleatoirisation du nom des points\n    const s0 = lettreDepuisChiffre(lettre0)\n    lettre1 = randint(11, 25, [lettre0])\n    const s1 = lettreDepuisChiffre(lettre1)\n    lettre2 = randint(11, 25, [lettre0, lettre1])\n    const s2 = lettreDepuisChiffre(lettre2)\n    let angle1\n    let typesDeQuestions\n    if (this.sup == 1) { typesDeQuestions = choice([1, 3, 5]) } // on multiplie par cos, sin ou tan\n    if (this.sup == 2) { typesDeQuestions = choice([2, 4, 6]) } // on divise par cos, sin ou tan\n    if (this.sup == 3) { typesDeQuestions = randint(1, 6) }\n    if (this.quatrieme) { typesDeQuestions = ((typesDeQuestions - 1) % 2) + 1 } // on n'utilise que le cosinus.\n    const nom_du_triangle = choice([\n      s0 + s1 + s2,\n      s0 + s2 + s1,\n      s1 + s0 + s2,\n      s1 + s2 + s0,\n      s2 + s0 + s1,\n      s2 + s1 + s0\n    ])\n    const k1 = Math.round((Math.random() * 5 + 1) * 10) / 10\n    const k2 = Math.round((Math.random() * 5 + 1) * 10) / 10\n    angle1 = Math.round(degres(Math.atan(k2 / k1)))\n    const alpha1 = Math.random() * Math.PI - Math.PI / 2\n    const alpha1deg = Math.round((alpha1 * 180) / Math.PI)\n    const x1 = k1 // coordonnées des deux sommets du triangle\n    const y2 = k2\n    const s01 = arrondiVirgule(k1, 1) // mise en texte avec 1 chiffres après la virgule pour énoncé\n    const s02 = arrondiVirgule(k2, 1)\n\n    let dist12 = k1 / Math.cos(Math.atan(k2 / k1)) // calcul de l'hypoténuse\n    dist12 = Math.round(dist12 * 10) / 10 // On ne garde qu'une approximation au dixième pour l'exercice\n    const s12 = arrondiVirgule(dist12, 1)\n    texteCorr = `Dans le triangle $${nom_du_triangle}$ rectangle en $${s0}$ :<br>`\n    if (context.isHtml) {\n      // sortie html MG32\n      let codeBase64\n      if (alpha1deg < 0) {\n        codeBase64 =\n          'TWF0aEdyYXBoSmF2YTEuMAAAABI+TMzNAAJmcv###wEA#wEAAAAAAAAAAAYfAAADsgAAAQEAAAAAAAAAAQAAACL#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAFBAMA7AAAAAAAAwCAAAAAAAAAFAAFAcLFHrhR64UBneFHrhR64#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8BAAAAABYAAAEAAQAAAAEBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8BAAAAAA4AAUkAwBgAAAAAAAAAAAAAAAAAAAUAAUBHq0OVgQYlAAAAAv####8AAAABAAlDRHJvaXRlQUIA#####wEAAAAAEAAAAQABAAAAAQAAAAP#####AAAAAQAWQ0Ryb2l0ZVBlcnBlbmRpY3VsYWlyZQD#####AQAAAAAWAAABAAEAAAABAAAABP####8AAAABAAlDQ2VyY2xlT0EA#####wEAAAAAAQAAAAEAAAAD#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAUAAAAG#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wEAAAAAFgAAAQUAAQAAAAcAAAAJAP####8BAAAAAA4AAUoAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAAQAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MQABNgAAAAFAGAAAAAAAAAAAABEA#####wACeDIAATQAAAABQBAAAAAAAAAAAAARAP####8ACGFscGhhZGVnAAMtOTD#####AAAAAQAMQ01vaW5zVW5haXJlAAAAAUBWgAAAAAAA#####wAAAAEAEENQb2ludERhbnNSZXBlcmUA#####wEAAAAAFgABWgDAFAAAAAAAAEAAAAAAAAAABwAAAAAKAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAEwD#####AQAAAAAWAAFGAAAAAAAAAAAAQAgAAAAAAAAHAAAAAAoAAAAOAAAADwAAAAEAAAAAAAAAAAAAABMA#####wEAAAAAFgABRAAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAAAQAAAAAAAAAAAAAADgAAABD#####AAAAAQAJQ1JvdGF0aW9uAP####8AAAASAAAADgAAABEAAAAPAP####8AAAAAABYAAUIAQCoAAAAAAADALgAAAAAAAAcAAAAAEwAAABUAAAAPAP####8AAAAAABYAAUMAQBAAAAAAAADAOwAAAAAAAAcAAAAAFAAAABX#####AAAAAQAJQ1BvbHlnb25lAP####8AAAAAAAIAAAAEAAAAEgAAABYAAAAXAAAAEv####8AAAACABdDTWFycXVlQW5nbGVHZW9tZXRyaXF1ZQD#####AAAA#wAEAAAAAUAwAAAAAAAAAAAAFgAAABIAAAAX#####wAAAAEACENTZWdtZW50AP####8BAAD#ABAAAAEABAAAABcAAAAW#####wAAAAEAEENNYWNyb0FwcGFyaXRpb24A#####wD#AAAB#####xBAh8ij1wo9cUBHYUeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAFQXBwQkMAAAAAAAEAAAAaAP####8AAAABABFDTWFjcm9EaXNwYXJpdGlvbgD#####AP8AAAH#####EECKaKPXCj1xQEphR64UeuECAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAZNYXNxQkMAAAAAAAEAAAAa#####wAAAAEAC0NNYWNyb1BhdXNlAP####8A#wAAAf####8QQI1oo9cKPXFASuFHrhR64QIAAAAAAAAAAAAAAAABAAAAAAAAAAAABVBhdXNlAAAAAAABAAAAGQD#####AAAA#wH#####EECIIKPXCj1xQFqwo9cKPXACAAAAAAAAAAAAAAAAAQAAAAAAAAAAAApNYXNxQW5nZHJ0AAAAAAABAAAAGQAAABgA#####wAAAP8B#####xBAjAij1wo9cUBa8KPXCj1wAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAJQXBwQW5nRHJ0AAAAAAABAAAAGQD#####AAAAAQARQ01hY3JvU3VpdGVNYWNyb3MA#####wAAAP8B#####xBAWMUeuFHrhUB4fCj1wo9cAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAALaHlwb3TDqW51c2UAAAAAAAsAAAAeAAAAGwAAAB0AAAAfAAAAHAAAAB0AAAAeAAAAGwAAAB0AAAAcAAAAHwAAABYA#####wAAAP8ABQAAACBAQIGJiJxJngAAAAEAAAAWAAAAFwAAAA7##########w=='\n      } else {\n        codeBase64 =\n          'TWF0aEdyYXBoSmF2YTEuMAAAABI#AAAAAAJmcv###wEA#wEAAAAAAAAAAAYfAAADsgAAAQEAAAAAAAAAAQAAACL#####AAAAAQAKQ0NhbGNDb25zdAD#####AAJwaQAWMy4xNDE1OTI2NTM1ODk3OTMyMzg0Nv####8AAAABAApDQ29uc3RhbnRlQAkh+1RELRj#####AAAAAQAKQ1BvaW50QmFzZQD#####AAAAAAAWAAFBAMAUAAAAAAAAQBQAAAAAAAAFAAFAbFo9cKPXBkB0BhR64Ueu#####wAAAAEAFENEcm9pdGVEaXJlY3Rpb25GaXhlAP####8BAAAAABYAAAEAAQAAAAEBP#AAAAAAAAD#####AAAAAQAPQ1BvaW50TGllRHJvaXRlAP####8BAAAAAA4AAUkAwBgAAAAAAAAAAAAAAAAAAAUAAUBHq0OVgQYlAAAAAv####8AAAABAAlDRHJvaXRlQUIA#####wEAAAAAEAAAAQABAAAAAQAAAAP#####AAAAAQAWQ0Ryb2l0ZVBlcnBlbmRpY3VsYWlyZQD#####AQAAAAAWAAABAAEAAAABAAAABP####8AAAABAAlDQ2VyY2xlT0EA#####wEAAAAAAQAAAAEAAAAD#####wAAAAEAEENJbnREcm9pdGVDZXJjbGUA#####wAAAAUAAAAG#####wAAAAEAEENQb2ludExpZUJpcG9pbnQA#####wEAAAAAFgAAAQUAAQAAAAcAAAAJAP####8BAAAAAA4AAUoAwCgAAAAAAADAEAAAAAAAAAUAAgAAAAf#####AAAAAgAHQ1JlcGVyZQD#####AObm5gABAAAAAQAAAAMAAAAJAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAT#wAAAAAAAAAAAAAT#wAAAAAAAA#####wAAAAEACkNVbml0ZXhSZXAA#####wAEdW5pdAAAAAr#####AAAAAQALQ0hvbW90aGV0aWUA#####wAAAAH#####AAAAAQAKQ09wZXJhdGlvbgMAAAABP#AAAAAAAAD#####AAAAAQAPQ1Jlc3VsdGF0VmFsZXVyAAAAC#####8AAAABAAtDUG9pbnRJbWFnZQD#####AQAAAAAQAAJXIgEBAAAAAAMAAAAM#####wAAAAEACUNMb25ndWV1cgD#####AAAAAQAAAA3#####AAAAAQAHQ0NhbGN1bAD#####AAJ4MQABNgAAAAFAGAAAAAAAAAAAABEA#####wACeDIAATQAAAABQBAAAAAAAAAAAAARAP####8ACGFscGhhZGVnAAI5MAAAAAFAVoAAAAAAAP####8AAAABABBDUG9pbnREYW5zUmVwZXJlAP####8BAAAAABYAAVoAwBQAAAAAAABAAAAAAAAAAAcAAAAACgAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAAABIA#####wEAAAAAFgABRgAAAAAAAAAAAEAIAAAAAAAABwAAAAAKAAAADgAAAA8AAAABAAAAAAAAAAAAAAASAP####8BAAAAABYAAUQAAAAAAAAAAABACAAAAAAAAAcAAAAACgAAAAEAAAAAAAAAAAAAAA4AAAAQ#####wAAAAEACUNSb3RhdGlvbgD#####AAAAEgAAAA4AAAARAAAADwD#####AAAAAAAWAAFCAEAqAAAAAAAAwDgAAAAAAAAHAAAAABMAAAAVAAAADwD#####AAAAAAAWAAFDAMA3AAAAAAAAwEAAAAAAAAAHAAAAABQAAAAV#####wAAAAEACUNQb2x5Z29uZQD#####AAAAAAACAAAABAAAABIAAAAWAAAAFwAAABL#####AAAAAgAXQ01hcnF1ZUFuZ2xlR2VvbWV0cmlxdWUA#####wAAAP8ABAAAAAFAMAAAAAAAAAAAABYAAAASAAAAF#####8AAAABAAhDU2VnbWVudAD#####AQAA#wAQAAABAAQAAAAXAAAAFv####8AAAABABBDTWFjcm9BcHBhcml0aW9uAP####8A#wAAAf####8QQIfIo9cKPXFAR2FHrhR64QIAAAAAAAAAAAAAAAABAAAAAAAAAAAABUFwcEJDAAAAAAABAAAAGgD#####AAAAAQARQ01hY3JvRGlzcGFyaXRpb24A#####wAAAP8B#####xBAimij1wo9cUBKYUeuFHrhAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAGTWFzcUJDAAAAAAABAAAAGv####8AAAABAAtDTWFjcm9QYXVzZQD#####AP8AAAH#####EECNaKPXCj1xQErhR64UeuECAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAVQYXVzZQAAAAAAAQAAABgA#####wAAAP8B#####xBAh#Cj1wo9cUBbcKPXCj1wAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAKTWFzcUFuZ0RydAAAAAAAAQAAABkAAAAXAP####8AAAD#Af####8QQIw4o9cKPXFAXPCj1wo9cAIAAAAAAAAAAAAAAAABAAAAAAAAAAAACUFwcEFuZ0RydAAAAAAAAQAAABkA#####wAAAAEAEUNNYWNyb1N1aXRlTWFjcm9zAP####8AAAD#Af####8QQFjFHrhR64VAeHwo9cKPXAIAAAAAAAAAAAAAAAABAAAAAAAAAAAAC2h5cG90w6ludXNlAAAAAAALAAAAHgAAABsAAAAdAAAAHwAAABwAAAAdAAAAHgAAABsAAAAdAAAAHwAAABwAAAAVAP####8AAAD#AAUAAAAgQEHcp2T0QTQAAAABAAAAFgAAABcAAAAO##########8='\n      }\n      texte = `Dans la figure ci-dessous, le triangle $${nom_du_triangle}$ est rectangle en $${s0}$.<br>`\n\n      if (typesDeQuestions == 1) {\n        // calcul du côté adjacent (cosinus)\n        texte += `L'angle $\\\\widehat{${s0 + s1 + s2}}$ mesure $${angle1}\\\\degree$, $${s1 + s2}=${s12}$ cm.<br>`\n        texte += `Calculer $${s0 + s1}$.`\n      }\n      if (typesDeQuestions == 2) {\n        // Calcul de l'hypoténuse (1/cosinus)\n        texte += `L'angle $\\\\widehat{${s0 + s1 + s2}}$ mesure $${angle1}\\\\degree$, $${s0 + s1}=${s01}$ cm.<br>`\n        texte += `Calculer $${s1 + s2}$.`\n      }\n      if (typesDeQuestions == 3) {\n        // calcul du côté opposé (sinus)\n        texte += `L'angle $\\\\widehat{${s0 + s1 + s2}}$ mesure $${angle1}\\\\degree$, $${s1 + s2}=${s12}$ cm.<br>`\n        texte += `Calculer $${s0 + s2}$.`\n      }\n      if (typesDeQuestions == 4) {\n        // Calcul de l'hypoténuse (1/sinus)\n        texte += `L'angle $\\\\widehat{${s0 + s1 + s2}}$ mesure $${angle1}\\\\degree$, $${s0 + s2}=${s02}$ cm.<br>`\n        texte += `Calculer $${s1 + s2}$.`\n      }\n      if (typesDeQuestions == 5) {\n        // calcul du côté opposé (tangente)\n        texte += `L'angle $\\\\widehat{${s0 + s1 + s2}}$ mesure $${angle1}\\\\degree$, $${s0 + s1}=${s01}$ cm.<br>`\n        texte += `Calculer $${s0 + s2}$.`\n      }\n      if (typesDeQuestions == 6) {\n        // Calcul du côté adjacent (1/tangente)\n        texte += `L'angle $\\\\widehat{${s0 + s1 + s2}}$ mesure $${angle1}\\\\degree$, $${s0 + s2}=${s02}$ cm.<br>`\n        texte += `Calculer $${s0 + s1}$.`\n      }\n\n      this.typeExercice = 'MG32'\n      this.MG32codeBase64 = codeBase64\n      this.mg32init = (mtg32App, idDoc) => {\n        mtg32App.giveFormula2(idDoc, 'x2', y2)\n        mtg32App.giveFormula2(idDoc, 'x1', x1)\n        mtg32App.giveFormula2(idDoc, 'alphadeg', alpha1deg)\n        mtg32App.rename(idDoc, 'A', s0)\n        mtg32App.rename(idDoc, 'B', s1)\n        mtg32App.rename(idDoc, 'C', s2)\n        mtg32App.calculate(idDoc)\n        mtg32App.display(idDoc)\n      }\n      texte += `<br>$\\\\footnotesize{\\\\textit{Le point \\\\thickspace ${s0} peut être déplacé (si la figure est tronquée).}}$<br>`\n    } else {\n      // sortie Latex\n      texte = '\\\\begin{minipage}{.7 \\\\linewidth} \\t\\\\vspace{0cm} Sur la figure ci-contre, on a  : \\\\begin{itemize}'\n      texte += `\\n\\t\\\\item Le triangle $${nom_du_triangle}$ est rectangle en $${s0}$~;`\n\n      if (typesDeQuestions == 1) {\n        // Calcul du coté adjacent (cosinus)\n        texte += `\\n\\t\\\\item $${s1 + s2}=${s12}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item L'angle $\\\\widehat{${s0 + s1 + s2}}$~mesure~$${angle1}\\\\degree$.<br>`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer $${s0 + s1}$ à 0,1 près. \\\\end{minipage}`\n      }\n      if (typesDeQuestions == 2) {\n        // Calcul de l'hypoténuse (1/cosinus)\n        texte += `\\n\\t\\\\item $${s0 + s1}=${s01}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item L'angle $\\\\widehat{${s0 + s1 + s2}}$~mesure~$${angle1}\\\\degree$.<br>`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer $${s1 + s2}$ à 0,1 près. \\\\end{minipage}`\n      }\n      if (typesDeQuestions == 3) {\n        // Calcul du coté opposé (sinus)\n        texte += `\\n\\t\\\\item $${s1 + s2}=${s12}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item L'angle $\\\\widehat{${s0 + s1 + s2}}$~mesure~$${angle1}\\\\degree$.<br>`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer $${s0 + s2}$ à 0,1 près. \\\\end{minipage}`\n      }\n      if (typesDeQuestions == 4) {\n        // Calcul de l'hypoténuse (1/sinus)\n        texte += `\\n\\t\\\\item $${s0 + s2}=${s02}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item L'angle $\\\\widehat{${s0 + s1 + s2}}$~mesure~$${angle1}\\\\degree$.<br>`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer $${s1 + s2}$ à 0,1 près. \\\\end{minipage}`\n      }\n      if (typesDeQuestions == 5) {\n        // Calcul du côté opposé (tangente)\n        texte += `\\n\\t\\\\item $${s0 + s1}=${s01}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item L'angle $\\\\widehat{${s0 + s1 + s2}}$~mesure~$${angle1}\\\\degree$.<br>`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer $${s0 + s2}$ à 0,1 près. \\\\end{minipage}`\n      }\n      if (typesDeQuestions == 6) {\n        // Calcul du côté adjacent (1/tangente)\n        texte += `\\n\\t\\\\item $${s0 + s2}=${s02}~\\\\text{cm}$`\n        texte += `\\n\\t\\\\item L'angle $\\\\widehat{${s0 + s1 + s2}}$~mesure~$${angle1}\\\\degree$.<br>`\n        texte += `\\\\end{itemize} \\\\bigskip\\n\\t  Calculer $${s0 + s1}$ à 0,1 près. \\\\end{minipage}`\n      }\n      texte += '\\\\begin{minipage}{0.3 \\\\linewidth}'\n      // dessin de la figure\n      texte += '\\n \\\\begin{tikzpicture}[scale=0.7]' // Balise début de figure\n      texte +=\n        '\\n\\t \\\\tkzDefPoints{0/0/' + s0 + ',' + x1 + '/0/B,0/' + y2 + '/C}' // créer les points du triangle initial\n\n      // Définit les points M et N par homothétie de centre C et de rapport 0,3<k<0,8\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n        s0 +\n        ' angle ' +\n        alpha1deg +\n        '](B) \\\\tkzGetPoint{' +\n        s1 +\n        '}' // transformer le premier point par rotation\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n        s0 +\n        ' angle ' +\n        alpha1deg +\n        '](C) \\\\tkzGetPoint{' +\n        s2 +\n        '}' // transformer le deuxième point par rotation\n      texte += '\\n\\t \\\\tkzDrawPolygon(' + s0 + ',' + s1 + ',' + s2 + ')' // Trace le triangle\n\n      // marquer l'angle droit\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n        s0 +\n        ' ratio 0.1](' +\n        s1 +\n        ')' +\n        '\\\\tkzGetPoint{B}'\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n        s0 +\n        ' angle 90](B) \\\\tkzGetPoint{C}'\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[homothety=center ' +\n        s0 +\n        ' ratio 0.1414](' +\n        s1 +\n        ')' +\n        '\\\\tkzGetPoint{A}'\n      texte +=\n        '\\n\\t \\\\tkzDefPointBy[rotation= center ' +\n        s0 +\n        ' angle 45](A) \\\\tkzGetPoint{A}'\n      texte += '\\n\\t \\\\tkzDrawPolygon(' + s0 + ',B,A,C)' // Trace la marque d'angle droit\n      if (alpha1deg > 0) {\n        // rotation \"angle droit dessous\"\n        texte += '\\n\\t \\\\tkzLabelPoints[below](' + s0 + ')' // nomme les points\n        texte += '\\n\\t \\\\tkzLabelPoints[above right](' + s1 + ')'\n        texte += '\\n\\t \\\\tkzLabelPoints[left](' + s2 + ')'\n      } else {\n        // rotation \"angle droit dessus\" position du nom inversée\n        texte += '\\n\\t \\\\tkzLabelPoints[left](' + s0 + ')' // nomme les points\n        texte += '\\n\\t \\\\tkzLabelPoints[below left](' + s1 + ')'\n        texte += '\\n\\t \\\\tkzLabelPoints[above right](' + s2 + ')'\n      }\n      texte += '\\n \\\\end{tikzpicture}' // Balise de fin de figure\n      texte += '\\\\end{minipage}'\n    }\n    if (typesDeQuestions == 1) {\n      texteCorr += `Le cosinus de l'angle $\\\\widehat{${s0 + s1 + s2}}$ est défini par :<br>`\n      texteCorr += `$\\\\cos \\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s0 + s1, s1 + s2)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\dfrac{\\\\cos\\\\left(${angle1}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(\n        s0 + s1,\n        s12\n      )}$<br>`\n      texteCorr += '$\\\\bf\\\\textcolor{red}{Les~ produits~ en~ croix~ sont~ \\\\acute{e}gaux~donc~ :}$<br>'\n      texteCorr += `$${s0 + s1}=${quatriemeProportionnelle(\n        '\\\\color{red}{1}',\n        s12,\n        `\\\\cos\\\\left(${angle1}\\\\degree\\\\right)`\n      )}$<br>` // ${s12}\\\\times\\\\cos\\\\left(${angle1}\\\\degree\\\\right)$<br>`;\n      texteCorr += `Soit $${s0 + s1}\\\\approx${s01}$ cm.`\n    }\n    if (typesDeQuestions == 2) {\n      texteCorr += `Le cosinus de l'angle $\\\\widehat{${s0 + s1 + s2}}$ est défini par :<br>`\n      texteCorr += `$\\\\cos \\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s0 + s1, s1 + s2)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\dfrac{\\\\cos\\\\left(${angle1}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(\n        s01,\n        s1 + s2\n      )}$<br>`\n      texteCorr += '$\\\\bf\\\\textcolor{red}{Les~ produits~ en~ croix~ sont~ \\\\acute{e}gaux~donc~ :}$<br>'\n      texteCorr += `$${s1 + s2}=${quatriemeProportionnelle(\n        `\\\\cos\\\\left(${angle1}\\\\degree\\\\right)`,\n        s01,\n        '\\\\color{red}{1}'\n      )}$<br>` // ${s01}\\\\div\\\\cos\\\\left(${angle1}\\\\degree\\\\right)$<br>`;\n      texteCorr += `Soit $${s1 + s2}\\\\approx${s12}$ cm.`\n    }\n    if (typesDeQuestions == 3) {\n      texteCorr += `Le sinus de l'angle $\\\\widehat{${s0 + s1 + s2}}$ est défini par :<br>`\n      texteCorr += `$\\\\sin \\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s0 + s2, s1 + s2)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\dfrac{\\\\sin\\\\left(${angle1}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(\n        s0 + s2,\n        s12\n      )}$<br>`\n      texteCorr += '$\\\\bf\\\\textcolor{red}{Les~ produits~ en~ croix~ sont~ \\\\acute{e}gaux~donc~ :}$<br>'\n      texteCorr += `$${s0 + s2}=${quatriemeProportionnelle(\n        '\\\\color{red}{1}',\n        s12,\n        `\\\\sin\\\\left(${angle1}\\\\degree\\\\right)`\n      )}$<br>`\n      texteCorr += `Soit $${s0 + s2}\\\\approx${s02}$ cm.`\n    }\n    if (typesDeQuestions == 4) {\n      texteCorr = `Le sinus de l'angle $\\\\widehat{${s0 + s1 + s2}}$ est défini par :<br>`\n      texteCorr += `$\\\\sin \\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s0 + s2, s1 + s2)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\dfrac{\\\\sin\\\\left(${angle1}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(\n        s02,\n        s1 + s2\n      )}$<br>`\n      texteCorr += '$\\\\bf\\\\textcolor{red}{Les~ produits~ en~ croix~ sont~ \\\\acute{e}gaux~donc~ :}$<br>'\n      texteCorr += `$${s1 + s2}=${quatriemeProportionnelle(\n        `\\\\sin\\\\left(${angle1}\\\\degree\\\\right)`,\n        s02,\n        '\\\\color{red}{1}'\n      )}$<br>`\n      texteCorr += `Soit $${s1 + s2}\\\\approx${s12}$ cm.`\n    }\n    if (typesDeQuestions == 5) {\n      texteCorr = `La tangente de l'angle $\\\\widehat{${s0 + s1 + s2}}$ est définie par :<br>`\n      texteCorr += `$\\\\tan \\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s0 + s2, s0 + s1)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\dfrac{\\\\tan\\\\left(${angle1}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(\n        s0 + s2,\n        s01\n      )}$<br>`\n      texteCorr += '$\\\\bf\\\\textcolor{red}{Les~ produits~ en~ croix~ sont~ \\\\acute{e}gaux~donc~ :}$<br>'\n      texteCorr += `$${s0 + s2}=${quatriemeProportionnelle(\n        '\\\\color{red}{1}',\n        s01,\n        `\\\\tan\\\\left(${angle1}\\\\degree\\\\right)`\n      )}$<br>`\n      texteCorr += `Soit $${s0 + s2}\\\\approx${s02}$ cm.`\n    }\n    if (typesDeQuestions == 6) {\n      texteCorr = `La tangente de l'angle $\\\\widehat{${s0 + s1 + s2}}$ est définie par :<br>`\n      texteCorr += `$\\\\tan \\\\left(\\\\widehat{${s0 + s1 + s2}}\\\\right)=${texFraction(s0 + s2, s0 + s1)}$<br>`\n      texteCorr += 'Avec les données numériques :<br>'\n      texteCorr += `$\\\\dfrac{\\\\tan\\\\left(${angle1}\\\\degree\\\\right)}{\\\\color{red}{1}}=${texFraction(\n        s02,\n        s0 + s1\n      )}$<br>`\n      texteCorr += '$\\\\bf\\\\textcolor{red}{Les~ produits~ en~ croix~ sont~ \\\\acute{e}gaux~donc~ :}$<br>'\n      texteCorr += `$${s0 + s1}=${quatriemeProportionnelle(\n        `\\\\tan\\\\left(${angle1}\\\\degree\\\\right)`,\n        s02,\n        '\\\\color{red}{1}'\n      )}$<br>`\n      texteCorr += `Soit $${s0 + s1}\\\\approx${s01}$ cm.`\n    }\n    // texte+=href('Comment calculer une longueur avec la trigonométrie','https://www.youtube.com/watch?v=DYW-BTMFzd4')\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    3,\n    '1 : Calculs faciles \\n 2 : Calculs moins faciles \\n 3 : Mélange'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Exercice_Trigo_longueurs","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","quatrieme","sup","context","spacingCorr","listePackages","typeExercice","nouvelleVersion","numeroExercice","lettre1","lettre2","texte","texteCorr","boutonAide","modalYoutube","dimensionsDivMg32","listeQuestions","listeCorrections","lettre0","randint","s0","lettreDepuisChiffre","s1","s2","angle1","typesDeQuestions","choice","nom_du_triangle","k1","Math","round","random","k2","degres","atan","alpha1","PI","alpha1deg","x1","y2","s01","arrondiVirgule","s02","dist12","cos","s12","codeBase64","MG32codeBase64","mg32init","mtg32App","idDoc","giveFormula2","rename","calculate","display","texFraction","quatriemeProportionnelle","push","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}