/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_beta_moule_a_exo_mathalea2d_3d_js"],{

/***/ "./src/js/exercices/beta/moule_a_exo_mathalea2d&3d.js":
/*!************************************************************!*\
  !*** ./src/js/exercices/beta/moule_a_exo_mathalea2d&3d.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Exercice_zero_mathalea2d3d)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n/* harmony import */ var _modules_3d_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../modules/3d.js */ \"./src/js/modules/3d.js\");\n\n\n\n\nconst titre = 'Exo zéroMathalea2d3d';\nfunction Exercice_zero_mathalea2d3d() {\n  \"use strict\";\n\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this);\n  this.titre = titre;\n  this.nbQuestions = 4; // Ici le nombre de questions\n\n  this.nbQuestionsModifiable = true; // Active le formulaire nombre de questions\n\n  this.nbCols = 1; // Le nombre de colonnes dans l'énoncé LaTeX\n\n  this.nbColsCorr = 1; // Le nombre de colonne pour la correction LaTeX\n\n  this.pasDeVersionLatex = false; // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n\n  this.pas_de_version_HMTL = false; // mettre à true si on ne veut pas de l'exercice en ligne\n  // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n  //  this.sup = false; // A décommenter : valeur par défaut d'un premier paramètre\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.sup3 = false; // A décommenter : valeur par défaut d'un troisième paramètre\n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n\n  this.nouvelleVersion = function () {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n    this.listeQuestions = []; // tableau contenant la liste des questions \n\n    this.listeCorrections = [];\n    let type_de_questions_disponibles = [1]; // tableau à compléter par valeurs possibles des types de questions\n\n    let listeTypeDeQuestions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaisonListes)(type_de_questions_disponibles, this.nbQuestions); // Ci-dessus On crée une liste aléatoire comprenant nbQuestions parmi les types disponibles.\n\n    /* Un exemple ci-dessous : si la classe est 6, alors les types dispo sont 1 et 2 sinon , 1,2,3 et 4.\n    if (this.classe == 6) type_de_questions_disponibles = [1, 2]\n        else type_de_questions_disponibles = [1, 2, 3,4]\n    listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions)\n    */\n    // boucle pour fabriquer les nbQuestions questions en s'assurant que si il n'y a pas nbQuestions différentes\n    // La boucle s'arrête après 50 tentatives.\n\n    let objets_enonce, objets_enonceml, objets_correction, params_enonce, params_correction;\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      objets_enonce = []; // on initialise le tableau des objets Mathalea2d de l'enoncé\n\n      objets_enonceml = []; // Idem pour l'enoncé à main levée si besoin\n\n      objets_correction = []; // Idem pour la correction\n\n      texte = ``; // Nous utilisons souvent cette variable pour construire le texte de la question.\n\n      texteCorr = ``; // Idem pour le texte de la correction.\n\n      switch (listeTypeDeQuestions[i]) {\n        // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n        case 1:\n          //ici sont créés les texte, tex_corr, objets mathalea2d divers entrant dans le contenu de l'exercice\n          break;\n\n        case 2:\n          // Idem Cas1 mais avec d'autres texte, texteCorr...\n          break;\n\n        case 3:\n          break;\n\n        case 4:\n          break;\n      } //  objets_enonce.push () // On rempli les tableaux d'objets Mathalea2d\n      //  objets_enonceml.push()\n      //  objets_correction.push()\n      // paramètres pour la perspective\n\n\n      mathalea.anglePerspective = 30;\n      mathalea.coeffPerspective = 0.5; //paramètres de la fenêtre Mathalea2d pour l'énoncé main levée\n      //    params_enonceml = { xmin: Math.min(objets_enonceml.x), ymin: Math.min(objets_enonceml.y), xmax: Math.max(objets_enonceml.x), ymax: Math.max(objets_enonceml.y), pixelsParCm: 20, scale: 1, mainlevee: true, amplitude: 1 }\n      //paramètres de la fenêtre Mathalea2d pour l'énoncé normal\n\n      params_enonce = {\n        xmin: -10,\n        ymin: -10,\n        xmax: 10,\n        ymax: 10,\n        pixelsParCm: 20,\n        scale: 1,\n        mainlevee: false\n      }; //paramètres de la fenêtre Mathalea2d pour la correction\n\n      params_correction = {\n        xmin: -10,\n        ymin: -10,\n        xmax: 10,\n        ymax: 10,\n        pixelsParCm: 20,\n        scale: 1\n      }; // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n\n      texte += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(params_enonce, objets_enonce); // On ajoute au texte de la correction, la figure de la correction\n\n      texteCorr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(params_correction, objets_correction);\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n\n      cpt++;\n    }\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeQuestionsToContenu)(this); // On envoie l'exercice à la fonction de mise en page\n  }; // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  //\tthis.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoin_formulaire2_numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoin_formulaire3_case_a_cocher =['figure à main levée',true]\n\n} // Fin de l'exercice.//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/exercices/beta/moule_a_exo_mathalea2d&3d.js\n");

/***/ })

}]);