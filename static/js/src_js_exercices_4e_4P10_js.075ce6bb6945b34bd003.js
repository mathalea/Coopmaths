/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_4e_4P10_js"],{

/***/ "./src/js/exercices/4e/4P10.js":
/*!*************************************!*\
  !*** ./src/js/exercices/4e/4P10.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Problemes_grandeurs_composees)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst titre = 'Résoudre des problèmes de grandeurs composées et de conversion d’unités complexes';\n/**\n * problèmes de grandeurs composées\n * @Auteur Jean-Claude Lhote\n * Référence : 4P10\n */\n\nfunction Problemes_grandeurs_composees() {\n  \"use strict\";\n\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 3;\n  this.nbQuestionsModifiable = false;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  sortieHtml ? this.spacing = 3 : this.spacing = 1.5;\n  sortieHtml ? this.spacingCorr = 3 : this.spacingCorr = 2;\n  this.sup = false;\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.listeQuestions = []; // Liste de questions\n\n    this.listeCorrections = []; // Liste de questions corrigées\n    // let liste_index_disponibles=[1,2,3,4,5,6,7,8,9,10,11,12,13,14];\n    // let liste_index=combinaisonListes(liste_index_disponibles,this.nbQuestions);\n\n    let grandeurs = [];\n    let liste7 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaisonListes)([0, 1, 2], this.nbQuestions);\n    let flag7 = 0,\n        flag2 = 0;\n    let liste2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaisonListes)([0, 1], this.nbQuestions);\n\n    if (!this.sup) {\n      // Si aucune grandeur n'est saisie\n      grandeurs = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n    } else {\n      if (typeof this.sup == \"number\") {\n        // Si c'est un nombre c'est qu'il y a qu'une seule grandeur\n        grandeurs[0] = this.sup;\n        this.nbQuestions = 1;\n      } else {\n        grandeurs = this.sup.split(\"-\"); // Sinon on créé un tableau à partir des valeurs séparées par des -\n\n        this.nbQuestions = grandeurs.length;\n      }\n    }\n\n    let liste_index = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaisonListes)(grandeurs, this.nbQuestions);\n    let type_aide = 1;\n    if (!sortieHtml) type_aide = 0;\n    let solutes = [[`sel`, `d'eau`, 300], [`sucre`, `d'eau`, 2000], [`dioxyde de carbone`, `d'eau`, 3], [`bicarbonate de sodium`, `d'eau`, 9], [`carbonate de sodium`, `d'eau`, 300]]; //soluté, masse maximale en gramme pour saturer 1 L de solvant\n\n    let materiaux = [[`Paladium`, 12000], [`acier`, 7800], [`fonte`, 7100], [`aluminium`, 2700], [`argent`, 10500], [`bronze`, 8800], [`cuivre`, 8960], [`fer`, 7860], [`lithium`, 530], [`mercure`, 13545], [`nickel`, 8900], [`or`, 19300], [`platine`, 21450], [`titane`, 4500], [`zinc`, 7150]];\n    let villes = [[`Nice`, 342637, 71.9], [`Montpellier`, 281613, 56.9], [`Rennes`, 216268, 50.4], [`Dijon`, 155090, 40.4], [`Orléans`, 114782, 27.5], [`Clermont-Ferrand`, 142686, 42.7], [`Nantes`, 306694, 65.2], [`Paris`, 2190327, 105.4], [`Lyon`, 515695, 47.9], [`Marseille`, 862211, 240.6], [`Bordeaux`, 252040, 49.4], [`Nancy`, 104592, 15], [`Toulouse`, 475438, 118.3], [`Lille`, 232440, 34.8], [`Strasbourg`, 279284, 78.3]]; //[Ville, population, superfice en ha, année du recensement]\n\n    let locations = [[`un vélo`, 1.5, 2, 8], [`un canoé`, 10, 2, 4], [`des rollers`, 7, 2, 5], [`un char à voile`, 12, 2, 4]];\n    let cours = [[`de piano`, 20], [`de maths`, 25], [`de yoga`, 5], [`de dessin`, 12], [`de voile`, 15]];\n    let fruits = [[`pêches`, 4, 10, 30], [`Noix`, 5.4, 4, 13], [`cerises`, 5.6, 11, 20], [`pommes`, 2.2, 20, 40], [`framboises`, 15, 1, 5], [`fraises`, 7.5, 5, 10], [`citrons`, 1.5, 15, 30], [`bananes`, 1.5, 15, 25]];\n    let appareils = [[`radiateur`, 2000, 20], [`téléviseur`, 350, 12], [`four électrique`, 2500, 4], [`ordinateur`, 450, 8]]; // [appareil,puissance,durée maxi de fonctionnement]\n\n    let liquides = [[`de lait entier`, 1.032], [`d'essence`, 0.755], [`de diesel`, 0.83], [`d'huile`, 0.91], [`de bière`, 0.9], [`de sable`, 1.6]]; // [nom,densité]\n\n    let rivieres = [[`Marne`, `Gournay-sur-Marne`, 110, 550, `avril 1983`, `la `, `de la `], [`Seine`, `Alfortville`, 218, 2100, `janvier 1982`, `la `, `de la `], [`Oise`, `Pont-Sainte-Maxence`, 109, 665, `février 1995`, `l'`, `de l'`], [`Loire`, `Saint-Nazaire`, 931, 5350, `décembre 1999`, `la `, `de la`], [`Rhin`, `Strasbourg`, 951, 3310, `juin 2016`, `le `, `du `], [`Rhône`, `Beaucaire`, 1690, 11500, `décembre 2003`, `le `, `du `], [`Meuse`, `Chooz`, 144, 1610, `janvier 1995`, `la `, `de la `]]; // [Nom de rivière,Lieu de passage,débit moyen annuel, débitmax, date de la crue, article défini, article partitif]\n\n    let vitesses = [[`sur un vélo`, 4, 12, 8], [`dans un train`, 50, 100, 5], [`dans une voiture`, 15, 30, 5], [`en avion`, 150, 250, 12], [`à pied`, 2, 4, 5]]; // [moyen de transport, vitesse min,vitesse max en m/s,durée max en h]\n\n    for (let i = 0, j, index, index1, index2, duree, quidam, nbheures, nbminutes, nbsecondes, vitesse_moy, distance, masse, masse2, masse3, prix1, prix2, prix3, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (parseInt(liste_index[i])) {\n        case 1:\n          // problème de consommation éléctrique\n          index = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 3);\n          let appareil = appareils[index][0];\n          let puissance = appareils[index][1];\n          let duree_max = appareils[index][2];\n          let nbquartsdheures = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 3);\n          nbheures = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(duree_max / 4, duree_max, [1]);\n          duree = nbheures + nbquartsdheures * 0.25;\n          let prixkwh = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5) / 100 + 0.14);\n          texte = `L'étiquette apposée au dos d'un ${appareil} indique une puissance de ${puissance} Watts. On le fait fonctionner pendant ${Math.floor(duree)} heures `;\n          if (nbquartsdheures != 0) texte += `et ${nbquartsdheures * 15} minutes`;\n          texte += `.<br>Le prix d'un kWh est de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(prixkwh)} €.<br>`;\n\n          if (sortieHtml) {// les boutons d'aide uniquement pour la version html\n          }\n\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Exprimer en kWh l' ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i + 1, type_aide, \"énergie\", `Définition : énergie (grandeur physique)`, `C’est le produit de la puissance électrique (Watt) par le temps (s) et se mesure en Joule (J).<br>1 J=1 W × 1 s.<br>Cependant pour mesurer des énergies plus importantes on utilise plutôt le kiloWattheure (kWh).<br>1 kWh=1000 W × 1 h.`) + ` consommée.<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Calculer la dépense correspondante.`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Un ${appareil} d'une puissance de ${puissance} Watts qui fonctionne pendant ${Math.floor(duree)} heures `;\n          if (nbquartsdheures != 0) texteCorr += `et ${nbquartsdheures * 15} minutes`;\n          texteCorr += ` consomme : <br>`;\n          if (nbquartsdheures != 0) texteCorr += `$${nbheures}\\\\text{ h } ${nbquartsdheures * 15} = ${nbheures}\\\\text{ h} + ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texFractionReduite)(nbquartsdheures, 4)}\\\\text{ h} =${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(nbheures + nbquartsdheures * 0.25)}\\\\text{ h}$<br>`;\n          texteCorr += `$${puissance}\\\\text{ W}\\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(duree)}\\\\text{ h}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(puissance / 1000)}\\\\text{ kW}\\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(duree)}\\\\text{ h}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(puissance * duree * 0.001))}\\\\text{ kWh}.$<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Le prix de cette énergie consommée est : $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(prixkwh)}$ €$\\\\text{ /kWh} \\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(puissance * duree * 0.001))}\\\\text{ kWh}`;\n          if (!(prixkwh * puissance * duree / 10 == Math.round(prixkwh * puissance * duree / 10))) texteCorr += `\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondiVirgule)(prixkwh * puissance / 1000 * duree, 2)}$ €`;else texteCorr += `=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondiVirgule)(prixkwh * puissance / 1000 * duree, 2)}$ €`;\n          break;\n\n        case 2:\n          // problèmes de volumes\n          index1 = liste2[flag2];\n          flag2++;\n\n          switch (index1) {\n            case 0:\n              // Volume d'une piscine\n              let h1 = 180 + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 10) * 10;\n              let h2 = 80 + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 4) * 10;\n              let l = 5 + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5);\n              let L = l * 2 + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 4) * 2;\n              let deltat = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 5);\n              texte = `Une piscine a la forme d'un prisme droit. La profondeur à son extrémité nord est de ${h1} cm et la profondeur à son extrémité sud est de ${h2} cm.<br>`;\n              texte += `D\\'une extrémité à l\\'autre la pente au fond de la piscine est régulière.<br>La largeur de la piscine (Est-Ouest) est de ${l} m et sa longueur (Nord-Sud) est de ${L} m.<br>`;\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Calculer le ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3, type_aide, \"volume\", `Définition : volume (grandeur physique)`, `C’est le produit de trois longueurs ou le produit d'une aire et d'une longueur.<br>L'unité de mesure du volume est le mètre cube (m${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.exposant)(3)}) mais on peut aussi rencontrer le litre (L) avec comme correspondance 1dm${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.exposant)(3)}=1L`) + ` d'eau en m${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.exposant)(3)} contenu dans cette piscine quand elle est pleine.<br>`;\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Sachant que pour élever la température d'un litre d'eau de 1 degré, il faut une énergie de 1,162 Wattheure.<br> Quelle est l'énergie consommée en kWh pour augmenter de ${deltat} degrés ?<br>`;\n              texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` La base de ce prisme droit est un trapèze rectangle de petite base ${h2} cm, de grande base ${h1} cm et de hauteur ${L} m.<br>`;\n              texteCorr += `$\\\\mathcal{A}=\\\\dfrac{\\\\left(${h1}\\\\text{ cm}+${h2}\\\\text{ cm}\\\\right)}{2}\\\\times${L}\\\\text{ m}$`;\n              texteCorr += ` $=\\\\dfrac{\\\\left(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondiVirgule)(h1 / 100)}\\\\text{ m}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondiVirgule)(h2 / 100)}\\\\text{ m}\\\\right)}{2}\\\\times${L}\\\\text{ m}$`;\n              texteCorr += ` $=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondiVirgule)((h1 + h2) / 100)}\\\\text{ m}}{2}\\\\times${L}\\\\text{ m}$`;\n              texteCorr += ` $=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondiVirgule)((h1 + h2) / 200)}\\\\text{ m}\\\\times${L}\\\\text{ m}$`;\n              texteCorr += ` $=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondiVirgule)((h1 + h2) / 200 * L)}\\\\text{ m}$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.exposant)(2)}<br>`;\n              texteCorr += `Le volume de ce prisme et donc par extension le volume d'eau conteu dans la piscine est :<br>`;\n              texteCorr += `$\\\\mathcal{A}\\\\times\\\\mathcal{h}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondiVirgule)((h1 + h2) / 200 * L)}\\\\text{ m}^2\\\\times${l}\\\\text{ m}$`;\n              texteCorr += ` $=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondiVirgule)((h1 + h2) / 200 * L * l)}$m${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.exposant)(3)}.<br>`;\n              texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Convertissons le volume de la piscine en litres : $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondiVirgule)((h1 + h2) / 200 * L * l)}\\\\text{ m}^3=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((h1 + h2) * L * l * 5)}\\\\text{ dm}^3=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((h1 + h2) * L * l * 5)}\\\\text{ L}$<br>`;\n              texteCorr += ` L'énergie consomée pour élever la température de l'eau de cette piscine de ${deltat} degrés est :<br>`;\n              texteCorr += `$\\\\mathcal{E}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((h1 + h2) * L * l * 5)}\\\\text{ L}\\\\times${deltat}\\\\text{ °C}\\\\times 1,162 \\\\dfrac{\\\\text{Wh}}{\\\\text{°C}\\\\times\\\\text{L}}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((h1 + h2) * L * l * 5 * deltat * 1.162, 3))}\\\\text{ Wh}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((h1 + h2) * L * l / 200 * deltat * 1.162, 7))}\\\\text{ kWh}$<br>`;\n              break;\n\n            case 1:\n              // Volume d'un tonneau cylindrique\n              index2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5);\n              let r = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(10, 15) * 2;\n              let h = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 10) + r * 4;\n              texte = `Un tonneau cylindrique a un rayon de ${r} cm et une hauteur de ${h} cm.<br>`;\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Calculer le ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3, type_aide, \"volume\", `Définition : volume (grandeur physique)`, `C’est le produit de trois longueurs ou le produit d'une aire et d'une longueur.<br>L'unité de mesure du volume est le mètre cube ($\\\\text{m}^3$) mais on peut aussi rencontrer le litre (L) avec comme correspondance $\\\\text{1dm}^3=\\\\text{1L}$`) + ` en dm${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.exposant)(3)} à 0,1 près de ce tonneau.<br>`;\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Si on le remplit ${liquides[index2][0]} (dont la ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3, type_aide, \"densité\", `Définition : densité (grandeur physique)`, `La densité d'une substance est égale à la masse volumique de la substance divisée par la masse volumique du corps de référence à la même température.<br>Pour les liquides et les solides, l'eau est utilisée comme référence (sa masse volumique est de 1kg/dm$^3$), pour les gaz, la mesure s'effectue par rapport à l'air.<br>Donc pour les liquides, la densité est égale à la masse volumique exprimée en kg/dm$^3$.`) + ` est de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(liquides[index2][1])}), quelle masse ${liquides[index2][0]} en kg contiendra-t-il au gramme près ?<br>`;\n              texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Le volume d'un cylindre est donné par la formule $\\\\mathcal{A}\\\\text{ire de base}\\\\times\\\\mathcal{h}$.<br> Ici la base est un disque de rayon ${r} cm.<br>`;\n              texteCorr += `$\\\\mathcal{A}\\\\text{ire de base}\\\\times\\\\mathcal{h}=\\\\pi\\\\times${r}^{2}\\\\text{ cm}^2\\\\times${h}\\\\text{ cm}=${r * r * h}\\\\pi\\\\text{ cm}^3\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(r * r * h * Math.PI, 1))}\\\\text{ cm}^3\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(r * r * h * Math.PI / 1000, 1))}\\\\text{ dm}^3$<br>`;\n              texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` La masse ${liquides[index2][0]} contenue dans ce tonneau est :<br>`;\n              texteCorr += `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(r * r * h * Math.PI / 1000, 1))}\\\\text{ dm}^3\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(liquides[index2][1])} \\\\times 1 \\\\dfrac{kg}{dm^3}\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(r * r * h * Math.PI / 1000 * liquides[index2][1], 3))}\\\\text{ kg}$`;\n              break;\n          }\n\n          break;\n\n        case 3:\n          // Problème de quantité de mouvement et d'énergie cinétique\n          quidam = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n          index1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 4);\n          masse = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(40, 70);\n          vitesse_moy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(vitesses[index1][1], vitesses[index1][2]); // vitesse choisie pour l'exo\n\n          texte = `${quidam} se déplace ${vitesses[index1][0]} à la ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3, type_aide, `vitesse`, `Définition : Vitesse (grandeur physique)`, `La vitesse est le quotient de la distance parcourue par le temps de parcours.<br>L'unité officielle est le mètre par seconde ($\\\\text{m/s}$  ou  $\\\\text{m.s}^{-1}$) mais on utilise souvent le kilomètre par heure ($\\\\text{km/h}$  ou  $\\\\text{km.h}^{-1}$)`) + ` de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(vitesse_moy)} m/s.<br>`;\n          texte += `Elle pèse ${masse} kg.<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Calculer sa ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3 + 1, type_aide, \"quantité de mouvement\", `Définition : quantité de mouvement (grandeur physique)`, `C’est le produit de la masse d'un corps par sa vitesse.<br>L'unité de mesure de la quantité de mouvement est le ($\\\\text{kg.m.s}^{-1}$)`) + ` en $\\\\text{kg.m.s}^{-1}$.<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` En déduire son ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3 + 2, type_aide, \"énergie cinétique\", `Définition : énergie cinétique (grandeur physique)`, `L'énergie cinétique d'un corps de masse $m$ (en kg) assimilé à un point matériel se déplaçant à la vitesse $v$ (en m/s) est donné par la formule $E=\\\\dfrac{1}{2}\\\\times m\\\\times v^2$.<br>L'unité de mesure de l'énergie cinétique est le Joule (J).<br>$1J=1\\\\text{ kg.m}^2\\\\text{s}^{-2}$.`) + ` en Joules.`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` La quantité de mouvement de ${quidam} est : $${masse} \\\\text{ kg}\\\\times ${vitesse_moy}\\\\text{ m/s}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(masse * vitesse_moy)}\\\\text{ kg.m.s}^{-1}$<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` L'énergie cinétique de ${quidam} est : $\\\\dfrac{1}{2}\\\\times ${masse} \\\\text{ kg}\\\\times (${vitesse_moy}\\\\text{ m/s})^2=\\\\dfrac{${masse}\\\\times${vitesse_moy}^2}{2}\\\\text{ J}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(masse * vitesse_moy ** 2 / 2)}\\\\text{ J}$`;\n          break;\n\n        case 4:\n          // problème de moment et de couple de forces qui s'annulent.\n          quidam = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)();\n          index = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(60, 90); //masse du père (recyclage de variable)\n\n          masse = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(20, 30); //masse de l'enfant\n\n          distance = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(25, 35) / 10);\n          texte = `${quidam} qui pèse ${masse} kg se trouve sur le siège d'une balançoire \"` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3, 2, `trébuchet`, `Schéma explicatif`, `images/trebuchet.png`) + `\" dans un jardin d'enfant. Le siège est situé à ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(distance)} m du pivot central de la balançoire (bras de levier).<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Calculer le ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3 + 1, type_aide, `moment`, `Définition : momnent (grandeur physique)`, `Le moment d'une force d'intensité F(en Newton ou kg.m.s$^{-2}$) en un point M par rapport à un pivot P est le produit de F par la distance PM (appelée bras de levier) exprimée en mètres (lorsque cette force s'exerce perpendiculairement au bras de levier). Le moment est l'energie permettant de faire tourner l'objet autour du pivot.<br>L'unité de mesure du moment est le Joule (J).<br>$1J=1\\\\text{ kg.m}^2\\\\text{s}^{-2}$.`) + ` du ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3 + 2, type_aide, `poids`, `Définition : Poids`, `Le poids est le produit de la masse d'un objet par l'accélération de la pesanteur terrestre ($9,81\\\\text{ m.s}^{-2}$).<br>L'unité du poids est le Newton (N) : 1N=1kg.m.s$^{-2}$`) + ` de ${quidam} sur son siège par rapport au pivot central du trébuchet en Joules (on admettra que le bras de levier est horizontal).<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Le père de ${quidam} vient s'installer de l'autre côté du pivot central. Il pèse ${index} kg et s'installe de façon à ce que son poids permette d'équilibrer la balançoire à l'horizontale. Quelle doit être la longueur du bras de levier de son côté ( à quelle distance du pivot est-il assis ) ?<br>`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Le moment du poids de ${quidam} appliqué sur son siège par rapport au pivot central du trébuchet est :<br>`;\n          index1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(masse * 9.81 * distance); //pour éviter d'avoir trop de variable, je recycle\n\n          texteCorr += `$${masse}\\\\text{ kg} \\\\times 9,81 \\\\text{m.s}^{-2} \\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(distance)} \\\\text{ m} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(index1)}\\\\text{ kg.m}^2\\\\text{.s}^{-2}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(index1)}\\\\text{ J}$<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Afin d'équilibrer le trébuchet, le père de ${quidam} doit se placer de façon que le moment de son poids sur son point d'assise par rapport au pivot central du trébuchet soit égal à celui de ${quidam}, on obtient l'équation suivante où $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(`d`, `black`)}$ représente sa distance par rapport au pivot central :<br>`;\n          texteCorr += `$ ${index}\\\\text{ kg}\\\\times 9,81 \\\\text{m.s}^{-2} \\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(`d`, `black`)} \\\\text{ m}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(index1)}\\\\text{ J}$<br>`;\n          texteCorr += `D'où $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(`d`, `black`)}\\\\text{ m} = \\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(index1)}\\\\text{ J}}{${index}\\\\text{ kg}\\\\times 9,81 \\\\text{m.s}^{-2}}\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(index1 / (9.81 * index)))}\\\\text{ m}.$`;\n          break;\n\n        case 5:\n          //problème de trafic de coyageurs.\n          let d1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 6);\n          let d2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 6, [d1]);\n          let k = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(5, 8);\n          let n1 = k * d2;\n          let n2 = k * d1;\n          texte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Un bus de ville transporte en moyenne ${n1} personnes à la fois.<br> La longueur moyenne de déplacement est de ${d1} km.<br> Calculer le ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3, type_aide, `trafic`, `Définition : Trafic de voyageurs`, `Le trafic de voyageurs est le produit du nombre de voyageurs par la distance parcourue. L'unité est le voyageur.km qui correspond au déplacement d'un voyageur sur 1km`) + ` moyen de voyageurs en voyageurs.km.<br> `;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Un autre bus de ville transporte en moyenne ${n2} personnes à la fois.<br> La longueur moyenne de déplacement est de ${d2} km.<br> Montrer que le trafic de voyageur est le même qu'à la question ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0);\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Le trafic moyen de ce bus de ville est : $${n1}\\\\text{voyageurs}\\\\times${d1}\\\\text{km}=${n1 * d1}\\\\text{voyageurs.km}$.<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Le trafic moyen de ce bus de ville est : $${n2}\\\\text{voyageurs}\\\\times${d2}\\\\text{km}=${n2 * d2}\\\\text{voyageurs.km}$, donc ces deux bus ont le même trafic.`;\n          break;\n\n        case 6:\n          //problème de puissance électrique.\n          index = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 3);\n          index1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 3, [index]);\n          let I1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(appareils[index][1] / 230, 0) + 1;\n          texte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Un ${appareils[index][0]} est protégé par un fusible de ${I1} ampères, quelle est la ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3 + 1, type_aide, `puissance`, `Définition : Puissance (grandeur physique)`, `C’est le produit de la force électromotrice (tension) exprimée en Volt (V) par l'intensité du courant électrique exprimée en ampères (A).<br>L'unité de mesure de la puissance est le Watt (W)`) + ` maximale de cet appareil si il fonctionne sur le secteur ?<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Un ${appareils[index1][0]} fonctionne à une puissance maximum de ${appareils[index1][1]} W.<br>Quel est l'ampérage minimum nécessaire pour le fusible qui protégera ce ${appareils[index][0]} des court-ciruits ?<br>`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` La tension du secteur étant de 230V, la puissance maximale de ce ${appareils[index][0]} est de :<br>`;\n          texteCorr += `$230\\\\text{ V}\\\\times${I1}\\\\text{ A}=${230 * I1}\\\\text{ W}$<br>`;\n          let I2 = Math.floor(appareils[index1][1] / 230) + 1;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Pour fonctionner à la puissance maximum, cet appareil a besoin d'un courant d'une intensité de :<br>`;\n          texteCorr += `$\\\\dfrac{${appareils[index1][1]}\\\\text{ W}}{230 \\\\text{ V}} \\\\approx ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(appareils[index1][1] / 230))}\\\\text{ A}$.<br>`;\n          texteCorr += `Le fusible nécessaire pour protéger cet appareil des courts-circuits devra avoir une intensité de rupture minimum de ${I2} ampères.`;\n          break;\n\n        case 7:\n          // problème de vitesses\n          index2 = liste7[flag7];\n          flag7++;\n          quidam = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)(); //prenom choisi\n\n          switch (index2) {\n            case 0:\n              // problème de déplacements\n              index1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 4);\n              vitesse_moy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(vitesses[index1][1], vitesses[index1][2]); // vitesse choisie pour l'exo\n\n              distance = Math.round(vitesse_moy * 3.6 * vitesses[index1][3] * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(5, 20) / 10); //distance choisie pour question b\n\n              duree = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, vitesses[index1][3]);\n              texte = `${quidam} se déplace ${vitesses[index1][0]} à la ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3, type_aide, `vitesse`, `Définition : Vitesse (grandeur physique)`, `La vitesse est le quotient de la distance parcourue par le temps de parcours.<br>L'unité officielle est le mètre par seconde ($\\\\text{m/s}$  ou  $\\\\text{m.s}^{-1}$) mais on utilise souvent le kilomètre par heure ($\\\\text{km/h}$  ou  $\\\\text{km.h}^{-1}$)`) + ` de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(vitesse_moy)} m/s.<br>`;\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` En se déplaçant à cette vitesse pendant ${duree} h, quelle est la distance parcourue par ${quidam} en km ?<br>`;\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Si ${quidam} veut parcourir ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(distance)} km à cette vitesse, combien de temps durera le trajet ? Donner le résultat en heures, minutes et secondes.`;\n              texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` La distance parcourue par ${quidam} ${vitesses[index1][0]} en ${duree} h à la vitesse de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(vitesse_moy)} m/s est :<br>`;\n              texteCorr += `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(vitesse_moy)}\\\\text{ m/s}\\\\times${duree}\\\\text{ h}=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(vitesse_moy)}\\\\text{ m}}{1 \\\\text{ s}}\\\\times ${duree}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}\\\\text{ s}`;\n              texteCorr += `=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(vitesse_moy * 3600 * duree)}\\\\text{ m}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(vitesse_moy * 3.6 * duree)}\\\\text{ km}$<br>`;\n              texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Pour parcourir ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(distance)} km à cette vitesse, ${quidam} mettra :<br>`;\n              texteCorr += ` Partons de la formule $\\\\mathcal{V}=\\\\dfrac{\\\\mathcal{d}}{\\\\mathcal{t}}$ et remplaçons : $\\\\dfrac{${vitesse_moy}\\\\text{ m}}{1 \\\\text{ s}}=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(distance)}\\\\text{ km}}{\\\\mathcal{t}\\\\text{ h}}$<br>`;\n              texteCorr += `Rendons les unités homogènes : $\\\\dfrac{${vitesse_moy}\\\\text{ m}}{1 \\\\text{ s}}=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(distance * 1000)}\\\\text{ m}}{\\\\mathcal{t}\\\\text{ h}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}\\\\text{ s/h}}$<br>`;\n              texteCorr += `Appliquons l'égalité des produits en croix : ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.produitsEnCroix)([[`${vitesse_moy}\\\\text{ m}`, `1 \\\\text{ s}`], [`${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(distance * 1000)}\\\\text{ m}`, `\\\\mathcal{t}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}\\\\text{ s/h}`]])}<br>`;\n              texteCorr += `D'où : $\\\\mathcal{t}=\\\\dfrac{1 \\\\text{ s}\\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(distance * 1000)}\\\\text{ m}}{${vitesse_moy}\\\\text{ m}\\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}\\\\text{ s}}$ (t est le nombre décimal d'heures : les mètres et les secondes disparaissent car elles sont présentes au numérateur et au dénominateur.)<br>`;\n              texteCorr += `Soit : $\\\\mathcal{t}\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(distance * 1000 / vitesse_moy / 3600)}\\\\text{ h}\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(distance * 1000 / vitesse_moy, 0))}\\\\text{ s}\\\\approx`;\n              nbheures = Math.floor(distance * 1000 / vitesse_moy / 3600); //conversion en h min s\n\n              nbminutes = Math.floor(Math.floor(distance * 1000 / vitesse_moy) % 3600 / 60);\n              nbsecondes = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(distance * 1000 / vitesse_moy - 3600 * nbheures - 60 * nbminutes, 0);\n              texteCorr += `(${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(nbheures)}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(nbminutes)}\\\\times 60+${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(nbsecondes)})\\\\text{ s}\\\\approx`;\n              if (nbheures != 0) texteCorr += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(nbheures)}\\\\text{ h }`; //affichage de la réponse\n\n              if (nbminutes != 0) texteCorr += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(nbminutes)}\\\\text{ min }`;\n              texteCorr += `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(nbsecondes)}\\\\text{ s}$`;\n              break;\n\n            case 1:\n              // l'orage et la vitesse du son\n              duree = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 15); //durée pour question a)\n\n              distance = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(5, 15, [duree]) * 340; //distance de l'orage en m pour question b\n\n              texte = `Le son se déplace dans l'air à la ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3, type_aide, `vitesse`, `Définition : Vitesse (grandeur physique)`, `La vitesse est le quotient de la distance parcourue par le temps de parcours.<br>L'unité officielle est le mètre par seconde ($\\\\text{m/s}$  ou  $\\\\text{m.s}^{-1}$) mais on utilise souvent le kilomètre par heure ($\\\\text{km/h}$  ou  $\\\\text{km.h}^{-1}$)`) + ` de 340 m/s.<br>`;\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` ${quidam} voit un éclair dans le ciel et compte dans sa tête ${duree} secondes avant d'entendre le tonnerre.<br>`;\n              texte += `Quelle est la distance à laquelle l'éclair est tombé ?<br>`;\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` L'éclair suivant tombe sur le paratonnerre situé sur le clocher de l'église du village voisin.<br>`;\n              texte += `${quidam} sait que le clocher est situé à ${distance} m de sa position. Combien de temps se passe-t-il avant que ${quidam} n'entende le tonnerre ?`;\n              texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Calculons la distance à laquelle le premier éclair est tombé en utilisant la vitesse du son (on considère que la vitesse de la lumière est telle que l'éclair est visible instantanément) :<br>`;\n              texteCorr += `$340\\\\text{ m/s}=\\\\dfrac{340\\\\text{ m}}{1\\\\text{ s}}=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(duree)}\\\\times 340\\\\text{ m}}{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.miseEnEvidence)(duree)}\\\\times 1\\\\text{ s}}=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(duree * 340)}\\\\text{ m}}{${duree}\\\\text{ s}}$<br>`;\n              texteCorr += `La distance à laquelle l'éclair est tombé est donc de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(duree * 340)} m.<br>`;\n              texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Avec les données de l'énoncé nous pouvons écrire :<br>`;\n              texteCorr += `$\\\\dfrac{340\\\\text{ m}}{1\\\\text{ s}}=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(distance)}\\\\text{ m}}{\\\\mathcal{T}\\\\text{ s}}$<br>`;\n              texteCorr += `Soit grâce à l'égalité des produits en croix : $\\\\mathcal{T}\\\\text{ s}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.quatriemeProportionnelle)(`340 \\\\text{ m}`, `1 \\\\text{ s}`, distance + `\\\\text{ m}`, 0)}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(distance / 340))}\\\\text{ s}$<br>`;\n              texteCorr += `${quidam} entendra le tonnerre ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(distance / 340))} secondes après avoir vu l'éclair tomber sur le clocher.`;\n              break;\n\n            case 2:\n              // Le coureur\n              vitesse_moy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(vitesses[4][1] * 5, vitesses[4][2] * 5) / 5;\n              distance = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(5, 12);\n              texte = `${quidam} vient de courir ${distance} kilomètres. Sa montre connectée a enregistré l'` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i, type_aide, `allure`, `Définition : allure (grandeur physique)`, `L'allure est le temps exprimé en h,min,s pour parcourir un kilomètre.<br>L'unité est alors h/km ou min/km`) + `pour chaque kilomètre parcouru :`;\n              let allures = [];\n\n              for (let _j = 0; _j < distance; _j++) {\n                duree = Math.round(1000 / (vitesse_moy * (1 + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-10, 10) * 0.01)));\n                nbsecondes = duree % 60;\n                nbminutes = (duree - nbsecondes) / 60;\n                allures.push([nbminutes, nbsecondes]);\n              }\n\n              texte += \"$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c\"; // On construit le tableau des allures\n\n              texte += \"|c\";\n\n              for (let _j2 = 0; _j2 < allures.length; _j2++) texte += \"|c\";\n\n              texte += \"}\\\\hline  \\\\text{kilomètre}\";\n\n              for (let _j3 = 0; _j3 < allures.length; _j3++) texte += \"&\" + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(_j3 + 1);\n\n              texte += \"\\\\\\\\\\\\hline \\\\text{allure en minutes et secondes (par km)}\";\n\n              for (j = 0; j < allures.length; j++) texte += \"&\" + allures[j][0] + `\\\\text{ min }` + allures[j][1] + `\\\\text{ s}`;\n\n              texte += \"\\\\\\\\\\\\hline\\\\end{array}$<br>\";\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Calculer la durée totale de la course de ${quidam}.<br>`;\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` En déduire sa\t` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i + 1, type_aide, `vitesse`, `Définition : Vitesse (grandeur physique)`, `La vitesse est le quotient de la distance parcourue par le temps de parcours.<br>L'unité officielle est le mètre par seconde ($\\\\text{m/s}$  ou  $\\\\text{m.s}^{-1}$) mais on utilise souvent le kilomètre par heure ($\\\\text{km/h}$  ou  $\\\\text{km.h}^{-1}$)`) + ` moyenne en km/h sur le trajet total.<br>`;\n              texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(2) + ` ${quidam} s'entraîne pour un semi-marathon (21,0975 km). En courant à la même vitesse, combien de temps durerait son semi-marathon ?`;\n              texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` La durée totale de la course de ${quidam} est :<br>`;\n              allures.push([0, 0]);\n              duree = 0;\n\n              for (let _j4 = 0; _j4 < distance; _j4++) {\n                allures[distance][1] += allures[_j4][1];\n\n                if (allures[distance][1] > 59) {\n                  allures[distance][0] += 1;\n                  allures[distance][1] = allures[distance][1] % 60;\n                }\n\n                allures[distance][0] += allures[_j4][0];\n\n                if (allures[distance][0] > 59) {\n                  duree++;\n                  allures[distance][0] = allures[distance][0] % 60;\n                }\n              }\n\n              for (let _j5 = 0; _j5 < distance - 1; _j5++) {\n                texteCorr += `${allures[_j5][0]} min ${allures[_j5][1]} s + `;\n              }\n\n              texteCorr += `${allures[distance - 1][0]} min ${allures[distance - 1][1]} s = `;\n              if (duree != 0) texteCorr += `${duree} h `;\n              if (allures[distance][0] != 0) texteCorr += `${allures[distance][0]} min `;\n              if (allures[distance][1] != 0) texteCorr += `${allures[distance][1]} s.`;\n              texteCorr += `<br>` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` ${quidam} a effectué ${distance} km en `;\n              if (duree != 0) texteCorr += `${duree} h `;\n              if (allures[distance][0] != 0) texteCorr += `${allures[distance][0]} min `;\n              if (allures[distance][1] != 0) texteCorr += `${allures[distance][1]} s<br>Soit `;\n              if (duree != 0) texteCorr += `${duree} h `;\n              if (allures[distance][0] != 0) texteCorr += ` $\\\\dfrac{${allures[distance][0]}}{60}$ h `;\n              if (allures[distance][1] != 0) texteCorr += ` $\\\\dfrac{${allures[distance][1]}}{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}}$ h = `;\n              texteCorr += `$\\\\dfrac{`;\n              if (duree != 0) texteCorr += `${duree}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)} + `;\n              texteCorr += `${allures[distance][0]}\\\\times 60+${allures[distance][1]}}{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}}$ h = `;\n              texteCorr += `$\\\\dfrac{`;\n\n              if (duree != 0) {\n                duree = duree * 3600 + allures[distance][0] * 60 + allures[distance][1];\n                texteCorr += `${duree}}`;\n              } else {\n                duree = allures[distance][0] * 60 + allures[distance][1];\n                texteCorr += `${duree}}`;\n              }\n\n              texteCorr += `{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}}$ h.<br>`;\n              texteCorr += `Sa vitesse en km/h est par conséquent :<br>$${distance} \\\\text{ km}\\\\div\\\\dfrac{${duree}}{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}}\\\\text{ h}=`;\n              texteCorr += `${distance} \\\\text{ km}\\\\times\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}}{${duree}}\\\\text{ h}^{-1}=\\\\dfrac{${distance}\\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}}{${duree}}\\\\text{km.h}^{-1}`;\n              vitesse_moy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(distance * 3600 / duree);\n              texteCorr += `\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(vitesse_moy)}$ km/h<br>`;\n              texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(2) + ` Si elle court 21,0975 km à cette vitesse de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(vitesse_moy)} km/h, ${quidam} mettra :<br>`;\n              duree = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(21.0975 / vitesse_moy, 4);\n              texteCorr += `$\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(21.0975)} \\\\text{ km}}{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(vitesse_moy)} \\\\text{ km.h}^{-1}}\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(duree)}$ h soit `;\n              nbheures = Math.floor(duree);\n              duree = (duree - nbheures) * 60;\n              nbminutes = Math.floor(duree);\n              duree = Math.round((duree - nbminutes) * 60);\n              texteCorr += ` environ ${nbheures} h ${nbminutes} min ${duree} s.`;\n              break;\n          }\n\n          break;\n\n        case 8:\n          //problème de prix massique\n          index1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 7);\n          index2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5, [index1]);\n          index = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5, [index1, index2]);\n          masse = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(fruits[index1][2], fruits[index1][3]) / 10);\n          masse2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(fruits[index2][2], fruits[index2][3]) / 10);\n          masse3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(fruits[index][2], fruits[index][3]) / 10);\n          prix1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(masse * fruits[index1][1]);\n          prix2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(masse2 * fruits[index2][1]);\n          prix3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(masse3 * fruits[index][1]);\n          quidam = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n          texte = `${quidam} se rends à l'épicerie de son quartier. Elle y achète ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse)} kg de ${fruits[index1][0]} à ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(fruits[index1][1])} €/kg et pour ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(prix2)} € de ${fruits[index2][0]} à ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(fruits[index2][1])} €/kg.<br>`;\n          texte += `Enfin, elle achète ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse3)} kg de ${fruits[index][0]} pour ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(prix3)} €.<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Combien lui coûtent les ${fruits[index1][0]} ?<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Quelle masse de ${fruits[index2][0]} a-t-elle achetée ?<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(2) + ` Quel est le prix au kilogramme des ${fruits[index][0]} ?`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` ${quidam} dépense pour les ${fruits[index1][0]} : $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse)}\\\\text{ kg} \\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(fruits[index1][1])}$ €$\\\\text{/kg} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(prix1)}$ €.<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` La masse de ${fruits[index2][0]} qu'elle a achetée est : $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(prix2)} $ €$ \\\\div ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(fruits[index2][1])}$ €$\\\\text{/kg} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse2)}\\\\text{ kg}$.<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(2) + ` Enfin, ${quidam} a acheté des ${fruits[index][0]} au prix unitaire de : $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(prix3)}$ € $\\\\div ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse3)}\\\\text{ kg} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(fruits[index][1])}$ €$\\\\text{/kg}$.`;\n          break;\n\n        case 9:\n          //problème de prix horaire\n          index1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 3);\n          index2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 4);\n          nbheures = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(locations[index1][1], locations[index1][2]);\n          prix1 = locations[index1][1];\n          prix2 = cours[index2][1] * (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 6);\n          quidam = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n          texte = `${quidam} a prévu de louer ${locations[index1][0]} pendant ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(nbheures)} heures. L'heure de location coûte ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(prix1)} €.<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Combien cette location va lui coûter ?<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` ${quidam} a pris des leçons particulières ${cours[index2][0]}. En tout ce mois-ci elle a eu ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(prix2 / cours[index2][1])} heures de cours pour ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(prix2)} €. Combien demande son professeur pour une heure de cours ?<br>`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` ${quidam} va dépenser pour sa location : $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(nbheures)}\\\\text{ h} \\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(prix1)}$ €$\\\\text{/h} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(nbheures * prix1)}$ €.<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` L'heure de cours ${cours[index2][0]} coûte : $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(prix2)}$ € $ \\\\div ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(prix2 / cours[index2][1])}\\\\text{ h} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_prix)(cours[index2][1])}$ €$\\\\text{/h}$.<br>`;\n          break;\n\n        case 10:\n          //problème de densité de population\n          index1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 14);\n          index2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 14, [index1]);\n          texte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` En 2016, à ${villes[index1][0]} il y avait $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(villes[index1][1])}$ habitants pour une superficie de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(villes[index1][2] * 100)}$ ha.<br> Calculer la densité de population en hab/km$^2$.<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` La même année, la ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3 + 1, type_aide, `densité de population`, `Définition : Densité de population`, `C’est le quotient du nombre d'habitants par la superficie en km$^2$.<br>L'unité de la densité de population est l'habitant par km$^2$ (hab/km$^2$).`) + ` de ${villes[index2][0]} était de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(villes[index2][1] / villes[index2][2])}$ hab/km$^2$ pour une superficie de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(villes[index2][2] * 100)}$ ha.<br> Calculer le nombre d'habitants de ${villes[index2][0]} à cette date.<br>`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` En 2016, la densité de population à ${villes[index1][0]} était de :<br> $\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(villes[index1][1])}\\\\text{ hab}}{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(villes[index1][2] * 100)}\\\\text{ ha}}=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(villes[index1][1])}\\\\text{ hab}}{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(villes[index1][2])}\\\\text{ km}^2}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(villes[index1][1] / villes[index1][2])}\\\\text{ hab/km}^{2}$.<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` A cette date, le nombre d'habitants de ${villes[index2][0]} était de :<br> $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(villes[index2][1] / villes[index2][2])}\\\\text{ hab/km}^2\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(villes[index2][2] * 100)}\\\\text{ ha}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(villes[index2][1] / villes[index2][2])}\\\\text{ hab/km}^2\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(villes[index2][2])}\\\\text{ km}^{2}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(villes[index2][1])}\\\\text{ hab}$.`;\n          break;\n\n        case 11:\n          //problème de masse volumique\n          index1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 14);\n          index2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 14, [index1]);\n          let V1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(50, 100);\n          masse2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(5, 30);\n          masse = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(materiaux[index1][1] * V1 / 1000000);\n          let V2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(masse2 / materiaux[index2][1], 7);\n          texte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` La ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i * 3 + 1, type_aide, `masse volumique`, `Définition : Masse volumique (grandeur physique)`, `La masse volumique d'un élément est le quotient de la masse de cet élément par le volume qu'il occupe.<br>L'unité de la masse volumique dépend de la nature de l'élément et peut s'exprimer kg/m$^3$ pour les solides g/L pour les gaz par exemple.`) + ` du ${materiaux[index1][0]} est de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(materiaux[index1][1])}\\\\text{ kg/m}^3$.<br>`;\n          texte += `Quelle est la masse d'une pièce de ce métal de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(V1)}\\\\text{ cm}^3$ ?<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Quel est le volume d'une pièce de ${materiaux[index2][0]} ayant une masse de `;\n          texte += `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse2)}\\\\text{ kg}$ (la masse volumique du ${materiaux[index2][0]} est de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(materiaux[index2][1])}\\\\text{ kg/m}^3$)<br>`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` La masse de cette pièce de ${materiaux[index1][0]} est de :<br>$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(materiaux[index1][1])}\\\\text{ kg/m}^3\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(V1)}\\\\text{ cm}^3=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(materiaux[index1][1])}\\\\text{ kg/m}^3\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(V1 / 1000000)}\\\\text{ m}^3=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse)}\\\\text{ kg}$.<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` Le volume de cette pièce de ${materiaux[index2][0]} est de :<br>$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse2)}\\\\text{ kg}\\\\div ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(materiaux[index2][1])}\\\\text{ kg/m}^3\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(V2)}\\\\text{ m}^3\\\\approx${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(V2 * 1000000)}\\\\text{ cm}^3$<br>`;\n          break;\n\n        case 12:\n          //problème de concentration massique\n          index1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 4);\n          index2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 4, [index1]);\n          let Volume1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 15, [10]) / 10);\n          let Volume2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 15, [10]) / 10);\n          if (solutes[index1][2] < 10) masse = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(11, solutes[index1][2] * 10) * Volume1 / 10);else masse = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, solutes[index1][2]) * Volume1);\n          let concentration2;\n          if (solutes[index2][2] < 10) concentration2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(11, solutes[index2][2] * 10) / 10); //concentration en g/L soluté 2.\n          else concentration2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, solutes[index2][2]);\n          texte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` On a dissout $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse)}\\\\text{ g}$ de ${solutes[index1][0]} dans $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(Volume1)}\\\\text{ litres}$ ${solutes[index1][1]}.<br>Calculer la concentration massique de cette solution.<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` On dispose de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(Volume2)}$ litres de solution aqueuse de ${solutes[index2][0]} à $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(concentration2)}\\\\text{ g/L}$.<br>Quelle masse de ${solutes[index2][0]} a été dissoute dans l'eau ?`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` La concentration en ${solutes[index1][0]} de cette solution aqueuse est de :<br>`;\n          texteCorr += ` $\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse)}\\\\text{ g}}{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(Volume1)}\\\\text{ litres}}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(masse / Volume1))}\\\\text{ g/L}$<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` La masse de ${solutes[index2][0]} dissoute est de :<br>`;\n          texteCorr += `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(Volume2)}\\\\text{ L}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(concentration2)}\\\\text{ g/L}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(Volume2 * concentration2))}\\\\text{ g}$`;\n          break;\n\n        case 13:\n          //problème de débit\n          index2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 6);\n          duree = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 24);\n          let vmax = rivieres[index2][3] * 3600;\n          texte = `Le ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i, type_aide, `débit`, `Définition : Débit (grandeur physique)`, `Le débit est le quotient d'un volume d'eau écoulée dans une section de conduit par le temps d'écoulement.<br>L'unité officielle est le mètre cube par seconde ($\\\\text{m}^3/\\\\text{s}$  et dans certains cas on peut utiliser le litre par minute (L/min)`) + ` annuel moyen ${rivieres[index2][6]}${rivieres[index2][0]} mesuré à ${rivieres[index2][1]} est de ${rivieres[index2][2]} m${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.exposant)(3)}/s.<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` Calculer le volume d'eau en m${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.exposant)(3)} écoulé en ${duree} heures à ce débit.<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` En ${rivieres[index2][4]} à ${rivieres[index2][1]}, ${rivieres[index2][5]}${rivieres[index2][0]} a débité ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(vmax)} m${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.exposant)(3)} en une heure. Quel a été alors le débit en m³/s ?`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` En ${duree} heures il s'écoule en moyenne dans ${rivieres[index2][5]}${rivieres[index2][0]} à ${rivieres[index2][1]} :<br>`;\n          texteCorr += `$\\\\mathcal{V}=${duree}\\\\text{ h}\\\\times${rivieres[index2][2]}\\\\text{ m}^3\\\\text{/s}=${duree}\\\\times 3600\\\\text{ s}\\\\times${rivieres[index2][2]}\\\\text{ m}^3\\\\text{/s}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(duree * 3600 * rivieres[index2][2])}\\\\text{ m}^3$<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` En ${rivieres[index2][4]} lors de la crue historique ${rivieres[index2][6]}${rivieres[index2][0]} à ${rivieres[index2][1]} le débit maximal a été de :<br>`;\n          texteCorr += `Débit =$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(vmax)}\\\\text{ m}^3\\\\text{/h}=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(vmax)}\\\\text{ m}^3}{1\\\\text{ h}}=\\\\dfrac{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(vmax)}\\\\text{ m}^3}{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(3600)}\\\\text{ s}}=${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(vmax / 3600)}\\\\text{ m}^3\\\\text{/s}$<br>`;\n          break;\n\n        case 14:\n          // problème de vitesse de téléchargement\n          let unites = [`ko`, `Mo`, `Go`];\n          index = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 1);\n          if (index == 0) vitesse_moy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(200, 999);else vitesse_moy = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 20);\n          quidam = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)();\n          nbminutes = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 10);\n          nbsecondes = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 59);\n          masse = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(15, 35) / 10);\n          texte = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` ${quidam} télécharge un fichier depuis un espace de stockage en ligne. Sa ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.katexPopup2)(numeroExercice + i, type_aide, `vitesse de téléchargement`, `Définition : Vitesse de téléchargement`, `La vitesse de téléchargement est le quotient de la quantité de données téléchargées (en ko,Mo ou Go) par la durée de téléchargement (en seconde).<br>L'unité de cette grandeur quotient est le ko/s (ou Mo/s)`) + ` est de ${vitesse_moy} ${unites[index]}/s.<br>`;\n          texte += `Le téléchargement dure ${nbminutes} minutes et ${nbsecondes} secondes. Quelle est la taille du fichier téléchargé en ${unites[index]} ?<br>`;\n          texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` ${quidam} veut télécharger un fichier de ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(masse)} Go. Quelle sera la durée du téléchargement si sa vitesse de téléchargement est de ${vitesse_moy} ${unites[index]}/s ?<br>`;\n          texteCorr = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(0) + ` La taille du fichier téléchargé est :<br>`;\n          let taille_fichier = (nbminutes * 60 + nbsecondes) * vitesse_moy;\n          texteCorr += `$(${nbminutes}\\\\times 60 +${nbsecondes})\\\\text{ s}\\\\times ${vitesse_moy} \\\\text{ ${unites[index]}/s} = ${nbminutes * 60 + nbsecondes}\\\\text{ s}\\\\times ${vitesse_moy} \\\\text{ ${unites[index]}/s} = ${taille_fichier} \\\\text{ ${unites[index]} }$`;\n          if (taille_fichier > 1000) texteCorr += `$ =${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(taille_fichier / 1000)} \\\\text{ ${unites[index + 1]}}.$<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.numAlpha)(1) + ` La durée du téléchargement sera de :<br>`;\n\n          if (index == 0) {\n            texteCorr += `$${masse}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(10 ** 6)} \\\\text{ ko} \\\\div ${vitesse_moy} \\\\text{ ${unites[index]}/s}$`;\n            taille_fichier = masse * 10 ** 6;\n          } else {\n            texteCorr += `$${masse}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombrec)(10 ** 3)} \\\\text{ Mo} \\\\div ${vitesse_moy} \\\\text{ ${unites[index]}/s}$`;\n            taille_fichier = masse * 10 ** 3;\n          }\n\n          texteCorr += `$=\\\\dfrac{${taille_fichier}}{${vitesse_moy}}\\\\text{ s}`;\n          nbheures = Math.floor(taille_fichier / vitesse_moy / 3600);\n          nbminutes = Math.floor((taille_fichier / vitesse_moy - 3600 * nbheures) / 60);\n          nbsecondes = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.arrondi)(taille_fichier / vitesse_moy - 3600 * nbheures - 60 * nbminutes, 0);\n          if (taille_fichier / vitesse_moy == nbsecondes + 60 * nbheures + 3600 * nbheures) texteCorr += `=`;else texteCorr += `\\\\approx`;\n          if (nbheures != 0) texteCorr += `${nbheures} \\\\text{ h }`;\n          if (nbminutes != 0) texteCorr += `${nbminutes} \\\\text{ min }`;\n          if (nbsecondes != 0) texteCorr += `${nbsecondes} \\\\text { s}`;\n          texteCorr += `$`;\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n\n      cpt++;\n    }\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeQuestionsToContenu)(this); //Espacement de 2 em entre chaque questions.\n  }; //this.besoinFormulaireCaseACocher =['Choix des exercices aléatoire'];\n  //this.besoin_formulaire2_numerique = ['Type d\\'exercice', 14, '1 : Energie consommée\\n 2 :  Volumes\\n 3 : Quantité de mouvement & Energie cinétique\\n 4 : Moment de force\\n 5 : Trafic de voyageurs\\n 6 : Puissance électrique\\n 7 : Vitesses\\n 8 : Prix massique\\n 9 : Prix horaire\\n 10 : Densité de population\\n 11 : Masse volumique\\n 12 : Concentration massique\\n 13 : Débits\\n 14 : Transfert de fichiers'];\n\n\n  this.besoinFormulaireTexte = [\"Choix des grandeurs\", \"Nombres séparés par des tirets\\n 1 : Energie consommée\\n 2 :  Volumes\\n 3 : Quantité de mouvement & Energie cinétique\\n 4 : Moment de force\\n 5 : Trafic de voyageurs\\n 6 : Puissance électrique\\n 7 : Vitesses\\n 8 : Prix massique\\n 9 : Prix horaire\\n 10 : Densité de population\\n 11 : Masse volumique\\n 12 : Concentration massique\\n 13 : Débits\\n 14 : Transfert de fichiers\"]; // Texte, tooltip\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/exercices/4e/4P10.js\n");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice() {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigneCorrection = '';\n  this.listeQuestions = [];\n  this.listeCorrections = [];\n  this.introduction = '';\n  this.contenu = '';\n  this.contenuCorrection = '';\n  this.nbQuestions = 10;\n  this.nbCols = 2;\n  this.nbColsCorr = 2;\n  this.spacing = 1;\n  this.spacingCorr = 1;\n  this.beamer = false;\n  this.besoinFormulaireNumerique = false; // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n\n  this.besoinFormulaireTexte = false; // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n\n  this.besoinFormulaireCaseACocher = false; // Sinon this.besoinFormulaireCaseACocher = [texte];\n\n  this.consigneModifiable = true;\n  this.nbQuestionsModifiable = true;\n  this.nbColsModifiable = true;\n  this.nbColsCorrModifiable = true;\n  this.spacingModifiable = true;\n  this.spacingCorrModifiable = true;\n  this.correctionDetailleeDisponible = false;\n  this.correctionDetaillee = true;\n  this.video = '';\n  this.boutonAide = false;\n  this.tailleDiaporama = 50; // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  this.pasDeVersionLatex = false;\n  this.qcm = false; // Pour les exercices de type QCM : contient un tableau.\n\n  this.qcmDisponible = false; // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n\n  this.modeQcm = false; // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false; // pas d'interface par défaut pour les figures MG32\n\n  this.nouvelleVersion = function (numeroExercice) {};\n\n  this.listePackages = []; // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWF0aGFsZWEvLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzP2RiNDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogIENsYXNzZSBwYXJlbnRlIGRlIHRvdXMgbGVzIGV4ZXJjaWNlc1xuICpcbiAqIEBBdXRldXIgUsOpbWkgQW5nb3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRXhlcmNpY2UgKCkge1xuICAvLyBDbGFzc2UgcGFyZW50ZSBkZSB0b3VzIGxlcyBleGVyY2ljZXMgcXVpIHNlcm9udCBjcsOpw6lzXG4gIHRoaXMudGl0cmUgPSAnJ1xuICB0aGlzLmNvbnNpZ25lID0gJydcbiAgdGhpcy5jb25zaWduZUNvcnJlY3Rpb24gPSAnJ1xuICB0aGlzLmxpc3RlUXVlc3Rpb25zID0gW11cbiAgdGhpcy5saXN0ZUNvcnJlY3Rpb25zID0gW11cbiAgdGhpcy5pbnRyb2R1Y3Rpb24gPSAnJ1xuICB0aGlzLmNvbnRlbnUgPSAnJ1xuICB0aGlzLmNvbnRlbnVDb3JyZWN0aW9uID0gJydcbiAgdGhpcy5uYlF1ZXN0aW9ucyA9IDEwXG4gIHRoaXMubmJDb2xzID0gMlxuICB0aGlzLm5iQ29sc0NvcnIgPSAyXG4gIHRoaXMuc3BhY2luZyA9IDFcbiAgdGhpcy5zcGFjaW5nQ29yciA9IDFcbiAgdGhpcy5iZWFtZXIgPSBmYWxzZVxuXG4gIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IGZhbHNlIC8vIFNpbm9uIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IFt0ZXh0ZSxtYXgsdG9vbHRpcCBmYWN1bHRhdGlmXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlVGV4dGUgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVUZXh0ZSA9IFt0ZXh0ZSx0b29sdGlwXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlQ2FzZUFDb2NoZXIgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVDYXNlQUNvY2hlciA9IFt0ZXh0ZV07XG4gIHRoaXMuY29uc2lnbmVNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iUXVlc3Rpb25zTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5uYkNvbHNNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iQ29sc0NvcnJNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdDb3JyTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5jb3JyZWN0aW9uRGV0YWlsbGVlRGlzcG9uaWJsZSA9IGZhbHNlXG4gIHRoaXMuY29ycmVjdGlvbkRldGFpbGxlZSA9IHRydWVcbiAgdGhpcy52aWRlbyA9ICcnXG4gIHRoaXMuYm91dG9uQWlkZSA9IGZhbHNlXG4gIHRoaXMudGFpbGxlRGlhcG9yYW1hID0gNTAgLy8gVGFpbGxlIGVuIHBpeGVscyBwb3VyIGxlIGNhbGN1bCBjaHJvbm9tw6l0csOpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsVGV4dGVDb3VydChudW1lcm9FeGVyY2ljZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFRleHRlTG9uZyhudW1lcm9FeGVyY2ljZSx0aXRyZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFlvdXR1YmUobnVtZXJvRXhlcmNpY2UsaWRfeW91dHViZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlIC0gVmlkw6lvXCIsaWNvbmU9XCJ5b3V0dWJlXCIpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsUGRmKG51bWVyb0V4ZXJjaWNlLHVybF9wZGYsdGV4dGU9XCJBaWRlXCIsbGFiZWxfYm91dG9uPVwiQWlkZSAtIFBERlwiLGljb25lPVwiZmlsZSBwZGZcIilcbiAgLy8gdGhpcy52c3BhY2UgPSAtMSAvL0Fqb3V0ZSB1biBcXHZzcGFjZXstMWNtfSBhdmFudCBsJ8Opbm9uY8OpIGNlIHF1aSBwZXV0IMOqdHJlIHByYXRpcXVlIHBvdXIgZGVzIGV4ZXJjaWNlcyBhdmVjIGRlcyBmaWd1cmVzLlxuICB0aGlzLnBhc0RlVmVyc2lvbkxhdGV4ID0gZmFsc2VcbiAgdGhpcy5xY20gPSBmYWxzZSAvLyBQb3VyIGxlcyBleGVyY2ljZXMgZGUgdHlwZSBRQ00gOiBjb250aWVudCB1biB0YWJsZWF1LlxuICB0aGlzLnFjbURpc3BvbmlibGUgPSBmYWxzZSAvLyBQb3VyIGFqb3V0ZXIgdW5lIGNhc2Ugw6AgY29jaGVyIE1vZGUgUUNNIHF1aSBwZXJtZXQgZGUgY2hhbmdlciBsZSBzdGF0dXQgZGUgdGhpcy5tb2RlUWNtXG4gIHRoaXMubW9kZVFjbSA9IGZhbHNlIC8vIFBvdXIgY2hvaXNpciBsYSB2ZXJzaW9uIFFDTSBvdSBsYSB2ZXJzaW9uIGNsYXNzaXF1ZSAoZmFsc2UgPSB2ZXJzaW9uIGNsYXNzaXF1ZSlcblxuICB0aGlzLm1nMzJFZGl0YWJsZSA9IGZhbHNlIC8vIHBhcyBkJ2ludGVyZmFjZSBwYXIgZMOpZmF1dCBwb3VyIGxlcyBmaWd1cmVzIE1HMzJcbiAgdGhpcy5ub3V2ZWxsZVZlcnNpb24gPSBmdW5jdGlvbiAobnVtZXJvRXhlcmNpY2UpIHt9XG4gIHRoaXMubGlzdGVQYWNrYWdlcyA9IFtdIC8vIHN0cmluZyBvdSBsaXN0ZSBkZSBzdHJpbmcgYXZlYyBsZSBub20gZGVzIHBhY2thZ2VzIHNww6ljaWZpcXVlcyDDoCBham91dGVyIGRhbnMgbGUgcHLDqWFtYnVsZVxuICAvLyB0aGlzLnR5cGVFeGVyY2ljZSA9IFwiTUczMlwiO1xuICAvLyB0aGlzLmRpbWVuc2lvbnNEaXZNZzMyID0gWzUwMCwgNDUwXTtcbiAgLy8gdGhpcy50eXBlRXhlcmNpY2UgPSBcIlNjcmF0Y2hcIlxuICAvLyB0aGlzLnFjbT1bXCJRdWVscyBzb250IGxlcyBub21icmVzIHBhaXJzID9cIixbNywxMiwzNCwyNSwxOF0sWzAsMSwxLDAsMV1dID0+W1wiTGEgcXVlc3Rpb25cIixbbGVzIHLDqXBvbnNlc10sW2Jvbm5lPTEgZXQgbWF1dmFpc2U9MF1dXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/exercices/ClasseExercice.js\n");

/***/ })

}]);