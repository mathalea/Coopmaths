{"version":3,"file":"js/96492.0341d296b774d8b95bb4.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N20-8.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, texNombre } from '../../modules/outils.js'\n\nexport const titre = 'Déterminer la parité d’une expression'\n\n/**\n * 2N21\n * @author Stéphane Guyon\n */\nexport default function parite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Soit $n$ un entier naturel.'\n  this.nbQuestions = 4\n  this.nbCols = 2\n  this.nbColsCorr = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2, 3]; let typesDeQuestions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, a, b, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        // Cas par cas, on définit le type de nombres que l'on souhaite\n        // Combien de chiffres ? Quelles valeurs ?\n        case 1:\n\n          a = randint(2, 6)\n          b = randint(2, 11, [4, 8, 9])\n\n          texte = `Que peut-on dire de la parité de ${a}$n$ ?`\n          if (a % 2 === 0 && a !== 2) {\n            texteCorr = `${a}$n=2\\\\times ${texNombre(a / 2)}n$<br>\n                        Comme $${texNombre(a / 2)}n$ est un entier naturel, ${a}$n$ s'écrit comme le double d'un entier naturel, il est donc pair`\n          }\n          if (a === 2) {\n            texteCorr = `${a}$n=2\\\\times n$<br>\n                        Comme $n$ est un entier naturel, ${a}$n$ s'écrit comme le double d'un entier naturel, il est donc pair`\n          }\n\n          if (a === 3) {\n            texteCorr = `${a}$n=2n+n$<br>\n                            Comme $n$ est un entier naturel, $2 n$ est un nombre pair.<br>\n                            Si $n$ est pair, $2n+n$ est la somme de deux nombres pairs, il sera donc pair. <br>\n                            Si $n$ est impair, $2n+n$ est la somme d'un nombre pair et d'un impair, il sera donc impair. <br>\n                            Au final, ${a}$n$ a donc la même parité que $n$.`\n          }\n          if (a % 2 !== 0 && a !== 3) {\n            texteCorr = `${a}$n=2\\\\times ${texNombre((a - 1) / 2)}n+n$<br>\n                            Comme $${texNombre((a - 1) / 2)}n$ est un entier naturel, $2\\\\times ${texNombre((a - 1) / 2)}n$ est un nombre pair.<br>\n                            Si $n$ est pair, $2\\\\times${texNombre((a - 1) / 2)}n+n$ est la somme de deux nombres pairs, il sera donc pair. <br>\n                            Si $n$ est impair, $2\\\\times${texNombre((a - 1) / 2)}n+n$ est la somme d'un nombre pair et d'un impair, il sera donc impair. <br>\n                            Au final, ${a}$n$ a donc la même parité que $n$.`\n          }\n\n          break\n        case 2:\n          a = randint(2, 6)\n          b = randint(2, 11)\n\n          texte = `Que peut-on dire de la parité de $${a}n+${b}$ ?`\n\n          if (a % 2 === 0 && b % 2 === 0 && a !== 2) {\n            texteCorr = `$${a}n+${b}=2\\\\times ${texNombre(a / 2)}n+${b}$<br>\n                        Comme $${texNombre(a / 2)}n$ est un entier naturel, $2\\\\times ${texNombre(a / 2)}n$ est donc un nombre pair<br>\n                        ${b} est aussi un nombre pair.\n                        $${a}n+${b}$ est donc la somme de deux nombres pairs, il est donc pair`\n          }\n          if (a % 2 === 0 && b % 2 !== 0 && a !== 2) {\n            texteCorr = `$${a}n+${b}=2\\\\times ${texNombre(a / 2)}n+${b}$<br>\n                        Comme $${texNombre(a / 2)}n$ est un entier naturel, $2\\\\times ${texNombre(a / 2)}n$ est donc un nombre pair<br>\n                        ${b} est un nombre impair.\n                        $${a}n+${b}$ est donc la somme d'un nombre pair et d'un nombre impair. Il est donc impair`\n          }\n\n          if (a === 2 && b % 2 === 0) {\n            texteCorr = `Comme $n$ est un entier naturel, $2n$ est un nombre pair<br>\n                        ${b} est aussi un nombre pair.\n                        $${a}n+${b}$ est donc la somme de deux nombres pairs, il est donc pair`\n          }\n\n          if (a === 2 && b % 2 !== 0) {\n            texteCorr = `\n                        Comme $n$ est un entier naturel, $2n$ est un nombre pair<br>\n                        ${b} est un nombre impair.<br>\n                        $2n+${b}$ est donc la somme d'un nombre pair et d'un nombre impair. Il est donc impair`\n          }\n          if (a === 3 && b % 2 === 0) {\n            texteCorr = `$${a}n+${b}=2n+n+${b}$<br>\n                        Comme $n$ est un entier naturel, $2n$ est un nombre pair.<br>\n                        ${b} est un nombre pair. <br>\n                        $2n + ${b}$ est donc un nombre pair. <br>\n                        $${a}n+${b}=2n+${b}+n$ est donc la somme d'un nombre pair et de $n$, il a donc la même parité que $n$.`\n          }\n          if (a === 3 && b % 2 !== 0) {\n            texteCorr = `$${a}n+${b}=2n+n+${b}$<br>\n                        Comme $n$ est un entier naturel, $2n$ est un nombre pair.<br>\n                        ${b} est un nombre impair. <br>\n                        $2n + ${b}$ est donc un nombre impair. <br>\n                        $${a}n+${b}=2n+${b}+n$ est donc la somme d'un nombre impair et de $n$, il a donc la parité contraire de $n$.`\n          }\n          if (a % 2 !== 0 && b % 2 === 0 && a !== 3) {\n            texteCorr = `${a}$n=2\\\\times ${texNombre((a - 1) / 2)}n+n+${b}$<br>\n                        Comme $${texNombre((a - 1) / 2)}n$ est un entier naturel, $2 ${texNombre((a - 1) / 2)}n$ est donc un nombre pair<br>\n                        ${b} est aussi un nombre pair.<br>\n                        $${texNombre((a - 1) / 2)}n +${b}$ est donc un nombre pair.<br>\n                        $${a}n+${b}=2\\\\times${texNombre((a - 1) / 2)}n+${b}+n$ est donc la somme d'un nombre pair et de $n$, il a donc la même parité que $n$.`\n          }\n          if (a % 2 !== 0 && b % 2 !== 0 && a !== 3) {\n            texteCorr = `$${a}n+${b}=2\\\\times ${texNombre((a - 1) / 2)}n+n+${b}$<br>\n                        Comme $${texNombre((a - 1) / 2)}n$ est un entier naturel, $2 \\\\times ${texNombre((a - 1) / 2)}n$ est donc un nombre pair<br>\n                        ${b} est un nombre impair.<br>\n                        $2\\\\times${texNombre((a - 1) / 2)}n +${b}$ est une somme d'un nombre pair et d'un nombre impair, c'est donc un nombre impair.<br>\n                        $${a}n+${b}=2\\\\times${texNombre((a - 1) / 2)}n+${b}+n$ est donc la somme d'un nombre impair et de $n$,  il a donc la parité contraire de $n$.`\n          }\n\n          break\n\n        case 3:\n          a = randint(2, 6)\n          b = randint(2, 11)\n\n          texte = `Que peut-on dire de la parité de $${a}n^{2}$ ?`\n\n          if (a === 2) {\n            texteCorr = `\n                        Comme $n^{2}$ est un entier naturel, $2n^{2}$ est un nombre pair<br>\n                        `\n          }\n\n          if (a % 2 === 0 && a !== 2) {\n            texteCorr = `$${a}n^{2}=2\\\\times ${texNombre(a / 2)}n^{2}$<br>\n                        Comme $${texNombre(a / 2)}n^{2}$ est un entier naturel, $2\\\\times ${texNombre(a / 2)}n^{2}$ est donc un nombre pair<br>\n                        `\n          }\n          if (a % 2 === 2) {\n            texteCorr = `Comme $n^{2}$ est un entier naturel, $2n^{2}$ est un nombre pair<br>\n                        `\n          }\n          if (a % 2 !== 0 && a !== 3) {\n            texteCorr = `$${a}n^{2}=2\\\\times ${texNombre((a - 1) / 2)}n^{2}+n^{2}$<br>\n                        Comme $${texNombre((a - 1) / 2)}n^{2}$ est un entier naturel, $2\\\\times ${texNombre((a - 1) / 2)}n^{2}$ est donc un nombre pair<br>\n                        $${a}n^{2}$ est donc la somme d'un nombre pair et de $n^{2}$. Il a donc la même parité que $n^{2}$<br>\n                        Or, on sait d'après le cours (démonstration fondamentale) que $n^{2}$ et $n$ ont la même parité.<br>\n                        Donc $${a}n^{2}$ a la même parité que $n$`\n          }\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","parite","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestions","listeTypeDeQuestions","combinaisonListes","a","b","texte","texteCorr","i","cpt","randint","texNombre","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}