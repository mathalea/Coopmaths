{"version":3,"file":"js/78529.da38c9f0bc4c1b4265a7.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N32.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes } from '../../modules/outils.js'\nimport { grille, seyes, mathalea2d } from '../../modules/2d.js'\nimport { fraction } from '../../modules/fractions.js'\nexport const titre = 'Représenter une fraction de l’unité'\n\n/**\n * Tracer un segment de longueur une fraction de l'unité.\n * @author Jean-Claude Lhote\n * 6N32\n */\n\nexport default function FractionsDunite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 5\n  this.consigne = 'Colorier en bleu un segment de longueur ...'\n  context.isHtml ? (this.spacingCorr = 3.5) : (this.spacingCorr = 2)\n  context.isHtml ? (this.spacing = 2) : (this.spacing = 2)\n  this.sup = 1\n  this.sup2 = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles, g, carreaux, sc, unit\n    let listeTypeDeQuestions = []\n    if (this.sup < 5) { typesDeQuestionsDisponibles = [parseInt(this.sup)] } else { typesDeQuestionsDisponibles = [1, 2, 3, 4] }\n    listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (\n      let i = 0, den, num, frac, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          den = choice([4, 5, 6, 10])\n          num = randint(1, den - 1)\n          break\n        case 2:\n          den = choice([2, 3, 4])\n          if (den === 3) num = randint(3, 2 * den - 1, den)\n          else num = randint(3, 3 * den - 1, den)\n          break\n        case 3:\n          den = choice([4, 5, 6, 10])\n          if (den === 4) num = randint(5, 3 * den - 1, den)\n          else num = randint(5, 2 * den - 1, den)\n          break\n        case 4:\n          den = choice([2, 3, 4, 5, 6, 10])\n          if (den === 2 || den === 4) num = randint(den + 1, 3 * den - 1, den)\n          else num = randint(den + 1, 2 * den - 1, den)\n          break\n      }\n      if (den % 3 === 0) unit = 12\n      else if (den % 5 === 0) unit = 10\n      else unit = 8\n      frac = fraction(num, den)\n      texte = `$${frac.texFraction}$ unité en prenant ${unit} carreaux pour une unité.`\n      if (this.sup2 < 3) g = grille(0, 0, 26, 2, 'gray', 0.7)\n      else g = ''\n      if (parseInt(this.sup2) === 2) {\n        sc = 0.6\n        carreaux = seyes(0, 0, 26, 2)\n      } else {\n        sc = 0.5\n        carreaux = ''\n      }\n\n      texteCorr = mathalea2d({ xmin: 0, ymin: 0, xmax: 26, ymax: 2, pixelsParCm: 20, scale: sc }, frac.representation(1, 1, unit, 0, 'segment', 'blue', 0, 1), g, carreaux)\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\"Type d'exercices\", 4, '1 : fraction inférieure à 1\\n2 : demis, tiers et quarts\\n3 : quarts, cinquièmes, sixièmes et dixièmes\\n4 : toutes les fractions précédentes entre 1 et 3']\n  this.besoinFormulaire2Numerique = ['Type de cahier', 2, '1 :  petits carreaux\\n2 : Cahier gros carreaux type Seyes']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","FractionsDunite","Exercice","this","nbQuestions","consigne","context","spacingCorr","spacing","sup","sup2","nbCols","nbColsCorr","nouvelleVersion","typesDeQuestionsDisponibles","g","carreaux","sc","unit","listeQuestions","listeCorrections","listeTypeDeQuestions","parseInt","combinaisonListes","den","num","frac","texte","texteCorr","i","cpt","choice","randint","fraction","texFraction","grille","seyes","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","representation","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}