{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6P11-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","ProportionnaliteParLineariteTableau","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","typeDeQuestionsDisponibles","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","np","cm","ng","o","pp","pg","pu","tp","index","a","fruits","objets","texte","texteCorr","monTableau","i","cpt","choice","randint","prenom","texPrix","tableau","largeurTitre","ligne1","ligne2","miseEnEvidence","flecheHaut","setReponse","texMasse","texNombre","texNombrec","mathalea2d","xmin","xmax","ymin","ymax","style","interactif","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/75555.250fe17d3ce4c65357b2.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, choice, randint, prenom, texPrix, texNombre, texNombrec, miseEnEvidence, texMasse } from '../../modules/outils.js'\nimport { mathalea2d, tableau } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Résoudre des problèmes de proportionnalité dans un tableau avec la linéarité'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Résoudre un problème de proportionnalité avec linéarité via tableau\n * @Mireille Gain, 30 mai 2021\n * Référence 6P11-2\n*/export default function ProportionnaliteParLineariteTableau () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'On considère que les situations suivantes, sauf cas flagrant, sont des situations de proportionnalité. <br>On demande de les résoudre à l\\'aide d\\'un tableau.'\n  this.nbQuestions = 5\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 4 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let typeDeQuestionsDisponibles\n    if (this.sup === 1) {\n      typeDeQuestionsDisponibles = [1, 1, 1, 1, 4]\n    } else if (this.sup === 2) {\n      typeDeQuestionsDisponibles = [2, 2, 2, 2, 4]\n    } else if (this.sup === 3) {\n      typeDeQuestionsDisponibles = [3, 3, 3, 3, 4]\n    } else if (this.sup === 4) {\n      typeDeQuestionsDisponibles = [1, 2, 3, 2, 4]\n    }\n\n    const listeTypeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    let np, cm, ng, o, pp, pg, pu, tp, index, a\n    const fruits = [\n      ['pêches', 0.24],\n      ['noix', 0.29],\n      ['cerises', 0.31],\n      ['pommes', 0.12],\n      ['framboises', 0.75],\n      ['fraises', 0.37],\n      ['citrons', 0.08],\n      ['bananes', 0.09]\n    ]\n\n    const objets = [\n      ['billes', 0.1],\n      ['bonbons', 0.1],\n      ['bougies', 1.2],\n      ['crayons', 0.5],\n      ['gâteaux', 1.3],\n      ['gommes', 0.4],\n      ['stickers', 0.2],\n      ['cahiers', 1.4]\n    ]\n\n    for (let i = 0, texte, texteCorr, monTableau, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      a = choice([1, 2, 3])\n      // Boucle principale où i+1 correspond au numéro de la question\n\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 1: // multiplication\n          if (a === 1) {\n            index = randint(0, 7)\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * randint(8, 9) * ([objets[index][1]]) / 10\n            pg = cm * pp\n            o = choice([objets[index][0]])\n            texte = `${prenom()} achète ${np} ${o} pour ${texPrix(pp)} €. Combien faudrait-il payer pour en acheter ${ng} ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: [`\\\\text{Nombre de ${o}}`, np, ng],\n              ligne2: ['\\\\text{Prix (en euros)}', `${texPrix(pp)}`, `${miseEnEvidence(texPrix(pg))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\times' + cm)}`]]\n            })\n            setReponse(this, i, texPrix(pg))\n          } else if (a === 2) {\n            index = randint(0, 7)\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * fruits[index][1]\n            pg = cm * pp\n            o = choice([fruits[index][0]])\n            texte = `${prenom()} achète ${texMasse(pp)} kg de ${o} pour ${texPrix(np)} €. Quelle masse pourrait être achetée avec ${ng} € ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: [`\\\\text{Prix des ${o} (en euros)}`, np, ng],\n              ligne2: [`\\\\text{Masse des ${o} (en kg)}`, `${texMasse(pp)}`, `${miseEnEvidence(texMasse(pg))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\times' + cm)}`]]\n            })\n            setReponse(this, i, texMasse(pg))\n          } else if (a === 3) {\n            index = randint(0, 7)\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * randint(11, 48) / 10\n            pg = cm * pp\n            texte = `${np} objets occupent un volume de ${texNombre(pp)} cm³. Quel volume serait occupé par ${ng} de ces objets ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: ['\\\\text{Nombre d\\'objets}', np, ng],\n              ligne2: ['\\\\text{Volume des objets (en cm³)}', `${texNombre(pp)}`, `${miseEnEvidence(texNombrec(pg))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\times' + cm)}`]]\n            })\n            setReponse(this, i, texNombrec(pg))\n          }\n          texteCorr = mathalea2d({ xmin: -1, xmax: 16, ymin: 0, ymax: 7.5, style: 'display: block' }, monTableau)\n          break\n\n        case 2: // division\n          if (a === 1) {\n            index = randint(0, 7)\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * randint(8, 9) / 10\n            pg = cm * pp\n            o = choice([objets[index][0]])\n            texte = `${prenom()} achète ${ng} ${o} pour ${texPrix(pg)} €. Combien faudrait-il payer pour en acheter ${np} ? `\n            monTableau = tableau({\n              ligne1: [`\\\\text{Nombre de ${o}}`, ng, np],\n              ligne2: ['\\\\text{Prix (en euros)}', `${texPrix(pg)}`, `${miseEnEvidence(texPrix(pp))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + cm)}`]],\n              largeurTitre: 9\n            })\n            setReponse(this, i, texPrix(pp))\n          } else if (a === 2) {\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * randint(40, 60)\n            pg = cm * pp\n            texte = `${prenom()} peint une surface de ${pg} m² en ${ng} jours. Quelle surface serait peinte en ${np} jours ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: ['\\\\text{Durée (en jours)}', ng, np],\n              ligne2: ['\\\\text{Surface peinte (en m²)}', `${texNombre(pg)}`, `${miseEnEvidence(texNombre(pp))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + cm)}`]]\n            })\n            setReponse(this, i, texNombre(pp))\n          } else if (a === 3) {\n            index = randint(0, 7)\n            np = randint(1, 10)\n            cm = randint(2, 7)\n            ng = np * cm\n            pp = np * fruits[index][1]\n            pg = cm * pp\n            o = choice([fruits[index][0]])\n            texte = `${prenom()} achète ${texMasse(pg)} kg de ${o} pour ${texPrix(ng)} €. Quelle masse pourrait être achetée avec ${np} € ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: [`\\\\text{Prix des ${o} (en euros)}`, ng, np],\n              ligne2: [`\\\\text{Masse des ${o} (en kg)}`, `${texMasse(pg)}`, `${miseEnEvidence(texMasse(pp))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + cm)}`]]\n            })\n            setReponse(this, i, texMasse(pp))\n          }\n          texteCorr = mathalea2d({ xmin: -1, xmax: 16, ymin: 0, ymax: 7.5, style: 'display: block' }, monTableau)\n          break\n\n        case 3: // passage par l'unité\n          if (a === 1) {\n            index = randint(0, 7)\n            pu = randint(1, 19) * ([objets[index][1]]) / 10\n            np = randint(2, 10)\n            pp = pu * np\n            ng = randint(2, 10, np)\n            pg = pu * ng\n            o = choice([objets[index][0]])\n            texte = `${prenom()} achète ${np} ${o} pour ${texPrix(pp)} €. Combien faudrait-il payer pour en acheter ${ng} ? `\n            monTableau = tableau({\n              ligne1: [`\\\\text{Nombre de ${o}}`, np, 1, ng],\n              ligne2: ['\\\\text{Prix (en euros)}', `${texPrix(pp)}`, `${miseEnEvidence(texPrix(pu))}`, `${miseEnEvidence(texPrix(pg))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + np)}`], [2, 3, `${miseEnEvidence('\\\\times' + ng)}`]],\n              largeurTitre: 9\n            })\n            setReponse(this, i, texPrix(pg))\n          } else if (a === 2) {\n            pu = randint(40, 60)\n            np = randint(2, 10)\n            pp = pu * np\n            ng = randint(2, 10, np)\n            pg = pu * ng\n            texte = `${prenom()} peint une surface de ${pp} m² en ${np} jours. Quelle surface serait peinte en ${ng} jours ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: ['\\\\text{Durée (en jours)}', np, 1, ng],\n              ligne2: ['\\\\text{Surface peinte (en m²)}', `${pp}`, `${miseEnEvidence(pu)}`, `${miseEnEvidence(pg)}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + np)}`], [2, 3, `${miseEnEvidence('\\\\times' + ng)}`]]\n            })\n            setReponse(this, i, pg)\n          } else if (a === 3) {\n            index = randint(0, 7)\n            pu = randint(8, 12) * fruits[index][1] / 10\n            np = randint(2, 10)\n            pp = pu * np\n            ng = randint(2, 10, np)\n            pg = pu * ng\n            o = choice([fruits[index][0]])\n            texte = `${prenom()} achète ${texMasse(pp)} kg de ${o} pour ${texPrix(np)} €. Quelle masse pourrait être achetée avec ${ng} € ? `\n            monTableau = tableau({\n              largeurTitre: 10,\n              ligne1: [`\\\\text{Prix des ${o} (en euros)}`, np, 1, ng],\n              ligne2: [`\\\\text{Masse des ${o} (en kg)}`, `${texMasse(pp)}`, `${miseEnEvidence(texMasse(pu))}`, `${miseEnEvidence(texMasse(pg))}`],\n              flecheHaut: [[1, 2, `${miseEnEvidence('\\\\div' + np)}`], [2, 3, `${miseEnEvidence('\\\\times' + ng)}`]]\n            })\n            setReponse(this, i, texMasse(pg))\n          }\n          texteCorr = mathalea2d({ xmin: -1, xmax: 19, ymin: 0, ymax: 7.5, style: 'display: block' }, monTableau)\n\n          break\n\n        case 4: // Non proportionnalité\n          if (a === 1) {\n            tp = randint(120, 165) / 100\n            np = randint(10, 14)\n            cm = randint(2, 4)\n            ng = np * cm\n            texte = `${prenom()} mesure ${texNombre(tp)} m à ${np} ans. Quelle sera sa taille à ${ng} ans ?`\n            texteCorr = 'On ne peut pas savoir car la taille n\\'est pas proportionnelle à l\\'âge.'\n          } else if (a === 2) {\n            tp = randint(30, 45)\n            np = randint(10, 13)\n            cm = randint(2, 5)\n            ng = np * cm\n            texte = `${prenom()} pèse ${texNombre(tp)} kg à ${np} ans. Quelle sera son poids à ${ng} ans ?`\n            texteCorr = 'On ne peut pas savoir car le poids (plus précisément la masse) n\\'est pas proportionnel à l\\'âge.'\n          } else if (a === 3) {\n            tp = randint(35, 39)\n            np = randint(10, 13)\n            cm = randint(2, 5)\n            ng = np * cm\n            texte = `${prenom()} chausse du ${texNombre(tp)} à ${np} ans. Quelle sera sa pointure à ${ng} ans ?`\n            texteCorr = 'On ne peut pas savoir car la pointure n\\'est pas proportionnelle à l\\'âge.'\n          }\n\n          setReponse(this, i, 'non')\n      }\n      if (!this.interactif) {\n        this.consigne = 'On considère que les situations suivantes, sauf cas flagrant, sont des situations de proportionnalité. <br>On demande de les résoudre à l\\'aide d\\'un tableau.'\n      } else {\n        this.consigne = 'On considère que les situations suivantes, sauf cas flagrant, sont des situations de proportionnalité. <br>Attention à donner le résultat avec le bon format : deux chiffres après la virgule si c\\'est un prix, trois si c\\'est une masse; écrire \"non\" si ce n\\'est pas une situation de proportionnalité.'\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 4, '1 : Multiplication\\n2 : Division\\n3 : Passage par l\\'unité\\n4 : Mélange des trois']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}