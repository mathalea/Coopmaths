{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G31.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","amcType","titre","CalculDeLongueur","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","correctionDetailleeDisponible","correctionDetaillee","context","spacing","spacingCorr","nouvelleVersion","mEp","mEp2","listeQuestions","listeCorrections","nom","creerNomDePolygone","texte","texteCorr","objetsEnonce","objetsCorrection","choixRapportTrigo","ab","bc","ac","angleABC","level","choice","randint","arrondi","Math","round","acos","PI","calcul","sin","texNombre2","asin","cos","atan","ratioerreur","a","point","b","bb","c","cb","p1","polygone","p3","alpha","p2","rotation","p4","A","listePoints","B","C","Bb","Cb","codage","codageAngleDroit","codageb","nomme","nommePolygone","nommeb","hypo","segment","epaisseur","color","codageDeAngle","codeAngle","codageDeAngleB","M1","milieu","M2","M3","G","barycentre","M1b","M2b","M3b","Gb","m3","homothetie","longueur","m1","m2","m4","positionLabel","m3b","m1b","m2b","m4b","t1","t2","t3","t1b","t2b","t3b","latexParPoint","push","paramsEnonce","xmin","min","x","ymin","y","xmax","max","ymax","pixelsParCm","scale","mainlevee","amplitude","paramsCorrection","mathalea2d","texFraction","console","log","autoCorrection","enonce","propositions","statut","feedback","reponse","valeur","param","digits","decimals","signe","exposantNbChiffres","listeQuestionsToContenu","besoinFormulaireCaseACocher","consigne","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/9799.7f4a7aba62d98d9b4d37.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { homothetie, codeAngle, longueur, barycentre, milieu, latexParPoint, mathalea2d, point, polygone, rotation, codageAngleDroit, nommePolygone, segment } from '../../modules/2d.js'\nimport { calcul, texFraction, arrondi, texNombre2, listeQuestionsToContenu, randint, creerNomDePolygone, choice } from '../../modules/outils.js'\n\nexport const amcReady = true // tant qu'il n'a pas été adapté à la version 2.6\nexport const amcType = 5 // type de question AMC\nexport const titre = 'Calculer un angle dans un triangle rectangle en utilisant la trigonométrie'\n\n/**\n * @author Jean-Claude Lhote à partir de 3G30-1 de Rémi Angot\n * 3G31 Exercice remplaçant l'exercice initial utilisant MG32\n * Calculer une longueur en utilisant l'un des trois rapport trigonométrique.\n * * Si this.level=4 alors seul le cosinus sera utilisé.\n * Mars 2021\n */\nexport default function CalculDeLongueur () {\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = false\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  if (context.isHtml) {\n    this.spacing = 0\n    this.spacingCorr = 0\n  } else {\n    this.spacing = 2\n    this.spacingCorr = 2\n  }\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let mEp, mEp2\n    if (this.sup) mEp = '<br>'\n    else mEp = ''\n    if (this.correctionDetaillee) mEp2 = '<br>'\n    else mEp2 = ''\n    const nom = creerNomDePolygone(3)\n    let texte = ''; let texteCorr = ''; const objetsEnonce = []; const objetsCorrection = []; let choixRapportTrigo\n    let ab, bc, ac, angleABC\n    if (this.level === 4) {\n      choixRapportTrigo = choice(['Acos'])\n    } else {\n      choixRapportTrigo = choice(['Acos', 'Asin', 'Atan'])\n    }\n    angleABC = randint(35, 55)\n\n    if (!context.isHtml && this.sup) {\n      texte += '\\\\begin{minipage}{.6\\\\linewidth}\\n'\n    }\n    switch (choixRapportTrigo) {\n      case 'Acos': // AB=BCxcos(B)\n        bc = arrondi(randint(100, 150) / 10, 1)\n        ab = arrondi(randint(40, (bc - 2) * 10) / 10, 1)\n        angleABC = Math.round(Math.acos(ab / bc) * 180 / Math.PI)\n        ac = arrondi(calcul(bc * Math.sin(Math.acos(ab / bc))), 1)\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,${mEp} $${nom[1] + nom[2]}=${texNombre2(bc)}$ cm et $${nom[0] + nom[1]}=${texNombre2(ab)}$ cm.<br>`\n        texte += `Calculer $\\\\widehat{${nom}}$ à $1 \\\\degree$ près.`\n        break\n      case 'Asin':\n        bc = randint(100, 150) / 10\n        ac = randint(40, (bc - 2) * 10) / 10\n        angleABC = Math.round(Math.asin(ac / bc) * 180 / Math.PI)\n        ab = calcul(bc * Math.cos(Math.asin(ac / bc)))\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,${mEp} $${nom[1] + nom[2]}=${texNombre2(bc)}$ cm et $${nom[0] + nom[2]}=${texNombre2(ac)}$ cm.<br>`\n        texte += `Calculer $\\\\widehat{${nom}}$ à $1 \\\\degree$ près.`\n        break\n      case 'Atan':\n        ab = randint(40, 100) / 10\n        ac = randint(40, 100) / 10\n        angleABC = Math.round(Math.atan(ac / ab) * 180 / Math.PI)\n        bc = calcul(ab / Math.cos(Math.atan(ac / ab)))\n        texte += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$,${mEp} $${nom[0] + nom[1]}=${texNombre2(ab)}$ cm et  $${nom[0] + nom[2]}=${texNombre2(ac)}$ cm.<br>`\n        texte += `Calculer $\\\\widehat{${nom}}$ à $1 \\\\degree$ près.`\n        break\n    }\n\n    if (!context.isHtml && this.sup) {\n      texte += '\\n\\\\end{minipage}\\n'\n    }\n    const ratioerreur = randint(80, 120, 100) / 100\n    const a = point(0, 0)\n    const b = point(ab * ratioerreur, 0)\n    const bb = point(ab, 0)\n    const c = point(0, ac / ratioerreur)\n    const cb = point(0, ac)\n    const p1 = polygone(a, b, c)\n    const p3 = polygone(a, bb, cb)\n    // p1.isVisible = false\n    const alpha = randint(0, 360)\n    const p2 = rotation(p1, a, alpha)\n    const p4 = rotation(p3, a, alpha)\n    const A = p2.listePoints[0]\n    const B = p2.listePoints[1]\n    const C = p2.listePoints[2]\n    const Bb = p4.listePoints[1]\n    const Cb = p4.listePoints[2]\n\n    const codage = codageAngleDroit(B, A, C)\n    const codageb = codageAngleDroit(Bb, A, Cb)\n    A.nom = nom[0]\n    B.nom = nom[1]\n    C.nom = nom[2]\n    const nomme = nommePolygone(p2, nom)\n    const nommeb = nommePolygone(p4, nom)\n\n    const hypo = segment(Cb, Bb)\n    hypo.epaisseur = 2\n    hypo.color = 'blue'\n    //   codageAngle.epaisseur = 3\n    //  codageAngle2.epaisseur = 3\n    const codageDeAngle = codeAngle(A, B, C, 2)\n    const codageDeAngleB = codeAngle(A, Bb, Cb, 2)\n\n    const M1 = milieu(A, B)\n    const M2 = milieu(A, C)\n    const M3 = milieu(B, C)\n    const G = barycentre(p2)\n    const M1b = milieu(A, Bb)\n    const M2b = milieu(A, Cb)\n    const M3b = milieu(Bb, Cb)\n    const Gb = barycentre(p4)\n    const m3 = homothetie(M3, G, 1 + 1.5 / longueur(G, M3))\n    const m1 = homothetie(M1, M3, 1 + 1.5 / longueur(M3, M1))\n    const m2 = homothetie(M2, M3, 1 + 1.5 / longueur(M3, M2))\n    let m4\n    m1.positionLabel = 'center'\n    m2.positionLabel = 'center'\n    m3.positionLabel = 'center'\n    const m3b = homothetie(M3b, Gb, 1 + 1.5 / longueur(Gb, M3b))\n    const m1b = homothetie(M1b, M3b, 1 + 1.5 / longueur(M3b, M1b))\n    const m2b = homothetie(M2b, M3b, 1 + 1.5 / longueur(M3b, M2b))\n    let m4b\n    m1b.positionLabel = 'center'\n    m2b.positionLabel = 'center'\n    m3b.positionLabel = 'center'\n\n    let t1, t2, t3, t1b, t2b, t3b\n    switch (choixRapportTrigo) {\n      case 'Acos': // AB=BCxcos(B)\n        t3 = latexParPoint(`${texNombre2(bc)} \\\\text{ cm}`, m3, 'black', 120, 12, '')\n        t2 = latexParPoint(`${texNombre2(ab)} \\\\text{ cm}`, m1, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G))\n        m4.positionLabel = 'center'\n        t1 = latexParPoint('?', m4, 'black', 50, 12, '')\n        t3b = latexParPoint(`${texNombre2(bc)} \\\\text{ cm}`, m3b, 'black', 120, 12, '')\n        t2b = latexParPoint(`${texNombre2(ab)} \\\\text{ cm}`, m1b, 'black', 120, 12, '')\n        m4b = homothetie(Gb, Bb, 2.7 / longueur(Bb, Gb))\n        m4b.positionLabel = 'center'\n        t1b = latexParPoint('?', m4b, 'black', 50, 12, '')\n        break\n      case 'Asin':\n        t3 = latexParPoint(`${texNombre2(bc)} \\\\text{ cm}`, m3, 'black', 120, 12, '')\n        t2 = latexParPoint(`${texNombre2(ac)} \\\\text{ cm}`, m2, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G))\n        m4.positionLabel = 'center'\n        t1 = latexParPoint('?', m4, 'black', 100, 12, '')\n        t3b = latexParPoint(`${texNombre2(bc)} \\\\text{ cm}`, m3b, 'black', 120, 12, '')\n        t2b = latexParPoint(`${texNombre2(ac)} \\\\text{ cm}`, m2b, 'black', 120, 12, '')\n        m4b = homothetie(Gb, Bb, 2.7 / longueur(Bb, Gb))\n        m4b.positionLabel = 'center'\n        t1b = latexParPoint('?', m4b, 'black', 100, 12, '')\n        break\n      case 'Atan':\n        t1 = latexParPoint(`${texNombre2(ab)} \\\\text{ cm}`, m1, 'black', 120, 12, '')\n        t2 = latexParPoint(`${texNombre2(ac)} \\\\text{ cm}`, m2, 'black', 120, 12, '')\n        m4 = homothetie(G, B, 2.7 / longueur(B, G))\n        m4.positionLabel = 'center'\n        t3 = latexParPoint('?', m4, 'black', 100, 12, '')\n        t1b = latexParPoint(`${texNombre2(ab)} \\\\text{ cm}`, m1b, 'black', 120, 12, '')\n        t2b = latexParPoint(`${texNombre2(ac)} \\\\text{ cm}`, m2b, 'black', 120, 12, '')\n        m4b = homothetie(Gb, Bb, 2.7 / longueur(Bb, Gb))\n        m4b.positionLabel = ''\n        t3b = latexParPoint('?', m4b, 'black', 100, 12, '')\n        break\n    }\n\n    objetsEnonce.push(p2, codage, nomme, t1, t2, t3, codageDeAngle)\n    objetsCorrection.push(p4, codageb, nommeb, t1b, t2b, t3b, hypo, codageDeAngleB)\n\n    const paramsEnonce = { xmin: Math.min(A.x, B.x, C.x) - 4, ymin: Math.min(A.y, B.y, C.y) - 4, xmax: Math.max(A.x, B.x, C.x) + 3, ymax: Math.max(A.y, B.y, C.y) + 2, pixelsParCm: 17, scale: 0.37, mainlevee: true, amplitude: 0.4 }\n    const paramsCorrection = { xmin: Math.min(A.x, B.x, C.x) - 4, ymin: Math.min(A.y, B.y, C.y) - 4, xmax: Math.max(A.x, B.x, C.x) + 3, ymax: Math.max(A.y, B.y, C.y) + 2, pixelsParCm: 20, scale: 0.5, mainlevee: false }\n    if (!context.isHtml && this.sup) {\n      texte += '\\\\begin{minipage}{.4\\\\linewidth}\\n'\n    }\n    if (this.sup) {\n      texte += mathalea2d(paramsEnonce, objetsEnonce) + '<br>'\n    }\n    if (this.correctionDetaillee) {\n      if (!context.isHtml) texteCorr += '\\\\begin{minipage}{.5\\\\linewidth}\\n'\n      texteCorr += mathalea2d(paramsCorrection, objetsCorrection) + '<br>'\n      if (!context.isHtml) texteCorr += '\\n\\\\end{minipage}\\n'\n    }\n    if (!context.isHtml && this.sup) {\n      texte += '\\n\\\\end{minipage}\\n'\n    }\n    if (this.correctionDetaillee && !context.isHtml) texteCorr += '\\\\begin{minipage}{.5\\\\linewidth}\\n'\n    switch (choixRapportTrigo) {\n      case 'Acos': // AB=BCxcos(B)\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$, ${mEp2}le cosinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\cos\\\\left(\\\\widehat{${nom}}\\\\right)=\\\\dfrac{${nom[0] + nom[1]}}{${nom[1] + nom[2]}}$.<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\cos\\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(texNombre2(ab), texNombre2(bc))}$<br>`\n        texteCorr += `$\\\\widehat{${nom}}=\\\\arccos(${texFraction(texNombre2(ab), texNombre2(bc))})\\\\approx ${angleABC}\\\\degree$<br>`\n        break\n      case 'Asin':\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$ ${mEp2},le sinus de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\sin \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[1] + nom[2])}$<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\sin\\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(texNombre2(ac), texNombre2(bc))}$<br>`\n        texteCorr += `$\\\\widehat{${nom}}=\\\\arcsin(${texFraction(texNombre2(ac), texNombre2(bc))})\\\\approx ${angleABC}\\\\degree$<br>`\n\n        break\n      case 'Atan':\n        texteCorr += `Dans le triangle $${nom}$ rectangle en $${nom[0]}$, ${mEp2}la tangente de l'angle $\\\\widehat{${nom}}$ est défini par :<br>`\n        texteCorr += `$\\\\tan \\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(nom[0] + nom[2], nom[0] + nom[1])}$<br>`\n        texteCorr += 'Avec les données numériques :<br>'\n        texteCorr += `$\\\\tan\\\\left(\\\\widehat{${nom}}\\\\right)=${texFraction(texNombre2(ac), texNombre2(ab))}$<br>`\n        texteCorr += `$\\\\widehat{${nom}}=\\\\arctan\\\\left(${texFraction(texNombre2(ac), texNombre2(ab))}\\\\right) \\\\approx ${angleABC} \\\\degree $ <br>`\n        console.log(texteCorr)\n        break\n    }\n    if (this.correctionDetaillee && !context.isHtml) texteCorr += '\\n\\\\end{minipage}\\n'\n\n    /*****************************************************/\n    // Pour AMC\n    if (context.isAmc) {\n      this.autoCorrection[0] = {\n        enonce: texte,\n        propositions: [{ texte: texteCorr, statut: 4, feedback: '' }],\n        reponse: { valeur: angleABC, param: { digits: 2, decimals: 0, signe: false, exposantNbChiffres: 0 } }\n      }\n    }\n\n    /****************************************************/\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n\n  this.besoinFormulaireCaseACocher = ['Figure à main levée', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}