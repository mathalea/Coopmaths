{"version":3,"file":"js/12873.f69af2b791bd3c4265e4.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/6e/can6G05.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { codeSegments, droite, labelPoint, mathalea2d, point, segment, segmentAvecExtremites, texteSurSegment, tracePointSurDroite } from '../../../modules/2d.js'\nimport { calcul, randint } from '../../../modules/outils.js'\nimport Exercice from '../../Exercice.js'\nexport const titre = 'Résoudre un problème de longueurs (inverse)'\nexport const dateDePublication = '2/11/2021'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n/*!\n * @author Jean-Claude Lhote\n * Créé le 7/11/2021\n * Référence can6G04\n */\nexport default function ProblemesDeLongueursInverse () {\n  Exercice.call(this)\n  this.nbQuestions = 1\n  this.typeExercice = 'simple'\n  this.formatChampTexte = 'largeur15 inline'\n  this.optionsChampTexte = { texteApres: ' cm' }\n  this.nouvelleVersion = function () {\n    const objets = []\n    const pointsSurDE = []\n    const pointsSurAB = []\n    const b = randint(2, 5)\n    const a = randint(2, 8 - b)\n    const c = randint(2, 9)\n    const A = point(0, 0, 'A', 'below')\n    const B = point(16, 0, 'B', 'below')\n    const AB = segmentAvecExtremites(A, B)\n    objets.push(labelPoint(A, B), AB)\n    const dd = droite(A, B)\n    for (let i = 1; i < b; i++) {\n      pointsSurAB.push(point(i * 16 / b, 0), point(i * 16 / b, 0))\n      objets.push(tracePointSurDroite(pointsSurAB[2 * (i - 1)], dd))\n    }\n    pointsSurAB[2 * (b - 2)].nom = 'C'\n    pointsSurAB[2 * (b - 2)].positionLabel = 'below'\n    objets.push(codeSegments('//', 'red', A, ...pointsSurAB, B))\n    const D = point((b - 1) * 16 / b, 2, 'D', 'above')\n    const x = D.x\n    const E = point(16, 2, 'E', 'above')\n    const l = E.x - D.x\n    const F = point(x + (a - 1) * l / a, 2, 'F', 'above')\n    const DE = segmentAvecExtremites(D, E)\n    const d = droite(D, E)\n    objets.push(DE, labelPoint(D, E, pointsSurAB[2 * (b - 2)]))\n    for (let i = 1; i < a; i++) {\n      pointsSurDE.push(point(x + i * l / a, 2), point(x + i * l / a, 2))\n      objets.push(tracePointSurDroite(pointsSurDE[2 * (i - 1)], d))\n    }\n    const s1 = segment(pointsSurAB[pointsSurAB.length - 1], D)\n    const s2 = segment(B, E)\n    s1.pointilles = 2\n    s1.color = 'green'\n    s2.pointilles = 2\n    s2.color = 'green'\n    const abc = calcul(a * b * c)\n    const ac = calcul(a * c)\n    objets.push(texteSurSegment(c, F, E), labelPoint(F), codeSegments('O', 'blue', D, ...pointsSurDE, E), s1, s2)\n    this.question = `Sachant que $AB=${calcul(a * b * c)}$ cm et que $CB=DE$, détermine $FE$.<br>` + mathalea2d({ xmin: -0.5, ymin: -1, xmax: 16.5, ymax: 3.5, scale: 0.5, style: 'margin: auto' }, objets)\n    this.reponse = c\n    this.correction = `Commme $CB=\\\\dfrac{AB}{${b}}$, alors $CB=\\\\dfrac{${abc}\\\\text{ cm}}{${b}}=${ac}$ cm.<br><br>Comme $DE=CB=${ac}$ cm et $FE=\\\\dfrac{DE}{${a}}$, alors $FE=\\\\dfrac{${ac}\\\\text{ cm}}{${a}}=${c}$ cm.`\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","dateDePublication","interactifReady","interactifType","amcReady","amcType","ProblemesDeLongueursInverse","typeExercice","formatChampTexte","optionsChampTexte","texteApres","objets","pointsSurDE","pointsSurAB","b","randint","a","c","A","point","B","AB","segmentAvecExtremites","labelPoint","dd","droite","tracePointSurDroite","nom","positionLabel","codeSegments","D","x","E","l","F","DE","d","s1","segment","length","s2","pointilles","color","abc","calcul","ac","texteSurSegment","question","mathalea2d","xmin","ymin","xmax","ymax","scale","style","reponse","correction"],"sourceRoot":""}