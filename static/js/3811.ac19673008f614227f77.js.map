{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N11-2.js"],"names":["titre","Placer_un_point_abscisse_entiere","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacing","spacingCorr","sup","typeExercice","listePackages","nouvelleVersion","numeroExercice","typesDeQuestions","listeQuestions","listeCorrections","contenu","contenuCorrection","combinaisonListes","parseInt","htmlConsigne","abs0","abs1","abs2","abs3","l1","l2","l3","x1","x2","x3","x11","x22","x33","pas1","pas2","id_unique","texte","texteCorr","i","lettreDepuisChiffre","randint","arrondi","context","stringNombre","Date","now","SVG_reperage_sur_un_axe","calcul","Latex_reperage_sur_un_axe","push","listeQuestionsToContenu","besoinFormulaireNumerique"],"mappings":"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","file":"js/3811.ac19673008f614227f77.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, arrondi, calcul, lettreDepuisChiffre, htmlConsigne, stringNombre } from '../../modules/outils.js'\nimport { SVG_reperage_sur_un_axe, Latex_reperage_sur_un_axe } from '../../modules/macroSvgJs.js'\n\nexport const titre = 'Placer un point d’abscisse entière (grands nombres)'\n\n/**\n * Placer un point d'abscisse entière\n * @author Jean-Claude Lhote et Rémi Angot\n * référence 6N11-2\n */\nexport default function Placer_un_point_abscisse_entiere () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ' Placer trois points sur un axe gradué.'\n  this.nbQuestions = 5\n  this.nbQuestionsModifiable = true\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.sup = 1\n  this.typeExercice = 'SVGJS'\n  this.listePackages = 'tkz-euclide'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    // numeroExercice est 0 pour l'exercice 1\n    let typesDeQuestions\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    if (this.sup == 4) { typesDeQuestions = combinaisonListes([1, 2, 3], this.nbQuestions) } else {\n      typesDeQuestions = combinaisonListes(\n        [parseInt(this.sup)],\n        this.nbQuestions\n      )\n    }\n\n    this.contenu = htmlConsigne(this.consigne)\n    for (let i = 0,\n      abs0,\n      abs1,\n      abs2,\n      abs3,\n      l1,\n      l2,\n      l3,\n      x1,\n      x2,\n      x3,\n      x11,\n      x22,\n      x33,\n      pas1,\n      pas2,\n      id_unique,\n      texte,\n      texteCorr; i < this.nbQuestions; i++) {\n      l1 = lettreDepuisChiffre(i * 3 + 1)\n      l2 = lettreDepuisChiffre(i * 3 + 2)\n      l3 = lettreDepuisChiffre(i * 3 + 3)\n\n      switch (typesDeQuestions[i]) {\n        case 1: // Placer des entiers sur un axe (milliers)\n          abs0 = randint(1, 9) * 1000\n          pas1 = 0.001\n          pas2 = 10\n          break\n\n        case 2: // Placer des entiers sur un axe (dizaines de mille)\n          abs0 = randint(5, 15) * 10000\n          pas1 = 0.0001\n          pas2 = 10\n          break\n\n        case 3: // Placer des entiers sur un axe (centaines de mille)\n          abs0 = randint(35, 85) * 100000\n          pas1 = 0.00001\n          pas2 = 10\n          break\n      }\n      x1 = randint(0, 2)\n      x2 = randint(3, 4)\n      x3 = randint(5, 6)\n      x11 = randint(1, 9)\n      x22 = randint(1, 9)\n      x33 = randint(1, 3)\n      abs1 = arrondi(\n        abs0 + x1 / pas1 + x11 / pas1 / pas2,\n        typesDeQuestions[i]\n      ) // le type de questions est égal au nombre de décimales.\n      abs2 = arrondi(\n        abs0 + x2 / pas1 + x22 / pas1 / pas2,\n        typesDeQuestions[i]\n      )\n      abs3 = arrondi(\n        abs0 + x3 / pas1 + x33 / pas1 / pas2,\n        typesDeQuestions[i]\n      )\n      if (context.isHtml) {\n        texteCorr = ''\n        this.contenu += `<h3> Placer les points : ${l1}(${stringNombre(\n          abs1\n        )}), ${l2}(${stringNombre(abs2)}), ${l3}(${stringNombre(abs3)})</h3>`\n        id_unique = `${i}_${Date.now()}`\n        this.contenu += `<div id=\"div_svg${numeroExercice}${id_unique}\" style=\"width: 90%; height: 200px;  \"></div>`\n        SVG_reperage_sur_un_axe(\n          `div_svg${numeroExercice}${id_unique}`,\n          abs0,\n          6,\n          pas1,\n          pas2,\n          [],\n          [\n            [calcul(abs0, 0), 0, 0],\n            [calcul(abs0 + 1 / pas1, 0), 1, 0]\n          ],\n          false\n        )\n        this.contenuCorrection += `<div id=\"div_svg_corr${numeroExercice}${id_unique}\" style=\"width: 90%; height: 200px;  \"></div>`\n        SVG_reperage_sur_un_axe(\n          `div_svg_corr${numeroExercice}${id_unique}`,\n          abs0,\n          6,\n          pas1,\n          pas2,\n          [\n            [l1, x1, x11, true],\n            [l2, x2, x22, true],\n            [l3, x3, x33, true]\n          ],\n          [\n            [calcul(abs0, 0), 0, 0],\n            [calcul(abs0 + 1 / pas1, 0), 1, 0]\n          ],\n          false\n        )\n      } else {\n        // sortie Latex\n        texte = `{\\\\small Placer les points : $${l1}$(${stringNombre(\n          abs1\n        )}), $${l2}$(${stringNombre(abs2)}), $${l3}$(${stringNombre(\n          abs3\n        )})}<br>`\n        texte += Latex_reperage_sur_un_axe(\n          2,\n          abs0,\n          pas1,\n          pas2,\n          [],\n          [\n            [calcul(abs0, 0), 0, 0],\n            [calcul(abs0 + 1 / pas1, 0), 1, 0]\n          ],\n          false\n        )\n        texteCorr = `{\\\\small Les points $${l1}$(${stringNombre(\n          abs1\n        )}), $${l2}$(${stringNombre(abs2)}), $${l3}$(${stringNombre(\n          abs3\n        )}) sont placés ci dessous}<br>`\n        texteCorr += Latex_reperage_sur_un_axe(\n          2,\n          abs0,\n          pas1,\n          pas2,\n          [\n            [l1, x1, x11, true],\n            [l2, x2, x22, true],\n            [l3, x3, x33, true]\n          ],\n          [\n            [calcul(abs0, 0), 0, 0],\n            [calcul(abs0 + 1 / pas1, 0), 1, 0]\n          ],\n          false\n        )\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n      }\n    }\n    if (!context.isHtml) { listeQuestionsToContenu(this) }\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    4,\n    '1 : Ordre de grandeur : milliers\\n2 : Ordre de grandeur : dizaines de mille\\n3 : centaines de mille\\n4 : Mélange'\n  ]\n}\n"],"sourceRoot":""}