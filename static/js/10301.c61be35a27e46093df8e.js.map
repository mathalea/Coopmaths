{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G10-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","cliqueFigure","Exercice","this","nbQuestions","nbCols","nbColsCorr","interactif","nouvelleVersion","consigne","listeQuestions","listeCorrections","figures","typesDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","numeroLettre","randint","A","point","B","nom","lettreDepuisChiffre","labels","labelPoint","id","numeroExercice","solution","figSegment","mathalea2d","xmin","xmax","ymin","style","segmentAvecExtremites","figDroite","droite","figDemiDroite","demiDroite","figDemiDroite2","shuffle","join","indexOf","push","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/10301.c61be35a27e46093df8e.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { combinaisonListes, lettreDepuisChiffre, listeQuestionsToContenu, randint, shuffle } from '../../modules/outils.js'\nimport { demiDroite, droite, labelPoint, mathalea2d, point, segmentAvecExtremites } from '../../modules/2d.js'\nexport const titre = 'Choisir la bonne figure'\nexport const interactifReady = true\nexport const interactifType = 'cliqueFigure'\n\n/**\n * Plusieurs éléments sont proposés, il faut cliquer sur le bon\n * @author ANGOT Rémi\n * Référence\n*/\nexport default function cliqueFigure () {\n  Exercice.call(this)\n  this.nbQuestions = 3\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.interactif = true\n\n  this.nouvelleVersion = function () {\n    this.consigne = (this.interactif) ? 'Cliquer sur la bonne figure.' : 'Entourer la bonne figure.'\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.figures = [] // Liste des objets de toutes les figures sur lesquelles on pourra cliquer avec leur id et un booléen de réponse\n    const typesDeQuestions = combinaisonListes(['segment', 'droite', 'demidroite', 'demidroite2'], this.nbQuestions)\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      const numeroLettre = randint(1, 20)\n      const A = point(0, 0)\n      const B = point(4, randint(-1, 3))\n      A.nom = lettreDepuisChiffre(numeroLettre)\n      B.nom = lettreDepuisChiffre(numeroLettre + 1)\n      const labels = labelPoint(A, B)\n      this.figures[i] = [{ id: `figure0Ex${this.numeroExercice}Q${i}`, solution: false },\n        { id: `figure1Ex${this.numeroExercice}Q${i}`, solution: false },\n        { id: `figure2Ex${this.numeroExercice}Q${i}`, solution: false },\n        { id: `figure3Ex${this.numeroExercice}Q${i}`, solution: false }\n      ]\n      switch (typesDeQuestions[i]) {\n        case 'segment':\n          texte = `Le segment d'extrémités $${A.nom}$ et $${B.nom}$.`\n          this.figures[i][0].solution = true\n          break\n        case 'droite':\n          texte = `La droite passant par les points $${A.nom}$ et $${B.nom}$.`\n          this.figures[i][1].solution = true\n          break\n        case 'demidroite':\n          texte = `La demi-droite d'origine $${A.nom}$ passant par $${B.nom}$.`\n          this.figures[i][2].solution = true\n          break\n        case 'demidroite2':\n          texte = `La demi-droite d'origine $${B.nom}$ passant par $${A.nom}$.`\n          this.figures[i][3].solution = true\n          break\n      }\n\n      texte += '<br>'\n      const figSegment = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', id: `figure0Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B))\n      const figDroite = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', id: `figure1Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), droite(A, B))\n      const figDemiDroite = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', id: `figure2Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), demiDroite(A, B))\n      const figDemiDroite2 = mathalea2d({ xmin: -2, xmax: 6, ymin: -2, style: '', id: `figure3Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), demiDroite(B, A))\n      const figures = shuffle([figSegment, figDroite, figDemiDroite, figDemiDroite2])\n      texte += figures.join('')\n      texte += `<span id=\"resultatCheckEx${this.numeroExercice}Q${i}\"></span>`\n      texteCorr = mathalea2d({ xmin: -4, xmax: 6, ymin: -1, style: '', id: `figure3Ex${this.numeroExercice}Q${i}` }, labels, segmentAvecExtremites(A, B), segmentAvecExtremites(A, B))\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}