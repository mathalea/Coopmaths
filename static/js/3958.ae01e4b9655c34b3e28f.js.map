{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R22.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["titre","interactifReady","amcReady","amcType","ExerciceAdditionsSoustractionRelatifsV2","max","Exercice","this","sup","sup2","consigne","spacing","spacingCorr","nbCols","nbColsCorr","nbQuestions","interactif","nouvelleVersion","relatifs","sommesSignees","listeQuestions","listeCorrections","a","b","c","d","e","texte","texteCorr","i","cpt","choice","randint","s1","s2","s4","s3","lettreDepuisChiffre","ecritureAlgebrique","context","ajouteChampTexte","triePositifsNegatifs","texNombreCoul","ecritureAlgebriquec","sommeDesTermesParSigne","ecritureNombreRelatif","signe","ecritureNombreRelatifc","indexOf","push","setReponse","autoCorrection","enonce","propositions","statut","feedback","reponse","valeur","param","digits","decimals","exposantNbChiffres","exposantSigne","approx","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceInteractif","exercice","document","addEventListener","button","querySelector","event","spanReponseLigne","champTexte","getElementById","value","replaceAll","toString","innerHTML","readOnly","style","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","length","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","messageFeedback","id","message","type","querySelectorAll","uicheck","exerciceQcm","propositionsQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","texteApres","inline","numeric","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","includes","div","cssIcon","remove","divTitre","test","messageUtilisateur","code","width"],"mappings":"uPAKO,MAAMA,EAAQ,iDACRC,GAAkB,EAClBC,GAAW,EACXC,EAAU,EAUR,SAASC,EAAyCC,EAAM,IACrEC,eAAcC,MACdA,KAAKC,IAAMH,EACXE,KAAKE,MAAO,EACZF,KAAKP,MAAQA,EACbO,KAAKG,SAAW,WAChBH,KAAKI,QAAU,EACfJ,KAAKK,YAAc,EACnBL,KAAKM,OAAS,EACdN,KAAKO,WAAa,EAClBP,KAAKQ,YAAc,EACnBR,KAAKS,YAAa,EAClBT,KAAKN,gBAAkBA,EACvBM,KAAKJ,QAAUA,EACfI,KAAKL,SAAWA,EAEhBK,KAAKU,gBAAkB,WAGrB,IAAIC,EACAC,EAHJZ,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GAGxB,IAAK,IAAWC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAOC,EAA7BC,EAAI,EAAoCC,EAAM,EAAGD,EAAItB,KAAKQ,aAAee,EAAM,IAAK,CAC3FZ,EAAW,GACXC,EAAgB,GAChBG,GAAK,EACLC,GAAIQ,SAAO,EAAE,EAAG,IAEdP,GADS,IAAPF,GAAkB,IAAPC,EACT,GAEAQ,SAAO,EAAE,EAAG,IAElBT,GAAIU,SAAQ,EAAGzB,KAAKC,KAAOc,EAC3BC,GAAIS,SAAQ,EAAGzB,KAAKC,KAAOe,EAC3BC,GAAIQ,SAAQ,EAAGzB,KAAKC,KAAOgB,EAC3BC,GAAIO,SAAQ,EAAGzB,KAAKC,MAAOuB,SAAO,EAAE,EAAG,IACvCL,GAAIM,SAAQ,EAAGzB,KAAKC,MAAOuB,SAAO,EAAE,EAAG,IACvC,MAAME,GAAKF,SAAO,EAAE,EAAG,IACjBG,GAAKH,SAAO,EAAE,EAAG,IACjBI,GAAKJ,SAAO,EAAE,EAAG,IACvB,IAAIK,EAEFA,EADS,IAAPH,EAAkB,IAAPC,GACP,GACW,IAARD,GAAoB,IAARC,EAChB,GAEAH,SAAO,EAAE,EAAG,IAEfxB,KAAKE,MACPkB,EAAS,MAAIU,SAAoBR,EAAI,QAAQP,KAAIgB,SAAmBf,MAAKe,SAAmBd,MAAKc,SAAmBb,MAAKa,SAAmBZ,mBACxInB,KAAKS,aAAeuB,aACtBZ,GAAQa,QAAiBjC,KAAMsB,EAAG,CAAEF,MAAQ,MAAIU,SAAoBR,EAAI,QAAQP,KAAIgB,SAAmBf,MAAKe,SAAmBd,MAAKc,SAAmBb,MAAKa,SAAmBZ,WAE5Ka,aAAmBA,aACtBZ,GAAU,UAAQU,SAAoBR,EAAI,oBAE5CX,GAAWuB,SAAqB,CAACnB,EAAGC,EAAGC,EAAGC,EAAGC,IAC7CE,EAAa,MAAIS,SAAoBR,EAAI,kBAAiBa,SAAcpB,MAAKqB,SAAoBpB,MAAKoB,SAAoBnB,MAAKmB,SAAoBlB,MAAKkB,SAAoBjB,kCACzH,KAA/CkB,SAAuB,CAACtB,EAAGC,EAAGC,EAAGC,EAAGC,IAAI,IAA2D,KAA/CkB,SAAuB,CAACtB,EAAGC,EAAGC,EAAGC,EAAGC,IAAI,IAC9FE,GAAc,IAAEc,SAAcxB,EAAS,OAAMyB,SAAoBzB,EAAS,OAAMyB,SAAoBzB,EAAS,OAAMyB,SAAoBzB,EAAS,OAAMyB,SAAoBzB,EAAS,mCACnLU,GAAc,IAAEc,UAAcE,SAAuB,CAACtB,EAAGC,EAAGC,EAAGC,EAAGC,IAAI,OAAMiB,UAAoBC,SAAuB,CAACtB,EAAGC,EAAGC,EAAGC,EAAGC,IAAI,mCACxIE,GAAc,IAAEc,SAAcpB,EAAIC,EAAIC,EAAIC,EAAIC,QACU,KAA/CkB,SAAuB,CAACtB,EAAGC,EAAGC,EAAGC,EAAGC,IAAI,GAAYE,GAAc,IAAEc,UAAcE,SAAuB,CAACtB,EAAGC,EAAGC,EAAGC,EAAGC,IAAI,OAAgBE,GAAc,IAAEe,UAAoBC,SAAuB,CAACtB,EAAGC,EAAGC,EAAGC,EAAGC,IAAI,SAEjOC,EAAS,MAAIU,SAAoBR,EAAI,UAASgB,SAAsBvB,MAAKwB,SAAMb,MAAMY,SAAsBtB,MAAKuB,SAAMZ,MAAMW,SAAsBrB,MAAKsB,SAAMV,MAAMS,SAAsBpB,MAAKqB,SAAMX,MAAMU,SAAsBnB,mBAC5NnB,KAAKS,aAAeuB,aACtBZ,GAAQa,QAAiBjC,KAAMsB,EAAG,CAAEF,MAAQ,MAAIU,SAAoBR,EAAI,UAASgB,SAAsBvB,MAAKwB,SAAMb,MAAMY,SAAsBtB,MAAKuB,SAAMZ,MAAMW,SAAsBrB,MAAKsB,SAAMV,MAAMS,SAAsBpB,MAAKqB,SAAMX,MAAMU,SAAsBnB,YAEhQa,aAAmBA,aACtBZ,GAAU,UAAQU,SAAoBR,EAAI,oBAE5CD,EAAa,MAAIS,SAAoBR,EAAI,SAASP,KAAIwB,SAAMb,MAAMY,SAAsBtB,MAAKuB,SAAMZ,MAAMW,SAAsBrB,MAAKsB,SAAMV,MAAMS,SAAsBpB,MAAKqB,SAAMX,MAAMU,SAAsBnB,MAC7ME,GAAc,wBAAsBmB,SAAuBzB,OAAMyB,SAAuBd,EAAKV,OAAMwB,SAAuBb,EAAKV,OAAMuB,SAAuBX,EAAKX,OAAMsB,SAAuBZ,EAAKT,OAEnMR,GAAWuB,SAAqB,CAACnB,EAAGW,EAAKV,EAAGW,EAAKV,EAAGY,EAAKX,EAAGU,EAAKT,IAE7DR,EAAS,GAAK,EAAIA,EAAS,GAAK,IAClCU,GAAc,wBAAsBmB,SAAuB7B,EAAS,QAAO6B,SAAuB7B,EAAS,QAAO6B,SAAuB7B,EAAS,QAAO6B,SAAuB7B,EAAS,QAAO6B,SAAuB7B,EAAS,SAElOC,GAAgByB,SAAuB,CAAC1B,EAAS,GAAIA,EAAS,GAAIA,EAAS,GAAIA,EAAS,GAAIA,EAAS,KAC5E,IAArBC,EAAc,IAAiC,IAArBA,EAAc,IAC1CS,GAAc,wBAAsBmB,SAAuB5B,EAAc,QAAO4B,SAAuB5B,EAAc,QACrHS,GAAc,wBAAsBe,SAAoBrB,EAAIW,EAAKV,EAAIW,EAAKV,EAAIY,EAAKX,EAAIU,EAAKT,YAC9D,IAArBP,EAAc,GAAYS,GAAc,uBAAqBe,SAAoBxB,EAAc,OAAgBS,GAAc,uBAAqBe,SAAoBxB,EAAc,aAGrJ,IAAxCZ,KAAKa,eAAe4B,QAAQrB,KAC9BpB,KAAKa,eAAe6B,KAAKtB,GACzBpB,KAAKc,iBAAiB4B,KAAKrB,IAC3BsB,QAAW3C,KAAMsB,EAAGP,EAAIW,EAAKV,EAAIW,EAAKV,EAAIY,EAAKX,EAAIU,EAAKT,EAAG,CAACoB,OAAO,IAC/DP,aACFhC,KAAK4C,eAAetB,GAAK,CACvBuB,OAAQzB,EACR0B,aAAc,CACZ,CACE1B,MAAOC,EACP0B,OAAQ,EACRC,SAAU,KAGdC,QAAS,CACP7B,MAAO,WACP8B,OAAQnC,EAAIW,EAAKV,EAAIW,EAAKV,EAAIY,EAAKX,EAAIU,EAAKT,EAC5CgC,MAAO,CACLC,OAAQ,EACRC,SAAU,EACVd,OAAO,EACPe,mBAAoB,EACpBC,eAAe,EACfC,OAAQ,MAKhBlC,KAEFC,KAEFkC,SAAwBzD,OAE1BA,KAAK0D,0BAA4B,CAAC,kBAAmB,OACrD1D,KAAK2D,6BAA+B,CAAC,oC,6BCpIxB,SAAS5D,IAEtBC,KAAKP,MAAQ,GACbO,KAAKG,SAAW,GAChBH,KAAK4D,mBAAqB,GAC1B5D,KAAKa,eAAiB,GACtBb,KAAKc,iBAAmB,GACxBd,KAAK6D,aAAe,GACpB7D,KAAK8D,QAAU,GACf9D,KAAK+D,kBAAoB,GACzB/D,KAAKQ,YAAc,GACnBR,KAAKM,OAAS,EACdN,KAAKO,WAAa,EAClBP,KAAKI,QAAU,EACfJ,KAAKK,YAAc,EACnBL,KAAKgE,QAAS,EAEdhE,KAAK0D,2BAA4B,EACjC1D,KAAKiE,uBAAwB,EAC7BjE,KAAKkE,6BAA8B,EACnClE,KAAKmE,oBAAqB,EAC1BnE,KAAKoE,uBAAwB,EAC7BpE,KAAKqE,kBAAmB,EACxBrE,KAAKsE,sBAAuB,EAC5BtE,KAAKuE,mBAAoB,EACzBvE,KAAKwE,uBAAwB,EAC7BxE,KAAKyE,+BAAgC,EACrCzE,KAAK0E,qBAAsB,EAC3B1E,KAAK2E,MAAQ,GACb3E,KAAK4E,YAAa,EAClB5E,KAAK6E,gBAAkB,GAMvB7E,KAAK8E,mBAAoB,EACzB9E,KAAKS,YAAa,EAClBT,KAAK+E,uBAAwB,EAC7B/E,KAAKgF,KAAM,EACXhF,KAAKiF,eAAgB,EACrBjF,KAAKkF,SAAU,EACflF,KAAK4C,eAAiB,GACtB5C,KAAKmF,sBAAwB,GAC7BnF,KAAKoF,cAAe,EACpBpF,KAAKU,gBAAkB,SAAU2E,KACjCrF,KAAKsF,cAAgB,G,8IC/ChB,SAASC,EAAoBC,GACT,IAArBA,EAAS5F,SAAsC,IAArB4F,EAAS5F,SAgKlC,SAA4B4F,GACjCC,SAASC,iBAAiB,qBAAqB,KAC7C,MAAMC,EAASF,SAASG,cAAe,YAAWJ,EAASH,kBACvDM,GACFA,EAAOD,iBAAiB,SAASG,IAGGL,EAAShF,YAC3C,IAAK,MAAMc,KAAKkE,EAAS5C,eAAgB,CACvC,MAAMkD,EAAmBL,SAASG,cAAe,mBAAkBJ,EAASH,kBAAkB/D,KAExFyE,EAAaN,SAASO,eAAgB,eAAcR,EAASH,kBAAkB/D,KACjFyE,EAAWE,MAAMC,WAAW,IAAK,MAAQV,EAAS5C,eAAetB,GAAG2B,QAAQC,OAAOiD,WAAWD,WAAW,IAAK,IAAIA,WAAW,IAAI,MACnIJ,EAAiBM,UAAY,OAG7BN,EAAiBM,UAAY,MAG/BL,EAAWM,UAAW,EACtBP,EAAiBQ,MAAMC,SAAW,QAEpCZ,EAAOa,UAAUC,IAAI,kBAtL2BC,CAAkBlB,GAC/C,IAArBA,EAAS5F,SAAsC,IAArB4F,EAAS5F,SASlC,SAAsB4F,GAC3BC,SAASC,iBAAiB,qBAAqB,KAE7CiB,EAAE,gBAAgBC,WAElB,MAAMC,EAAW,yBACXC,EAAU,2BACVnB,EAASF,SAASG,cAAe,YAAWJ,EAASH,kBACvDM,GACFA,EAAOD,iBAAiB,SAASG,IAC/B,IAAK,IAAIvE,EAAI,EAAGA,EAAIkE,EAAShF,YAAac,IAAK,CAE7C,IAGIyF,EAHAC,EAAmB,EACnBC,EAAsB,EACtBC,EAA4B,EAGhC,IAAK,IAAIC,EAAI,EAAGA,EAAI3B,EAAS5C,eAAetB,GAAGwB,aAAasE,OAAQD,IAC9D3B,EAAS5C,eAAetB,GAAGwB,aAAaqE,GAAGpE,QAAQmE,IAEzD,MAAMpB,EAAmBL,SAASG,cAAe,mBAAkBJ,EAASH,kBAAkB/D,KAC9FkE,EAAS5C,eAAetB,GAAGwB,aAAauE,SAAQ,CAACC,EAAaC,KAC5D,MAAMC,EAAQ/B,SAASG,cAAe,WAAUJ,EAASH,kBAAkB/D,KAAKiG,KAC1EE,EAAQhC,SAASG,cAAe,WAAUJ,EAASH,kBAAkB/D,KAAKiG,KAC5ED,EAAYvE,QACdyE,EAAMlB,MAAMoB,gBAAkBZ,EAC1BW,EAAME,UACRX,IACAD,EAAiBQ,KAEQ,IAAlBE,EAAME,UACfH,EAAMlB,MAAMoB,gBAAkBb,EAC9BI,IACAF,EAAiBQ,MAGrB,IAAIK,EAAe,WACS,IAAxBX,GAA6BD,IAAqBE,EACpDpB,EAAiBM,UAAY,MAE7BN,EAAiBM,UAAY,KAC7BwB,EAAe,SAEjB9B,EAAiBQ,MAAMC,SAAW,QAC9BQ,GAAkB,IACpBc,QAAgB,CACdC,GAAK,aAAYtC,EAASH,kBAAkB/D,IAC5CyG,QAASvC,EAAS5C,eAAetB,GAAGwB,aAAaiE,GAAgB/D,SACjEgF,KAAMJ,IAIKnC,SAASwC,iBAAkB,kBAAiBzC,EAASH,kBAC7DgC,SAAQ,SAAUa,GACzBA,EAAQ1B,UAAUC,IAAI,gBAExBd,EAAOa,UAAUC,IAAI,kBAjE2B0B,CAAY3C,GA4E7D,SAAS4C,EAAiB5C,EAAUlE,GACzCkE,EAAS/F,MAAQ,aACjB,IAAI2B,EAAQ,GACRC,EAAY,GACZgH,EAAS,GAeb,GAbEA,EADErG,YACO,SAEA,eAGgCsG,IAAvC9C,EAAS5C,eAAetB,GAAGiH,QACxB/C,EAAS5C,eAAetB,GAAGiH,QAAQC,UACtChD,EAAS5C,eAAetB,GAAGwB,cAAe2F,SAAcjD,EAAS5C,eAAetB,GAAGwB,aAAc0C,EAAS5C,eAAetB,GAAGiH,QAAQG,aAGtIlD,EAAS5C,eAAetB,GAAGwB,cAAe2F,SAAcjD,EAAS5C,eAAetB,GAAGwB,cAqChF,SAA0BA,GAC/B,IAAI6F,GAAkB,EACtB,IAAK,IAAIrH,EAAI,EAAGA,EAAIwB,EAAasE,OAAS,EAAG9F,IAC3C,IAAK,IAAIsH,EAAItH,EAAI,EAAGsH,EAAI9F,EAAasE,QAC/BtE,EAAaxB,GAAGF,QAAU0B,EAAa8F,GAAGxH,OAE5CuH,GAAkB,EACd7F,EAAaxB,GAAGyB,OAClBD,EAAa+F,OAAOD,EAAG,GACd9F,EAAa8F,GAAG7F,QAEzBD,EAAa+F,OAAOD,EAAG,GACvB9F,EAAaxB,GAAGyB,QAAS,GAEzBD,EAAa+F,OAAOD,EAAG,IAGzBA,IApDNE,CAAgBtD,EAAS5C,eAAetB,GAAGwB,eACtCd,WAAe,CACdA,YACFZ,GAAU,yBAAwBoE,EAASH,kBAAkB/D,MAE7DF,GAAS,OAEX,IAAK,IAAI2H,EAAM,EAAGA,EAAMvD,EAAS5C,eAAetB,GAAGwB,aAAasE,OAAQ2B,IAClE/G,YACFZ,GAAU,6BAA4BoE,EAASH,sGACqBG,EAASH,kBAAkB/D,KAAKyH,sCAC5EvD,EAASH,kBAAkB/D,KAAKyH,MAAQvD,EAAS5C,eAAetB,GAAGwB,aAAaiG,GAAK3H,MAAQiH,8BAGrHjH,GAAU,iBAAgBoE,EAAS5C,eAAetB,GAAGwB,aAAaiG,GAAK3H,QAAUiH,EAE/E7C,EAAS5C,eAAetB,GAAGwB,aAAaiG,GAAKhG,OAC/C1B,GAAc,sBAAqBmE,EAAS5C,eAAetB,GAAGwB,aAAaiG,GAAK3H,QAAUiH,EAE1FhH,GAAc,iBAAgBmE,EAAS5C,eAAetB,GAAGwB,aAAaiG,GAAK3H,QAAUiH,EAGrFrG,cACFZ,GAAU,4BAA2BoE,EAASH,kBAAkB/D,aAChEF,GAAU,wBAAuBoE,EAASH,kBAAkB/D,qBAGhE,MAAO,CAAEF,MAAOA,EAAOC,UAAWA,GAkE7B,SAASY,EAAkBuD,EAAUlE,GAAG,MAAEF,EAAQ,GAAV,WAAc4H,EAAa,GAA3B,OAA+BC,GAAS,EAAxC,QAA8CC,GAAU,GAAS,IAC9G,OAAIlH,aAAkBwD,EAAS/E,WACrB,uBAAsBwI,EAAS,SAAW,uDAEzC7H,uCACc8H,EAAU,6DAA+D,uBAAuB1D,EAASH,kBAAkB/D,qBACxI0H,4CACmBxD,EAASH,kBAAkB/D,qCAIjD,GAUJ,SAASqB,EAAY6C,EAAUlE,EAAGP,GAAG,OAACqC,EAAS,EAAV,SAAaC,EAAW,EAAxB,MAA2Bd,GAAQ,EAAnC,mBAA0Ce,EAAqB,EAA/D,cAAkEC,GAAgB,EAAlF,OAAyFC,EAAS,GAAK,SAC9G8E,IAA/B9C,EAAS5C,eAAetB,KAC1BkE,EAAS5C,eAAetB,GAAK,SAEYgH,IAAvC9C,EAAS5C,eAAetB,GAAG2B,UAC7BuC,EAAS5C,eAAetB,GAAG2B,QAAU,IAIvCuC,EAAS5C,eAAetB,GAAG2B,QAAQC,OAASnC,EAC5CyE,EAAS5C,eAAetB,GAAG2B,QAAQE,MAAQ,CAAEC,OAAQA,EAAQC,SAAUA,EAAUd,MAAOA,EAAOe,mBAAoBA,EAAoBC,cAAeA,EAAeC,OAAQA,K,wDCvN/K,MAAM2F,EAAU,CAACC,EAAQC,IAA2B,iBAAXD,GAAuBE,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAQ7G,SAASK,EAAWC,EAAKC,GACvB,IACE,GAAID,GAAOA,EAAIrD,MACb,GAAsB,iBAAXsD,GACTA,EAASA,EAAOC,MAAM,MACfxC,SAAQ,SAAUyC,GAEvB,GADAA,EAAQ,eAAeC,KAAKD,GACjB,CACT,MAAO,CAAEE,EAAK/D,GAAS6D,EACvBH,EAAIrD,MAAM0D,GAAO/D,WAGhB,GAAsB,iBAAX2D,EAChB,IAAK,IAAIP,KAAQO,EACXT,EAAQS,EAAQP,KAClBM,EAAIrD,MAAM+C,GAAQO,EAAOP,IAKjC,MAAOY,GACPC,QAAQD,MAAMA,IASX,SAASE,EAASR,EAAKS,GAC5BT,EAAIU,YAAYC,OAAO7E,SAAS8E,eAAeH,IAW1C,SAASI,EAAK1C,EAAI2C,GAAS,GAChC,GAAkB,iBAAP3C,EAAiB,MAAM4C,UAAU,qBAC5C,MAAMf,EAAMlE,SAASO,eAAe8B,GACpC,IAAK6B,GAAOc,EAAQ,MAAME,MAAO,kBAAiB7C,kBAClD,OAAO6B,EAwCF,SAASiB,EAAYC,EAAQC,EAAKC,EAAOC,GAC9C,MAAMrB,EAhCD,SAAiBmB,EAAKC,EAAOE,GAClC,MAAMtB,EAAMW,OAAO7E,SAASyF,cAAcJ,GAC1C,IAAIK,EACJ,IACE,GAAIJ,EACF,IAAKI,KAAQJ,EACP5B,EAAQ4B,EAAOI,KACJ,UAATA,EAAkBxB,EAAIyB,UAAYL,EAAMM,MAC1B,cAATF,EAAsBxB,EAAIyB,UAAYL,EAAMK,UACnC,UAATD,EAAkBzB,EAAUC,EAAKoB,EAAMzE,OAC3CqD,EAAI2B,aAAaH,EAAMJ,EAAMI,KAIxC,MAAOlB,GACPC,QAAQD,MAAMA,GAKhB,OAFIgB,GAAYd,EAAQR,EAAKsB,GAEtBtB,EAYK4B,CAAOT,EAAKC,EAAOC,GAE/B,OADAH,EAAOR,YAAYV,GACZA,ECxGT,MAAM6B,EAAQ,CAAC,OAAQ,UAAW,QAAS,YAUpC,SAASC,EAAaC,GAAW,QAAE3D,EAAU,0BAAZ,KAAuCC,EAAO,SAA9C,MAAwDvI,GAAU,IACnG+L,EAAMG,SAAS3D,KAClBkC,QAAQD,MAAMU,MAAO,6BAA4B3C,MACjDA,EAAO,SAET,MACM4D,EAAMhB,EAAWc,EAAW,MAAO,CAAEN,UAAY,cAD/B,SAATpD,EAAkB,GAAKA,MAEhC6D,EAAmB,UAAT7D,EACZ,gBACU,YAATA,EACG,WACA,eAGR,GAFkB4C,EAAWgB,EAAK,IAAK,CAAER,UAAW,eAC1C1F,iBAAiB,SAAS,IAAMkG,EAAIE,WAC1CrM,EAAO,CACT,MAAMsM,EAAWnB,EAAWgB,EAAK,MAAO,CAAER,UAAW,WACrDR,EAAWmB,EAAU,IAAK,CAAEX,UAAY,GAAES,WAC1C1B,EAAQ4B,EAAUtM,GAIpB,MAFI,oBAAoBuM,KAAKjE,GAAU6D,EAAIxF,WAAa2B,EACnDoC,EAAQyB,EAAK7D,GACX6D,EAUF,SAASK,GAAoB,KAAEC,EAAF,SAAQ1G,IAC1C,MAAMkG,EAAYlB,EAAI,mBACtB,OAAQ0B,GACN,IAAK,sBACHT,EAAYC,EAAW,CACrBjM,MAAO,yCACPsI,QAAU,iBAAgBvC,0GAC1BwC,KAAM,UAER,MACF,IAAK,WACHyD,EAAYC,EAAW,CACrBjM,MAAO,sCACPsI,QAAU,wPAEVC,KAAM,YAER,MACF,IAAK,cACHyD,EAAYC,EAAW,CACrBjM,MAAO,yCACPsI,QAAU,wPAEVC,KAAM,YAER,MACF,QACEkC,QAAQD,MAAMU,MAAO,QAAOuB,sCAC5BT,EAAYC,EAAW,CACrBjM,MAAO,iBACPsI,QAAU,wLAEVC,KAAM,aAaP,SAASH,GAAiB,GAAEC,EAAF,QAAMC,EAAU,GAAhB,KAAoBC,EAAO,SAAY,IACtE,IAAKF,IAAOC,EAAS,OAAOmC,QAAQD,MAAMS,UAAU,wBAExCe,EADMjB,EAAI1C,GACa,CAAEC,UAASC,SAC1C1B,MAAM6F,MAAQ","file":"js/3958.ae01e4b9655c34b3e28f.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureNombreRelatif, ecritureNombreRelatifc, ecritureAlgebrique, ecritureAlgebriquec, signe, texNombreCoul, sommeDesTermesParSigne, triePositifsNegatifs, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Additions et soustractions de nombres relatifs'\nexport const interactifReady = true\nexport const amcReady = true\nexport const amcType = 4 // Je voudrais du type 5, mais ça ne fonctionne pas en ligne...\n\n/**\n* Effectuer la somme ou la différence de deux nombres relatifs\n*\n* * On peut paramétrer les distances à zéro qui sont par défaut inférieures à 20\n* * On peut utiliser des écritures simplifiées (ce qui n'est pas le cas par défaut)\n* @Auteur Rémi Angot modifications par Jean-Claude Lhote\n* Référence 5R22\n*/\nexport default function ExerciceAdditionsSoustractionRelatifsV2 (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.spacingCorr = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nbQuestions = 5\n  this.interactif = true\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let relatifs\n    let sommesSignees\n    for (let i = 0, a, b, c, d, e, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) { // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      relatifs = []\n      sommesSignees = []\n      a = -1\n      b = choice([-1, 1])\n      if (a === -1 & b === -1) {\n        c = 1\n      } else { // On s'assure que les 3 premières termes n'ont pas le même signe\n        c = choice([-1, 1])\n      }\n      a = randint(1, this.sup) * a\n      b = randint(1, this.sup) * b\n      c = randint(1, this.sup) * c\n      d = randint(1, this.sup) * choice([-1, 1])\n      e = randint(1, this.sup) * choice([-1, 1])\n      const s1 = choice([-1, 1])\n      const s2 = choice([-1, 1])\n      const s4 = choice([-1, 1])\n      let s3\n      if (s1 === 1 & s2 === 1) { // On s'assure que les 3 premières opérations ne sont pas identiques\n        s3 = -1\n      } else if (s1 === -1 & s2 === -1) {\n        s3 = 1\n      } else {\n        s3 = choice([-1, 1])\n      }\n      if (this.sup2) {\n        texte = `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(e)} = \\\\dotfill $`\n        if (this.interactif && !context.isAmc) {\n          texte = ajouteChampTexte(this, i, { texte: `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(e)} =$` })\n        }\n        if (!context.isHtml && !context.isAmc) {\n          texte += `<br>$ ${lettreDepuisChiffre(i + 1)} = \\\\dotfill $`\n        }\n        relatifs = triePositifsNegatifs([a, b, c, d, e])\n        texteCorr = `$ ${lettreDepuisChiffre(i + 1)}\\\\textbf{=}~${texNombreCoul(a)}${ecritureAlgebriquec(b)}${ecritureAlgebriquec(c)}${ecritureAlgebriquec(d)}${ecritureAlgebriquec(e)}\\\\\\\\\\\\phantom{A }\\\\textbf{=}~`\n        if (sommeDesTermesParSigne([a, b, c, d, e])[0] !== 0 && sommeDesTermesParSigne([a, b, c, d, e])[1] !== 0) {\n          texteCorr += `${texNombreCoul(relatifs[0])}${ecritureAlgebriquec(relatifs[1])}${ecritureAlgebriquec(relatifs[2])}${ecritureAlgebriquec(relatifs[3])}${ecritureAlgebriquec(relatifs[4])}\\\\\\\\\\\\phantom{A }\\\\textbf{=}~`\n          texteCorr += `${texNombreCoul(sommeDesTermesParSigne([a, b, c, d, e])[0])}${ecritureAlgebriquec(sommeDesTermesParSigne([a, b, c, d, e])[1])}\\\\\\\\\\\\phantom{A }\\\\textbf{=}~`\n          texteCorr += `${texNombreCoul(a + b + c + d + e)} $`\n        } else if (sommeDesTermesParSigne([a, b, c, d, e])[0] !== 0) { texteCorr += `${texNombreCoul(sommeDesTermesParSigne([a, b, c, d, e])[0])}$` } else { texteCorr += `${ecritureAlgebriquec(sommeDesTermesParSigne([a, b, c, d, e])[1])}$` }\n      } else {\n        texte = `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(c)}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} = \\\\dotfill $`\n        if (this.interactif && !context.isAmc) {\n          texte = ajouteChampTexte(this, i, { texte: `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(c)}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} = $` })\n        }\n        if (!context.isHtml && !context.isAmc) {\n          texte += `<br>$ ${lettreDepuisChiffre(i + 1)} = \\\\dotfill $`\n        }\n        texteCorr = `$ ${lettreDepuisChiffre(i + 1)} =  ${a}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(c)}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)}$`\n        texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(a)}+${ecritureNombreRelatifc(s1 * b)}+${ecritureNombreRelatifc(s2 * c)}+${ecritureNombreRelatifc(s3 * d)}+${ecritureNombreRelatifc(s4 * e)} $`\n\n        relatifs = triePositifsNegatifs([a, s1 * b, s2 * c, s3 * d, s4 * e])\n\n        if (relatifs[0] > 0 & relatifs[4] < 0) {\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(relatifs[0])}+${ecritureNombreRelatifc(relatifs[1])}+${ecritureNombreRelatifc(relatifs[2])}+${ecritureNombreRelatifc(relatifs[3])}+${ecritureNombreRelatifc(relatifs[4])} $`\n        }\n        sommesSignees = sommeDesTermesParSigne([relatifs[0], relatifs[1], relatifs[2], relatifs[3], relatifs[4]])\n        if (sommesSignees[0] !== 0 && sommesSignees[1] !== 0) {\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(sommesSignees[0])}+${ecritureNombreRelatifc(sommesSignees[1])} $`\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureAlgebriquec(a + s1 * b + s2 * c + s3 * d + s4 * e)} $<br>`\n        } else if (sommesSignees[0] !== 0) { texteCorr += `<br>$ \\\\phantom{A}=${ecritureAlgebriquec(sommesSignees[0])}$` } else { texteCorr += `<br>$ \\\\phantom{A}=${ecritureAlgebriquec(sommesSignees[1])}$<br>` }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        setReponse(this, i, a + s1 * b + s2 * c + s3 * d + s4 * e, {signe: true })\n        if (context.isAmc) {\n          this.autoCorrection[i] = {\n            enonce: texte,\n            propositions: [\n              {\n                texte: texteCorr,\n                statut: 3,\n                feedback: ''\n              }\n            ],\n            reponse: {\n              texte: 'résultat',\n              valeur: a + s1 * b + s2 * c + s3 * d + s4 * e,\n              param: {\n                digits: 0,\n                decimals: 0,\n                signe: true,\n                exposantNbChiffres: 0,\n                exposantSigne: false,\n                approx: 0\n              }\n            }\n          }\n        }\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              message: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.',',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n\n\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (var prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n// Module regroupant les fonctions de gestions des erreurs.\n\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} feedback\n * @param {string} [feedback.message]\n * @param {string} [feedback.type]\n * @param {string} [feedback.titre]\n */\nexport function addFeedback (container, { message = 'Une erreur est survenue', type = 'erreur', titre } = {}) {\n  if (!types.includes(type)) {\n    console.error(Error(`type de message inconnu : ${type}`))\n    type = 'error'\n  }\n  const cssDiv = type === 'info' ? '' : type\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = type === 'error'\n    ? 'frown outline'\n    : (type === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  if (/<[a-zA-Z0-9_ \"']+/.test(message)) div.innerHTML += message\n  else addText(div, message)\n  return div\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        type: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        type: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} feedback\n * @param {string} feedback.id id du div conteneur à utiliser\n * @param {string} feedback.message Le message à afficher\n * @param {string} feedback.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, message = '', type = 'error' } = {}) {\n  if (!id || !message) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message, type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}