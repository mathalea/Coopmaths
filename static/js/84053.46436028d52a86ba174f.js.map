{"version":3,"file":"js/84053.46436028d52a86ba174f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5S14.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, arrondi, arrondiVirgule, listeDeNotes, joursParMois, unMoisDeTemperature, nomDuMois, texNombre, texFraction, personne, prenomF } from '../../modules/outils.js'\nimport { getVueFromUrl } from '../../modules/gestionUrl.js'\n\nexport const titre = 'Calculer des moyennes'\n\n/**\n* Calcul de moyennes de série statistiques\n* @author Jean-Claude Lhote et Guillaume Valmont\n* Référence 5S14\n* Modifié le 23/07/2021\n*/\nexport default function CalculerDesMoyennes () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.spacing = 1\n  this.spacingCorr = 2.5\n  this.nbColsCorr = 1\n  this.nbCols = 1\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, nombreNotes, eleve, notes, effectifs, somme, effectifTotal, nombreTemperatures, temperatures, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      if (this.sup.toString() === '1') { // ici on trie des notes\n        nombreNotes = choice([8, 10, 12])\n        notes = listeDeNotes(nombreNotes, randint(0, 7), randint(13, 20)) // on récupère une série de notes (série brute)\n        somme = 0\n        eleve = personne()\n        for (let j = 0; j < nombreNotes; j++) { somme += notes[j] }\n\n        texte = `${eleve.prenom} a obtenu ces notes ce trimestre-ci en mathématiques :<br>`\n        texte += `$${notes[0]}$`\n        for (let j = 1; j < nombreNotes - 1; j++) { texte += `; $${notes[j]}$ ` } // On liste les notes\n        texte += `et $${notes[nombreNotes - 1]}$.<br>`\n        texteCorr = `La somme des notes est : $${somme}$.<br> Il y a $${nombreNotes}$ notes<br>`\n\n        if (eleve.genre === 'masculin') {\n          texte += 'Calculer la moyenne de cet élève en mathématiques.'\n          texteCorr += 'Donc la moyenne de cet élève est : ' + `$${texFraction(texNombre(somme), texNombre(nombreNotes))}$`\n        } else {\n          texte += 'Calculer la moyenne de cette élève en mathématiques.'\n          texteCorr += 'Donc la moyenne de cette élève est : ' + `$${texFraction(texNombre(somme), texNombre(nombreNotes))}$`\n        }\n\n        if (arrondi(somme / nombreNotes, 2) === somme / nombreNotes) { // moyenne exacte\n          texteCorr += `$=${arrondiVirgule(somme / nombreNotes, 2)}$<br>`\n        } else { // moyenne arrondie\n          texteCorr += `$\\\\approx${arrondiVirgule(somme / nombreNotes, 2)}$`\n        }\n      }\n      if (this.sup.toString() === '2') { // ici on relève des températures\n        const mois = randint(1, 12)\n        const annee = randint(1980, 2019)\n        const temperaturesDeBase = [3, 5, 9, 13, 19, 24, 26, 25, 23, 18, 10, 5]\n        nombreTemperatures = joursParMois(mois)\n        temperatures = unMoisDeTemperature(temperaturesDeBase[mois - 1], mois, annee) // série brute de un mois de température\n        somme = 0\n        texte = `En ${nomDuMois(mois)} ${annee}, à ${choice(['Moscou', 'Berlin', 'Paris', 'Bruxelles', 'Rome', 'Belgrade'])}, on a relevé les températures suivantes<br>`\n        texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // tableau des températures 1/2\n        texte += '|c'\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) { texte += '|c' }\n        texte += '}\\\\hline  \\\\text{Jour}'\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) { texte += '&' + texNombre(j + 1) }\n        texte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}'\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) {\n          texte += '&' + temperatures[j]\n          somme += temperatures[j]\n        }\n        texte += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>'\n        texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c' // tableau des températures 2/2\n        texte += '|c'\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) { texte += '|c' }\n        texte += '}\\\\hline  \\\\text{Jour}'\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) { texte += '&' + texNombre(j + 1) }\n        texte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}'\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) {\n          texte += '&' + temperatures[j]\n          somme += temperatures[j]\n        }\n        texte += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>'\n\n        texte += 'Calculer la température moyenne de ce mois.'\n        texteCorr = `En ${nomDuMois(mois)} ${annee}, la somme des températures est ` + `$${somme}^\\\\circ\\\\text{C}$.<br> Il y a $${temperatures.length}$ jours ce mois-ci.<br> La température moyenne est :<br>`\n        texteCorr += `$${texFraction(texNombre(somme) + '^\\\\circ\\\\text{C}', texNombre(nombreTemperatures))}$`\n\n        if (arrondi(somme / nombreTemperatures, 2) === somme / nombreTemperatures) {\n          texteCorr += `$=${arrondiVirgule(somme / nombreTemperatures, 2)}^\\\\circ\\\\text{C}$` // moyenne exacte\n        } else { texteCorr += `$\\\\approx${arrondiVirgule(somme / nombreTemperatures, 2)}^\\\\circ\\\\text{C}$` } // moyenne arrondie\n      }\n      if (this.sup.toString() === '3') { // pointures des membres du club de foot (moyenne pondérée)\n        nombreNotes = 5 // 5 colonnes\n        notes = listeDeNotes(nombreNotes, randint(33, 35), randint(39, 42), true).sort() // on récupère une série de notes (pointures) distinctes et ordonnées\n        effectifs = listeDeNotes(nombreNotes, randint(2, 4), randint(8, 12)) // on récupère une liste d'effectifs\n        somme = 0\n        effectifTotal = 0\n        eleve = prenomF()\n        for (let j = 0; j < nombreNotes; j++) { // Calcul de la somme des valeurs et de l'effectif total\n          somme += notes[j] * effectifs[j]\n          effectifTotal += effectifs[j]\n        }\n        texte = `Pour passer une commande de chaussures de foot,${getVueFromUrl() === 'multi' ? '<br>' : ' '}${eleve} a noté les pointures des membres de son club${getVueFromUrl() === 'multi' ? '<br>' : ' '}et les a regroupées dans un tableau :<br><br>`\n        texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c|c|c|c|c|c|} \\\\hline '\n        texte += `\\\\text{Pointure} & ${notes[0]} & ${notes[1]} & ${notes[2]} & ${notes[3]} & ${notes[4]} \\\\\\\\ \\\\hline `\n        texte += `\\\\text{Effectif} & ${effectifs[0]} & ${effectifs[1]} & ${effectifs[2]} & ${effectifs[3]} & ${effectifs[4]} \\\\\\\\\\\\hline \\\\end{array}$<br><br>`\n        texte += 'Calculer la pointure moyenne des membres de ce club.'\n        texteCorr = '$\\\\text{Moyenne} = \\\\dfrac{\\\\text{Somme des valeurs}}{\\\\text{Effectif total}} ='\n        texteCorr += `\\\\dfrac{${notes[0]} \\\\times ${effectifs[0]}`\n        for (let j = 1; j < nombreNotes; j++) {\n          texteCorr += `+ ${notes[j]} \\\\times ${effectifs[j]}`\n        }\n        texteCorr += `}{${effectifs[0]}`\n        for (let j = 1; j < nombreNotes; j++) {\n          texteCorr += `+ ${effectifs[j]}`\n        }\n        texteCorr += `} = \\\\dfrac{${somme}}{${effectifTotal}} `\n        if (arrondi(somme / effectifTotal, 2) === somme / effectifTotal) { // moyenne exacte\n          texteCorr += `=${arrondiVirgule(somme / effectifTotal, 2)}$<br>`\n        } else { // moyenne arrondie\n          texteCorr += `\\\\approx${arrondiVirgule(somme / effectifTotal, 2)}$<br>`\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de séries', 3, '1 : Série de notes\\n2 : Série de températures\\n3 : Série de pointures (moyenne pondérée)']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","CalculerDesMoyennes","Exercice","this","consigne","nbQuestions","spacing","spacingCorr","nbColsCorr","nbCols","sup","nouvelleVersion","listeQuestions","listeCorrections","nombreNotes","eleve","notes","effectifs","somme","effectifTotal","nombreTemperatures","temperatures","texte","texteCorr","i","cpt","toString","choice","listeDeNotes","randint","personne","j","prenom","genre","texFraction","texNombre","arrondi","arrondiVirgule","mois","annee","temperaturesDeBase","joursParMois","unMoisDeTemperature","nomDuMois","Math","round","length","sort","prenomF","getVueFromUrl","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined"],"sourceRoot":""}