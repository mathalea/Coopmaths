{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G23-1.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","amcType","interactifReady","titre","MesurerUnAngle","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","video","nouvelleVersion","angle","anglerot","Apos","Bpos","Cpos","p","texte","texteCorr","A","B","C","s2","s1","bis","parseInt","qcm","listeQuestions","listeCorrections","signes","labels","secteur","xMin","xMax","yMin","yMax","objetsEnonce","objetsCorrection","secteur0","i","push","choice","randint","lettreDepuisChiffre","interactif","point","rotation","texteParPoint","similitude","homothetie","demiDroite","pointSurSegment","labelPoint","afficheMesureAngle","Math","min","x","max","y","context","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","autoCorrection","enonce","propositions","abs","statut","round","options","ordered","lastChoice","propositionsQcm","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","length","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","id","feedback","type","querySelectorAll","uicheck","classList","add","espace","undefined","shuffleJusqua","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","a","digits","decimals","signe","exposant_nb_chiffres","exposant_signe","approx","reponse","valeur","exerciceInteractif","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"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","file":"js/3489.6a102f5af226e84f75d0.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { point, labelPoint, rotation, mathalea2d, afficheMesureAngle, homothetie, demiDroite, texteParPoint, similitude, pointSurSegment } from '../../modules/2d.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType =1 // QCM \nexport const interactifReady = true\n\nexport const titre = 'Mesurer un angle'\n\n/**\n * Construire un angle\n * @Auteur Jean-Claude Lhote\n * Référence 6G23\n */\nexport default function MesurerUnAngle () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbQuestionsModifiable = true\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1\n  this.video = 'TEzu9uky56M'\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.qcm = ['6G23-1', [], \"Estimer la mesure d'un angle.\", 1]\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let angle; let anglerot; let Apos; let Bpos; let Cpos; let p; let texte; let texteCorr; let A; let B; let C; let s2; let s1; let bis; const signes = []\n    let labels, secteur, xMin, xMax, yMin, yMax, objetsEnonce, objetsCorrection, secteur0\n\n    for (let i = 0; i < this.nbQuestions; i++) {\n      signes.push(choice([-1, 1]))\n      if (this.sup === 1) {\n        angle = randint(2, 16, 9) * 10\n      } else if (this.sup === 2) {\n        angle = randint(4, 32, 18) * 5\n      } else {\n        angle = randint(20, 160, 90)\n      }\n      anglerot = randint(-180, 180)\n      angle = signes[i] * angle\n      p = [choice(['x', 'y', 'z', 't']), lettreDepuisChiffre(randint(1, 16)), choice(['s', 'u', 'v', 'w'])]\n      if (this.interactif) {\n        texte = `Estime la mesure de l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$ sans instrument.<br>`\n      } else {\n        texte = `Mesure l'angle $\\\\widehat{${p[0] + p[1] + p[2]}}$.<br>`\n      }\n      A = point(0, 0)\n      B = point(6, 0)\n      B = rotation(B, A, anglerot)\n\n      // texte, A, orientation = \"milieu\", color = 'black', scale = 1, ancrageDeRotation = \"middle\", math_on = false\n      Bpos = texteParPoint(p[0], similitude(A, homothetie(B, A, 0.95), signes[i] * 90, 0.1), 'milieu', 'black', 1, 'middle', true)\n      s1 = demiDroite(A, B)\n      C = rotation(B, A, angle)\n      bis = rotation(B, A, angle / 2)\n      Apos = texteParPoint(p[1], pointSurSegment(A, bis, -0.5), 'milieu', 'black', 1, 'middle', true)\n      Cpos = texteParPoint(p[2], similitude(A, homothetie(C, A, 0.95), -signes[i] * 90, 0.1), 'milieu', 'black', 1, 'middle', true)\n      s2 = demiDroite(A, C)\n      labels = labelPoint(A, B, C)\n      secteur = afficheMesureAngle(B, A, C)\n      secteur0 = afficheMesureAngle(B, A, C, 'black', 1.5, ' ')\n      texteCorr = ''\n      xMin = Math.min(A.x, C.x, B.x) - 1\n      xMax = Math.max(A.x, C.x, B.x) + 1\n      yMin = Math.min(A.y, C.y, B.y) - 1\n      yMax = Math.max(A.y, C.y, B.y) + 1\n      context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n      objetsEnonce = [s1, s2, labels, Apos, Bpos, Cpos, secteur0]\n      objetsCorrection = [s1, s2, labels, Apos, Bpos, Cpos, secteur]\n      texte += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.8 }, objetsEnonce)\n      texteCorr += mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection)\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${Math.abs(angle)}\\\\degree$`,\n          statut: true\n        },\n        {\n          texte: `$${Math.abs(180 - angle)}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: `$${Math.abs(angle / 2)}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: `$${Math.abs(Math.round((180 + angle) / 2))}\\\\degree$`,\n          statut: false\n        },\n        {\n          texte: '$180\\\\degree$',\n          statut: false\n        },\n        {\n          texte: '$90\\\\degree$',\n          statut: false\n        }\n      ]\n      this.autoCorrection[i].options = {\n        ordered: false,\n        lastChoice: 6\n      }\n      if (this.interactif) {\n        texte += '<br>' + propositionsQcm(this, i).texte\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Précision de l\\'angle', 3, '1 : Angle à 10°\\n2 : Angle à 5°\\n3 : Angle à 1°']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposant_nb_chiffres = 0, exposant_signe = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.valeur = { digits, decimals, signe, exposant_nb_chiffres, exposant_signe, approx }\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}