{"version":3,"file":"js/60709.583ceea294b9d1fd3019.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2N61-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { mathalea2d, tableauDeVariation } from '../../modules/2d.js'\nimport { listeQuestionsToContenu, randint, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif, texFractionReduite, miseEnEvidence, texFraction, texSymbole } from '../../modules/outils.js'\n\nexport const titre = 'Résoudre une inéquation quotient'\n\n/**\n * Résoudre une inéquation quotient\n * * Type 1 : (x+a)/(x+b)<0\n * * Type 2 : (ax+b)/(cx+d)<0\n * * Type 3 : (ax+b)/[(cx+d)(ex+f)]<0\n * * Type 4 : (ax+b)/(cx+d)²<0\n * * Type 5 : (ax+b)/(cx+d)+e<0\n * * Tous les types\n * @author Guillaume Valmont\n * 2N61-4, ex 2L14-2\n * 17/07/2021\n */\nexport default function ExerciceInequationQuotient () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.spacing = 2 // Espace entre deux lignes\n  this.spacingCorr = 2 // Espace entre deux lignes pour la correction\n  this.correctionDetailleeDisponible = true\n  this.correctionDetaillee = false // Désactive la correction détaillée par défaut\n  this.sup = 1 // Choix du type d'inéquation\n  this.nbQuestions = 1 // Choix du nombre de questions\n  if (this.nbQuestions.toString() === '1') {\n    this.consigne = 'Résoudre l\\'inéquation suivante :'\n  } else {\n    this.consigne = 'Résoudre les inéquations suivantes :'\n  }\n  this.listePackages = 'tkz-tab' // Pour la compilation LateX des tableaux de signes\n  this.nbCols = 1 // Fixe le nombre de colonnes pour les énoncés de la sortie LateX\n  this.nbColsCorr = 1 // Fixe le nombre de colonnes pour les réponses de la sortie LateX\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions // Stockera la liste des types de questions\n    // Convertit le paramètre this.sup en type de question\n    switch (this.sup.toString()) {\n      case '1':\n        listeTypeDeQuestions = ['(x+a)/(x+b)<0']\n        break\n      case '2':\n        listeTypeDeQuestions = ['(ax+b)/(cx+d)<0']\n        break\n      case '3':\n        listeTypeDeQuestions = ['(ax+b)/[(cx+d)(ex+f)]<0']\n        break\n      case '4':\n        listeTypeDeQuestions = ['(ax+b)/(cx+d)²<0']\n        break\n      case '5':\n        listeTypeDeQuestions = ['(ax+b)/(cx+d)+e<0']\n        break\n      default:\n        listeTypeDeQuestions = [\n          '(x+a)/(x+b)<0',\n          '(ax+b)/(cx+d)<0',\n          '(ax+b)/[(cx+d)(ex+f)]<0',\n          '(ax+b)/(cx+d)²<0',\n          '(ax+b)/(cx+d)+e<0'\n        ]\n        break\n    }\n    // Crée une liste randomisée de types de questions respectant le nombre (this.nbQuestions) et le type (this.sup) de questions passés en paramètre\n    listeTypeDeQuestions = combinaisonListes(\n      listeTypeDeQuestions,\n      this.nbQuestions\n    )\n    // Crée une liste d'autant de signes que de questions\n    const signes = combinaisonListes(['<', '>', '≤', '≥'], this.nbQuestions)\n    // Boucle principale qui servira à créer toutes les questions // On limite le nombre d'essais à 50 pour chercher des valeurs nouvelles\n    for (let i = 0, a, b, c, d, e, f, pGauche, pDroite, texte, ligne1, ligne2, ligne3, ligne4, ecart, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Génère 4 nombres relatifs a, b, c et d tous différents avec a et c qui ne peuvent pas être 1 car ce sont ceux qui peuvent multiplier x pour éviter à la fois d'avoir '1x' et de diviser par 1\n      a = randint(-13, 13, [0, 1, -1])\n      b = randint(-13, 13, [0, a])\n      c = randint(-13, 13, [0, 1, -1, a, b])\n      d = randint(-13, 13, [0, a, b, c, (b * c) / a]) // Pour éviter que ax + b et cx + d n'aient la même racine\n      e = randint(-13, 13, [0, 1, -1, a, b, c, d])\n      f = randint(-13, 13, [0, a, b, c, d, e, (b * e) / a, (d * e) / c]) // Pour éviter que (ax + b et ex + f) ou (cx + d et ex + f) n'aient la même racine\n      // Augmente la hauteur des lignes sur la sortie pdf\n      if (context.isHtml) {\n        ecart = 2\n      } else {\n        ecart = 4\n      }\n      // Pioche un signe d'inégalité parmi <, ≤, ≥, > et définit en fonction si les crochets seront ouverts ou fermés dans l'ensemble de solutions\n      switch (signes[i]) {\n        case '<':\n          pGauche = ']'\n          pDroite = '['\n          break\n        case '≤':\n          pGauche = '['\n          pDroite = ']'\n          break\n        case '>':\n          pGauche = ']'\n          pDroite = '['\n          break\n        case '≥':\n          pGauche = '['\n          pDroite = ']'\n          break\n      }\n      // Fonction détaillant la résolution d'une équation de type x + val\n      function resolutionDetailleeEquation (val, egal) {\n        let symbole = texSymbole('>')\n        if (egal) {\n          symbole = '='\n        }\n        texteCorr += `$x${ecritureAlgebrique(val)}${symbole}0$ <br>`\n        texteCorr += `$x${ecritureAlgebrique(val)}${miseEnEvidence(ecritureAlgebrique(-1 * val))}\n        ${symbole}${miseEnEvidence(ecritureAlgebrique(-1 * val))}$<br>`\n        texteCorr += `$x${symbole}${-val}$<br>`\n      }\n      // Fonction écrivant la correction détaillée d'une inéquation du type var1*x + var2 > 0\n      function ecrireCorrectionDetaillee (var1, var2, egal) {\n        let symbolePlusGrand = texSymbole('>')\n        let symbolePlusPetit = texSymbole('<')\n        if (egal) {\n          symbolePlusGrand = '='\n          symbolePlusPetit = '='\n        }\n        // Détaille les étapes de la résolution en mettant en évidence les calculs réalisés.\n        texteCorr += `<br>$${var1}x${ecritureAlgebrique(var2)}${symbolePlusGrand}0$ <br>`\n        texteCorr += `$${var1}x${ecritureAlgebrique(var2)}${miseEnEvidence(ecritureAlgebrique(-1 * var2))}\n        ${symbolePlusGrand}${miseEnEvidence(ecritureAlgebrique(-1 * var2))}$<br>`\n        texteCorr += `$${var1}x${symbolePlusGrand}${-var2}$<br>`\n        // Si var1 < 0, l'inégalité change de sens\n        if (var1 < 0) {\n          texteCorr += `$${var1}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(var1))}`\n          if (egal) { // On met en évidence un > qui se change en <, pas un = qui ne change pas\n            texteCorr += symbolePlusPetit\n          } else {\n            texteCorr += miseEnEvidence(symbolePlusPetit)\n          }\n          texteCorr += `${-var2 + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(var1))}$<br>`\n          texteCorr += `$x${symbolePlusPetit}${texFraction(-var2, var1)}$`\n          texteCorr += `<br>Donc $${var1}x${ecritureAlgebrique(var2)}${symbolePlusGrand}0$ si et seulement si $x${symbolePlusPetit} ${texFractionReduite(-var2, var1)}$`\n        } else { // sinon elle ne change pas de sens\n          texteCorr += `$${var1}x${miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(var1))}\n            ${symbolePlusGrand}${-var2 + miseEnEvidence('\\\\div' + ecritureParentheseSiNegatif(var1))}$<br>`\n          texteCorr += `$x${symbolePlusGrand} ${texFraction(-var2, var1)}$`\n          texteCorr += `<br>Donc $${var1}x${ecritureAlgebrique(var2)}${symbolePlusGrand}0$ si et seulement si $x${symbolePlusGrand}${texFractionReduite(-var2, var1)}$`\n        }\n      }\n      // Prépare les quatre types de lignes possibles pour les tableaux avec 2 antécédents : + + - , + - -, - + + et - - +\n      // Les lignes sont des tableaux qui alternent chaîne de caractère et 'nombre de pixels de largeur estimée du texte pour le centrage'\n      // La première chaîne 'Line' indique que c'est pour un tableau de signes et valeurs ('Var' pour un tableau de variations)\n      // '' indique qu'il n'y a rien à afficher (pour laisser un espace sous la borne par exemple)\n      // \",'z', 20\" pour avoir un zéro sur des pointillés et \",'t', 5\" pour juste avoir les pointillés\n      const lignePPM = ['Line', 30, '', 0, '+', 20, 't', 5, '+', 20, 'z', 20, '-', 20]\n      const lignePMM = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 't', 5, '-', 20]\n      const ligneMPP = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 't', 5, '+', 20]\n      const ligneMMP = ['Line', 30, '', 0, '-', 20, 't', 5, '-', 20, 'z', 20, '+', 20]\n      // Prépare les six types de lignes possibles pour les tableaux avec 3 antécédents : +++-, ++--, +---, ---+, --++, -+++\n      const lignePPPM = ['Line', 30, '', 0, '+', 20, 't', 5, '+', 20, 't', 5, '+', 20, 'z', 20, '-', 20]\n      const lignePPMM = ['Line', 30, '', 0, '+', 20, 't', 5, '+', 20, 'z', 20, '-', 20, 't', 5, '-', 20]\n      const lignePMMM = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 't', 5, '-', 20, 't', 5, '-', 20]\n      const ligneMPPP = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 't', 5, '+', 20, 't', 5, '+', 20]\n      const ligneMMPP = ['Line', 30, '', 0, '-', 20, 't', 5, '-', 20, 'z', 20, '+', 20, 't', 5, '+', 20]\n      const ligneMMMP = ['Line', 30, '', 0, '-', 20, 't', 5, '-', 20, 't', 5, '-', 20, 'z', 20, '+', 20]\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      // Génère la consigne (texte) et la correction (texteCorr) pour les questions de type '(x+a)/(x+b)<0'                                     Type 1        //\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      if (listeTypeDeQuestions[i] === '(x+a)/(x+b)<0') {\n        // Consigne\n        texte = `$\\\\cfrac{x${ecritureAlgebrique(a)}}{x${ecritureAlgebrique(b)}}${texSymbole(signes[i])}0$`\n        // Correction\n        texteCorr = texte + '<br>'\n        texteCorr += '$\\\\bullet$ On commence par chercher les éventuelles valeurs interdites : <br>'\n        resolutionDetailleeEquation(b, true)\n        texteCorr += `Le quotient est défini sur $\\\\R ${texSymbole('\\\\')} \\\\{${-b}\\\\}$<br>`\n        texteCorr += `$\\\\bullet$ On résout l'inéquation sur $\\\\R ${texSymbole('\\\\')} \\\\{${-b}\\\\}$<br>`\n        // Si une correction détaillée est demandée, détaille comment résoudre les équations\n        // Première équation\n        if (this.correctionDetaillee) {\n          resolutionDetailleeEquation(a)\n        }\n        texteCorr += `$x${ecritureAlgebrique(a)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('>')}${-a}$ <br>`\n        // Deuxième équation\n        if (this.correctionDetaillee) {\n          resolutionDetailleeEquation(b)\n        }\n        texteCorr += `$x${ecritureAlgebrique(b)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('>')}${-b}$ <br>`\n        // Prépare l'affichage du tableau\n        texteCorr += 'On peut donc en déduire le tableau de signes suivant : <br>'\n        if (Math.min(-a, -b) === -a) { // Si la plus petite solution est celle de la première équation (au numérateur), la première ligne change de signe en premier\n          ligne1 = ligneMPP\n          ligne2 = ligneMMP\n          ligne3 = ['Line', 50, '', 0, '+', 20, 'z', 20, '-', 20, 'd', 20, '+', 20] // Le dénominateur change de signe en deuxième donc la double barre (, 'd', 20) intervient en deuxième\n        } else { // Sinon, la deuxième ligne change de signe en premier\n          ligne1 = ligneMMP\n          ligne2 = ligneMPP\n          ligne3 = ['Line', 50, '', 0, '+', 20, 'd', 20, '-', 20, 'z', 20, '+', 20] // Le dénominateur change de signe en premier donc la double barre (, 'd', 20) intervient en premier\n        }\n        // Affichage du tableau de signes\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -10.1, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              ['$x$', 2, 30], [`$x${ecritureAlgebrique(a)}$`, 2, 50], [`$x${ecritureAlgebrique(b)}$`, 2, 50], [`$\\\\cfrac{x${ecritureAlgebrique(a)}}{x${ecritureAlgebrique(b)}}$`, ecart, 50]\n            ],\n            ['$-\\\\infty$', 30, `$${Math.min(-a, -b)}$`, 20, `$${Math.max(-a, -b)}$`, 20, '$+\\\\infty$', 30]\n          ],\n          tabLines: [ligne1, ligne2, ligne3],\n          colorBackground: '',\n          espcl: 3.5,\n          deltacl: 0.8,\n          lgt: 8,\n          hauteurLignes: [15, 15, 15, 25]\n        }))\n        // Affiche l'ensemble de solutions selon le sens de l'inégalité et selon l'ordre des racines (l'intervalle sera toujours ouvert pour la racine du dénominateur)\n        if (Math.min(-a, -b) === -a) {\n          if ((signes[i] === '<' || signes[i] === '≤')) {\n            texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left${pGauche} ${-a} , ${-b} \\\\right[ $.`\n          } else if ((signes[i] === '>' || signes[i] === '≥')) {\n            texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${-a} \\\\right${pDroite} \\\\bigcup \\\\left] ${-b}, +\\\\infty \\\\right[ $.`\n          }\n        } else {\n          if ((signes[i] === '<' || signes[i] === '≤')) {\n            texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] ${-b} , ${-a} \\\\right${pDroite} $.`\n          } else if ((signes[i] === '>' || signes[i] === '≥')) {\n            texteCorr += `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty , ${-b} \\\\right[ \\\\bigcup \\\\left${pGauche} ${-a}, +\\\\infty \\\\right[ $.`\n          }\n        }\n      }\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      // Génère la consigne (texte) et la correction (texteCorr) pour les questions de type '(ax+b)/(cx+d)<0'                                   Type 2        //\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      if (listeTypeDeQuestions[i] === '(ax+b)/(cx+d)<0') {\n        let valPetit, valGrand\n        texte = `$\\\\cfrac{${a}x${ecritureAlgebrique(b)}}{${c}x${ecritureAlgebrique(d)}}${texSymbole(signes[i])}0$`\n        // Correction\n        texteCorr = texte + '<br>'\n        texteCorr += '$\\\\bullet$ On commence par chercher les éventuelles valeurs interdites :'\n        ecrireCorrectionDetaillee(c, d, true)\n        texteCorr += `<br>Le quotient est défini sur $\\\\R ${texSymbole('\\\\')} \\\\{${texFractionReduite(-d, c)}\\\\}$`\n        texteCorr += `<br>$\\\\bullet$ On résout l'inéquation sur $\\\\R ${texSymbole('\\\\')} \\\\{${texFractionReduite(-d, c)}\\\\}$`\n        // Si une correction détaillée est demandée, détaille comment résoudre les équations\n        if (this.correctionDetaillee) {\n          // Utilise la fonction décrite plus haut pour éviter d'écrire deux fois la même chose pour les deux inéquations ax + b > 0 et cx + d > 0\n          ecrireCorrectionDetaillee(a, b)\n          ecrireCorrectionDetaillee(c, d)\n        } else { // Si pas de correction détaillée, écrit simplement les conclusions, en changeant le sens des inégalités si a < 0 ou si c < 0\n          if (a < 0) {\n            texteCorr += `<br>$${a}x${ecritureAlgebrique(b)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('<')} ${texFractionReduite(-b, a)}$`\n          } else {\n            texteCorr += `<br>$${a}x${ecritureAlgebrique(b)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('>')} ${texFractionReduite(-b, a)}$`\n          }\n          if (c < 0) {\n            texteCorr += `<br>$${c}x${ecritureAlgebrique(d)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('<')} ${texFractionReduite(-d, c)}$`\n          } else {\n            texteCorr += `<br>$${c}x${ecritureAlgebrique(d)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('>')} ${texFractionReduite(-d, c)}$`\n          }\n        }\n        // Prépare l'affichage du tableau de signes\n        texteCorr += '<br>On peut donc en déduire le tableau de signes suivant : <br>'\n        if (-b / a < -d / c) { // Si la plus petite solution est celle de la première équation\n          if (a > 0) { // La ligne1 change de signe en premier donc ligne1 = PMM ou MPP selon le signe de a\n            ligne1 = ligneMPP\n          } else {\n            ligne1 = lignePMM\n          }\n          if (c > 0) { // La ligne 2 change de signe en deuxième donc ligne2 = PPM ou MMP selon le signe de c\n            ligne2 = ligneMMP\n          } else {\n            ligne2 = lignePPM\n          }\n          valPetit = texFractionReduite(-b, a) // la plus petite valeur est la solution de la première équation\n          valGrand = texFractionReduite(-d, c) // la plus grande valeur est la solution de la deuxième équation\n        } else { // Si la plus petite solution est celle de la deuxième équation\n          if (a > 0) { // La ligne1 change de signe en deuxième donc ligne1 = PPM ou MMP selon le signe de a\n            ligne1 = ligneMMP\n          } else {\n            ligne1 = lignePPM\n          }\n          if (c > 0) { // La ligne 2 change de signe en premier donc ligne2 = PMM ou MPP selon le signe de c\n            ligne2 = ligneMPP\n          } else {\n            ligne2 = lignePMM\n          }\n          valPetit = texFractionReduite(-d, c) // la plus petite valeur est la solution de la deuxième équation\n          valGrand = texFractionReduite(-b, a) // la plus grande valeur est la solution de la première équation\n        }\n        // Détermine la dernière ligne selon le signe du coefficient dominant\n        if (-b / a < -d / c) { // Si la valeur interdite est la deuxième (z au lieu de d)\n          if (a * c > 0) {\n            ligne3 = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'd', 20, '+', 20]\n          } else {\n            ligne3 = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'd', 20, '-', 20]\n          }\n        } else { // Sinon, la valeur interdite est la première\n          if (a * c > 0) {\n            ligne3 = ['Line', 30, '', 0, '+', 20, 'd', 20, '-', 20, 'z', 20, '+', 20]\n          } else {\n            ligne3 = ['Line', 30, '', 0, '-', 20, 'd', 20, '+', 20, 'z', 20, '-', 20]\n          }\n        }\n        // Affiche enfin le tableau\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -10.6, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              ['$x$', 2.5, 30], [`$${a}x${ecritureAlgebrique(b)}$`, 2, 75], [`$${c}x${ecritureAlgebrique(d)}$`, 2, 75], [`$(${a}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})$`, ecart, 200]\n            ],\n            ['$-\\\\infty$', 30, `$${valPetit}$`, 20, `$${valGrand}$`, 20, '$+\\\\infty$', 30]\n          ],\n          tabLines: [ligne1, ligne2, ligne3],\n          colorBackground: '',\n          espcl: 3.5,\n          deltacl: 0.8,\n          lgt: 10,\n          hauteurLignes: [15, 15, 15, 25]\n        }))\n        // Affiche l'ensemble de solutions selon le sens de l'inégalité\n        let interieur, exterieur\n        if (-b / a < -d / c) { // Si la valeur interdite est la deuxième (intervale forcément ouvert avec valGrand)\n          interieur = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left${pGauche} ${valPetit} , ${valGrand} \\\\right[ $.`\n          exterieur = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg] -\\\\infty , ${valPetit} \\\\bigg${pDroite} \\\\bigcup \\\\bigg] ${valGrand}, +\\\\infty \\\\bigg[ $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n        } else { // Si la valeur interdite est la première (invervalle forcément ouvert avec valPetit)\n          interieur = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] ${valPetit} , ${valGrand} \\\\right${pDroite} $.`\n          exterieur = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg] -\\\\infty , ${valPetit} \\\\bigg[ \\\\bigcup \\\\bigg${pGauche} ${valGrand}, +\\\\infty \\\\bigg[ $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n        }\n        if ((signes[i] === '<' || signes[i] === '≤')) {\n          if (a * c > 0) {\n            texteCorr += interieur\n          } else {\n            texteCorr += exterieur\n          }\n        } else if ((signes[i] === '>' || signes[i] === '≥')) {\n          if (a * c > 0) {\n            texteCorr += exterieur\n          } else {\n            texteCorr += interieur\n          }\n        }\n      }\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      // Génère la consigne (texte) et la correction (texteCorr) pour les questions de type '(ax+b)/[(cx+d)(ex+f)]<0'                                 Type 3  //\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      if (listeTypeDeQuestions[i] === '(ax+b)/[(cx+d)(ex+f)]<0') {\n        let valPetit, valMoyen, valGrand\n        texte = `$\\\\cfrac{${a}x${ecritureAlgebrique(b)}}{(${c}x${ecritureAlgebrique(d)})(${e}x${ecritureAlgebrique(f)})}${texSymbole(signes[i])}0$`\n        // Correction\n        texteCorr = texte + '<br>'\n        texteCorr += '$\\\\bullet$ On commence par chercher les éventuelles valeurs interdites :'\n        texteCorr += `<br>$(${c}x${ecritureAlgebrique(d)})(${e}x${ecritureAlgebrique(f)})=0$ si et seulement si $${c}x${ecritureAlgebrique(d)} = 0$ ou $${e}x${ecritureAlgebrique(f)} = 0$`\n        ecrireCorrectionDetaillee(c, d, true)\n        ecrireCorrectionDetaillee(e, f, true)\n        texteCorr += `<br>Le quotient est défini sur $\\\\R ${texSymbole('\\\\')} \\\\{${texFractionReduite(-d, c)}; ${texFractionReduite(-f, e)}\\\\}$`\n        texteCorr += `<br>$\\\\bullet$ On résout l'inéquation sur $\\\\R ${texSymbole('\\\\')} \\\\{${texFractionReduite(-d, c)}; ${texFractionReduite(-f, e)}\\\\}$`\n        // Si une correction détaillée est demandée, détaille comment résoudre les inéquations\n        if (this.correctionDetaillee) {\n          // Utilise la fonction décrite plus haut pour éviter d'écrire deux fois la même chose pour les deux inéquations ax + b > 0 et cx + d > 0\n          ecrireCorrectionDetaillee(a, b)\n          ecrireCorrectionDetaillee(c, d)\n          ecrireCorrectionDetaillee(e, f)\n        } else { // Si pas de correction détaillée, écrit simplement les conclusions, en changeant le sens des inégalités si a < 0 ou si c < 0\n          if (a < 0) {\n            texteCorr += `<br>$${a}x${ecritureAlgebrique(b)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('<')} ${texFractionReduite(-b, a)}$`\n          } else {\n            texteCorr += `<br>$${a}x${ecritureAlgebrique(b)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('>')} ${texFractionReduite(-b, a)}$`\n          }\n          if (c < 0) {\n            texteCorr += `<br>$${c}x${ecritureAlgebrique(d)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('<')} ${texFractionReduite(-d, c)}$`\n          } else {\n            texteCorr += `<br>$${c}x${ecritureAlgebrique(d)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('>')} ${texFractionReduite(-d, c)}$`\n          }\n          if (e < 0) {\n            texteCorr += `<br>$${e}x${ecritureAlgebrique(f)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('<')} ${texFractionReduite(-f, e)}$`\n          } else {\n            texteCorr += `<br>$${e}x${ecritureAlgebrique(f)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('>')} ${texFractionReduite(-f, e)}$`\n          }\n        }\n        // Prépare l'affichage du tableau de signes\n        texteCorr += '<br>On peut donc en déduire le tableau de signes suivant : <br>'\n        // zero1 correspond au 0 (z) ou à la double barres (d) correspondant au premier antécédent de la dernière ligne\n        let zero1 = 'z'\n        let zero2 = 'z'\n        let zero3 = 'z'\n        if (-b / a < -d / c && -b / a < -f / e) { // Si la plus petite solution est celle de la première équation\n          if (a > 0) { // La ligne1 change de signe en premier donc ligne1 = PMMM ou MPPP selon le signe de a\n            ligne1 = ligneMPPP\n          } else {\n            ligne1 = lignePMMM\n          }\n          valPetit = texFractionReduite(-b, a) // la plus petite valeur est la solution de la première équation\n          zero2 = 'd' // les valeurs interdites sont donc les antécédents 2 et 3\n          zero3 = 'd'\n          if (-d / c < -f / e) { // Si la deuxième plus petite solution est celle de la deuxième équation\n            if (c > 0) { // La ligne 2 change de signe en deuxième donc ligne2 = PPMM ou MMPP selon le signe de c\n              ligne2 = ligneMMPP\n            } else {\n              ligne2 = lignePPMM\n            }\n            if (e > 0) { // La ligne 3 change de signe en troisième donc ligne3 = PPPM ou MMMP selon le signe de e\n              ligne3 = ligneMMMP\n            } else {\n              ligne3 = lignePPPM\n            }\n            valMoyen = texFractionReduite(-d, c) // la moyenne valeur est la solution de la deuxième équation\n            valGrand = texFractionReduite(-f, e) // la plus grande valeur est la solution de la troisième équation\n          } else { // Si la deuxième plus petite solution est celle de la troisième équation\n            if (c > 0) { // La ligne 2 change de signe en troisième donc ligne2 = PPPM ou MMMP selon le signe de c\n              ligne2 = ligneMMMP\n            } else {\n              ligne2 = lignePPPM\n            }\n            if (e > 0) { // La ligne 3 change de signe en deuxième donc ligne3 = PPMM ou MMPP selon le signe de e\n              ligne3 = ligneMMPP\n            } else {\n              ligne3 = lignePPMM\n            }\n            valMoyen = texFractionReduite(-f, e) // la moyenne valeur est la solution de la troisième équation\n            valGrand = texFractionReduite(-d, c) // la plus grande valeur est la solution de la deuxième équation\n          }\n        } else if (-d / c < -b / a && -d / c < -f / e) { // Si la plus petite solution est celle de la deuxième équation\n          if (c > 0) { // La ligne2 change de signe en premier donc ligne2 = PMMM ou MPPP selon le signe de c\n            ligne2 = ligneMPPP\n          } else {\n            ligne2 = lignePMMM\n          }\n          valPetit = texFractionReduite(-d, c) // la plus petite valeur est la solution de la deuxième équation\n          zero1 = 'd' // le premier antécédent est une valeur interdite\n          if (-b / a < -f / e) { // Si la deuxième plus petite solution est celle de la première équation\n            if (a > 0) { // La ligne 1 change de signe en deuxième donc ligne1 = PPMM ou MMPP selon le signe de a\n              ligne1 = ligneMMPP\n            } else {\n              ligne1 = lignePPMM\n            }\n            if (e > 0) { // La ligne 3 change de signe en troisième donc ligne3 = PPPM ou MMMP selon le signe de e\n              ligne3 = ligneMMMP\n            } else {\n              ligne3 = lignePPPM\n            }\n            valMoyen = texFractionReduite(-b, a) // la moyenne valeur est la solution de la première équation\n            valGrand = texFractionReduite(-f, e) // la plus grande valeur est la solution de la troisième équation\n            zero3 = 'd' // le troisième antécédent est une valeur interdite\n          } else { // Si la deuxième plus petite solution est celle de la troisième équation\n            if (a > 0) { // La ligne 1 change de signe en troisième donc ligne1 = PPPM ou MMMP selon le signe de a\n              ligne1 = ligneMMMP\n            } else {\n              ligne1 = lignePPPM\n            }\n            if (e > 0) { // La ligne 3 change de signe en deuxième donc ligne3 = PPMM ou MMPP selon le signe de e\n              ligne3 = ligneMMPP\n            } else {\n              ligne3 = lignePPMM\n            }\n            valMoyen = texFractionReduite(-f, e) // la moyenne valeur est la solution de la troisième équation\n            zero2 = 'd' // le deuxième antécédent est une valeur interdite\n            valGrand = texFractionReduite(-b, a) // la plus grande valeur est la solution de la première équation\n          }\n        } else { // Si la plus petite solution est celle de la troisième équation\n          if (e > 0) { // La ligne 3 change de signe en premier donc ligne3 = PMMM ou MPPP selon le signe de e\n            ligne3 = ligneMPPP\n          } else {\n            ligne3 = lignePMMM\n          }\n          valPetit = texFractionReduite(-f, e) // la plus petite valeur est la solution de la troisième équation\n          zero1 = 'd' // le premier antécédent est une valeur interdite\n          if (-b / a < -d / c) { // Si la deuxième plus petite solution est celle de la première équation\n            if (a > 0) { // La ligne 1 change de signe en deuxième donc ligne1 = PPMM ou MMPP selon le signe de a\n              ligne1 = ligneMMPP\n            } else {\n              ligne1 = lignePPMM\n            }\n            if (c > 0) { // La ligne 2 change de signe en troisième donc ligne2 = PPPM ou MMMP selon le signe de c\n              ligne2 = ligneMMMP\n            } else {\n              ligne2 = lignePPPM\n            }\n            valMoyen = texFractionReduite(-b, a) // la moyenne valeur est la solution de la première équation\n            valGrand = texFractionReduite(-d, c) // la plus grande valeur est la solution de la deuxième équation\n            zero3 = 'd' // le troisième antécédent est une valeur interdite\n          } else { // Si la deuxième plus petite solution est celle de la première équation\n            if (a > 0) { // La ligne 1 change de signe en troisième donc ligne1 = PPPM ou MMMP selon le signe de a\n              ligne1 = ligneMMMP\n            } else {\n              ligne1 = lignePPPM\n            }\n            if (c > 0) { // La ligne 2 change de signe en deuxième donc ligne2 = PPMM ou MMPP selon le signe de c\n              ligne2 = ligneMMPP\n            } else {\n              ligne2 = lignePPMM\n            }\n            valMoyen = texFractionReduite(-d, c) // la moyenne valeur est la solution de la deuxième équation\n            zero2 = 'd' // le deuxième antécédent est une valeur interdite\n            valGrand = texFractionReduite(-b, a) // la plus grande valeur est la solution de la première équation\n          }\n        }\n        // Détermine la dernière ligne selon le signe du coefficient dominant\n        if (a * c * e > 0) {\n          ligne4 = ['Line', 30, '', 0, '-', 20, zero1, 20, '+', 20, zero2, 20, '-', 20, zero3, 20, '+', 20]\n        } else {\n          ligne4 = ['Line', 30, '', 0, '+', 20, zero1, 20, '-', 20, zero2, 20, '+', 20, zero3, 20, '-', 20]\n        }\n        // Affiche enfin le tableau\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -12.6, xmax: 40, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              ['$x$', 2.5, 30], [`$${a}x${ecritureAlgebrique(b)}$`, 2, 75], [`$${c}x${ecritureAlgebrique(d)}$`, 2, 75], [`$${e}x${ecritureAlgebrique(f)}$`, 2, 75], [`$\\\\cfrac{${a}x${ecritureAlgebrique(b)}}{(${c}x${ecritureAlgebrique(d)})(${e}x${ecritureAlgebrique(f)}}$`, ecart, 200]\n            ],\n            ['$-\\\\infty$', 30, `$${valPetit}$`, 20, `$${valMoyen}$`, 20, `$${valGrand}$`, 20, '$+\\\\infty$', 30]\n          ],\n          tabLines: [ligne1, ligne2, ligne3, ligne4],\n          colorBackground: '',\n          espcl: 3.5,\n          deltacl: 0.8,\n          lgt: 10,\n          hauteurLignes: [15, 15, 15, 15, 25]\n        }))\n        let solutions1et3\n        let solutions2et4\n        if (zero1 === 'z') { // Si le \"vrai zéro\" est en première position (les double barres en position 2 et 3), les crochets seront ouverts en valMoyen et valGrand\n          solutions1et3 = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg] -\\\\infty , ${valPetit} \\\\bigg${pDroite} \\\\bigcup \\\\bigg] ${valMoyen}, ${valGrand} \\\\bigg[ $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n          solutions2et4 = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg${pGauche} ${valPetit} , ${valMoyen} \\\\bigg[ \\\\bigcup \\\\bigg] ${valGrand}, +\\\\infty \\\\bigg[ $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n        } else if (zero2 === 'z') { // Si le \"vrai zéro\" est en deuxième position, les crochets seront ouverts en valPetit et valGrand\n          solutions1et3 = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg] -\\\\infty , ${valPetit} \\\\bigg[ \\\\bigcup \\\\bigg${pGauche} ${valMoyen}, ${valGrand} \\\\bigg[ $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n          solutions2et4 = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg] ${valPetit} , ${valMoyen} \\\\bigg${pDroite} \\\\bigcup \\\\bigg] ${valGrand}, +\\\\infty \\\\bigg[ $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n        } else if (zero3 === 'z') { // Si le \"vrai zéro\" est en troisième position, les crochets seront ouverts en valPetit et valMoyen\n          solutions1et3 = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg] -\\\\infty , ${valPetit} \\\\bigg[ \\\\bigcup \\\\bigg] ${valMoyen}, ${valGrand} \\\\bigg${pDroite} $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n          solutions2et4 = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg] ${valPetit} , ${valMoyen} \\\\bigg[ \\\\bigcup \\\\bigg${pGauche} ${valGrand}, +\\\\infty \\\\bigg[ $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n        }\n        // Affiche l'ensemble de solutions selon le sens de l'inégalité\n        if ((signes[i] === '<' || signes[i] === '≤')) {\n          if (a * c * e > 0) {\n            texteCorr += solutions1et3\n          } else {\n            texteCorr += solutions2et4\n          }\n        } else if ((signes[i] === '>' || signes[i] === '≥')) {\n          if (a * c * e > 0) {\n            texteCorr += solutions2et4\n          } else {\n            texteCorr += solutions1et3\n          }\n        }\n      }\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      // Génère la consigne (texte) et la correction (texteCorr) pour les questions de type '(ax+b)/(cx+d)²<0'                                  Type 4        //\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      if (listeTypeDeQuestions[i] === '(ax+b)/(cx+d)²<0') {\n        let valPetit, valGrand\n        texte = `$\\\\cfrac{${a}x${ecritureAlgebrique(b)}}{(${c}x${ecritureAlgebrique(d)})^2}${texSymbole(signes[i])}0$`\n        // Correction\n        texteCorr = texte + '<br>'\n        texteCorr += '$\\\\bullet$ On commence par chercher les éventuelles valeurs interdites :'\n        texteCorr += `<br>$(${c}x${ecritureAlgebrique(d)})^2 = 0$ si et seulement si $${c}x${ecritureAlgebrique(d)} = 0$`\n        ecrireCorrectionDetaillee(c, d, true)\n        texteCorr += `<br>Le quotient est défini sur $\\\\R ${texSymbole('\\\\')} \\\\{${texFractionReduite(-d, c)}\\\\}$`\n        texteCorr += `<br>$\\\\bullet$ On résout l'inéquation sur $\\\\R ${texSymbole('\\\\')} \\\\{${texFractionReduite(-d, c)}\\\\}$`\n        // Si une correction détaillée est demandée, détaille comment résoudre les équations\n        if (this.correctionDetaillee) {\n          // Utilise la fonction décrite plus haut pour écrire la résolution détaillée de ax + b = 0 cx + d > 0\n          ecrireCorrectionDetaillee(a, b)\n          texteCorr += `<br>Un carré étant toujours positif, $(${c}x${ecritureAlgebrique(d)})^2 > 0$ pour tout $x$ différent de $${texFractionReduite(-d, c)}$.`\n        } else { // Si pas de correction détaillée, écrit simplement les conclusions, en changeant le sens des inégalités si a < 0 ou si c < 0\n          if (c < 0) {\n            texteCorr += `<br>$${a}x${ecritureAlgebrique(b)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('<')} ${texFractionReduite(-b, a)}$`\n          } else {\n            texteCorr += `<br>$${a}x${ecritureAlgebrique(b)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('>')} ${texFractionReduite(-b, a)}$`\n          }\n          texteCorr += `<br>Un carré étant toujours positif, $(${c}x${ecritureAlgebrique(d)})^2 > 0$ pour tout $x$ différent de $${texFractionReduite(-d, c)}$.`\n        }\n        // Prépare l'affichage du tableau de signes\n        texteCorr += '<br>On peut donc en déduire le tableau de signes suivant : <br>'\n        if (-d / c < -b / a) { // Si la première racine est la racine double\n          ligne2 = ['Line', 30, '', 0, '+', 20, 'z', 20, '+', 20, 't', 20, '+', 20]\n          valPetit = texFractionReduite(-d, c) // la plus petite valeur est la solution de la première équation\n          valGrand = texFractionReduite(-b, a) // la plus grande valeur est la solution de la deuxième équation\n          if (a > 0) {\n            ligne1 = ['Line', 30, '', 0, '-', 20, 't', 20, '-', 20, 'z', 20, '+', 20]\n            ligne3 = ['Line', 30, '', 0, '-', 20, 'd', 20, '-', 20, 'z', 20, '+', 20]\n          } else {\n            ligne1 = ['Line', 30, '', 0, '+', 20, 't', 20, '+', 20, 'z', 20, '-', 20]\n            ligne3 = ['Line', 30, '', 0, '+', 20, 'd', 20, '+', 20, 'z', 20, '-', 20]\n          }\n        } else { // Si la racine double est la deuxième\n          ligne2 = ['Line', 30, '', 0, '+', 20, 't', 20, '+', 20, 'z', 20, '+', 20]\n          valPetit = texFractionReduite(-b, a) // la plus petite valeur est la solution de la deuxième équation\n          valGrand = texFractionReduite(-d, c) // la plus grande valeur est la solution de la première équation\n          if (a > 0) {\n            ligne1 = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 't', 20, '+', 20]\n            ligne3 = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'd', 20, '+', 20]\n          } else {\n            ligne1 = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 't', 20, '-', 20]\n            ligne3 = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'd', 20, '-', 20]\n          }\n        }\n        // Affiche le tableau\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -10.6, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              ['$x$', 2.5, 30], [`$${a}x${ecritureAlgebrique(b)}$`, 2, 75], [`$(${c}x${ecritureAlgebrique(d)})^2$`, 2, 75], [`$\\\\cfrac{${a}x${ecritureAlgebrique(b)}}{(${c}x${ecritureAlgebrique(d)})^2}$`, ecart, 200]\n            ],\n            ['$-\\\\infty$', 30, `$${valPetit}$`, 20, `$${valGrand}$`, 20, '$+\\\\infty$', 30]\n          ],\n          tabLines: [ligne1, ligne2, ligne3],\n          colorBackground: '',\n          espcl: 3.5,\n          deltacl: 0.8,\n          lgt: 10,\n          hauteurLignes: [15, 15, 15, 25]\n        }))\n        // Affiche l'ensemble de solutions selon le sens de l'inégalité\n        let gauche\n        let droite\n        if (-d / c < -b / a) { // Si la première racine est la valeur interdite, on la prive à gauche\n          gauche = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty, ${texFractionReduite(-b, a)} \\\\right${pDroite} \\\\backslash \\\\{${texFractionReduite(-d, c)}\\\\} $.`\n          droite = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left${pGauche} ${texFractionReduite(-b, a)}, +\\\\infty \\\\right[ $.`\n        } else { // Sinon, on la prive à droite\n          gauche = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] -\\\\infty, ${texFractionReduite(-b, a)} \\\\right${pDroite} $.`\n          droite = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left${pGauche} ${texFractionReduite(-b, a)}, +\\\\infty \\\\right[ \\\\backslash \\\\{${texFractionReduite(-d, c)}\\\\} $.`\n        }\n        if ((signes[i] === '<' || signes[i] === '≤')) {\n          if (c > 0) {\n            texteCorr += gauche\n          } else {\n            texteCorr += droite\n          }\n        } else if ((signes[i] === '>' || signes[i] === '≥')) {\n          if (a * c > 0) {\n            texteCorr += droite\n          } else {\n            texteCorr += gauche\n          }\n        }\n      }\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      // Génère la consigne (texte) et la correction (texteCorr) pour les questions de type '(ax+b)/(cx+d)+e<0'                                 Type 5        //\n      // ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n      if (listeTypeDeQuestions[i] === '(ax+b)/(cx+d)+e<0') {\n        let valPetit, valGrand\n        texte = `$\\\\cfrac{${a}x${ecritureAlgebrique(b)}}{${c}x${ecritureAlgebrique(d)}}${ecritureAlgebrique(e)} ${texSymbole(signes[i])}0$`\n        // Correction\n        texteCorr = texte + '<br>'\n        texteCorr += '$\\\\bullet$ On commence par chercher les éventuelles valeurs interdites :'\n        ecrireCorrectionDetaillee(c, d, true)\n        texteCorr += `<br>Le quotient est défini sur $\\\\R ${texSymbole('\\\\')} \\\\{${texFractionReduite(-d, c)}\\\\}$`\n        texteCorr += `<br>$\\\\bullet$ On résout l'inéquation sur $\\\\R ${texSymbole('\\\\')} \\\\{${texFractionReduite(-d, c)}\\\\}$`\n        // Si une correction détaillée est demandée, détaille comment résoudre les équations\n        if (this.correctionDetaillee) {\n          texteCorr += `<br> $\\\\begin{aligned}\n          \\\\cfrac{${a}x${ecritureAlgebrique(b)}}{${c}x${ecritureAlgebrique(d)}} ${ecritureAlgebrique(e)} &= \\\\cfrac{${a}x${ecritureAlgebrique(b)}}{${c}x${ecritureAlgebrique(d)}} ${ecritureAlgebrique(e)} \\\\times \\\\cfrac{${c}x${ecritureAlgebrique(d)}}{${c}x${ecritureAlgebrique(d)}} \\\\\\\\\n          &= \\\\cfrac{${a}x${ecritureAlgebrique(b)}}{${c}x${ecritureAlgebrique(d)}} + \\\\cfrac{${e * c}x${ecritureAlgebrique(e * d)}}{${c}x${ecritureAlgebrique(d)}} \\\\\\\\\n          &= \\\\cfrac{${a}x${ecritureAlgebrique(b)} ${ecritureAlgebrique(e * c)}x${ecritureAlgebrique(e * d)}}{${c}x${ecritureAlgebrique(d)}} \\\\\\\\\n          &= \\\\cfrac{${a + e * c}x${ecritureAlgebrique(b + e * d)}}{${c}x${ecritureAlgebrique(d)}}\n          \\\\end{aligned}$`\n          // Utilise la fonction décrite plus haut pour éviter d'écrire deux fois la même chose pour les deux inéquations ax + b > 0 et cx + d > 0\n          ecrireCorrectionDetaillee(a + e * c, b + e * d)\n          ecrireCorrectionDetaillee(c, d)\n        } else { // Si pas de correction détaillée, écrit simplement les conclusions, en changeant le sens des inégalités si a < 0 ou si c < 0\n          texteCorr += `<br> $\\\\cfrac{${a}x${ecritureAlgebrique(b)}}{${c}x${ecritureAlgebrique(d)}} ${ecritureAlgebrique(e)} = \\\\cfrac{${a + e * c}x${ecritureAlgebrique(b + e * d)}}{${c}x${ecritureAlgebrique(d)}}$`\n          if (a + e * c < 0) {\n            texteCorr += `<br>$${a + e * c}x${ecritureAlgebrique(b + e * d)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('<')} ${texFractionReduite(-(b + e * d), a + e * c)}$`\n          } else {\n            texteCorr += `<br>$${a + e * c}x${ecritureAlgebrique(b + e * d)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('>')} ${texFractionReduite(-(b + e * d), a + e * c)}$`\n          }\n          if (c < 0) {\n            texteCorr += `<br>$${c}x${ecritureAlgebrique(d)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('<')} ${texFractionReduite(-d, c)}$`\n          } else {\n            texteCorr += `<br>$${c}x${ecritureAlgebrique(d)}${texSymbole('>')}0$ si et seulement si $x${texSymbole('>')} ${texFractionReduite(-d, c)}$`\n          }\n        }\n        // Prépare l'affichage du tableau de signes\n        texteCorr += '<br>On peut donc en déduire le tableau de signes suivant : <br>'\n        if (-(b + e * d) / (a + e * c) < -d / c) { // Si la plus petite solution est celle de la première équation\n          if (a + e * c > 0) { // La ligne1 change de signe en premier donc ligne1 = PMM ou MPP selon le signe de a\n            ligne1 = ligneMPP\n          } else {\n            ligne1 = lignePMM\n          }\n          if (c > 0) { // La ligne 2 change de signe en deuxième donc ligne2 = PPM ou MMP selon le signe de c\n            ligne2 = ligneMMP\n          } else {\n            ligne2 = lignePPM\n          }\n          valPetit = texFractionReduite(-(b + e * d), a + e * c) // la plus petite valeur est la solution de la première équation\n          valGrand = texFractionReduite(-d, c) // la plus grande valeur est la solution de la deuxième équation\n        } else { // Si la plus petite solution est celle de la deuxième équation\n          if (a + e * c > 0) { // La ligne1 change de signe en deuxième donc ligne1 = PPM ou MMP selon le signe de a\n            ligne1 = ligneMMP\n          } else {\n            ligne1 = lignePPM\n          }\n          if (c > 0) { // La ligne 2 change de signe en premier donc ligne2 = PMM ou MPP selon le signe de c\n            ligne2 = ligneMPP\n          } else {\n            ligne2 = lignePMM\n          }\n          valPetit = texFractionReduite(-d, c) // la plus petite valeur est la solution de la deuxième équation\n          valGrand = texFractionReduite(-(b + e * d), a + e * c) // la plus grande valeur est la solution de la première équation\n        }\n        // Détermine la dernière ligne selon le signe du coefficient dominant\n        if (-(b + e * d) / (a + e * c) < -d / c) { // Si la valeur interdite est la deuxième (z au lieu de d)\n          if ((a + e * c) * c > 0) {\n            ligne3 = ['Line', 30, '', 0, '+', 20, 'z', 20, '-', 20, 'd', 20, '+', 20]\n          } else {\n            ligne3 = ['Line', 30, '', 0, '-', 20, 'z', 20, '+', 20, 'd', 20, '-', 20]\n          }\n        } else { // Sinon, la valeur interdite est la première\n          if ((a + e * c) * c > 0) {\n            ligne3 = ['Line', 30, '', 0, '+', 20, 'd', 20, '-', 20, 'z', 20, '+', 20]\n          } else {\n            ligne3 = ['Line', 30, '', 0, '-', 20, 'd', 20, '+', 20, 'z', 20, '-', 20]\n          }\n        }\n        // Affiche enfin le tableau\n        texteCorr += mathalea2d({ xmin: -0.5, ymin: -10.6, xmax: 30, ymax: 0.1, scale: 0.5 }, tableauDeVariation({\n          tabInit: [\n            [\n              ['$x$', 2.5, 30], [`$${a + e * c}x${ecritureAlgebrique(b + e * d)}$`, 2, 75], [`$${c}x${ecritureAlgebrique(d)}$`, 2, 75], [`$(${a + e * c}x${ecritureAlgebrique(b + e * d)})(${c}x${ecritureAlgebrique(d)})$`, ecart, 200]\n            ],\n            ['$-\\\\infty$', 30, `$${valPetit}$`, 20, `$${valGrand}$`, 20, '$+\\\\infty$', 30]\n          ],\n          tabLines: [ligne1, ligne2, ligne3],\n          colorBackground: '',\n          espcl: 3.5,\n          deltacl: 0.8,\n          lgt: 10,\n          hauteurLignes: [15, 15, 15, 25]\n        }))\n        // Affiche l'ensemble de solutions selon le sens de l'inégalité\n        let interieur, exterieur\n        if (-(b + e * d) / (a + e * c) < -d / c) { // Si la valeur interdite est la deuxième (intervale forcément ouvert avec valGrand)\n          interieur = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left${pGauche} ${valPetit} , ${valGrand} \\\\right[ $.`\n          exterieur = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg] -\\\\infty , ${valPetit} \\\\bigg${pDroite} \\\\bigcup \\\\bigg] ${valGrand}, +\\\\infty \\\\bigg[ $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n        } else { // Si la valeur interdite est la première (invervalle forcément ouvert avec valPetit)\n          interieur = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\left] ${valPetit} , ${valGrand} \\\\right${pDroite} $.`\n          exterieur = `<br> L'ensemble de solutions de l'inéquation est $S = \\\\bigg] -\\\\infty , ${valPetit} \\\\bigg[ \\\\bigcup \\\\bigg${pGauche} ${valGrand}, +\\\\infty \\\\bigg[ $.` // \\\\bigg au lieu de \\\\left et \\\\right pour que les parenthèses soient les mêmes des deux côtés s'il y a une fraction d'un côté et pas de l'autre\n        }\n        if ((signes[i] === '<' || signes[i] === '≤')) {\n          if ((a + e * c) * c > 0) {\n            texteCorr += interieur\n          } else {\n            texteCorr += exterieur\n          }\n        } else if ((signes[i] === '>' || signes[i] === '≥')) {\n          if ((a + e * c) * c > 0) {\n            texteCorr += exterieur\n          } else {\n            texteCorr += interieur\n          }\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // Choisit le type de question à l'aide d'un formulaire numérique (la réponse sera stockée dans this.sup)\n  this.besoinFormulaireNumerique = [\n    \"Type d'inéquation\",\n    5,\n    '1: (x+a)/(x+b)<0\\n2: (ax+b)/(cx+d)<0\\n3: (ax+b)/[(cx+d)(ex+f)]<0\\n4: (ax+b)/(cx+d)²<0\\n5: (ax+b)/(cx+d)+e<0\\n6: Tous les types précédents'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ExerciceInequationQuotient","Exercice","this","spacing","spacingCorr","correctionDetailleeDisponible","correctionDetaillee","sup","nbQuestions","toString","consigne","listePackages","nbCols","nbColsCorr","nouvelleVersion","listeTypeDeQuestions","listeQuestions","listeCorrections","combinaisonListes","signes","a","b","c","d","e","f","pGauche","pDroite","texte","ligne1","ligne2","ligne3","ligne4","ecart","texteCorr","i","cpt","randint","context","resolutionDetailleeEquation","val","egal","symbole","texSymbole","ecritureAlgebrique","miseEnEvidence","ecrireCorrectionDetaillee","var1","var2","symbolePlusGrand","symbolePlusPetit","ecritureParentheseSiNegatif","texFraction","texFractionReduite","lignePPM","lignePMM","ligneMPP","ligneMMP","lignePPPM","lignePPMM","lignePMMM","ligneMPPP","ligneMMPP","ligneMMMP","Math","min","mathalea2d","xmin","ymin","xmax","ymax","scale","tableauDeVariation","tabInit","max","tabLines","colorBackground","espcl","deltacl","lgt","hauteurLignes","valPetit","valGrand","interieur","exterieur","valMoyen","solutions1et3","solutions2et4","zero1","zero2","zero3","gauche","droite","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined"],"sourceRoot":""}