{"version":3,"file":"js/14286.9c585b29318445ec74fb.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F21-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { ecritureAlgebrique, listeQuestionsToContenu, calcul, randint, rienSi1, texNombre } from '../../modules/outils.js'\nimport { mathalea2d, repere2, courbe2, cercle, point, segment, milieu, texteParPoint, droite } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { context } from '../../modules/context.js'\nexport const titre = \"Lire graphiquement les caractérisitiques de la courbe représentative d'une fonction affine\"\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Lire la pente et l'ordonnée à l'origine d'une droite pour en déduire la forme algébrique de la fonction affine\n * @author Rémi Angot\n * Référence\n*/\nexport default function PenteEtOrdonneeOrigineDroite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = ''\n  this.nbQuestionsModifiable = false\n  // this.nbQuestions = 10\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  // this.sup = 1; // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const num = randint(-5, 5, 0)\n    const den = randint(1, 2)\n    const a = calcul(num / den)\n    const b = randint(-4, 4, 0)\n    let xMin\n    context.isHtml ? xMin = -10 : xMin = -8\n    const xMax = -xMin\n    const yMin = xMin\n    const yMax = -yMin\n\n    const r = repere2({ xMin, yMin, xMax, yMax })\n    const f = x => a * x + b\n\n    const d = droite(a, -1, b)\n    d.color = 'blue'\n    d.epaisseur = 2\n    const c = cercle(point(0, b), 0.8)\n    c.color = '#f15929'\n    c.epaisseur = 2\n    let x0 = -7\n    while (!Number.isInteger(f(x0)) || f(x0) <= yMin || f(x0) >= yMax || x0 === -2 || x0 === -1 || x0 === 0) {\n      x0 += 1\n    }\n    const A = point(x0, f(x0))\n    const B = point(x0 + 1, f(x0))\n    const C = point(x0 + 1, f(x0 + 1))\n    const s1 = segment(A, B)\n    const s2 = segment(B, C)\n    const M1 = milieu(A, B)\n    const M2 = milieu(B, C)\n    const t1 = texteParPoint('1', point(M1.x, M1.y + (a > 0 ? -0.4 : 0.4)))\n    const t2 = texteParPoint(texNombre(a), point(M2.x + 0.6, M2.y))\n    t1.color = '#f15929'\n    t2.color = '#f15929'\n\n    s1.epaisseur = 3\n    s1.pointilles = true\n    s1.color = '#f15929'\n    s2.epaisseur = 3\n    s2.pointilles = true\n    s2.color = '#f15929'\n\n    this.introduction = 'On a représenté ci-dessous une fonction affine $f$.<br><br>' + mathalea2d({ xmin: xMin, xmax: xMax, ymin: yMin, ymax: yMax }, r, d)\n    this.consigneCorrection = mathalea2d({ xmin: xMin, xmax: xMax, ymin: yMin, ymax: yMax }, r, d, c, s1, s2, t1, t2)\n    let question1 = \"Quelle est l'ordonnée à l'origine de la fonction $f$ ?\"\n    question1 += ajouteChampTexteMathLive(this, 0)\n    let question2 = 'Quel est le coefficient directeur de $f$ ?'\n    question2 += ajouteChampTexteMathLive(this, 1)\n    let question3 = \"En déduire l'expression algébrique de $f$.\"\n    question3 += ajouteChampTexteMathLive(this, 2)\n\n    setReponse(this, 0, b)\n    setReponse(this, 1, [a, `\\\\frac{${num}}{${den}}`])\n    setReponse(this, 2, `${texNombre(a)}x+${b}`)\n    if (den === 2) setReponse(this, 2, [`${texNombre(a)}x+${b}`, `\\\\frac{${num}}{2}\\\\times x + ${b}`])\n\n    const correction1 = `La droite coupe l'axe des ordonnées au point de coordonnées $(0;${b})$, l'ordonnée à l'origine est donc $${b}$.`\n    let correction2 = `À chaque fois que l'on avance de 1 carreau, on ${a > 0 ? 'monte' : 'descend'} de ${texNombre(a)} ${Math.abs(a) >= 2 ? 'carreaux' : 'carreau'},`\n    correction2 += ` le coefficient directeur est donc ${texNombre(a)}.`\n    let correction3 = '$f$ étant une fonction affine, on a $f : x \\\\mapsto ax + b$ avec $a$ le coefficient directeur (ou pente) et $b$ son ordonné à l\\'origine.'\n    correction3 += `<br>Finalement, $f : x \\\\mapsto ${rienSi1(a).toString().replace('.', ',')}x ${ecritureAlgebrique(b)}$.`\n    this.listeQuestions.push(question1, question2, question3)\n    this.listeCorrections.push(correction1, correction2, correction3)\n\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 3];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","PenteEtOrdonneeOrigineDroite","Exercice","this","consigne","nbQuestionsModifiable","nbCols","nbColsCorr","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","num","randint","den","a","calcul","b","xMin","context","xMax","yMin","yMax","r","repere2","f","x","d","droite","color","epaisseur","c","cercle","point","x0","Number","isInteger","A","B","C","s1","segment","s2","M1","milieu","M2","t1","texteParPoint","y","t2","texNombre","pointilles","introduction","mathalea2d","xmin","xmax","ymin","ymax","consigneCorrection","question1","ajouteChampTexteMathLive","question2","question3","setReponse","correction1","correction2","Math","abs","correction3","rienSi1","toString","replace","ecritureAlgebrique","push","listeQuestionsToContenu","boutonAide","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}