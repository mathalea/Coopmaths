{"version":3,"file":"js/22321.ba135b50ee8d48330185.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, texNombre, modalUrl } from '../../modules/outils.js'\nexport const titre = 'Multiplier un entier par 10, 100, 1 000...'\n\n/**\n * Un nombre à 2 chiffres (non multiple de 10) + 9\n * @author Rémi Angot\n * Référence 6N12\n */\nexport default function MultiplierEntierPar101001000 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Calculer :'\n  this.nbQuestions = 8\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 2\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.boutonAide = modalUrl(numeroExercice, 'https://mathix.org/glisse-nombre/index.html',\n      'Glisse-nombre'\n    )\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4, choice([5, 6]), 7, 8, 9]\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let listeDeB = []\n    if (parseInt(this.sup) === 2) {\n      listeDeB = combinaisonListes([10, 100, 1000, 10000, 100000], this.nbQuestions)\n    } else {\n      listeDeB = combinaisonListes([10, 100, 1000], this.nbQuestions)\n    }\n    for (\n      let i = 0, texte, texteCorr, a, b, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          a = randint(1, 9)\n          break\n        case 2:\n          a = randint(2, 9) * 10\n          break\n        case 3:\n          a = randint(2, 9) * 100\n          break\n        case 4:\n          a = randint(2, 9) * 1000\n          break\n        case 5:\n          a = randint(1, 9) * 100 + randint(1, 9)\n          break\n        case 6:\n          a = randint(1, 9) * 1000 + randint(1, 9)\n          break\n        case 7:\n          a = randint(1, 9) * 100 + randint(1, 9) * 10 + randint(1, 9)\n          break\n        case 8:\n          a = randint(1, 9) * 10000 + randint(1, 9) * 100\n          break\n        case 9:\n          a = randint(1, 9) * 10 + randint(1, 9)\n          break\n      }\n\n      b = listeDeB[i]\n      if (choice([true, false])) {\n        texte = `$${texNombre(a)}\\\\times${texNombre(b)}$`\n        texteCorr = `$${texNombre(a)}\\\\times${texNombre(b)}=${texNombre(a * b)}$`\n      } else {\n        texte = `$${texNombre(b)}\\\\times${texNombre(a)}$`\n        texteCorr = `$${texNombre(b)}\\\\times${texNombre(a)}=${texNombre(a * b)}$`\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Multiplication par 10, 100 ou 1 000\\n2 : Multiplication par 10, 100, 1 000, 10 000 ou 100 000']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","MultiplierEntierPar101001000","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","numeroExercice","boutonAide","modalUrl","listeQuestions","listeCorrections","autoCorrection","typesDeQuestionsDisponibles","choice","listeTypeDeQuestions","combinaisonListes","listeDeB","parseInt","texte","texteCorr","a","b","i","cpt","randint","texNombre","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}