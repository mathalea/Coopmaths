{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6G32-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Symetrie_axiale_conservation1","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","alternance","points","traces","nom","i","push","lettreDepuisChiffre","noms","shuffle","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","texte_gras","d","nonchoisi","x","y","nomd","label_pos","axe","parseInt","coords","objets_enonce","objets_correction","randint","droite","texteParPosition","j","point","tracePoint","index","sup2","length","lenght","texte","texteCorr","s1","s2","choix","cpt","segment","texcolors","epaisseur","demiDroite","polygone","codeAngle","indexOf","isVisible","labelPoint","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1247.667648cd909b9b067b84.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenuSansNumero,randint,shuffle,combinaisonListes,lettreDepuisChiffre,texcolors,texte_gras} from '../../modules/outils.js'\nimport {point,tracePoint,labelPoint,droite,segment,demiDroite,polygone,codeAngle,texteParPosition,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Propriétés de conservation de la symétrie axiale'\n\n/**\n * Ref 6G32-1\n * Publié le 26/10/2020\n * @Auteur Jean-Claude Lhote\n */\nexport default function Symetrie_axiale_conservation1() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 4;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 1;\n\n  this.nouvelleVersion = function () {\n    let type_de_questions_disponibles = [\"Segment\", \"Droite\", \"1/2droite\", \"Triangle\", \"Angle\"];\n    let points = [], traces = [], nom = [], alternance\n    for (let i = 0; i < 25; i++) nom.push(lettreDepuisChiffre(i + 1))\n    let noms = shuffle(nom)\n\n    let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions);\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    this.listeQuestions.push(`${texte_gras('Dans la symétrie d\\'axe (d)...')}`);\n    this.listeCorrections.push(`${texte_gras('Dans la symétrie d\\'axe (d)...')}`);\n    // On prépare la figure...\n    let axe = parseInt(this.sup)\n    let d, nonchoisi, coords = [], x, y, objets_enonce = [], objets_correction = [], nomd, label_pos\n    if (axe == 5) axe = randint(1, 4) //choix de l'axe et des coordonnées\n    switch (axe) {\n      case 1: d = droite(1, 0, 0);\n        nomd = texteParPosition('(d)', 0.3, 5.6)\n        label_pos = 'above left'\n        for (let i = 0; i < 12; i++) {\n          nonchoisi = false\n          while (!nonchoisi) { // Le nouveau point est-il déjà dans la liste ?\n            [x, y] = [randint(-5, 0), randint(-5, 5)]\n            nonchoisi = true\n            for (let j = 0; j < i; j++)\n              if (coords[j][0] == x && coords[j][1] == y) nonchoisi = false\n          }\n          coords.push([x, y]) //on stocke les 12 points\n        }\n        for (let j = 0; j < 12; j++) coords.push([-coords[j][0], coords[j][1]]) // on stocke les 12 images\n        break;\n      case 2: d = droite(0, 1, 0);\n        label_pos = 'above'\n        nomd = texteParPosition('(d)', 5.6, 0.3)\n        for (let i = 0; i < 12; i++) {\n          nonchoisi = false\n          while (!nonchoisi) { // Le nouveau point est-il déjà dans la liste ?\n            [x, y] = [randint(-5, 5), randint(-5, 0)]\n            nonchoisi = true\n            for (let j = 0; j < i; j++)\n              if (coords[j][0] == x && coords[j][1] == y) nonchoisi = false\n          }\n          coords.push([x, y]) //on stocke les 12 points\n        }\n        for (let j = 0; j < 12; j++) coords.push([coords[j][0], -coords[j][1]]) // on stocke les 12 images\n        break;\n      case 3: d = droite(1, -1, 0);\n        label_pos = 'above'\n        nomd = texteParPosition('(d)', -5.8, -5.4)\n        for (let i = 0; i < 12; i++) {\n          nonchoisi = false\n          while (!nonchoisi) { // Le nouveau point est-il déjà dans la liste ?\n            x = randint(-5, 5)\n            y = randint(x, 5)\n            nonchoisi = true\n            for (let j = 0; j < i; j++)\n              if (coords[j][0] == x && coords[j][1] == y) nonchoisi = false\n          }\n          coords.push([x, y]) //on stocke les 12 points\n        }\n        for (let j = 0; j < 12; j++) coords.push([coords[j][1], coords[j][0]]) // on stocke les 12 images\n        break;\n      case 4: d = droite(1, 1, 0);\n        label_pos = 'above'\n        nomd = texteParPosition('(d)', -5.8, 5.4)\n        for (let i = 0; i < 12; i++) {\n          nonchoisi = false\n          while (!nonchoisi) { // Le nouveau point est-il déjà dans la liste ? Si oui, on recommence.\n            x = randint(-5, 5)\n            y = randint(-5, -x)\n            nonchoisi = true\n            for (let j = 0; j < i; j++)\n              if (coords[j][0] == x && coords[j][1] == y)\n                nonchoisi = false;\n          }\n          coords.push([x, y]) //on stocke les 12 points\n        }\n        for (let j = 0; j < 12; j++)\n          coords.push([-coords[j][1], -coords[j][0]]); // on stocke les 12 images\n        break;\n    }\n    for (let i = 0; i < 24; i++) {\n      if (i < 12) points.push(point(coords[i][0], coords[i][1], noms[i], label_pos))\n      else if (coords[i][0] == coords[i - 12][0] && coords[i][1] == coords[i - 12][1]) {\n        points.push(point(coords[i][0], coords[i][1], noms[i - 12], label_pos))\n        noms[i] = noms[i - 12]\n      }\n      else points.push(point(coords[i][0], coords[i][1], noms[i], label_pos))\n      traces.push(tracePoint(points[i]));\n    }\n    // On rédige les questions et les réponses\n    if (this.sup2 == true) alternance = 2\n    else alternance = 1\n    function index(i) {\n      return (i + 12 * (i % alternance)) % 24\n    }\n    objets_enonce.length = 0\n    objets_correction.lenght = 0\n    for (let i = 0, texte, texteCorr,s1,s2,choix, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\n      switch (listeTypeDeQuestions[i]) {\n        case \"Segment\":\n          choix = randint(0, 10) + randint(0, 1) * 12\n          texte = `Quel est le symétrique du segment $[${noms[index(choix)]}${noms[index(choix + 1)]}]$ ?`\n          texteCorr = `Le symétrique du segment $[${noms[index(choix)]}${noms[index(choix + 1)]}]$ est le segment $[${noms[index(choix + 12)]}${noms[index(choix + 13)]}]$.`\n          s1 = segment(points[index(choix)], points[index(choix + 1)], texcolors(i * 3 + 2))\n          s2 = segment(points[index(choix + 12)], points[index(choix + 13)], texcolors(i * 3 + 2))\n          s1.epaisseur = 2\n          s2.epaisseur = 2\n          objets_correction.push(s1, s2)\n          break;\n        case \"Droite\":\n          choix = randint(0, 10) + randint(0, 1) * 12\n          texte = `Quel est la symétrique de la droite $(${noms[index(choix)]}${noms[index(choix + 1)]})$ ?`\n          texteCorr = `La symétrique de la droite $(${noms[index(choix)]}${noms[index(choix + 1)]})$ est la droite $(${noms[index(choix + 12)]}${noms[index(choix + 13)]})$.`\n          objets_correction.push(droite(points[index(choix)], points[index(choix + 1)], \"\", texcolors(i * 3 + 2)))\n          objets_correction.push(droite(points[index(choix + 12)], points[index(choix + 13)], \"\", texcolors(i * 3 + 2)))\n          break;\n        case \"1/2droite\":\n          choix = randint(0, 10) + randint(0, 1) * 12\n          texte = `Quel est la symétrique de la demi-droite $[${noms[index(choix)]}${noms[index(choix + 1)]})$ ?`\n          texteCorr = `La symétrique de la demi-droite $[${noms[index(choix)]}${noms[index(choix + 1)]})$ est la demi-droite $[${noms[index(choix + 12)]}${noms[index(choix + 13)]})$`\n          objets_correction.push(demiDroite(points[index(choix)], points[index(choix + 1)], texcolors(i * 3 + 2)))\n          objets_correction.push(demiDroite(points[index(choix + 12)], points[index(choix + 13)], texcolors(i * 3 + 2)))\n          break;\n        case \"Triangle\":\n          choix = randint(0, 9) + randint(0, 1) * 12\n          texte = `Quel est le symétrique du triangle $${noms[index(choix)]}${noms[index(choix + 1)]}${noms[index(choix + 2)]}$ ?`\n          texteCorr = `Le symétrique du triangle $${noms[index(choix)]}${noms[index(choix + 1)]}${noms[index(choix + 2)]}$ est le triangle $${noms[index(choix + 12)]}${noms[index(choix + 13)]}${noms[index(choix + 14)]}$.`\n          objets_correction.push(polygone([points[index(choix)], points[index(choix + 1)], points[index(choix + 2)]], texcolors(i * 3 + 2)))\n          objets_correction.push(polygone([points[index(choix + 12)], points[index(choix + 13)], points[index(choix + 14)]], texcolors(i * 3 + 2)))\n          break;\n        case \"Angle\":\n          choix = randint(0, 9) + randint(0, 1) * 12\n          texte = `Quel est le symétrique de l'angle $\\\\widehat{${noms[index(choix)]}${noms[index(choix + 1)]}${noms[index(choix + 2)]}}$ ?`\n          texteCorr = `Le symétrique de l'angle $\\\\widehat{${noms[index(choix)]}${noms[index(choix + 1)]}${noms[index(choix + 2)]}}$ est l'angle $\\\\widehat{${noms[index(choix + 12)]}${noms[index(choix + 13)]}${noms[index(choix + 14)]}}$.`\n          objets_correction.push(codeAngle(points[index(choix)], points[index(choix + 1)], points[index(choix + 2)], 2, '', texcolors(i * 3 + 2), 2, 0.5, texcolors(i * 3 + 2), 0.2))\n          objets_correction.push(codeAngle(points[index(choix + 12)], points[index(choix + 13)], points[index(choix + 14)], 2, '', texcolors(i * 3 + 2), 2, 0.5, texcolors(i * 3 + 2), 0.2))\n          objets_correction.push(segment(points[index(choix)], points[index(choix + 1)], texcolors(i * 3 + 2)))\n          objets_correction.push(segment(points[index(choix + 1)], points[index(choix + 2)], texcolors(i * 3 + 2)))\n          objets_correction.push(segment(points[index(choix + 12)], points[index(choix + 13)], texcolors(i * 3 + 2)))\n          objets_correction.push(segment(points[index(choix + 13)], points[index(choix + 14)], texcolors(i * 3 + 2)))\n\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    d.isVisible = true;\n    objets_enonce.push(nomd, d);\n    objets_correction.push(nomd, d);\n    for (let i = 0; i < 24; i++) {\n      objets_enonce.push(labelPoint(points[i]), tracePoint(points[i], 'blue'))\n      objets_correction.push(labelPoint(points[i]), tracePoint(points[i], 'blue'))\n\n    }\n    this.listeQuestions.push(mathalea2d({ xmin: -6, ymin: -6, xmax: 6, ymax: 6, pixelsParCm: 40, scale: 1 }, objets_enonce))\n    this.listeCorrections.push(mathalea2d({ xmin: -6, ymin: -6, xmax: 6, ymax: 6, pixelsParCm: 40, scale: 1 }, objets_correction))\n    listeQuestionsToContenuSansNumero(this);\n\n  }\n  this.besoinFormulaireNumerique = ['Type d\\'axe', 5, \"1 : Axe vertical\\n2 : Axe horizontal\\n3 : Axe oblique 1\\n4 : Axe oblique 2\\n5 : Axe aléatoire\"];\n  this.besoinFormulaire2CaseACocher = [\"Avec des points de part et d'autre\"];\n}\n\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}