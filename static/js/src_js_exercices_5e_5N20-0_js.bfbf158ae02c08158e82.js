/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_5e_5N20-0_js"],{

/***/ "./src/js/exercices/5e/5N20-0.js":
/*!***************************************!*\
  !*** ./src/js/exercices/5e/5N20-0.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Problemes_additifs_fractions_5e)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\nconst titre = 'Résoudre un problème en utilisant des fractions'\n\n/** \n * * résoudre un problème additif de fractions niv 5e\n * * 5N20-0\n * @author Sébastien Lozano\n */\nfunction Problemes_additifs_fractions_5e () {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this) // Héritage de la classe Exercice()\n  this.debug = false\n  this.sup = 1\n  this.nb_questions=1\n\n  this.titre = titre;\n  this.consigne = 'Calculatrice autorisée.';\n\n  this.nb_cols = 1\n  this.nb_cols_corr = 1\n  //this.nb_questions_modifiable = false;\n  sortie_html ? this.spacing = 1 : this.spacing = 1\n  sortie_html ? this.spacing_corr = 1 : this.spacing_corr = 1\n\n  let type_de_questions_disponibles\n\n  this.nouvelle_version = function () {\n    if (this.debug) {\n      type_de_questions_disponibles = [0]\n    } else {\n      // type_de_questions_disponibles = shuffle([choice([1,3]),choice([2,4]),0]);\n      type_de_questions_disponibles = [0]\n    };\n\n    this.liste_questions = [] // Liste de questions\n    this.liste_corrections = [] // Liste de questions corrigées\t\t\n\n    //let liste_type_de_questions  = combinaison_listes(type_de_questions_disponibles,this.nb_questions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(type_de_questions_disponibles, this.nb_questions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n      // on définit les fractions pour les vols et les arguments pour le graphique\n      let frac_vols = [\n        [1, 12, [1.8, ' ', 'black', 2, 1, 'red', 0.4]],\n        [1, 12, [1.8, ' ', 'black', 2, 1, 'red', 0.4]],\n        [1, 12, [1.8, ' ', 'black', 2, 1, 'red', 0.4]],\n        [1, 4, [1.8, ' ', 'black', 2, 1, 'blue', 0.4]],\n        [1, 2, [1.8, ' ', 'black', 2, 1, 'green', 0.4]]\n      ]\n      // on mélange pour l'aléatoire tant que les deux premieres fractions sont égales\n      do {\n        frac_vols = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)(frac_vols)\n      } while (frac_vols[0][1] == frac_vols[1][1])\n\n\n      // let q1a = randint(1,5); // indice pour faire varier la 1ere question sur la destination\n      // let q1b = randint(1,5,[q1a]); // indice pour faire varier la 2eme question sur la destination\n      let nb_vols_total\n      let destinations_vols = [['l\\'', 'Afrique'], ['l\\'', 'Asie'], ['l\\'', 'Amerique'], ['l\\'', 'Europe'], ['la', ' France']]\n      destinations_vols = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)(destinations_vols)\n      do {\n        nb_vols_total = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(200, 600)\n      } while (nb_vols_total % 2 != 0 || nb_vols_total % 3 != 0 || nb_vols_total % 4 != 0)\n\n      // pour les situations\n      const situations = [\n        { // case 0 --> vols\n          fin_enonce_situation: 'vols d\\'une compagnie aérienne selon la destination',\n          nom_enonce: 'vols',\n          last_question: ['cette compagnie a affrété', 'vols', 'le nombre de vols', 'Le nombre de vols'],\n          cat1: {\n            destination: destinations_vols[0][0] + destinations_vols[0][1],\n            article: destinations_vols[0][0],\n            nom: destinations_vols[0][1],\n            frac: frac_vols[0],\n            angle: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(360 / frac_vols[0][1]),\n            arg_graph: frac_vols[0][2]\n          },\n          cat2: {\n            destination: destinations_vols[1][0] + destinations_vols[1][1],\n            article: destinations_vols[1][0],\n            nom: destinations_vols[1][1],\n            frac: frac_vols[1],\n            angle: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(360 / frac_vols[1][1]),\n            arg_graph: frac_vols[1][2]\n          },\n          cat3: {\n            destination: destinations_vols[2][0] + destinations_vols[2][1],\n            article: destinations_vols[2][0],\n            nom: destinations_vols[2][1],\n            frac: frac_vols[2],\n            angle: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(360 / frac_vols[2][1]),\n            arg_graph: frac_vols[2][2]\n          },\n          cat4: {\n            destination: destinations_vols[3][0] + destinations_vols[3][1],\n            article: destinations_vols[3][0],\n            nom: destinations_vols[3][1],\n            frac: frac_vols[3],\n            angle: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(360 / frac_vols[3][1]),\n            arg_graph: frac_vols[3][2]\n          },\n          cat5: {\n            destination: destinations_vols[4][0] + destinations_vols[4][1],\n            article: destinations_vols[4][0],\n            nom: destinations_vols[4][1],\n            frac: frac_vols[4],\n            angle: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(360 / frac_vols[4][1]),\n            arg_graph: frac_vols[4][2]\n          },\n          // q1a:q1a,\n          // q1b:q1b,\n          nb_total: nb_vols_total,\n          fig: ''\n        },\n        {// case 1 --> courses\n        },\n        {// case 2 --> activités sportives\n        },\n        {// case 3 -->\n        },\n        {// case 4 -->\n        }\n      ]\n      // une fonction pour gérer le codage des angles\n      function myCodageAngle (A, O, B, angle, [...args]) {\n        if (angle == 90) {\n          return (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A, O, B)\n        } else {\n          return (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeAngle)(A, O, angle, ...args)\n        };\n      };\n\n      // une fonction pour gérer l'affichage correct de la légende\n      // param est l'ordonnée du point qui sert à la mediatrice !\n      ;\n\n      // une fonction pour positionner le label\n      // y est l'ordonnée du point\n      function myLabelPosition (y) {\n        if (y < 0) {\n          return 'below'\n        } else {\n          return 'above'\n        };\n      };\n\n      // une fonction pour gérer le texte en fonction de l'angle\n      function myTexte_vols_corr (angle) {\n        switch (angle) {\n          case 90:\n            return `du secteur est un angle droit, il mesure $${angle}\\\\degree$ sur les $360\\\\degree$ d'un tour complet, donc il représente $\\\\dfrac{${angle}}{360}$ du disque soit $\\\\dfrac{1}{4}$.`\n          case 30:\n            return `rouge apparaît 3 fois, l'angle vert vaut $180\\\\degree$ et il y a un angle droit.<br>\n\t\t\t\t\t\t\tL'angle pour un tour complet vaut $360\\\\degree$, donc l'angle rouge vaut $(360-180-90)\\\\div 3 = ${angle}\\\\degree$.<br>\n\t\t\t\t\t\t\tL'angle rouge mesure $${angle}\\\\degree$ sur les $360\\\\degree$ d'un tour complet, donc il représente $\\\\dfrac{${angle}}{360}$ du disque soit $\\\\dfrac{1}{12}$.\n\t\t\t\t\t\t\t`\n          case 180:\n            return `du secteur est un angle plat, il mesure $${angle}\\\\degree$ sur les $360\\\\degree$ d'un tour complet, donc il représente $\\\\dfrac{${angle}}{360}$ du disque soit $\\\\dfrac{1}{2}$.`\n\n        }\n      };\n\n      // on prépare la fenetre mathalea2d\n      const fenetreMathalea2D = { xmin: -10, ymin: -8, xmax: 10, ymax: 8, pixelsParCm: 20, scale: 0.5 }\n      const O_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0)\n      let A_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(fenetreMathalea2D.xmin + 6, 0)\n      let c_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.cercleCentrePoint)(O_vols, A_vols, 'blue')\n      c_vols.epaisseur = 2\n      // on trace les quartiers\n      //cat1\n      let B_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A_vols, O_vols, situations[0].cat1.angle)\n      let s_OA_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(O_vols, A_vols)\n      let s_OB_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(O_vols, B_vols)\n      let codage_AOB = myCodageAngle(A_vols, O_vols, B_vols, situations[0].cat1.angle, situations[0].cat1.arg_graph)\n      // cat2\n      const C_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B_vols, O_vols, situations[0].cat2.angle)\n      let s_OC_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(O_vols, C_vols)\n      let codage_BOC = myCodageAngle(B_vols, O_vols, C_vols, situations[0].cat2.angle, situations[0].cat2.arg_graph)\n      // cat3\n      const D_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(C_vols, O_vols, situations[0].cat3.angle)\n      let s_OD_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(O_vols, D_vols)\n      let codage_COD = myCodageAngle(C_vols, O_vols, D_vols, situations[0].cat3.angle, situations[0].cat3.arg_graph)\n      // cat4\n      const E_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(D_vols, O_vols, situations[0].cat4.angle)\n      let s_OE_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(O_vols, E_vols)\n      let codage_DOE = myCodageAngle(D_vols, O_vols, E_vols, situations[0].cat4.angle, situations[0].cat4.arg_graph)\n      // cat5\n      const F_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(E_vols, O_vols, situations[0].cat5.angle)\n      let s_OF_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(O_vols, F_vols)\n      let codage_EOF = myCodageAngle(E_vols, O_vols, F_vols, situations[0].cat5.angle, situations[0].cat5.arg_graph)\n\n      // légende\n      const A_legende = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(fenetreMathalea2D.xmin + 4, 0)\n      let L_vols_cat1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A_legende, O_vols, situations[0].cat1.angle / 2, situations[0].cat1.nom)\n      L_vols_cat1.positionLabel = myLabelPosition(L_vols_cat1.y)\n      let LL_vols_cat1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(A_vols, O_vols, situations[0].cat1.angle / 2, situations[0].cat1.nom)\n      let s_legende_cat1 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(L_vols_cat1, LL_vols_cat1)\n      s_legende_cat1.styleExtremites = '->'\n      s_legende_cat1.pointilles = true\n\n      let L_vols_cat2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(L_vols_cat1, O_vols, situations[0].cat1.angle / 2 + situations[0].cat2.angle / 2, situations[0].cat2.nom)\n      L_vols_cat2.positionLabel = myLabelPosition(L_vols_cat2.y)\n      let LL_vols_cat2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(B_vols, O_vols, situations[0].cat2.angle / 2, situations[0].cat2.nom)\n      let s_legende_cat2 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(L_vols_cat2, LL_vols_cat2)\n      s_legende_cat2.styleExtremites = '->'\n      s_legende_cat2.pointilles = true\n\n      let L_vols_cat3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(L_vols_cat2, O_vols, situations[0].cat2.angle / 2 + situations[0].cat3.angle / 2, situations[0].cat3.nom)\n      L_vols_cat3.positionLabel = myLabelPosition(L_vols_cat3.y)\n      let LL_vols_cat3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(C_vols, O_vols, situations[0].cat3.angle / 2, situations[0].cat3.nom)\n      let s_legende_cat3 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(L_vols_cat3, LL_vols_cat3)\n      s_legende_cat3.styleExtremites = '->'\n      s_legende_cat3.pointilles = true\n\n      let L_vols_cat4 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(L_vols_cat3, O_vols, situations[0].cat3.angle / 2 + situations[0].cat4.angle / 2, situations[0].cat4.nom)\n      L_vols_cat4.positionLabel = myLabelPosition(L_vols_cat4.y)\n      let LL_vols_cat4 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(D_vols, O_vols, situations[0].cat4.angle / 2, situations[0].cat4.nom)\n      let s_legende_cat4 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(L_vols_cat4, LL_vols_cat4)\n      s_legende_cat4.styleExtremites = '->'\n      s_legende_cat4.pointilles = true\n\n      let L_vols_cat5 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(L_vols_cat4, O_vols, situations[0].cat4.angle / 2 + situations[0].cat5.angle / 2, situations[0].cat5.nom)\n      L_vols_cat5.positionLabel = myLabelPosition(L_vols_cat5.y)\n      let LL_vols_cat5 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(E_vols, O_vols, situations[0].cat5.angle / 2, situations[0].cat5.nom)\n      let s_legende_cat5 = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(L_vols_cat5, LL_vols_cat5)\n      s_legende_cat5.styleExtremites = '->'\n      s_legende_cat5.pointilles = true\n\n\n      let mesAppels = [\n        c_vols,\n        s_OA_vols,\n        s_OB_vols,\n        s_OC_vols,\n        s_OD_vols,\n        s_OE_vols,\n        s_OF_vols,\n        codage_AOB,\n        codage_BOC,\n        codage_COD,\n        codage_DOE,\n        codage_EOF,\n        (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(L_vols_cat1),\n        (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(L_vols_cat2),\n        (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(L_vols_cat3),\n        (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(L_vols_cat4),\n        (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(L_vols_cat5),\n        s_legende_cat1,\n        s_legende_cat2,\n        s_legende_cat3,\n        s_legende_cat4,\n        s_legende_cat5\n      ]\n      let fig_vols = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(\n        fenetreMathalea2D,\n        mesAppels\n      )\n      situations[0].fig = fig_vols\n\n      let enonces = []\n      let i_sous_question = 0\n      let i_sous_question_corr = 0\n\n      for (let k = 0; k < 1; k++) {\n        enonces.push({\n          enonce: `\n\t\t\t\t\tOn a représenté sur le diagramme circulaire ci-contre la répartition des ${situations[k].fin_enonce_situation}.<br>\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)('Les angles de même couleur ont la même mesure.')}<br>\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)('L\\'angle vert est un angle plat.')}<br>\n\t\t\t\t\t${situations[k].fig}<br>\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(i_sous_question++)} Quelle fraction représente les ${situations[k].nom_enonce} vers ${situations[k].cat1.destination} ?<br>\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(i_sous_question++)} Quelle fraction représente les ${situations[k].nom_enonce} vers ${situations[k].cat2.destination} ?<br>\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(i_sous_question++)} Sachant que ${situations[k].last_question[0]} ${situations[k].nb_total} ${situations[k].last_question[1]}\n\t\t\t\t\tet que les ${situations[k].nom_enonce} vers ${situations[k].cat3.destination} représentent $\\\\dfrac{${situations[k].cat3.frac[0]}}{${situations[k].cat3.frac[1]}}$ de ce total,\n\t\t\t\t\tcaluler ${situations[k].last_question[2]} vers ${situations[k].cat3.destination}?\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t`,\n          correction: `\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(i_sous_question_corr++)} Pour ${situations[k].cat1.destination} l'angle ${myTexte_vols_corr(situations[k].cat1.angle)}<br>\t\t\t\t\t\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(`La fraction qui représente les ${situations[k].nom_enonce} vers ${situations[k].cat1.destination} vaut donc $\\\\dfrac{${situations[k].cat1.frac[0]}}{${situations[k].cat1.frac[1]}}$`)}.<br>\n\t\t\t\t\t\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(i_sous_question_corr++)} Pour ${situations[k].cat2.destination} l'angle ${myTexte_vols_corr(situations[k].cat2.angle)}<br>\t\t\t\t\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(`La fraction qui représente les ${situations[k].nom_enonce} vers ${situations[k].cat2.destination} vaut donc $\\\\dfrac{${situations[k].cat2.frac[0]}}{${situations[k].cat2.frac[1]}}$`)}<br>\n\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.num_alpha)(i_sous_question_corr++)} Calculons $\\\\dfrac{${situations[k].cat3.frac[0]}}{${situations[k].cat3.frac[1]}}$ de ${situations[k].nb_total} :<br> \n\t\t\t\t\t$\\\\dfrac{${situations[k].cat3.frac[0]}}{${situations[k].cat3.frac[1]}}\\\\times ${situations[k].nb_total} = \\\\dfrac{${situations[k].cat3.frac[0]}\\\\times ${situations[k].nb_total}}{${situations[k].cat3.frac[1]}} = \\\\dfrac{${situations[k].cat3.frac[0]}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(situations[k].nb_total / situations[k].cat3.frac[1])}\\\\times ${situations[k].cat3.frac[1]}}{${situations[k].cat3.frac[1]}} = \\\\dfrac{${situations[k].cat3.frac[0]}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(situations[k].nb_total / situations[k].cat3.frac[1])}\\\\times \\\\cancel{${situations[k].cat3.frac[1]}}}{\\\\cancel{${situations[k].cat3.frac[1]}}} = ${situations[k].cat3.frac[0]}\\\\times ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(situations[k].nb_total / situations[k].cat3.frac[1])} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(situations[k].nb_total / situations[k].cat3.frac[1])}$<br>\n\t\t\t\t\t${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(`${situations[k].last_question[3]} vers ${situations[k].cat3.destination} vaut donc ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.calcul)(situations[k].nb_total / situations[k].cat3.frac[1])}.`)}\n\t\t\t\t\t`\n        })\n      };\n\n      switch (liste_type_de_questions[i]) {\n        case 0:\n          texte = `${enonces[0].enonce}`\n          if (this.debug) {\n            texte += '<br>';\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texte += '             '\n            texte_corr = '';\n          } else {\n            texte_corr = `${enonces[0].correction}`\n          };\n          break\n      }\n\n      if (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.liste_questions.push(texte)\n        this.liste_corrections.push(texte_corr)\n        i++\n      }\n      cpt++\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this)\n\n  }\n  // this.besoin_formulaire_numerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  // this.besoin_formulaire2_case_a_cocher = [\"Avec des équations du second degré\"];\n};\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/5e/5N20-0.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);