{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R20-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","amcReady","amcType","ExerciceAdditionsDe5Relatifs","max","Exercice","this","sup","sup2","consigne","spacing","nbCols","nbColsCorr","interactif","nouvelleVersion","context","parseInt","listeQuestions","listeCorrections","a","b","c","d","e","s1","s2","s3","s4","relatifs","texte","texteCorr","reponse","i","cpt","nbQuestions","randint","choice","lettreDepuisChiffre","ecritureAlgebrique","ajouteChampTexte","sommeDesTermesParSigne","ecritureNombreRelatif","signe","triePositifsNegatifs","ecritureNombreRelatifc","sommesSignees","ecritureAlgebriquec","indexOf","setReponse","digits","Math","nombreDeChiffresDansLaPartieEntiere","decimals","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1248.a9fd24affd22e581584a.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {\n  listeQuestionsToContenu,\n  randint,\n  choice,\n  ecritureNombreRelatif,\n  ecritureNombreRelatifc,\n  ecritureAlgebrique,\n  ecritureAlgebriquec,\n  signe,\n  sommeDesTermesParSigne,\n  triePositifsNegatifs,\n  lettreDepuisChiffre,\n  nombreDeChiffresDansLaPartieEntiere\n} from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Additions de 5 nombres relatifs'\nexport const interactifReady = true\n\nexport const amcReady = true\nexport const amcType = 4\n\n/**\n * Effectuer la somme de 5 nombres relatifs.\n *\n * Pour la correction, on commence par effectuer la somme des termes de même signe\n *\n * * On peut paramétrer les distances à zéro qui sont par défaut inférieures à 20\n * * On peut utiliser des écritures simplifiées (ce qui n'est pas le cas par défaut)\n * @author Rémi Angot\n * 5R20-3\n */\nexport default function ExerciceAdditionsDe5Relatifs (max = 20) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = max\n  this.sup2 = false // écriture simplifiée\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.interactif = true\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  this.nouvelleVersion = function () {\n    if (!context.isHtml) this.interactif = false\n    this.sup = parseInt(this.sup)\n    this.sup2 = parseInt(this.sup2)\n    if (this.interactif) {\n      this.spacing = 3\n    }\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    for (let i = 0, a, b, c, d, e, s1, s2, s3, s4, relatifs, texte, texteCorr, reponse, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // On limite le nombre d'essais pour chercher des valeurs nouvelles\n      a = randint(1, this.sup) * choice([-1, 1])\n      b = randint(1, this.sup) * choice([-1, 1])\n      if ((a === 1) & (b === 1)) {\n        // On s'assure que les 3 premières termes n'ont pas le même signe\n        c = -1\n      } else if ((a === -1) & (b === -1)) {\n        c = 1\n      } else {\n        c = randint(1, this.sup) * choice([-1, 1])\n      }\n      d = randint(1, this.sup) * choice([-1, 1])\n      e = randint(1, this.sup) * choice([-1, 1])\n      s1 = 1 // Que des additions\n      s2 = 1\n      s3 = 1\n      s4 = 1\n      reponse = a + b + c + d + e\n      if (this.sup2) {\n        texte = `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(\n          e\n        )} = \\\\dotfill $`\n        if (this.interactif && !context.isAmc) {\n          texte = ajouteChampTexte(this, i, {\n            texte: `$ ${lettreDepuisChiffre(i + 1)} = ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(e)} = $`\n          })\n        }\n        if (!context.isHtml && !context.isAmc) {\n          texte += `<br>$ ${lettreDepuisChiffre(i + 1)} = \\\\dotfill $`\n        }\n        texteCorr = `$ ${lettreDepuisChiffre(i + 1)} =  ${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}${ecritureAlgebrique(d)}${ecritureAlgebrique(\n          e\n        )} = ${sommeDesTermesParSigne([a, b, c, d, e])[0]}${ecritureAlgebrique(sommeDesTermesParSigne([a, b, c, d, e])[1])} = ${a + b + c + d + e} $`\n      } else {\n        texte = `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(\n          c\n        )}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} = \\\\dotfill $`\n        if (this.interactif && !context.isAmc) {\n          texte = ajouteChampTexte(this, i, {\n            texte: `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(\n              c\n            )}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} = $`\n          })\n        }\n\n        if (!context.isHtml && !context.isAmc) {\n          texte += `<br>$ ${lettreDepuisChiffre(i + 1)} = \\\\dotfill $`\n        }\n        texteCorr = `$ ${lettreDepuisChiffre(i + 1)} =  ${ecritureNombreRelatif(a)}${signe(s1)}${ecritureNombreRelatif(b)}${signe(s2)}${ecritureNombreRelatif(\n          c\n        )}${signe(s3)}${ecritureNombreRelatif(d)}${signe(s4)}${ecritureNombreRelatif(e)} $`\n        relatifs = triePositifsNegatifs([a, s1 * b, s2 * c, s3 * d, s4 * e])\n\n        if ((relatifs[0] > 0) & (relatifs[4] < 0)) {\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(relatifs[0])}+${ecritureNombreRelatifc(relatifs[1])}+${ecritureNombreRelatifc(\n            relatifs[2]\n          )}+${ecritureNombreRelatifc(relatifs[3])}+${ecritureNombreRelatifc(relatifs[4])} $`\n        }\n        const sommesSignees = sommeDesTermesParSigne([relatifs[0], relatifs[1], relatifs[2], relatifs[3], relatifs[4]])\n        if (sommesSignees[0] !== 0 && sommesSignees[1] !== 0) {\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureNombreRelatifc(sommesSignees[0])}+${ecritureNombreRelatifc(sommesSignees[1])} $`\n          texteCorr += `<br>$ \\\\phantom{A}= ${ecritureAlgebriquec(a + s1 * b + s2 * c + s3 * d + s4 * e)}$<br>`\n        } else if (sommesSignees[0] !== 0) {\n          texteCorr += `<br>$ \\\\phantom{A}=${ecritureAlgebriquec(sommesSignees[0])}$`\n        } else {\n          texteCorr += `<br>$ \\\\phantom{A}=${ecritureAlgebriquec(sommesSignees[1])}$<br>`\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        setReponse(this, i, reponse, { signe: true, digits: Math.max(2, nombreDeChiffresDansLaPartieEntiere(reponse)), decimals: 0 })\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Valeur maximale', 99999]\n  this.besoinFormulaire2CaseACocher = ['Avec des écritures simplifiées']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}