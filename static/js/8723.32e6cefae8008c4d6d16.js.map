{"version":3,"file":"js/8723.32e6cefae8008c4d6d16.js","mappings":"4QAIO,MAAMA,EAAQ,4BACRC,GAAkB,EAClBC,EAAiB,WACjBC,GAAW,EACXC,EAAU,UASR,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKC,SAAW,wCAChBD,KAAKE,YAAc,EACnBF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBC,EAAAA,GAAAA,OAAiBL,KAAKM,YAAc,EAAIN,KAAKM,YAAc,EAC3DN,KAAKO,0BAA4B,CAAC,aAAc,EAAG,4EAEnDP,KAAKQ,gBAAkB,WAIrB,IAAIC,EACJ,OAJAT,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxBX,KAAKY,IAAMC,SAASb,KAAKY,KAEjBZ,KAAKY,KACX,KAAK,EACHH,EAA8B,CAAC,SAAU,WACzC,MACF,KAAK,EACHA,EAA8B,CAAC,UAAW,WAC1C,MACF,KAAK,EACHA,EAA8B,CAAC,WAAY,WAAY,QAAS,UAChE,MACF,QACEA,EAA8B,CAAC,SAAU,UAAW,UAAW,UAAW,WAAY,WAAY,QAAS,UAG/G,MAAMK,GAAuBC,EAAAA,EAAAA,KAAkBN,EAA6BT,KAAKE,aACjF,IAAK,IAAWc,EAAOC,EAAWC,EAASC,EAAGC,EAAGC,EAAUC,EAAlDC,EAAI,EAAiDC,EAAM,EAAGD,EAAIvB,KAAKE,aAAesB,EAAM,IAAK,CAKxG,OAJAF,GAAIG,EAAAA,EAAAA,KAAO,CAAC,EAAG,EAAG,EAAG,EAAG,KACxBJ,GAAWI,EAAAA,EAAAA,KAAO,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,EAAG,MACjMN,EAAIE,EAAS,GACbD,EAAIC,EAAS,GACLP,EAAqBS,IAC3B,IAAK,SACHP,EAAS,KAAGU,EAAAA,EAAAA,KAAoBH,EAAI,OAAMI,EAAAA,EAAAA,KAAY,GAAEL,QAAQH,EAAIG,WACpEL,EAAYD,EAEVC,GADEE,EAAI,EACQ,mBAAiBO,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,MAAMA,WAAWH,MAEjE,mBAAiBO,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,MAAMA,YAAWM,EAAAA,EAAAA,KAAIT,OAErFF,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,MAAKK,EAAAA,EAAAA,KAAY,MAAKR,YACpFD,EAAW,GAAEI,MAAKK,EAAAA,EAAAA,KAAY,MAAKR,WACnC,MACF,IAAK,UACHH,EAAS,KAAGU,EAAAA,EAAAA,KAAoBH,EAAI,OAAMI,EAAAA,EAAAA,KAAY,IAAGL,QAAQH,EAAIG,WACrEL,EAAYD,EACRG,EAAI,GACNF,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,QAAQD,MAAMA,WAAWH,MAChFF,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,MAAKK,EAAAA,EAAAA,KAAY,MAAKR,WACpFD,GAAUS,EAAAA,EAAAA,KAAY,MAAKR,SAE3BF,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,QAAQD,QAAQA,aAAaH,MACpFF,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,QAAQD,MAAKK,EAAAA,EAAAA,KAAY,OAAMR,YACtFD,GAAUS,EAAAA,EAAAA,KAAY,OAAMR,SAE9B,MACF,IAAK,UACHH,EAAS,KAAGU,EAAAA,EAAAA,KAAoBH,EAAI,OAAMI,EAAAA,EAAAA,KAAY,GAAER,EAAIG,QAAQF,EAAIE,WACxEL,EAAYD,EACZC,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,WAAWH,MAAMG,WAAWF,MAC1FH,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,KAAKH,MAAMC,OACzEF,EAAW,GAAEI,KAAKH,MAAMC,MACxB,MACF,IAAK,UACHJ,EAAS,KAAGU,EAAAA,EAAAA,KAAoBH,EAAI,OAAMI,EAAAA,EAAAA,KAAY,GAAER,EAAIG,QAAQF,EAAIE,WACxEL,EAAYD,EACZC,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,WAAWH,MAAMG,WAAWF,MAC1FH,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,KAAKH,MAAMC,OACzEF,EAAW,GAAEI,KAAKH,MAAMC,MACxB,MACF,IAAK,WACHJ,EAAS,KAAGU,EAAAA,EAAAA,KAAoBH,EAAI,OAAMI,EAAAA,EAAAA,KAAY,GAAER,EAAIG,QAAQF,EAAIE,aACxEL,EAAYD,EACZC,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,YAAYH,KAAKG,YAAYF,MAC3FH,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,MAAMH,KAAKC,OACzEF,EAAW,GAAEI,MAAMH,KAAKC,MACxB,MACF,IAAK,WACHJ,EAAS,KAAGU,EAAAA,EAAAA,KAAoBH,EAAI,OAAMI,EAAAA,EAAAA,KAAY,GAAER,EAAIG,QAAQF,EAAIE,aACxEL,EAAYD,EACZC,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,YAAYH,KAAKG,YAAYF,MAC3FH,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,OAAOD,MAAMH,KAAKC,OACzEF,EAAW,GAAEI,MAAMH,KAAKC,MACxB,MACF,IAAK,QACHJ,EAAS,KAAGU,EAAAA,EAAAA,KAAoBH,EAAI,MAAMJ,UAC1CF,EAAYD,EACZC,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,gBAAgBJ,iBACvEF,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,SAASJ,SAChED,EAAW,KAAIC,QACf,MACF,IAAK,SACHH,EAAS,KAAGU,EAAAA,EAAAA,KAAoBH,EAAI,MAAMJ,QAAQC,MAClDH,EAAYD,EACZC,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,gBAAgBJ,eAAeC,KACtFH,GAAc,mBAAiBS,EAAAA,EAAAA,KAAoBH,EAAI,SAASJ,MAAMC,MACtEF,EAAW,KAAIC,MAAMC,KAGpBf,EAAAA,GAAAA,MAIHL,KAAK6B,eAAeN,GAAK,CACvBO,OAAQd,EACRe,aAAc,CAAC,CAAEf,MAAOC,EAAWe,OAAQ,EAAGC,SAAU,OAL1DjB,IAASkB,EAAAA,EAAAA,IAAyBlC,KAAMuB,EAAG,mBAAoB,CAAEP,MAAO,UACxEmB,EAAAA,EAAAA,IAAWnC,KAAMuB,EAAGL,IAOlBlB,KAAKoC,oBAAoBb,EAAGD,EAAGH,EAAGC,KACpCpB,KAAKU,eAAe2B,KAAKrB,GACzBhB,KAAKW,iBAAiB0B,KAAKpB,GAC3BM,KAEFC,KAEFc,EAAAA,EAAAA,KAAwBtC,S,gBCjIb,SAASD,IAItBC,KAAKP,MAAQ,GACbO,KAAKuC,YAAa,EAclBvC,KAAKC,SAAW,GAChBD,KAAKwC,mBAAqB,GAC1BxC,KAAKyC,aAAe,GACpBzC,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxBX,KAAK0C,QAAU,GACf1C,KAAK2C,kBAAoB,GACzB3C,KAAK6B,eAAiB,GACtB7B,KAAK4C,sBAAwB,GAK7B5C,KAAK6C,QAAU,EACf7C,KAAKM,YAAc,EAKnBN,KAAK8C,mBAAoB,EACzB9C,KAAK+C,cAAgB,GACrB/C,KAAKgD,oBAAqB,EAC1BhD,KAAKiD,uBAAwB,EAC7BjD,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKkD,kBAAmB,EACxBlD,KAAKmD,sBAAuB,EAC5BnD,KAAKoD,mBAAoB,EACzBpD,KAAKqD,uBAAwB,EAM7BrD,KAAKsD,QAAS,EACdtD,KAAKuD,gBAAkB,GAKvBvD,KAAKE,YAAc,GACnBF,KAAKwD,+BAAgC,EACrCxD,KAAKyD,qBAAsB,EAC3BzD,KAAK0D,MAAQ,GAEb1D,KAAK2D,YAAa,EAClB3D,KAAK4D,uBAAwB,EAE7B5D,KAAKO,2BAA4B,EACjCP,KAAK6D,uBAAwB,EAC7B7D,KAAK8D,6BAA8B,EAEnC9D,KAAK+D,4BAA6B,EAClC/D,KAAKgE,wBAAyB,EAC9BhE,KAAKiE,8BAA+B,EAEpCjE,KAAKkE,4BAA6B,EAClClE,KAAKmE,wBAAyB,EAC9BnE,KAAKoE,8BAA+B,EAMpCpE,KAAKqE,cAAe,EAMpBrE,KAAKsE,eAAiB,GAEtBtE,KAAKQ,gBAAkB,SAAU+D,KAQjCvE,KAAKoC,oBAAsB,SAAUb,KAAMiD,GAC/B,IAANjD,IAASvB,KAAKsE,eAAiB,IACnC,IAAIG,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAI5E,KAAKsE,eAAeO,QAAQJ,IAAmB,KAGjDzE,KAAKsE,eAAejC,KAAKoC,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/3e/3L11-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, choice, combinaisonListes, abs, lettreDepuisChiffre, printlatex } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Factoriser une expression'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCOpen'\n\n/**\n* Utiliser la simple ou la double distributivité et réduire l'expression\n*\n* @author Rémi Angot\n* 3L11-4\n* Ajout du paramétrage : Guillaume Valmont 13/08/2021\n*/\nexport default function FactoriserParNombreOux () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Factoriser les expressions suivantes.'\n  this.nbQuestions = 8\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  context.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1\n  this.besoinFormulaireNumerique = ['Difficulté', 4, '1 : Niveau 1\\n2 : Niveau 2\\n3 : Niveau 3\\n4 : Niveaux 1, 2 et 3 mélangés']\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.sup = parseInt(this.sup)\n    let typesDeQuestionsDisponibles\n    switch (this.sup) {\n      case 1 :\n        typesDeQuestionsDisponibles = ['ka+nkb', '-ka+nkb']\n        break\n      case 2 :\n        typesDeQuestionsDisponibles = ['nka+mkb', 'nka-mkb']\n        break\n      case 3 :\n        typesDeQuestionsDisponibles = ['nkx+mkx2', 'nkx-mkx2', 'nx2+x', 'nx2+mx']\n        break\n      default :\n        typesDeQuestionsDisponibles = ['ka+nkb', '-ka+nkb', 'nka+mkb', 'nka-mkb', 'nkx+mkx2', 'nkx-mkx2', 'nx2+x', 'nx2+mx']\n        break\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, texteCorr, reponse, n, m, couplenm, k, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      k = choice([2, 3, 5, 7, 11])\n      couplenm = choice([[2, 3], [3, 4], [2, 5], [3, 5], [4, 5], [5, 6], [2, 7], [3, 7], [4, 7], [5, 7], [6, 7], [3, 8], [5, 8], [7, 8], [2, 9], [4, 9], [5, 9], [7, 9], [8, 9], [3, 10], [7, 10], [9, 10]]) // n et m sont premiers entre eux\n      n = couplenm[0]\n      m = couplenm[1]\n      switch (listeTypeDeQuestions[i]) {\n        case 'ka+nkb':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${k}*a+(${n * k})*b`)}$`\n          texteCorr = texte\n          if (n > 0) {\n            texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}a+${k}\\\\times${n}b$`\n          } else {\n            texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}a-${k}\\\\times${abs(n)}b$`\n          }\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}(${printlatex(`a+(${n})*b`)})$`\n          reponse = `${k}(${printlatex(`a+(${n})*b`)})`\n          break\n        case '-ka+nkb':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${-k}*a+(${n * k})*b`)}$`\n          texteCorr = texte\n          if (n > 0) {\n            texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${-k}a+${k}\\\\times${n}b$`\n            texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}(${printlatex(`-a+${n}*b`)})$`\n            reponse = printlatex(`-a+${n}*b`)\n          } else {\n            texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${-k}a+(${-k})\\\\times${-n}b$`\n            texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${-k}(${printlatex(`a+(${-n})*b`)})$`\n            reponse = printlatex(`a+(${-n})*b`)\n          }\n          break\n        case 'nka+mkb':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${n * k}*a+(${m * k})*b`)}$`\n          texteCorr = texte\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}\\\\times${n}a+${k}\\\\times${m}b$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}(${n}a+${m}b)$`\n          reponse = `${k}(${n}a+${m}b)`\n          break\n        case 'nka-mkb':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${n * k}*a-(${m * k})*b`)}$`\n          texteCorr = texte\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}\\\\times${n}a-${k}\\\\times${m}b$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}(${n}a-${m}b)$`\n          reponse = `${k}(${n}a-${m}b)`\n          break\n        case 'nkx+mkx2':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${n * k}*x+(${m * k})*x^2`)}$`\n          texteCorr = texte\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}x\\\\times${n}+${k}x\\\\times${m}x$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}x(${n}+${m}x)$`\n          reponse = `${k}x(${n}+${m}x)`\n          break\n        case 'nkx-mkx2':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${printlatex(`${n * k}*x-(${m * k})*x^2`)}$`\n          texteCorr = texte\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}x\\\\times${n}-${k}x\\\\times${m}x$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=${k}x(${n}-${m}x)$`\n          reponse = `${k}x(${n}-${m}x)`\n          break\n        case 'nx2+x':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${n}x^2+x$`\n          texteCorr = texte\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=x\\\\times ${n}x+x\\\\times 1$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=x(${n}x+1)$`\n          reponse = `x(${n}x+1)`\n          break\n        case 'nx2+mx':\n          texte = `$${lettreDepuisChiffre(i + 1)}=${n}x^2+${m}x$`\n          texteCorr = texte\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=x\\\\times ${n}x+x\\\\times ${m}$`\n          texteCorr += `<br>$\\\\phantom{${lettreDepuisChiffre(i + 1)}}=x(${n}x+${m})$`\n          reponse = `x(${n}x+${m})`\n          break\n      }\n      if (!context.isAmc) {\n        texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline', { texte: ' $=$' })\n        setReponse(this, i, reponse)\n      } else {\n        this.autoCorrection[i] = {\n          enonce: texte,\n          propositions: [{ texte: texteCorr, statut: 3, feedback: '' }]\n        }\n      }\n      if (this.questionJamaisPosee(i, k, n, m)) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","FactoriserParNombreOux","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","context","spacingCorr","besoinFormulaireNumerique","nouvelleVersion","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","sup","parseInt","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","reponse","n","m","couplenm","k","i","cpt","choice","lettreDepuisChiffre","printlatex","abs","autoCorrection","enonce","propositions","statut","feedback","ajouteChampTexteMathLive","setReponse","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}