{"version":3,"file":"js/86029.53d868fdd4fafe757f7a.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G34-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\n\nimport { listeQuestionsToContenu, combinaisonListes, randint, ecritureAlgebrique, ecritureParentheseSiNegatif, reduireAxPlusB } from '../../modules/outils.js'\nexport const titre = 'Déterminer si des droites $(d)$ et $(d\\')$ sont parallèles, sécantes ou confondues :'\n\n/**\n * Description didactique de l'exercice\n * @author Stéphane Guyon\n * Référence 2G34-2, ex 2G50-2\n*/\nexport default function PositionsDeDroites () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Déterminer si les droites $\\\\bm{(d)}$ et $\\\\bm{(d\\')}$ dont on donne ci-dessous des équations cartésiennes, sont parallèles, confondues ou sécantes.'\n  this.nbQuestions = 3\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n\n  const typeQuestionsDisponibles = ['type1', 'type1', 'type2'] // On créé 2 types de questions\n  const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, a1, b1, c1, k, a2, b2, c2, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'type1':\n          a1 = randint(-5, 5)\n          b1 = randint(-5, 5)\n          c1 = randint(-5, 5)\n          a2 = randint(-5, 5)\n          b2 = randint(-5, 5)\n          c2 = randint(-5, 5)\n\n          texte = 'On donne : $(d) : '\n          if (a1 !== 0) {\n            texte += `${reduireAxPlusB(a1, 0)}`\n          }\n          if (b1 === 1) { // cas où b=1\n            texte += '+ y '\n          }\n          if (b1 === -1) { // cas où b=1\n            texte += '- y '\n          }\n          if (b1 !== 1 & b1 !== 0 & b1 !== -1) { // cas général\n            texte += `${ecritureAlgebrique(b1)} y `\n          }\n          if (c1 !== 0) {\n            texte += `${ecritureAlgebrique(c1)} `\n          }\n          texte += '=0$  '\n          texte += ' et  $(d\\') : '\n          if (a2 !== 0) {\n            texte += `${reduireAxPlusB(a2, 0)}`\n          }\n          if (b2 === 1) { // cas où b=1\n            texte += '+ y '\n          }\n          if (b2 === -1) { // cas où b=1\n            texte += '- y '\n          }\n          if (b2 !== 1 & b2 !== 0 & b2 !== -1) { // cas général\n            texte += `${ecritureAlgebrique(c2)} y `\n          }\n          if (c2 !== 0) {\n            texte += `${ecritureAlgebrique(c2)} `\n          }\n          texte += '=0$'\n\n          texteCorr = 'On sait qu\\'une droite $(d)$ d\\'équation cartésienne :'\n          texteCorr += ' $(d) : ax+by+c=0$, avec $(a;b)\\\\neq (0;0)$.'\n          texteCorr += '<br>admet un vecteur directeur de coordonnées :  '\n          texteCorr += '$\\\\vec {u} \\\\begin{pmatrix}-b\\\\\\\\a\\\\end{pmatrix}$.'\n          texteCorr += `<br>Comme on a d'après l'énoncé  : $a=${a1}$ , $b=${b1}$ , $c=${c1}$ ,`\n          texteCorr += '<br> on en déduit que : $\\\\vec {u} \\\\begin{pmatrix} '\n          if (b1 === 0) { texteCorr += '0' } else { texteCorr += `-${ecritureParentheseSiNegatif(b1)}` }\n          texteCorr += `\\\\\\\\${a1}\\\\end{pmatrix}$   est un vecteur directeur de $(d)$.`\n          texteCorr += `<br>De même, appelons $\\\\vec {u'}$ le vecteur directeur de $(d')$. <br>Comme ici, on a : $a=${a2}$ , $b=${b2}$ , $c=${c2}$ ,`\n          texteCorr += '<br> on en déduit que : $\\\\vec {u\\'} \\\\begin{pmatrix} '\n          if (b2 === 0) { texteCorr += '0' } else { texteCorr += `-${ecritureParentheseSiNegatif(b2)}` }\n          texteCorr += `\\\\\\\\${a2}\\\\end{pmatrix}$`\n          texteCorr += '<br> Pour déterminer la position relative de $(d)$ et $(d\\')$, on étudie la colinéarité des deux vecteurs directeurs. '\n          texteCorr += '<br> Pour cela, on calcule leur déterminant : '\n          texteCorr += `$Det\\\\big(\\\\vec u;\\\\vec {u'}\\\\big)=\\\\begin{vmatrix}${-b1}&${-b2}\\\\\\\\${a1}&${a2}\\\\end{vmatrix}=${ecritureParentheseSiNegatif(-b1)} \\\\times ${ecritureParentheseSiNegatif(a2)} - ${ecritureParentheseSiNegatif(a1)} \\\\times ${ecritureParentheseSiNegatif(-b2)}=${-b1 * a2 + a1 * b2}$`\n          if (-b1 * a2 + a1 * b2 !== 0) {\n            texteCorr += '<br>On observe que le déterminant est non-nul. <br>Les vecteurs directeurs des deux droites ne sont donc pas colinéaires.'\n            texteCorr += '<br>Les droites $(d)$ et $(d\\')$ ne sont donc pas parallèles.'\n          } else {\n            texteCorr += '<br>On observe que le déterminant est nul. <br>Les vecteurs directeurs des deux droites sont donc colinéaires.'\n            texteCorr += '<br>Les droites $(d)$ et $(d\\')$ sont alors parallèles.'\n          }\n          if (a1 * b2 === a2 * b1 & a1 * c1 === a2 * c2 & b1 * c2 === b2 * c1) {\n            texteCorr += 'On observe même que dans cette situation, les équations étant multiples l\\'une de l\\'autre, les deux droites sont confondues.'\n          }\n          break\n        case 'type2':\n          a1 = randint(-5, 5)\n          b1 = randint(-5, 5)\n          c1 = randint(-5, 5)\n          k = randint(-2, 2, 0)\n          a2 = a1 * k\n          b2 = b1 * k\n          c2 = randint(-5, 5)\n\n          texte = 'On donne : $(d) : '\n          if (a1 !== 0) {\n            texte += `${reduireAxPlusB(a1, 0)}`\n          }\n          if (b1 === 1) { // cas où b=1\n            texte += '+ y '\n          }\n          if (b1 === -1) { // cas où b=1\n            texte += '- y '\n          }\n          if (b1 !== 1 & b1 !== 0 & b1 !== -1) { // cas général\n            texte += `${ecritureAlgebrique(b1)} y `\n          }\n          if (c1 !== 0) {\n            texte += `${ecritureAlgebrique(c1)} `\n          }\n          texte += '=0$  '\n          texte += ' et  $(d\\') : '\n          if (a2 !== 0) {\n            texte += `${reduireAxPlusB(a2, 0)}`\n          }\n          if (b2 === 1) { // cas où b=1\n            texte += '+ y '\n          }\n          if (b2 === -1) { // cas où b=1\n            texte += '- y '\n          }\n          if (b2 !== 1 & b2 !== 0 & b2 !== -1) { // cas général\n            texte += `${ecritureAlgebrique(c2)} y `\n          }\n          if (c2 !== 0) {\n            texte += `${ecritureAlgebrique(c2)} `\n          }\n          texte += '=0$'\n\n          texteCorr = 'On sait qu\\'une équation cartésienne de droite de la forme :'\n          texteCorr += ' $(d) : ax+by+c=0$, avec $(a;b)\\\\neq (0;0)$.'\n          texteCorr += '<br>admet un vecteur directeur de coordonnées :  '\n          texteCorr += '$\\\\vec {u} \\\\begin{pmatrix}-b\\\\\\\\a\\\\end{pmatrix}$.'\n          texteCorr += '<br>Soit $\\\\vec {u}$ le vecteur directeur de $(d)$ :'\n          texteCorr += `<br>Comme on a d'après l'énoncé  : $a=${a1}$ , $b=${b1}$ , $c=${c1}$ `\n          texteCorr += ', on en déduit que : $\\\\vec {u} \\\\begin{pmatrix} '\n          if (b1 === 0) { texteCorr += '0' } else { texteCorr += `-${ecritureParentheseSiNegatif(b1)}` }\n          texteCorr += `\\\\\\\\${a1}\\\\end{pmatrix}$`\n          texteCorr += `<br>De même pour $(d')$ : $a=${a2}$ , $b=${b2}$ , $c=${c2}$ `\n          texteCorr += ', on en déduit que : $\\\\vec {u\\'} \\\\begin{pmatrix} '\n          if (b2 === 0) { texteCorr += '0' } else { texteCorr += `-${ecritureParentheseSiNegatif(b2)}` }\n          texteCorr += `\\\\\\\\${a2}\\\\end{pmatrix}$`\n          texteCorr += '<br> Pour déterminer la position relative de $(d)$ et $(d\\')$, on étudie la colinéarité des deux vecteurs directeurs. '\n          texteCorr += '<br> Pour cela, on calcule leur déterminant : '\n          texteCorr += `$Det\\\\big(\\\\vec u;\\\\vec {u'}\\\\big)=\\\\begin{vmatrix}${-b1}&${-b2}\\\\\\\\${a1}&${a2}\\\\end{vmatrix}=${ecritureParentheseSiNegatif(-b1)} \\\\times ${ecritureParentheseSiNegatif(a2)} - ${ecritureParentheseSiNegatif(a1)} \\\\times ${ecritureParentheseSiNegatif(-b2)}=${-b1 * a2 + a1 * b2}$`\n          if (-b1 * a2 + a1 * b2 !== 0) {\n            texteCorr += '<br>On observe que le déterminant est non-nul. <br>Les vecteurs directeurs des deux droites ne sont donc pas colinéaires.'\n            texteCorr += '<br>Les droites $(d)$ et $(d\\')$ ne sont donc pas parallèles.'\n          } else {\n            texteCorr += '<br>On observe que le déterminant est nul. <br>Les vecteurs directeurs des deux droites sont donc colinéaires.'\n            texteCorr += '<br>Les droites $(d)$ et $(d\\')$ sont alors parallèles.'\n          }\n          if (a1 * b2 === a2 * b1 & a1 * c1 === a2 * c2 & b1 * c2 === b2 * c1) {\n            texteCorr += '<br>On observe même que dans cette situation, les équations étant multiples l\\'une de l\\'autre, les deux droites sont confondues.'\n          }\n          break\n      }\n      if (this.questionJamaisPosee(i, a1, b1, c1, k)) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","PositionsDeDroites","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","listeTypeQuestions","combinaisonListes","nouvelleVersion","listeQuestions","listeCorrections","a1","b1","c1","k","a2","b2","c2","texte","texteCorr","i","cpt","randint","reduireAxPlusB","ecritureAlgebrique","ecritureParentheseSiNegatif","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}