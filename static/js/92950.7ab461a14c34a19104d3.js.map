{"version":3,"file":"js/92950.7ab461a14c34a19104d3.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/PE/PEG22.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, texteGras } from '../../modules/outils.js'\nimport { longueur, point, pointAdistance, pointSurSegment, similitude } from '../../modules/2d.js'\nimport Alea2iep from '../../modules/Alea2iep.js'\nexport const titre = 'Tracer une racine au compas et à la règle non graduée à l\\'aide du théorème de Pythagore'\n\nexport const dateDePublication = '1/11/2021'\n\n/**\n * @author Rémi Angot\n * Référence PEG22\n*/\nexport default function RacineCarrAvecTheoremePythagore () {\n  Exercice.call(this)\n  this.typeExercice = 'IEP'\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.sup = 2\n\n  this.nouvelleVersion = function (numeroExercice) {\n    let AB, BC, r\n    AB = randint(2, 5)\n    BC = randint(2, 5)\n    if (this.sup === 1) {\n      r = AB * AB + BC * BC\n    } else {\n      r = AB * AB + BC * BC + 1\n    }\n    while (r === 9 || r === 16 || r === 25 || r === 10 || r === 17 || r === 26) {\n      AB = randint(2, 5)\n      BC = randint(2, 5)\n      r = AB * AB + BC * BC + 1\n    }\n    const anim = new Alea2iep()\n    const distance = 1\n    const u1 = point(1, 5)\n    const u2 = point(u1.x + distance, u1.y)\n    const u1y1 = point(u1.x, u1.y - 0.1)\n    const u1y2 = point(u1.x, u1.y + 0.1)\n    const u2y1 = point(u2.x, u2.y - 0.1)\n    const u2y2 = point(u2.x, u2.y + 0.1)\n    anim.traitRapide(u1, u2)\n    anim.traitRapide(u1y1, u1y2)\n    anim.traitRapide(u2y1, u2y2)\n    anim.epaisseur = 1\n    anim.regleMasquerGraduations()\n    anim.textePosition('u', u1.x + 0.4, u1.y + 0.8)\n    const A = point(3, 0, 'A')\n    const B = point(A.x + AB * distance, 0, 'B')\n    const C = point(B.x, BC * distance, 'C')\n    anim.regleMasquerGraduations()\n    anim.regleDroite(A, B)\n    anim.regleMasquer()\n    anim.crayonMasquer()\n    anim.compasEcarter2Points(u1, u2)\n    anim.pointCreer(A, { dx: -0.3, dy: -0.2 })\n    const Ax = [A]\n    for (let i = 1; i <= AB + 1; i++) {\n      Ax.push(pointAdistance(A, distance * i, 0))\n      anim.compasTracerArcCentrePoint(Ax[i - 1], Ax[i])\n      if (i === AB) {\n        anim.pointCreer(B, { tempo: 10, dx: 0.2, dy: -0.2 })\n      }\n    }\n    anim.mediatriceAuCompas(Ax[AB - 1], Ax[AB + 1], { coderFigure: false, longueur1: 3.5, longueur2: -3.5 })\n    anim.crayonMasquer()\n    const Bx = [B]\n    anim.compasEcarter2Points(u1, u2)\n    for (let i = 1; i <= BC; i++) {\n      Bx.push(pointAdistance(B, distance * i, 90))\n      anim.compasTracerArcCentrePoint(Bx[i - 1], Bx[i])\n    }\n    anim.compasMasquer()\n    anim.pointCreer(C, { dx: 0.2, dy: 0.4 })\n    if (this.sup === 1) {\n      anim.epaisseur = 3\n      anim.regleSegment(A, C, { color: 'red' })\n      anim.regleMasquer()\n      anim.codageAngleDroit(A, B, C)\n      anim.crayonMasquer()\n    }\n    if (this.sup > 1) {\n      anim.regleDemiDroiteOriginePoint(A, C)\n      anim.regleMasquer()\n      anim.crayonMasquer()\n      const C1 = pointSurSegment(C, A, 2)\n      const C2 = pointSurSegment(C, A, -2)\n      anim.compasEcarter(2)\n      anim.compasTracerArcCentrePoint(C, C1)\n      anim.compasTracerArcCentrePoint(C, C2)\n      anim.mediatriceAuCompas(C1, C2, { coderFigure: false, longueur1: 3.5, longueur2: -3.5 })\n      anim.compasEcarter2Points(u1, u2)\n      const D = similitude(A, C, -90, 1 / longueur(A, C))\n      D.nom = 'D'\n      anim.compasTracerArcCentrePoint(C, D)\n      anim.compasMasquer()\n      anim.pointCreer(D, { dx: 0, dy: 0.5 })\n      anim.epaisseur = 3\n      anim.regleSegment(A, D, { couleur: 'red' })\n      anim.regleSegment(D, C)\n      anim.regleSegment(C, B)\n      anim.regleSegment(B, A)\n      anim.regleSegment(A, C)\n      anim.regleMasquer()\n      anim.codageAngleDroit(A, B, C)\n      anim.codageAngleDroit(A, C, D)\n      anim.crayonMasquer()\n    }\n\n    const texte = `En utilisant le théorème de Pythagore, tracer un segment de longueur $\\\\sqrt{${r}}u$ avec un compas et une règle non graduée.`\n    let texteCorr = texteGras('Programme de construction :')\n    if (this.sup === 1) {\n      texteCorr += `<br>On remarque que $${r}=${AB}^2+${BC}^2$`\n      texteCorr += `<br>On trace un segment $[AB]$ tel que $AB=${AB}u$.`\n      texteCorr += '<br>On trace la perpendiculaire à $(AB)$ passant par $B$ (pour cela on choisit 2 points $M$ et $N$ sur $[AB)$ tels que $B$ soit le milieu de $[MN]$ puis on trace la médiatrice de $[MN]$).'\n      texteCorr += `<br>On place le point $C$ sur cette perpendiculaire tel que $BC=${BC}u$.`\n      texteCorr += '<br>On trace $[AC]$.'\n      texteCorr += '<br><br>' + texteGras('Justification :')\n      texteCorr += '<br> Le triangle $ABC$ est rectangle en $B$, donc d\\'après le théorème de Pythagore, on a :'\n      texteCorr += `<br> $AC^2=AB^2+BC^2=${AB}^2+${BC}^2=${r}$.`\n      texteCorr += `<br> Finalement, on a $AC=\\\\sqrt{${r}}$.`\n    }\n    if (this.sup === 2) {\n      texteCorr += `<br>On remarque que $${r}=${AB}^2+${BC}^2+1$`\n      texteCorr += `<br>On trace un triangle $ABC$ rectangle en $B$ tel que $AB=${AB}u$ et $BC=${BC}u$.`\n      texteCorr += '<br>On trace la perpendiculaire à $(AC)$ passant par $C$ (pour cela on choisit 2 points $M$ et $N$ sur $(AC)$ tels que $C$ soit le milieu de $[MN]$ puis on trace la médiatrice de $[MN]$).'\n      texteCorr += '<br>On place le point $D$ sur cette perpendiculaire tel que $CD=1u$.'\n      texteCorr += '<br>On trace $[AD]$.'\n      texteCorr += '<br><br>' + texteGras('Justification :')\n      texteCorr += '<br> Le triangle $ABC$ est rectangle en $B$, donc d\\'après le théorème de Pythagore, on a :'\n      texteCorr += `<br> $AC^2=AB^2+BC^2=${AB}^2+${BC}^2=${r - 1}$.`\n      texteCorr += '<br> Le triangle $ACD$ est rectangle en $C$, donc d\\'après le théorème de Pythagore, on a :'\n      texteCorr += `<br> $AD^2=AC^2+CD^2=${r - 1}+1^2=${r}$.`\n      texteCorr += `<br> Finalement, on a $AD=\\\\sqrt{${r}}$.`\n    }\n\n    texteCorr += anim.html(numeroExercice)\n\n    this.listeQuestions = [texte]\n    this.listeCorrections = [texteCorr]\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Avec un seul triangle, \\n2 : Nécessite de construire 2 triangles']\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","dateDePublication","RacineCarrAvecTheoremePythagore","typeExercice","sup","AB","BC","r","randint","anim","Alea2iep","u1","point","u2","x","y","u1y1","u1y2","u2y1","u2y2","traitRapide","epaisseur","regleMasquerGraduations","textePosition","A","B","C","regleDroite","regleMasquer","crayonMasquer","compasEcarter2Points","pointCreer","dx","dy","Ax","pointAdistance","compasTracerArcCentrePoint","tempo","mediatriceAuCompas","coderFigure","longueur1","longueur2","Bx","compasMasquer","regleSegment","color","codageAngleDroit","regleDemiDroiteOriginePoint","C1","pointSurSegment","C2","compasEcarter","D","similitude","longueur","nom","couleur","texte","texteCorr","texteGras","html","listeQuestionsToContenu"],"sourceRoot":""}