/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_beta_beta4C25-00_js"],{

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ }),

/***/ "./src/js/exercices/beta/beta4C25-00.js":
/*!**********************************************!*\
  !*** ./src/js/exercices/beta/beta4C25-00.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Problemes_additifs_fractions_bis)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/Fractions.js */ \"./src/js/modules/Fractions.js\");\n\n\n\n\nconst titre = 'Re-Problèmes additifs et de comparaison sur les rationnels'\n\n/**\n * Problèmes additifs et de comparaion sur les rationnels\n * 4C25-0\n * @author Sébastien Lozano\n */\nfunction Problemes_additifs_fractions_bis() {\n    \"use strict\";\n    _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n    this.debug = false;\n    this.sup = 1;\n    this.video=\"\"\n    if (this.debug) {\n        this.nb_questions = 2;\n    } else {\n        this.nb_questions = 2;\n    }\n    this.titre = titre;\n    this.consigne = `Justifier vos réponses aux problèmes suivants.`;\n\n    this.nb_cols = 1;\n    this.nb_cols_corr = 1;\n    //this.nb_questions_modifiable = false;\n    sortie_html ? (this.spacing = 2) : (this.spacing = 1.5);\n    sortie_html ? (this.spacing_corr = 3) : (this.spacing_corr = 1.15);\n\n    let type_de_questions_disponibles;\n\n    this.nouvelle_version = function () {\n        if (this.debug) {\n            type_de_questions_disponibles = [1, 2, 3, 4, 5];\n        } else {\n            type_de_questions_disponibles = [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([1, 2]), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([3, 4, 5])];\n        }\n\n        //let liste_type_de_questions = combinaison_listes(type_de_questions_disponibles,this.nb_questions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n        let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(\n            type_de_questions_disponibles,\n            this.nb_questions\n        ); // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n        this.liste_questions = []; // Liste de questions\n        this.liste_corrections = []; // Liste de questions corrigées\n        let denoms_amis = [\n            [40, 2, 20, 4, 10, 5, 8],\n            [60, 2, 30, 3, 20, 4, 15, 5, 12, 6, 10],\n            [80, 2, 40, 4, 20, 5, 16, 8, 10],\n        ];\n        let p1, p2, p3; // les 3 prénoms\n        let currentDate\n        let currentAnnee\n        let listefrac,listefrac2,denominateurCommun,frac_meme_denom,frac_meme_denom_rangees,frac_rangees\n            // le tableau d'objets contenant tout le necesssaire, fractions, énoncé, question ... pour les problème avec 4 fractions\n        let pb_4_f = [],pb_3_f =[];\n            // les numérateurs et dénominateurs des 4 fractions attention les trois premières doivent être inférieures à 1/3 si on veut qu'elles soient toutes positives !\n            // et on veut des fractions distinctes\n        let n1, n2, n3, d1, d2, d3,F1, F2, F3,F4;\n        let n4, d4; // en plus parce qu'il y a 4 fractions\n            // on choisit un tableau de dénominateurs qui vont bien\n        let denoms_cool_4 ;\n        for (\n            let i = 0,denoms_cool_3 =[],texte, texte_corr, cpt = 0;\n            i < this.nb_questions && cpt < 50;\n\n        ) {\n\n            //======================================================\n            //======== \t\tAVEC 3 FRACTIONS\t\t\t  \t========\n            //======================================================\n\n            // le tableau d'objets contenant tout le necesssaire, fractions, énoncé, question ... pour les problème avec 3 fractions\n            pb_3_f = [];\n            // les numérateurs et dénominateurs des 3 fractions attention les deux premières doivent être inférieures à 1/2 si on veut qu'elles soient toutes positives !\n            // et on veut des fractions distinctes !\n            \n            \n            // on choisit un tableau de dénominateurs qui vont bien\n            denoms_cool_3 = denoms_amis[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, denoms_amis.length - 1)];\n            F1 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 2)\n            F2 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 2)\n            F3 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 2)\n            while (\n                F1.num == F2.num ||\n                F1.num == F3.num ||\n                F2.num == F3.num ||\n                F1.superieurlarge((0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 2)) ||\n                F2.superieurlarge((0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 2))\n            ) {\n                n1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 6);\n                d1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_3);\n                n2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, 10, n1); //on évite n1 pour pouvoir retrouver le texte de la plus grande fraction\n                d2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_3, d1);\n                n3 = d1 * d2 - n1 * d2 - n2 * d1; //la somme des trois vaut 1 !\n                d3 = d1 * d2;\n                F1 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(n1, d1).simplifie()\n                F2 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(n2, d2).simplifie()\n                F3 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(n3, d3).simplifie()\n\n            }\n            //======================================================\n            //========= indice 0 le triathlon des neiges  ==========\n            //======================================================\n            pb_3_f.push({\n                prenoms: [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomM)()],\n                fractions: [F1,\"VTT\",F2,\"ski de fond\",F3,\"pied\"],\n                enonce: ``,\n                question: `Pour quelle discipline, la distance est-elle la plus grande ?`,\n                correction: ``,\n            });\n\n            // les 3 prénomns doivent être distincts\n   \n            while (p1 == p2 || p1 == p3 || p2 == p3) {\n                p1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n                p2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n                p3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenomF)();\n            }\n\n            //======================================================\n            //=========== \t\tindice 1 Miss Math\t\t ===========\n            //======================================================\n            pb_3_f.push({\n                prenoms: [],\n                fractions: [F1,p1,F2,p2,F3,p3],\n                enonce: ``,\n                question: `Qui a été élue ?`,\n                correction: ``,\n            });\n            currentDate = new Date();\n            currentAnnee = currentDate.getFullYear();\n\n            //======================================================\n            //====== énoncé indice 0 le triathlon des neiges  ======\n            //======================================================\n            pb_3_f[0].enonce += `Le triathlon des neiges de la vallée des loups comprend trois épreuves qui s'enchaînent : VTT, ski de fond et course à pied.`;\n            pb_3_f[0].enonce += `<br>${pb_3_f[0].prenoms[0]}, un passionné de cette épreuve, s'entraîne régulièrement sur le même circuit. `;\n            pb_3_f[0].enonce += `<br>À chaque entraînement, il parcourt le circuit de la façon suivante : $${pb_3_f[0].fractions[0].texFraction}$ à ${pb_3_f[0].fractions[1]}, `;\n            pb_3_f[0].enonce += `$${pb_3_f[0].fractions[2].texFraction}$ à ${pb_3_f[0].fractions[3]} et le reste à ${pb_3_f[0].fractions[5]}.`;\n\n            //======================================================\n            //=========== énoncé indice 1 Miss Math\t\t ===========\n            //======================================================\n            pb_3_f[1].enonce = `À l'élection de Miss Math ${currentAnnee}, ${pb_3_f[1].fractions[1]} a remporté $${pb_3_f[1].fractions[0].texFraction}$ des suffrages, `;\n            pb_3_f[1].enonce += `${pb_3_f[1].fractions[3]} $${pb_3_f[1].fractions[2].texFraction}$ et `;\n            pb_3_f[1].enonce += `${pb_3_f[1].fractions[5]} tous les autres.`;\n\n            //======================================================\n            //=========== \t\tCorrection Commune  \t ===========\n            //======================================================\n            listefrac = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.listeFractions)(F1, F2, F3)\n            frac_meme_denom = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.enleve_element_bis)(listefrac.listeMemeDenominateur)\n            frac_meme_denom_rangees = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.enleve_element_bis)(listefrac.listeRangeeMemeDenominateur)\n            frac_rangees = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.enleve_element_bis)(listefrac.listeRangee)\n            denominateurCommun = listefrac.listeMemeDenominateur[0].den\n            for (let i = 0; i < 2; i++) {\n                pb_3_f[\n                    i\n                ].correction = `Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>`;\n                if (listefrac.liste[0].den == listefrac.liste[1].den) {\n                    pb_3_f[i].correction += `Les fractions de l'énoncé ont déjà le même dénominateur.<br>`;\n                }\n                else {\n                    pb_3_f[i].correction += `Réduisons les fractions de l'énoncé au même dénominateur :  `;\n\n                    pb_3_f[i].correction += `$${listefrac.liste[0].texFraction}$ `\n                    if (listefrac.liste[0].den!==denominateurCommun) pb_3_f[i].correction +=`$= ${listefrac.listeMemeDenominateur[0].texFraction}$ et `\n                    else  pb_3_f[i].correction +=` et `\n                    pb_3_f[i].correction += `$${listefrac.liste[1].texFraction}$ `\n                    if (listefrac.liste[1].den!==denominateurCommun)  pb_3_f[i].correction+=`$= ${listefrac.listeMemeDenominateur[1].texFraction}$.<br>`\n                    else pb_3_f[i].correction+=`.<br>`\n\n                }\n            }\n\n            //======================================================\n            //==== Correction indice 0 le triathlon des neiges  ====\n            //======================================================\n            pb_3_f[0].correction += `Calculons alors la distance à `;\n\n            //======================================================\n            //======== \t\tCorrection indice 1 Miss Math  \t========\n            //======================================================\n            pb_3_f[1].correction += `Calculons d'abord la fraction des suffrages remportés par `;\n\n            //======================================================\n            //=========== \t\tCorrection Commune  \t ===========\n            //======================================================\n            for (let i = 0; i < 2; i++) {\n                pb_3_f[i].correction += `${pb_3_f[i].fractions[5]} : <br>`;\n                pb_3_f[\n                    i\n                ].correction += `$1-${pb_3_f[i].fractions[0].texFraction}-${pb_3_f[i].fractions[2].texFraction} = `;\n                pb_3_f[\n                    i\n                ].correction += `${(0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(denominateurCommun, denominateurCommun).texFraction}-${listefrac.listeMemeDenominateur[0].texFraction}-${listefrac.listeMemeDenominateur[1].texFraction} = `;\n                pb_3_f[\n                    i\n                ].correction += `\\\\dfrac{${denominateurCommun}-${listefrac.listeMemeDenominateur[0].num}-${listefrac.listeMemeDenominateur[1].num}}{${denominateurCommun}} = `;\n                pb_3_f[i].correction += `${(0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(denominateurCommun - listefrac.listeMemeDenominateur[0].num - listefrac.listeMemeDenominateur[1].num, denominateurCommun).texFraction}`;\n                if (!(denominateurCommun == F3.den)) {\n                    pb_3_f[\n                        i\n                    ].correction += ` = ${pb_3_f[i].fractions[4].texFraction}$`;\n                } else {\n                    pb_3_f[i].correction += `$`;\n                }\n            }\n\n            //======================================================\n            //==== Conclusion indice 0 le triathlon des neiges  ====\n            //======================================================\n            pb_3_f[0].correction += `<br>${pb_3_f[0].prenoms[0]} fait donc $${pb_3_f[0].fractions[0].texFraction}$ à ${pb_3_f[0].fractions[1]}, `;\n            pb_3_f[0].correction += `$${pb_3_f[0].fractions[2].texFraction}$ à ${pb_3_f[0].fractions[3]} et `;\n            pb_3_f[0].correction += `$${pb_3_f[0].fractions[4].texFraction}$ à ${pb_3_f[0].fractions[5]}.`;\n\n            pb_3_f[0].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n            pb_3_f[0].correction += `${pb_3_f[0].prenoms[0]} fait donc $${frac_meme_denom[0].texFraction}$ à ${pb_3_f[0].fractions[1]}, `;\n            pb_3_f[0].correction += `$${frac_meme_denom[1].texFraction}$ à ${pb_3_f[0].fractions[3]} et `;\n            pb_3_f[0].correction += `$${frac_meme_denom[2].texFraction}$ à ${pb_3_f[0].fractions[5]}.`;\n\n            //let frac_rangees,frac_meme_denom_rangees;\n            if (\n                F1.egal(F2) &&\n                F1.egal(F3)\n            ) {\n                pb_3_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n                    `Les trois fractions sont équivalentes, ${pb_3_f[0].prenoms[0]} parcours donc la même distance dans les trois disciplines.`\n                )}`;\n            } else {\n                pb_3_f[0].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${frac_meme_denom_rangees[0].texFraction}$, $${frac_meme_denom_rangees[1].texFraction}$, $${frac_meme_denom_rangees[2].texFraction}$.`;\n\n                pb_3_f[0].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${frac_rangees[0].texFraction}$, $${frac_rangees[1].texFraction}$, $${frac_rangees[2].texFraction}$.`;\n\n                pb_3_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n                    `C'est donc à ${pb_3_f[0].fractions[\n                    pb_3_f[0].fractions.indexOf(frac_rangees[2]) + 1\n                    ]\n                    } que ${pb_3_f[0].prenoms[0]} fait la plus grande distance.`\n                )}`;\n            }\n\n            //======================================================\n            //======== \t\tConclusion indice 1 Miss Math  \t========\n            //======================================================\n            pb_3_f[1].correction += `<br>${pb_3_f[1].fractions[1]} a donc remporté $${pb_3_f[1].fractions[0].texFraction}$, `;\n            pb_3_f[1].correction += `${pb_3_f[1].fractions[3]} a remporté $${pb_3_f[1].fractions[2].texFraction}$ et `;\n            pb_3_f[1].correction += `${pb_3_f[1].fractions[5]} $${pb_3_f[1].fractions[4].texFraction}$.`;\n\n            pb_3_f[1].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n            pb_3_f[1].correction += `${pb_3_f[1].fractions[1]} remporte donc $${frac_meme_denom[0].texFraction}$, `;\n            pb_3_f[1].correction += `${pb_3_f[1].fractions[3]} $${frac_meme_denom[1].texFraction}$ et `;\n            pb_3_f[1].correction += `${pb_3_f[1].fractions[5]} $${frac_meme_denom[2].texFraction}$.`;\n\n            if (\n                F1.egal(F2) &&\n                F1.egal(F3)\n            ) {\n                pb_3_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n                    `Les trois fractions sont équivalentes, les trois candidates ont donc remporté le même nombre de suffrages.`\n                )}`;\n            } else {\n                pb_3_f[1].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${frac_meme_denom_rangees[0].texFraction}$, $${frac_meme_denom_rangees[1].texFraction}$, $${frac_meme_denom_rangees[2].texFraction}$.`;\n\n\n                pb_3_f[1].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${frac_rangees[0].texFraction}$, $${frac_rangees[1].texFraction}$, $${frac_rangees[2].texFraction}$.`;\n\n                pb_3_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n                    `C'est donc ${pb_3_f[1].fractions[\n                    pb_3_f[1].fractions.indexOf(frac_rangees[2]) + 1\n                    ]\n                    } qui a été élue.`\n                )}`;\n            }\n\n            //======================================================\n            //======== \t\tAVEC 4 FRACTIONS\t\t\t  \t========\n            //======================================================\n            pb_4_f = [];\n            denoms_cool_4 = denoms_amis[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(2, denoms_amis.length - 1)]\n\n            F1 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 3)\n            F2 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 3)\n            F3 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 3)\n            F4 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 3)\n            while (\n                F1.num == F2.num ||\n                F1.num == F3.num ||\n                F1.num == F4.num ||\n                F2.num == F3.num ||\n                F2.num == F4.num ||\n                F3.num == F4.num ||\n                F1.superieurlarge((0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 3)) ||\n                F2.superieurlarge((0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 3)) ||\n                F3.superieurlarge((0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(1, 3))\n            ) {\n                n1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 5);\n                d1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_4);\n                n2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 11, n1); //on évite n1 pour pouvoir retrouver le texte de la plus grande fraction\n                d2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_4);\n                n3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 17, [n1, n2]); //on évite n1 et n2 pour pouvoir retrouver le texte de la plus grande fraction\n                d3 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(denoms_cool_4);\n                n4 = d1 * d2 * d3 - n1 * d2 * d3 - n2 * d1 * d3 - n3 * d1 * d2; //la somme des quatre vaut 1 !\n                d4 = d1 * d2 * d3;\n                F1 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(n1, d1).simplifie()\n                F2 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(n2, d2).simplifie()\n                F3 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(n3, d3).simplifie()\n                F4 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.fraction)(n4, d4).simplifie()\n            }\n\n            //======================================================\n            //=========== \t\tindice 0 le mandala\t\t ===========\n            //======================================================\n            pb_4_f.push({\n                //\n                prenoms: [(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)()],\n                fractions: [F1,\"carmin\",F2,\"ocre jaune\",F3,\"turquoise\",F4,\"pourpre\"],\n                enonce: ``,\n                question: `Quelle est elle la couleur qui recouvre le plus de surface ?`,\n                correction: ``\n            });\n\n            //======================================================\n            //===========\t\tindice 1 le jardin\t \t ===========\n            //======================================================\n            pb_4_f.push({\n                // indice 1 le jardin\n                prenoms: [],\n                fractions: [F1,\"la culture des légumes\",F2,\"la culture des plantes aromatiques\",F3,\"une serre servant aux semis\",F4,\"la culture des fraisiers\"],\n                enonce: ``,\n                question: `Quelle est la culture qui occupe le plus de surface ?`,\n                correction: ``\n            });\n\n            //======================================================\n            //===========\tindice 2 le stade\t\t \t ===========\n            //======================================================\n            pb_4_f.push({\n                // indice 2 le stade\n                prenoms: [],\n                fractions: [F1,\"le pays organisateur\",F2,\"l'ensemble des supporters des deux équipes en jeu\",F3,\"les sponsors et officiels\",F4,\"les places en vente libre\"],\n                enonce: ``,\n                question: `Quelle est la catégorie la plus importante dans le stade ?`,\n                correction: ``\n            });\n\n            //======================================================\n            //===========\ténoncé indice 0 le mandala \t ===========\n            //======================================================\n            pb_4_f[0].enonce = `${pb_4_f[0].prenoms[0]} colorie un mandala selon les proportions suivantes :  $${pb_4_f[0].fractions[0].texFraction}$ en ${pb_4_f[0].fractions[1]}, `;\n            pb_4_f[0].enonce += `$${pb_4_f[0].fractions[2].texFraction}$ en  ${pb_4_f[0].fractions[3]}, `;\n            pb_4_f[0].enonce += `$${pb_4_f[0].fractions[4].texFraction}$ en  ${pb_4_f[0].fractions[5]} et `;\n            pb_4_f[0].enonce += `le reste en ${pb_4_f[0].fractions[7]}.`;\n\n            //======================================================\n            //===========\ténoncé indice 1 le jardin \t ===========\n            //======================================================\n            pb_4_f[1].enonce = `Un jardin est aménagé selon les proportions suivantes :  $${pb_4_f[1].fractions[0].texFraction}$ par ${pb_4_f[1].fractions[1]}, `;\n            pb_4_f[1].enonce += `$${pb_4_f[1].fractions[2].texFraction}$ par  ${pb_4_f[1].fractions[3]}, `;\n            pb_4_f[1].enonce += `$${pb_4_f[1].fractions[4].texFraction}$ par  ${pb_4_f[1].fractions[5]} et `;\n            pb_4_f[1].enonce += `le reste par ${pb_4_f[1].fractions[7]}.`;\n\n            //======================================================\n            //===========\ténoncé indice 2 le stade \t ===========\n            //======================================================\n            pb_4_f[2].enonce = `Pour chaque match, les places du stade sont mises en vente dans les proportions suivantes :  $${pb_4_f[2].fractions[0].texFraction}$ pour ${pb_4_f[2].fractions[1]}, `;\n            pb_4_f[2].enonce += `$${pb_4_f[2].fractions[2].texFraction}$ pour  ${pb_4_f[2].fractions[3]}, `;\n            pb_4_f[2].enonce += `$${pb_4_f[2].fractions[4].texFraction}$ pour  ${pb_4_f[2].fractions[5]} et `;\n            pb_4_f[2].enonce += `le reste pour ${pb_4_f[2].fractions[7]}.`;\n\n            //======================================================\n            //=========== \t\tCorrection Commune  \t ===========\n            //======================================================\n            listefrac2 = (0,_modules_Fractions_js__WEBPACK_IMPORTED_MODULE_2__.listeFractions)(F1, F2, F3, F4)\n            frac_meme_denom = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.enleve_element_bis)(listefrac2.listeMemeDenominateur)\n            frac_meme_denom_rangees = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.enleve_element_bis)(listefrac2.listeRangeeMemeDenominateur)\n            frac_rangees = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.enleve_element_bis)(listefrac2.listeRangee)\n            denominateurCommun = listefrac2.listeMemeDenominateur[0].den\n            for (let i = 0; i < 3; i++) {\n                pb_4_f[\n                    i\n                ].correction = `Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>`;\n\n                if (listefrac2.liste[0].den == denominateurCommun && listefrac2.liste[1].den==denominateurCommun &&listefrac2.liste[2].den==denominateurCommun) {\n                    pb_4_f[i].correction += `Les fractions de l'énoncé ont déjà le même dénominateur.`;\n                }\n                else {\n                    pb_4_f[i].correction += `Réduisons les fractions de l'énoncé au même dénominateur :  `;\n                    pb_4_f[i].correction += `$${listefrac2.liste[0].texFraction}$ `\n                    if (listefrac2.liste[0].den!=denominateurCommun) pb_4_f[i].correction += `$= ${listefrac2.listeMemeDenominateur[0].texFraction}$ ; `;\n                    else pb_4_f[i].correction += ` ; `\n                    pb_4_f[i].correction += `$${listefrac2.liste[1].texFraction}$ `\n                    if (listefrac2.liste[1].den!=denominateurCommun) pb_4_f[i].correction += `$= ${listefrac2.listeMemeDenominateur[1].texFraction}$ et `;\n                    else pb_4_f[i].correction += ` et `\n                    pb_4_f[i].correction += `$${listefrac2.liste[2].texFraction}$ `\n                    if (listefrac2.liste[2].den!=denominateurCommun) pb_4_f[i].correction +=`$= ${listefrac2.listeMemeDenominateur[2].texFraction}$.<br>`;\n                    else pb_4_f[i].correction +=`.<br>`\n\n                }\n\n            }\n\n            //======================================================\n            //===========\tCorrection indice 0 le mandala==========\n            //======================================================\n            pb_4_f[0].correction += `Calculons alors la fraction du mandala recouverte en `;\n\n            //======================================================\n            //===========\tCorrection indice 1 le jardin===========\n            //======================================================\n            pb_4_f[1].correction += `Calculons d'abord la fraction du jardin occupée par `;\n\n            //======================================================\n            //===========\ténoncé indice 2 le stade \t ===========\n            //======================================================\n            pb_4_f[2].correction += `Calculons d'abord la fraction du stade occupée par `;\n\n            //======================================================\n            //=========== \t\tCorrection Commune  \t ===========\n            //======================================================\n            for (let i = 0; i < 3; i++) {\n                pb_4_f[i].correction += `${pb_4_f[i].fractions[5]} : <br>`;\n                pb_4_f[\n                    i\n                ].correction += `$1-${pb_4_f[i].fractions[0].texFraction}-${pb_4_f[i].fractions[2].texFraction}-${pb_4_f[i].fractions[4].texFraction} = `;\n                pb_4_f[\n                    i\n                ].correction += `\\\\dfrac{${denominateurCommun}}{${denominateurCommun}}-${frac_meme_denom[0].texFraction}-${frac_meme_denom[1].texFraction}-${frac_meme_denom[2].texFraction} = `;\n                pb_4_f[\n                    i\n                ].correction += `\\\\dfrac{${denominateurCommun}-${frac_meme_denom[0].num}-${frac_meme_denom[1].num}-${frac_meme_denom[2].num}}{${denominateurCommun}} = `;\n                pb_4_f[i].correction += `${frac_meme_denom[3].texFraction}`;\n                if (frac_meme_denom[3].den != pb_4_f[i].fractions[6].den) {\n                    pb_4_f[\n                        i\n                    ].correction += ` = ${pb_4_f[i].fractions[6].texFraction}$`;\n                } else {\n                    pb_4_f[i].correction += `$`;\n                }\n            }\n\n            //======================================================\n            //=========== Conclusion indice 0 le mandala ===========\n            //======================================================\n\n            pb_4_f[0].correction += `<br>Le mandala est donc colorié de la façon suivante : $${pb_4_f[0].fractions[0].texFraction}$ en ${pb_4_f[0].fractions[1]}, `;\n            pb_4_f[0].correction += `$${pb_4_f[0].fractions[2].texFraction}$ en ${pb_4_f[0].fractions[3]}, `;\n            pb_4_f[0].correction += `$${pb_4_f[0].fractions[4].texFraction}$ en ${pb_4_f[0].fractions[5]} et `;\n            pb_4_f[0].correction += `$${pb_4_f[0].fractions[6].texFraction}$ en ${pb_4_f[0].fractions[7]}.`;\n\n            pb_4_f[0].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n            pb_4_f[0].correction += `le mandala est donc colorié de la façon suivante : $${frac_meme_denom[0].texFraction}$ en ${pb_4_f[0].fractions[1]}, `;\n            pb_4_f[0].correction += `$${frac_meme_denom[1].texFraction}$ en ${pb_4_f[0].fractions[3]}, `;\n            pb_4_f[0].correction += `$${frac_meme_denom[2].texFraction}$ en ${pb_4_f[0].fractions[5]} et `;\n            pb_4_f[0].correction += `$${frac_meme_denom[3].texFraction}$ en ${pb_4_f[0].fractions[7]}.`;\n\n            if (\n                pb_4_f[0].fractions[0].egal(pb_4_f[0].fractions[2]) &&\n                pb_4_f[0].fractions[0].egal(pb_4_f[0].fractions[4]) &&\n                pb_4_f[0].fractions[0].egal(pb_4_f[0].fractions[6]) \n            ) {\n                pb_4_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n                    `Les quatre fractions sont équivalentes, ${pb_4_f[0].prenoms[0]} colorie donc la même surface avec les quatre couleurs.`\n                )}`;\n            } else {\n                pb_4_f[0].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${frac_meme_denom_rangees[0].texFraction}$, $${frac_meme_denom_rangees[1].texFraction}$, $${frac_meme_denom_rangees[2].texFraction}$, $${frac_meme_denom_rangees[3].texFraction}$.`;\n\n                pb_4_f[0].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${frac_rangees[0].texFraction}$, $${frac_rangees[1].texFraction}$, $${frac_rangees[2].texFraction}$, $${frac_rangees[3].texFraction}$.`;\n\n                pb_4_f[0].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n                    `C'est donc en ${pb_4_f[0].fractions[\n                    pb_4_f[0].fractions.indexOf(frac_rangees[3]) + 1\n                    ]\n                    } que le mandala est le plus recouvert.`\n                )}`;\n            }\n\n            //======================================================\n            //=========== Conclusion indice 1 le jardin\t ===========\n            //======================================================\n            pb_4_f[1].correction += `<br>Le jardin est donc occupé de la façon suivante : $${pb_4_f[1].fractions[0].texFraction}$ par ${pb_4_f[1].fractions[1]}, `;\n            pb_4_f[1].correction += `$${pb_4_f[1].fractions[2].texFraction}$ par ${pb_4_f[1].fractions[3]}, `;\n            pb_4_f[1].correction += `$${pb_4_f[1].fractions[4].texFraction}$ par ${pb_4_f[1].fractions[5]} et `;\n            pb_4_f[1].correction += `$${pb_4_f[1].fractions[6].texFraction}$ par ${pb_4_f[1].fractions[7]}.`;\n\n            pb_4_f[1].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n            pb_4_f[1].correction += `le jardin est donc occupé de la façon suivante : $${frac_meme_denom[0].texFraction}$ par ${pb_4_f[1].fractions[1]}, `;\n            pb_4_f[1].correction += `$${frac_meme_denom[1].texFraction}$ par ${pb_4_f[1].fractions[3]}, `;\n            pb_4_f[1].correction += `$${frac_meme_denom[2].texFraction}$ par ${pb_4_f[1].fractions[5]} et `;\n            pb_4_f[1].correction += `$${frac_meme_denom[3].texFraction}$ par ${pb_4_f[1].fractions[7]}.`;\n\n            //let frac_rangees,frac_meme_denom_rangees;\n            if (\n                pb_4_f[1].fractions[0].egal(pb_4_f[1].fractions[2]) &&\n                pb_4_f[1].fractions[0].egal(pb_4_f[1].fractions[4]) &&\n                pb_4_f[1].fractions[0].egal(pb_4_f[1].fractions[6]) \n            ) {\n                pb_4_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n                    `Les quatre fractions sont équivalentes, la même surface du jardin est donc occupée par les quatre cultures.`\n                )}`;\n            } else {\n                pb_4_f[1].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${frac_meme_denom_rangees[0].texFraction}$, $${frac_meme_denom_rangees[1].texFraction}$, $${frac_meme_denom_rangees[2].texFraction}$, $${frac_meme_denom_rangees[3].texFraction}$.`;\n                pb_4_f[1].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${frac_rangees[0].texFraction}$, $${frac_rangees[1].texFraction}$, $${frac_rangees[2].texFraction}$, $${frac_rangees[3].texFraction}$.`;\n\n                pb_4_f[1].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n                    `C'est donc par ${pb_4_f[1].fractions[pb_4_f[1].fractions.indexOf(frac_rangees[3])+1]}\n                     que le jardin est le plus occupé.`\n                )}`;\n            }\n\n            //======================================================\n            //=========== Conclusion indice 2 le stade\t ===========\n            //======================================================\n            pb_4_f[2].correction += `<br>Le stade est donc occupé de la façon suivante : $${pb_4_f[2].fractions[0].texFraction}$ pour ${pb_4_f[2].fractions[1]}, `;\n            pb_4_f[2].correction += `$${pb_4_f[2].fractions[2].texFraction}$ pour ${pb_4_f[2].fractions[3]}, `;\n            pb_4_f[2].correction += `$${pb_4_f[2].fractions[4].texFraction}$ pour ${pb_4_f[2].fractions[5]} et `;\n            pb_4_f[2].correction += `$${pb_4_f[2].fractions[6].texFraction}$ pour ${pb_4_f[2].fractions[7]}.`;\n\n            pb_4_f[2].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n            pb_4_f[2].correction += `le stade est donc occupé de la façon suivante : $${frac_meme_denom[0].texFraction}$ pour ${pb_4_f[2].fractions[1]}, `;\n            pb_4_f[2].correction += `$${frac_meme_denom[1].texFraction}$ pour ${pb_4_f[2].fractions[3]}, `;\n            pb_4_f[2].correction += `$${frac_meme_denom[2].texFraction}$ pour ${pb_4_f[2].fractions[5]} et `;\n            pb_4_f[2].correction += `$${frac_meme_denom[3].texFraction}$ pour ${pb_4_f[2].fractions[7]}.`;\n\n            //let frac_rangees,frac_meme_denom_rangees;\n            if (\n                pb_4_f[2].fractions[0].egal(pb_4_f[2].fractions[2]) &&\n                pb_4_f[2].fractions[0].egal(pb_4_f[2].fractions[4]) &&\n                pb_4_f[2].fractions[0].egal(pb_4_f[2].fractions[6]) \n            ) {\n                pb_4_f[2].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n                    `Les quatre fractions sont équivalentes, chaque catégorie a donc la même importance dans le stade.`\n                )}`;\n            } else {\n\n                pb_4_f[2].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${frac_meme_denom_rangees[0].texFraction}$, $${frac_meme_denom_rangees[1].texFraction}$, $${frac_meme_denom_rangees[2].texFraction}$, $${frac_meme_denom_rangees[3].texFraction}$.`;\n                pb_4_f[2].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${frac_rangees[0].texFraction}$, $${frac_rangees[1].texFraction}$, $${frac_rangees[2].texFraction}$, $${frac_rangees[3].texFraction}$.`;\n                pb_4_f[2].correction += `<br> ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur_et_gras)(\n                    `C'est donc pour ${pb_4_f[2].fractions[\n                    pb_4_f[2].fractions.indexOf(frac_rangees[3]) + 1\n                    ]\n                    } que le nombre de places est le plus important.`\n                )}`;\n\n            }\n\n            switch (liste_type_de_questions[i]) {\n                case 1: // Triathlon des neiges --> VTT, ski de fond, course\n                    texte = `${pb_3_f[0].enonce} <br> ${pb_3_f[0].question}`;\n                    if (this.debug) {\n                        texte += `<br>`;\n                        texte += `<br> ${pb_3_f[0].correction}`;\n                        texte_corr = ``;\n                    } else {\n                        texte_corr = `${pb_3_f[0].correction}`;\n                    }\n                    break;\n                case 2: //Miss Math --> Noémie, Samia, Alexia\n                    texte = `${pb_3_f[1].enonce} <br> ${pb_3_f[1].question}`;\n                    if (this.debug) {\n                        texte += `<br>`;\n                        texte += `<br> ${pb_3_f[1].correction}`;\n                        texte_corr = ``;\n                    } else {\n                        texte_corr = `${pb_3_f[1].correction}`;\n                    }\n                    break;\n                case 3: // Mandala --> carmin, ocre jaune, turquoise, pourpre\n                    texte = `${pb_4_f[0].enonce} <br> ${pb_4_f[0].question}`;\n                    if (this.debug) {\n                        texte += `<br>`;\n                        texte += `<br> ${pb_4_f[0].correction}`;\n                        texte_corr = ``;\n                    } else {\n                        texte_corr = `${pb_4_f[0].correction}`;\n                    }\n                    break;\n                case 4: // Jardin --> légumes, plantes aromatiques, semis, fraisiers\n                    texte = `${pb_4_f[1].enonce} <br> ${pb_4_f[1].question}`;\n                    if (this.debug) {\n                        texte += `<br>`;\n                        texte += `<br> ${pb_4_f[1].correction}`;\n                        texte_corr = ``;\n                    } else {\n                        texte_corr = `${pb_4_f[1].correction}`;\n                    }\n                    break;\n                case 5: // Stade --> pays organisatuers, supporters, sponsors, vente libre\n                    texte = `${pb_4_f[2].enonce} <br> ${pb_4_f[2].question}`;\n                    if (this.debug) {\n                        texte += `<br>`;\n                        texte += `<br> ${pb_4_f[2].correction}`;\n                        texte_corr = ``;\n                    } else {\n                        texte_corr = `${pb_4_f[2].correction}`;\n                    }\n                    break;\n            }\n            if (this.liste_questions.indexOf(texte) == -1) {\n                // Si la question n'a jamais été posée, on en créé une autre\n                this.liste_questions.push(texte);\n                this.liste_corrections.push(texte_corr);\n                i++;\n            }\n            cpt++;\n        }\n        (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n    };\n    //this.besoin_formulaire_numerique = ['Niveau de difficulté',4,\"1 : nombre enier positif\\n2 : nombre décimal positif\\n3 : nombre enier positif inférieur à un\\n4 : Mélange\"];\n}\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/beta/beta4C25-00.js?");

/***/ })

}]);