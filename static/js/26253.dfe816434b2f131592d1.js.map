{"version":3,"file":"js/26253.dfe816434b2f131592d1.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5G24-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { point, pointAdistance, rotation, translation, vecteur, barycentre, codeSegment, codeAngle, nommePolygone, mathalea2d, triangle2points2longueurs } from '../../modules/2d.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, creerNomDePolygone, texteEnCouleur } from '../../modules/outils.js'\nexport const titre = 'Justifier que deux triangles sont égaux'\n\n/**\n * Deux triangles égaux sont codés, il faut reconnaitre les côtés homologues\n * @author Rémi Angot\n * Référence 5G24-1\n*/\nexport default function TrianglesEgaux () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Les triangles sont-ils égaux ? Si ils sont égaux, justifier la réponse.'\n  this.nbQuestions = 4\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 50 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.spacing = 2\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n\n    const typeQuestionsDisponibles = ['CCC', 'CAC', 'ACA', 'AAA', 'CC']\n\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      let l1 = randint(40, 70)\n      let l2 = randint(40, 80, l1)\n      let l3 = randint(40, l1 + l2 - 10, [l1, l2])\n      l1 /= 10\n      l2 /= 10\n      l3 /= 10\n      const A = point(0, 0)\n      const B = pointAdistance(A, l1)\n      const p1 = triangle2points2longueurs(A, B, l2, l3)\n      const C = p1.listePoints[2]\n      const O = barycentre(p1)\n      const v = vecteur(Math.max(Math.abs(A.x - B.x), Math.abs(C.x - B.x), Math.abs(A.x - C.x)) + 4, 0)\n      const O2 = translation(O, v)\n      const temp = translation(p1, v)\n      temp.isVisible = false\n      const p2 = rotation(temp, O2, randint(0, 360))\n      const D = p2.listePoints[0]\n      const E = p2.listePoints[1]\n      const F = p2.listePoints[2]\n      const code1 = codeSegment(A, B, '|')\n      const code2 = codeSegment(D, E, '|')\n      const code3 = codeSegment(B, C, '||')\n      const code4 = codeSegment(E, F, '||')\n      const code5 = codeSegment(C, A, '|||')\n      const code6 = codeSegment(F, D, '|||')\n      const codeA1 = codeAngle(A, B, C)\n      const codeA2 = codeAngle(D, E, F)\n      const codeA3 = codeAngle(B, C, A, 0.8, 'X')\n      const codeA4 = codeAngle(E, F, D, 0.8, 'X')\n      const codeA5 = codeAngle(C, A, B, 0.8, '||')\n      const codeA6 = codeAngle(F, D, E, 0.8, '||')\n      const nom1 = creerNomDePolygone(3)\n      const nom2 = creerNomDePolygone(3, nom1)\n      const nommeP1 = nommePolygone(p1, nom1)\n      const nommeP2 = nommePolygone(p2, nom2)\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'CCC':\n          texte = '<br>' + mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, code3, code4, code5, code6, nommeP1, nommeP2)\n          texteCorr = 'Ces deux triangles sont égaux car ils ont leurs trois côtés de même longueur 2 à 2 (CCC).'\n          break\n        case 'CAC':\n          texte = '<br>' + mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, code3, code4, codeA1, codeA2, nommeP1, nommeP2)\n          texteCorr = 'Ces deux triangles sont égaux car ils ont ont un angle de même mesure compris entre deux côtés de même longueur 2 à 2 (CAC). '\n          break\n        case 'ACA':\n          texte = '<br>' + mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, codeA1, codeA2, codeA5, codeA6, nommeP1, nommeP2)\n          texteCorr = 'Ces deux triangles sont égaux car ils ont un côté de même longueur compris entre deux angles de même mesure 2 à 2 (ACA). '\n          break\n        case 'AAA':\n          texte = '<br>' + mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, codeA1, codeA2, codeA3, codeA4, codeA5, codeA6, nommeP1, nommeP2)\n          texteCorr = `On ne peut pas déterminer si ces triangles sont égaux. Ils ont la même forme mais leurs longueurs peuvent être différentes. On dit qu'ils sont ${texteEnCouleur('semblables')}`\n          break\n        case 'CC':\n          texte = '<br>' + mathalea2d({\n            xmin: Math.min(A.x, B.x, C.x, D.x, E.x, F.x) - 3,\n            ymin: Math.min(A.y, B.y, C.y, D.y, E.y, F.y) - 3,\n            xmax: Math.max(A.x, B.x, C.x, D.x, E.x, F.x) + 3,\n            ymax: Math.max(A.y, B.y, C.y, D.y, E.y, F.y) + 3,\n            scale: 0.5\n          },\n          p1, p2, code1, code2, code5, code6, nommeP1, nommeP2)\n          texteCorr = 'On ne peut pas déterminer si ces triangles sont égaux.'\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","TrianglesEgaux","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","spacing","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","listeTypeQuestions","combinaisonListes","texte","texteCorr","i","cpt","l1","randint","l2","l3","A","point","B","pointAdistance","p1","triangle2points2longueurs","C","listePoints","O","barycentre","v","vecteur","Math","max","abs","x","O2","translation","temp","isVisible","p2","rotation","D","E","F","code1","codeSegment","code2","code3","code4","code5","code6","codeA1","codeAngle","codeA2","codeA3","codeA4","codeA5","codeA6","nom1","creerNomDePolygone","nom2","nommeP1","nommePolygone","nommeP2","mathalea2d","xmin","min","ymin","y","xmax","ymax","scale","texteEnCouleur","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}