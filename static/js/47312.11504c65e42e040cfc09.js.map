{"version":3,"file":"js/47312.11504c65e42e040cfc09.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C10-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, creerCouples, choice, texNombre, texNombre2, calcul } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const interactifReady = true\nexport const interactifType = 'qcm'\nexport const amcType = 'qcmMono' // type de question AMC\n\nexport const titre = 'Tables de multiplications et nombres décimaux'\n\n/**\n * Multiplier deux nombres décimaux\n * @author Rémi Angot\n * Référence 6C10-3\n */\nexport default function ExerciceTablesMultiplicationsEtDecimaux (\n  tablesParDefaut = '2-3-4-5-6-7-8-9'\n) {\n  // Multiplier deux nombres\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = tablesParDefaut\n  this.titre = titre\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.tailleDiaporama = 100\n  this.nbQuestions = 10\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (!this.sup) {\n      // Si aucune table n'est saisie\n      this.sup = '2-3-4-5-6-7-8-9'\n    }\n    let tables = []\n    if (typeof this.sup === 'number') {\n      // Si c'est un nombre c'est qu'il y a qu'une seule table\n      tables[0] = this.sup\n    } else {\n      tables = this.sup.split('-') // Sinon on crée un tableau à partir des valeurs séparées par des ;\n    }\n    const couples = creerCouples(\n      tables,\n      [2, 3, 4, 5, 6, 7, 8, 9, 10],\n      this.nbQuestions\n    ) // Liste tous les couples possibles (2,3)≠(3,2)\n    for (let i = 0, a, b, k1, k2, couple, texte, texteCorr; i < this.nbQuestions; i++) {\n      this.autoCorrection[i] = {}\n      a = couples[i][0]\n      b = couples[i][1]\n      couple = choice([[1, 10], [1, 100], [1, 1000], [10, 100], [10, 1000], [100, 100], [100, 1000]])\n      k1 = couple[0]\n      k2 = couple[1]\n      a = calcul(a / k1)\n      b = calcul(b / k2)\n      if (a === 1) {\n        a = 0.01\n      }\n      if (b === 1) {\n        b = 0.1\n      }\n      texte =\n        '$ ' + texNombre(a) + ' \\\\times ' + texNombre(b) + ' = \\\\dotfill $'\n      texteCorr =\n        '$ ' +\n        texNombre(a) +\n        ' \\\\times ' +\n        texNombre(b) +\n        ' = ' +\n        texNombre(calcul(a * b)) +\n        ' $'\n      /**********************************/\n      // QCM\n      /**********************************/\n      this.autoCorrection[i].enonce = `${texte}\\n`\n      this.autoCorrection[i].propositions = [\n        {\n          texte: `$${texNombre2(a * b)}$`,\n          statut: true,\n          feedback: 'Correct !'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b / 10))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b * 10))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b / 100))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        },\n        {\n          texte: `$${texNombre2(calcul(a * b * 100))}$`,\n          statut: false,\n          feedback: 'Compte le nombre de zéros dans chaque facteur'\n        }\n      ]\n      this.autoCorrection[i].options = {\n        ordered: false\n      }\n      if (this.interactif) {\n        texte += propositionsQcm(this, i).texte\n      }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = [\n    'Choix des tables',\n    'Nombres séparés par des tirets'\n  ] // Texte, tooltip\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","interactifReady","interactifType","amcType","titre","ExerciceTablesMultiplicationsEtDecimaux","tablesParDefaut","Exercice","this","sup","consigne","spacing","tailleDiaporama","nbQuestions","nouvelleVersion","autoCorrection","listeQuestions","listeCorrections","tables","split","couples","creerCouples","a","b","k1","k2","couple","texte","texteCorr","i","choice","calcul","texNombre","enonce","propositions","texNombre2","statut","feedback","options","ordered","interactif","propositionsQcm","push","listeQuestionsToContenu","besoinFormulaireTexte","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}