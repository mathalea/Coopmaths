{"version":3,"file":"js/71870.855f5355f5276a91b820.js","mappings":"sMAIO,MAAMA,EAAQ,wDAQN,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKH,MAAQA,EACbG,KAAKC,SAAW,GAChBD,KAAKE,YAAc,EACnBF,KAAKG,uBAAwB,EAC7BH,KAAKI,OAAS,EACdJ,KAAKK,WAAa,EAClBL,KAAKM,gBAAkB,WACrBN,KAAKO,eAAiB,GACtBP,KAAKQ,iBAAmB,GACxB,IAAIC,EAAS,CAAC,EAAG,GAAIC,EAAY,GAAIC,EAAQ,GAQzCC,GAAOC,EAAAA,EAAAA,KAA0B,EAAG,MAAK,GAC7CF,EAAS,iDAAgDC,EAAK,KAAKA,EAAK,8CAA8CA,EAAK,KAAKA,EAAK,YACrID,GAAU,uFACV,IAAIG,EAAQ,CAAC,IAAK,KAAM,MAAO,IAAK,IAAK,IAAK,KAC1CC,GAAIC,EAAAA,EAAAA,KAAM,EAAG,EAAG,KAChBC,GAAIC,EAAAA,EAAAA,KAAeH,GAAGI,EAAAA,EAAAA,KAAQ,EAAG,IACjCC,GAAIC,EAAAA,EAAAA,KAAWJ,EAAGF,GAAGI,EAAAA,EAAAA,KAAQ,GAAI,MAAMA,EAAAA,EAAAA,KAAQ,EAAG,IAAM,IACxDG,GAAOC,EAAAA,EAAAA,KAAOR,EAAGE,EAAI,SAASO,GAAOD,EAAAA,EAAAA,KAAOR,EAAGK,EAAI,SAEnDK,GAAKC,EAAAA,EAAAA,KAAgCT,EAAGK,GACxCK,GAAKD,EAAAA,EAAAA,KAAgCN,EAAGI,GAC5CF,EAAKM,MAAQ,OACbJ,EAAKI,MAAQ,QACb,IAAIC,GAAKC,EAAAA,EAAAA,KAAOb,GAAGc,EAAAA,EAAAA,MAAOZ,EAAAA,EAAAA,KAAQ,GAAI,IAAM,KACxCa,GAAKF,EAAAA,EAAAA,KAAOV,GAAGW,EAAAA,EAAAA,MAAOZ,EAAAA,EAAAA,KAAQ,GAAI,IAAM,KACxCc,GAAKC,EAAAA,EAAAA,KAAoBT,EAAII,EAAIjB,EAAK,GAAI,GAC1CuB,GAAKD,EAAAA,EAAAA,KAAoBT,EAAII,EAAIjB,EAAK,GAAI,GAC1CwB,GAAKF,EAAAA,EAAAA,KAAoBP,EAAIK,EAAIpB,EAAK,GAAI,GAC1CyB,GAAKH,EAAAA,EAAAA,KAAoBP,EAAIK,EAAIpB,EAAK,GAAI,GAC1C0B,GAAKC,EAAAA,EAAAA,KAAsBN,EAAIE,GAC/BK,GAAKD,EAAAA,EAAAA,KAAsBH,EAAIC,GACnCC,EAAGV,MAAQ,QACXY,EAAGZ,MAAQ,QAGX,IAAIa,EAAiDC,EACjDC,EAAMC,EAAMC,EAAMC,EADXC,EAAe,GAAIC,EAAmB,GAE7CC,GAAQC,EAAAA,EAAAA,KAActC,EAAK,IAAIuC,EAAAA,EAAAA,KAAWlB,EAAIE,EAAI,KAAM,SAAU,QAAS,EAAG,IAAI,GAClFiB,GAAQF,EAAAA,EAAAA,KAActC,EAAK,IAAIuC,EAAAA,EAAAA,KAAWhB,EAAIF,EAAI,KAAM,SAAU,QAAS,EAAG,IAAI,GAClFoB,GAAQH,EAAAA,EAAAA,KAActC,EAAK,IAAIuC,EAAAA,EAAAA,KAAWf,EAAIC,EAAI,KAAM,SAAU,QAAS,EAAG,IAAI,GAClFiB,GAAQJ,EAAAA,EAAAA,KAActC,EAAK,IAAIuC,EAAAA,EAAAA,KAAWd,EAAID,EAAI,KAAM,SAAU,QAAS,EAAG,IAAI,GApCpE,IAAUmB,EAAAA,EAsCN,EAAtBb,GArCec,EAAAA,EAAAA,MAAoBrC,EAAAA,EAAAA,KAAQ,EAAGoC,IAC9BE,QAAOtC,EAAAA,EAAAA,KAAQ,EAAGoC,IAAOG,WAqCzCjD,GAASkD,EAAAA,EAAAA,KAAkB5C,EAAE6C,EAAG7C,EAAE8C,EAAG,EAAG,GAAKnB,GAC7CD,GAAQqB,EAAAA,EAAAA,KAAY,CAAEF,EAAGnD,EAAO,GAAIoD,EAAGpD,EAAO,GAAI8C,KAAM,EAAGQ,OAAQ,KACnEtB,EAAMsB,OAAS,GACftB,EAAMb,MAAQ,SACda,EAAMuB,QAAU,GAEhBjB,EAAakB,KAAKxB,EAAOH,EAAIE,EAAIS,EAAOG,EAAOC,EAAOC,GACtDN,EAAiBiB,KAAKxB,EAAOH,EAAIE,GAAI0B,EAAAA,EAAAA,KAAWnD,IAAIoD,EAAAA,EAAAA,KAAWpD,GAAIkC,EAAOG,EAAOC,EAAOC,GACxFN,EAAiBiB,KAAK3C,EAAME,GAAM4C,EAAAA,EAAAA,KAAiBnC,EAAIE,EAAI,OAAQrB,EAAM,KAAKsD,EAAAA,EAAAA,KAAiBhC,EAAIC,EAAI,QAASvB,EAAM,KAItHJ,GAAc,qEAAoEgC,sBAClFC,EAAO0B,KAAKC,IAAIrC,EAAG2B,EAAI,EAAGzB,EAAGyB,EAAI,EAAGxB,EAAGwB,EAAI,EAAGvB,EAAGuB,EAAI,EAAG7C,EAAE6C,EAAI,GAC9DhB,EAAOyB,KAAKC,IAAIrC,EAAG4B,EAAI,EAAG1B,EAAG0B,EAAI,EAAGzB,EAAGyB,EAAI,EAAGxB,EAAGwB,EAAI,EAAG9C,EAAE8C,EAAI,GAC9DhB,EAAOwB,KAAKE,IAAItC,EAAG2B,EAAI,EAAGzB,EAAGyB,EAAI,EAAGxB,EAAGwB,EAAI,EAAGvB,EAAGuB,EAAI,EAAG7C,EAAE6C,EAAI,GAC9Dd,EAAOuB,KAAKE,IAAItC,EAAG4B,EAAI,EAAG1B,EAAG0B,EAAI,EAAGzB,EAAGyB,EAAI,EAAGxB,EAAGwB,EAAI,EAAG9C,EAAE8C,EAAI,GAE9DW,EAAAA,GAAAA,kBAA4B,CAAC7B,EAAMC,EAAMC,EAAMC,GAE/C9C,KAAKO,eAAe0D,KAAKtD,GAAQ8D,EAAAA,EAAAA,KAAW,CAAEC,KAAM/B,EAAMgC,KAAM/B,EAAMgC,KAAM/B,EAAMgC,KAAM/B,EAAMgC,YAAa,GAAIC,MAAO,IAAOhC,IAC7H/C,KAAKQ,iBAAiByD,KAAKvD,GAAY+D,EAAAA,EAAAA,KAAW,CAAEC,KAAM/B,EAAMgC,KAAM/B,EAAMgC,KAAM/B,EAAMgC,KAAM/B,EAAMgC,YAAa,GAAIC,MAAO,IAAO/B,KACnIgC,EAAAA,EAAAA,KAAwBhF,S,gBChFb,SAASD,IAItBC,KAAKH,MAAQ,GACbG,KAAKiF,YAAa,EAclBjF,KAAKC,SAAW,GAChBD,KAAKkF,mBAAqB,GAC1BlF,KAAKmF,aAAe,GACpBnF,KAAKO,eAAiB,GACtBP,KAAKQ,iBAAmB,GACxBR,KAAKoF,QAAU,GACfpF,KAAKqF,kBAAoB,GACzBrF,KAAKsF,eAAiB,GACtBtF,KAAKuF,sBAAwB,GAK7BvF,KAAKwF,QAAU,EACfxF,KAAKyF,YAAc,EAKnBzF,KAAK0F,mBAAoB,EACzB1F,KAAK2F,cAAgB,GACrB3F,KAAK4F,oBAAqB,EAC1B5F,KAAKG,uBAAwB,EAC7BH,KAAKI,OAAS,EACdJ,KAAKK,WAAa,EAClBL,KAAK6F,kBAAmB,EACxB7F,KAAK8F,sBAAuB,EAC5B9F,KAAK+F,mBAAoB,EACzB/F,KAAKgG,uBAAwB,EAM7BhG,KAAKiG,QAAS,EACdjG,KAAKkG,gBAAkB,GAKvBlG,KAAKE,YAAc,GACnBF,KAAKmG,+BAAgC,EACrCnG,KAAKoG,qBAAsB,EAC3BpG,KAAKqG,MAAQ,GAEbrG,KAAKsG,YAAa,EAClBtG,KAAKuG,uBAAwB,EAE7BvG,KAAKwG,2BAA4B,EACjCxG,KAAKyG,uBAAwB,EAC7BzG,KAAK0G,6BAA8B,EAEnC1G,KAAK2G,4BAA6B,EAClC3G,KAAK4G,wBAAyB,EAC9B5G,KAAK6G,8BAA+B,EAEpC7G,KAAK8G,4BAA6B,EAClC9G,KAAK+G,wBAAyB,EAC9B/G,KAAKgH,8BAA+B,EAMpChH,KAAKiH,cAAe,EAMpBjH,KAAKkH,eAAiB,GAEtBlH,KAAKM,gBAAkB,SAAU6G,KAQjCnH,KAAKoH,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAASrH,KAAKkH,eAAiB,IACnC,IAAIK,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAI9D,YAE/C,QAAI1D,KAAKkH,eAAeQ,QAAQH,IAAmB,KAGjDvH,KAAKkH,eAAejD,KAAKsD,IAClB,I","sources":["webpack://mathalea/./src/js/exercices/6e/6G25.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,calcul,choisitLettresDifferentes,lettreDepuisChiffre} from '../../modules/outils.js'\nimport {point,tracePoint,pointAdistance,labelPoint,droite,droiteParPointEtPerpendiculaire,codageMediatrice,segmentAvecExtremites,cercle,pointIntersectionLC,dansLaCibleCarree,cibleCarree,homothetie,similitude,texteParPoint,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Construire des médiatrices avec cible auto-corrective'\n\n/**\n * Construction de médiatrices avec dispositif d'auto-correction aléatoire\n * Ref 6G25\n * @author Jean-Claude Lhote\n * Publié le 30/11/2020\n */\nexport default function Construire_mediatrices_6e() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 1;\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let result = [0, 0], texteCorr = \"\", texte = \"\", num1, num2\n   \n    let celluleAlea = function (rang) {\n      let lettre = lettreDepuisChiffre(randint(1, rang))\n      let chiffre = Number(randint(1, rang)).toString()\n      return lettre + chiffre\n    }\n    // On prépare la figure...\n    let noms = choisitLettresDifferentes(4, 'QI',true)\n    texte = `Construire la médiatrice $(d_1)$ du segment $[${noms[0]}${noms[1]}]$ et la médiatrice $(d_2)$ du segment $[${noms[2]}${noms[3]}]$.<br>`\n    texte += `Prolonger les droites $(d_1)$ et $(d_2)$ pour obtenir leur point d'intersection.<br>`\n    let marks = ['/', '//', '///', 'x', 'o', 'S', 'V']\n    let I = point(0, 0, 'I')\n    let A = pointAdistance(I, randint(3, 6))\n    let B = similitude(A, I, randint(65, 150), randint(8, 15) / 10)\n    let medA = droite(I, A, `(d_1)`), medB = droite(I, B, `(d_2)`)\n\n    let dA = droiteParPointEtPerpendiculaire(A, medA)\n    let dB = droiteParPointEtPerpendiculaire(B, medB)\n    medA.color = 'blue'\n    medB.color = 'green'\n    let cA = cercle(A, calcul(randint(25, 40) / 20))\n    let cB = cercle(B, calcul(randint(45, 60) / 20))\n    let A1 = pointIntersectionLC(dA, cA, noms[0], 1)\n    let A2 = pointIntersectionLC(dA, cA, noms[1], 2)\n    let B1 = pointIntersectionLC(dB, cB, noms[2], 1)\n    let B2 = pointIntersectionLC(dB, cB, noms[3], 2)\n    let sA = segmentAvecExtremites(A1, A2)\n    let sB = segmentAvecExtremites(B1, B2)\n    sA.color = 'black'\n    sB.color = 'black'\n\n\n    let cible, objetsEnonce = [], objetsCorrection = [], cellule\n    let xMin, yMin, xMax, yMax\n    let nomA1 = texteParPoint(noms[0], homothetie(A1, A2, 1.1), 'milieu', 'black', 1, '', true)\n    let nomA2 = texteParPoint(noms[1], homothetie(A2, A1, 1.1), 'milieu', 'black', 1, '', true)\n    let nomB1 = texteParPoint(noms[2], homothetie(B1, B2, 1.1), 'milieu', 'black', 1, '', true)\n    let nomB2 = texteParPoint(noms[3], homothetie(B2, B1, 1.1), 'milieu', 'black', 1, '', true)\n\n    cellule = celluleAlea(6)\n    result = dansLaCibleCarree(I.x, I.y, 6, 0.6, cellule)\n    cible = cibleCarree({ x: result[0], y: result[1], rang: 6, taille: 0.6 })\n    cible.taille = 0.6\n    cible.color = 'orange'\n    cible.opacite = 0.7\n\n    objetsEnonce.push(cible, sA, sB, nomA1, nomA2, nomB1, nomB2)\n    objetsCorrection.push(cible, sA, sB, tracePoint(I), labelPoint(I), nomA1, nomA2, nomB1, nomB2)\n    objetsCorrection.push(medA, medB, codageMediatrice(A1, A2, 'blue', marks[1]), codageMediatrice(B1, B2, 'green', marks[2]))\n\n    //      objetsCorrection.push(segment(M[i],N[i],arcenciel(i)),codageMediatrice(M[i],N[i],arcenciel(i+5),marks[i])) \n    //      objetsCorrection.push(traceCompas(A1,N[i],20),traceCompas(B,N[i],20))\n    texteCorr += `Le point $I$ d'intersection des deux médiatrices est dans la case ${cellule} de la grille.<br>`\n    xMin = Math.min(A1.x - 1, A2.x - 1, B1.x - 1, B2.x - 1, I.x - 4)\n    yMin = Math.min(A1.y - 1, A2.y - 1, B1.y - 1, B2.y - 1, I.y - 4)\n    xMax = Math.max(A1.x + 1, A2.x + 1, B1.x + 1, B2.x + 1, I.x + 4)\n    yMax = Math.max(A1.y + 1, A2.y + 1, B1.y + 1, B2.y + 1, I.y + 4)\n\n    context.fenetreMathalea2d = [xMin, yMin, xMax, yMax]\n\n    this.listeQuestions.push(texte + mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsEnonce))\n    this.listeCorrections.push(texteCorr + mathalea2d({ xmin: xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 0.7 }, objetsCorrection))\n    listeQuestionsToContenu(this)\n  }\n}\n\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Construire_mediatrices_6e","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","result","texteCorr","texte","noms","choisitLettresDifferentes","marks","I","point","A","pointAdistance","randint","B","similitude","medA","droite","medB","dA","droiteParPointEtPerpendiculaire","dB","color","cA","cercle","calcul","cB","A1","pointIntersectionLC","A2","B1","B2","sA","segmentAvecExtremites","sB","cible","cellule","xMin","yMin","xMax","yMax","objetsEnonce","objetsCorrection","nomA1","texteParPoint","homothetie","nomA2","nomB1","nomB2","rang","lettreDepuisChiffre","Number","toString","dansLaCibleCarree","x","y","cibleCarree","taille","opacite","push","tracePoint","labelPoint","codageMediatrice","Math","min","max","context","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","indexOf"],"sourceRoot":""}