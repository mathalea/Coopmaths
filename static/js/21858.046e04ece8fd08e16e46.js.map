{"version":3,"file":"js/21858.046e04ece8fd08e16e46.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaEqCarreDansC.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { listeQuestionsToContenu, randint, ecritureParentheseSiNegatif } from '../../modules/outils.js'\nimport { context } from '../../modules/context.js'\nimport Exercice from '../Exercice.js'\nimport { complex } from 'mathjs'\nexport const titre = 'Racine carrée nombre complexe'\n\n/**\n * Description didactique de l'exercice\n * @author Eric Schrafstetter\n * Référence\n*/\nexport default function ResoudreDesEquationsCarreeDansC () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Résoudre dans $\\\\mathbb{C}$ les équations :'\n  this.nbQuestions = 2\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1)\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, texte, texteCorr, a, b, z, zr, s, zx, zsol, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n\n      a = randint(-20, 20, 0) // on part d'un complexe a+ib\n      b = randint(-20, 20, 0)\n      z = complex(a * a - b * b, 2 * a * b) // que l'on met au carré\n      zr = z.toPolar().r // module du carré\n      s = z.re + zr // Somme de E1 et E3\n      zx = Math.sqrt(s / 2)\n      zsol = complex(zx, z.im / 2 / zx) // Solution du système\n      // Enoncé\n      texte = `$z^2=${z}$`\n      // Corrigé\n      texteCorr = 'Remplaçons $z$ par sa forme algébrique $a+ib$ :'\n      texteCorr += `<br>$z^2=(a+ib)^2=${z}$`\n      texteCorr += '<br>Or $(a+ib)^2=a^2+2abi+(ib)^2=a^2+2abi-b^2$'\n      texteCorr += '<br>De plus, si 2 nombres complexes sont égaux, c\\'est qu\\'ils ont la même partie réelle et la même partie imaginaire.'\n      texteCorr += `<br>En $\\\\textbf{\\\\text{identifiant les parties réelles}}$ à gauche et à droite de l'égalité<br>$a^2+2abi-b^2=${z}$<br>on obtient :`\n      texteCorr += `<br>$\\\\begin{matrix}(E_1) & a^2-b^2=${z.re} \\\\end{matrix}$`\n      texteCorr += '<br>De même, en $\\\\textbf{\\\\text{identifiant les parties imaginaires}}$ :'\n      texteCorr += `<br>$\\\\begin{matrix}(E_2) & 2ab=${z.im} \\\\end{matrix}$`\n      texteCorr += '<br>Afin de résoudre plus facilement ce système, ajoutons une $\\\\textbf{\\\\text{troisième équation}}$ en utilisant les modules :'\n      texteCorr += `<br>$\\\\mid z^2\\\\mid=\\\\mid${z}\\\\mid$`\n      texteCorr += '<br>avec $\\\\mid z^2\\\\mid=\\\\mid z\\\\mid^2=a^2+b^2$'\n      texteCorr += ` et $\\\\mid${z}\\\\mid=`\n      texteCorr += `\\\\sqrt{${ecritureParentheseSiNegatif(z.re)}^2+${ecritureParentheseSiNegatif(z.im)}^2}=${zr}$`\n      texteCorr += '<br>Ce qui permet d\\'obtenir l\\'équation :'\n      texteCorr += `<br>$\\\\begin{matrix}(E_3) & a^2+b^2=${zr} \\\\end{matrix}$`\n      texteCorr += `<br>En faisant $(E_1)$ + $(E_3)$ : $2a^2=${s}$`\n      texteCorr += `<br>qui admet 2 solutions $a=${-zsol.re}$ ou $a=${zsol.re}$`\n      texteCorr += `<br>En remplaçant $a=${-zsol.re}$ dans $(E_2)$ : `\n      texteCorr += `$2\\\\times (${-zsol.re}) \\\\times b = ${z.im}$`\n      texteCorr += `<br>On trouve $b=${-zsol.im}$`\n      texteCorr += `<br>De même, en remplaçant $a=${zsol.re}$ dans $(E_2)$ : `\n      texteCorr += `$2\\\\times ${zsol.re} \\\\times b = ${z.im}$`\n      texteCorr += `<br>On trouve $b=${zsol.im}$`\n      texteCorr += `<br>$\\\\underline{\\\\text{Conclusion}}$ : L'équation admet 2 solutions $z=${zsol}$ et $z=${zsol.neg()}$`\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 3]\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","ResoudreDesEquationsCarreeDansC","sup","context","texte","texteCorr","a","b","z","zr","s","zx","zsol","cpt","randint","complex","toPolar","r","re","Math","sqrt","im","ecritureParentheseSiNegatif","neg","listeQuestionsToContenu"],"sourceRoot":""}