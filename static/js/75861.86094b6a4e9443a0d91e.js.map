{"version":3,"file":"js/75861.86094b6a4e9443a0d91e.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4G22.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, combinaisonListes, calcul, texNombrec, creerNomDePolygone, texNombre } from '../../modules/outils.js'\nexport const titre = 'Problèmes utilisant le théorème de Pythagore'\n\n/**\n * Problèmes utilisant le théorème de Pythagore ou sa réciproque et des propriétés des quadrilatères particuliers.\n *\n * * Dans un losange, on connait la longueur du côté et une diagonale, il faut calculer l'autre.\n * * Dans un rectangle on connait la longueur et une diagonale, il faut calculer la largeur.\n * * Dans un rectangle on connait la longueur et la largeur, il faut calculer la diagonale.\n * * Est-ce qu'un parallélogramme est un losange ? On peut démontrer que les diagonales sont perpendiculaires ou pas.\n * * Est-ce qu'un parallélogramme est un rectangle ? On peut démontrer qu'il possède un angle droit ou pas .\n * @author Rémi Angot\n * 4G22\n */\nexport default function ProblemesPythagore () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 2\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 1\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1.5)\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles\n    this.sup = parseInt(this.sup)\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = [\n        'losange',\n        'rectangle_diagonale_connue',\n        'rectangle_diagonale_a_trouver'\n      ]\n    } else if (this.sup === 2) {\n      if (this.nbQuestions > 2) {\n        typesDeQuestionsDisponibles = [\n          'parallelogramme_est_losange',\n          'parallelogramme_n_est_pas_losange',\n          'parallelogramme_est_rectangle',\n          'parallelogramme_n_est_pas_rectangle'\n        ]\n      } else {\n        typesDeQuestionsDisponibles = [\n          choice(['parallelogramme_est_losange', 'parallelogramme_n_est_pas_losange']),\n          choice(['parallelogramme_est_rectangle', 'parallelogramme_n_est_pas_rectangle'])\n        ]\n      }\n    } else {\n      if (this.nbQuestions >= 5) {\n        typesDeQuestionsDisponibles = [\n          'losange',\n          'rectangle_diagonale_connue',\n          'rectangle_diagonale_a_trouver',\n          'parallelogramme_est_losange',\n          'parallelogramme_n_est_pas_losange',\n          'parallelogramme_est_rectangle',\n          'parallelogramme_n_est_pas_rectangle'\n        ]\n      } else {\n        typesDeQuestionsDisponibles = [\n          'losange',\n          'rectangle_diagonale_connue',\n          'rectangle_diagonale_a_trouver',\n          choice(['parallelogramme_est_losange', 'parallelogramme_n_est_pas_losange']),\n          choice(['parallelogramme_est_rectangle',\n            'parallelogramme_n_est_pas_rectangle'])\n        ]\n      }\n    }\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    )\n    const listeTripletsPythagoriciens = [\n      [3, 4, 5],\n      [5, 12, 13],\n      [6, 8, 10],\n      [7, 24, 25],\n      [8, 15, 17],\n      [9, 12, 15],\n      [9, 40, 41],\n      [10, 24, 26],\n      [11, 60, 61],\n      [12, 16, 20],\n      [12, 35, 37],\n      [13, 84, 85],\n      [14, 48, 50],\n      [15, 20, 25],\n      [15, 36, 39],\n      [16, 30, 34],\n      [16, 63, 65],\n      [18, 24, 30],\n      [18, 80, 82],\n      [20, 21, 29],\n      [20, 48, 52],\n      [21, 28, 35],\n      [21, 72, 75],\n      [24, 32, 40],\n      [24, 45, 51],\n      [24, 70, 74],\n      [25, 60, 65],\n      [27, 36, 45],\n      [28, 45, 53],\n      [28, 96, 100],\n      [30, 40, 50],\n      [30, 72, 78],\n      [32, 60, 68],\n      [33, 44, 55],\n      [33, 56, 65],\n      [35, 84, 91],\n      [36, 48, 60],\n      [36, 77, 85],\n      [39, 52, 65],\n      [39, 80, 89],\n      [40, 42, 58],\n      [40, 75, 85],\n      [42, 56, 70],\n      [45, 60, 75],\n      [48, 55, 73],\n      [48, 64, 80],\n      [51, 68, 85],\n      [54, 72, 90],\n      [57, 76, 95],\n      [60, 63, 87],\n      [60, 80, 100],\n      [65, 72, 97]\n    ]\n    const listeNomsQuadrilateres = ['L', 'M', 'N', 'O'] // pour que le O ne soit pas une des 4 lettres\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      const nomQuadrilatere = creerNomDePolygone(4, listeNomsQuadrilateres)\n      listeNomsQuadrilateres.push(nomQuadrilatere)\n      const A = nomQuadrilatere[0]\n      const B = nomQuadrilatere[1]\n      const C = nomQuadrilatere[2]\n      const D = nomQuadrilatere[3]\n      const O = 'O'\n      const triplet = choice(listeTripletsPythagoriciens)\n      enleveElement(listeTripletsPythagoriciens, triplet) // Supprime le triplet pour les prochaines questions\n      let a = triplet[0]\n      let b = triplet[1]\n      let c = triplet[2]\n      if (\n        listeTypeDeQuestions[i] === 'parallelogramme_n_est_pas_losange' ||\n        listeTypeDeQuestions[i] === 'parallelogramme_n_est_pas_rectangle'\n      ) {\n        c += randint(-3, 3, [0]) // on change la valeur de c\n        while (a ** 2 + b ** 2 === c ** 2) {\n          // si par hasard (est-ce possible ?) on retombe sur un triplet pythagoricien on change les valeurs\n          c += randint(-3, 3, [0]) // on change la valeur de c\n          b += randint(-3, 3, [0]) // on change la valeur de b\n        }\n      }\n      if (a > 9 && choice([true, true, true, false])) {\n        // le plus souvent on utilise des décimaux\n        a = calcul(a / 10)\n        b = calcul(b / 10)\n        c = calcul(c / 10)\n      }\n\n      switch (listeTypeDeQuestions[i]) {\n        case 'losange':\n          texte = `$${nomQuadrilatere}$ est un losange de centre $O$ tel que $${A + B\n            }=${texNombre(c)}$ cm et $${A + C}=${texNombre(2 * a)}$ cm.<br>`\n          texte += `Calculer $${D + B}$.`\n\n          if (context.isHtml) {\n            texteCorr = `<p style=\"margin-left:10%\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"250\" viewBox=\"0 0 400 250\"><defs id=\"mtg32_patterns\"/><rect width=\"100%\" height=\"100%\" fill=\"rgb(255,255,255)\"/><g id=\"mtg32svgTraces\" transform=\"scale(1)\"/><g id=\"\"/><g/><g id=\"\"/><g id=\"\"/><g/><g id=\"\"/><g id=\"\"/><g id=\"mtg32svg#6\"/><text x=\"185.5\" y=\"32.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${A}</tspan></text><text x=\"220.5\" y=\"134.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${B}</tspan></text><line x1=\"190.5\" y1=\"43.44\" x2=\"216.5\" y2=\"129.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><g id=\"\"/><text x=\"144.54431444308477\" y=\"133.14525664249953\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${D}</tspan></text><line x1=\"190.5\" y1=\"43.44\" x2=\"163.54431444308477\" y2=\"129.14525664249953\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><g id=\"\"/><text x=\"183.54431444308474\" y=\"234.14525664249953\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${C}</tspan></text><line x1=\"216.5\" y1=\"129.44\" x2=\"189.54431444308474\" y2=\"215.14525664249953\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"189.54431444308474\" y1=\"215.14525664249953\" x2=\"163.54431444308477\" y2=\"129.14525664249953\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><g id=\"\"/><g  id=\"\"><line x1=\"208.86483613904568\" y1=\"86.9074753482156\" x2=\"199.2927218660596\" y2=\"89.80137036097884\" style=\"stroke-width:1;stroke:rgb(0,0,255);\" /><line x1=\"207.7072781339404\" y1=\"83.07862963902116\" x2=\"198.13516386095432\" y2=\"85.9725246517844\" style=\"stroke-width:1;stroke:rgb(0,0,255);\" /></g><g  id=\"\"><line x1=\"207.19175809011574\" y1=\"175.70062312711323\" x2=\"197.652449829911\" y2=\"172.70035681946817\" style=\"stroke-width:1;stroke:rgb(0,0,255);\" /><line x1=\"208.39186461317377\" y1=\"171.88489982303136\" x2=\"198.85255635296903\" y2=\"168.8846335153863\" style=\"stroke-width:1;stroke:rgb(0,0,255);\" /></g><g  id=\"\"><line x1=\"171.1794783040391\" y1=\"171.67778129428393\" x2=\"180.75159257702518\" y2=\"168.78388628152072\" style=\"stroke-width:1;stroke:rgb(0,0,255);\" /><line x1=\"172.33703630914437\" y1=\"175.50662700347834\" x2=\"181.90915058213045\" y2=\"172.61273199071513\" style=\"stroke-width:1;stroke:rgb(0,0,255);\" /></g><g  id=\"\"><line x1=\"181.19175809011574\" y1=\"89.70062312711323\" x2=\"171.652449829911\" y2=\"86.7003568194682\" style=\"stroke-width:1;stroke:rgb(0,0,255);\" /><line x1=\"182.39186461317377\" y1=\"85.88489982303133\" x2=\"172.85255635296903\" y2=\"82.8846335153863\" style=\"stroke-width:1;stroke:rgb(0,0,255);\" /></g><text x=\"176.02215722154236\" y=\"144.29262832124977\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>O</tspan></text><g  id=\"\"><line x1=\"198.79500694133887\" y1=\"129.34145667941502\" x2=\"198.84383529950412\" y2=\"120.56860695961849\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(255,0,0);\"/><line x1=\"190.0709855797076\" y1=\"120.51977860145324\" x2=\"198.84383529950412\" y2=\"120.56860695961849\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(255,0,0);\"/></g><line x1=\"190.5\" y1=\"43.44\" x2=\"190.02215722154236\" y2=\"129.29262832124977\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"190.02215722154236\" y1=\"129.29262832124977\" x2=\"189.54431444308474\" y2=\"215.14525664249953\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"190.02215722154236\" y1=\"129.29262832124977\" x2=\"163.54431444308477\" y2=\"129.14525664249953\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"190.02215722154236\" y1=\"129.29262832124977\" x2=\"216.5\" y2=\"129.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><g  id=\"\"><line x1=\"193.7768798113023\" y1=\"89.9214712483418\" x2=\"186.74527741024002\" y2=\"82.81115707290796\" style=\"stroke-width:1;stroke:rgb(255,0,0);\" /><line x1=\"186.70592152305426\" y1=\"89.88211536115601\" x2=\"193.81623569848807\" y2=\"82.85051296009375\" style=\"stroke-width:1;stroke:rgb(255,0,0);\" /></g><g  id=\"\"><line x1=\"193.2990370328447\" y1=\"175.77409956959156\" x2=\"186.2674346317824\" y2=\"168.66378539415774\" style=\"stroke-width:1;stroke:rgb(255,0,0);\" /><line x1=\"186.22807874459664\" y1=\"175.7347436824058\" x2=\"193.33839292003046\" y2=\"168.7031412813435\" style=\"stroke-width:1;stroke:rgb(255,0,0);\" /></g><g  id=\"\"><line x1=\"176.75540701760488\" y1=\"134.21886503698207\" x2=\"176.81106464702222\" y2=\"124.21901992676723\" style=\"stroke-width:1;stroke:rgb(255,0,0);\" /></g><g  id=\"\"><line x1=\"203.28890742547983\" y1=\"124.36639160551746\" x2=\"203.2332497960625\" y2=\"134.3662367157323\" style=\"stroke-width:1;stroke:rgb(255,0,0);\" /></g></svg></p>`\n          } else {\n            texteCorr = ''\n          }\n          texteCorr += `$${nomQuadrilatere}$ est un losange donc ses diagonales se coupent en leur milieu : $${A + O\n            }=${A + C}\\\\div2=${texNombre(2 * a)}\\\\div2=${texNombre(\n              a\n            )}$ cm.<br>`\n          texteCorr += `On sait que les diagonales d'un losange se coupent perpendiculairement donc $${A + O + C\n            }$ est un triangle rectangle en $O$.<br>`\n          texteCorr += `D'après le théorème de Pythagore, on a : $${A + O}^2+${O + B\n            }^2=${A + B}^2$.<br>`\n          texteCorr += `Donc $${O + B}^2=${A + B}^2-${A + O}^2=${texNombre(\n            c\n          )}^2-${texNombre(a)}^2=${texNombrec(b ** 2)}$.<br>`\n          texteCorr += `On a alors $${O + B}=\\\\sqrt{${texNombrec(\n            b ** 2\n          )}}=${texNombre(b)}$ cm.<br>`\n          texteCorr += `Finalement comme $O$ est aussi le milieu de $[${D + B\n            }]$ : $${D + B}=2\\\\times ${O + B}=2\\\\times${texNombre(\n              b\n            )}=${texNombrec(2 * b)}$ cm.`\n          break\n\n        case 'rectangle_diagonale_connue':\n          texte = `$${nomQuadrilatere}$ est un rectangle tel que $${A + B\n            }=${texNombre(a)}$ cm et $${A + C}=${texNombre(c)}$ cm.<br>`\n          texte += `Calculer $${B + C}$.`\n          if (context.isHtml) {\n            texteCorr = `<p style=\"margin-left:10%\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"200\" viewBox=\"0 0 400 200\"><defs id=\"mtg32_patterns\"/><rect width=\"100%\" height=\"100%\" fill=\"rgb(255,255,255)\"/><g id=\"mtg32svgTraces\" transform=\"scale(1)\"/><g id=\"\"/><g/><g id=\"\"/><g id=\"\"/><g/><g id=\"\"/><g id=\"\"/><g id=\"\"/><text x=\"113.5\" y=\"49.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${A}</tspan></text><g id=\"\"/><text x=\"276.5\" y=\"49.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${B}</tspan></text><g id=\"\"/><g id=\"\"/><text x=\"276.5\" y=\"138.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${C}</tspan></text><g id=\"\"/><text x=\"111.5\" y=\"141.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${D}</tspan></text><polygon points=\"126.500,53.440 272.500,53.440 272.500,124.440 126.500,124.440 \" style=\"stroke-width:1;stroke:rgb(0,0,0);fill:none\"  id=\"\"/><g  id=\"\"><line x1=\"142.5\" y1=\"53.44\" x2=\"142.5\" y2=\"69.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/><line x1=\"126.5\" y1=\"69.44\" x2=\"142.5\" y2=\"69.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/></g><g  id=\"\"><line x1=\"272.5\" y1=\"69.44\" x2=\"256.5\" y2=\"69.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/><line x1=\"256.5\" y1=\"53.44\" x2=\"256.5\" y2=\"69.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/></g><g  id=\"\"><line x1=\"256.5\" y1=\"124.44\" x2=\"256.5\" y2=\"108.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/><line x1=\"272.5\" y1=\"108.44\" x2=\"256.5\" y2=\"108.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/></g><g  id=\"\"><line x1=\"126.5\" y1=\"108.44\" x2=\"142.5\" y2=\"108.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/><line x1=\"142.5\" y1=\"124.44\" x2=\"142.5\" y2=\"108.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/></g><line x1=\"126.5\" y1=\"53.44\" x2=\"272.5\" y2=\"124.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/></svg></svg></p>`\n          } else {\n            texteCorr = ''\n          }\n          texteCorr += `$${nomQuadrilatere}$ est un rectangle donc il possède 4 angles droits et $${A + B + C\n            }$ est un triangle rectangle en $${B}$.<br>`\n          texteCorr += `D'après le théorème de Pythagore, on a : $${A + B}^2+${B + C\n            }^2=${A + C}^2$.<br>`\n          texteCorr += `Donc $${B + C}^2=${A + C}^2-${A + B}^2=${texNombre(\n            c\n          )}^2-${texNombre(a)}^2=${texNombre(b ** 2)}$.<br>`\n          texteCorr += `Finalement, $${B + C}=\\\\sqrt{${texNombrec(\n            b ** 2\n          )}}=${texNombre(b)}$ cm.`\n          break\n\n        case 'rectangle_diagonale_a_trouver':\n          texte = `$${nomQuadrilatere}$ est un rectangle tel que $${A + B\n            }=${texNombre(a)}$ cm et $${B + C}=${texNombre(b)}$ cm.<br>`\n          texte += `Calculer $${A + C}$.`\n          if (context.isHtml) {\n            texteCorr = `<p style=\"margin-left:10%\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"200\" viewBox=\"0 0 400 200\"><defs id=\"mtg32_patterns\"/><rect width=\"100%\" height=\"100%\" fill=\"rgb(255,255,255)\"/><g id=\"mtg32svgTraces\" transform=\"scale(1)\"/><g id=\"\"/><g/><g id=\"\"/><g id=\"\"/><g/><g id=\"\"/><g id=\"\"/><g id=\"\"/><text x=\"113.5\" y=\"49.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${A}</tspan></text><g id=\"\"/><text x=\"276.5\" y=\"49.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${B}</tspan></text><g id=\"\"/><g id=\"\"/><text x=\"276.5\" y=\"138.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${C}</tspan></text><g id=\"\"/><text x=\"111.5\" y=\"141.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${D}</tspan></text><polygon points=\"126.500,53.440 272.500,53.440 272.500,124.440 126.500,124.440 \" style=\"stroke-width:1;stroke:rgb(0,0,0);fill:none\"  id=\"\"/><g  id=\"\"><line x1=\"142.5\" y1=\"53.44\" x2=\"142.5\" y2=\"69.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/><line x1=\"126.5\" y1=\"69.44\" x2=\"142.5\" y2=\"69.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/></g><g  id=\"\"><line x1=\"272.5\" y1=\"69.44\" x2=\"256.5\" y2=\"69.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/><line x1=\"256.5\" y1=\"53.44\" x2=\"256.5\" y2=\"69.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/></g><g  id=\"\"><line x1=\"256.5\" y1=\"124.44\" x2=\"256.5\" y2=\"108.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/><line x1=\"272.5\" y1=\"108.44\" x2=\"256.5\" y2=\"108.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/></g><g  id=\"\"><line x1=\"126.5\" y1=\"108.44\" x2=\"142.5\" y2=\"108.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/><line x1=\"142.5\" y1=\"124.44\" x2=\"142.5\" y2=\"108.44\" style=\"stroke-width:1;stroke:rgb(0,0,255);\"/></g><line x1=\"126.5\" y1=\"53.44\" x2=\"272.5\" y2=\"124.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/></svg></svg></p>`\n          } else {\n            texteCorr = ''\n          }\n          texteCorr += `$${nomQuadrilatere}$ est un rectangle donc il possède 4 angles droits et $${A + B + C\n            }$ est un triangle rectangle en $${B}$.<br>`\n          texteCorr += `D'après le théorème de Pythagore, on a : $${A + C}^2=${A + B\n            }^2+${B + C}^2=${texNombrec(a)}^2+${texNombrec(b)}^2=${texNombrec(\n              c ** 2\n            )}$.<br>`\n          texteCorr += `Finalement, $${A + C}=\\\\sqrt{${texNombrec(\n            c ** 2\n          )}}=${texNombre(c)}$ cm.`\n          break\n\n        case 'parallelogramme_est_losange':\n          texte = `$${nomQuadrilatere}$ est un parallélogramme de centre $O$ tel que $${A + O\n            }=${texNombre(a)}$ cm, $${A + B}=${texNombre(c)}$ cm et $${B + O\n            }=${texNombre(b)}$ cm.<br>`\n          texte += `$${nomQuadrilatere}$ est-il un losange ?`\n          if (context.isHtml) {\n            texteCorr = `<p style=\"margin-left:10%\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"200\" viewBox=\"0 0 400 200\"><defs id=\"mtg32_patterns\"/><rect width=\"100%\" height=\"100%\" fill=\"rgb(255,255,255)\"/><g id=\"mtg32svgTraces\" transform=\"scale(1)\"/><text x=\"85.5\" y=\"46.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${A}</tspan></text><g id=\"\"/><text x=\"252.5\" y=\"45.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${B}</tspan></text><text x=\"302.5\" y=\"156.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${C}</tspan></text><g id=\"\"/><line x1=\"256.5\" y1=\"52.44\" x2=\"307.5\" y2=\"138.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"92.5\" y1=\"52.44\" x2=\"256.5\" y2=\"52.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><g id=\"\"/><text x=\"137.5\" y=\"155.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${D}</tspan></text><line x1=\"307.5\" y1=\"138.44\" x2=\"143.5\" y2=\"138.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"143.5\" y1=\"138.44\" x2=\"92.5\" y2=\"52.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"92.5\" y1=\"52.44\" x2=\"307.5\" y2=\"138.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"256.5\" y1=\"52.44\" x2=\"143.5\" y2=\"138.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><text x=\"200\" y=\"114.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>O</tspan></text></svg></p>`\n          } else {\n            texteCorr = ''\n          }\n          texteCorr += `Dans le triangle $${A + O + B\n            }$, le plus grand côté est $[${A + B}]$.<br>`\n          texteCorr += `$${A + B}^2=${texNombre(c)}^2=${texNombrec(\n            c ** 2\n          )}$<br>`\n          texteCorr += `$${A + O}^2+${O + B}^2=${texNombre(a)}^2+${texNombre(\n            b\n          )}^2=${texNombrec(a ** 2 + b ** 2)}$<br>`\n          texteCorr += `On constate que $${A + B}^2=${A + O}^2+${O + B\n            }^2$, l'égalité de Pythagore est vérifiée donc $${A + O + B\n            }$ est rectangle en $O$.<br>`\n          texteCorr += `Finalement, comme $${nomQuadrilatere}$ est un parallélogramme qui a ses diagonales perpendiculaires alors c'est aussi un losange.`\n          break\n\n        case 'parallelogramme_n_est_pas_losange':\n          texte = `$${nomQuadrilatere}$ est un parallélogramme de centre $O$ tel que $${A + O\n            }=${texNombre(a)}$ cm, $${A + B}=${texNombre(c)}$ cm et $${B + O\n            }=${texNombre(b)}$ cm.<br>`\n          texte += `$${nomQuadrilatere}$ est-il un losange ?`\n          if (context.isHtml) {\n            texteCorr = `<p style=\"margin-left:10%\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"200\" viewBox=\"0 0 400 200\"><defs id=\"mtg32_patterns\"/><rect width=\"100%\" height=\"100%\" fill=\"rgb(255,255,255)\"/><g id=\"mtg32svgTraces\" transform=\"scale(1)\"/><text x=\"85.5\" y=\"46.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${A}</tspan></text><g id=\"\"/><text x=\"252.5\" y=\"45.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${B}</tspan></text><text x=\"302.5\" y=\"156.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${C}</tspan></text><g id=\"\"/><line x1=\"256.5\" y1=\"52.44\" x2=\"307.5\" y2=\"138.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"92.5\" y1=\"52.44\" x2=\"256.5\" y2=\"52.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><g id=\"\"/><text x=\"137.5\" y=\"155.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${D}</tspan></text><line x1=\"307.5\" y1=\"138.44\" x2=\"143.5\" y2=\"138.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"143.5\" y1=\"138.44\" x2=\"92.5\" y2=\"52.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"92.5\" y1=\"52.44\" x2=\"307.5\" y2=\"138.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"256.5\" y1=\"52.44\" x2=\"143.5\" y2=\"138.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><text x=\"200\" y=\"114.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>O</tspan></text></svg></p>`\n          } else {\n            texteCorr = ''\n          }\n          texteCorr += `Dans le triangle $${A + O + B\n            }$, le plus grand côté est $[${A + B}]$.<br>`\n          texteCorr += `$${A + B}^2=${texNombre(c)}^2=${texNombrec(\n            c ** 2\n          )}$<br>`\n          texteCorr += `$${A + O}^2+${O + B}^2=${texNombre(a)}^2+${texNombre(\n            b\n          )}^2=${texNombrec(a ** 2 + b ** 2)}$<br>`\n          texteCorr += `On constate que $${A + B}^2\\\\not=${A + O}^2+${O + B\n            }^2$, l'égalité de Pythagore n'est pas vérifiée donc $${A + O + B\n            }$ n'est pas un triangle rectangle.<br>`\n          texteCorr += `Si $${nomQuadrilatere}$ était un losange alors ses diagonales devraient être perpendiculaires et $${A + O + B\n            }$ devrait être un triangle rectangle.<br>`\n          texteCorr += `Finalement comme $${A + O + B\n            }$ n'est pas un triangle rectangle, $${nomQuadrilatere}$ n'est pas un losange.`\n          break\n\n        case 'parallelogramme_est_rectangle':\n          texte = `$${nomQuadrilatere}$ est un parallélogramme de centre $O$ tel que $${A + B\n            }=${texNombre(a)}$ cm, $${A + C}=${texNombre(c)}$ cm et $${B + C\n            }=${texNombre(b)}$ cm.<br>`\n          texte += `$${nomQuadrilatere}$ est-il un rectangle ?`\n          if (context.isHtml) {\n            texteCorr = `<p style=\"margin-left:10%\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"200\" viewBox=\"0 0 400 200\"><defs id=\"mtg32_patterns\"/><rect width=\"100%\" height=\"100%\" fill=\"rgb(255,255,255)\"/><g id=\"mtg32svgTraces\" transform=\"scale(1)\"/><text x=\"85.5\" y=\"46.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${A}</tspan></text><g id=\"\"/><text x=\"252.5\" y=\"45.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${B}</tspan></text><text x=\"302.5\" y=\"156.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${C}</tspan></text><g id=\"\"/><line x1=\"256.5\" y1=\"52.44\" x2=\"307.5\" y2=\"138.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"92.5\" y1=\"52.44\" x2=\"256.5\" y2=\"52.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><g id=\"\"/><text x=\"137.5\" y=\"155.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${D}</tspan></text><line x1=\"307.5\" y1=\"138.44\" x2=\"143.5\" y2=\"138.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"143.5\" y1=\"138.44\" x2=\"92.5\" y2=\"52.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"92.5\" y1=\"52.44\" x2=\"307.5\" y2=\"138.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"256.5\" y1=\"52.44\" x2=\"143.5\" y2=\"138.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><text x=\"200\" y=\"114.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>O</tspan></text></svg></p>`\n          } else {\n            texteCorr = ''\n          }\n          texteCorr += `Dans le triangle $${A + B + C\n            }$, le plus grand côté est $[${A + C}]$.<br>`\n          texteCorr += `$${A + C}^2=${texNombre(c)}^2=${texNombrec(\n            c ** 2\n          )}$<br>`\n          texteCorr += `$${A + B}^2+${B + C}^2=${texNombre(a)}^2+${texNombre(\n            b\n          )}^2=${texNombrec(a ** 2 + b ** 2)}$<br>`\n          texteCorr += `On constate que $${A + C}^2=${A + B}^2+${B + C\n            }^2$, l'égalité de Pythagore est vérifiée donc $${A + B + C\n            }$ est rectangle en $${B}$.<br>`\n          texteCorr += `Finalement, comme $${nomQuadrilatere}$ est un parallélogramme qui a un angle droit en $${B}$ alors c'est aussi un rectangle.`\n          break\n\n        case 'parallelogramme_n_est_pas_rectangle':\n          texte = `$${nomQuadrilatere}$ est un parallélogramme de centre $O$ tel que $${A + B\n            }=${texNombre(a)}$ cm, $${A + C}=${texNombre(c)}$ cm et $${B + C\n            }=${texNombre(b)}$ cm.<br>`\n          texte += `$${nomQuadrilatere}$ est-il un rectangle ?`\n          if (context.isHtml) {\n            texteCorr = `<p style=\"margin-left:10%\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"200\" viewBox=\"0 0 400 200\"><defs id=\"mtg32_patterns\"/><rect width=\"100%\" height=\"100%\" fill=\"rgb(255,255,255)\"/><g id=\"mtg32svgTraces\" transform=\"scale(1)\"/><text x=\"85.5\" y=\"46.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${A}</tspan></text><g id=\"\"/><text x=\"252.5\" y=\"45.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${B}</tspan></text><text x=\"302.5\" y=\"156.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${C}</tspan></text><g id=\"\"/><line x1=\"256.5\" y1=\"52.44\" x2=\"307.5\" y2=\"138.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"92.5\" y1=\"52.44\" x2=\"256.5\" y2=\"52.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><g id=\"\"/><text x=\"137.5\" y=\"155.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>${D}</tspan></text><line x1=\"307.5\" y1=\"138.44\" x2=\"143.5\" y2=\"138.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"143.5\" y1=\"138.44\" x2=\"92.5\" y2=\"52.44\" style=\"stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"92.5\" y1=\"52.44\" x2=\"307.5\" y2=\"138.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><line x1=\"256.5\" y1=\"52.44\" x2=\"143.5\" y2=\"138.44\" style=\"stroke-dasharray:3 3;stroke-width:1;stroke:rgb(0,0,0);\"  id=\"\"/><text x=\"200\" y=\"114.44\" style=\"text-anchor : left;fill:rgb(0,0,0);font-size:16px;\" id=\"name\"  visibility=\"visible\"><tspan>O</tspan></text></svg></p>`\n          } else {\n            texteCorr = ''\n          }\n          texteCorr += `Dans le triangle $${A + B + C\n            }$, le plus grand côté est $[${A + C}]$.<br>`\n          texteCorr += `$${A + C}^2=${texNombre(c)}^2=${texNombrec(\n            c ** 2\n          )}$<br>`\n          texteCorr += `$${A + B}^2+${B + C}^2=${texNombre(a)}^2+${texNombre(\n            b\n          )}^2=${texNombrec(a ** 2 + b ** 2)}$<br>`\n          texteCorr += `On constate que $${A + C}^2\\\\not=${A + B}^2+${B + C\n            }^2$, l'égalité de Pythagore n'est pas vérifiée donc $${A + B + C\n            }$ n'est pas rectangle en $${B}$.<br>`\n          texteCorr += `Finalement, comme $${nomQuadrilatere}$ n'a pas d'angle droit en $${B}$ ce n'est pas un rectangle.`\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Sens direct ou réciproque/contraposée', 3, '1 : Sens direct.\\n2 : Réciproque/contraposée.\\n3 : Mélange.']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ProblemesPythagore","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","spacing","context","spacingCorr","nouvelleVersion","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","sup","parseInt","choice","listeTypeDeQuestions","combinaisonListes","listeTripletsPythagoriciens","listeNomsQuadrilateres","texte","texteCorr","i","cpt","nomQuadrilatere","creerNomDePolygone","push","A","B","C","D","O","triplet","enleveElement","a","b","c","randint","calcul","texNombre","texNombrec","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}