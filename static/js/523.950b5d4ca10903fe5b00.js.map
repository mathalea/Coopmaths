{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6C30-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","amcType","interactifReady","titre","MultiplierDecimauxPar101001000","Exercice","this","consigne","sup","sup2","spacing","spacingCorr","nbQuestions","nouvelleVersion","parseInt","listeQuestions","listeCorrections","typesDeQuestions","reponse","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","facteurs","texte","texteCorr","a","b","den","i","cpt","choice","randint","calcul","texNombre","texNombrec","texFraction","miseEnEvidence","context","interactif","ajouteChampTexte","setReponse","autoCorrection","options","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/523.950b5d4ca10903fe5b00.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombrec, texNombre, miseEnEvidence, texFraction } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\nexport const amcReady = false // jusqu'à ce qu'il soit adapté à la version 2.6\nexport const amcType = 4 // Question numérique\nexport const interactifReady = true\nexport const titre = 'Multiplications d’un nombre décimal par 10, 100 ou 1 000.'\n\n/**\n * Multiplication d'un nombre décimal dans différentes écritures par 10, 100, 1000\n *\n *  * Type 1 : écriture décimale\n *  * Type 2 : écriture fractionnaire\n *  * Type 3 : écritures fractionnaires et décimales\n *\n *  * Sup2 : avec ou sans calculs à trous\n * @author Rémi Angot\n* Référence 6C30-1\n  *\n */\nexport default function MultiplierDecimauxPar101001000 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcReady = amcReady\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.consigne = 'Calculer.'\n  this.sup = 3\n  this.sup2 = false\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 8\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let typesDeQuestionsDisponibles = []; let typesDeQuestions\n    if (this.sup === 1 && !this.sup2) typesDeQuestionsDisponibles = [1, 2]\n    if (this.sup === 1 && this.sup2) { typesDeQuestionsDisponibles = [1, 2, 5, 6] }\n    if (this.sup === 2 && !this.sup2) typesDeQuestionsDisponibles = [3, 4]\n    if (this.sup === 2 && this.sup2) { typesDeQuestionsDisponibles = [3, 4, 3, 4, 7, 8, 9, 10] }\n    if (this.sup === 3 && !this.sup2) { typesDeQuestionsDisponibles = [1, 2, 3, 4] }\n    if (this.sup === 3 && this.sup2) { typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] }\n\n    if (this.sup2) this.consigne = 'Calculer et compléter.'\n    let reponse\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const facteurs = combinaisonListes(\n      [10, 100, 1000],\n      this.nbQuestions\n    )\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0, a, b, den;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i]\n      switch (typesDeQuestions) {\n        case 1: // a,abcd × 10\n          a = choice([randint(11, 99), randint(100, 999)])\n          a = calcul(a / choice([10, 100, 1000, 10000]))\n          b = facteurs[i]\n          texte = `$${texNombre(a)}\\\\times${texNombre(b)}$`\n          texteCorr = `$${texNombre(a)} \\\\times ${texNombre(\n            b\n          )} = ${texNombrec(a * b)}$`\n          reponse = calcul(a * b)\n          break\n        case 2: // 10 × a,abcd\n          a = choice([randint(11, 99), randint(100, 999)])\n          a = calcul(a / choice([10, 100, 1000, 10000]))\n          b = facteurs[i]\n          texte = `$${texNombre(b)}\\\\times${texNombre(a)}$`\n          texteCorr = `$${texNombre(b)} \\\\times ${texNombre(\n            a\n          )} = ${texNombrec(a * b)}$`\n          reponse = calcul(a * b)\n          break\n        case 3: // abcd/10 × 10\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          den = choice([10, 100, 1000])\n          b = facteurs[i]\n          texte = `$${texFraction(a, den)}\\\\times${texNombre(b)}$`\n          texteCorr = `$${texFraction(a, den)} \\\\times ${texNombre(\n            b\n          )} = ${texFraction(a * b, den)} = ${texNombrec((a / den) * b)}$`\n          reponse = calcul(a * b / den)\n          break\n        case 4: // 10 × abcd/10\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          den = choice([10, 100, 1000])\n          b = facteurs[i]\n          texte = `$${texNombre(b)}\\\\times${texFraction(a, den)}$`\n          texteCorr = `$${texNombre(b)} \\\\times ${texFraction(\n            a,\n            den\n          )} = ${texFraction(a * b, den)} = ${texNombrec((a / den) * b)}$`\n          reponse = calcul(a * b / den)\n          break\n        case 5: // .... × 10 = a,abcd\n          a = choice([randint(11, 99), randint(100, 999)])\n          a = calcul(a / choice([10, 100, 1000, 10000]))\n          b = facteurs[i]\n          texte = `$\\\\ldots \\\\times${texNombre(b)} = ${texNombrec(a * b)}$`\n          texteCorr = `$${miseEnEvidence(\n            texNombre(a)\n          )} \\\\times ${texNombre(b)} = ${texNombrec(a * b)}$`\n          reponse = calcul(a * b)\n          break\n        case 6: // 10 × .... = a,abcd\n          a = choice([randint(11, 99), randint(100, 999)])\n          a = calcul(a / choice([10, 100, 1000, 10000]))\n          b = facteurs[i]\n          texte = `$${texNombre(b)} \\\\times \\\\ldots = ${texNombrec(a * b)}$`\n          texteCorr = `$${texNombre(b)} \\\\times ${miseEnEvidence(\n            texNombre(a)\n          )}  = ${texNombrec(a * b)}$`\n          reponse = a\n          break\n        case 7: // case 3 avec un trou sur l'entier\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          den = choice([10, 100, 1000])\n          b = facteurs[i]\n          texte = `$${texFraction(a, den)}\\\\times \\\\ldots = ${texNombrec(\n            (a / den) * b\n          )}$`\n          texteCorr = `$${texFraction(a, den)} \\\\times ${miseEnEvidence(\n            texNombre(b)\n          )} = ${texFraction(a * b, den)} = ${texNombrec((a / den) * b)}$`\n          reponse = b\n          break\n        case 8: // case 4 avec un trou sur l'entier\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          den = choice([10, 100, 1000])\n          b = facteurs[i]\n          texte = `$ \\\\ldots \\\\times${texFraction(a, den)}= ${texNombrec(\n            (a / den) * b\n          )}$`\n          texteCorr = `$${miseEnEvidence(\n            texNombre(b)\n          )} \\\\times ${texFraction(a, den)} = ${texFraction(\n            a * b,\n            den\n          )} = ${texNombrec((a / den) * b)}$`\n          reponse = calcul(b)\n          break\n        case 9: // case 3 avec trou sur la fraction\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          den = choice([10, 100, 1000])\n          b = facteurs[i]\n          texte = `$${texFraction(a, '\\\\ldots')}\\\\times${texNombre(\n            b\n          )} = ${texNombrec((a / den) * b)}$`\n          texteCorr = `$${texFraction(\n            a,\n            miseEnEvidence(texNombre(den))\n          )} \\\\times ${texNombre(b)} = ${texFraction(\n            a * b,\n            den\n          )} = ${texNombrec((a / den) * b)}$`\n          calcul(a * b / den)\n          break\n        case 10: // case 4 avec trou sur la fraction\n          a = choice([randint(11, 99), randint(100, 999), randint(2, 9)])\n          den = choice([10, 100, 1000])\n          b = facteurs[i]\n          texte = `$${texNombre(b)}\\\\times${texFraction(\n            a,\n            '\\\\ldots'\n          )} = ${texNombrec((a / den) * b)}$`\n          texteCorr = `$${texNombre(b)} \\\\times ${texFraction(\n            a,\n            miseEnEvidence(texNombre(den))\n          )} = ${texFraction(a * b, den)} = ${texNombrec((a / den) * b)}$`\n          calcul(a * b / den)\n          break\n      }\n      if (context.isHtml && this.interactif) texte += '$~=$' + ajouteChampTexte(this, i)\n      setReponse(this, i, reponse)\n      this.autoCorrection[i].options = { digits: 0, decimals: 0, signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Types de calculs',\n    3,\n    '1 : Écriture décimale\\n2 : Écriture fractionnaire\\n3 : Écritures décimales et fractionnaires'\n  ]\n  this.besoinFormulaire2CaseACocher = ['Avec des calculs à trous']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}