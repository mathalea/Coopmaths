{"version":3,"sources":["webpack://mathalea/./src/js/exercices/2e/2N11-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Simplifier_une_somme_de_racines_carrees","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","i","cpt","e1","randint","choice","e2","e3","a1","a2","a3","b1","b2","b3","c","d1","d2","d3","f1","f2","f3","f","ecritureAlgebrique","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1300.f08f0ee3fca5af153bac.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,ecritureAlgebrique} from '../../modules/outils.js'\n\n\nexport const titre = 'Simplifier une somme de racines carrées'\n\n/**\n * 2N11-1\n * @author Stéphane Guyon\n */\nexport default function Simplifier_une_somme_de_racines_carrees() {\n    Exercice.call(this); // Héritage de la classe Exercice()\n    this.titre = titre;\n    this.consigne = \" Simplifier une somme de racines carrées\";\n    this.nbQuestions = 4;\n    this.nbCols = 2;\n    this.nbColsCorr = 2;\n    this.sup = 1; //\n    this.nouvelleVersion = function () {\n        this.listeQuestions = []; // Liste de questions\n        this.listeCorrections = []; // Liste de questions corrigées\n\n        for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\n            let e1 = randint(2, 8) * choice([-1, 1]);\n            let e2 = randint(2, 8) * choice([-1, 1]);\n            let e3 = randint(2, 8) * choice([-1, 1]);\n            let a1 = randint(2, 11);\n            let a2 = randint(2, 11, [a1]);\n            let a3 = randint(2, 11, [a1, a2]);\n            let b1 = a1 * a1;\n            let b2 = a2 * a2;\n            let b3 = a3 * a3;\n            let c = randint(2, 11, [4, 8, 9]);\n            let d1 = c * b1;\n            let d2 = c * b2;\n            let d3 = c * b3;\n            let f1 = e1 * a1;\n            let f2 = e2 * a2;\n            let f3 = e3 * a3;\n            let f = f1 + f2 + f3;\n\n            texte = `Écrire $A=${e1}\\\\sqrt{${d1}} ${ecritureAlgebrique(e2)}\\\\sqrt{${d2}} ${ecritureAlgebrique(e3)}\\\\sqrt{${d3}}$ sous la forme $a\\\\sqrt{${c}}$ où $a$ est un entier:`;\n            texteCorr = `On cherche le plus grand carré parfait diviseur de ${d1}, ${d2} et ${d3}. <br>\n                On trouve $${d1}=${b1} \\\\times ${c}~~$, $~~${d2}=${b2} \\\\times ${c}~~$\tet $${d3}=${b3} \\\\times ${c}$<br>\n                On a donc  : $\\\\sqrt{${d1}}=\\\\sqrt{${a1}^{2} \\\\times ${c} }=${a1}\\\\times \\\\sqrt{${c}}$,\n                $~~\\\\sqrt{${d2}}=\\\\sqrt{${a2}^{2} \\\\times ${c} }=${a2}\\\\times \\\\sqrt{${c}}~$ et\n                $~\\\\sqrt{${d3}}=\\\\sqrt{${a3}^{2} \\\\times ${c} }=${a3}\\\\times \\\\sqrt{${c}}$<br>\n                On en déduit que : $A=${e1}\\\\times${a1}\\\\times \\\\sqrt{${c}} ${ecritureAlgebrique(e2)}\\\\times ${a2}\\\\times \\\\sqrt{${c}}${ecritureAlgebrique(e3)}\\\\times ${a3}\\\\times \\\\sqrt{${c}}$<br>\n                $A=${f1}\\\\times \\\\sqrt{${c}} ${ecritureAlgebrique(f2)}\\\\times \\\\sqrt{${c}}${ecritureAlgebrique(f3)}\\\\times \\\\sqrt{${c}}$\t\t<br>\n                $A=\t(${f1}${ecritureAlgebrique(f2)}${ecritureAlgebrique(f3)})\\\\times \\\\sqrt{${c}} = ${f}\\\\sqrt{${c}}$`;\n\n            if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n                this.listeQuestions.push(texte);\n                this.listeCorrections.push(texteCorr);\n                i++;\n            }\n            cpt++;\n        }\n        listeQuestionsToContenu(this);\n    };\n    this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, \"1 : En donnat la racine carrée unité\\n2 : Sans indication\"];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}