{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3F21-1.js","webpack://mathalea/./src/js/exercices/3e/3F21.js"],"names":["titre","Lecture_expression_fonctions_affines","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sortieHtml","spacing","spacingCorr","sup","sup2","lineaire","listePackages","nouvelleVersion","numeroExercice","k","Math","pow","parseInt","nb_droites","listeQuestions","listeCorrections","contenu","contenuCorrection","liste_droites","OrdX0","Pente","push","randint","i","mon_svg","SVG","viewbox","size","SVG_repere","SVG_Tracer_droite","svg","texte","Latex_repere","Latex_Tracer_droite","texNombre","reduireAxPlusB","ecritureAlgebrique","listeQuestionsToContenuSansNumero","katexPopup2","besoinFormulaireNumerique","besoinFormulaire2Numerique","LectureExpressionFonctionsLineaires"],"mappings":"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","file":"js/6880.7211c3ab0245cf19a552.js","sourcesContent":["/* eslint-disable camelcase */\nimport Exercice from '../ClasseExercice.js'\nimport { listeQuestionsToContenuSansNumero, ecritureAlgebrique, randint, reduireAxPlusB, texNombre, katexPopup2 } from '../../modules/outils.js'\nimport { SVG_Tracer_droite, Latex_Tracer_droite, SVG_repere, Latex_repere } from '../../modules/macroSvgJs.js'\nimport { SVG } from '@svgdotjs/svg.js'\nexport const titre = 'Déterminer une fonction affine'\n\n/**\n * Trace 5 droites et demande l'expression de la fonction affine ou linéaire correspondante\n * @Auteur Jean-Claude Lhote\n * Référence : 3F21-1\n */\nexport default function Lecture_expression_fonctions_affines () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Donner l'expression des fonctions représentées\"\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  // eslint-disable-next-line no-undef\n  sortieHtml ? this.spacing = 2 : this.spacing = 1\n  // eslint-disable-next-line no-undef\n  sortieHtml ? this.spacingCorr = 2 : this.spacingCorr = 1\n  this.sup = 1\n  this.sup2 = 3\n  this.lineaire = false\n  this.listePackages = 'tkz-euclide'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    const k = Math.pow(2, parseInt(this.sup) - 1)\n    const nb_droites = parseInt(this.sup2)\n    this.listeQuestions = []\n    this.listeCorrections = []\n    this.contenu = '' // Liste de questions\n    this.contenuCorrection = '' // Liste de questions corrigées\n    const liste_droites = []\n    let OrdX0\n    const Pente = []\n    if (!this.lineaire) {\n      Pente.push(randint(-2 * k, 2 * k))\n      Pente.push(randint(-2 * k, 2 * k, [Pente[0]]))\n      Pente.push(randint(-2 * k, 2 * k, [Pente[0], Pente[1]]))\n      Pente.push(randint(-2 * k, 2 * k, [Pente[0], Pente[1], Pente[2]]))\n      Pente.push(randint(-2 * k, 2 * k, [Pente[0], Pente[1], Pente[2], Pente[3]]))\n    } else {\n      Pente.push(randint(-3 * k, 3 * k, [0]))\n      Pente.push(randint(-3 * k, 3 * k, [Pente[0], 0]))\n      Pente.push(randint(-3 * k, 3 * k, [Pente[0], Pente[1], 0]))\n      Pente.push(randint(-3 * k, 3 * k, [Pente[0], Pente[1], Pente[2], 0]))\n      Pente.push(randint(-3 * k, 3 * k, [Pente[0], Pente[1], Pente[2], Pente[3], 0]))\n    }\n\n    for (let i = 0; i < 5; i++) {\n      if (this.lineaire) { OrdX0 = 0 } else { OrdX0 = randint(-1 + Pente[i] / k, 1 + Pente[i] / k) }\n      liste_droites.push([OrdX0, Pente[i] / k])\n    }\n\n    // eslint-disable-next-line no-undef\n    if (sortieHtml) {\n      const mon_svg = SVG().viewbox(0, 0, 500, 500).size('100%', '100%')\n      SVG_repere(mon_svg, -5, 5, -5, 5, k, k, 500, 500, true)\n      SVG_Tracer_droite(mon_svg, 500, 500, -5, 5, -5, 5, liste_droites[0][0], liste_droites[0][1], 'blue', '(d1)')\n      if (nb_droites > 1) { SVG_Tracer_droite(mon_svg, 500, 500, -5, 5, -5, 5, liste_droites[1][0], liste_droites[1][1], 'red', '(d2)') }\n      if (nb_droites > 2) { SVG_Tracer_droite(mon_svg, 500, 500, -5, 5, -5, 5, liste_droites[2][0], liste_droites[2][1], 'green', '(d3)') }\n      if (nb_droites > 3) { SVG_Tracer_droite(mon_svg, 500, 500, -5, 5, -5, 5, liste_droites[3][0], liste_droites[3][1], 'brown', '(d4)') }\n      if (nb_droites > 4) { SVG_Tracer_droite(mon_svg, 500, 500, -5, 5, -5, 5, liste_droites[4][0], liste_droites[4][1], 'purple', '(d5)') }\n      this.consigne = `<div style=\"width: 50%; display : table \">${mon_svg.svg()}</div>`\n    } else { // sortie Latex\n      let texte = '\\\\begin{tikzpicture}'\n      texte += Latex_repere(-5, 5, -5, 5, k, k, true)\n      texte += Latex_Tracer_droite(-5, 5, -5, 5, liste_droites[0][0], liste_droites[0][1], 'blue', 'd_1')\n      if (nb_droites > 1) { texte += Latex_Tracer_droite(-5, 5, -5, 5, liste_droites[1][0], liste_droites[1][1], 'red', 'd_2') }\n      if (nb_droites > 2) { texte += Latex_Tracer_droite(-5, 5, -5, 5, liste_droites[2][0], liste_droites[2][1], 'green', 'd_3') }\n      if (nb_droites > 3) { texte += Latex_Tracer_droite(-5, 5, -5, 5, liste_droites[3][0], liste_droites[3][1], 'brown', 'd_4') }\n      if (nb_droites > 4) { texte += Latex_Tracer_droite(-5, 5, -5, 5, liste_droites[4][0], liste_droites[4][1], 'purple', 'd_5') }\n      texte += '\\n\\t \\\\end{tikzpicture}'\n      this.listeQuestions.push(texte)\n    }\n    for (let i = 0; i < nb_droites; i++) {\n      this.listeQuestions.push(`Déterminer l'expression de la fonction $f_${i + 1}$ représentée par la droite $(d_${i + 1})$.`)\n      if (this.lineaire || liste_droites[i][0] === 0) {\n        this.listeCorrections.push(`La droite $(d_${i + 1})$ passe par l'origine. Elle représente donc la fonction linéaire $f_${i + 1}(x)=ax$ dont il faut déterminer le coefficient a.<br>$(d_${i + 1})$ passe par le point de coordonnées $(1;${texNombre(liste_droites[i][1])})$ donc $f_${i + 1}(1)=${texNombre(liste_droites[i][1])}$ c'est à dire $a\\\\times 1=${texNombre(liste_droites[i][1])}$ donc $a=${texNombre(liste_droites[i][1])}\\\\div 1$ d'où $a=${texNombre(liste_droites[i][1])}$. Ainsi $f_${i + 1}(x)=${reduireAxPlusB(liste_droites[i][1], 0)}$.`)\n      } else {\n        this.listeCorrections.push(`La droite $d_${i + 1}$ passe par le point de coordonnées $(0;${texNombre(liste_droites[i][0])})$. Elle représente donc la fonction affine $f_${i + 1}(x)=ax+b$ dont la constante $b$ est égale à $f_${i + 1}(0)=a\\\\times 0+b$, c'est à dire  $${texNombre(liste_droites[i][0])}=0+b$ donc $b=${texNombre(liste_droites[i][0])}$.<br> De plus $(d_${i + 1})$ passe par le point de coordonnées $(1;${texNombre(liste_droites[i][1] + liste_droites[i][0])})$ donc $f_${i + 1}(1)=${texNombre(liste_droites[i][1] + liste_droites[i][0])}=a\\\\times 1${ecritureAlgebrique(liste_droites[i][0])}=a${ecritureAlgebrique(liste_droites[i][0])}$ donc $a=${texNombre(liste_droites[i][1] + liste_droites[i][0])}${ecritureAlgebrique(-liste_droites[i][0])}=${texNombre(liste_droites[i][1])}$. Ainsi $f_${i + 1}(x)=${reduireAxPlusB(liste_droites[i][1], liste_droites[i][0])}$.`)\n      }\n    }\n\n    listeQuestionsToContenuSansNumero(this)\n    if (!this.lineaire) { this.contenuCorrection = 'Il s’agit de fonctions affines, elles sont donc de la forme $f(x)=ax+b$, $b$ étant l’ordonnée à l’origine et $a$ la pente de la droite.\\n' + this.contenuCorrection } else { this.contenuCorrection = 'Il s’agit de fonctions linéaires, elles sont donc de la forme $f(x)=ax$, $a$ étant la ' + katexPopup2(numeroExercice, 1, 'pente', 'pente d\\'une droite', 'La pente (le a de y=ax ou y=ax+b) d\\'une droite donne le taux d\\'accroissement de y par rapport à x : lorsque x augmente de 1, alors y augmente de a.') + ' de la droite.\\n' + this.contenuCorrection }\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, \"1 : Coefficient directeur entier\\n2 : Coefficient directeur 'en demis'\\n3 : Coefficient directeur 'en quarts'\"]\n  this.besoinFormulaire2Numerique = ['Nombre de droites (1 à 5)', 5]\n}\n","import Lecture_expression_fonctions_affines from './3F21-1.js'\nexport const titre = 'Déterminer une fonction linéaire'\n\n/**\n * Trace 5 droites et demande l'expression de la fonction affine ou linéaire correspondante\n * @Auteur Jean-Claude Lhote\n * Référence : 3F21-1\n */\nexport default function LectureExpressionFonctionsLineaires () {\n  Lecture_expression_fonctions_affines.call(this)\n  this.titre = titre\n  this.lineaire = true\n}\n"],"sourceRoot":""}