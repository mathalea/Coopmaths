/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_beta_beta4G20-3_js"],{

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ }),

/***/ "./src/js/exercices/beta/beta4G20-3.js":
/*!*********************************************!*\
  !*** ./src/js/exercices/beta/beta4G20-3.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Calculer_valeur_manquante_visuel_pythagore)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\n\nconst titre = 'Calculer une valeur manquante avec l’égalité de Pythagore'\n\nfunction Calculer_valeur_manquante_visuel_pythagore() {\n    \"use strict\"\n    _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this)\n    this.titre = titre;\n    this.consigne = \"Dans chaque cas, calculer la valeur manquante indiquée par un point d'interrogation.\";\n    this.nb_questions = 4; // Ici le nombre de questions\n    this.nb_questions_modifiable=true // Active le formulaire nombre de questions\n    this.nb_cols = 1; // Le nombre de colonnes dans l'énoncé LaTeX\n    this.nb_cols_corr = 1;// Le nombre de colonne pour la correction LaTeX\n  \n  \n    this.nouvelle_version = function () {\n    this.liste_questions = []; // tableau contenant la liste des questions \n    this.liste_corrections = [];\n    let type_de_questions_disponibles=[1,2,3,4]; // tableau à compléter par valeurs possibles des types de questions\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(type_de_questions_disponibles, this.nb_questions);\n  \n    let objets_enonce,objets_enonceml,objets_correction,params_enonce,params_correction\n      mathalea.fenetreMathalea2d = [-11.7,-6.4,18.3,13.6]\nlet A=point(4,0,'A')\nlet B=point(0,3,'B')\nlet C=point(0,0,'C')\nlet p1=polygone(A,B,C)\np1.isVisible=false\nlet p2=rotation(p1,C,randint(0,359))\nlet a=p2.listePoints[0]\nlet b=p2.listePoints[1]\nlet c=p2.listePoints[2]\nlet codage=codageAngleDroit(a,c,b)\nlet car1=carre(b,a)\ncar1.couleurDeRemplissage='red'\nlet bar1=barycentre(car1)\nbar1.positionLabel='center'\nlet car2=carre(c,b)\ncar2.couleurDeRemplissage='blue'\nlet bar2=barycentre(car2)\nbar2.positionLabel='center'\nlet car3=carre(a,c)\ncar3.couleurDeRemplissage='green'\nlet bar3=barycentre(car3)\nbar3.positionLabel='center'\nlet q1=latexParPoint('? \\\\text{ cm}^2',bar1)\nlet l1=afficheLongueurSegment(b,c)\nlet l2=afficheLongueurSegment(c,a)\nlet q2=latexParPoint('9 \\\\text{ cm}^2',bar2)\nlet q3=latexParPoint('16 \\\\text{ cm}^2',bar3)\n  \n      for (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n        objets_enonce = [] // on initialise le tableau des objets Mathalea2d de l'enoncé\n        objets_enonceml = [] // Idem pour l'enoncé à main levée si besoin\n        objets_correction = [] // Idem pour la correction\n  \n        texte = `` // Nous utilisons souvent cette variable pour construire le texte de la question.\n        texte_corr = `` // Idem pour le texte de la correction.\n\n        switch (liste_type_de_questions[i]) { // Chaque question peut être d'un type différent, ici 4 cas sont prévus...\n          case 1:\n               \n            //ici sont créés les texte, tex_corr, objets mathalea2d divers entrant dans le contenu de l'exercice\n          break;\n  \n          case 2:\n            // Idem Cas1 mais avec d'autres texte, texte_corr...\n          break\n  \n          case 3:\n            \n          break\n            \n          case 4:\n          \n          break  \n            \n        }\n  //  objets_enonce.push () // On rempli les tableaux d'objets Mathalea2d\n  //  objets_enonceml.push()\n  //  objets_correction.push()\n  \n  //paramètres de la fenêtre Mathalea2d pour l'énoncé main levée\n    //    params_enonceml = { xmin: Math.min(objets_enonceml.x), ymin: Math.min(objets_enonceml.y), xmax: Math.max(objets_enonceml.x), ymax: Math.max(objets_enonceml.y), pixelsParCm: 20, scale: 1, mainlevee: true, amplitude: 1 }\n  //paramètres de la fenêtre Mathalea2d pour l'énoncé normal\n        params_enonce = { xmin:-10, ymin: -10, xmax: 10, ymax: 10, pixelsParCm: 20, scale: 1, mainlevee: false}\n  //paramètres de la fenêtre Mathalea2d pour la correction\n        params_correction = { xmin: -10, ymin: -10, xmax: 10, ymax: 10, pixelsParCm: 20, scale: 1 }\n  // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n        texte += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(params_enonce, objets_enonce)\n  // On ajoute au texte de la correction, la figure de la correction\n        texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(params_correction, objets_correction)\n        if (this.liste_questions.indexOf(texte) == -1) {\n          // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n          this.liste_questions.push(texte);\n          this.liste_corrections.push(texte_corr);\n          i++;\n        }\n        cpt++;\n      }\n      (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this); // On envoie l'exercice à la fonction de mise en page\n    };\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  \n  //\tthis.besoin_formulaire_numerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoin_formulaire2_numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoin_formulaire3_case_a_cocher =['figure à main levée',true]\n  \n  } // Fin de l'exercice.\n  \n\n\n\n\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/beta/beta4G20-3.js?");

/***/ })

}]);