{"version":3,"file":"js/5819.5dbddeffc116554c48fb.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3A13.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListesSansChangerOrdre,texNombre,miseEnEvidence,decompositionFacteursPremiers,modalPdf,katexPopup2,numAlpha,warnMessage,lampeMessage,ppcm} from '../../modules/outils.js'\nimport {SVG_engrenages} from '../../modules/macroSvgJs.js'\nexport const titre = 'Engrenages'\n\n/**\n * 3A13 - PPCM_Engrenages\n * les deux on besoin de la def partielle serie : stlX\n * pb dans la sortie LaTeX, revoir comment user de la fonction katexPopup2() pour affichage d'une note hors texte!\n * @author Sébastien Lozano\n */\nexport default function PPCM_Engrenages() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.sup = 1;\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\t//this.consigne =`Déterminer au bout de combien de tours les deux roues seront toutes les deux revenues à leur position initiale.`;\n\tthis.consigne = ``;\n\t//this.consigne += `<br>`;\n\tcontext.isHtml ? this.spacing = 2 : this.spacing = 2;\n\tcontext.isHtml ? this.spacingCorr = 2 : this.spacingCorr = 1;\n\tthis.nbQuestions = 4;\n\t//this.correctionDetailleeDisponible = true;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.sup = 1;\n\tthis.listePackages = 'bclogo';\n\n\tvar num_ex = '3A13'; // pour rendre unique les id des SVG, en cas d'utilisation dans plusieurs exercices y faisant appel\n\n\tif (context.isHtml) {\n\t\tvar pourcentage = '100%'; // pour l'affichage des svg. On a besoin d'une variable globale\n\t} else { // sortie LaTeX\n\t};\n\tthis.nouvelleVersion = function (numeroExercice) {\n\t\tlet typesDeQuestions;\n\t\tif (context.isHtml) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.boutonAide = '';\n\t\t\tthis.boutonAide = modalPdf(numeroExercice, \"assets/pdf/FicheArithmetique-3A13.pdf\", \"Aide mémoire sur les fonctions (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\t//this.boutonAide += modalVideo('conteMathsNombresPremiers','/videos/LesNombresPremiers.mp4','Petit conte mathématique','Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenuCorrection = ''; // Liste de questions corrigées\n\n\t\tlet typesDeQuestionsDisponibles = [1, 2, 3, 4];\n\t\t//let typesDeQuestionsDisponibles = [1];\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions);\n\t\tlet txt_intro = `Boîte de vitesse, transmission de vélo, de moto, perceuse electrique, tout ça fonctionne avec des engrenages! Mais au fait, comment ça marche, les engrenages?`;\n\t\tif (context.isHtml) {\n\t\t\ttxt_intro += warnMessage(`Attention, les roues ci-dessous ne comportent pas le nombre de dents de l'énoncé!`, `nombres`, `Coup de pouce`);\n\t\t\ttxt_intro += `<div id=\"${num_ex}\" style=\"width: ${pourcentage}\"; height: 50px; display : table \"></div>`;\n\t\t\t//this.introduction += warnMessage(`Attention, les roues ci-dessous ne comportent pas le nombre de dents de l'énoncé!`, `nombres`, `Coup de pouce`);\n\t\t\t//this.introduction += `<div id=\"${num_ex}\" style=\"width: ${pourcentage}\"; height: 50px; display : table \"></div>`;\n\t\t\tSVG_engrenages(num_ex, 200, 200);\n\t\t};\n\n\t\tthis.introduction = lampeMessage({\n\t\t\ttitre: `Arithmétique des engrenages`,\n\t\t\ttexte: txt_intro,\n\t\t\tcouleur: `nombres`\n\t\t});\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\ttypesDeQuestions = listeTypeDeQuestions[i];\n\n\t\t\tif (context.isHtml) {\n\t\t\t\tlet id_unique = `${num_ex}_${i}_${Date.now()}`;\n\t\t\t\t//var id_du_div_corr = `div_svg_corr${numeroExercice}${id_unique}`;\n\t\t\t}\n\n\t\t\tvar nb_dents_r1;\n\t\t\tvar nb_dents_r2;\n\t\t\tlet txt_popup = `Étant donnés deux nombres entiers a et b, lorsque le plus petit multiple commun à $a$ et $b$ vaut $a \\\\times b$ ( $ppcm(a,b)=a\\\\times b$ ), on dit que `;\n\t\t\t//txt_popup += texteGras('les nombres a et b sont premiers entre eux');\n\t\t\tif (context.isHtml) {\n\t\t\t\ttxt_popup += '<b>les nombres a et b sont premiers entre eux</b>';\n\t\t\t} else {\n\t\t\t\ttxt_popup += '$\\\\textbf{les nombres a et b sont premiers entre eux}$';\n\t\t\t};\n\n\t\t\tswitch (typesDeQuestions) {\n\t\t\t\tcase 1: // avec de petits nombres on calcule les mutliples\n\t\t\t\t\tnb_dents_r1 = randint(5, 30);\n\t\t\t\t\tnb_dents_r2 = randint(5, 30, nb_dents_r1);\n\t\t\t\t\ttexte = `La roue n$\\\\degree$1 possède $${nb_dents_r1}$ dents et la roue n$\\\\degree$2 a $${nb_dents_r2}$ dents.`;\n\t\t\t\t\ttexte += `<br>` + numAlpha(0) + ` Écrire la liste des multiples de $${nb_dents_r1}$ et de $${nb_dents_r2}$.`;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) == (nb_dents_r1 * nb_dents_r2)) {\n\t\t\t\t\t\ttexte += `<br>Pourquoi peut-on en déduire que ${nb_dents_r1} et ${nb_dents_r2} sont des `;\n\t\t\t\t\t\t// let txt_popup = `Étant donnés deux nombres entiers a et b, lorsque $ppcm(a,b)=a\\\\times b$, on dit que `;\n\t\t\t\t\t\t// //txt_popup += texteGras('les nombres a et b sont premiers entre eux');\n\t\t\t\t\t\t// if (context.isHtml) {\n\t\t\t\t\t\t// \ttxt_popup += '<b>les nombres a et b sont premiers entre eux</b>';\n\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t// \ttxt_popup += '$\\\\textbf{les nombres a et b sont premiers entre eux}$';\n\t\t\t\t\t\t// };\n\t\t\t\t\t\t//${texteGras('les nombres a et b sont premiers entre eux')}.`;\n\t\t\t\t\t\ttexte += katexPopup2(\n\t\t\t\t\t\t\tnumeroExercice + 1,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\"nombres premiers entre eux ?\",\n\t\t\t\t\t\t\t`Définition : Nombres premiers entre eux`,\n\t\t\t\t\t\t\ttxt_popup\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `<br>` + numAlpha(1) + ` En déduire le nombre de tours de chaque roue avant le retour à leur position initiale.`;\n\t\t\t\t\ttexteCorr = numAlpha(0) + ` Liste des premiers multiples de $${nb_dents_r1}$ : <br>`;\n\t\t\t\t\t// on va faire en sorte de toujours avoir un nombre de multiples multiple de 5\n\t\t\t\t\tlet nb_marge = 5 - (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1) % 5;\n\t\t\t\t\tlet k_max = (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1 + nb_marge);\n\t\t\t\t\tfor (let k = 1; k < k_max + 1; k++) {\n\t\t\t\t\t\ttexteCorr += `$${k}\\\\times${nb_dents_r1} = `;\n\t\t\t\t\t\tif (k == (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1)) {\n\t\t\t\t\t\t\ttexteCorr += miseEnEvidence(texNombre(k * nb_dents_r1));\n\t\t\t\t\t\t\ttexteCorr += `$ ; `;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexteCorr += `${texNombre(k * nb_dents_r1)}$ ; `;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (k % 5 == 0) {\n\t\t\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `$\\\\ldots$ `;\n\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\ttexteCorr += ` Liste des premiers multiples de ${nb_dents_r2} : <br>`;\n\t\t\t\t\t// on va faire en sorte de toujours avoir un nombre de multiples multiple de 5\n\t\t\t\t\tnb_marge = 5 - (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r2) % 5;\n\t\t\t\t\tk_max = (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r2 + nb_marge);\n\t\t\t\t\tfor (let k = 1; k < k_max + 1; k++) {\n\t\t\t\t\t\ttexteCorr += `$${k}\\\\times${nb_dents_r2} = `;\n\t\t\t\t\t\tif (k == (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r2)) {\n\t\t\t\t\t\t\ttexteCorr += miseEnEvidence(texNombre(k * nb_dents_r2));\n\t\t\t\t\t\t\ttexteCorr += `$ ; `;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexteCorr += `${texNombre(k * nb_dents_r2)}$ ; `;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (k % 5 == 0) {\n\t\t\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `$\\\\ldots$ `;\n\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\ttexteCorr += `Le plus petit multiple commun à $${nb_dents_r1}$ et $${nb_dents_r2}$ vaut donc $ppcm(${nb_dents_r1},${nb_dents_r2}) = ${ppcm(nb_dents_r1, nb_dents_r2)}$.`;\n\t\t\t\t\ttexteCorr += `<br>`;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) == (nb_dents_r1 * nb_dents_r2)) {\n\t\t\t\t\t\ttexteCorr += `Le $ppcm(` + nb_dents_r1 + `;` + nb_dents_r2 + `)=` + nb_dents_r1 + `\\\\times` + nb_dents_r2 + `$ donc $${nb_dents_r1}$ et $${nb_dents_r2}$ sont des `;\n\t\t\t\t\t\ttexteCorr += katexPopup2(\n\t\t\t\t\t\t\tnumeroExercice + 2,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\"nombres premiers entre eux.\",\n\t\t\t\t\t\t\t`Définition : Nombres premiers entre eux`,\n\t\t\t\t\t\t\ttxt_popup //`Étant donnés deux nombres entiers a et b, lorsque $ppcm(a,b)=a\\\\times b$, on dit que ${texteGras('les nombres a et b sont premiers entre eux')}.`\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `<br><br>` + numAlpha(1) + ` Chaque roue doit tourner de $ppcm(${nb_dents_r1},${nb_dents_r2})=${texNombre(ppcm(nb_dents_r1, nb_dents_r2))}$ dents.`;\n\t\t\t\t\ttexteCorr += `<br> Cela correspond à $(${ppcm(nb_dents_r1, nb_dents_r2)}\\\\text{ dents})\\\\div (${nb_dents_r1}\\\\text{ dents/tour}) = ${ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1}$`;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1 == 1) {\n\t\t\t\t\t\ttexteCorr += ` tour `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += ` tours `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `pour la roue n$\\\\degree$1.`;\n\t\t\t\t\ttexteCorr += `<br>Cela correspond à $(${ppcm(nb_dents_r1, nb_dents_r2)}\\\\text{ dents})\\\\div (${nb_dents_r2}\\\\text{ dents/tour}) = ${ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r2}$`;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r2 == 1) {\n\t\t\t\t\t\ttexteCorr += ` tour `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += ` tours `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `pour la roue n$\\\\degree$2.`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // avec de plus grands nombre, c'est mieux de décomposer en facteurs premiers\n\t\t\t\t\tnb_dents_r1 = randint(31, 80);\n\t\t\t\t\tnb_dents_r2 = randint(31, 80, nb_dents_r1);\n\t\t\t\t\ttexte = `La roue n$\\\\degree$1 possède $${nb_dents_r1}$ dents et la roue n$\\\\degree$2 a $${nb_dents_r2}$ dents.`;\n\t\t\t\t\ttexte += `<br>` + numAlpha(0) + ` Décomposer $${nb_dents_r1}$ et $${nb_dents_r2}$ en produit de facteurs premiers.`;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) == (nb_dents_r1 * nb_dents_r2)) {\n\t\t\t\t\t\ttexte += `<br>Pourquoi peut-on en déduire que ${nb_dents_r1} et ${nb_dents_r2} sont des `;\n\t\t\t\t\t\ttexte += katexPopup2(\n\t\t\t\t\t\t\tnumeroExercice + 3,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\"nombres premiers entre eux\",\n\t\t\t\t\t\t\t`Définition : Nombres premiers entre eux`,\n\t\t\t\t\t\t\ttxt_popup //`Étant donnés deux nombres entiers a et b, lorsque $ppcm(a,b)=a\\\\times b$, on dit que ${texteGras('les nombres a et b sont premiers entre eux')}.`\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t\ttexte += `<br>` + numAlpha(1) + ` En déduire le nombre de tours de chaque roue avant le retour à leur position initiale.`;\n\t\t\t\t\ttexteCorr = `Pour un nombre de dents plus élevé, il est plus commode d'utiliser les décompositions en produit de facteurs premiers.`;\n\t\t\t\t\ttexteCorr += `<br>` + numAlpha(0) + ` Décomposition de $${nb_dents_r1}$ en produit de facteurs premiers :  $${nb_dents_r1} = ${decompositionFacteursPremiers(nb_dents_r1)}$.`;\n\t\t\t\t\ttexteCorr += `<br> Décomposition de $${nb_dents_r2}$ en produit de facteurs premiers :  $${nb_dents_r2} = ${decompositionFacteursPremiers(nb_dents_r2)}$.`;\n\t\t\t\t\ttexteCorr += `<br> D'où $ppcm(${nb_dents_r1},${nb_dents_r2})= ${decompositionFacteursPremiers(ppcm(nb_dents_r1, nb_dents_r2))}$.<br>`;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) == (nb_dents_r1 * nb_dents_r2)) {\n\t\t\t\t\t\ttexteCorr += `Le $ppcm(` + nb_dents_r1 + `;` + nb_dents_r2 + `)=` + nb_dents_r1 + `\\\\times` + nb_dents_r2 + `$ donc $${nb_dents_r1}$ et $${nb_dents_r2}$ sont des `;\n\t\t\t\t\t\ttexteCorr += katexPopup2(\n\t\t\t\t\t\t\tnumeroExercice + 4,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\"nombres premiers entre eux.\",\n\t\t\t\t\t\t\t`Définition : Nombres premiers entre eux`,\n\t\t\t\t\t\t\ttxt_popup //`Étant donnés deux nombres entiers a et b, lorsque $ppcm(a,b)=a\\\\times b$, on dit que ${texteGras('les nombres a et b sont premiers entre eux')}.`\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `<br><br>` + numAlpha(1) + ` Chaque roue doit tourner de $ppcm(${nb_dents_r1},${nb_dents_r2})=${texNombre(ppcm(nb_dents_r1, nb_dents_r2))}$ dents.`;\n\t\t\t\t\ttexteCorr += `<br> Cela correspond à $(${texNombre(ppcm(nb_dents_r1, nb_dents_r2))}\\\\text{ dents})\\\\div (${nb_dents_r1}\\\\text{ dents/tour}) = ${ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1}$`;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1 == 1) {\n\t\t\t\t\t\ttexteCorr += ` tour `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += ` tours `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `pour la roue n$\\\\degree$1.`;\n\t\t\t\t\ttexteCorr += `<br> Cela correspond à $(${texNombre(ppcm(nb_dents_r1, nb_dents_r2))}\\\\text{ dents})\\\\div (${nb_dents_r2}\\\\text{ dents/tour}) = ${ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r2}$`;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r2 == 1) {\n\t\t\t\t\t\ttexteCorr += ` tour `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += ` tours `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `pour la roue n$\\\\degree$2.`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // déterminer le nombre de dents d'une roue connaissant l'autre et le nombre de tours necessaires à la re-synchro\n\t\t\t\t\tnb_dents_r1 = randint(5, 80);\n\t\t\t\t\tnb_dents_r2 = randint(5, 80, nb_dents_r1);\n\t\t\t\t\ttexte = `La roue n$\\\\degree$2 a maintenant $${nb_dents_r2}$ dents.`;\n\t\t\t\t\ttexte += ` Déterminer le nombre de dents de la roue n$\\\\degree$1 qui ferait $${ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1}$ `;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1 == 1) {\n\t\t\t\t\t\ttexte += ` tour `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte += ` tours `;\n\t\t\t\t\t};\n\t\t\t\t\ttexte += ` pendant que la roue n$\\\\degree$2 en fait $${ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r2}$.`;\n\t\t\t\t\ttexteCorr = `Puisque la roue n$\\\\degree$2, qui a $${nb_dents_r2}$ dents, fait $${ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r2}$ `;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r2 == 1) {\n\t\t\t\t\t\ttexteCorr += ` tour `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += ` tours `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `, cela représente $${texNombre(ppcm(nb_dents_r1, nb_dents_r2))}$ dents.`;\n\t\t\t\t\ttexteCorr += `<br>La roue n$\\\\degree$1 doit donc aussi tourner de $${texNombre(ppcm(nb_dents_r1, nb_dents_r2))}$ dents, ceci en $${ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1}$ `;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1 == 1) {\n\t\t\t\t\t\ttexteCorr += ` tour `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += ` tours `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `.`;\n\t\t\t\t\ttexteCorr += `<br> on obtient donc $(${texNombre(ppcm(nb_dents_r1, nb_dents_r2))}\\\\text{ dents})\\\\div (${ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1}\\\\text{`;\n\t\t\t\t\tif (ppcm(nb_dents_r1, nb_dents_r2) / nb_dents_r1 == 1) {\n\t\t\t\t\t\ttexteCorr += ` tour `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr += ` tours `;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `}) = ${nb_dents_r1} \\\\text{ dents/tour}.$`;\n\t\t\t\t\ttexteCorr += `<br>La roue n$\\\\degree$1 a donc : $${nb_dents_r1}$ dents.`;\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\tlisteQuestionsToContenu(this);\n\t};\n\t//this.besoinFormulaireNumerique = ['Règle à travailler',5,\"1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissance\\n4 : Produit de puissances de même exposant\\n5 : Mélange\"]; \n}\n"],"names":["titre","PPCM_Engrenages","Exercice","this","sup","consigne","context","spacing","spacingCorr","nbQuestions","nbCols","nbColsCorr","listePackages","num_ex","pourcentage","nouvelleVersion","numeroExercice","typesDeQuestions","boutonAide","modalPdf","listeQuestions","listeCorrections","contenu","contenuCorrection","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","txt_intro","warnMessage","SVG_engrenages","introduction","lampeMessage","texte","couleur","texteCorr","i","cpt","Date","now","nb_dents_r1","nb_dents_r2","txt_popup","randint","numAlpha","ppcm","katexPopup2","nb_marge","k_max","k","miseEnEvidence","texNombre","decompositionFacteursPremiers","indexOf","push","listeQuestionsToContenu"],"sourceRoot":""}