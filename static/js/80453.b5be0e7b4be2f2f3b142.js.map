{"version":3,"file":"js/80453.b5be0e7b4be2f2f3b142.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5R20-4.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListesSansChangerOrdre,calcul,prenomF,prenomM,texteEnCouleur,texteGras,texPrix,numAlpha} from '../../modules/outils.js'\nexport const titre = 'Résoudre un problème en utilisant une somme algébrique de relatifs.'\n\n/** \n * * résoudre un problème additif avec des relatifs\n * * 5R20-4\n * @author Sébastien Lozano\n */\n\nexport default function Problemes_additifs_relatifs_5e() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.debug = false;\n\tthis.sup = 1;\n\tif (this.debug) {\n\t\tthis.nbQuestions = 1;\n\t} else {\n\t\tthis.nbQuestions = 1;\n\t};\n\n\tthis.titre = titre;\n\tthis.consigne = ``;\n\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\t//this.nbQuestionsModifiable = false;\n\tcontext.isHtml ? this.spacing = 3 : this.spacing = 2;\n\tcontext.isHtml ? this.spacingCorr = 2.5 : this.spacingCorr = 1.5;\n\n\tlet typesDeQuestionsDisponibles;\n\n\tthis.nouvelleVersion = function () {\n\t\tif (this.debug) {\n\t\t\ttypesDeQuestionsDisponibles = [0];\n\t\t} else {\n\t\t\t//   typesDeQuestionsDisponibles = shuffle([choice([1,3]),choice([2,4]),0]);\n\t\t\ttypesDeQuestionsDisponibles = [0];\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\n\t\t//typesDeQuestionsDisponibles=[1];\t\t\t\n\n\t\t//let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\t\t\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\tlet g_p_u; //pour le gain/perte unitaire\n\t\t\tlet g_m; //pour le gain multiple\n\t\t\t// on veut des multiples de 5 pour n'avoir que des demis entiers ou des entiers\n\t\t\tdo {\n\t\t\t\tg_p_u = randint(10, 30);\n\t\t\t\tg_m = randint(10, 30);\n\t\t\t} while (g_p_u % 5 != 0 || g_m % 5 != 0 || g_m <= g_p_u)\n\n\t\t\tlet n_tot = randint(10, 15); // nombre totale de lancers\n\t\t\tlet n_g_u; // nb de gains untitaires\n\t\t\tlet n_p; // nb de pertes\n\t\t\tdo {\n\t\t\t\tn_g_u = randint(2, 10);\n\t\t\t\tn_p = randint(2, 10);\n\t\t\t} while (n_g_u + n_p >= n_tot)\n\n\t\t\t// on échange parfois le nombre de gain unitaire et le nombre de perte pour avoir un bilan négatif plus souvent\n\t\t\tif (n_p < n_g_u) {\n\t\t\t\tif (randint(0, 1) == 0) {\n\t\t\t\t\tlet temp = n_p;\n\t\t\t\t\tn_p = n_g_u;\n\t\t\t\t\tn_g_u = temp;\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tlet prenoms = [[prenomF(), 'Elle', 'elle'], [prenomM(), 'Il', 'il']];\n\t\t\tlet currentPrenom = choice(prenoms);\n\n\t\t\t// une fonction pour écrire les chaine correctives\n\t\t\tfunction myGainPerteString(nb, type, valeur) {\n\t\t\t\tlet sortie = ``;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'gain':\n\t\t\t\t\t\tsortie = `(+${texPrix(valeur)}$€$)`;\n\t\t\t\t\t\tfor (let m = 1; m < nb; m++) {\n\t\t\t\t\t\t\tsortie += `+(+${texPrix(valeur)}$€$)`;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'perte':\n\t\t\t\t\t\tsortie = `(-${texPrix(valeur)}$€$)`;\n\t\t\t\t\t\tfor (let m = 1; m < nb; m++) {\n\t\t\t\t\t\t\tsortie += `+(-${texPrix(valeur)}$€$)`;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t};\n\t\t\t\treturn sortie;\n\t\t\t}\n\n\t\t\t// une fonction pour dire si le bilan est positif ou négatif\n\t\t\tfunction isBilanPositif(tot) {\n\t\t\t\tif (tot >= 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tlet bilan;\n\t\t\tif (isBilanPositif(calcul((n_tot - n_g_u - n_p) * calcul(g_m / 10)) + calcul(n_g_u * calcul(g_p_u / 10)) - calcul(n_p * calcul(g_p_u / 10)))) {\n\t\t\t\tbilan = [`Globalement, le montant des gains`, `est supérieur au montant des pertes`, `${texteEnCouleur(`Le bilan est donc positif.`)}`, `a gagné`, texPrix(calcul((n_tot - n_g_u - n_p) * calcul(g_m / 10)) + calcul(n_g_u * calcul(g_p_u / 10)) - calcul(n_p * calcul(g_p_u / 10)))];\n\t\t\t} else {\n\t\t\t\tbilan = [`Globalement, le montant des gains`, `est inférieur au montant des pertes`, `${texteEnCouleur(`Le bilan est donc négatif.`)}`, `a perdu`, texPrix((-1) * (calcul((n_tot - n_g_u - n_p) * calcul(g_m / 10)) + calcul(n_g_u * calcul(g_p_u / 10)) - calcul(n_p * calcul(g_p_u / 10))))];\n\t\t\t}\n\t\t\t// pour les situations\n\t\t\tlet situations = [\n\t\t\t\t{//case 0 --> les quilles\n\t\t\t\t\tnb_tot_lancers: n_tot,\n\t\t\t\t\tnb_gains_unitaires: n_g_u,\n\t\t\t\t\tnb_pertes: n_p,\n\t\t\t\t\tnb_gains: n_tot - n_g_u - n_p,\n\t\t\t\t\tperte: calcul(g_p_u / 10),\n\t\t\t\t\tgain_unitaire: calcul(g_p_u / 10),\n\t\t\t\t\tgain_multiple: calcul(g_m / 10),\n\t\t\t\t\tenonce_1: `lancer une balle sur des quilles.`,\n\t\t\t\t\tenonce_2: `- Si la balle touche plusieurs quilles, le joueur gagne `,\n\t\t\t\t\tenonce_3: `- Si la balle ne touche qu'une quille, le joueur gagne `,\n\t\t\t\t\tenonce_4: `- Si la balle ne touche aucune quille, le joueur perd `,\n\t\t\t\t\tenonce_5: `a lancé`,\n\t\t\t\t\tenonce_6: `la balle`,\n\t\t\t\t\tcorrection_1: `touché plusieurs quilles`,\n\t\t\t\t\tcorrection_2: `touché qu'une seule quille`,\n\t\t\t\t\tprenom: currentPrenom[0],//prenoms[choice([0,1])][0],\n\t\t\t\t\tpronomMaj: currentPrenom[1],//prenoms[choice([0,1])][1],\n\t\t\t\t\tpronomMin: currentPrenom[2],//prenoms[choice([0,1])][2],\n\t\t\t\t\tbilan: bilan,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tlet enonces = [];\n\t\t\tlet i_sous_question;\n\t\t\tlet i_sous_question_corr;\n\t\t\tfor (let k = 0; k < situations.length; k++) {\n\t\t\t\ti_sous_question = 0;\n\t\t\t\ti_sous_question_corr = 0;\n\t\t\t\tenonces.push({\n\t\t\t\t\tenonce: `\n\t\t\t\t\tUn jeu consiste à ${situations[k].enonce_1}\n\t\t\t\t\t<br>${situations[0].enonce_2} $${texPrix(situations[0].gain_multiple)}$€.\t\t\t\t\n\t\t\t\t\t<br>${situations[0].enonce_3} $${texPrix(situations[0].gain_unitaire)}$€.\n\t\t\t\t\t<br>${situations[0].enonce_4} $${texPrix(situations[0].perte)}$€.\n\t\t\t\t\t<br>${situations[k].prenom} ${situations[k].enonce_5} $${situations[k].nb_tot_lancers}$ fois ${situations[k].enonce_6}.\n\t\t\t\t\t${situations[k].pronomMaj} a perdu de l'argent $${situations[k].nb_pertes}$ fois et a gagné $${situations[k].nb_gains_unitaires}$ fois $${texPrix(situations[k].gain_unitaire)}$€.\n\t\t\t\t\t<br> ${numAlpha(i_sous_question++)} A-t-${situations[k].pronomMin} globalement gagné ou perdu de l'argent ?\n\t\t\t\t\t<br> ${numAlpha(i_sous_question++)} Combien a-t-${situations[k].pronomMin} globalement gagné ou perdu ?\n\t\t\t\t\t`,\n\t\t\t\t\tquestion: ``,\n\t\t\t\t\tcorrection: `\n\t\t\t\t\t${situations[k].prenom} ${situations[k].enonce_5} $${situations[k].nb_tot_lancers}$ fois ${situations[k].enonce_6},\n\t\t\t\t\tsur les $${situations[k].nb_tot_lancers}$ lancers, on sait combien de fois ${situations[k].pronomMin} a perdu de l'argent et combien de fois ${situations[k].pronomMin} a gagné $${texPrix(situations[k].gain_unitaire)}$€, les autres lancers correspondent donc au nombre de fois où ${situations[k].pronomMin} a ${situations[k].correction_1} et qu'${situations[k].pronomMin} a gagné $${texPrix(situations[k].gain_multiple)}$€ \n\t\t\t\t\t<br> $${situations[k].nb_tot_lancers}-${situations[k].nb_pertes}-${situations[k].nb_gains_unitaires} = ${situations[k].nb_tot_lancers - situations[k].nb_pertes - situations[k].nb_gains_unitaires}$,\n\t\t\t\t\t${situations[k].pronomMin} a donc ${situations[k].correction_1} $${situations[k].nb_gains}$ fois.\n\n\t\t\t\t\t<br>${texteGras(`Gains lorsqu'${situations[k].pronomMin} a ${situations[k].correction_1} :`)}\n\t\t\t\t\t<br>$${myGainPerteString(situations[k].nb_gains, 'gain', situations[k].gain_multiple)} = ${situations[k].nb_gains}\\\\times (+${texPrix(situations[k].gain_multiple)}$€$) = +${texPrix(situations[k].nb_gains * situations[k].gain_multiple)}$€\n\n\t\t\t\t\t<br>${texteGras(`Gains lorsqu'${situations[k].pronomMin} n'a ${situations[k].correction_2} :`)}\n\t\t\t\t\t<br>$${myGainPerteString(situations[k].nb_gains_unitaires, 'gain', situations[k].gain_unitaire)} = ${situations[k].nb_gains_unitaires}\\\\times (+${texPrix(situations[k].gain_unitaire)}$€$) = +${texPrix(situations[k].nb_gains_unitaires * situations[k].gain_unitaire)}$€\n\n\t\t\t\t\t<br>${texteGras(`Pertes :`)}\n\t\t\t\t\t<br>$${myGainPerteString(situations[k].nb_pertes, 'perte', situations[k].perte)} = ${situations[k].nb_pertes}\\\\times (-${texPrix(situations[k].perte)}$€$) = -${texPrix(situations[k].nb_pertes * situations[k].perte)}$€\n\n\t\t\t\t\t<br>${numAlpha(i_sous_question_corr++)} ${situations[k].bilan[0]}, $(+${texPrix(situations[k].nb_gains * situations[k].gain_multiple)}$€$)$ et $(+${texPrix(situations[k].nb_gains_unitaires * situations[k].gain_unitaire)}$€$)$, ${situations[k].bilan[1]}, $(-${texPrix(situations[k].nb_pertes * situations[k].perte)}$€$)$.\n\t\t\t\t\t<br> ${situations[k].bilan[2]}   \n\n\t\t\t\t\t<br>${numAlpha(i_sous_question_corr++)} \n\t\t\t\t\t$(+${texPrix(situations[k].nb_gains * situations[k].gain_multiple)}$€$)+(+${texPrix(situations[k].nb_gains_unitaires * situations[k].gain_unitaire)}$€$)+(-${texPrix(situations[k].nb_pertes * situations[k].perte)}$€$) = (${texPrix(situations[k].nb_gains * situations[k].gain_multiple + situations[k].nb_gains_unitaires * situations[k].gain_unitaire - situations[k].nb_pertes * situations[k].perte)}$€$)$\n\t\t\t\t\t<br>${texteEnCouleur(`Globalement ${situations[k].prenom} ${situations[k].bilan[3]} $${situations[k].bilan[4]}$€`)} \n\n\t\t\t\t\t`\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tswitch (listeTypeDeQuestions[i]) {\n\t\t\t\tcase 0:\n\t\t\t\t\ttexte = `${enonces[0].enonce}`;\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br>`;\n\t\t\t\t\t\ttexte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n\t\t\t\t\t\ttexte += `             `\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = `${enonces[0].correction}`;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\tlisteQuestionsToContenu(this);\n\n\t}\n\t//this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n\t//this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\t\n};\n\n\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Problemes_additifs_relatifs_5e","typesDeQuestionsDisponibles","Exercice","this","debug","sup","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","g_p_u","g_m","randint","n_g_u","n_p","n_tot","temp","bilan","prenoms","prenomF","prenomM","currentPrenom","choice","myGainPerteString","nb","type","valeur","sortie","texPrix","m","calcul","texteEnCouleur","i_sous_question","i_sous_question_corr","situations","nb_tot_lancers","nb_gains_unitaires","nb_pertes","nb_gains","perte","gain_unitaire","gain_multiple","enonce_1","enonce_2","enonce_3","enonce_4","enonce_5","enonce_6","correction_1","correction_2","prenom","pronomMaj","pronomMin","enonces","k","length","push","enonce","numAlpha","question","correction","texteGras","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}