{"version":3,"file":"js/35508.e63ec0850f2bdbe2c473.js","mappings":"4GAMe,SAASA,IAItBC,KAAKC,MAAQ,GACbD,KAAKE,YAAa,EAclBF,KAAKG,SAAW,GAChBH,KAAKI,mBAAqB,GAC1BJ,KAAKK,aAAe,GACpBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKQ,QAAU,GACfR,KAAKS,kBAAoB,GACzBT,KAAKU,eAAiB,GACtBV,KAAKW,sBAAwB,GAK7BX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EAKnBb,KAAKc,mBAAoB,EACzBd,KAAKe,cAAgB,GACrBf,KAAKgB,oBAAqB,EAC1BhB,KAAKiB,uBAAwB,EAC7BjB,KAAKkB,OAAS,EACdlB,KAAKmB,WAAa,EAClBnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAM7BvB,KAAKwB,QAAS,EACdxB,KAAKyB,gBAAkB,EAKvBzB,KAAK0B,YAAc,GACnB1B,KAAK2B,mBAAqB,EAC1B3B,KAAK4B,+BAAgC,EACrC5B,KAAK6B,qBAAsB,EAC3B7B,KAAK8B,oBAAqB,EAC1B9B,KAAK+B,MAAQ,GAEb/B,KAAKgC,YAAa,EAClBhC,KAAKiC,uBAAwB,EAE7BjC,KAAKkC,2BAA4B,EACjClC,KAAKmC,uBAAwB,EAC7BnC,KAAKoC,6BAA8B,EAEnCpC,KAAKqC,4BAA6B,EAClCrC,KAAKsC,wBAAyB,EAC9BtC,KAAKuC,8BAA+B,EAEpCvC,KAAKwC,4BAA6B,EAClCxC,KAAKyC,wBAAyB,EAC9BzC,KAAK0C,8BAA+B,EAEpC1C,KAAK2C,4BAA6B,EAClC3C,KAAK4C,wBAAyB,EAC9B5C,KAAK6C,8BAA+B,EAMpC7C,KAAK8C,cAAe,EASpB9C,KAAK+C,eAAiB,GAMtB/C,KAAKgD,gBAAkB,SAAUC,KAQjCjD,KAAKkD,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAASnD,KAAK+C,eAAiB,IACnC,IAAIM,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAIxD,KAAK+C,eAAeU,QAAQJ,IAAmB,KAGjDrD,KAAK+C,eAAeW,KAAKL,IAClB,I,iMC7HN,MAAMpD,EAAQ,uDACR0D,GAAkB,EAClBC,EAAiB,MAGjBC,EAAoB,aAOlB,SAASC,IACtB/D,EAAAA,QAAAA,KAAcC,MACdA,KAAK0B,YAAc,EACnB1B,KAAKyB,gBAAkB,EACvBzB,KAAKY,QAAU,EAEfZ,KAAKgD,gBAAkB,WAGrB,IAAIe,EAAOC,EAAWC,EAAGC,EACzB,OAHAlE,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,IAEhB4D,EAAAA,EAAAA,KAAO,CAAC,EAAG,EAAG,KACpB,KAAK,EACHF,GAAIG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAQ,EAAG,IAAKA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,IAAKA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,KAAMA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,KACtFH,GAAIE,EAAAA,EAAAA,KAAOH,EAAK,GAAII,EAAAA,EAAAA,KAAQ,EAAG,GAAK,KAAQF,EAAAA,EAAAA,KAAO,CAAC,GAAI,KACpDnE,KAAKgC,YACP+B,EAAQ,qCAEN/D,KAAKU,eAAe,GADlBuD,EAAIC,EACmB,CACvBI,OAAQP,EACRQ,QAAS,CAAEC,YAAY,GACvBC,aAAc,CACZ,CACEV,MAAQ,KAAGW,EAAAA,EAAAA,KAAWT,SAAQS,EAAAA,EAAAA,KAAWR,QACzCS,QAAQ,GAEV,CACEZ,MAAQ,KAAGW,EAAAA,EAAAA,KAAWT,SAAQS,EAAAA,EAAAA,KAAWR,QACzCS,QAAQ,KAKW,CACvBL,OAAQP,EACRQ,QAAS,CAAEC,YAAY,GACvBC,aAAc,CACZ,CACEV,MAAQ,KAAGW,EAAAA,EAAAA,KAAWT,SAAQS,EAAAA,EAAAA,KAAWR,QACzCS,QAAQ,GAEV,CACEZ,MAAQ,KAAGW,EAAAA,EAAAA,KAAWT,SAAQS,EAAAA,EAAAA,KAAWR,QACzCS,QAAQ,KAMhBZ,IAASa,EAAAA,EAAAA,IAAgB5E,KAAM,GAAG+D,OAElCA,EAAS,cAAYW,EAAAA,EAAAA,KAAWT,cAAaS,EAAAA,EAAAA,KAAWR,SAG1DF,EAAa,gTAIXA,GADEC,EAAIC,EACQ,eAAaQ,EAAAA,EAAAA,KAAWT,MAAKY,EAAAA,EAAAA,IAAe,kBAAmB,WAAUH,EAAAA,EAAAA,KAAWR,6BACxFQ,EAAAA,EAAAA,KAAWT,QAAOY,EAAAA,EAAAA,IAAe,kBAAmB,WAAUH,EAAAA,EAAAA,KAAWR,SAErE,eAAaQ,EAAAA,EAAAA,KAAWR,MAAKW,EAAAA,EAAAA,IAAe,kBAAmB,WAAUH,EAAAA,EAAAA,KAAWT,6BACxFS,EAAAA,EAAAA,KAAWR,QAAOW,EAAAA,EAAAA,IAAe,kBAAmB,WAAUH,EAAAA,EAAAA,KAAWT,SAGrF,MACF,KAAK,EACHA,GAAIG,EAAAA,EAAAA,MAA6F,IAArFC,EAAAA,EAAAA,KAAQ,EAAG,IAAKA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,IAAKA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,KAAMA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,MACvFH,GAAIE,EAAAA,EAAAA,KAAOH,EAAK,GAAII,EAAAA,EAAAA,KAAQ,EAAG,GAAK,KAAQF,EAAAA,EAAAA,KAAO,CAAC,GAAI,KACpDnE,KAAKgC,YACP+B,EAAQ,qCAEN/D,KAAKU,eAAe,GADlBuD,EAAIC,EACmB,CACvBI,OAAQP,EACRQ,QAAS,CAAEC,YAAY,GACvBC,aAAc,CACZ,CACEV,MAAQ,MAAIW,EAAAA,EAAAA,KAAWT,WAAUS,EAAAA,EAAAA,KAAWR,SAC5CS,QAAQ,GAEV,CACEZ,MAAQ,MAAIW,EAAAA,EAAAA,KAAWT,WAAUS,EAAAA,EAAAA,KAAWR,SAC5CS,QAAQ,KAKW,CACvBL,OAAQP,EACRQ,QAAS,CAAEC,YAAY,GACvBC,aAAc,CACZ,CACEV,MAAQ,MAAIW,EAAAA,EAAAA,KAAWT,WAAUS,EAAAA,EAAAA,KAAWR,SAC5CS,QAAQ,GAEV,CACEZ,MAAQ,MAAIW,EAAAA,EAAAA,KAAWT,WAAUS,EAAAA,EAAAA,KAAWR,SAC5CS,QAAQ,KAMhBZ,IAASa,EAAAA,EAAAA,IAAgB5E,KAAM,GAAG+D,OAElCA,EAAS,eAAaW,EAAAA,EAAAA,KAAWT,gBAAeS,EAAAA,EAAAA,KAAWR,UAG7DF,EAAa,qTAKXA,GADEC,EAAIC,EACQ,eAAaQ,EAAAA,EAAAA,KAAWT,MAAKY,EAAAA,EAAAA,IAAe,kBAAmB,WAAUH,EAAAA,EAAAA,KAAWR,4BACzFQ,EAAAA,EAAAA,KAAWT,SAAQY,EAAAA,EAAAA,IAAe,kBAAmB,YAAWH,EAAAA,EAAAA,KAAWR,SAEtE,eAAaQ,EAAAA,EAAAA,KAAWR,MAAKW,EAAAA,EAAAA,IAAe,kBAAmB,WAAUH,EAAAA,EAAAA,KAAWT,4BACzFS,EAAAA,EAAAA,KAAWR,SAAQW,EAAAA,EAAAA,IAAe,kBAAmB,YAAWH,EAAAA,EAAAA,KAAWT,UAGtF,MACF,KAAK,EACHA,GAAIG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAQ,EAAG,IAAKA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,IAAKA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,KAAMA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,KACtFH,GAAIE,EAAAA,EAAAA,MAAS,EAAKH,EAAK,GAAII,EAAAA,EAAAA,KAAQ,EAAG,GAAK,KAAQF,EAAAA,EAAAA,KAAO,CAAC,GAAI,KAC3DnE,KAAKgC,YACP+B,EAAQ,sCACJe,EAAAA,EAAAA,KAAIb,IAAKa,EAAAA,EAAAA,KAAIZ,GACflE,KAAKU,eAAe,GAAK,CACvB4D,OAAQP,EACRQ,QAAS,CAAEC,YAAY,GACvBC,aAAc,CACZ,CACEV,MAAQ,MAAIW,EAAAA,EAAAA,KAAWR,UAASQ,EAAAA,EAAAA,KAAWT,QAC3CU,QAAQ,GAEV,CACEZ,MAAQ,KAAGW,EAAAA,EAAAA,KAAWT,UAASS,EAAAA,EAAAA,KAAWR,SAC1CS,QAAQ,KAKd3E,KAAKU,eAAe,GAAK,CACvB4D,OAAQP,EACRQ,QAAS,CAAEC,YAAY,GACvBC,aAAc,CACZ,CACEV,MAAQ,KAAGW,EAAAA,EAAAA,KAAWT,UAASS,EAAAA,EAAAA,KAAWR,SAC1CS,QAAQ,GAEV,CACEZ,MAAQ,MAAIW,EAAAA,EAAAA,KAAWR,UAASQ,EAAAA,EAAAA,KAAWT,QAC3CU,QAAQ,KAMhBZ,IAASa,EAAAA,EAAAA,IAAgB5E,KAAM,GAAG+D,OAELA,GAAzBI,EAAAA,EAAAA,KAAO,EAAC,GAAM,IAAoB,cAAYO,EAAAA,EAAAA,KAAWT,eAAcS,EAAAA,EAAAA,KAAWR,UAA4B,gBAAcQ,EAAAA,EAAAA,KAAWR,eAAcQ,EAAAA,EAAAA,KAAWT,SAGtKD,EAAa,gBAAcU,EAAAA,EAAAA,KAAWR,0CAAyCQ,EAAAA,EAAAA,KAAWT,2FAC5BS,EAAAA,EAAAA,KAAWT,eAAcS,EAAAA,EAAAA,KAAWR,6CACxEQ,EAAAA,EAAAA,KAAWT,cAAaS,EAAAA,EAAAA,MAAYR,kVAI1DY,EAAAA,EAAAA,KAAIb,IAAKa,EAAAA,EAAAA,KAAIZ,GACfF,GAAc,eAAaU,EAAAA,EAAAA,KAAWT,MAAKY,EAAAA,EAAAA,IAAe,kBAAmB,WAAUH,EAAAA,EAAAA,MAAYR,2BAC3FQ,EAAAA,EAAAA,KAAWT,QAAOY,EAAAA,EAAAA,IAAe,kBAAmB,WAAUH,EAAAA,EAAAA,MAAYR,0CAChEQ,EAAAA,EAAAA,KAAWT,YAAWS,EAAAA,EAAAA,KAAWR,UAEnDF,GAAc,eAAaU,EAAAA,EAAAA,KAAWT,MAAKY,EAAAA,EAAAA,IAAe,kBAAmB,WAAUH,EAAAA,EAAAA,MAAYR,2BAC3FQ,EAAAA,EAAAA,KAAWT,QAAOY,EAAAA,EAAAA,IAAe,kBAAmB,WAAUH,EAAAA,EAAAA,MAAYR,0CAChEQ,EAAAA,EAAAA,KAAWT,YAAWS,EAAAA,EAAAA,KAAWR,UAMzDlE,KAAKM,eAAeoD,KAAKK,GACzB/D,KAAKO,iBAAiBmD,KAAKM,IAC3Be,EAAAA,EAAAA,KAAwB/E","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/2e/can2F11.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { listeQuestionsToContenu, abs, miseEnEvidence, randint, calcul, choice, texNombrec } from '../../../modules/outils.js'\nimport { propositionsQcm } from '../../../modules/gestionInteractif.js'\nexport const titre = 'Utiliser la fonction carré pour comparer deux images'\nexport const interactifReady = true\nexport const interactifType = 'qcm'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '30/12/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence\n*/\nexport default function ComparerAvecFctCarre () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 1\n  this.tailleDiaporama = 1\n  this.spacing = 2\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let texte, texteCorr, a, b\n    switch (choice([1, 2, 3])) { //\n      case 1 :\n        a = calcul(randint(0, 5) + randint(5, 9) / 10 + randint(5, 9) / 100 + randint(0, 2) / 1000)\n        b = calcul(a + (2 * randint(1, 9) / 1000) * choice([1, -1]))\n        if (this.interactif) {\n          texte = 'Sélectionner la réponse correcte. '\n          if (a < b) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: `$${texNombrec(a)}^2<${texNombrec(b)}^2$`,\n                  statut: true\n                },\n                {\n                  texte: `$${texNombrec(a)}^2>${texNombrec(b)}^2$`,\n                  statut: false\n                }\n              ]\n            }\n          } else {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: `$${texNombrec(a)}^2>${texNombrec(b)}^2$`,\n                  statut: true\n                },\n                {\n                  texte: `$${texNombrec(a)}^2<${texNombrec(b)}^2$`,\n                  statut: false\n                }\n              ]\n            }\n          }\n\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `Comparer $${texNombrec(a)}^2$ et $${texNombrec(b)}^2$.`\n        }\n\n        texteCorr = `            La fonction carré étant strictement croissante sur $[0;+\\\\infty[$, elle conserve l'ordre. Cela signifie que deux nombres positifs sont rangés dans le même ordre que leurs carrés.   <br>\n            Autrement dit, si $a$ et $b$ sont deux nombres  positifs et si $a < b$, alors $a^2 < b^2$.`\n\n        if (a < b) {\n          texteCorr += `<br>Comme $${texNombrec(a)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(b)}$, \n          alors  $${texNombrec(a)}^2${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(b)}^2$.`\n        } else {\n          texteCorr += `<br>Comme $${texNombrec(b)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(a)}$, \n          alors  $${texNombrec(b)}^2${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(a)}^2$.`\n        }\n\n        break\n      case 2 :\n        a = calcul((randint(0, 5) + randint(5, 9) / 10 + randint(5, 9) / 100 + randint(0, 2) / 1000) * (-1))\n        b = calcul(a + (2 * randint(1, 9) / 1000) * choice([1, -1]))\n        if (this.interactif) {\n          texte = 'Sélectionner la réponse correcte. '\n          if (a < b) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: `$(${texNombrec(a)})^2>(${texNombrec(b)})^2$`,\n                  statut: true\n                },\n                {\n                  texte: `$(${texNombrec(a)})^2<(${texNombrec(b)})^2$`,\n                  statut: false\n                }\n              ]\n            }\n          } else {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: `$(${texNombrec(a)})^2<(${texNombrec(b)})^2$`,\n                  statut: true\n                },\n                {\n                  texte: `$(${texNombrec(a)})^2>(${texNombrec(b)})^2$`,\n                  statut: false\n                }\n              ]\n            }\n          }\n\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          texte = `Comparer $(${texNombrec(a)})^2$ et $(${texNombrec(b)})^2$.`\n        }\n\n        texteCorr = ` La fonction carré étant strictement décroissante sur $]-\\\\infty;0]$, elle change l'ordre. <br>\n            Cela signifie que deux nombres négatifs sont rangés dans l'ordre inverse de leurs carrés.<br>\n            Autrement dit, si $a$ et $b$ sont deux nombres  négatifs et si $a < b$, alors $a^2 > b^2$.`\n\n        if (a < b) {\n          texteCorr += `<br>Comme $${texNombrec(a)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(b)}$, \n        alors  $(${texNombrec(a)})^2${miseEnEvidence('\\\\boldsymbol{>}', 'blue')}(${texNombrec(b)})^2$`\n        } else {\n          texteCorr += `<br>Comme $${texNombrec(b)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(a)}$, \n        alors  $(${texNombrec(b)})^2${miseEnEvidence('\\\\boldsymbol{>}', 'blue')}(${texNombrec(a)})^2$.`\n        }\n\n        break\n      case 3 :\n        a = calcul(randint(1, 6) + randint(5, 9) / 10 + randint(5, 9) / 100 + randint(0, 2) / 1000)\n        b = calcul((-1) * a + (2 * randint(1, 9) / 1000) * choice([1, -1]))\n        if (this.interactif) {\n          texte = 'Sélectionner la réponse correcte. '\n          if (abs(a) < abs(b)) {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: `$(${texNombrec(b)})^2>${texNombrec(a)}^2$`,\n                  statut: true\n                },\n                {\n                  texte: `$${texNombrec(a)}^2>(${texNombrec(b)})^2$`,\n                  statut: false\n                }\n              ]\n            }\n          } else {\n            this.autoCorrection[0] = {\n              enonce: texte,\n              options: { horizontal: true },\n              propositions: [\n                {\n                  texte: `$${texNombrec(a)}^2>(${texNombrec(b)})^2$`,\n                  statut: true\n                },\n                {\n                  texte: `$(${texNombrec(b)})^2>${texNombrec(a)}^2$`,\n                  statut: false\n                }\n              ]\n            }\n          }\n\n          texte += propositionsQcm(this, 0).texte\n        } else {\n          if (choice([true, false])) { texte = `Comparer $${texNombrec(a)}^2$ et $(${texNombrec(b)})^2$.` } else { texte = `Comparer  $(${texNombrec(b)})^2$ et $${texNombrec(a)}^2$.` }\n        }\n\n        texteCorr = ` Le nombre $${texNombrec(b)}$ est négatif, alors que le nombre $${texNombrec(a)}$ est positif. \n            Comme deux nombres opposés ont le même carré, comparer $${texNombrec(a)}^2$ et $(${texNombrec(b)})^2$ \n            revient à comparer $${texNombrec(a)}^2$ et $${texNombrec(-b)}^2$.<br>\n             La fonction carré étant strictement croissante sur $[0;+\\\\infty[$, elle conserve l'ordre. <br>\n             Cela signifie que deux nombres positifs sont rangés dans le même ordre que leurs carrés.   <br>\n             Autrement dit, si $a$ et $b$ sont deux nombres  positifs et si $a < b$, alors $a^2 < b^2$.`\n        if (abs(a) < abs(b)) {\n          texteCorr += `<br>Comme $${texNombrec(a)}${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(-b)}$, \n        alors  $${texNombrec(a)}^2${miseEnEvidence('\\\\boldsymbol{<}', 'blue')}${texNombrec(-b)}^2$.<br>\n        On en déduit que $${texNombrec(a)}^2 < (${texNombrec(b)})^2$.`\n        } else {\n          texteCorr += `<br>Comme $${texNombrec(a)}${miseEnEvidence('\\\\boldsymbol{>}', 'blue')}${texNombrec(-b)}$, \n        alors  $${texNombrec(a)}^2${miseEnEvidence('\\\\boldsymbol{>}', 'blue')}${texNombrec(-b)}^2$.<br>\n        On en déduit que $${texNombrec(a)}^2 > (${texNombrec(b)})^2$.`\n        }\n\n        break\n    }\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","dateDePublication","ComparerAvecFctCarre","texte","texteCorr","a","b","choice","calcul","randint","enonce","options","horizontal","propositions","texNombrec","statut","propositionsQcm","miseEnEvidence","abs","listeQuestionsToContenu"],"sourceRoot":""}