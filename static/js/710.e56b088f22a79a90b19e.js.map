{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4Algo1-0.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Tracer_avec_scratch","type_de_questions_disponibles","Exercice","this","consigne","nbCols","nbColsCorr","listePackages","typeExercice","nbQuestions","debug","nouvelleVersion","listeQuestions","listeCorrections","fenetreMathalea2D","xmin","ymin","xmax","ymax","pixelsParCm","scale","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","myPolyName","n","sortie","name","nameParSommets","nb_pas","mySituation","tab_abs_dem_lutin2","situations","nb_cotes","nom","code_svg","code_tikz","fig","fig_corr","shuffle","lutin2","creerLutin","color","pointilles","allerA","baisseCrayon","leveCrayon","k","avance","tournerD","calcul","mesAppels_enonce","mathalea2d","lutin3","mesAppels_corr","enonces","push","enonce","sortieHtml","question","correction","texteEnCouleur","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice"],"mappings":"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","file":"js/710.e56b088f22a79a90b19e.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,shuffle,combinaisonListesSansChangerOrdre,calcul,texteEnCouleur} from '../../modules/outils.js'\nimport {creerLutin,avance,baisseCrayon,leveCrayon,tournerD,allerA,mathalea2d} from '../../modules/2d.js'\nimport {combinaisonListes} from '../../modules/outils.js'\n\nexport const titre = 'Dessiner avec scratch'\n\n/** \n * * Dessiner selon un programme scratch\n * * 4Algo1-0\n * @author Sébastien Lozano\n * mise à plat du big ouaille suite au passage à la V2\n */\n\n      export default function Tracer_avec_scratch() {\n  'use strict';\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"Laquelle des 4 figures ci-dessous va être tracée avec le script fourni ?\";\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n\n  this.listePackages = \"scratch3\";\n\tthis.typeExercice = \"Scratch\";\n\n  let type_de_questions_disponibles;\n  this.nbQuestions = 3;\n  this.debug = false;\n\n\n  this.nouvelleVersion = function () {\n\n    if (this.debug) {\n      type_de_questions_disponibles = [1,2,3,4,5];\n    } else {\n      type_de_questions_disponibles = [1,2,3,4,5];\n    };\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let fenetreMathalea2D = { xmin: -10, ymin: -15, xmax: 60, ymax: 2, pixelsParCm: 10, scale: 0.2 }\n    let pixelsParCm = fenetreMathalea2D.pixelsParCm*5;// 100;\n//    var unitesLutinParCm = 100;\n\n\n    let listeTypeDeQuestions  = combinaisonListes(type_de_questions_disponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    //let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(type_de_questions_disponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\t\t\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // une fonction pour gérer la sortie HTML/LaTeX\n      // code est un string contenant le code svg ou tikz\n      function scratchblocks_Tikz(code_svg, code_tikz) {\n        if (sortieHtml) {\n          return code_svg;\n        } else {\n          return code_tikz;\n        };\n      };\n\n      // une fonction pour dire le nom du polygone\n      function myPolyName(n) {\n        let sortie = {\n          name: ``,\n          nameParSommets: ``,\n          nb_pas: ``\n        };\n        switch (n) {\n          case 2:\n            sortie.name = `segment`;\n            sortie.nameParSommets = `AB`;\n            sortie.nb_pas = 400;\n          case 3:\n            sortie.name = `triangle équilatéral`;\n            sortie.nameParSommets = `ABC`;\n            sortie.nb_pas = 400;\n            break;\n          case 4:\n            sortie.name = `carré`;\n            sortie.nameParSommets = `ABCD`;\n            sortie.nb_pas = 400;\n            break;\n          case 5:\n            sortie.name = `pentagone régulier`;\n            sortie.nameParSommets = `ABCDE`;\n            sortie.nb_pas = 300;\n            break;\n          case 6:\n            sortie.name = `hexagone régulier`;\n            sortie.nameParSommets = `ABCDEF`;\n            sortie.nb_pas = 250;\n            break;\n          case 7:\n            sortie.name = `heptagone régulier`;\n            sortie.nameParSommets = `ABCDEFG`;\n            sortie.nb_pas = 200;\n            break;\n          case 8:\n            sortie.name = `octogone régulier`;\n            sortie.nameParSommets = `ABCDEFGH`;\n            sortie.nb_pas = 200;\n            break;\n          case 9:\n            sortie.name = `ennéagone régulier`;\n            sortie.nameParSommets = `ABCDEFGHI`;\n            sortie.nb_pas = 200;\n            break;\n\n        }\n        return sortie;\n      }\n\n    // une fonction pour renvoyer une situation\n    // n définit le nombre de côtés du polygone régulier\n    function mySituation(n) {\n        let situations = [\n          {//polygones réguliers\n            nb_cotes: n,\n            nom: myPolyName(n).name,\n            code_svg: `\n            <pre class='blocks'>\n            quand le drapeau vert pressé\n            stylo en position d'écriture\n            répéter (${n}) fois\n              avancer de (${myPolyName(n).nb_pas}) pas\n              tourner droite de ((360)/(${n})) degrés\n            fin                  \n            </pre>          \n            `,\n            code_tikz: `\n            \\\\begin{scratch}\n              \\\\blockinit{quand \\\\greenflag est cliqué}\n              \\\\blockpen{stylo en position d’écriture}\n              \\\\blockrepeat{répéter \\\\ovalnum{${n}} fois}\n                {\n                  \\\\blockmove{avancer de \\\\ovalnum{${myPolyName(n).nb_pas}}}\n                  \\\\blockmove{tourner \\\\turnright{} de \\\\ovaloperator{\\\\ovalnum{360}/\\\\ovalnum{${n}}} degrés}\n                }\n            \\\\end{scratch}\n            `,\n            fig: ``,\n            fig_corr: ``,\n          },\n        ];\n\n        let tab_abs_dem_lutin2;\n        if (n == 6) {\n          tab_abs_dem_lutin2 = [0, 3 * myPolyName(n).nb_pas, 6 * myPolyName(n).nb_pas, 9 * myPolyName(n).nb_pas]\n        } else if (n == 8) {\n          tab_abs_dem_lutin2 = [0, 4 * myPolyName(n).nb_pas, 8 * myPolyName(n).nb_pas, 12 * myPolyName(n).nb_pas]\n        } else {\n          tab_abs_dem_lutin2 = [0, 2 * myPolyName(n).nb_pas, 4 * myPolyName(n).nb_pas, 6 * myPolyName(n).nb_pas]\n        };\n        // on mélange tout ça !\n        tab_abs_dem_lutin2 = shuffle(tab_abs_dem_lutin2);\n        // Les figures de l'énoncé         \n        // le lutin2  trace le cadre en pointillés\n        let lutin2 = creerLutin();\n        lutin2.color = \"black\";\n        lutin2.pointilles = true;\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin2);\n        baisseCrayon(lutin2);\n        allerA(fenetreMathalea2D.xmax * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin2);\n        allerA(fenetreMathalea2D.xmax * pixelsParCm, fenetreMathalea2D.ymin * pixelsParCm, lutin2);\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymin * pixelsParCm, lutin2);\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin2);\n        leveCrayon(lutin2);\n        //le lutin2 fait la bonne figure\n        lutin2.pointilles = false;\n        lutin2.color = \"blue\";\n        allerA(tab_abs_dem_lutin2[0], 0, lutin2);\n        baisseCrayon(lutin2);\n        for (let k = 1; k < n + 1; k++) {\n          avance(myPolyName(n).nb_pas, lutin2);\n          tournerD(calcul(360 / n), lutin2);\n        };\n        // le lutin2 fait un polygone régulier avec un côté de plus \n        leveCrayon(lutin2);\n        allerA(tab_abs_dem_lutin2[1], 0, lutin2);\n        baisseCrayon(lutin2);\n        for (let k = 1; k < n + 1 + 1; k++) {\n          avance(myPolyName(n + 1).nb_pas, lutin2);\n          tournerD(calcul(360 / (n + 1)), lutin2);\n        };\n\n        // le lutin2 fait un polygone régulier avec un côté de moins \n        leveCrayon(lutin2);\n        allerA(tab_abs_dem_lutin2[2], 0, lutin2);\n        baisseCrayon(lutin2);\n        for (let k = 1; k < n; k++) {\n          avance(myPolyName(n - 1).nb_pas, lutin2);\n          tournerD(calcul(360 / (n - 1)), lutin2);\n        };\n\n        // le lutin2 fait une figure ouverte à n côtés\n        leveCrayon(lutin2);\n        allerA(tab_abs_dem_lutin2[3], 0, lutin2);\n        baisseCrayon(lutin2);\n        for (let k = 1; k < n + 1; k++) {\n          avance(myPolyName(n).nb_pas, lutin2);\n          tournerD(calcul((360 / n) - 10), lutin2);\n        };\n        allerA(tab_abs_dem_lutin2[3], 0, lutin2);\n\n        let mesAppels_enonce = [\n          lutin2,\n        ]\n        situations[0].fig = mathalea2d(\n          fenetreMathalea2D,\n          mesAppels_enonce\n        );\n\n        // les figures de la correction\n        // le lutin3  trace le cadre\n        let lutin3 = creerLutin();\n        lutin3.color = \"black\";\n        lutin3.pointilles = true;\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin3);\n        baisseCrayon(lutin3);\n        allerA(fenetreMathalea2D.xmax * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin3);\n        allerA(fenetreMathalea2D.xmax * pixelsParCm, fenetreMathalea2D.ymin * pixelsParCm, lutin3);\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymin * pixelsParCm, lutin3);\n        allerA(fenetreMathalea2D.xmin * pixelsParCm, fenetreMathalea2D.ymax * pixelsParCm, lutin3);\n        leveCrayon(lutin3);\n        // le lutin3 fait la bonne figure      \n        lutin3.pointilles = false;\n        lutin3.color = \"green\"\n        allerA(tab_abs_dem_lutin2[0], 0, lutin3);\n        baisseCrayon(lutin3);\n        for (let k = 1; k < n + 1; k++) {\n          avance(myPolyName(n).nb_pas, lutin3);\n          tournerD(calcul(360 / n), lutin3);\n        };\n        // le lutin3 fait un polygone régulier avec un côté de plus \n        lutin3.color = \"red\";\n        leveCrayon(lutin3);\n        allerA(tab_abs_dem_lutin2[1], 0, lutin3);\n        baisseCrayon(lutin3);\n        for (let k = 1; k < n + 1 + 1; k++) {\n          avance(myPolyName(n + 1).nb_pas, lutin3);\n          tournerD(calcul(360 / (n + 1)), lutin3);\n        };\n\n        // le lutin3 fait un polygone régulier avec un côté de moins \n        leveCrayon(lutin3);\n        allerA(tab_abs_dem_lutin2[2], 0, lutin3);\n        baisseCrayon(lutin3);\n        for (let k = 1; k < n; k++) {\n          avance(myPolyName(n - 1).nb_pas, lutin3);\n          tournerD(calcul(360 / (n - 1)), lutin3);\n        };\n\n        // le lutin3 fait une figure ouverte à n côtés\n        leveCrayon(lutin3);\n        allerA(tab_abs_dem_lutin2[3], 0, lutin3);\n        baisseCrayon(lutin3);\n        for (let k = 1; k < n + 1; k++) {\n          avance(myPolyName(n).nb_pas, lutin3);\n          tournerD(calcul((360 / n) - 10), lutin3);\n        };\n        allerA(tab_abs_dem_lutin2[3], 0, lutin3);\n\n        let mesAppels_corr = [\n          lutin3,\n        ]\n        situations[0].fig_corr = mathalea2d(\n          fenetreMathalea2D,\n          mesAppels_corr\n        );\n\n\n        let enonces = [];\n        enonces.push({\n          enonce: `\n          ${scratchblocks_Tikz(situations[0].code_svg, situations[0].code_tikz)}\n          <br> \n          ${situations[0].fig}\n          `,\n          question: ``,\n          correction: `\n          <br> Les figures rouges sont erronées.\n          <br> La figure tracée par le programme a ${situations[0].nb_cotes} côtés de même longueur et ${situations[0].nb_cotes} angles de même mesure, c'est un ${situations[0].nom}.\n          <br>${texteEnCouleur(`La bonne figure est donc la figure verte.`)}\n          <br><br>\n          ${situations[0].fig_corr}\n          `\n        });\n\n        return enonces;\n    }\n\n    \n    let enonces = []\n    enonces.push(mySituation(3)[0])\n    enonces.push(mySituation(4)[0])\n    enonces.push(mySituation(5)[0])\n    enonces.push(mySituation(6)[0])\n    enonces.push(mySituation(8)[0])\n    switch (listeTypeDeQuestions[i]) {\n      case 1:\n        texte = `${enonces[0].enonce}`;\n        if (this.debug) {\n          texte += `<br>`;\n          texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n          texteCorr = ``;\n        } else {\n          texteCorr = `${enonces[0].correction}`;\n        };\n        break;\n      case 2:\n        texte = `${enonces[1].enonce}`;\n        if (this.debug) {\n          texte += `<br>`;\n          texte += `<br> =====CORRECTION======<br>${enonces[1].correction}`;\n          texteCorr = ``;\n        } else {\n          texteCorr = `${enonces[1].correction}`;\n        };\n        break;\n      case 3:\n        texte = `${enonces[2].enonce}`;\n        if (this.debug) {\n          texte += `<br>`;\n          texte += `<br> =====CORRECTION======<br>${enonces[2].correction}`;\n          texteCorr = ``;\n        } else {\n          texteCorr = `${enonces[2].correction}`;\n        };\n        break;\n      case 4:\n        texte = `${enonces[3].enonce}`;\n        if (this.debug) {\n          texte += `<br>`;\n          texte += `<br> =====CORRECTION======<br>${enonces[3].correction}`;\n          texteCorr = ``;\n        } else {\n          texteCorr = `${enonces[3].correction}`;\n        };\n        break;\n      case 5:\n        texte = `${enonces[4].enonce}`;\n        if (this.debug) {\n          texte += `<br>`;\n          texte += `<br> =====CORRECTION======<br>${enonces[4].correction}`;\n          texteCorr = ``;\n        } else {\n          texteCorr = `${enonces[4].correction}`;\n        };\n        break;\n      };\n\n\n      if (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  }\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}