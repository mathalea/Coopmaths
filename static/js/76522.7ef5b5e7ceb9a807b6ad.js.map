{"version":3,"file":"js/76522.7ef5b5e7ceb9a807b6ad.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/can/3e/can3C08.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../../Exercice.js'\nimport { randint, choice, texNombrec, texteEnCouleur, calcul, ecritureParentheseSiNegatif } from '../../../modules/outils.js'\nexport const titre = 'Calculer avec un programme de calcul'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Modèle d'exercice très simple pour la course aux nombres\n * @author Gilles Mora\n * Référence\n * Date de publication\n*/\nexport default function ProgrammeCalcul () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.typeExercice = 'simple' // Cette ligne est très importante pour faire faire un exercice simple !\n  this.nbQuestions = 1\n  this.formatChampTexte = 'largeur15 inline'\n  // Dans un exercice simple, ne pas mettre de this.listeQuestions = [] ni de this.consigne\n  // ${texNombrec(ecritureParenthesesSiNegatif(a / 5 - e))}^2=${texNombrec((a / 5 - e) * (a / 5 - e))}$\n  this.nouvelleVersion = function () {\n    const a = calcul(randint(2, 9) * 5)\n    const b = calcul(randint(2, 9) * 4)\n    const c = calcul(randint(2, 9) * 3)\n    const d = calcul(randint(2, 9) * 6)\n    const e = randint(2, 9, [a / 5, b / 4, c / 3, d / 6])\n    const N = choice(['quart', 'tiers', 'cinquième', 'sixième'])\n\n    if (N === 'cinquième') {\n      this.question = `Prendre le ${N} de $${a}$, puis soustraire $${e}$ et élever le résultat au carré. <br>\n     Quel nombre obtient-on ?`\n      this.correction = `$\\\\bullet$ On prend le ${N} de $${a}$ : $\\\\dfrac{1}{5}\\\\times ${a}=${texNombrec(a / 5)}$.\n    <br>\n    $\\\\bullet$ On soustrait $${e}$, on obtient : $${texNombrec(a / 5)}-${texNombrec(e)}=${texNombrec(a / 5 - e)}$.\n    <br>\n    $\\\\bullet$ On élève au carré :  $${ecritureParentheseSiNegatif(a / 5 - e)}^2= ${texNombrec((a / 5 - e) * (a / 5 - e))}$.  \n      `\n      this.correction += texteEnCouleur(`<br> Mentalement : <br>\n      Prendre le cinquième d'un nombre revient à le diviser par 5.<br>\n       Ainsi, le ${N} de $${a}$ est égal à $${a}\\\\div 5=${a / 5}$.\n        `)\n      this.reponse = (a / 5 - e) * (a / 5 - e)\n    }\n    if (N === 'quart') {\n      this.question = `Prendre le ${N} de $${b}$, puis soustraire $${e}$ et élever le résultat au carré. <br>\n      Quel nombre obtient-on ?`\n      this.correction = `$\\\\bullet$ On prend le ${N} de $${b}$ : $\\\\dfrac{1}{4}\\\\times ${b}=${texNombrec(b / 4)}$.\n      <br>\n      $\\\\bullet$ On soustrait $${e}$, on obtient : $${texNombrec(b / 4)}-${texNombrec(e)}=${texNombrec(b / 4 - e)}$.\n      <br>\n      $\\\\bullet$ On élève au carré : $${ecritureParentheseSiNegatif(b / 4 - e)}^2= ${texNombrec((b / 4 - e) * (b / 4 - e))}$. `\n      this.correction += texteEnCouleur(`<br> Mentalement : <br>\n    Prendre le quart d'un nombre revient à le diviser par 4.<br>\n     Ainsi, le ${N} de $${b}$ est égal à $${b}\\\\div 4=${b / 4}$.\n      `)\n      this.reponse = (b / 4 - e) * (b / 4 - e)\n    }\n    if (N === 'tiers') {\n      this.question = `Prendre le ${N} de $${c}$, puis soustraire $${e}$ et élever le résultat au carré. <br>\n     Quel nombre obtient-on ?`\n      this.correction = `$\\\\bullet$ On prend le ${N} de $${c}$ : $\\\\dfrac{1}{3}\\\\times ${c}=${texNombrec(c / 3)}$.\n      <br>\n      $\\\\bullet$ On soustrait $${e}$, on obtient : $${texNombrec(c / 3)}-${texNombrec(e)}=${texNombrec(c / 3 - e)}$.\n      <br>\n      $\\\\bullet$ On élève au carré : $${ecritureParentheseSiNegatif(c / 3 - e)}^2= ${texNombrec((c / 3 - e) * (c / 3 - e))}$. `\n      this.correction += texteEnCouleur(`<br> Mentalement : <br>\n      Prendre le tiers d'un nombre revient à le diviser par 3.<br>\n       Ainsi, le ${N} de $${c}$ est égal à $${c}\\\\div 3=${c / 3}$.\n        `)\n      this.reponse = (c / 3 - e) * (c / 3 - e)\n    }\n    if (N === 'sixième') {\n      this.question = `Prendre le ${N} de $${d}$, puis soustraire $${e}$ et élever le résultat au carré. <br>\n      Quel nombre obtient-on ?`\n      this.correction = `$\\\\bullet$ On prend le ${N} de $${d}$ : $\\\\dfrac{1}{6}\\\\times ${d}=${texNombrec(d / 6)}$.\n      <br>\n      $\\\\bullet$ On soustrait $${e}$, on obtient : $${texNombrec(d / 6)}-${texNombrec(e)}=${texNombrec(d / 6 - e)}$.\n      <br>\n      $\\\\bullet$ On élève au carré : $${ecritureParentheseSiNegatif(d / 6 - e)}^2= ${texNombrec((d / 6 - e) * (d / 6 - e))}$. `\n      this.correction += texteEnCouleur(`<br> Mentalement : <br>\n    Prendre le sixième d'un nombre revient à le diviser par 6.<br>\n     Ainsi, le ${N} de $${d}$ est égal à $${d}\\\\div 6=${d / 6}$.\n      `)\n      this.reponse = (d / 6 - e) * (d / 6 - e)\n    }\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","ProgrammeCalcul","typeExercice","formatChampTexte","a","calcul","randint","b","c","d","e","N","choice","question","correction","texNombrec","ecritureParentheseSiNegatif","texteEnCouleur","reponse"],"sourceRoot":""}