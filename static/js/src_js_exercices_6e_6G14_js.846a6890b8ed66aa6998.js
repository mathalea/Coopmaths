/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_6e_6G14_js"],{

/***/ "./src/js/exercices/6e/6G14.js":
/*!*************************************!*\
  !*** ./src/js/exercices/6e/6G14.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Proprietes_paralleles_perpendiculaires)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\nconst titre = 'Utiliser les propriétés des droites perpendiculaires'\n\n/**\n * Ref 6G14\n * @Auteur Jean-Claude Lhote\n * publié le 22/11/2020\n */\nfunction Proprietes_paralleles_perpendiculaires() {\n  \"use strict\";\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this);\n  this.titre = titre;\n  this.nb_questions = 3;\n  this.nb_cols = 1;\n  this.nb_cols_corr = 1;\n  this.sup = 4;\n  this.correction_detaillee_disponible = true;\n  this.correction_detaillee = false;\n  this.nouvelle_version = function () {\n    let type_de_questions_disponibles, questions_par_niveau = [];\n    questions_par_niveau.push((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.range)(3))\n    questions_par_niveau.push((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.rangeMinMax)(9, 15))\n    questions_par_niveau.push((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.rangeMinMax)(19, 31, 20))\n\n    if (this.sup < 4) type_de_questions_disponibles = questions_par_niveau[parseInt(this.sup) - 1]\n    else type_de_questions_disponibles = questions_par_niveau[0].concat(questions_par_niveau[1].concat(questions_par_niveau[2]))\n\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(\n      type_de_questions_disponibles,\n      this.nb_questions\n    );\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n    let droites = [], code, raisonnement, numDroites = [], phrases = [], textetemp\n    let d = [], P = [], objets = [],  couleurd = [], droiteP, PP, Inter\n    let droitecolor = function (num) {\n      let couleurs\n      sortie_html ? couleurs = ['red', 'blue', 'green', 'black', 'magenta', 'orange'] : couleurs = ['black', 'black', 'black', 'black', 'black', 'black'];\n      return couleurs[num]\n    }\n\n    for (\n      let i = 0, texte, texte_corr, cpt = 0;\n      i < this.nb_questions && cpt < 50;\n\n    ) {\n      texte = \"\"\n      texte_corr = \"\"\n      phrases.length = 0;\n      droites.length = 0;\n      objets.length = 0;\n      d.length = 0;\n      P.length = 0;\n      couleurd.length = 0\n      numDroites = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)([1, 2, 3, 4, 5]);\n      raisonnement = liste_type_de_questions[i]\n\n      switch (raisonnement) {\n        case 0: // si 1//2 et 2//3 alors 1//3\n          code = [[1, 2, 1], [2, 3, 1]];\n          break;\n        case 1: // si 1//2 et 2T3 alors 1T3\n          code = [[1, 2, 1], [2, 3, -1]]\n          break;\n        case 2: // si 1T2 et 2T3 alors 1//3\n          code = [[1, 2, -1], [2, 3, -1]]\n          break;\n        case 3: // si 1T2 et 2//3 alors 1T3\n          code = [[1, 2, -1], [2, 3, 1]]\n          break;\n        case 8: // Si 1//2 et 2//3 et 3//4 alors 1//4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1]];\n          break;\n        case 9: // Si 1//2 et 2//3 et 3T4 alors 1T4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1]];\n          break;\n        case 10: // Si 1//2 et 2T3 et 3//4 alors 1T4\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1]];\n          break;\n        case 11: // Si 1//2 et 2T3 et 3T4 alors 1//4\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1]];\n          break;\n        case 12: // Si 1T2 et 2//3 et 3//4 alors 1T4\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1]];\n          break;\n        case 13: // Si 1T2 et 2//3 et 3T4 alors 1//4\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1]];\n          break;\n        case 14: // Si 1T2 et 2T3 et 3//4 alors 1//4\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1]];\n          break;\n        case 15: // Si 1T2 et 2T3 et 3T4 alors 1T4\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1]];\n          break;\n        case 16: // Si 1//2 et 2//3 et 3//4 et 4//5 alors 1//5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, 1]];\n          break;\n        case 17: // Si 1//2 et 2//3 et 3T4 et 4//5 alors 1T5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1], [4, 5, 1]];\n          break;\n        case 18: // Si 1//2 et 2T3 et 3//4 et 4//5 alors 1T5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, 1], [4, 5, 1]];\n          break;\n        case 19: // Si 1//2 et 2T3 et 3T4 et 4//5 alors 1//5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1], [4, 5, 1]];\n          break;\n        case 20: // Si 1T2 et 2//3 et 3//4 et 4//5 alors 1T5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1], [4, 5, 1]];\n          break;\n        case 21: // Si 1T2 et 2//3 et 3T4 et 4//5 alors 1//5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1], [4, 5, 1]];\n          break;\n        case 22: // Si 1T2 et 2T3 et 3//4 et 4//5 alors 1//5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1], [4, 5, 1]];\n          break;\n        case 23: // Si 1T2 et 2T3 et 3T4 et 4//5 alors 1T5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1], [4, 5, 1]];\n          break;\n        case 24: // Si 1//2 et 2//3 et 3//4 et 4T5 alors 1T5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, 1], [4, 5, -1]];\n          break;\n        case 25: // Si 1//2 et 2//3 et 3T4 et 4T5 alors 1//5\n          code = [[1, 2, 1], [2, 3, 1], [3, 4, -1], [4, 5, -1]];\n          break;\n        case 26: // Si 1//2 et 2T3 et 3//4 et 4T5 alors 1//5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, 1], [4, 5, -1]];\n          break;\n        case 27: // Si 1//2 et 2T3 et 3T4 et 4T5 alors 1T5\n          code = [[1, 2, 1], [2, 3, -1], [3, 4, -1], [4, 5, -1]];\n          break;\n        case 28: // Si 1T2 et 2//3 et 3//4 et 4T5 alors 1//5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, 1], [4, 5, -1]];\n          break;\n        case 29: // Si 1T2 et 2//3 et 3T4 et 4T5 alors 1T5\n          code = [[1, 2, -1], [2, 3, 1], [3, 4, -1], [4, 5, -1]];\n          break;\n        case 30: // Si 1T2 et 2T3 et 3//4 et 4T5 alors 1T5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, 1], [4, 5, -1]];\n          break;\n        case 31: // Si 1T2 et 2T3 et 3T4 et 4T5 alors 1//5\n          code = [[1, 2, -1], [2, 3, -1], [3, 4, -1], [4, 5, -1]];\n          break;\n\n      }\n\n      // enoncé mélangé\n      texte += `On sait que `\n      couleurd.push((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 5))\n      for (let j = 0; j < code.length; j++) {\n        textetemp = `$(d_${numDroites[code[j][0] - 1]})`;\n        if (code[j][2] == 1) {\n          textetemp += `//`\n          couleurd.push(couleurd[j])\n        }\n        else {\n          textetemp += `\\\\perp`\n          couleurd.push((couleurd[j] + 1) % 6)\n        }\n        textetemp += `(d_${numDroites[code[j][1] - 1]})$`\n        phrases.push(textetemp)\n      }\n      //phrases=shuffle(phrases)\n      for (let j = 0; j < code.length - 1; j++) {\n        texte += phrases[j]\n        if (j != code.length - 2) texte += `, `\n        else texte += ` et `\n      }\n      texte += phrases[code.length - 1]\n      texte += `.<br>Que peut-on dire de $(d_${numDroites[code[0][0] - 1]})$ et $(d_${numDroites[code[code.length - 1][1] - 1]})$ ?`\n\n      //construction de la figure\n\n      P.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0, 0))\n      droiteP = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droiteParPointEtPente)(P[0], (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(-1, 1, 0) / 10, `(d_${numDroites[code[0][0] - 1]})`, droitecolor(couleurd[0]))\n      droiteP.epaisseur = 2\n      _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droite.pointilles = false\n      d.push(droiteP)\n      objets.push(d[0])\n      for (let x = 0; x < code.length; x++) {\n        if (code[x][2] == 1) {\n          P.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((x + 1) * 2, (x + 1) * 2))\n          droiteP = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droiteParPointEtParallele)(P[x + 1], d[x], `(d_${numDroites[code[x][1] - 1]})`, droitecolor(couleurd[x + 1]))\n          droiteP.epaisseur = 2\n          droiteP.pointilles = d[x].pointilles\n          d.push(droiteP)\n        }\n        else {\n          P.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)((x + 1) * 2, (x + 1) * 2))\n          droiteP = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.droiteParPointEtPerpendiculaire)(P[x + 1], d[x], `(d_${numDroites[code[x][1] - 1]})`, droitecolor(couleurd[x + 1]))\n          droiteP.epaisseur = 2\n          droiteP.pointilles = x % 3 + 1\n          Inter = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pointIntersectionDD)(d[x], droiteP)\n          PP = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)(P[x + 1], Inter, 90)\n          d.push(droiteP)\n          objets.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(PP, Inter, P[x + 1], 'black', 0.6))\n        }\n        objets.push(d[x + 1])\n      }\n      for (let i = 0; i < code.length; i++) { // on ajoute les angles droits\n\n      }\n      // correction raisonnement ordonné\n      mathalea.fenetreMathalea2d = [-2, -2, 15, 10]\n      texte_corr = `À partir de l\\'énoncé, on peut réaliser le schéma suivant (il en existe une infinité)<br> Les droites données parallèles dans l'énoncé sont de même couleur/style.<br>`\n      texte_corr += (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({ xmin: -2, xmax: 15, ymin: -2, ymax: 10, pixelsParCm: 20, scale: 0.3, mainlevee: false, amplitude: 0.3 }, objets) + `<br>`\n      for (let j = 0; j < code.length - 1; j++) {\n        if (this.correction_detaillee) texte_corr += `On sait que : `\n        else texte_corr += `Comme `\n        texte_corr += `$(d_${numDroites[code[j][0] - 1]})`;\n        if (code[j][2] == 1) texte_corr += `//`\n        else texte_corr += `\\\\perp`\n        texte_corr += `(d_${numDroites[code[j][1] - 1]})$ et `\n        texte_corr += `$(d_${numDroites[code[j + 1][0] - 1]})`;\n        if (code[j + 1][2] == 1) texte_corr += `//`\n        else texte_corr += `\\\\perp`\n        texte_corr += `(d_${numDroites[code[j + 1][1] - 1]})$`\n        // quelle propriété ?\n        if (code[j][2] * code[j + 1][2] == -1) { // Une parallèle et une perpendiculaire\n          if (this.correction_detaillee) texte_corr += `.<br> Or «Si deux droites sont parallèles alors toute droite perpendiculaire à l'une est aussi perpendiculaire à l'autre».<br>Donc`\n          else texte_corr += `, on en déduit que `\n          texte_corr += ` $(d_${numDroites[code[0][0] - 1]})\\\\perp(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = -1\n        }\n        else if (code[j][2] > 0) { // deux parallèles\n          if (this.correction_detaillee) texte_corr += `.<br> Or «Si deux droites sont parallèles à une même droite alors elles sont parallèles entre elles».<br>Donc`\n          else texte_corr += `, on en déduit que `\n          texte_corr += ` $(d_${numDroites[code[0][0] - 1]})//(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = 1\n\n        }\n        else { //deux perpendiculaires\n          if (this.correction_detaillee) texte_corr += `.<br> Or «Si deux droites sont perpendiculaires à une même droite alors elles sont parallèles entre elles».<br>Donc`\n          else texte_corr += `, on en déduit que `\n          texte_corr += ` $(d_${numDroites[code[0][0] - 1]})//(d_${numDroites[code[j + 1][1] - 1]})$.<br>`\n          code[j + 1][0] = code[j][0]\n          code[j + 1][2] = 1\n\n        }\n\n\n      }\n\n      if (this.liste_questions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.liste_questions.push(texte + \"<br>\");\n        this.liste_corrections.push(texte_corr + \"<br>\");\n        i++;\n      }\n      cpt++;\n    }\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  this.besoin_formulaire_numerique = ['Nombre d\\'étapes de raisonnement :', 4, `1 : 1 étape\\n 2 : 2 étapes\\n 3 : 3 étapes\\n4 : Mélange aléatoire`]\n  // this.besoin_formulaire2_case_a_cocher = [\n  //  \"Avec figure ? \",false];\n}\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/6e/6G14.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);