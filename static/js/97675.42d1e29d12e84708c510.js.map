{"version":3,"file":"js/97675.42d1e29d12e84708c510.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta5G30-2.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author RÃ©mi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // ChaÃ®ne de caractÃ¨re sans point Ã  la fin. C'est le titre de l'exercice qui sera affichÃ© avec la rÃ©fÃ©rence dans le gÃ©nÃ©rateur d'exercices.\n  this.boutonAide = false // Bouton en haut Ã  droite des questions permettant d'afficher un pdf, texte, image, vidÃ©o, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour rÃ©cupÃ©rer le numeroExercice dont il est question, au lieu d'Ã©crire \"this.nouvelleVersion = function () {\" comme d'habitude, on Ã©crit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - VidÃ©o', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // ChaÃ®ne de caractÃ¨re qui apparaÃ®t en gras au-dessus des questions de prÃ©fÃ©rence Ã  l'infinitif et sans point Ã  la fin.\n  this.consigneCorrection = '' // ChaÃ®ne de caractÃ¨re en gÃ©nÃ©ral vide qui apparaÃ®t au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcÃ©ment en gras et qui apparaÃ®t entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaÃ®nes de caractÃ¨res avec chacune correspondant Ã  une question. Chaque question est dÃ©finie par la mÃ©thode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // ChaÃ®ne de caractÃ¨res avec tout l'Ã©noncÃ© de l'exercice construit Ã  partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des rÃ©ponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // boolÃ©en qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spÃ©cifiques Ã  ajouter dans le prÃ©ambule.\n  this.consigneModifiable = true // boolÃ©en pour dÃ©terminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // boolÃ©en pour dÃ©terminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des rÃ©ponses (environnement multicols).\n  this.nbColsModifiable = true // boolÃ©en pour dÃ©terminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // boolÃ©en pour dÃ©terminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // boolÃ©en pour dÃ©terminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // boolÃ©en pour dÃ©terminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'Ã©noncÃ© ce qui peut Ãªtre pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // boolÃ©en pour savoir si la sortie devra Ãªtre un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // ParamÃ¨tres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par dÃ©faut (rÃ©cupÃ©rÃ© dans l'url avec le paramÃ¨tre `,n=`)\n  this.pointsParQuestions = 1 // Pour dÃ©finir la note par dÃ©faut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // boolÃ©en qui indique si une correction dÃ©taillÃ©e est disponible.\n  this.correctionDetaillee = true // boolÃ©en indiquant si la correction dÃ©taillÃ©e doit Ãªtre affichÃ© par dÃ©faut (rÃ©cupÃ©rÃ© dans l'url avec le paramÃ¨tre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractÃ¨re pour un complÃ©ment numÃ©rique (id Youtube, url, code iframe...).\n  // InteractivitÃ©\n  this.interactif = false // Exercice sans saisie utilisateur par dÃ©faut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramÃ©trage par l'utilisateur rÃ©cupÃ©rÃ© via this.sup ou dans le paramÃ¨tre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramÃ©trage par l'utilisateur rÃ©cupÃ©rÃ© via this.sup2 ou dans le paramÃ¨tre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramÃ©trage par l'utilisateur rÃ©cupÃ©rÃ© via this.sup3 ou dans le paramÃ¨tre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramÃ©trage par l'utilisateur rÃ©cupÃ©rÃ© via this.sup4 ou dans le paramÃ¨tre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dÃ©pendances particuliÃ¨res\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par dÃ©faut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG crÃ©Ã© par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce nâest pas un exercice alÃ©atoire il est traitÃ© diffÃ©remment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinÃ©s aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant Ã  comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellÃ©e pour chaque exercice\n   * @param {number} numeroExercice numÃ©ro de l'exercice utilisÃ© pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivitÃ© par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux prÃ©cÃ©dentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"rÃ©sumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais Ã©tÃ© posÃ©e\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, choice } from '../../modules/outils.js'\nimport { texteSurArc, homothetie, point, rotation, mathalea2d, fixeBordures, droite, translation, vecteur, arcPointPointAngle } from '../../modules/2d.js'\nimport { evaluate, pickRandom } from 'mathjs'\nexport const titre = 'Angles et parallÃ¨les'\n// eslint-disable-next-line no-debugger\n// debugger\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '08/01/2022' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n// export const dateDeModifImportante = '08/01/2022' // Une date de modification importante au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\nexport function aleaVariables (variables = { a: false, b: false, c: true, d: 'fraction(a,10)+fraction(b,100)', test: 'b!=0 and b>a>c' }, debug = false) {\n  const assignations = {}\n  let cpt = 0\n  let test = true\n  do {\n    cpt++\n    for (const v of Object.keys(variables)) {\n      if (typeof variables[v] === 'boolean') {\n        assignations[v] = evaluate('(pickRandom([-1,1]))^(n)*randomInt(1,10)', { n: variables[v] })\n      } else if (v !== 'test') {\n        assignations[v] = evaluate(variables[v], assignations)\n      }\n    }\n    if (variables.test !== undefined) test = evaluate(variables.test, assignations)\n  } while (!test && cpt < 1000)\n  if (cpt === 1000) window.notify('Attention ! 1000 essais dÃ©passÃ©s.\\n Trop de contraintes.\\n Le rÃ©sultat ne vÃ©rifiera pas le test.')\n  return assignations\n}\n\nfunction anglesSecantes (A, rot = { O: 60, A: 0 }) {\n  const s = rotation(translation(A, vecteur(1, 0)), A, rot.A)\n  const t = rotation(s, A, 180)\n  const x = rotation(translation(A, vecteur(1, 0)), A, rot.O)\n  const Ox = rotation(x, A, 180)\n  return {\n    a: arcPointPointAngle(s, x, rot.O - rot.A, true, 'blue'),\n    b: arcPointPointAngle(x, t, 180 - (rot.O - rot.A), true, 'green'),\n    c: arcPointPointAngle(t, Ox, rot.O - rot.A, true, 'red'),\n    d: arcPointPointAngle(Ox, s, 180 - (rot.O - rot.A), true, 'gray'),\n    s: s,\n    t: t,\n    x: x,\n    Ox: Ox,\n    As: droite(A, s),\n    Ax: droite(A, x),\n    A: A,\n    labela: texteSurArc((rot.O - rot.A) % 180 + 'Â°', s, x, rot.O - rot.A, 'black'),\n    labelb: texteSurArc((180 - (rot.O - rot.A)) % 180 + 'Â°', x, t, 180 - (rot.O - rot.A), 'black'),\n    labelc: texteSurArc((rot.O - rot.A) % 180 + 'Â°', t, Ox, rot.O - rot.A, 'black'),\n    labeld: texteSurArc((180 - (rot.O - rot.A)) % 180 + 'Â°', Ox, s, 180 - (rot.O - rot.A), 'black')\n  }\n}\n/**\n * Description didactique de l'exercice\n * @author FrÃ©dÃ©ric PIOU\n * RÃ©fÃ©rence\n*/\nexport default function exercicesAnglesAIC () {\n  Exercice.call(this)\n  const formulaire = [\n    '0 : MÃ©lange des types de questions',\n    '1 : Angle alterne-interne ou correspondant ?',\n    '2 : DÃ©terminer si des droites sont parallÃ¨les.'\n  ]\n  this.nbQuestions = 0\n  this.besoinFormulaireNumerique = [\n    'Type de question', this.nbQuestions, formulaire.join('\\n')\n  ]\n  this.consigne = ''\n  this.nbCols = 0\n  this.nbColsCorr = 0\n  this.tailleDiaporama = 1\n  this.video = ''\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  context.isHtml ? (this.spacing = 2.5) : (this.spacing = 0)\n  context.isHtml ? (this.spacingCorr = 2.5) : (this.spacingCorr = 0)\n  this.sup = 0 // Type d'exercice\n  this.nouvelleVersion = function (numeroExercice, dDebug = false) {\n    this.nbQuestions = this.NbQuestions > 0 ? this.nbQuestions : this.sup !== 0 ? 1 : formulaire.length - 1\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigÃ©es\n    this.autoCorrection = [] // Ã placer mÃªme si l'exercice n'a pas vocation Ã  Ãªtre corrigÃ©\n    let nquestion = 0\n    for (let i = 0, exercice, cpt = 0; i < this.nbQuestions && cpt < 100;) { // Boucle principale oÃ¹ i+1 correspond au numÃ©ro de la question\n      nquestion = this.sup === 0 ? cpt + 1 : this.sup\n      if (dDebug) {\n        console.log(`\n          ********************************\n          Exercice ${i + 1} Case ${nquestion}\n          ********************************`)\n      }\n      switch (nquestion) { // Chaque question peut Ãªtre d'un type diffÃ©rent, ici 4 cas sont prÃ©vus...\n        case 1: {\n          const objetsEnonce = [] // on initialise le tableau des objets Mathalea2d de l'enoncÃ©\n          const objetsEnonceml = [] // Idem pour l'enoncÃ© Ã  main levÃ©e si besoin\n          const objetsCorrection = [] // Idem pour la correction\n          const param = aleaVariables(\n            {\n              O: 'randomInt(0,90)',\n              A: 'randomInt(-90,90)',\n              B: 'randomInt(-90,90)',\n              r1: 'pickRandom([1.5,2])',\n              r2: 'pickRandom([1.5,2])',\n              test: 'O-A>30 and O-B>30'\n            }\n          )\n          if (dDebug) console.log(param)\n          const O = point(0, 0)\n          const anglesA = anglesSecantes(homothetie(rotation(point(1, 0), O, param.O), O, param.r1), { O: param.O, A: param.A })\n          const anglesB = anglesSecantes(homothetie(rotation(point(1, 0), O, param.O + 180), O, param.r2), { O: param.O, A: param.B })\n          for (const i of ['a', 'b', 'c', 'd']) {\n            anglesA[i].couleurDeRemplissage = 'red'\n            anglesB[i].couleurDeRemplissage = 'red'\n          }\n          const ab = choice([\n            choice(['aa', 'bb', 'cc', 'dd']),\n            choice(['ca', 'db']),\n            choice(['a', 'b', 'c', 'd']) + choice(['a', 'b', 'c', 'd'])\n          ])\n          const a = ab[0]\n          const b = ab[1]\n          objetsEnonce.push(\n            anglesA[a],\n            anglesA.As,\n            anglesA.Ax,\n            anglesB[b],\n            anglesB.As,\n            anglesB.Ax,\n            anglesA['label' + a],\n            anglesB['label' + b]\n          )\n          const paramsEnonce = fixeBordures([\n            ...Object.keys(anglesA).map(key => { return anglesA[key] }),\n            ...Object.keys(anglesB).map(key => { return anglesB[key] })\n          ])\n          // On copie tout le contenu de objetsEnonce et de objetsEnonceml dans objetsCorrection\n          objetsEnonce.forEach(objet => {\n            objetsCorrection.push(objet)\n          })\n          objetsEnonceml.forEach(objet => {\n            objetsCorrection.push(objet)\n          })\n          // ici sont crÃ©Ã©s les texte, tex_corr, objets mathalea2d divers entrant dans le contenu de l'exercice\n          let texte = 'Les angles marquÃ©s sont-ils alternes-internes, correspondants ou ni l\\'un ni l\\'autre ?<br>'\n          let reponse\n          if (a === b) {\n            reponse = 'correspondants'\n          } else if (a + b === 'ca' || a + b === 'db') {\n            reponse = 'alternes-internes'\n          } else {\n            reponse = 'ni alternes-internes ni correspondants'\n          }\n          const texteCorr = `Les angles marquÃ©s sont ${reponse}.`\n          texte += mathalea2d(Object.assign({ scale: 0.7 }, paramsEnonce), objetsEnonce)\n          exercice = { texte: texte, texteCorr: texteCorr }\n          break\n        }\n        case 2: {\n          const objetsEnonce = [] // on initialise le tableau des objets Mathalea2d de l'enoncÃ©\n          const objetsCorrection = [] // Idem pour la correction\n          const param = aleaVariables(\n            {\n              O: 'randomInt(0,90)',\n              A: 'randomInt(-90,90)',\n              B: 'A',\n              r1: 'pickRandom([1.5,2])',\n              r2: 'pickRandom([1.5,2])',\n              test: '70>O-A>30 and 70>O-B>30 and abs(A-B)<45'\n            }\n          )\n          const ab = aleaVariables(\n            {\n              a: 'randomInt(0,3)',\n              b: 'randomInt(0,3)',\n              test: 'a!=b and (a!=2 or b!=0) and (a!=3 or b!=1)'\n            }\n          )\n          if (dDebug) console.log(param)\n          const O = point(0, 0)\n          const anglesA = anglesSecantes(homothetie(rotation(point(1, 0), O, param.O), O, param.r1), { O: param.O, A: param.A })\n          const anglesB = anglesSecantes(homothetie(rotation(point(1, 0), O, param.O + 180), O, param.r2), { O: param.O, A: param.B })\n          for (const i of ['a', 'b', 'c', 'd']) {\n            anglesA[i].couleurDeRemplissage = 'blue'\n            anglesB[i].couleurDeRemplissage = 'blue'\n          }\n          const a = ['a', 'b', 'c', 'd'][parseInt(ab.a)]\n          const b = ['a', 'b', 'c', 'd'][parseInt(ab.b)]\n          const epsilon = choice([pickRandom([-2, -1, 1, 2]), 0])\n          anglesA.labela = texteSurArc(((param.O - param.A) % 180 + epsilon) + 'Â°', anglesA.s, anglesA.x, param.O - param.A, 'black')\n          anglesA.labelb = texteSurArc((180 - (param.O - param.A) + epsilon) % 180 + 'Â°', anglesA.x, anglesA.t, 180 - (param.O - param.A), 'black')\n          anglesA.labelc = texteSurArc((param.O - param.A + epsilon) % 180 + 'Â°', anglesA.t, anglesA.Ox, param.O - param.A, 'black')\n          anglesA.labeld = texteSurArc((180 - (param.O - param.A) + epsilon) % 180 + 'Â°', anglesA.Ox, anglesA.s, 180 - (param.O - param.A), 'black')\n          anglesB.labela = texteSurArc(((param.O - param.A) % 180) + 'Â°', anglesB.s, anglesB.x, param.O - param.A, 'black')\n          anglesB.labelb = texteSurArc((180 - (param.O - param.A)) % 180 + 'Â°', anglesB.x, anglesB.t, 180 - (param.O - param.A), 'black')\n          anglesB.labelc = texteSurArc((param.O - param.A) % 180 + 'Â°', anglesB.t, anglesB.Ox, param.O - param.A, 'black')\n          anglesB.labeld = texteSurArc((180 - (param.O - param.A)) % 180 + 'Â°', anglesB.Ox, anglesB.s, 180 - (param.O - param.A), 'black')\n          objetsEnonce.push(\n            anglesA[a],\n            anglesA.As,\n            anglesA.Ax,\n            anglesB[b],\n            anglesB.As,\n            anglesB.Ax,\n            anglesA['label' + a],\n            anglesB['label' + b]\n          )\n          objetsEnonce.forEach(objet => {\n            objetsCorrection.push(objet)\n          })\n          let angles, calculs\n          switch (a + b) {\n            case 'ab':\n              anglesB[a].couleurDeRemplissage = 'green'\n              anglesA[a].couleurDeRemplissage = 'red'\n              objetsCorrection.push(anglesB['label' + 'a'], anglesB.a)\n              angles = 'correspondants'\n              calculs = `$180Â°-${anglesB.labelb.texte} = ${anglesB.labela.texte}$`\n              break\n            case 'ac':\n              anglesB[a].couleurDeRemplissage = 'green'\n              anglesA[a].couleurDeRemplissage = 'red'\n              objetsCorrection.push(anglesB['label' + 'a'], anglesB.a)\n              angles = 'correspondants'\n              break\n            case 'ad':\n              anglesB[a].couleurDeRemplissage = 'green'\n              anglesA[a].couleurDeRemplissage = 'red'\n              objetsCorrection.push(anglesB['label' + 'a'], anglesB.a)\n              angles = 'correspondants'\n              calculs = `$180Â°-${anglesB.labeld.texte} = ${anglesB.labela.texte}$`\n              break\n            case 'ba':\n              anglesB[a].couleurDeRemplissage = 'green'\n              anglesA[a].couleurDeRemplissage = 'red'\n              objetsCorrection.push(anglesB['label' + 'b'], anglesB.b)\n              angles = 'correspondants'\n              calculs = `$180Â°-${anglesB.labela.texte} = ${anglesB.labelb.texte}$`\n              break\n            case 'bc':\n              anglesB[a].couleurDeRemplissage = 'green'\n              anglesA[a].couleurDeRemplissage = 'red'\n              objetsCorrection.push(anglesB['label' + 'b'], anglesB.b)\n              angles = 'correspondants'\n              calculs = `$180Â°-${anglesB.labelc.texte} = ${anglesB.labelb.texte}$`\n              break\n            case 'bd':\n              anglesB[a].couleurDeRemplissage = 'green'\n              anglesA[a].couleurDeRemplissage = 'red'\n              objetsCorrection.push(anglesB['label' + 'b'], anglesB.b)\n              angles = 'correspondants'\n              break\n            case 'cb':\n              anglesB.a.couleurDeRemplissage = 'green'\n              anglesA[a].couleurDeRemplissage = 'red'\n              objetsCorrection.push(anglesB['label' + 'a'], anglesB.a)\n              angles = 'alternes-internes'\n              calculs = `$180Â°-${anglesB.labelb.texte} = ${anglesB.labela.texte}$`\n              break\n            case 'cd':\n              anglesB.a.couleurDeRemplissage = 'green'\n              anglesA[a].couleurDeRemplissage = 'red'\n              objetsCorrection.push(anglesB['label' + 'a'], anglesB.a)\n              angles = 'alternes-internes'\n              calculs = `$180Â°-${anglesB.labeld.texte} = ${anglesB.labela.texte}$`\n              break\n            case 'da':\n              anglesB.b.couleurDeRemplissage = 'green'\n              anglesA[a].couleurDeRemplissage = 'red'\n              objetsCorrection.push(anglesB['label' + 'b'], anglesB.b)\n              angles = 'alternes-internes'\n              calculs = `$180Â°-${anglesB.labela.texte} = ${anglesB.labelb.texte}$`\n              break\n            case 'dc':\n              anglesB.b.couleurDeRemplissage = 'green'\n              anglesA[a].couleurDeRemplissage = 'red'\n              objetsCorrection.push(anglesB['label' + 'b'], anglesB.b)\n              calculs = `$180Â°-${anglesB.labelc.texte} = ${anglesB.labelb.texte}$`\n              angles = 'alternes-internes'\n              break\n          }\n          const paramsEnonce = fixeBordures([\n            ...Object.keys(anglesA).map(key => { return anglesA[key] }),\n            ...Object.keys(anglesB).map(key => { return anglesB[key] })\n          ])\n          let texte = 'Les droites sont-elles parallÃ¨les ?<br>'\n          let sont\n          if (epsilon !== 0) {\n            sont = 'ne sont pas'\n          } else {\n            sont = 'sont'\n          }\n          const texteCorr = mathalea2d(Object.assign({ scale: 0.7 }, paramsEnonce), objetsCorrection) + String.raw`\n          <br>\n          ${calculs !== undefined ? calculs : 'Les angles bleu et vert sont opposÃ©s par le sommet. Ils sont donc de mÃªme mesure.'}\n          <br>\n          Les angles rouge et vert sont ${angles} et ${sont} de la mÃªme mesure.\n          <br>\n          Donc les droites ${sont} parallÃ¨les.\n          `\n          texte += mathalea2d(Object.assign({ scale: 0.7 }, paramsEnonce), objetsEnonce)\n          exercice = { texte: texte, texteCorr: texteCorr }\n          break\n        }\n      }\n      // Les lignes ci-dessous permettent d'avoir un affichage aux dimensions optimisÃ©es\n      if (this.questionJamaisPosee(i, nquestion)) {\n        this.listeQuestions.push(exercice.texte)\n        this.listeCorrections.push(exercice.texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice Ã  la fonction de mise en page\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","dateDePublication","aleaVariables","variables","a","b","c","d","test","debug","assignations","cpt","v","Object","keys","evaluate","n","window","notify","anglesSecantes","A","rot","O","s","rotation","translation","vecteur","t","x","Ox","arcPointPointAngle","As","droite","Ax","labela","texteSurArc","labelb","labelc","labeld","exercicesAnglesAIC","formulaire","join","context","sup","dDebug","NbQuestions","length","nquestion","exercice","console","log","objetsEnonce","objetsEnonceml","objetsCorrection","param","B","r1","r2","point","anglesA","homothetie","anglesB","couleurDeRemplissage","ab","choice","paramsEnonce","fixeBordures","map","key","forEach","objet","reponse","texte","texteCorr","mathalea2d","assign","scale","parseInt","epsilon","pickRandom","angles","calculs","sont","String","raw","listeQuestionsToContenu"],"sourceRoot":""}