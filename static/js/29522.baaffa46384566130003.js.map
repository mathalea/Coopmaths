{"version":3,"file":"js/29522.baaffa46384566130003.js","mappings":"4GAMe,SAASA,IAItBC,KAAKC,MAAQ,GACbD,KAAKE,YAAa,EAclBF,KAAKG,SAAW,GAChBH,KAAKI,mBAAqB,GAC1BJ,KAAKK,aAAe,GACpBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKQ,QAAU,GACfR,KAAKS,kBAAoB,GACzBT,KAAKU,eAAiB,GACtBV,KAAKW,sBAAwB,GAK7BX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EAKnBb,KAAKc,mBAAoB,EACzBd,KAAKe,cAAgB,GACrBf,KAAKgB,oBAAqB,EAC1BhB,KAAKiB,uBAAwB,EAC7BjB,KAAKkB,OAAS,EACdlB,KAAKmB,WAAa,EAClBnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAM7BvB,KAAKwB,QAAS,EACdxB,KAAKyB,gBAAkB,GAKvBzB,KAAK0B,YAAc,GACnB1B,KAAK2B,+BAAgC,EACrC3B,KAAK4B,qBAAsB,EAC3B5B,KAAK6B,MAAQ,GAEb7B,KAAK8B,YAAa,EAClB9B,KAAK+B,uBAAwB,EAE7B/B,KAAKgC,2BAA4B,EACjChC,KAAKiC,uBAAwB,EAC7BjC,KAAKkC,6BAA8B,EAEnClC,KAAKmC,4BAA6B,EAClCnC,KAAKoC,wBAAyB,EAC9BpC,KAAKqC,8BAA+B,EAEpCrC,KAAKsC,4BAA6B,EAClCtC,KAAKuC,wBAAyB,EAC9BvC,KAAKwC,8BAA+B,EAMpCxC,KAAKyC,cAAe,EAMpBzC,KAAK0C,eAAiB,GAEtB1C,KAAK2C,gBAAkB,SAAUC,KAQjC5C,KAAK6C,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAAS9C,KAAK0C,eAAiB,IACnC,IAAIM,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAInD,KAAK0C,eAAeU,QAAQJ,IAAmB,KAGjDhD,KAAK0C,eAAeW,KAAKL,IAClB,I,oGC/Gb,MAAMM,EAAO,CAAEC,O,SAAQA,KASR,SAASC,GAAW,UAAEC,EAAY,EAAd,UAAiBC,EAAY,EAA7B,KAAgCC,EAAO,WAAvC,UAAmDC,EAAY,IAChG,IAAIC,EACJ,MAAMC,EAAiC,SAAUC,GAC/C,MAAMC,EAAIC,OAAOF,GAAGZ,WACde,EAAKD,OAAOE,KAAKC,MAAML,IAAIZ,WACjC,OAAIe,EAAGG,SAAWL,EAAEK,OAAe,EAC5BL,EAAEK,OAASH,EAAGG,OAAS,GAG1BC,EAAuB,SAAUC,GACrC,IAAIC,EAAS,GACb,KAAqB,MAAdD,EAAO,IACZA,EAASA,EAAOE,OAAO,GACvBD,GAAU,IAEZ,IAAK,IAAI1B,EAAI,EAAGA,EAAIyB,EAAOF,OAAQvB,IACjC0B,GAAW,GAAED,EAAOzB,KAEtB,OAAO0B,GAGHE,EAAkB,SAAUC,EAAOC,EAAOhB,EAAY,GAC1D,MAAMiB,EAAS,GAAI,IAAIC,GAAY,EACnClB,EAAYO,KAAKY,IAAInB,EAAWE,GAA+BkB,EAAAA,EAAAA,KAAOL,EAAQC,KAC9E,MAAMK,EAAWnB,EAA+Bc,GAC1CM,EAAOpB,EAA+Ba,GACxCA,EAAQC,IAASE,GAAY,GACjCF,GAAQI,EAAAA,EAAAA,KAAQ,GAAEJ,QAAYK,KAC9BN,GAAQK,EAAAA,EAAAA,KAAQ,GAAEL,QAAYM,EAAWC,KACzC,IAAIC,EAAOrB,EAA+Ba,GAC1CQ,EAAOvB,EAAYuB,EAAOD,EAC1BP,EAAQrB,EAAKC,OAAOoB,EAAQ,IAAMQ,EAAM,CAAEC,SAAU,OAAQC,UAAW,GAAIC,SAAU,GAAI1B,UAAW,KACpG,MAAM2B,EAAqB,SAAUC,EAAMC,GACzCZ,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAKF,EAAOC,EAAEpB,OAAS,GAAK,GAAS,EAAJvB,EAAO,SAAU,QAAS,IAAK,UAAU,IACvG,IAAK,IAAI6C,EAAI,EAAGA,EAAIF,EAAEpB,OAAQsB,IAC5Bd,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBD,EAAEA,EAAEpB,OAASsB,EAAI,GAAIH,EAAOG,EAAI,EAAG,GAAS,EAAJ7C,EAAO,SAAU,QAAS,IAAK,UAAU,KAG5G8C,EAAc,SAAUJ,EAAMK,GAClChB,EAAOxB,MAAKyC,EAAAA,EAAAA,KAAQhD,EAAI,EAAG,IAAU,EAAJA,EAAOA,EAAI+C,EAAExB,OAAQ,IAAU,EAAJvB,IAC5D,IAAK,IAAI6C,EAAI,EAAGA,EAAIE,EAAExB,OAAQsB,IAC5Bd,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBG,EAAEA,EAAExB,OAASsB,EAAI,GAAIH,EAAOG,EAAI,EAAG,EAAQ,EAAJ7C,EAAO,SAAU,QAAS,IAAK,UAAU,KAG3GiD,EAAiB,SAAUhC,EAAGiC,GAClCnB,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBM,EAAGC,EAAI,IAAMlC,EAAG,GAAI,SAAU,QAAS,IAAK,UAAU,KAG/EmC,EAAO,GAAUF,EAAI,GAAUH,EAAI,GAAUJ,EAAI,GACjDU,EAAYlC,OAAOU,GAAOxB,WAC1BiD,EAAWnC,OAAOW,GAAOzB,WACzB8C,EAAI9B,KAAKkC,OAAMC,EAAAA,EAAAA,KAAgB3B,EAAO,IACtC4B,EAAIpC,KAAKkC,OAAMC,EAAAA,EAAAA,KAAgB1B,EAAO,IAC5C,IAAIY,EAAOe,EAEX,IAAK,IAAIzD,EAAI,EAAGA,EAAImD,EAAGnD,IACrB+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBS,EAAUrD,GAAIA,EAAG,GAAI,SAAU,QAAS,IAAK,UAAU,IAEtF,IAAK,IAAIA,EAAI,EAAGA,EAAIyD,EAAGzD,IACrB+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBU,EAAStD,GAAIA,EAAImD,EAAI,IAAK,GAAI,SAAU,QAAS,IAAK,UAAU,IAE3Ff,EAAOC,IAAS,GAClBN,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAKO,EAAIf,EAAOC,EAAO,EAAI,GAAK,GAAI,SAAU,QAAS,IAAK,UAAU,IAErGN,EAAOxB,MAAKyC,EAAAA,EAAAA,KAAQG,EAAG,KAAMA,EAAG,KAAW,EAAJA,IAEvC,IAAInD,EAAI,EAOR,IANAoD,EAAK7C,KAAK8C,EAAU1B,OAAO,EAAG8B,IAC1BC,SAASN,EAAK,IAAMtB,GACtBsB,EAAK,IAAMC,EAAU1B,OAAO8B,EAAG,GAC3B3B,EAAS,IAAMO,EAAQP,GAASE,GAAWiB,GAAgB,EAAG,KAClEP,KACSV,GAAaiB,GAAgB,EAAG,KACpCP,GAAQS,GAAG,CAIhB,GAHAD,EAAE3C,KAAKY,OAAOE,KAAKC,MAAMoC,SAASN,EAAKpD,IAAM8B,IAAQzB,YACrD0C,EAAExC,KAAKY,OAAOuC,SAASN,EAAKpD,IAAM8B,GAAOzB,YACzCsC,EAAEpC,KAAK,IACM,MAAT2C,EAAElD,GACJ,IAAK,IAAI2D,EAAI,EAAGA,EAAIF,EAAGE,IACrBhB,EAAE3C,IAAM,SAGV2C,EAAE3C,IAAMmB,OAAOuC,SAASR,EAAElD,IAAM8B,GAAOzB,WAEzCoC,EAAmBC,EAAMC,EAAE3C,IACvB0C,EAAOS,GACTJ,EAAE/C,IAAMqD,EAAU1B,OAAOe,EAAM,GAC/BI,EAAYJ,EAAO,EAAGK,EAAE/C,KAExB8C,EAAYJ,EAAMK,EAAE/C,IAKtBoD,EAAK7C,KAAKwC,EAAE/C,IACZ0C,IAOAO,EAAejD,EAAGkD,EAAElD,IACpBA,IAEEc,EAAY,GACdiB,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAKO,EAAI,EAAInD,EAAIqC,EAAOD,EAAM,GAAI,SAAU,QAAS,IAAK,UAAU,IAInGL,EAAOxB,MAAKyC,EAAAA,EAAAA,KAAQG,EAAG,KAAMA,EAAIM,EAAIzD,EAAG,OAGxC,OADa4D,EAAAA,EAAAA,KAAW,CAAEC,MAAO,IAAKC,KAAM,GAAK,EAAIX,EAAGY,KAAMZ,EAAIM,EAAI,GAAIO,KAAM,KAAMC,YAAa,GAAIC,MAAO,IAAOnC,IA2OvH,OAAQlB,GACN,IAAK,WACmBE,EAAlBoD,EAAAA,GAAAA,OAzOgB,SAAUxD,EAAWC,GAC3C,MAAMwB,EAAOpB,EAA+BL,GACtC0B,EAAOrB,EAA+BJ,GACtCuB,EAAWd,KAAK+C,IAAIhC,EAAMC,GAChC1B,GAAYuB,EAAAA,EAAAA,KAAQ,GAAEvB,QAAgBwB,KACtCvB,GAAYsB,EAAAA,EAAAA,KAAQ,GAAEtB,QAAgBuB,KACtC,IAAIkC,EAAO,GAAI,MAAMtC,EAAS,GAC9B,IAGIuC,EAHAC,EAAOpD,OAAOR,GAAWN,WACzBmE,EAAOrD,OAAOP,GAAWP,WAG7B,MAAMoE,EAAOF,EAAKhD,OACZmD,EAAOF,EAAKjD,OACZoD,EAAoBtD,KAAK+C,IAAIK,EAAMC,GACzC,IAAIE,EAAW,IACf,GAAIH,EAAOC,EACT,IAAK,IAAIG,EAAI,EAAGA,EAAIJ,EAAOC,EAAMG,IAC/BL,EAAO,IAAMA,OAEV,GAAIE,EAAOD,EAChB,IAAK,IAAII,EAAI,EAAGA,EAAIH,EAAOD,EAAMI,IAC/BN,EAAO,IAAMA,EAIjB,IAAK,IAAIvE,EAAI2E,EAAoB,EAAG3E,EAAI,EAAGA,IAEvC4E,EADElB,SAASa,EAAKvE,IAAM0D,SAASc,EAAKxE,IAAM,EAC9B,IAAG4E,IAEH,IAAGA,IAGnBA,EAAW,IAAMA,EACjBL,EAAQ,IAAGA,IACXC,EAAQ,IAAGA,IAEXF,EAAYnD,OADKR,EAAYC,GACAP,WAC7B,MAAMyE,EAAYR,EAAU/C,OAC5B,IAAK,IAAIvB,EAAI,EAAGA,EAAI2E,EAAoB,EAAIG,EAAW9E,IACrDsE,EAAa,IAAGA,IAElB,IAAK,IAAItE,EAAI,EAAGA,EAAI2E,EAAoB,EAAG3E,IACzB,MAAZuE,EAAKvE,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB2B,EAAKvE,GAAQ,GAAJA,EAAS,EAAG,SAAU,QAAS,IAAK,UAAU,IACzF,MAAZwE,EAAKxE,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB4B,EAAKxE,GAAQ,GAAJA,EAAS,EAAG,SAAU,QAAS,IAAK,UAAU,IACzG+B,EAAOxB,MAAKyC,EAAAA,EAAAA,KAAQ,EAAG,EAA6B,IAAzB2B,EAAoB,GAAU,IACrC,MAAhBC,EAAS5E,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBgC,EAAS5E,GAAQ,GAAJA,EAAS,IAAK,SAAU,MAAO,GAAK,UAAU,IAC5F,MAAjBsE,EAAUtE,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB0B,EAAUtE,GAAQ,GAAJA,EAAS,EAAG,SAAU,QAAS,IAAK,UAAU,IAQrH,OANiB,IAAbmC,IACFJ,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAK,GAAM,IAAO+B,EAAoBxC,GAAW,EAAG,SAAU,QAAS,IAAK,UAAU,IACnHJ,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAK,GAAM,IAAO+B,EAAoBxC,GAAW,EAAG,SAAU,QAAS,IAAK,UAAU,IACnHJ,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAK,GAAM,IAAO+B,EAAoBxC,GAAW,EAAG,SAAU,QAAS,IAAK,UAAU,KAErHkC,IAAQT,EAAAA,EAAAA,KAAW,CAAEC,MAAO,GAAKC,KAAM,EAAGC,KAAMY,EAAmBX,KAAM,EAAGC,YAAa,GAAIC,MAAO,IAAOnC,GACpGsC,EAmLwBU,CAAgBpE,EAAWC,GAA4B,kCAAiCD,MAAcC,MAEnI,MACF,IAAK,eACmBG,EAAlBoD,EAAAA,GAAAA,OApLoB,SAAUxD,EAAWC,GAC/C,MAAMwB,EAAOpB,EAA+BL,GACtC0B,EAAOrB,EAA+BJ,GACtCuB,EAAWd,KAAK+C,IAAIhC,EAAMC,GAGhC,IAAmBkC,EAAUC,EAAzBH,EAAO,GAAwB,MAAMtC,EAAS,GAQlD,IAAIuC,GAVJ3D,GAAYuB,EAAAA,EAAAA,KAAQ,GAAEvB,QAAgBwB,OACtCvB,GAAYsB,EAAAA,EAAAA,KAAQ,GAAEtB,QAAgBuB,OAGpCqC,EAAOrD,OAAOR,GAAWN,WACzBkE,EAAOpD,OAAOP,GAAWP,aAEzBkE,EAAOpD,OAAOR,GAAWN,WACzBmE,EAAOrD,OAAOP,GAAWP,YAG3B,MAAMoE,EAAOF,EAAKhD,OACZmD,EAAOF,EAAKjD,OACZoD,EAAoBF,EAC1B,IAAIG,EAAW,KACf,GAAIH,EAAOC,EACT,IAAK,IAAIG,EAAI,EAAGA,EAAIJ,EAAOC,EAAMG,IAC/BL,EAAO,IAAMA,EAKjB,IAAK,IAAIxE,EAAI2E,EAAoB,EAAG3E,GAAKyE,EAAOC,EAAM1E,IAElD4E,EADElB,SAASa,EAAKvE,IAAO0D,SAASc,EAAKxE,IAAM0D,SAASkB,EAASI,OAAO,IACxD,IAAGJ,IAEH,IAAGA,IAGnBL,EAAQ,IAAGA,IACXC,EAAQ,IAAGA,IACXI,EAAY,IAAGA,IAEfN,EAAYnD,OADKR,EAAYC,GACAP,WAC7B,MAAMyE,EAAYR,EAAU/C,OAC5B,IAAK,IAAIvB,EAAI,EAAGA,EAAI2E,EAAoB,EAAIG,EAAW9E,IACrDsE,EAAa,IAAGA,IAElB,IAAK,IAAItE,EAAI,EAAGA,EAAI2E,EAAoB,EAAG3E,IACrB,MAAhB4E,EAAS5E,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBgC,EAAS5E,GAAQ,GAAJA,EAAU,GAAK,IAAK,SAAU,MAAO,GAAK,UAAU,IACvG,MAAZuE,EAAKvE,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB2B,EAAKvE,GAAQ,GAAJA,EAAS,EAAG,SAAU,QAAS,IAAK,UAAU,IACzF,MAAZwE,EAAKxE,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB4B,EAAKxE,GAAQ,GAAJA,EAAS,EAAG,SAAU,QAAS,IAAK,UAAU,IACzG+B,EAAOxB,MAAKyC,EAAAA,EAAAA,KAAQ,EAAG,EAA6B,IAAzB2B,EAAoB,GAAU,IACrC,MAAhBC,EAAS5E,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBgC,EAAS5E,GAAQ,GAAJA,EAAS,IAAK,SAAU,OAAQ,GAAK,UAAU,IAC7F,MAAjBsE,EAAUtE,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB0B,EAAUtE,GAAQ,GAAJA,EAAS,EAAG,SAAU,QAAS,IAAK,UAAU,IAQrH,OANiB,IAAbmC,IACFJ,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAK,GAAM,IAAO+B,EAAoBxC,GAAW,EAAG,SAAU,QAAS,IAAK,UAAU,IACnHJ,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAK,GAAM,IAAO+B,EAAoBxC,GAAW,EAAG,SAAU,QAAS,IAAK,UAAU,IACnHJ,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAK,GAAM,IAAO+B,EAAoBxC,GAAW,EAAG,SAAU,QAAS,IAAK,UAAU,KAErHkC,IAAQT,EAAAA,EAAAA,KAAW,CAAEC,MAAO,GAAKC,KAAM,EAAGC,KAAMY,EAAmBX,KAAM,EAAGC,YAAa,GAAIC,MAAO,IAAOnC,GACpGsC,EA4HwBY,CAAoBtE,EAAWC,GAA4B,kCAAiCD,MAAcC,MACvI,MACF,IAAK,iBACmBG,EAAlBoD,EAAAA,GAAAA,OA7HsB,SAAUxD,EAAWC,GACjD,IAAI2D,EAAUC,EAAM,MAAMzC,EAAS,GAAI,IAAImD,EAAeC,EAAiB,EAE3E,MAAMC,EAAW,GAAI,IAAIC,EAAS,MAAMC,EAAS,GAC7C3E,EAAYC,IACdsE,EAAYvE,EACZA,EAAYC,EACZA,EAAYsE,GAEd,MAAM9C,EAAOpB,EAA+BL,GACtC0B,EAAOrB,EAA+BJ,GAK5C,IAAI0D,EAJJ3D,GAAYuB,EAAAA,EAAAA,KAAQ,GAAEvB,QAAgByB,KACtCxB,GAAYsB,EAAAA,EAAAA,KAAQ,GAAEtB,QAAgByB,KACtCkC,EAAOpD,OAAOR,GAAWN,WACzBmE,EAAOrD,OAAOP,GAAWP,WAEzB,MAAMoE,EAAOF,EAAKhD,OACZmD,EAAOF,EAAKjD,OACZgE,EAAiBd,EAAOC,EAAO,EAC/BE,EAAW,GACjB,IAAK,IAAI5E,EAAI,EAAGA,EAAIwE,EAAKjD,OAAQvB,IAAK,CACpC4E,EAASrE,KAAK,KACd6E,EAAS7E,KAAK,IACd,IAAK,IAAIsC,EAAI,EAAGA,EAAI7C,EAAG6C,IACrB+B,EAAS5E,GAAM,GAAE4E,EAAS5E,MAC1BoF,EAASpF,GAAM,GAAEoF,EAASpF,MAE5B,GAA2B,MAAvBwE,EAAKE,EAAO1E,EAAI,GAAY,CAC9B,IAAK,IAAI6E,EAAI,EAAGA,EAAIN,EAAKhD,OAAQsD,IAC/BQ,EAAU3B,SAASa,EAAKE,EAAOI,EAAI,GAAKnB,SAASc,EAAKE,EAAO1E,EAAI,KAAO0D,SAASkB,EAAS5E,GAAG,IAC7F4E,EAAS5E,GAAM,GAAEmB,OAAOE,KAAKC,MAAM+D,EAAU,KAAKhF,aAAauE,EAAS5E,KACxEoF,EAASpF,GAAM,GAAEmB,OAAOkE,EAAU,IAAIhF,aAAa+E,EAASpF,KAE9DoF,EAASpF,GAAM,GAAE4E,EAAS5E,GAAG,KAAKoF,EAASpF,UAE3C,IAAK,IAAI6E,EAAI,EAAGA,EAAIN,EAAKhD,OAAQsD,IAC/BD,EAAS5E,GAAM,IAAG4E,EAAS5E,KAC3BoF,EAASpF,GAAM,IAAGoF,EAASpF,KAKjC,IAAK,IAAIA,EAAI0E,EAAM1E,EAAIuF,EAAgBvF,IACrCwE,EAAQ,IAAGA,IAEb,IAAK,IAAIxE,EAAIyE,EAAMzE,GAAKuF,EAAgBvF,IACtCuE,EAAQ,IAAGA,IAEb,IAAK,IAAIvE,EAAI,EAAGA,EAAI0E,EAAM1E,IACxB,IAAK,IAAI6E,EAAID,EAAS5E,GAAGuB,OAAQsD,GAAKU,EAAgBV,IACpDD,EAAS5E,GAAM,IAAG4E,EAAS5E,KAG/B,MAAMwF,GAAWtD,EAAAA,EAAAA,KAAQ,GAAEvB,KAAaC,KACxC0D,EAAYnD,OAAOqE,GAAUnF,WAC7B,MAAMyE,EAAYR,EAAU/C,OAC5B,IAAK,IAAIvB,EAAI,EAAGA,EAAI0E,EAAM1E,IACxB,IAAK,IAAI6E,EAAIO,EAASpF,GAAGuB,OAAQsD,GAAKC,EAAWD,IAC/CO,EAASpF,GAAM,IAAGoF,EAASpF,KAG/B4E,EAASrE,KAAK,KACd,IAAK,IAAIP,EAAI,EAAGA,EAAI8E,EAAY,EAAG9E,IAAK,CACtCsF,EAAO/E,KAAK,GACZ+E,EAAOtF,IAAM0D,SAASkB,EAASF,GAAM,IACrC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAMG,IACW,MAA/BO,EAASP,GAAGC,EAAY9E,IAA6C,MAA/BoF,EAASP,GAAGC,EAAY9E,KAChEsF,EAAOtF,IAAM0D,SAAS0B,EAASP,GAAGC,EAAY9E,KAGlD4E,EAASF,GAAS,GAAEvD,OAAOE,KAAKC,MAAMgE,EAAOtF,GAAK,KAAKK,WAAW,KAAKuE,EAASF,KAElF,IAAK,IAAI1E,EAAI,EAAGA,EAAI0E,EAAM1E,IAAK,CAC7BoF,EAASpF,GAAKwB,EAAqB4D,EAASpF,IAC5C,IAAK,IAAI6E,EAAIO,EAASpF,GAAGuB,OAAQsD,GAAKU,EAAgBV,IACpDO,EAASpF,GAAM,IAAGoF,EAASpF,KAG/BwE,EAAQ,IAAGA,IACX,IAAK,IAAIxE,EAAI8E,EAAW9E,GAAKuF,EAAgBvF,IAC3CsE,EAAa,IAAGA,IAElB,IAAK,IAAItE,EAAI4E,EAASF,GAAMnD,OAAQvB,GAAKuF,EAAgBvF,IACvD4E,EAASF,GAAS,IAAGE,EAASF,KAEhC,IAAK,IAAI1E,EAAI,EAAGA,GAAKuF,EAAgBvF,IACnB,MAAZuE,EAAKvE,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB2B,EAAKvE,GAAQ,GAAJA,EAAS,EAAG,SAAU,QAAS,IAAK,UAAU,IACzF,MAAZwE,EAAKxE,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB4B,EAAKxE,GAAQ,GAAJA,EAAS,EAAG,SAAU,QAAS,IAAK,UAAU,IAE9F,IAAToC,GAAcL,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAK,GAAgC,IAAzB2C,EAAiBnD,GAAa,EAAG,SAAU,QAAS,IAAK,UAAU,IACjH,IAATC,GAAcN,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAK,GAAgC,IAAzB2C,EAAiBlD,GAAa,EAAG,SAAU,QAAS,IAAK,UAAU,IAE9H,IAAK,IAAIwC,EAAI,EAAGA,EAAIH,EAAMG,IACxB,GAAiC,MAA7BL,EAAKe,EAAiBV,GACxB,IAAK,IAAI7E,EAAI,EAAGA,GAAKuF,EAAgBvF,IACZ,MAAnBoF,EAASP,GAAG7E,GAAgC,MAAnBoF,EAASP,GAAG7E,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBwC,EAASP,GAAG7E,GAAQ,GAAJA,EAAS,EAAI6E,EAAIM,EAAgB,SAAU,QAAS,IAAK,UAAU,IAC9I,MAAnBP,EAASC,GAAG7E,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBgC,EAASC,GAAG7E,GAAQ,GAAJA,EAAS,IAAM6E,EAAIM,EAAgB,SAAU,OAAQ,GAAK,UAAU,SAExIA,IAGX,IAAK,IAAInF,EAAI,EAAGA,GAAKuF,EAAgBvF,IACT,MAAtB4E,EAASF,GAAM1E,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiBgC,EAASF,GAAM1E,GAAQ,GAAJA,EAAS,IAAM0E,EAAOS,EAAgB,SAAU,MAAO,GAAK,UAAU,IAEvJpD,EAAOxB,MAAKyC,EAAAA,EAAAA,KAAQ,EAAG,IAAM0B,EAAOS,EAAuC,IAAtBI,EAAiB,GAAU,IAAMb,EAAOS,IAC7FpD,EAAOxB,MAAKyC,EAAAA,EAAAA,KAAQ,EAAG,IAA4B,IAAtBuC,EAAiB,GAAU,MACxD,IAAK,IAAIvF,EAAI,EAAGA,GAAKuF,EAAgBvF,IACd,MAAjBsE,EAAUtE,IAAY+B,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB0B,EAAUtE,GAAQ,GAAJA,EAAS,IAAM0E,EAAOS,EAAgB,SAAU,QAAS,IAAK,UAAU,IAM/I,OAJI/C,EAAOC,IAAS,GAAKN,EAAOxB,MAAKqC,EAAAA,EAAAA,KAAiB,IAAK,GAAuC,IAAhC2C,EAAiBlD,EAAOD,GAAa,IAAMsC,EAAOS,EAAgB,SAAU,QAAS,IAAK,UAAU,KAEzJvB,EAAAA,EAAAA,KAAW,CAAEC,MAAO,GAAKC,KAAM,EAAIY,EAAMX,KAAMwB,EAAiB,EAAGvB,KAAM,EAAGC,YAAa,GAAIC,MAAO,IAAOnC,GAczF0D,CAAsB9E,EAAWC,GAA4B,kCAAiCD,MAAcC,MACzI,MACF,IAAK,WACmBG,EAAlBoD,EAAAA,GAAAA,OAAyBvC,EAAgBjB,EAAWC,EAAWE,GAA4B,qGAAoGH,MAAcC,MACjN,MACF,IAAK,YACmBG,EAAlBoD,EAAAA,GAAAA,OAAyBvC,EAAgBjB,EAAWC,EAAW,GAAoB,aAAYD,MAAcC,MAGrH,OAAOG","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/operations.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { ordreDeGrandeur, calcul } from './outils.js'\nimport { mathalea2d, texteParPosition, segment } from './2d.js'\nimport { context } from './context.js'\nimport { format } from 'mathjs'\nconst math = { format: format }\n/**\n *\n * Pose une opération\n * @author Jean-Claude Lhote\n * les types possibles sont : addition, soustraction, multiplication, division, additiond, soustractiond, multiplicationd, divisiond\n * Le paramètre précision précise pour divisiond, le nombre de chiffres après la virgule dans le quotient.\n */\n\nexport default function Operation ({ operande1 = 1, operande2 = 2, type = 'addition', precision = 0 }) { // precision est pour le quotient décimal\n  let Code\n  const nombreDeChiffresApresLaVirgule = function (x) {\n    const s = Number(x).toString()\n    const pe = Number(Math.floor(x)).toString()\n    if (pe.length === s.length) return 0\n    return s.length - pe.length - 1\n  }\n\n  const cacherleszerosdevant = function (chaine) {\n    let blancs = ''\n    while (chaine[0] === '0') {\n      chaine = chaine.substr(1)\n      blancs += ' '\n    }\n    for (let i = 0; i < chaine.length; i++) {\n      blancs += `${chaine[i]}`\n    }\n    return blancs\n  }\n\n  const DivisionPosee3d = function (divid, divis, precision = 0) {\n    const objets = []; let zeroutile = false; const periode = 0\n    precision = Math.min(precision, nombreDeChiffresApresLaVirgule(calcul(divid / divis)))\n    const decalage = nombreDeChiffresApresLaVirgule(divis)\n    const dec1 = nombreDeChiffresApresLaVirgule(divid)\n    if (divid < divis) { zeroutile = true }\n    divis = calcul(`${divis}*10^${decalage}`)\n    divid = calcul(`${divid}*10^${decalage + dec1}`)\n    let dec2 = nombreDeChiffresApresLaVirgule(divid)\n    dec2 = precision - dec2 - dec1\n    divid = math.format(divid * 10 ** dec2, { notation: 'auto', lowerExp: -12, upperExp: 12, precision: 12 })\n    const ecriresoustraction = function (upos, P) {\n      objets.push(texteParPosition('-', upos - P.length - 0.5, 10 - i * 2, 'milieu', 'black', 1.2, 'middle', false))\n      for (let k = 0; k < P.length; k++) {\n        objets.push(texteParPosition(P[P.length - k - 1], upos - k - 1, 10 - i * 2, 'milieu', 'black', 1.2, 'middle', false))\n      }\n    }\n    const ecrirereste = function (upos, R) {\n      objets.push(segment(i - 1, 9.6 - i * 2, i + R.length, 9.6 - i * 2))\n      for (let k = 0; k < R.length; k++) {\n        objets.push(texteParPosition(R[R.length - k - 1], upos - k - 1, 9 - i * 2, 'milieu', 'black', 1.2, 'middle', false))\n      }\n    }\n    const ecrirequotient = function (x, Q) {\n      objets.push(texteParPosition(Q, n + 1.5 + x, 10, 'milieu', 'black', 1.2, 'middle', false))\n    }\n\n    const divd = []; const Q = []; const R = []; const P = []\n    const dividende = Number(divid).toString()\n    const diviseur = Number(divis).toString()\n    const n = Math.log10(ordreDeGrandeur(divid, 1)) // nombre de chiffres du dividende\n    const m = Math.log10(ordreDeGrandeur(divis, 1)) // nombre de chiffre du diviseur\n    let upos = m\n\n    for (let i = 0; i < n; i++) { // on écrit le dividende\n      objets.push(texteParPosition(dividende[i], i, 11, 'milieu', 'black', 1.2, 'middle', false))\n    }\n    for (let i = 0; i < m; i++) { // on écrit le diviseur\n      objets.push(texteParPosition(diviseur[i], i + n + 1.5, 11, 'milieu', 'black', 1.2, 'middle', false))\n    }\n    if (dec1 + dec2 !== 0) {\n      objets.push(texteParPosition(',', n - dec1 - dec2 - 1 + 0.5, 11, 'milieu', 'black', 1.2, 'middle', false))\n    }\n    objets.push(segment(n, 11.5, n, 11.5 - n * 2)) // on trace le trait vertical\n\n    let i = 0\n    divd.push(dividende.substr(0, m))\n    if (parseInt(divd[0]) < divis) {\n      divd[0] += dividende.substr(m, 1)\n      if (divis / (10 ** dec2) < divis && zeroutile) ecrirequotient(-1, '0')\n      upos++\n    } else if (zeroutile) { ecrirequotient(-1, '0') }\n    while (upos <= n) {\n      Q.push(Number(Math.floor(parseInt(divd[i]) / divis)).toString())\n      R.push(Number(parseInt(divd[i]) % divis).toString())\n      P.push('')\n      if (Q[i] === '0') {\n        for (let z = 0; z < m; z++) {\n          P[i] += '0'\n        }\n      } else {\n        P[i] += Number(parseInt(Q[i]) * divis).toString()\n      }\n      ecriresoustraction(upos, P[i])\n      if (upos < n) {\n        R[i] += dividende.substr(upos, 1)\n        ecrirereste(upos + 1, R[i])\n      } else {\n        ecrirereste(upos, R[i])\n      }\n      //  for (let r=0;r<i;r++){\n      //      if (R[i]==R[r]) periode=i-r\n      //  }\n      divd.push(R[i])\n      upos++\n\n      //  if (periode!=0) {\n      //      ecrirequotient(i,'...')\n      //      break\n      //  }\n      //  else\n      ecrirequotient(i, Q[i])\n      i++\n    }\n    if (precision > 0 && periode === 0) {\n      objets.push(texteParPosition(',', n + 1 + i - dec2 - dec1, 10, 'milieu', 'black', 1.2, 'middle', false))\n    } else if (periode !== 0) {\n      objets.push(texteParPosition(',', 2 * n - dec2 - dec1, 10, 'milieu', 'black', 1.2, 'middle', false))\n    }\n    objets.push(segment(n, 10.5, n + m + i, 10.5)) // on trace le trait horizontal\n\n    const code = mathalea2d({ xmin: -1.5, ymin: 10 - 2 * n, xmax: n + m + 10, ymax: 11.5, pixelsParCm: 20, scale: 0.8 }, objets)\n    return code\n  }\n\n  const AdditionPosee3d = function (operande1, operande2) {\n    const dec1 = nombreDeChiffresApresLaVirgule(operande1)\n    const dec2 = nombreDeChiffresApresLaVirgule(operande2)\n    const decalage = Math.max(dec1, dec2)\n    operande1 = calcul(`${operande1}*10^${decalage}`)\n    operande2 = calcul(`${operande2}*10^${decalage}`)\n    let code = ''; const objets = []\n    let sop1 = Number(operande1).toString()\n    let sop2 = Number(operande2).toString()\n\n    let sresultat\n    const lop1 = sop1.length\n    const lop2 = sop2.length\n    const longueuroperandes = Math.max(lop1, lop2)\n    let retenues = ' '\n    if (lop1 > lop2) { // si op1 a plus de chiffres qu'op2 on complète op2 avec des zéros.\n      for (let j = 0; j < lop1 - lop2; j++) {\n        sop2 = ' ' + sop2\n      }\n    } else if (lop2 > lop1) { // on fait pareil pour op1 si c'est op2 le plus 'grand'\n      for (let j = 0; j < lop2 - lop1; j++) {\n        sop1 = ' ' + sop1\n      }\n    }\n    // les deux operande ont le même nomre de chiffres\n    for (let i = longueuroperandes - 1; i > 0; i--) { // on construit la chaine des retenues.\n      if (parseInt(sop1[i]) + parseInt(sop2[i]) > 9) {\n        retenues = `1${retenues}`\n      } else {\n        retenues = ` ${retenues}`\n      }\n    }\n    retenues = ' ' + retenues\n    sop1 = ` ${sop1}`\n    sop2 = `+${sop2}`\n    const resultat = operande1 + operande2\n    sresultat = Number(resultat).toString()\n    const lresultat = sresultat.length\n    for (let i = 0; i < longueuroperandes + 1 - lresultat; i++) {\n      sresultat = ` ${sresultat}`\n    }\n    for (let i = 0; i < longueuroperandes + 1; i++) {\n      if (sop1[i] !== ' ') objets.push(texteParPosition(sop1[i], i * 0.6, 4, 'milieu', 'black', 1.2, 'middle', false))\n      if (sop2[i] !== ' ') objets.push(texteParPosition(sop2[i], i * 0.6, 3, 'milieu', 'black', 1.2, 'middle', false))\n      objets.push(segment(0, 2, (longueuroperandes + 1) * 0.6, 2))\n      if (retenues[i] !== ' ') objets.push(texteParPosition(retenues[i], i * 0.6, 2.5, 'milieu', 'red', 0.8, 'middle', false))\n      if (sresultat[i] !== ' ') objets.push(texteParPosition(sresultat[i], i * 0.6, 1, 'milieu', 'black', 1.2, 'middle', false))\n    }\n    if (decalage !== 0) {\n      objets.push(texteParPosition(',', 0.3 + 0.6 * (longueuroperandes - decalage), 4, 'milieu', 'black', 1.2, 'middle', false))\n      objets.push(texteParPosition(',', 0.3 + 0.6 * (longueuroperandes - decalage), 3, 'milieu', 'black', 1.2, 'middle', false))\n      objets.push(texteParPosition(',', 0.3 + 0.6 * (longueuroperandes - decalage), 1, 'milieu', 'black', 1.2, 'middle', false))\n    }\n    code += mathalea2d({ xmin: -0.5, ymin: 0, xmax: longueuroperandes, ymax: 5, pixelsParCm: 20, scale: 0.8 }, objets)\n    return code\n  }\n\n  const SoustractionPosee3d = function (operande1, operande2) {\n    const dec1 = nombreDeChiffresApresLaVirgule(operande1)\n    const dec2 = nombreDeChiffresApresLaVirgule(operande2)\n    const decalage = Math.max(dec1, dec2)\n    operande1 = calcul(`${operande1}*10^${decalage}`)\n    operande2 = calcul(`${operande2}*10^${decalage}`)\n    let code = ''; let sop1; let sop2; const objets = []\n    if (operande1 < operande2) {\n      sop2 = Number(operande1).toString()\n      sop1 = Number(operande2).toString()\n    } else {\n      sop1 = Number(operande1).toString()\n      sop2 = Number(operande2).toString()\n    }\n    let sresultat\n    const lop1 = sop1.length\n    const lop2 = sop2.length\n    const longueuroperandes = lop1\n    let retenues = '00'\n    if (lop1 > lop2) { // si op1 a plus de chiffres qu'op2 on complète op2 avec des blancs.\n      for (let j = 0; j < lop1 - lop2; j++) {\n        sop2 = ' ' + sop2\n      }\n    }\n\n    // les deux operande ont le même nomre de chiffres\n    for (let i = longueuroperandes - 1; i >= lop1 - lop2; i--) { // on construit la chaine des retenues.\n      if (parseInt(sop1[i]) < (parseInt(sop2[i]) + parseInt(retenues.charAt(0)))) {\n        retenues = `1${retenues}`\n      } else {\n        retenues = `0${retenues}`\n      }\n    }\n    sop1 = ` ${sop1}`\n    sop2 = `-${sop2}`\n    retenues = `0${retenues}`\n    const resultat = operande1 - operande2\n    sresultat = Number(resultat).toString()\n    const lresultat = sresultat.length\n    for (let i = 0; i < longueuroperandes + 1 - lresultat; i++) {\n      sresultat = ` ${sresultat}`\n    }\n    for (let i = 0; i < longueuroperandes + 1; i++) {\n      if (retenues[i] !== '0') objets.push(texteParPosition(retenues[i], i * 0.6 + 0.4, 4.1, 'milieu', 'red', 0.8, 'middle', false))\n      if (sop1[i] !== ' ') objets.push(texteParPosition(sop1[i], i * 0.6, 4, 'milieu', 'black', 1.2, 'middle', false))\n      if (sop2[i] !== ' ') objets.push(texteParPosition(sop2[i], i * 0.6, 3, 'milieu', 'black', 1.2, 'middle', false))\n      objets.push(segment(0, 2, (longueuroperandes + 1) * 0.6, 2))\n      if (retenues[i] !== '0') objets.push(texteParPosition(retenues[i], i * 0.6, 2.6, 'milieu', 'blue', 0.8, 'middle', false))\n      if (sresultat[i] !== ' ') objets.push(texteParPosition(sresultat[i], i * 0.6, 1, 'milieu', 'black', 1.2, 'middle', false))\n    }\n    if (decalage !== 0) {\n      objets.push(texteParPosition(',', 0.3 + 0.6 * (longueuroperandes - decalage), 4, 'milieu', 'black', 1.2, 'middle', false))\n      objets.push(texteParPosition(',', 0.3 + 0.6 * (longueuroperandes - decalage), 3, 'milieu', 'black', 1.2, 'middle', false))\n      objets.push(texteParPosition(',', 0.3 + 0.6 * (longueuroperandes - decalage), 1, 'milieu', 'black', 1.2, 'middle', false))\n    }\n    code += mathalea2d({ xmin: -0.5, ymin: 0, xmax: longueuroperandes, ymax: 5, pixelsParCm: 20, scale: 0.8 }, objets)\n    return code\n  }\n  const MultiplicationPosee3d = function (operande1, operande2) {\n    let sop1; let sop2; const objets = []; let operandex; let lignesinutiles = 0\n\n    const produits = []; let strprod; const sommes = []\n    if (operande1 < operande2) {\n      operandex = operande1\n      operande1 = operande2\n      operande2 = operandex\n    }\n    const dec1 = nombreDeChiffresApresLaVirgule(operande1)\n    const dec2 = nombreDeChiffresApresLaVirgule(operande2)\n    operande1 = calcul(`${operande1}*10^${dec1}`)\n    operande2 = calcul(`${operande2}*10^${dec2}`)\n    sop1 = Number(operande1).toString()\n    sop2 = Number(operande2).toString()\n    let sresultat\n    const lop1 = sop1.length\n    const lop2 = sop2.length\n    const longueurtotale = lop1 + lop2 + 1\n    const retenues = []\n    for (let i = 0; i < sop2.length; i++) {\n      retenues.push('0')\n      produits.push('')\n      for (let k = 0; k < i; k++) {\n        retenues[i] = `${retenues[i]}0`\n        produits[i] = `${produits[i]}°`\n      }\n      if (sop2[lop2 - i - 1] !== '0') {\n        for (let j = 0; j < sop1.length; j++) {\n          strprod = parseInt(sop1[lop1 - j - 1] * parseInt(sop2[lop2 - i - 1])) + parseInt(retenues[i][0])\n          retenues[i] = `${Number(Math.floor(strprod / 10)).toString()}${retenues[i]}`\n          produits[i] = `${Number(strprod % 10).toString()}${produits[i]}`\n        }\n        produits[i] = `${retenues[i][0]}${produits[i]}`\n      } else {\n        for (let j = 0; j < sop1.length; j++) {\n          retenues[i] = `0${retenues[i]}`\n          produits[i] = `°${produits[i]}`\n        }\n      }\n    }\n\n    for (let i = lop2; i < longueurtotale; i++) {\n      sop2 = ` ${sop2}`\n    }\n    for (let i = lop1; i <= longueurtotale; i++) {\n      sop1 = ` ${sop1}`\n    }\n    for (let i = 0; i < lop2; i++) {\n      for (let j = retenues[i].length; j <= longueurtotale; j++) {\n        retenues[i] = `0${retenues[i]}`\n      }\n    }\n    const resultat = calcul(`${operande1}*${operande2}`)\n    sresultat = Number(resultat).toString()\n    const lresultat = sresultat.length\n    for (let i = 0; i < lop2; i++) {\n      for (let j = produits[i].length; j <= lresultat; j++) {\n        produits[i] = `0${produits[i]}`\n      }\n    }\n    retenues.push('0')\n    for (let i = 0; i < lresultat - 1; i++) {\n      sommes.push(0)\n      sommes[i] += parseInt(retenues[lop2][0])\n      for (let j = 0; j < lop2; j++) {\n        if (produits[j][lresultat - i] !== '0' && produits[j][lresultat - i] !== '°') {\n          sommes[i] += parseInt(produits[j][lresultat - i])\n        }\n      }\n      retenues[lop2] = `${Number(Math.floor(sommes[i] / 10)).toString()[0]}${retenues[lop2]}`\n    }\n    for (let i = 0; i < lop2; i++) {\n      produits[i] = cacherleszerosdevant(produits[i])\n      for (let j = produits[i].length; j <= longueurtotale; j++) {\n        produits[i] = ` ${produits[i]}`\n      }\n    }\n    sop2 = `×${sop2}`\n    for (let i = lresultat; i <= longueurtotale; i++) {\n      sresultat = ` ${sresultat}`\n    }\n    for (let i = retenues[lop2].length; i <= longueurtotale; i++) {\n      retenues[lop2] = `0${retenues[lop2]}`\n    }\n    for (let i = 0; i <= longueurtotale; i++) {\n      if (sop1[i] !== ' ') objets.push(texteParPosition(sop1[i], i * 0.6, 7, 'milieu', 'black', 1.2, 'middle', false))\n      if (sop2[i] !== ' ') objets.push(texteParPosition(sop2[i], i * 0.6, 6, 'milieu', 'black', 1.2, 'middle', false))\n    }\n    if (dec1 !== 0) { objets.push(texteParPosition(',', 0.3 + (longueurtotale - dec1) * 0.6, 7, 'milieu', 'black', 1.2, 'middle', false)) }\n    if (dec2 !== 0) { objets.push(texteParPosition(',', 0.3 + (longueurtotale - dec2) * 0.6, 6, 'milieu', 'black', 1.2, 'middle', false)) }\n\n    for (let j = 0; j < lop2; j++) {\n      if (sop2[longueurtotale - j] !== '0') {\n        for (let i = 0; i <= longueurtotale; i++) {\n          if (produits[j][i] !== ' ' & produits[j][i] !== '°') objets.push(texteParPosition(produits[j][i], i * 0.6, 5 - j + lignesinutiles, 'milieu', 'black', 1.2, 'middle', false))\n          if (retenues[j][i] !== '0') objets.push(texteParPosition(retenues[j][i], i * 0.6, 5.5 - j + lignesinutiles, 'milieu', 'blue', 0.7, 'middle', false))\n        }\n      } else { lignesinutiles++ }\n    }\n\n    for (let i = 0; i <= longueurtotale; i++) {\n      if (retenues[lop2][i] !== '0') objets.push(texteParPosition(retenues[lop2][i], i * 0.6, 5.5 - lop2 + lignesinutiles, 'milieu', 'red', 0.7, 'middle', false))\n    }\n    objets.push(segment(0, 5.2 - lop2 + lignesinutiles, (longueurtotale + 1) * 0.6, 5.2 - lop2 + lignesinutiles))\n    objets.push(segment(0, 5.7, (longueurtotale + 1) * 0.6, 5.7))\n    for (let i = 0; i <= longueurtotale; i++) {\n      if (sresultat[i] !== ' ') objets.push(texteParPosition(sresultat[i], i * 0.6, 4.5 - lop2 + lignesinutiles, 'milieu', 'black', 1.2, 'middle', false))\n    }\n    if (dec1 + dec2 !== 0) { objets.push(texteParPosition(',', 0.3 + (longueurtotale - dec2 - dec1) * 0.6, 4.5 - lop2 + lignesinutiles, 'milieu', 'black', 1.2, 'middle', false)) }\n\n    const code = mathalea2d({ xmin: -0.5, ymin: 4 - lop2, xmax: longueurtotale + 2, ymax: 8, pixelsParCm: 20, scale: 0.8 }, objets)\n\n    return code\n  }\n\n  switch (type) {\n    case 'addition':\n      if (context.isHtml) { Code = AdditionPosee3d(operande1, operande2) } else { Code = `$\\\\opadd[decimalsepsymbol={,}]{${operande1}}{${operande2}}$` }\n\n      break\n    case 'soustraction':\n      if (context.isHtml) { Code = SoustractionPosee3d(operande1, operande2) } else { Code = `$\\\\opsub[decimalsepsymbol={,}]{${operande1}}{${operande2}}$` }\n      break\n    case 'multiplication':\n      if (context.isHtml) { Code = MultiplicationPosee3d(operande1, operande2) } else { Code = `$\\\\opmul[decimalsepsymbol={,}]{${operande1}}{${operande2}}$` }\n      break\n    case 'division':\n      if (context.isHtml) { Code = DivisionPosee3d(operande1, operande2, precision) } else { Code = `$\\\\opdiv[displayintermediary=all,voperation=top,period,decimalsepsymbol={,},shiftdecimalsep=none]{${operande1}}{${operande2}}$` }\n      break\n    case 'divisionE':\n      if (context.isHtml) { Code = DivisionPosee3d(operande1, operande2, 0) } else { Code = `$\\\\opidiv{${operande1}}{${operande2}}$` }\n      break\n  }\n  return Code\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","math","format","Operation","operande1","operande2","type","precision","Code","nombreDeChiffresApresLaVirgule","x","s","Number","pe","Math","floor","length","cacherleszerosdevant","chaine","blancs","substr","DivisionPosee3d","divid","divis","objets","zeroutile","min","calcul","decalage","dec1","dec2","notation","lowerExp","upperExp","ecriresoustraction","upos","P","texteParPosition","k","ecrirereste","R","segment","ecrirequotient","Q","n","divd","dividende","diviseur","log10","ordreDeGrandeur","m","parseInt","z","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","context","max","code","sresultat","sop1","sop2","lop1","lop2","longueuroperandes","retenues","j","lresultat","AdditionPosee3d","charAt","SoustractionPosee3d","operandex","lignesinutiles","produits","strprod","sommes","longueurtotale","resultat","MultiplicationPosee3d"],"sourceRoot":""}