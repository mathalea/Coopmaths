{"version":3,"file":"js/54874.144e4798f075185866ea.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G24-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, ecritureParentheseSiNegatif, ecritureAlgebrique } from '../../modules/outils.js'\nimport { repere2, mathalea2d, point, tracePoint, labelPoint, segment, nomVecteurParPosition } from '../../modules/2d.js'\n\nexport const titre = 'Déterminer les coordonnées d’un vecteur à partir des coordonnées de deux points'\n\n/**\n * @author Stéphane Guyon\n */\nexport default function calculercoordonneesvecteurs () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.nbQuestions = 2\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 1 //\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    for (let i = 0, r, A, B, O, I, J, j, t, k, l, s, o, ux, uy, xA, yA, xB, yB, nomi, nomj, nomAB, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      if (this.sup === 1) {\n        xA = randint(0, 4) * choice([-1, 1])\n        yA = randint(0, 4) * choice([-1, 1])\n        ux = randint(1, 4) * choice([-1, 1])\n        uy = randint(1, 4) * choice([-1, 1])\n        xB = xA + ux\n\n        yB = yA + uy\n\n        texte = 'Dans un repère orthonormé $(O,\\\\vec i,\\\\vec j)$, on donne les points suivants :'\n        texte += ` $A\\\\left(${xA};${yA}\\\\right)$ et $B\\\\left(${xB};${yB}\\\\right)$`\n        texte += '<br>Déterminer les coordonnées du vecteur $\\\\overrightarrow{AB}$ '\n\n        texteCorr = '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d\\'un repère,'\n        texteCorr += ' <br>alors on a  $\\\\overrightarrow{AB}\\\\begin{pmatrix}x_B-x_A  \\\\\\\\y_B-y_A\\\\end{pmatrix}$<br>'\n        texteCorr += ' <br>On applique ici aux données de l\\'énoncé :'\n        texteCorr += ` $\\\\overrightarrow{AB}\\\\begin{pmatrix}${xB}-${ecritureParentheseSiNegatif(xA)}  \\\\\\\\${yB}-${ecritureParentheseSiNegatif(yA)}\\\\end{pmatrix}$<br>`\n        texteCorr += `Ce qui donne au final : $\\\\overrightarrow{AB}\\\\begin{pmatrix}${xB - xA}  \\\\\\\\${yB - yA}\\\\end{pmatrix}$<br>`\n        r = repere2()// On définit le repère\n        A = point(xA, yA, 'A') // On définit et on trace le point A\n        B = point(xB, yB, 'B') // On définit et on trace le point B\n        t = tracePoint(A, B, 'red') // Variable qui trace les points avec une croix\n        l = labelPoint(A, B, 'red')// Variable qui trace les nom s A et B\n        s = segment(A, B, 'red') // On trace en rouge [AB]\n        O = point(0, 0, 'O')// On définit et on trace le point O\n        o = labelPoint(O)\n        I = point(1, 0)// On définit sans tracer le point I\n        J = point(0, 1)// On définit sans tracer le point J\n        k = segment(O, I) // Variable qui trace [OI] en rouge\n        j = segment(O, J)// Variable qui trace [OJ] en rouge\n        s.styleExtremites = '->'// Variable qui transforme [AB] en vecteur\n        k.styleExtremites = '->'// Variable qui transforme [OI] en vecteur\n        j.styleExtremites = '->'// Variable qui transforme [OJ] en vecteur\n        s.epaisseur = 3// Variable qui grossit le tracé du vecteur AB\n        k.epaisseur = 3// Variable qui grossit le tracé du vecteur OI\n        j.epaisseur = 3// Variable qui grossit le tracé du vecteur OJ\n        // vi = vecteur(O, I) // Variable qui définit vecteur OI\n        // vj = vecteur(O, J)// Variable qui définit vecteur OJ\n        // nomi = vi.representantNomme(O, 'i', 2, 'red') // Variable qui trace le nom du représentant du vecteur OI en origine O\n        // nomj = vj.representantNomme(O, 'j', 2, 'red')// Variable qui trace le nom du représentant du vecteur OI en origine O\n        nomi = nomVecteurParPosition('i', 0.5, -0.7, 1.5, 0)\n        nomj = nomVecteurParPosition('j', -0.7, 0.5, 1.5, 0)\n        nomAB = nomVecteurParPosition('AB', (xA + xB) / 2 + 1, (yA + yB) / 2 + 1, 1, 0)\n        texteCorr += mathalea2d({\n          xmin: -9,\n          ymin: -9,\n          xmax: 9,\n          ymax: 9\n        }, r, t, l, k, j, s, o, nomi, nomj, nomAB)// On trace le graphique\n      }\n      if (this.sup === 3) {\n        xA = randint(1, 4) * choice([-1, 1])\n        yA = randint(1, 4) * choice([-1, 1])\n        ux = randint(1, 4) * choice([-1, 1])\n        uy = randint(1, 4) * choice([-1, 1])\n        xB = xA + ux\n\n        yB = yA + uy\n\n        texte = 'Dans un repère orthonormé $(O,\\\\vec i,\\\\vec j)$, on donne le point  '\n        texte += ` $A\\\\left(${xA};${yA}\\\\right)$ et le vecteur $\\\\vec{u}\\\\left(${ux};${uy}\\\\right)$`\n        texte += '<br>Déterminer les coordonnées du point $B$ tel que  $\\\\vec{u}=\\\\overrightarrow{AB}$ '\n\n        texteCorr = ' <br> Soit  $B(x_B;y_B)$ les coordonnées du point que nous cherchons à déterminer.'\n        texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d\\'un repère,'\n        texteCorr += ' <br>alors on a  $\\\\overrightarrow{AB}\\\\begin{pmatrix}x_B-x_A  \\\\\\\\y_B-y_A\\\\end{pmatrix}$<br>'\n        texteCorr += ' <br>On applique ici aux données de l\\'énoncé :'\n        texteCorr += ` $\\\\overrightarrow{AB}\\\\begin{pmatrix} x_B-${ecritureParentheseSiNegatif(xA)}  \\\\\\\\y_B-${ecritureParentheseSiNegatif(yA)}\\\\end{pmatrix}$<br>`\n        if (xA < 0 | yA < 0) {\n          texteCorr += ` ou encore : $\\\\overrightarrow{AB}\\\\begin{pmatrix} x_B${ecritureAlgebrique(-xA)}  \\\\\\\\y_B${ecritureAlgebrique(-yA)}\\\\end{pmatrix}$<br>`\n        }\n        texteCorr += 'On sait d\\'après l\\'énoncé que : $\\\\vec{u}=\\\\overrightarrow{AB}$, '\n        texteCorr += `cela équivaut à résoudre : $\\\\begin{cases}x_B ${ecritureAlgebrique(-xA)} =${ux}\\\\\\\\ y_B${ecritureAlgebrique(-yA)}=${uy}\\\\end{cases}$`\n        texteCorr += `<br>ou encore : $\\\\begin{cases}x_B  =${ux}${ecritureAlgebrique(xA)}\\\\\\\\ y_B=${uy}${ecritureAlgebrique(yA)}\\\\end{cases}$`\n        texteCorr += `<br>Ce qui donne au final : $\\\\begin{cases}x_B  =${xB}\\\\\\\\ y_B=${yB}\\\\end{cases}$`\n        texteCorr += `<br>On a donc: $B(${xB};${yB})$.`\n        r = repere2()// On définit le repère\n        A = point(xA, yA, 'A') // On définit et on trace le point A\n        B = point(xB, yB, 'B') // On définit et on trace le point B\n        t = tracePoint(A, B, 'red') // Variable qui trace les points avec une croix\n        l = labelPoint(A, B, 'red')// Variable qui trace les nom s A et B\n        s = segment(A, B, 'red') // On trace en rouge [AB]\n        O = point(0, 0, 'O')// On définit et on trace le point O\n        o = labelPoint(O)\n        I = point(1, 0)// On définit sans tracer le point I\n        J = point(0, 1)// On définit sans tracer le point J\n        k = segment(O, I) // Variable qui trace [OI] en rouge\n        j = segment(O, J)// Variable qui trace [OJ] en rouge\n        s.styleExtremites = '->'// Variable qui transforme [AB] en vecteur\n        k.styleExtremites = '->'// Variable qui transforme [OI] en vecteur\n        j.styleExtremites = '->'// Variable qui transforme [OJ] en vecteur\n        s.epaisseur = 3// Variable qui grossit le tracé du vecteur AB\n        k.epaisseur = 3// Variable qui grossit le tracé du vecteur OI\n        j.epaisseur = 3// Variable qui grossit le tracé du vecteur OJ\n        // vi = vecteur(O, I) // Variable qui définit vecteur OI\n        // vj = vecteur(O, J)// Variable qui définit vecteur OJ\n        // nomi = vi.representantNomme(O, 'i', 2, 'red') // Variable qui trace le nom du représentant du vecteur OI en origine O\n        // nomj = vj.representantNomme(O, 'j', 2, 'red')// Variable qui trace le nom du représentant du vecteur OI en origine O\n        nomi = nomVecteurParPosition('i', 0.5, -0.7, 1.5, 0)\n        nomj = nomVecteurParPosition('j', -0.7, 0.5, 1.5, 0)\n        nomAB = nomVecteurParPosition('AB', (xA + xB) / 2 + 1, (yA + yB) / 2 + 1, 1, 0)\n        texteCorr += mathalea2d({\n          xmin: -9,\n          ymin: -9,\n          xmax: 9,\n          ymax: 9\n        }, r, t, l, k, j, s, o, nomi, nomj, nomAB)// On trace le graphique\n      }\n      if (this.sup === 2) {\n        xA = randint(1, 4) * choice([-1, 1])\n        yA = randint(1, 4) * choice([-1, 1])\n        ux = randint(1, 4) * choice([-1, 1])\n        uy = randint(1, 4) * choice([-1, 1])\n        xB = xA + ux\n\n        yB = yA + uy\n\n        texte = 'Dans un repère orthonormé $(O,\\\\vec i,\\\\vec j)$, on donne le point  '\n        texte += ` $B\\\\left(${xB};${yB}\\\\right)$ et le vecteur $\\\\vec{u}\\\\left(${ux};${uy}\\\\right)$`\n        texte += '<br>Déterminer les coordonnées du point $A$ tel que  $\\\\vec{u}=\\\\overrightarrow{AB}$ '\n\n        texteCorr = ' <br> Soit  $A(x_A;y_A)$ les coordonnées du point que nous cherchons à déterminer.'\n        texteCorr += '<br>On sait d\\'après le cours, que si $A(x_A;y_A)$ et $B(x_B;y_B)$ sont deux points d\\'un repère,'\n        texteCorr += ' <br>alors on a  $\\\\overrightarrow{AB}\\\\begin{pmatrix}x_B-x_A  \\\\\\\\y_B-y_A\\\\end{pmatrix}$<br>'\n        texteCorr += ' <br>On applique ici aux données de l\\'énoncé :'\n        texteCorr += ` $\\\\overrightarrow{AB}\\\\begin{pmatrix} ${xB}-x_A  \\\\\\\\${yB}-y_A\\\\end{pmatrix}$<br>`\n        texteCorr += 'On sait d\\'après l\\'énoncé que : $\\\\vec{u}=\\\\overrightarrow{AB}$, '\n        texteCorr += `cela équivaut à résoudre : $\\\\begin{cases}${ecritureAlgebrique(xB)}-x_A =${ux}\\\\\\\\ ${ecritureAlgebrique(yB)}-y_A=${uy}\\\\end{cases}$`\n        texteCorr += `<br>ou encore : $\\\\begin{cases}x_A  =${xB}${ecritureAlgebrique(-ux)}\\\\\\\\ y_A=${yB}${ecritureAlgebrique(-uy)}\\\\end{cases}$`\n        texteCorr += `<br>Ce qui donne au final : $\\\\begin{cases}x_A  =${xA}\\\\\\\\ y_A=${yA}\\\\end{cases}$`\n        texteCorr += `<br>On a donc: $A(${xA};${yA})$.`\n        r = repere2()// On définit le repère\n        A = point(xA, yA, 'A') // On définit et on trace le point A\n        B = point(xB, yB, 'B') // On définit et on trace le point B\n        t = tracePoint(A, B, 'red') // Variable qui trace les points avec une croix\n        l = labelPoint(A, B, 'red')// Variable qui trace les nom s A et B\n        s = segment(A, B, 'red') // On trace en rouge [AB]\n        O = point(0, 0, 'O')// On définit et on trace le point O\n        o = labelPoint(O)\n        I = point(1, 0)// On définit sans tracer le point I\n        J = point(0, 1)// On définit sans tracer le point J\n        k = segment(O, I) // Variable qui trace [OI] en rouge\n        j = segment(O, J)// Variable qui trace [OJ] en rouge\n        s.styleExtremites = '->'// Variable qui transforme [AB] en vecteur\n        k.styleExtremites = '->'// Variable qui transforme [OI] en vecteur\n        j.styleExtremites = '->'// Variable qui transforme [OJ] en vecteur\n        s.epaisseur = 3// Variable qui grossit le tracé du vecteur AB\n        k.epaisseur = 3// Variable qui grossit le tracé du vecteur OI\n        j.epaisseur = 3// Variable qui grossit le tracé du vecteur OJ\n        // vi = vecteur(O, I) // Variable qui définit vecteur OI\n        // vj = vecteur(O, J)// Variable qui définit vecteur OJ\n        // nomi = vi.representantNomme(O, 'i', 2, 'red') // Variable qui trace le nom du représentant du vecteur OI en origine O\n        // nomj = vj.representantNomme(O, 'j', 2, 'red')// Variable qui trace le nom du représentant du vecteur OI en origine O\n        nomi = nomVecteurParPosition('i', 0.5, -0.7, 1.5, 0)\n        nomj = nomVecteurParPosition('j', -0.7, 0.5, 1.5, 0)\n        nomAB = nomVecteurParPosition('AB', (xA + xB) / 2 + 1, (yA + yB) / 2 + 1, 1, 0)\n        texteCorr += mathalea2d({\n          xmin: -9,\n          ymin: -9,\n          xmax: 9,\n          ymax: 9\n        }, r, t, l, k, j, s, o, nomi, nomj, nomAB)// On trace le graphique\n      }\n      if (this.questionJamaisPosee(i, xA, yA, xB, yB)) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Situations différentes ', 3, '1 :Avec deux points\\n 2 : Avec un point origine et un vecteur\\n 3 :Avec un point extrémité et un vecteur']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","calculercoordonneesvecteurs","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","r","A","B","O","I","J","j","t","k","l","s","o","ux","uy","xA","yA","xB","yB","nomi","nomj","nomAB","texte","texteCorr","i","cpt","randint","choice","ecritureParentheseSiNegatif","repere2","point","tracePoint","labelPoint","segment","styleExtremites","epaisseur","nomVecteurParPosition","mathalea2d","xmin","ymin","xmax","ymax","ecritureAlgebrique","questionJamaisPosee","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigne","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}