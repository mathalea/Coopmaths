{"version":3,"file":"js/32466.9de94f82823782775350.js","mappings":"4GAMe,SAASA,IAItBC,KAAKC,MAAQ,GACbD,KAAKE,YAAa,EAclBF,KAAKG,SAAW,GAChBH,KAAKI,mBAAqB,GAC1BJ,KAAKK,aAAe,GACpBL,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxBP,KAAKQ,QAAU,GACfR,KAAKS,kBAAoB,GACzBT,KAAKU,eAAiB,GACtBV,KAAKW,sBAAwB,GAK7BX,KAAKY,QAAU,EACfZ,KAAKa,YAAc,EAKnBb,KAAKc,mBAAoB,EACzBd,KAAKe,cAAgB,GACrBf,KAAKgB,oBAAqB,EAC1BhB,KAAKiB,uBAAwB,EAC7BjB,KAAKkB,OAAS,EACdlB,KAAKmB,WAAa,EAClBnB,KAAKoB,kBAAmB,EACxBpB,KAAKqB,sBAAuB,EAC5BrB,KAAKsB,mBAAoB,EACzBtB,KAAKuB,uBAAwB,EAM7BvB,KAAKwB,QAAS,EACdxB,KAAKyB,gBAAkB,GAKvBzB,KAAK0B,YAAc,GACnB1B,KAAK2B,+BAAgC,EACrC3B,KAAK4B,qBAAsB,EAC3B5B,KAAK6B,MAAQ,GAEb7B,KAAK8B,YAAa,EAClB9B,KAAK+B,uBAAwB,EAE7B/B,KAAKgC,2BAA4B,EACjChC,KAAKiC,uBAAwB,EAC7BjC,KAAKkC,6BAA8B,EAEnClC,KAAKmC,4BAA6B,EAClCnC,KAAKoC,wBAAyB,EAC9BpC,KAAKqC,8BAA+B,EAEpCrC,KAAKsC,4BAA6B,EAClCtC,KAAKuC,wBAAyB,EAC9BvC,KAAKwC,8BAA+B,EAMpCxC,KAAKyC,cAAe,EAMpBzC,KAAK0C,eAAiB,GAEtB1C,KAAK2C,gBAAkB,SAAUC,KAQjC5C,KAAK6C,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAAS9C,KAAK0C,eAAiB,IACnC,IAAIM,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAInD,KAAK0C,eAAeU,QAAQJ,IAAmB,KAGjDhD,KAAK0C,eAAeW,KAAKL,IAClB,I,yKChHN,MAAM/C,EAAQ,6CACRqD,EAAiB,WACjBC,GAAkB,EAOhB,SAASC,IACtBzD,EAAAA,QAAAA,KAAcC,MACdA,KAAKuD,gBAAkBA,EACvBvD,KAAKsD,eAAiBA,EACtBtD,KAAKG,SAAW,WAChBH,KAAK0B,YAAc,EACnB1B,KAAKkB,OAAS,EACdlB,KAAKmB,WAAa,EAClBnB,KAAKyD,IAAM,EACXzD,KAAKK,cAAeqD,EAAAA,EAAAA,KAAa,CAC/BzD,MAAO,0BACP0D,MAAO,8CACPC,QAAS,YAGX5D,KAAK2C,gBAAkB,SAAUC,GAC/B5C,KAAKE,YAAa2D,EAAAA,EAAAA,KAASjB,EAAgB,8CACzC,iBAEF5C,KAAKM,eAAiB,GACtBN,KAAKO,iBAAmB,GACxB,MAAMuD,EAA8B,CAAC,EAAG,EAAG,EAAG,GAAGC,EAAAA,EAAAA,KAAO,CAAC,EAAG,IAAK,EAAG,EAAG,GACjEC,GAAuBC,EAAAA,EAAAA,KAC3BH,EACA9D,KAAK0B,aAEP,IAAIwC,EAAW,GAEbA,EADyB,IAAvBC,SAASnE,KAAKyD,MACLQ,EAAAA,EAAAA,KAAkB,CAAC,GAAI,IAAK,IAAM,IAAO,KAASjE,KAAK0B,cAEvDuC,EAAAA,EAAAA,KAAkB,CAAC,GAAI,IAAK,KAAOjE,KAAK0B,aAErD,IACE,IAAWiC,EAAOS,EAAWC,EAAGC,EAA5BxB,EAAI,EAA2ByB,EAAM,EACzCzB,EAAI9C,KAAK0B,aAAe6C,EAAM,IAE9B,CACA,OAAQP,EAAqBlB,IAC3B,KAAK,EACHuB,GAAIG,EAAAA,EAAAA,KAAQ,EAAG,GACf,MACF,KAAK,EACHH,EAAoB,IAAhBG,EAAAA,EAAAA,KAAQ,EAAG,GACf,MACF,KAAK,EACHH,EAAoB,KAAhBG,EAAAA,EAAAA,KAAQ,EAAG,GACf,MACF,KAAK,EACHH,EAAoB,KAAhBG,EAAAA,EAAAA,KAAQ,EAAG,GACf,MACF,KAAK,EACHH,EAAoB,KAAhBG,EAAAA,EAAAA,KAAQ,EAAG,IAAWA,EAAAA,EAAAA,KAAQ,EAAG,GACrC,MACF,KAAK,EACHH,EAAoB,KAAhBG,EAAAA,EAAAA,KAAQ,EAAG,IAAYA,EAAAA,EAAAA,KAAQ,EAAG,GACtC,MACF,KAAK,EACHH,EAAoB,KAAhBG,EAAAA,EAAAA,KAAQ,EAAG,GAA2B,IAAhBA,EAAAA,EAAAA,KAAQ,EAAG,IAAUA,EAAAA,EAAAA,KAAQ,EAAG,GAC1D,MACF,KAAK,EACHH,EAAoB,KAAhBG,EAAAA,EAAAA,KAAQ,EAAG,GAA6B,KAAhBA,EAAAA,EAAAA,KAAQ,EAAG,GACvC,MACF,KAAK,EACHH,EAAoB,IAAhBG,EAAAA,EAAAA,KAAQ,EAAG,IAAUA,EAAAA,EAAAA,KAAQ,EAAG,GAIxCF,EAAIJ,EAASpB,IACTiB,EAAAA,EAAAA,KAAO,EAAC,GAAM,KAChBJ,EAAS,KAAGc,EAAAA,EAAAA,KAAUJ,aAAYI,EAAAA,EAAAA,KAAUH,OAC5CF,EAAa,KAAGK,EAAAA,EAAAA,KAAUJ,aAAYI,EAAAA,EAAAA,KAAUH,OAAMG,EAAAA,EAAAA,KAAUJ,EAAIC,QAEpEX,EAAS,KAAGc,EAAAA,EAAAA,KAAUH,aAAYG,EAAAA,EAAAA,KAAUJ,OAC5CD,EAAa,KAAGK,EAAAA,EAAAA,KAAUH,aAAYG,EAAAA,EAAAA,KAAUJ,OAAMI,EAAAA,EAAAA,KAAUJ,EAAIC,QAE1B,IAAxCtE,KAAKM,eAAe8C,QAAQO,KAE9BA,IAASe,EAAAA,EAAAA,IAAyB1E,KAAM8C,IACxC6B,EAAAA,EAAAA,IAAW3E,KAAM8C,EAAGuB,EAAIC,GACxBtE,KAAKM,eAAe+C,KAAKM,GACzB3D,KAAKO,iBAAiB8C,KAAKe,GAC3BtB,KAEFyB,KAEFK,EAAAA,EAAAA,KAAwB5E,OAE1BA,KAAKgC,0BAA4B,CAAC,uBAAwB,EAAG","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta6N12-interactif.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, texNombre, modalUrl, lampeMessage } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Multiplier un entier par 10, 100, 1 000...'\nexport const interactifType = 'mathLive'\nexport const interactifReady = true\n\n/**\n * Un nombre à 2 chiffres (non multiple de 10) + 9\n * @author Rémi Angot\n * Référence 6N12\n */\nexport default function MultiplierEntierPar101001000 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Calculer'\n  this.nbQuestions = 8\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 2\n  this.introduction = lampeMessage({\n    titre: 'Calculatrice interdite.',\n    texte: 'Aide : utiliser le glisse nombre si besoin.',\n    couleur: 'nombres'\n  })\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.boutonAide = modalUrl(numeroExercice, 'https://mathix.org/glisse-nombre/index.html',\n      'Glisse-nombre'\n    )\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4, choice([5, 6]), 7, 8, 9]\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let listeDeB = []\n    if (parseInt(this.sup) === 2) {\n      listeDeB = combinaisonListes([10, 100, 1000, 10000, 100000], this.nbQuestions)\n    } else {\n      listeDeB = combinaisonListes([10, 100, 1000], this.nbQuestions)\n    }\n    for (\n      let i = 0, texte, texteCorr, a, b, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          a = randint(1, 9)\n          break\n        case 2:\n          a = randint(2, 9) * 10\n          break\n        case 3:\n          a = randint(2, 9) * 100\n          break\n        case 4:\n          a = randint(2, 9) * 1000\n          break\n        case 5:\n          a = randint(1, 9) * 100 + randint(1, 9)\n          break\n        case 6:\n          a = randint(1, 9) * 1000 + randint(1, 9)\n          break\n        case 7:\n          a = randint(1, 9) * 100 + randint(1, 9) * 10 + randint(1, 9)\n          break\n        case 8:\n          a = randint(1, 9) * 10000 + randint(1, 9) * 100\n          break\n        case 9:\n          a = randint(1, 9) * 10 + randint(1, 9)\n          break\n      }\n\n      b = listeDeB[i]\n      if (choice([true, false])) {\n        texte = `$${texNombre(a)}\\\\times${texNombre(b)}=$`\n        texteCorr = `$${texNombre(a)}\\\\times${texNombre(b)}=${texNombre(a * b)}$`\n      } else {\n        texte = `$${texNombre(b)}\\\\times${texNombre(a)}=$`\n        texteCorr = `$${texNombre(b)}\\\\times${texNombre(a)}=${texNombre(a * b)}$`\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        texte += ajouteChampTexteMathLive(this, i)\n        setReponse(this, i, a * b)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Multiplication par 10, 100 ou 1 000\\n2 : Multiplication par 10, 100, 1 000, 10 000 ou 100 000']\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifType","interactifReady","MultiplierEntierPar101001000","sup","lampeMessage","texte","couleur","modalUrl","typesDeQuestionsDisponibles","choice","listeTypeDeQuestions","combinaisonListes","listeDeB","parseInt","texteCorr","a","b","cpt","randint","texNombre","ajouteChampTexteMathLive","setReponse","listeQuestionsToContenu"],"sourceRoot":""}