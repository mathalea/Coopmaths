{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5L14-2.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","interactifReady","amcType","titre","ExerciceSubstituer","difficulte","Exercice","this","sup","interactif","consigne","spacing","consigneModifiable","nouvelleVersion","reponse","autoCorrection","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","nbQuestions","k","randint","k2","k3","choice","valeursPossibles","range","x","enleveElement","y","z","context","texte","texteCorr","i","cpt","lettreDepuisChiffre","ecritureParentheseSiNegatif","ajouteChampTexte","enonce","propositions","statut","feedback","valeur","param","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","indexOf","push","amc","id","listeQuestionsToContenu","besoinFormulaireNumerique","exerciceInteractif","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceQcm","exercice","document","addEventListener","$","checkbox","button","querySelector","event","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","length","spanReponseLigne","forEach","proposition","indice","label","check","style","backgroundColor","checked","typeFeedback","innerHTML","fontSize","messageFeedback","type","querySelectorAll","uicheck","classList","add","propositionsQcm","espace","undefined","options","ordered","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","texteApres","inline","numeric","setReponse","a","exposant_nb_chiffres","exposant_signe","getElementById","value","replaceAll","toString","questionNumerique","divMessage","erreur","niveau","message","messageUtilisateur","divErreur","code","remove","html"],"mappings":"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","file":"js/2900.69269f92d97b06705e2a.js","sourcesContent":["\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, range, combinaisonListes, ecritureParentheseSiNegatif, lettreDepuisChiffre } from '../../modules/outils.js'\nimport { ajouteChampTexte, exerciceInteractif } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const interactifReady = true\nexport const amcType =4 //type de question AMC NumeriqueChoice \n\nexport const titre = 'Substitution'\n\n/**\n* x, y, z étant 3 entiers compris entre 2 et 9, calculer :\n* * kx\n* * kx-y\n* * xy\n* * x+y\n* * x+y+z\n* * x(y+z)\n* * x^2\n* * x^2+ky\n* * x^2+y^2\n* * ax^2+y^2\n* * ax^2+bx+c\n* @Auteur Rémi Angot\n* 5L14-2\n*/\nexport default function ExerciceSubstituer (difficulte = 1) {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = difficulte\n  this.titre = titre\n  this.amcType = amcType\n  this.interactif = true\n  this.interactifReady = interactifReady\n  this.consigne = 'Calculer'\n  this.spacing = 1\n  this.consigneModifiable = false\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let reponse\n    const typeDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    const listeTypeDeQuestions = combinaisonListes(typeDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let k = randint(2, 9)\n    let k2 = randint(2, 9)\n    let k3 = randint(2, 9)\n    if (this.sup > 1) { // si difficulté 2, k, k2 et k3 peuvent être négatifs !!! La correction est à faire. Exercice non fini\n      k = k * choice([-1, 1])\n      k2 = k2 * choice([-1, 1])\n      k3 = k3 * choice([-1, 1])\n    }\n    const valeursPossibles = range(9, [0, 1]) // Toutes les valeurs de 2 à 9\n    const x = choice(valeursPossibles)\n    enleveElement(valeursPossibles, x)\n    const y = choice(valeursPossibles)\n    enleveElement(valeursPossibles, y)\n    const z = choice(valeursPossibles)\n    // x, y et z sont différents\n    if (context.isHtml) {\n      this.consigne = `Calculer pour $\\\\boldsymbol{x=${x}}$, $\\\\boldsymbol{y=${y}}$ et $\\\\boldsymbol{z=${z}}$.`\n    } else {\n      this.consigne = `Calculer pour $x=${x}$, $y=${y}$ et $z=${z}$.`\n    }\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte = `$${lettreDepuisChiffre(i + 1)}=${k}x$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${k}x=${k}\\\\times  ${x}=${k * x}$`\n          reponse = k * x\n          break\n        case 2:\n          texte = `$${lettreDepuisChiffre(i + 1)}=${k}x-y$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${k}x-y=${k}\\\\times  ${x}-${y}=${k * x - y}$`\n          reponse = k * x - y\n          break\n        case 3:\n          texte = `$${lettreDepuisChiffre(i + 1)}=xy$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=xy=${x}\\\\times  ${y}=${x * y}$`\n          reponse = x * y\n          break\n        case 4:\n          texte = `$${lettreDepuisChiffre(i + 1)}=x+y$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=x+y=${x}+${y}=${x + y}$`\n          reponse = x + y\n          break\n        case 5:\n          texte = `$${lettreDepuisChiffre(i + 1)}=xy+z$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=xy+z=${x}\\\\times  ${y}+${z}=${x * y + z}$`\n          reponse = x * y + z\n          break\n        case 6:\n          texte = `$${lettreDepuisChiffre(i + 1)}=x(y+z)$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=x(y+z)=${x}\\\\times (${y}+${z})=${x * (y + z)}$`\n          reponse = x * (y + z)\n          break\n        case 7:\n          texte = `$${lettreDepuisChiffre(i + 1)}=x^2+${ecritureParentheseSiNegatif(k)}y$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=x^2+${ecritureParentheseSiNegatif(k)}y=${x}^2+${ecritureParentheseSiNegatif(k)}\\\\times  ${y}=${x * x}+${ecritureParentheseSiNegatif(k)}\\\\times  ${y}=${x * x + k * y}$`\n          reponse = x * x + k * y\n          break\n        case 8:\n          texte = `$${lettreDepuisChiffre(i + 1)}=x^2+y^2$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=x^2+y^2=${x}^2+${y}^2=${x * x}+${y * y}=${x * x + y * y}$`\n          reponse = x * x + y * y\n          break\n        case 9:\n          texte = `$${lettreDepuisChiffre(i + 1)}=${k}x^2+y^2$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${k}x^2+y^2=${k}\\\\times  ${x}^2+${y}^2=${k}\\\\times  ${x * x}+${y * y}=${k * x * x + y * y}$`\n          reponse = k * x * x + y * y\n          break\n        case 10:\n          texte = `$${lettreDepuisChiffre(i + 1)}=${k}x^2+${ecritureParentheseSiNegatif(k2)}x+${ecritureParentheseSiNegatif(k3)}$`\n          texteCorr = `$${lettreDepuisChiffre(i + 1)}=${k}x^2+${ecritureParentheseSiNegatif(k2)}x+${ecritureParentheseSiNegatif(k3)}=${k}\\\\times  ${x}^2+${ecritureParentheseSiNegatif(k2)}\\\\times  ${ecritureParentheseSiNegatif(x)}+${ecritureParentheseSiNegatif(k3)}=${k}\\\\times  ${x * x}+${ecritureParentheseSiNegatif(k2)}\\\\times  ${x}+${ecritureParentheseSiNegatif(k3)}=${k * x * x + k2 * x + k3}$`\n          reponse = k * x * x + k2 * x + k3\n          break\n      }\n      if (this.interactif) {\n        texte += ajouteChampTexte(this, i, {\n          texte: '$~=$'\n        })\n      }\n      this.autoCorrection[i] = {\n        enonce: texte + '\\\\\\\\' + this.consigne,\n        propositions: [\n          {\n            texte: texteCorr,\n            statut: 'emplacement à louer',\n            feedback: ''\n          }\n        ],\n        reponse: {\n          texte: 'résultat',\n          valeur: reponse,\n          param: {\n            digits: 3,\n            decimals: 0,\n            signe: false,\n            exposantNbChiffres: 0,\n            exposantSigne: false,\n            approx: 0\n          }\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n\n        i++\n      }\n      cpt++\n    }\n    if (context.isAmc) {\n      this.amc = [this.id, this.autoCorrection, titre, amcType]\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Multiplication par un facteur positif\\n2: Multiplication par un facteur relatif']\n  exerciceInteractif(this)\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {int} numeroExercice Indice de l'exercice\n * @param {int} i Indice de la question\n * @param {*} tabrep Tableau des propositions\n * @param {*} tabicone Tableau ordonné comme tabrep avec 0 si la proposition est fausse et 1 si la proposition est juste\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          if (document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`).value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          spanReponseLigne.style.fontSize = 'large'\n        }\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposant_nb_chiffres = 0, exposant_signe = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.valeur = { digits, decimals, signe, exposant_nb_chiffres, exposant_signe, approx }\n}\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4) questionNumerique(exercice)\n  if (exercice.amcType === 1) exerciceQcm(exercice)\n  if (exercice.amcType === 2) exerciceQcm(exercice) // Avec des paramètres différents ??? @jeanClaude, qu'en penses-tu ?\n}\n","// Module regroupant les fonctions de gestions des erreurs.\n\nfunction divMessage (erreur) {\n// Construit le message d'erreur pour insertion dans la page.\n  if (erreur.niveau === 'erreur') {\n    return `<div id=\"affichageErreur\" class=\"ui error message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"frown outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'warning') {\n    return `<div id=\"affichageErreur\" class=\"ui warning message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bullhorn icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n  if (erreur.niveau === 'info') {\n    return `<div id=\"affichageErreur\" class=\"ui message\"><i id=\"fermerMessageErreur\" class=\"close icon\"></i>\n    <div class=\"header\">\n      <i class=\"bell outline icon\"></i> ${erreur.titre}\n    </div>\n      ${erreur.message}\n  </div>`\n  }\n}\n\n/**\n*\n* @param {code:'code de l'erreur',[exercice : 'identifiant de l'exercice']}\n* @author Cédric GROLLEAU\n*/\nexport function messageUtilisateur (erreur) {\n  let divErreur = ''\n  if (erreur.code === 'codeExerciceInconnu') {\n    divErreur = divMessage({\n      titre: 'le code de l\\'exercice n\\'est pas valide',\n      message: `L'identifiant ${erreur.exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n      niveau: 'erreur'\n    })\n  } else if (erreur.code === 'mg32load') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module mg32',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  } else if (erreur.code === 'scratchLoad') {\n    divErreur = divMessage({\n      titre: 'Erreur de chargement du module scratch',\n      message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n        Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n      niveau: 'warning'\n    })\n  }\n  document.getElementById('containerErreur').innerHTML = divErreur\n  document.getElementById('fermerMessageErreur').addEventListener('click', function () {\n    document.getElementById('affichageErreur').remove()\n  })\n}\n\n/**\n *\n * @param {id : 'id du div', texte: 'message', type:'error ou positive'}\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  const typeMessage = type || 'error'\n  if (id && texte) {\n    const html = `<div id=\"messageFeedback${id}\" class=\"ui ${typeMessage} message\" style=\"width:400px\"><i id=\"fermerFeedback${id}\" class=\"close icon\"></i>\n        ${texte}\n  </div>`\n    document.getElementById(id).innerHTML = html\n    document.getElementById(`fermerFeedback${id}`).addEventListener('click', function () {\n      document.getElementById(`messageFeedback${id}`).remove()\n    })\n  }\n}\n"],"sourceRoot":""}