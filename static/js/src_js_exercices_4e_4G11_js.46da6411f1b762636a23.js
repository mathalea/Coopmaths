/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_4e_4G11_js"],{

/***/ "./src/js/exercices/4e/4G11.js":
/*!*************************************!*\
  !*** ./src/js/exercices/4e/4G11.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Pavage_et_translation2d)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\nconst titre = 'Trouver l’image d’une figure par une translation dans un pavage'\n\n/**\n * @Auteur Jean-Claude Lhote\n * publié le 16/12/2020\n * Réf : 4G11\n * Trouver une figure image dans un pavage par une translation. 6 pavages différents.\n */\nfunction Pavage_et_translation2d() {\n  \"use strict\";\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nb_questions = 3;\n  this.nb_questions_modifiable = true;\n  this.correction_detaillee=true;\n  this.correction_detaillee_disponible=true;\n  this.nb_cols = 1;\n  this.nb_cols_corr = 1;\n  this.sup = 1; // 1 pour des pavages modestes, 2 pour des plus grand.\n  this.sup2=false // On cache les centres par défaut.\n  this.sup3=7;\n  sortie_html ? (this.spacing_corr = 2.5) : (this.spacing_corr = 1.5);\n  this.nouvelle_version = function () {\n    let videcouples=function(tableau){\n      for (let k=0;k<tableau.length;k++){\n        for (let j=k+1;j<tableau.length;j++){\n          if (tableau[k][1]==tableau[j][0]) {\n            tableau.splice(j,1)\n          }\n        }\n      }\n      return tableau\n    }\n    let compare2polys=function(poly1,poly2){\n      if (comparenbsommets(poly1,poly2)) {\n        if (comparesommets(poly1,poly2)) \n          return true\n        else\n          return false\n      }\n      else \n        return false \n      }\n      let comparenbsommets = function(poly1,poly2){\n        if (poly1.listePoints.length==poly2.listePoints.length){\n          return true\n        }\n        else return false\n      }\n      \n      let compare2sommets=function(sommet1,sommet2){\n        if ((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.egal)(sommet1.x,sommet2.x,0.1)&&(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.egal)(sommet1.y,sommet2.y,0.1)) {\n          return true\n        }\n        else return false\n      }\n      let comparesommets = function(poly1,poly2){\n        let trouve=false,trouves=0\n        if (comparenbsommets(poly1,poly2))\n        for (let P of poly1.listePoints) {\n          for (let M of poly2.listePoints) {\n            if (compare2sommets(M,P)) {\n              trouve=true\n            }\n            if (trouve) break\n          }\n          if (trouve) {\n            trouves++\n            trouve=false\n          }\n          else {\n            trouves-=100\n          }\n          if (trouves<0)\n          break\n        }\n        if (trouves==poly1.listePoints.length)\n          return true\n        else return false\n      }\n\n    let translacion = function (pavage, v, numero) { // retourne le numero du polygone image ou -1 si il n'existe pas\n      let poly=pavage.polygones[numero-1],pol\n      let result=-1\n      let sympoly=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translation)(poly,v)\n      for (let k= 0;k<pavage.polygones.length;k++) {\n        pol=pavage.polygones[k]\n        if (compare2polys(sympoly,pol)) {\n          return k+1\n        }\n      }\n      return result\n    } \n\n    let objets=[],objets_correction=[],P1,P2,P3,t\n    let taillePavage=parseInt(this.sup)\n    if (taillePavage<1||taillePavage>2) {\n      taillePavage=1\n    }\n    if (this.nb_questions>5) {\n      taillePavage=2\n    }\n    this.liste_corrections = []\n    this.liste_questions = []\n    let Nx,Ny,index1,index2,A,B,d,image,couples=[],tailles=[],monpavage,fenetre\n    let texte = \"\", texte_corr = \"\", type_de_pavage = parseInt(this.sup)\n    let nombreTentatives,nombrePavageTestes=1,v\n    monpavage = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pavage)()\n    if (this.sup3==8) {\n      type_de_pavage =  (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1,7)\n    }\n    else {\n      type_de_pavage=parseInt(this.sup3)\n    }\n    while (couples.length<this.nb_questions&&nombrePavageTestes<6){\n      nombreTentatives=0\n    monpavage = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.pavage)() // On crée l'objet Pavage qui va s'appeler monpavage\n    tailles = [[[3, 2], [3, 2], [2, 2], [2, 2], [2, 2], [2, 2],[3,2]], [[4, 3], [4, 3], [3, 3], [3, 3], [3, 3], [3, 2],[5,3]]]\n    Nx = tailles[taillePavage-1][type_de_pavage-1][0]\n    Ny = tailles[taillePavage-1][type_de_pavage-1][1]\n    monpavage.construit(type_de_pavage, Nx, Ny, 3) // On initialise toutes les propriétés de l'objet.\n    fenetre=monpavage.fenetre\n    while (couples.length<this.nb_questions+2&&nombreTentatives<3) { // On cherche d pour avoir suffisamment de couples\n    couples=[] // On vide la liste des couples pour une nouvelle recherche\n    index1=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(Math.floor(monpavage.nb_polygones/3),Math.ceil(monpavage.nb_polygones*2/3)) // On choisit 2 points dans 2 polygones distincts.\n    index2=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(Math.floor(monpavage.nb_polygones/3),Math.ceil(monpavage.nb_polygones*2/3),index1) \n    while (!comparenbsommets(monpavage.polygones[index1],monpavage.polygones[index2])) { // On vérifie que les deux polygones sont compatibles\n      index2=(index2+1)%(monpavage.polygones.length-1)\n    }\n    A=monpavage.barycentres[index1] // On prends  les barycentres\n    B=monpavage.barycentres[index2] \n    v=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(A,B)\n    while (compare2sommets(A,B)){ // On vérifie qu'ils sont bien distincts sinon, on change.\n    index2=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(Math.floor(monpavage.nb_polygones/3),Math.ceil(monpavage.nb_polygones*2/3),index1) \n    while (!comparenbsommets(monpavage.polygones[index1],monpavage.polygones[index2])) { // On vérifie que les deux polygones sont compatibles\n      index2=(index2+1)%(monpavage.polygones.length-1)\n    }\n    A=monpavage.barycentres[index1] // On prends  les barycentres\n    B=monpavage.barycentres[index2] \n    v=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.vecteur)(A,B)\n  }\n    d=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(A,B)\n    d.styleExtremites='->'\n    d.color='red'\n    d.epaisseur=3\n    for (let i=1;i<= monpavage.nb_polygones; i++){ //on crée une liste des couples (antécédents, images)\n      image=translacion(monpavage,v,i)\n      if (image!=-1){ // si l'image du polygone i existe, on ajoute le couple à la liste\n        couples.push([i,image])\n      }\n    }\n    couples=videcouples(couples) //supprime tous les couples en double (x,y)=(y,x)\n    nombreTentatives++ \n    }\n    if (couples.length<this.nb_questions){\n    if (this.sup3==7) {\n      type_de_pavage=(type_de_pavage+1)%5+1\n    }\n    nombrePavageTestes++\n    }\n  }\n  if (couples.length<this.nb_questions){\n    console.log('trop de questions, augmentez la taille du pavage')\n    return\n  }\n\n    objets.push(d) // la droite d est trouvée\n    couples=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)(couples) // on mélange les couples\n    for (let i = 0; i < monpavage.nb_polygones; i++) {\n      objets.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.texteParPosition)((0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nombre_avec_espace)(i + 1), monpavage.barycentres[i].x + 0.5, monpavage.barycentres[i].y, 'milieu', 'gray', 1, 0, true))\n    }\n    if (this.sup2) { // Doit-on montrer les centres des figures ?\n      for (let i = 0; i < monpavage.nb_polygones; i++) {\n        objets.push(monpavage.tracesCentres[i])\n      }\n    }\n    for (let i = 0; i < monpavage.nb_polygones; i++) { // il faut afficher tous les polygones du pavage\n      objets.push(monpavage.polygones[i])\n    }\n    texte = (0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(fenetre, objets) // monpavage.fenetre est calibrée pour faire entrer le pavage dans une feuille A4\n    texte+=`<br>`\n    for (let i=0;i<this.nb_questions;i++){  \n      texte+=`Quel est l'image de la figure $${couples[i][0]}$ dans la translation transformant la figure $${index1+1}$ en la figure $${index2+1}$ ?<br>`\n      texte_corr+=`L'image de la figure $${couples[i][0]}$ dans la translation transformant la figure $${index1+1}$ en la figure $${index2+1}$ est la figure ${couples[i][1]}<br>`\n//      symetriques=associesommets(monpavage.polygones[couples[i][0]-1],monpavage.polygones[couples[i][1]-1],d)\n      if (this.correction_detaillee){\n        A=monpavage.barycentres[couples[i][0]-1]\n        B=monpavage.barycentres[couples[i][1]-1]\n        d=v.representant(A,B)\n        d.color=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i)\n        t=this.nb_questions*3;\n        P1=monpavage.polygones[couples[i][0]-1]\n        P1.color=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i)\n        P1.couleurDeRemplissage=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i)\n        P1.opaciteDeRemplissage=0.5\n        P1.epaisseur=2\n        P2=monpavage.polygones[couples[i][1]-1]\n        P2.color=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i)\n        P2.couleurDeRemplissage=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i)\n        P2.opaciteDeRemplissage=0.5\n        P2.epaisseur=2\n        P3=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.translationAnimee)(P1,v,`begin=\"${i*3}s;${i*3+t}s;${i*3+t*2}s\" end=\"${i*3+2}s;${i*3+t+2}s;${i*3+t*2+2}s\" dur=\"2s\" repeatCount=\"indefinite\" repeatDur=\"${9*this.nb_questions}s\" id=\"poly-${i}-anim\"`)\n        P3.color=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i)\n        P3.epaisseur=2\n        objets_correction.push((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.tracePoint)(A,B),d,(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegment)(A,B,'//',(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texcolors)(i)),P1,P2,P3)\n      }\n    }\n    if (this.correction_detaillee){\n      texte_corr+=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)(fenetre, objets,objets_correction)\n    }\n    this.liste_questions.push(texte);\n    this.liste_corrections.push(texte_corr);\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this)\n  }\n\tthis.besoin_formulaire_numerique = ['Taille du pavage (la grande est automatique au-delà de 5 questions)', 2, '1 : Taille modeste\\n 2 : Grande taille'];\n  this.besoin_formulaire2_case_a_cocher=[\"Montrer les centres\"]\n\tthis.besoin_formulaire3_numerique=['Choix du pavage',8,'1 : Pavage de triangles équilatéraux\\n2 : Pavage de carrés\\n3 : Pavage d\\'hexagones réguliers\\n4 : Pavage 3².4.3.4\\n5 : Pavage 8².4\\n 6 : Pavage de losanges (hexagonal d\\'écolier)\\n7 : Pavage 6.3.6.3\\n8 : Un des sept pavages au hasard']\n}\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/4e/4G11.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);