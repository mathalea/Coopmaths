{"version":3,"file":"js/22627.d170644b050e6444669b.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F12-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, listeQuestionsToContenuSansNumero, randint, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif, pgcd, texFractionReduite, lettreMinusculeDepuisChiffre } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nimport { fraction } from '../../modules/fractions.js'\nexport const titre = 'Compléter un tableau de valeurs'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n/**\n* Déterminer l'image d'un nombre par une fonction d'après sa forme algébrique\n*\n* * Niveau 1 : Fonctions affines\n* * Niveau 2 : Polynôme du second degré\n* * Niveau 3 : Quotients de fonctions affines\n* * Niveau 4 : (ax+b)(cx+d)\n* * Niveau 5 : Mélange\n* @author Rémi Angot\n* 3F12-3\n*/\nexport default function TableauDeValeurs () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 5 // niveau de difficulté\n  this.correctionDetailleeDisponible = true\n\n  this.nouvelleVersion = function () {\n    this.spacing = this.interactif ? 2 : 1\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    this.sup = parseInt(this.sup)\n    let typesDeQuestionsDisponibles = []\n    if (this.sup === 1) {\n      typesDeQuestionsDisponibles = ['ax+b', 'ax']\n    }\n    if (this.sup === 2) {\n      typesDeQuestionsDisponibles = ['ax2+bx+c', 'ax2+c', 'ax2+bx']\n    }\n    if (this.sup === 3) {\n      typesDeQuestionsDisponibles = ['a/cx+d', 'ax+b/cx+d']\n    }\n    if (this.sup === 4) {\n      typesDeQuestionsDisponibles = ['(ax+b)(cx+d)', '(ax+b)2']\n    }\n    if (this.sup === 5) {\n      typesDeQuestionsDisponibles = ['ax+b', 'ax', 'ax2+bx+c', 'ax2+c', 'ax2+bx', 'a/cx+d', 'ax+b/cx+d', '(ax+b)(cx+d)', '(ax+b)2']\n    }\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeDeX = combinaisonListes([[-3, 0, 3], [-2, 0, 2], [1, 2, 5], [-3, 6, 9]], this.nbQuestions)\n    for (let i = 0, texte, texteCorr, reponse = [], a, b, c, d, f, x1, x2, x3, expression, nomdef, ligne2, calculs = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      nomdef = lettreMinusculeDepuisChiffre(6 + i) // on commence par f puis on continue dans l'ordre alphabétique\n      x1 = listeDeX[i][0]\n      x2 = listeDeX[i][1]\n      x3 = listeDeX[i][2]\n      switch (listeTypeDeQuestions[i]) {\n        case 'ax+b':\n          a = randint(-10, 10, [0, -1, 1])\n          b = randint(-10, 10, [0])\n          expression = `${a}x${ecritureAlgebrique(b)}`\n          f = x => a * x + b\n          ligne2 = `${nomdef}(x) & ${a * listeDeX[i][0] + b} & ${a * listeDeX[i][1] + b} & ${a * listeDeX[i][2] + b} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=${a}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(b)}=${a * x1}${ecritureAlgebrique(b)}=${a * x1 + b}$<br>`\n          calculs += `$${nomdef}(${x2})=${a}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(b)}=${a * x2}${ecritureAlgebrique(b)}=${a * x2 + b}$<br>`\n          calculs += `$${nomdef}(${x3})=${a}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(b)}=${a * x3}${ecritureAlgebrique(b)}=${a * x3 + b}$<br>`\n          reponse = [f(x1), f(x2), f(x3)]\n          break\n        case 'ax':\n          a = randint(-10, 10, [0, -1, 1])\n          expression = `${a}x`\n          ligne2 = `${nomdef}(x) & ${a * listeDeX[i][0]} & ${a * listeDeX[i][1]} & ${a * listeDeX[i][2]} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=${a}\\\\times${ecritureParentheseSiNegatif(x1)}=${a * x1}$<br>`\n          calculs += `$${nomdef}(${x2})=${a}\\\\times${ecritureParentheseSiNegatif(x2)}=${a * x2}$<br>`\n          calculs += `$${nomdef}(${x3})=${a}\\\\times${ecritureParentheseSiNegatif(x3)}=${a * x3}$<br>`\n          f = x => a * x\n          reponse = [f(x1), f(x2), f(x3)]\n          break\n        case 'ax2+bx+c':\n          a = randint(-3, 3, [0, -1, 1])\n          b = randint(-5, 5, [0, -1, 1])\n          c = randint(-10, 10, [0])\n          expression = `${a}x^2${ecritureAlgebrique(b)}x${ecritureAlgebrique(c)}`\n          ligne2 = `${nomdef}(x) & ${a * listeDeX[i][0] ** 2 + b * listeDeX[i][0] + c} & ${a * listeDeX[i][1] ** 2 + b * listeDeX[i][1] + c} & ${a * listeDeX[i][2] ** 2 + b * listeDeX[i][2] + c} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=${a}\\\\times${ecritureParentheseSiNegatif(x1)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(c)}=${a}\\\\times${x1 ** 2}${ecritureAlgebrique(b * x1)}${ecritureAlgebrique(c)}=${a * x1 ** 2 + b * x1 + c}$<br>`\n          calculs += `$${nomdef}(${x2})=${a}\\\\times${ecritureParentheseSiNegatif(x2)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(c)}=${a}\\\\times${x2 ** 2}${ecritureAlgebrique(b * x2)}${ecritureAlgebrique(c)}=${a * x2 ** 2 + b * x2 + c}$<br>`\n          calculs += `$${nomdef}(${x3})=${a}\\\\times${ecritureParentheseSiNegatif(x3)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(c)}=${a}\\\\times${x3 ** 2}${ecritureAlgebrique(b * x3)}${ecritureAlgebrique(c)}=${a * x3 ** 2 + b * x3 + c}$<br>`\n          f = x => a * x ** 2 + b * x + c\n          reponse = [f(x1), f(x2), f(x3)]\n          break\n        case 'ax2+c':\n          a = randint(-4, 4, [0, -1, 1])\n          c = randint(-10, 10, [0])\n          expression = `${a}x^2${ecritureAlgebrique(c)}`\n          ligne2 = `${nomdef}(x) & ${a * listeDeX[i][0] ** 2 + c} & ${a * listeDeX[i][1] ** 2 + c} & ${a * listeDeX[i][2] ** 2 + c} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=${a}\\\\times${ecritureParentheseSiNegatif(x1)}^2${ecritureAlgebrique(c)}=${a}\\\\times${x1 ** 2}${ecritureAlgebrique(c)}=${a * x1 ** 2 + c}$<br>`\n          calculs += `$${nomdef}(${x2})=${a}\\\\times${ecritureParentheseSiNegatif(x2)}^2${ecritureAlgebrique(c)}=${a}\\\\times${x2 ** 2}${ecritureAlgebrique(c)}=${a * x2 ** 2 + c}$<br>`\n          calculs += `$${nomdef}(${x3})=${a}\\\\times${ecritureParentheseSiNegatif(x3)}^2${ecritureAlgebrique(c)}=${a}\\\\times${x3 ** 2}${ecritureAlgebrique(c)}=${a * x3 ** 2 + c}$<br>`\n          f = x => a * x ** 2 + c\n          reponse = [f(x1), f(x2), f(x3)]\n          break\n        case 'ax2+bx':\n          a = randint(-3, 3, [0, -1, 1])\n          b = randint(-5, 5, [0, -1, 1])\n          c = randint(-10, 10, [0])\n          expression = `${a}x^2${ecritureAlgebrique(b)}x`\n          ligne2 = `${nomdef}(x) & ${a * listeDeX[i][0] ** 2 + b * listeDeX[i][0]} & ${a * listeDeX[i][1] ** 2 + b * listeDeX[i][1]} & ${a * listeDeX[i][2] ** 2 + b * listeDeX[i][2]} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=${a}\\\\times${ecritureParentheseSiNegatif(x1)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x1)}=${a}\\\\times${x1 ** 2}${ecritureAlgebrique(b * x1)}=${a * x1 ** 2 + b * x1}$<br>`\n          calculs += `$${nomdef}(${x2})=${a}\\\\times${ecritureParentheseSiNegatif(x2)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x2)}=${a}\\\\times${x2 ** 2}${ecritureAlgebrique(b * x2)}=${a * x2 ** 2 + b * x2}$<br>`\n          calculs += `$${nomdef}(${x3})=${a}\\\\times${ecritureParentheseSiNegatif(x3)}^2${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(x3)}=${a}\\\\times${x3 ** 2}${ecritureAlgebrique(b * x3)}=${a * x3 ** 2 + b * x3}$<br>`\n          f = x => a * x ** 2 + b * x\n          reponse = [f(x1), f(x2), f(x3)]\n          break\n        case 'a/cx+d':\n          this.spacingCorr = 3\n          a = randint(-10, 10, [0])\n          c = randint(-10, 10, [0, -1, 1])\n          d = randint(-10, 10, [0])\n          while (c * x1 + d === 0 || c * x2 + d === 0 || c * x3 + d === 0) {\n            c = randint(-10, 10, [0, -1, 1])\n          }\n          expression = `\\\\dfrac{${a}}{${c}x${ecritureAlgebrique(d)}}`\n          ligne2 = `${nomdef}(x) & ${texFractionReduite(a, c * listeDeX[i][0] + d)} & ${texFractionReduite(a, c * listeDeX[i][1] + d)} & ${texFractionReduite(a, c * listeDeX[i][2] + d)} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=\\\\dfrac{${a}}{${c}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a}}{${c * x1}${ecritureAlgebrique(d)}}=${fraction(a, c * x1 + d).texFSD}`\n          if (pgcd(a, c * x1 + d) === 1) {\n            calculs += '$<br>'\n          } else {\n            calculs += '=' + texFractionReduite(a, c * x1 + d) + '$<br>'\n          }\n          calculs += `$${nomdef}(${x2})=\\\\dfrac{${a}}{${c}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a}}{${c * x2}${ecritureAlgebrique(d)}}=${fraction(a, c * x2 + d).texFSD}`\n          if (pgcd(a, c * x2 + d) === 1) {\n            calculs += '$<br>'\n          } else {\n            calculs += '=' + texFractionReduite(a, c * x2 + d) + '$<br>'\n          }\n          calculs += `$${nomdef}(${x3})=\\\\dfrac{${a}}{${c}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a}}{${c * x3}${ecritureAlgebrique(d)}}=${fraction(a, c * x3 + d).texFSD}`\n          if (pgcd(a, c * x3 + d) === 1) {\n            calculs += '$<br>'\n          } else {\n            calculs += '=' + texFractionReduite(a, c * x3 + d) + '$<br>'\n          }\n          f = x => a / (c * x + d)\n          reponse = [fraction(a, c * x1 + d).simplifie(), fraction(a, c * x2 + d).simplifie(), fraction(a, c * x3 + d).simplifie()]\n          break\n        case 'ax+b/cx+d':\n          this.spacingCorr = 3\n          a = randint(-10, 10, [0, 1, -1])\n          b = randint(-10, 10, [0])\n          c = randint(-10, 10, [0, -1, 1])\n          d = randint(-10, 10, [0])\n          while (c * x1 + d === 0 || c * x2 + d === 0 || c * x3 + d === 0) {\n            c = randint(-10, 10, [0, -1, 1])\n          }\n          expression = `\\\\dfrac{${a}x${ecritureAlgebrique(b)}}{${c}x${ecritureAlgebrique(d)}}`\n          ligne2 = `${nomdef}(x) & ${texFractionReduite(a * listeDeX[i][0] + b, c * listeDeX[i][0] + d)} & ${texFractionReduite(a * listeDeX[i][1] + b, c * listeDeX[i][1] + d)} & ${texFractionReduite(a * listeDeX[i][2] + b, c * listeDeX[i][2] + d)} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=\\\\dfrac{${a}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(b)}}{${c}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x1}${ecritureAlgebrique(b)}}{${c * x1}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x1 + b}}{${c * x1 + d}}`\n          if (pgcd(a * x1 + b, c * x1 + d) === 1) {\n            calculs += '$<br>'\n          } else {\n            calculs += '=' + texFractionReduite(a * x1 + b, c * x1 + d) + '$<br>'\n          }\n          calculs += `$${nomdef}(${x2})=\\\\dfrac{${a}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(b)}}{${c}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x2}${ecritureAlgebrique(b)}}{${c * x2}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x2 + b}}{${c * x2 + d}}`\n          if (pgcd(a * x2 + b, c * x2 + d) === 1) {\n            calculs += '$<br>'\n          } else {\n            calculs += '=' + texFractionReduite(a * x2 + b, c * x2 + d) + '$<br>'\n          }\n          calculs += `$${nomdef}(${x3})=\\\\dfrac{${a}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(b)}}{${c}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x3}${ecritureAlgebrique(b)}}{${c * x3}${ecritureAlgebrique(d)}}=\\\\dfrac{${a * x3 + b}}{${c * x3 + d}}`\n          if (pgcd(a * x3 + b, c * x3 + d) === 1) {\n            calculs += '$<br>'\n          } else {\n            calculs += '=' + texFractionReduite(a * x3 + b, c * x3 + d) + '$<br>'\n          }\n          f = x => (a * x + b) / (c * x + d)\n          reponse = [fraction(a * x1 + b, c * x1 + d).simplifie(), fraction(a * x2 + b, c * x2 + d).simplifie(), fraction(a * x3 + b, c * x3 + d).simplifie()]\n          break\n        case '(ax+b)(cx+d)':\n          a = randint(-5, 5, [0, 1, -1])\n          b = randint(-5, 5, [0])\n          c = randint(-3, 3, [0, -1, 1])\n          d = randint(-3, 3, [0])\n          if (a < 0 && b < 0 && c < 0 && d < 0) {\n            d = randint(1, 3)\n          }\n          expression = `(${a}x${ecritureAlgebrique(b)})(${c}x${ecritureAlgebrique(d)})`\n          ligne2 = `${nomdef}(x) & ${(a * listeDeX[i][0] + b) * (c * listeDeX[i][0] + d)} & ${(a * listeDeX[i][1] + b) * (c * listeDeX[i][1] + d)} & ${(a * listeDeX[i][2] + b) * (c * listeDeX[i][2] + d)} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${c}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(d)}\\\\right)=(${a * x1}${ecritureAlgebrique(b)})(${c * x1}${ecritureAlgebrique(d)})=${a * x1 + b}\\\\times ${ecritureParentheseSiNegatif(c * x1 + d)}=${(a * x1 + b) * (c * x1 + d)}$<br>`\n          calculs += `$${nomdef}(${x2})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${c}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(d)}\\\\right)=(${a * x2}${ecritureAlgebrique(b)})(${c * x2}${ecritureAlgebrique(d)})=${a * x2 + b}\\\\times ${ecritureParentheseSiNegatif(c * x2 + d)}=${(a * x2 + b) * (c * x2 + d)}$<br>`\n          calculs += `$${nomdef}(${x3})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(b)}\\\\right)\\\\left(${c}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(d)}\\\\right)=(${a * x3}${ecritureAlgebrique(b)})(${c * x3}${ecritureAlgebrique(d)})=${a * x3 + b}\\\\times ${ecritureParentheseSiNegatif(c * x3 + d)}=${(a * x3 + b) * (c * x3 + d)}$<br>`\n          f = x => (a * x + b) * (c * x + d)\n          reponse = [f(x1), f(x2), f(x3)]\n          break\n        case '(ax+b)2':\n          a = randint(-3, 3, [0, 1, -1])\n          b = randint(-3, 3, [0])\n          expression = `(${a}x${ecritureAlgebrique(b)})^2`\n          ligne2 = `${nomdef}(x) & ${(a * listeDeX[i][0] + b) ** 2} & ${(a * listeDeX[i][1] + b) ** 2} & ${(a * listeDeX[i][2] + b) ** 2} \\\\\\\\\\n`\n          calculs = `$${nomdef}(${x1})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x1)}${ecritureAlgebrique(b)}\\\\right)^2=(${a * x1}${ecritureAlgebrique(b)})^2=${ecritureParentheseSiNegatif(a * x1 + b)}^2=${(a * x1 + b) ** 2}$<br>`\n          calculs += `$${nomdef}(${x2})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x2)}${ecritureAlgebrique(b)}\\\\right)^2=(${a * x2}${ecritureAlgebrique(b)})^2=${ecritureParentheseSiNegatif(a * x2 + b)}^2=${(a * x2 + b) ** 2}$<br>`\n          calculs += `$${nomdef}(${x3})=\\\\left(${a}\\\\times${ecritureParentheseSiNegatif(x3)}${ecritureAlgebrique(b)}\\\\right)^2=(${a * x3}${ecritureAlgebrique(b)})^2=${ecritureParentheseSiNegatif(a * x3 + b)}^2=${(a * x3 + b) ** 2}$<br>`\n          f = x => (a * x + b) ** 2\n          reponse = [f(x1), f(x2), f(x3)]\n          break\n      }\n\n      texte = `On considère la fonction $${nomdef}$ définie par $${nomdef}:x\\\\mapsto ${expression}$. ${this.interactif ? '<br>Calculer les images par $f$ suivantes.' : '<br>Compléter le tableau de valeurs suivant.<br><br>'}`\n      texteCorr = ''\n      // texte += '<br>'\n      if (context.isHtml) {\n        if (!this.interactif) texte += '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|c|}\\n'\n      } else {\n        texte += '$\\\\begin{array}{|l|c|c|c|}\\n'\n      }\n      if (!this.interactif || !context.isHtml) {\n        texte += '\\\\hline\\n'\n        texte += `x & ${listeDeX[i][0]} & ${listeDeX[i][1]} & ${listeDeX[i][2]} \\\\\\\\\\n`\n        texte += '\\\\hline\\n'\n        texte += `${nomdef}(x) & \\\\phantom{-10} & \\\\phantom{-10} & \\\\phantom{-10} \\\\\\\\\\n`\n        texte += '\\\\hline\\n'\n        texte += '\\\\end{array}\\n$'\n      }\n      if (context.isHtml) {\n        if (!this.interactif) texteCorr = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|c|}\\n'\n      } else {\n        texteCorr = '$\\\\begin{array}{|l|c|c|c|}\\n'\n      }\n      if (context.isAmc) {\n        this.autoCorrection[i] = {\n          enonce: `On considère la fonction $${nomdef}$ définie par $${nomdef}:x\\\\mapsto ${expression}$.\\\\\\\\ \\n\n          Calculer :\\\\\\\\ \\na) $f(${listeDeX[i][0]})$\\\\\\\\ \\nb) $f(${listeDeX[i][1]})$\\\\\\\\ \\nc) $f(${listeDeX[i][2]})$\\\\\\\\ \\n\n          Utiliser le cadre pour les calculs si besoin puis coder les réponses.\\\\\\\\`,\n          propositions: [\n            {\n              type: 'AMCOpen',\n              propositions: [{\n                texte: '',\n                statut: 4\n              }\n              ]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: calculs.split('<br>')[0],\n                statut: '',\n                reponse: {\n                  texte: `a) $f(${listeDeX[i][0]})$`,\n                  valeur: [reponse[0].type !== 'Fraction' ? reponse[0] : reponse[0].d === 1 ? reponse[0].num : reponse[0]],\n                  param: {\n                    signe: true,\n                    approx: 0,\n                    decimals: 1,\n                    digits: 2,\n                    formatInteractif: reponse[0].type !== 'Fraction' ? 'calcul' : reponse[0].d === 1 ? 'calcul' : 'fractionEgale'\n                  }\n                }\n              }]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: calculs.split('<br>')[1],\n                statut: '',\n                reponse: {\n                  texte: `b) $f(${listeDeX[i][1]})$`,\n                  valeur: [reponse[1].type !== 'Fraction' ? reponse[1] : reponse[1].d === 1 ? reponse[1].num : reponse[1]],\n                  param: {\n                    signe: true,\n                    approx: 0,\n                    decimals: 1,\n                    digits: 2,\n                    formatInteractif: reponse[1].type !== 'Fraction' ? 'calcul' : reponse[1].d === 1 ? 'calcul' : 'fractionEgale'\n                  }\n                }\n              }]\n            },\n            {\n              type: 'AMCNum',\n              propositions: [{\n                texte: calculs.split('<br>')[2],\n                statut: '',\n                reponse: {\n                  texte: `c) $f(${listeDeX[i][2]})$`,\n                  valeur: [reponse[2].type !== 'Fraction' ? reponse[2] : reponse[2].d === 1 ? reponse[2].num : reponse[2]],\n                  param: {\n                    signe: true,\n                    approx: 0,\n                    decimals: 1,\n                    digits: 2,\n                    formatInteractif: reponse[2].type !== 'Fraction' ? 'calcul' : reponse[2].d === 1 ? 'calcul' : 'fractionEgale'\n                  }\n                }\n              }]\n            }\n          ]\n        }\n        if (reponse[0].type === 'Fraction') {\n          if (reponse[0].den === 1) setReponse(this, i * 3, reponse[0].num, { formatInteractif: 'calcul' })\n          else setReponse(this, i * 3, reponse[0], { formatInteractif: 'fractionEgale' })\n        } else setReponse(this, i * 3, reponse[0], { formatInteractif: 'calcul' })\n        if (reponse[1].type === 'Fraction') {\n          if (reponse[1].den === 1) setReponse(this, i * 3 + 1, reponse[1].num, { formatInteractif: 'calcul' })\n          else setReponse(this, i * 3 + 1, reponse[1], { formatInteractif: 'fractionEgale' })\n        } else setReponse(this, i * 3 + 1, reponse[1], { formatInteractif: 'calcul' })\n        if (reponse[2].type === 'Fraction') {\n          if (reponse[2].den === 1) setReponse(this, i * 3 + 2, reponse[2].num, { formatInteractif: 'calcul' })\n          else setReponse(this, i * 3 + 2, reponse[2], { formatInteractif: 'fractionEgale' })\n        } else setReponse(this, i * 3 + 2, reponse[2], { formatInteractif: 'calcul' })\n      } else if (this.interactif) {\n        texte += `<br><br>$f(${listeDeX[i][0]}) = $` + ajouteChampTexteMathLive(this, i * 3, 'largeur25 inline')\n        texte += `<br><br>$f(${listeDeX[i][1]}) = $` + ajouteChampTexteMathLive(this, i * 3 + 1, 'largeur25 inline')\n        texte += `<br><br>$f(${listeDeX[i][2]}) = $` + ajouteChampTexteMathLive(this, i * 3 + 2, 'largeur25 inline')\n        if (reponse[0].type === 'Fraction') {\n          if (reponse[0].den === 1) setReponse(this, i * 3, reponse[0].num, { formatInteractif: 'calcul' })\n          else setReponse(this, i * 3, reponse[0], { formatInteractif: 'fractionEgale' })\n        } else setReponse(this, i * 3, reponse[0], { formatInteractif: 'calcul' })\n        if (reponse[1].type === 'Fraction') {\n          if (reponse[1].den === 1) setReponse(this, i * 3 + 1, reponse[1].num, { formatInteractif: 'calcul' })\n          else setReponse(this, i * 3 + 1, reponse[1], { formatInteractif: 'fractionEgale' })\n        } else setReponse(this, i * 3 + 1, reponse[1], { formatInteractif: 'calcul' })\n        if (reponse[2].type === 'Fraction') {\n          if (reponse[2].den === 1) setReponse(this, i * 3 + 2, reponse[2].num, { formatInteractif: 'calcul' })\n          else setReponse(this, i * 3 + 2, reponse[2], { formatInteractif: 'fractionEgale' })\n        } else setReponse(this, i * 3 + 2, reponse[2], { formatInteractif: 'calcul' })\n      }\n\n      texteCorr += '\\\\hline\\n'\n      texteCorr += `x & ${listeDeX[i][0]} & ${listeDeX[i][1]} & ${listeDeX[i][2]} \\\\\\\\\\n`\n      texteCorr += '\\\\hline\\n'\n      texteCorr += ligne2\n      texteCorr += '\\\\hline\\n'\n      texteCorr += '\\\\end{array}\\n$'\n      if (this.correctionDetaillee) {\n        texteCorr += '<br><br>'\n        texteCorr += calculs\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    this.nbQuestions === 1 ? listeQuestionsToContenuSansNumero(this) : listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 5, '1 : Fonctions affines\\n2 : Polynome du second degré\\n3 : Quotient\\n4 : Produit \\n5 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","TableauDeValeurs","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","correctionDetailleeDisponible","nouvelleVersion","spacing","interactif","listeQuestions","listeCorrections","autoCorrection","parseInt","typesDeQuestionsDisponibles","listeTypeDeQuestions","combinaisonListes","listeDeX","texte","texteCorr","a","b","c","d","f","x1","x2","x3","expression","nomdef","ligne2","i","reponse","calculs","cpt","lettreMinusculeDepuisChiffre","randint","ecritureAlgebrique","x","ecritureParentheseSiNegatif","spacingCorr","texFractionReduite","fraction","texFSD","pgcd","simplifie","context","enonce","propositions","type","statut","split","valeur","num","param","signe","approx","decimals","digits","formatInteractif","den","setReponse","ajouteChampTexteMathLive","correctionDetaillee","indexOf","push","listeQuestionsToContenuSansNumero","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}