{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6P11-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Proportionnalite_par_linearite_bis","type_de_questions_disponibles","Exercice","this","beta","nbQuestions","consigne","sortieHtml","spacing","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","i","cpt","pluriel","n","obj","achat_plur","achat_sing","n1","n2","n3","n4","n_max","temp","k","k_corr","randint","p","calcul","situations","lieu","prenom1","prenom","prenom2","prenom3","prenom4","prenom_max","pu","enonces","situation","length","push","enonce","tex_prix","numAlpha","question","correction","texte_en_couleur","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/3012.73796ad8cd5913aa2315.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,combinaisonListes,calcul,prenom,texte_en_couleur,tex_prix,numAlpha} from '../../modules/outils.js'\nexport const titre = 'Résoudre un problème relevant de la proportionnalité avec les propriétés de linéarité.'\n\n/**\n * Produire une forme littérale en introduisant une lettre pour désigner une valeur inconnue\n * * 6P11-1\n * @author Sébastien Lozano\n */\nexport default function Proportionnalite_par_linearite_bis() {\n  'use strict';\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.beta = false;\n  if (this.beta) {\n    this.nbQuestions = 3;\n  } else {\n    this.nbQuestions = 1;\n  };\n\n  this.titre = titre;\n  this.consigne = \"\";\n  sortieHtml ? this.spacing = 2 : this.spacing = 1;\n\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  //this.nbQuestionsModifiable = false;\n  //sortieHtml? this.spacing = 3 : this.spacing = 2; \n  //sortieHtml? this.spacingCorr = 3 : this.spacingCorr = 2;\n\n  let type_de_questions_disponibles;\n\n  this.nouvelleVersion = function () {\n    if (this.beta) {\n      type_de_questions_disponibles = [1];\n    } else {\n      type_de_questions_disponibles = [1];\n    };\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    type_de_questions_disponibles = [1];\n    let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles, this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    //let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(type_de_questions_disponibles,this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\n      // une fonction pour gérer le pluriel \n      function pluriel(n, obj) {\n        if (n > 1) {\n          return obj.achat_plur\n        } else {\n          return obj.achat_sing\n        };\n      };\n\n      // une fonction pour gérer la chaine de sortie et supprimer le coeff 1 !\n;\n\n      //une fonction pour calculer la différence positive entre deux entiers\n      function diffInt(n, p) {\n        if (n > p) {\n          return calcul(n - p);\n        } else if (n < p) {\n          return calcul(p - n);\n        } else {\n          return 0;\n        }\n      };\n\n      // un compteur pour les sous-questions\n      let k = 0;\n      let k_corr = 0;\n      // on crée un tableau d'objets pour les situations possibles\n      let n1, n2, n3, n4, n_max;\n      do {\n        n1 = randint(1, 9);\n        n2 = randint(1, 9, [n1]);\n        n3 = n1 + n2;\n        n4 = diffInt(n1, n2);\n        n_max = randint(10, 19, [n3]);\n      } while (n4 == 1);\n      //n1 sera toujours le plus grand sinon on intervertit les deux\n      let temp;\n      if (n1 < n2) {\n        temp = n1;\n        n1 = n2;\n        n2 = temp;\n      };\n      let situations = [\n        { lieu: `la boulangerie`, achat_sing: `pain au chocolat`, achat_plur: `pains au chocolat`, prenom1: prenom(), prenom2: prenom(), prenom3: prenom(), prenom4: prenom(), prenom_max: prenom(), n1: n1, n2: n2, n3: n3, n4: n4, n_max: n_max, pu: 0.9 }\n      ]\n      let enonces = [];\n      let situation = situations[randint(0, situations.length - 1)];\n\n      enonces.push({\n        enonce: `\n          À ${situation.lieu}, ${situation.prenom1} achète $${situation.n1}$ ${pluriel(situation.n1, situation)} et paie $${tex_prix(situation.pu * situation.n1)}$ €.\n          <br>${situation.prenom2} achète $${situation.n2}$ ${pluriel(situation.n2, situation)} et paie $${tex_prix(situation.pu * situation.n2)}$ €.\n          <br>\n          <br>${numAlpha(k++)} Combien paiera ${situation.prenom3} pour $${situation.n3}$ ${pluriel(situation.n3, situation)} ?\n          <br>${numAlpha(k++)} Combien paiera ${situation.prenom4} pour $${situation.n4}$ ${pluriel(situation.n4, situation)} ?\n          <br>${numAlpha(k++)} Quel est le nombre maximum de ${situation.achat_plur} que ${situation.prenom_max} peut acheter avec $${tex_prix(situation.pu * situation.n_max)}$ € ?\n          `,\n        question: ``,\n        correction: `\n        C'est une situation de proportionnalité. Nous pouvons donc utiliser les propriétés de linéarité de la proportionnalité.\n        <br>C'est ce que nous allons faire pour les deux premières questions.\n        <br>\n        <br>${numAlpha(k_corr++)} Pour $${situation.n1}$ ${pluriel(situation.n1, situation)}, on paie $${tex_prix(situation.pu * situation.n1)}$ €.\n        <br> Pour $${situation.n2}$ ${pluriel(situation.n2, situation)}, on paie $${tex_prix(situation.pu * situation.n2)}$ €.\n        <br> Donc pour $${situation.n1}+${situation.n2}$ ${pluriel(situation.n3, situation)}, on paie $${tex_prix(situation.pu * situation.n1)}$ € + $${tex_prix(situation.pu * situation.n2)}$ €.\n        <br> ${texte_en_couleur(`${situation.prenom3} paiera donc $${tex_prix(situation.pu * situation.n3)}$ € pour $${situation.n3}$ ${pluriel(situation.n3, situation)}.`)}\n        <br>\n        <br>${numAlpha(k_corr++)} Pour $${situation.n1}$ ${pluriel(situation.n1, situation)}, on paie $${tex_prix(situation.pu * situation.n1)}$ €.\n        <br> Pour $${situation.n2}$ ${pluriel(situation.n2, situation)}, on paie $${tex_prix(situation.pu * situation.n2)}$ €.\n        <br> Donc pour $${situation.n1}-${situation.n2}$ ${pluriel(situation.n4, situation)}, on paie $${tex_prix(situation.pu * situation.n1)}$ € - $${tex_prix(situation.pu * situation.n2)}$ €.\n        <br> ${texte_en_couleur(`${situation.prenom4} paiera donc $${tex_prix(situation.pu * situation.n4)}$ € pour $${situation.n4}$ ${pluriel(situation.n4, situation)}.`)}\n        <br>\n        <br>${numAlpha(k_corr++)} On peut utiliser l'une ou l'autre des informations de l'énoncé pour répondre en revenant à l'unité.\n        <br> Par exemple pour $${situation.n1}$ ${pluriel(situation.n1, situation)}, on paie $${tex_prix(situation.pu * situation.n1)}$ €.\n        <br> Donc $1$ ${situation.achat_sing} coûte $${tex_prix(situation.pu * situation.n1)}\\\\div ${situation.n1} = ${tex_prix(situation.pu)}$ €.\n        <br> Pour $${tex_prix(situation.pu * situation.n_max)}$ € nous aurons donc $${tex_prix(situation.pu * situation.n_max)}\\\\div ${tex_prix(situation.pu)}$ € $= ${situation.n_max}$ ${pluriel(situation.n_max, situation)}.\n        <br> ${texte_en_couleur(`Avec $${tex_prix(situation.pu * situation.n_max)}$ €, ${situation.prenom_max} pourra donc acheter $${situation.n_max}$ ${pluriel(situation.n_max, situation)}.`)}\n        `\n      })\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte = `${enonces[0].enonce}`;\n          if (this.beta) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n            texteCorr = ``;\n          } else {\n            texteCorr = `${enonces[0].correction}`;\n          };\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  }\n}\n\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}