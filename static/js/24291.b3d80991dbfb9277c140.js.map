{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N23-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","LireUneAbscisseAvecZoom","Exercice","this","niveau","sup","consigne","context","spacing","spacingCorr","vspace","nbCols","nbColsCorr","nbQuestions","nbQuestionsModifiable","nouvelleVersion","d1","d2","d3","d3Corr","d1Corr","d2Corr","listeQuestions","listeCorrections","extremite","extreme","texte","texteCorr","noms","choisitLettresDifferentes","x1","x2","x3","objets","fenetre","thickOff","objetsCorr","xmin","xmax","origine","pA1","pA2","pB1","pB2","sA","sB","x21","x31","pC1","pC2","pD1","pD2","sC","sD","parseInt","randint","Math","round","calcul","droiteGraduee2","x","y","Min","axePosition","Max","thickSec","thickTer","Unite","thickOffset","thickCouleur","axeCouleur","axeHauteur","labelsPrincipaux","labelListe","texNombre","pointListe","floor","pointTaille","pointOpacite","pointCouleur","pointStyle","pointEpaisseur","axeStyle","labelsSecondaires","ceil","point","segment","pointilles","push","ymin","ymax","pixelsParCm","scale","texFraction","thickDistance","thickSecDist","thickTerDist","partent","pardec","troncature","mathalea2d","listeQuestionsToContenuSansNumero","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"sMAIO,MAAMA,EAAQ,0DAKN,SAASC,IACtBC,eAAcC,MACdA,KAAKC,OAAS,UACdD,KAAKE,IAAM,EACXF,KAAKG,SAAW,GACZC,aACFJ,KAAKK,QAAU,EACfL,KAAKM,YAAc,IAEnBN,KAAKK,QAAU,EACfL,KAAKM,YAAc,GAErBN,KAAKO,QAAU,EACfP,KAAKQ,OAAS,EACdR,KAAKS,WAAa,EAClBT,KAAKE,IAAM,EACXF,KAAKU,YAAc,EACnBV,KAAKW,uBAAwB,EAE7BX,KAAKY,gBAAkB,WAIrB,IAAIC,EAAQC,EAAQC,EAAQC,EAAYC,EAAYC,EAHpDlB,KAAKmB,eAAiB,GACtBnB,KAAKoB,iBAAmB,GAEoC,IAAwCC,EAAeC,EAAnDC,EAAQ,GAAQC,EAAY,GAAgC,MAAMC,GAAOC,SAA0B,EAAG,OACtK,IAAIC,EAAK,EAAOC,EAAK,EAAOC,EAAK,EAAG,MAAMC,EAAS,GAAI,IAAIC,EAAaC,EAAW,EAAG,MAAMC,EAAa,GAAI,IAAIC,EAAUC,EAAUC,EAAaC,EAASC,EAASC,EAASC,EAASC,EAAQC,EAAQC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAAQC,EACpQ,GAA2B,IAAvBC,SAASnD,KAAKE,KACI,OAAhBF,KAAKC,QACPiC,EAAO,EACPF,EAAW,EACXI,EAAU,EACVd,EAAU,EACVa,EAAO,IAEPD,GAAOkB,SAAQ,EAAG,IAAM,GACxBhB,EAAUiB,KAAKC,MAAMpB,EAAO,IAC5BZ,GAAUiC,SAAOnB,EAAU,GAC3BJ,EAAW,GACXG,EAAOC,EAAU,KAEnBT,GAAK4B,SAAOrB,EAAO,IAAMkB,SAAQ,EAAG,IAAKA,SAAQ,EAAG,GAAK,IAGzC/B,EAAH,IAATa,EAAwB,MACX,KAEjBrB,GAAK2C,SAAe,CAClBC,EAAG,EACHC,EAAG,EACHC,IAAKzB,EACL0B,YAAa,IACbC,IAAK1B,EAAO,GACZ2B,UAAU,EACVC,UAAU,EACVC,MAAO,EACPC,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBC,WAAY,CAAC,CAAClC,EAAU,IAAEmC,SAAUnC,MAAa,CAACd,EAAU,IAAEiD,SAAUjD,OACxEkD,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAAC4B,KAAKoB,MAAM9C,GAAM,GAAEF,EAAK,MAAO,CAAC4B,KAAKoB,MAAM9C,EAAK,GAAK,GAAEF,EAAK,OAC9FiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZP,GAAK0C,SAAe,CAClBC,EAAGJ,KAAKoB,MAAM9C,GAAMO,EAAO,IAC3BwB,EAAG,EACHC,IAAKN,KAAKoB,MAAM9C,GAChBiC,YAAa,IACbC,IAAKR,KAAKoB,MAAM9C,EAAK,GACrBmC,UAAU,EACVC,UAAU,EACVC,MAAO,GACPC,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBG,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAAC4B,KAAKoB,MAAM9C,GAAM,GAAEF,EAAK,MAAO,CAAC4B,KAAKoB,MAAM9C,EAAK,GAAK,GAAEF,EAAK,OAC9FiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZJ,GAASuC,SAAe,CACtBC,EAAG,EACHC,EAAG,EACHC,IAAKzB,EACL0B,YAAa,IACbC,IAAK1B,EAAO,GACZ2B,UAAU,EACVC,UAAU,EACVC,MAAO,EACPC,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBC,WAAY,CAAC,CAAClC,EAAU,IAAEmC,SAAUnC,MAAa,CAACd,EAAU,IAAEiD,SAAUjD,OACxEkD,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAAC4B,KAAKoB,MAAM9C,GAAM,GAAEF,EAAK,MAAO,CAAC4B,KAAKoB,MAAM9C,EAAK,GAAK,GAAEF,EAAK,OAC9FiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZH,GAASsC,SAAe,CACtBC,EAAGJ,KAAKoB,MAAM9C,GAAMO,EAAO,IAC3BwB,EAAG,EACHC,IAAKN,KAAKoB,MAAM9C,GAChBiC,YAAa,IACbC,IAAKR,KAAKoB,MAAM9C,EAAK,GACrBmC,UAAU,EACVC,UAAU,EACVC,MAAO,GACPC,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBW,mBAAmB,EACnBV,WAAY,CAAC,CAACjB,KAAKoB,MAAM9C,GAAM,IAAE4C,SAAUlB,KAAKoB,MAAM9C,OAAS,CAACA,EAAK,IAAE4C,SAAU5C,MAAQ,CAAC0B,KAAK4B,KAAKtD,GAAM,IAAE4C,SAAUlB,KAAK4B,KAAKtD,QAChI6C,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAAC4B,KAAKoB,MAAM9C,GAAM,GAAEF,EAAK,MAAO,CAAC4B,KAAKoB,MAAM9C,EAAK,GAAK,GAAEF,EAAK,OAC9FiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAGZgB,GAAM6C,SAAgC,GAAzB7B,KAAKoB,MAAM9C,GAAMO,GAAW,GACzCI,GAAM4C,SAAM7B,KAAKoB,MAAM9C,GAAMO,EAAO,IAAK,GACzCK,GAAM2C,SAAoC,GAA7B7B,KAAKoB,MAAM9C,GAAM,EAAIO,GAAW,GAC7CM,GAAM0C,SAAM7B,KAAKoB,MAAM9C,GAAMO,EAAO,KAAM,GAC1CO,GAAK0C,SAAQ9C,EAAKC,GAClBI,GAAKyC,SAAQ5C,EAAKC,GAClBC,EAAG2C,YAAa,EAChB1C,EAAG0C,YAAa,EAChBtD,EAAOuD,KAAKxE,EAAIC,EAAI2B,EAAIC,GACxBT,EAAWoD,KAAKpE,EAAQC,EAAQuB,EAAIC,GACpCX,EAAU,CAAEG,MAAO,IAAKC,KAAM,GAAImD,MAAO,EAAGC,KAAM,IAAKC,YAAa,GAAIC,MAAO,IAC/EjE,EAAa,iBAAgBC,EAAK,cAAa8C,SAAU5C,OAAO4C,SAAUlB,KAAKoB,MAAM9C,UAAU+D,UAAYnC,SAAO,IAAM5B,EAAK0B,KAAKoB,MAAM9C,KAAO,QAAO+D,UAAYnC,SAAY,GAAL5B,GAAU,iBAC9K,GAA2B,IAAvBwB,SAASnD,KAAKE,KAAY,CACf,OAAhBF,KAAKC,QACPiC,EAAO,EACPF,EAAW,IAEXE,GAAOkB,SAAQ,EAAG,IAAM,IACxBpB,EAAW,KAGbG,EAAOD,EAAO,KACdP,GAAK4B,SAAOrB,EAAO,KAAOkB,SAAQ,EAAG,GAAK,IAAKA,SAAQ,EAAG,GAAK,KAC/DxB,GAAK2B,SAAOF,KAAKoB,MAAW,GAAL9C,GAAW,IAClCE,GAAK0B,SAAO3B,EAAK,IAGDP,EAAH,IAATa,EAAwB,MACX,KACjBrB,GAAK2C,SAAe,CAClBC,EAAG,EACHC,EAAG,EACHC,IAAKzB,EACL0B,YAAa,IACbC,IAAK1B,EACL2B,UAAU,EACVC,UAAU,EACVC,MAAO,GACPC,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZuB,cAAe,EACfC,aAAc,GACdC,aAAc,IACdxB,kBAAkB,EAClBC,WAAY,CAAC,CAACjB,KAAKoB,MAAM9C,GAAM,GAAE0B,KAAKoB,MAAM9C,MAAQ,CAAC0B,KAAK4B,KAAKtD,GAAM,GAAE0B,KAAK4B,KAAKtD,OACjF6C,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAACG,EAAK,GAAEH,EAAK,MAAO,CAACI,EAAK,GAAEJ,EAAK,OAClEiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZP,GAAK0C,SAAe,CAClBC,EAAI7B,EAAKM,EAAQ,EACjBwB,EAAG,EACHC,IAAK/B,EACLgC,YAAa,IACbC,IAAKjC,EAAK,GACVkC,UAAU,EACVC,UAAU,EACVC,MAAO,IACPC,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZuB,cAAe,GACfC,aAAc,IACdC,aAAc,KACdxB,kBAAkB,EAClBG,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAACG,EAAK,GAAEH,EAAK,MAAO,CAACG,EAAK,GAAM,GAAEH,EAAK,OACxEiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZJ,GAASuC,SAAe,CACtBC,EAAG,EACHC,EAAG,EACHC,IAAKzB,EACL0B,YAAa,IACbC,IAAK1B,EACL2B,UAAU,EACVC,UAAU,EACVC,MAAO,GACPC,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZuB,cAAe,EACfC,aAAc,GACdC,aAAc,IACdb,mBAAmB,EACnBV,WAAY,CAAC,CAACjB,KAAKoB,MAAM9C,GAAM,GAAE0B,KAAKoB,MAAM9C,MAAQ,CAAC0B,KAAK4B,KAAKtD,GAAM,GAAE0B,KAAK4B,KAAKtD,OACjF6C,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAACG,EAAK,GAAEH,EAAK,MAAO,CAACI,EAAK,GAAEJ,EAAK,OAClEiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZH,GAASsC,SAAe,CACtBC,EAAI7B,EAAKM,EAAQ,EACjBwB,EAAG,EACHC,IAAK/B,EACLgC,YAAa,IACbC,IAAKjC,EAAK,GACVkC,UAAU,EACVC,UAAU,EACVC,MAAO,IACPC,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZuB,cAAe,GACfC,aAAc,IACdC,aAAc,KACdxB,kBAAkB,EAClBW,mBAAmB,EACnBV,WAAY,CAAC,CAAC1C,EAAK,KAAE2C,SAAU3C,GAAM,MAAQ,CAACD,EAAK,IAAE4C,SAAU5C,MAAQ,CAACE,EAAK,KAAE0C,SAAU1C,GAAM,OAC/F2C,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAACG,EAAK,GAAEH,EAAK,MAAO,CAACG,EAAK,GAAM,GAAEH,EAAK,OACxEiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAGZgB,GAAM6C,SAA0C,IAAnC7B,KAAKoB,MAAW,GAAL9C,GAAW,GAAKO,GAAY,GACpDI,GAAM4C,SAAMtD,EAAKM,EAAO,EAAG,GAC3BK,GAAM2C,SAAgD,IAAzC7B,KAAKoB,MAAW,GAAL9C,GAAW,GAAK,GAAMO,GAAY,GAC1DM,GAAM0C,SAAMrD,EAAKK,EAAO,GAAI,GAC5BO,GAAK0C,SAAQ9C,EAAKC,GAClBI,GAAKyC,SAAQ5C,EAAKC,GAClBC,EAAG2C,YAAa,EAChB1C,EAAG0C,YAAa,EAChBrD,EAAU,CAAEG,MAAO,IAAKC,KAAM,GAAImD,MAAO,IAAKC,KAAM,IAAKC,YAAa,GAAIC,MAAO,IACjF3D,EAAOuD,KAAKxE,EAAIC,EAAI2B,EAAIC,GACxBT,EAAWoD,KAAKpE,EAAQC,EAAQuB,EAAIC,GACpC,MAAMoD,EAAUzC,KAAKoB,MAAM9C,GAAWoE,GAASxC,SAAO5B,EAAKmE,GAC3DtE,EAAa,iBAAgBC,EAAK,cAAa8C,SAAU5C,OAAO4C,SAAUuB,SAAcJ,UAAYnC,SAAgB,IAATwC,GAAe,SAAQL,UAAYnC,SAAY,IAAL5B,GAAW,kBAC3J,GAA2B,IAAvBwB,SAASnD,KAAKE,KAAY,CACf,OAAhBF,KAAKC,QACPiC,EAAO,EACPC,EAAO,EACPH,EAAW,EACXL,GAAK4B,SAAOrB,GAAOkB,SAAQ,EAAG,GAAK,IAAKA,SAAQ,EAAG,GAAK,IAAsB,MAAhBA,SAAQ,EAAG,IACzExB,GAAKoE,SAAWrE,EAAI,GACpBgB,GAAMqD,SAAWrE,EAAI,GACrBE,GAAK0B,SAAO3B,EAAK,IACjBgB,GAAMW,SAAOZ,EAAM,OAEnBT,GAAOkB,SAAQ,EAAG,IAClBjB,EAAOD,EAAO,EACdP,GAAK4B,SAAOrB,GAAOkB,SAAQ,EAAG,GAAK,IAAKA,SAAQ,EAAG,GAAK,IAAsB,MAAhBA,SAAQ,EAAG,IACzExB,GAAKoE,SAAWrE,EAAI,GACpBgB,GAAMqD,SAAWrE,EAAI,GACrBE,GAAK0B,SAAO3B,EAAK,IACjBgB,GAAMW,SAAOZ,EAAM,KACnBT,EAAOmB,KAAKoB,MAAM7C,GAClBO,EAAOD,EAAO,EACdF,EAAW,MAEGX,EAAH,IAATa,EAAwB,MACX,KACjBrB,GAAK2C,SAAe,CAClBC,EAAG,EACHC,EAAG,EACHC,IAAKzB,EACL0B,YAAa,IACbC,IAAK1B,EACL2B,UAAU,EACVC,UAAU,EACVC,MAAO,GACP2B,cAAe,EACfC,aAAc,GACdC,aAAc,IACd5B,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBC,WAAY,CAAC,CAACpC,EAAO,IAAEqC,SAAUrC,MAAU,CAACC,EAAO,IAAEoC,SAAUpC,OAC/DqC,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAACG,EAAK,GAAEH,EAAK,MAAO,CAACI,EAAK,GAAEJ,EAAK,OAClEiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZP,GAAK0C,SAAe,CAClBC,EAAG,IACHC,EAAG,EACHC,IAAK/B,EACLgC,YAAa,IACbC,IAAKhC,EACLiC,UAAU,EACVC,UAAU,EACVC,MAAO,IACP4B,aAAc,IACdC,aAAc,KACdF,cAAe,GACf1B,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBG,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAACG,EAAK,GAAEH,EAAK,MAAO,CAACI,EAAK,GAAEJ,EAAK,MAAO,CAACkB,EAAM,GAAElB,EAAK,MAAO,CAACmB,EAAM,GAAEnB,EAAK,OAC5GiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZN,GAAKyC,SAAe,CAClBC,EAAG,IACHC,EAAG,EACHC,IAAKhB,EACLiB,YAAa,IACbC,IAAKjB,EACLkB,UAAU,EACVC,UAAU,EACVC,MAAO,IACP4B,aAAc,KACd3B,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBG,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAACkB,EAAM,GAAElB,EAAK,MAAO,CAACmB,EAAM,GAAEnB,EAAK,OACpEiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZJ,GAASuC,SAAe,CACtBC,EAAG,EACHC,EAAG,EACHC,IAAKzB,EACL0B,YAAa,IACbC,IAAK1B,EACL2B,UAAU,EACVC,UAAU,EACVC,MAAO,GACP2B,cAAe,EACfC,aAAc,GACdC,aAAc,IACd5B,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBW,mBAAmB,EACnBV,WAAY,CAAC,CAACpC,EAAO,IAAEqC,SAAUrC,MAAU,CAACC,EAAO,IAAEoC,SAAUpC,OAC/DqC,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAACG,EAAK,GAAEH,EAAK,MAAO,CAACI,EAAK,GAAEJ,EAAK,OAClEiD,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZH,GAASsC,SAAe,CACtBC,EAAG,IACHC,EAAG,EACHC,IAAK/B,EACLgC,YAAa,IACbC,IAAKhC,EACLiC,UAAU,EACVC,UAAU,EACVC,MAAO,IACP4B,aAAc,IACdC,aAAc,KACdF,cAAe,GACf1B,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBW,mBAAmB,EACnBR,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAACG,EAAK,GAAEH,EAAK,MAAO,CAACI,EAAK,GAAEJ,EAAK,MAAO,CAACkB,EAAM,GAAElB,EAAK,MAAO,CAACmB,EAAM,GAAEnB,EAAK,OAC5G6C,WAAY,CAAC,CAAC1C,EAAK,KAAE2C,SAAU3C,GAAM,MAAQ,CAACC,EAAK,KAAE0C,SAAU1C,GAAM,OACrE6C,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAEZL,GAASwC,SAAe,CACtBC,EAAG,IACHC,EAAG,EACHC,IAAKhB,EACLiB,YAAa,IACbC,IAAKjB,EACLkB,UAAU,EACVC,UAAU,EACVC,MAAO,IACP4B,aAAc,KACd3B,YAAajC,EACbkC,aAAc,QACdC,WAAY,QACZC,WAAY,EACZC,kBAAkB,EAClBW,mBAAmB,EACnBR,WAAY,CAAC,CAAC7C,EAAK,GAAEF,EAAK,MAAO,CAACkB,EAAM,GAAElB,EAAK,MAAO,CAACmB,EAAM,GAAEnB,EAAK,OACpE6C,WAAY,CAAC,CAAC3B,EAAM,KAAE4B,SAAU5B,GAAO,MAAQ,CAACC,EAAM,KAAE2B,SAAU3B,GAAO,OACzE8B,YAAa,EACbC,aAAc,GACdC,aAAc,OACdC,WAAY,IACZC,eAAgB,EAChBC,SAAU1D,IAGZgB,GAAM6C,SAAoB,IAAbtD,EAAKM,GAAY,GAC9BI,GAAM4C,SAAM,IAAK,GACjB3C,GAAM2C,SAAoB,IAAbrD,EAAKK,GAAY,GAC9BM,GAAM0C,SAAM,KAAM,GAClBzC,GAAK0C,SAAQ9C,EAAKC,GAClBI,GAAKyC,SAAQ5C,EAAKC,GAClBC,EAAG2C,YAAa,EAChB1C,EAAG0C,YAAa,EAChBvC,GAAMqC,SAAM,IAAmB,KAAZvC,EAAMf,GAAW,GACpCkB,GAAMoC,SAAM,IAAK,GACjBnC,GAAMmC,SAAM,IAAmB,KAAZtC,EAAMhB,GAAW,GACpCoB,GAAMkC,SAAM,KAAM,GAClBjC,GAAKkC,SAAQtC,EAAKC,GAClBI,GAAKiC,SAAQpC,EAAKC,GAClBC,EAAGmC,YAAa,EAChBlC,EAAGkC,YAAa,EAChBrD,EAAU,CAAEG,MAAO,IAAKC,KAAM,GAAImD,MAAO,IAAKC,KAAM,IAAKC,YAAa,GAAIC,MAAO,IACjF3D,EAAOuD,KAAKxE,EAAIC,EAAIC,EAAI0B,EAAIC,EAAIO,EAAIC,GACpCjB,EAAWoD,KAAKpE,EAAQC,EAAQF,EAAQyB,EAAIC,EAAIO,EAAIC,GACpD,MAAM4C,EAAUzC,KAAKoB,MAAM9C,GAAWoE,GAASxC,SAAO5B,EAAKmE,GAC3DtE,EAAa,iBAAgBC,EAAK,cAAa8C,SAAU5C,OAAO4C,SAAUuB,SAAcJ,UAAYnC,SAAgB,IAATwC,GAAgB,SAASL,UAAYnC,SAAY,IAAL5B,GAAY,aAErKJ,EAAS,wBAAuBE,EAAK,4IACrCF,IAAS0E,SAAWlE,EAASD,GAC7BN,IAAayE,SAAWlE,EAASE,GACjCjC,KAAKmB,eAAekE,KAAK9D,GACzBvB,KAAKoB,iBAAiBiE,KAAK7D,IAC3B0E,SAAkClG,OAEpCA,KAAKmG,0BAA4B,CAAC,uBAAwB,EAAG,sD,6BC/ehD,SAASpG,IAEtBC,KAAKH,MAAQ,GACbG,KAAKG,SAAW,GAChBH,KAAKoG,mBAAqB,GAC1BpG,KAAKmB,eAAiB,GACtBnB,KAAKoB,iBAAmB,GACxBpB,KAAKqG,aAAe,GACpBrG,KAAKsG,QAAU,GACftG,KAAKuG,kBAAoB,GACzBvG,KAAKU,YAAc,GACnBV,KAAKQ,OAAS,EACdR,KAAKS,WAAa,EAClBT,KAAKK,QAAU,EACfL,KAAKM,YAAc,EACnBN,KAAKwG,QAAS,EAEdxG,KAAKmG,2BAA4B,EACjCnG,KAAKyG,uBAAwB,EAC7BzG,KAAK0G,6BAA8B,EACnC1G,KAAK2G,4BAA6B,EAClC3G,KAAK4G,wBAAyB,EAC9B5G,KAAK6G,8BAA+B,EACpC7G,KAAK8G,4BAA6B,EAClC9G,KAAK+G,wBAAyB,EAC9B/G,KAAKgH,8BAA+B,EACpChH,KAAKiH,oBAAqB,EAC1BjH,KAAKW,uBAAwB,EAC7BX,KAAKkH,kBAAmB,EACxBlH,KAAKmH,sBAAuB,EAC5BnH,KAAKoH,mBAAoB,EACzBpH,KAAKqH,uBAAwB,EAC7BrH,KAAKsH,+BAAgC,EACrCtH,KAAKuH,qBAAsB,EAC3BvH,KAAKwH,MAAQ,GACbxH,KAAKyH,YAAa,EAClBzH,KAAK0H,gBAAkB,GAMvB1H,KAAK2H,mBAAoB,EACzB3H,KAAK4H,YAAa,EAClB5H,KAAK6H,uBAAwB,EAC7B7H,KAAK8H,KAAM,EACX9H,KAAK+H,eAAgB,EACrB/H,KAAKgI,SAAU,EACfhI,KAAKiI,eAAiB,GACtBjI,KAAKkI,sBAAwB,GAC7BlI,KAAKmI,cAAe,EACpBnI,KAAKY,gBAAkB,SAAUwH,KACjCpI,KAAKqI,cAAgB,G","file":"js/24291.b3d80991dbfb9277c140.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, troncature, calcul, choisitLettresDifferentes, texNombre, texFraction } from '../../modules/outils.js'\nimport { point, segment, droiteGraduee2, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Lire une abscisse décimale grâce à des zooms successifs'\n\n/**\n * 6N23-3\n */\nexport default function LireUneAbscisseAvecZoom () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.niveau = 'sixième'\n  this.sup = 3\n  this.consigne = ''\n  if (context.isHtml) {\n    this.spacing = 2\n    this.spacingCorr = 3\n  } else {\n    this.spacing = 1\n    this.spacingCorr = 1\n  }\n  this.vspace = -1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    let d1; let d2; let d3; let d3Corr; let d1Corr; let d2Corr; let texte = ''; let texteCorr = ''; let extremite; let extreme; const noms = choisitLettresDifferentes(5, 'QFN')\n    let x1 = 0; let x2 = 0; let x3 = 0; const objets = []; let fenetre; let thickOff = 0; const objetsCorr = []; let xmin; let xmax; let origine; let pA1; let pA2; let pB1; let pB2; let sA; let sB; let x21; let x31; let pC1; let pC2; let pD1; let pD2; let sC; let sD\n    if (parseInt(this.sup) === 1) {\n      if (this.niveau === 'CM') {\n        xmin = 0\n        thickOff = 0\n        origine = 0\n        extreme = 9\n        xmax = 9\n      } else {\n        xmin = randint(5, 10) - 0.2\n        origine = Math.round(xmin + 0.2)\n        extreme = calcul(origine + 9)\n        thickOff = 0.1\n        xmax = origine + 9.2\n      }\n      x1 = calcul(xmin + 0.2 + randint(1, 5) + randint(2, 8) / 10)\n      //   xmin=calcul(Math.floor(x1)-5)\n      //    xmax=calcul(Math.floor(x1)+6)\n      if (xmin === 0) extremite = '|->'\n      else extremite = '->'\n\n      d1 = droiteGraduee2({\n        x: 0,\n        y: 3,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax + 0.2,\n        thickSec: true,\n        thickTer: false,\n        Unite: 3,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        labelsPrincipaux: false,\n        labelListe: [[origine, `${texNombre(origine)}`], [extreme, `${texNombre(extreme)}`]],\n        pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d2 = droiteGraduee2({\n        x: Math.floor(x1) - xmin + 1.5,\n        y: 0,\n        Min: Math.floor(x1),\n        axePosition: 'H',\n        Max: Math.floor(x1 + 1),\n        thickSec: true,\n        thickTer: false,\n        Unite: 20,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        labelsPrincipaux: false,\n        pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d1Corr = droiteGraduee2({\n        x: 0,\n        y: 3,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax + 0.2,\n        thickSec: true,\n        thickTer: false,\n        Unite: 3,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        labelsPrincipaux: true,\n        labelListe: [[origine, `${texNombre(origine)}`], [extreme, `${texNombre(extreme)}`]],\n        pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d2Corr = droiteGraduee2({\n        x: Math.floor(x1) - xmin + 1.5,\n        y: 0,\n        Min: Math.floor(x1),\n        axePosition: 'H',\n        Max: Math.floor(x1 + 1),\n        thickSec: true,\n        thickTer: false,\n        Unite: 20,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 4,\n        labelsPrincipaux: false,\n        labelsSecondaires: true,\n        labelListe: [[Math.floor(x1), `${texNombre(Math.floor(x1))}`], [x1, `${texNombre(x1)}`], [Math.ceil(x1), `${texNombre(Math.ceil(x1))}`]],\n        pointListe: [[x1, `${noms[1]}`], [Math.floor(x1), `${noms[0]}`], [Math.floor(x1 + 1), `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n\n      pA1 = point((Math.floor(x1) - xmin) * 3, 3)\n      pA2 = point(Math.floor(x1) - xmin + 1.5, 0)\n      pB1 = point((Math.floor(x1) + 1 - xmin) * 3, 3)\n      pB2 = point(Math.floor(x1) - xmin + 21.5, 0)\n      sA = segment(pA1, pA2)\n      sB = segment(pB1, pB2)\n      sA.pointilles = true\n      sB.pointilles = true\n      objets.push(d1, d2, sA, sB)\n      objetsCorr.push(d1Corr, d2Corr, sA, sB)\n      fenetre = { xmin: -1.5, xmax: 35, ymin: -1, ymax: 4.5, pixelsParCm: 25, scale: 0.5 }\n      texteCorr = `L'abscisse de ${noms[1]} est : $${texNombre(x1)}=${texNombre(Math.floor(x1))} + ${texFraction(calcul(10 * (x1 - Math.floor(x1))), 10)}=${texFraction(calcul(x1 * 10), 10)}$.<br>`\n    } else if (parseInt(this.sup) === 2) {\n      if (this.niveau === 'CM') {\n        xmin = 0\n        thickOff = 0\n      } else {\n        xmin = randint(1, 15) - 0.02\n        thickOff = 0.01\n      }\n\n      xmax = xmin + 1.05\n      x1 = calcul(xmin + 0.02 + randint(2, 8) / 10 + randint(2, 8) / 100)\n      x2 = calcul(Math.floor(x1 * 10) / 10)\n      x3 = calcul(x2 + 0.1)\n      //      xmin=calcul(x2-0.8)\n      //      xmax=calcul(xmin+1.7)\n      if (xmin === 0) extremite = '|->'\n      else extremite = '->'\n      d1 = droiteGraduee2({\n        x: 0,\n        y: 3,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: true,\n        Unite: 30,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 8,\n        thickDistance: 1,\n        thickSecDist: 0.1,\n        thickTerDist: 0.01,\n        labelsPrincipaux: false,\n        labelListe: [[Math.floor(x1), `${Math.floor(x1)}`], [Math.ceil(x1), `${Math.ceil(x1)}`]],\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d2 = droiteGraduee2({\n        x: (x2 - xmin) + 6,\n        y: 0,\n        Min: x2,\n        axePosition: 'H',\n        Max: x2 + 0.1,\n        thickSec: true,\n        thickTer: false,\n        Unite: 200,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        thickDistance: 0.1,\n        thickSecDist: 0.01,\n        thickTerDist: 0.001,\n        labelsPrincipaux: false,\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x2 + 0.1, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d1Corr = droiteGraduee2({\n        x: 0,\n        y: 3,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: true,\n        Unite: 30,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 8,\n        thickDistance: 1,\n        thickSecDist: 0.1,\n        thickTerDist: 0.01,\n        labelsSecondaires: true,\n        labelListe: [[Math.floor(x1), `${Math.floor(x1)}`], [Math.ceil(x1), `${Math.ceil(x1)}`]],\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d2Corr = droiteGraduee2({\n        x: (x2 - xmin) + 6,\n        y: 0,\n        Min: x2,\n        axePosition: 'H',\n        Max: x2 + 0.1,\n        thickSec: true,\n        thickTer: false,\n        Unite: 200,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        thickDistance: 0.1,\n        thickSecDist: 0.01,\n        thickTerDist: 0.001,\n        labelsPrincipaux: false,\n        labelsSecondaires: true,\n        labelListe: [[x2, `${texNombre(x2) + '0'}`], [x1, `${texNombre(x1)}`], [x3, `${texNombre(x3) + '0'}`]],\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x2 + 0.1, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n\n      pA1 = point((Math.floor(x1 * 10) / 10 - xmin) * 30, 3)\n      pA2 = point(x2 - xmin + 6, 0)\n      pB1 = point((Math.floor(x1 * 10) / 10 + 0.1 - xmin) * 30, 3)\n      pB2 = point(x3 - xmin + 26, 0)\n      sA = segment(pA1, pA2)\n      sB = segment(pB1, pB2)\n      sA.pointilles = true\n      sB.pointilles = true\n      fenetre = { xmin: -1.5, xmax: 35, ymin: -1.5, ymax: 4.5, pixelsParCm: 25, scale: 0.5 }\n      objets.push(d1, d2, sA, sB)\n      objetsCorr.push(d1Corr, d2Corr, sA, sB)\n      const partent = Math.floor(x1); const pardec = calcul(x1 - partent)\n      texteCorr = `L'abscisse de ${noms[1]} est : $${texNombre(x1)}=${texNombre(partent)} + ${texFraction(calcul(pardec * 100), 100)}=${texFraction(calcul(x1 * 100), 100)}$.<br>`\n    } else if (parseInt(this.sup) === 3) {\n      if (this.niveau === 'CM') {\n        xmin = 0\n        xmax = 1\n        thickOff = 0\n        x1 = calcul(xmin + randint(2, 8) / 10 + randint(2, 8) / 100 + randint(2, 8) * 0.001)\n        x2 = troncature(x1, 1)\n        x21 = troncature(x1, 2)\n        x3 = calcul(x2 + 0.1)\n        x31 = calcul(x21 + 0.01)\n      } else {\n        xmin = randint(1, 15)\n        xmax = xmin + 1\n        x1 = calcul(xmin + randint(2, 8) / 10 + randint(2, 8) / 100 + randint(2, 8) * 0.001)\n        x2 = troncature(x1, 1)\n        x21 = troncature(x1, 2)\n        x3 = calcul(x2 + 0.1)\n        x31 = calcul(x21 + 0.01)\n        xmin = Math.floor(x2)\n        xmax = xmin + 1\n        thickOff = 0.001\n      }\n      if (xmin === 0) extremite = '|->'\n      else extremite = '->'\n      d1 = droiteGraduee2({\n        x: 0,\n        y: 6,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: true,\n        Unite: 30,\n        thickDistance: 1,\n        thickSecDist: 0.1,\n        thickTerDist: 0.01,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: true,\n        labelListe: [[xmin, `${texNombre(xmin)}`], [xmax, `${texNombre(xmax)}`]],\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 3,\n        axeStyle: extremite\n      })\n      d2 = droiteGraduee2({\n        x: 6.5,\n        y: 3,\n        Min: x2,\n        axePosition: 'H',\n        Max: x3,\n        thickSec: true,\n        thickTer: true,\n        Unite: 200,\n        thickSecDist: 0.01,\n        thickTerDist: 0.001,\n        thickDistance: 0.1,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: false,\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d3 = droiteGraduee2({\n        x: 6.5,\n        y: 0,\n        Min: x21,\n        axePosition: 'H',\n        Max: x31,\n        thickSec: true,\n        thickTer: false,\n        Unite: 2000,\n        thickSecDist: 0.001,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: false,\n        pointListe: [[x1, `${noms[1]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d1Corr = droiteGraduee2({\n        x: 0,\n        y: 6,\n        Min: xmin,\n        axePosition: 'H',\n        Max: xmax,\n        thickSec: true,\n        thickTer: true,\n        Unite: 30,\n        thickDistance: 1,\n        thickSecDist: 0.1,\n        thickTerDist: 0.01,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: true,\n        labelsSecondaires: true,\n        labelListe: [[xmin, `${texNombre(xmin)}`], [xmax, `${texNombre(xmax)}`]],\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 3,\n        axeStyle: extremite\n      })\n      d2Corr = droiteGraduee2({\n        x: 6.5,\n        y: 3,\n        Min: x2,\n        axePosition: 'H',\n        Max: x3,\n        thickSec: true,\n        thickTer: true,\n        Unite: 200,\n        thickSecDist: 0.01,\n        thickTerDist: 0.001,\n        thickDistance: 0.1,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: false,\n        labelsSecondaires: true,\n        pointListe: [[x1, `${noms[1]}`], [x2, `${noms[0]}`], [x3, `${noms[2]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n        labelListe: [[x2, `${texNombre(x2) + '0'}`], [x3, `${texNombre(x3) + '0'}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n      d3Corr = droiteGraduee2({\n        x: 6.5,\n        y: 0,\n        Min: x21,\n        axePosition: 'H',\n        Max: x31,\n        thickSec: true,\n        thickTer: false,\n        Unite: 2000,\n        thickSecDist: 0.001,\n        thickOffset: thickOff,\n        thickCouleur: 'black',\n        axeCouleur: 'black',\n        axeHauteur: 6,\n        labelsPrincipaux: false,\n        labelsSecondaires: true,\n        pointListe: [[x1, `${noms[1]}`], [x21, `${noms[3]}`], [x31, `${noms[4]}`]],\n        labelListe: [[x21, `${texNombre(x21) + '0'}`], [x31, `${texNombre(x31) + '0'}`]],\n        pointTaille: 6,\n        pointOpacite: 0.8,\n        pointCouleur: 'blue',\n        pointStyle: '|',\n        pointEpaisseur: 2,\n        axeStyle: extremite\n      })\n\n      pA1 = point((x2 - xmin) * 30, 6)\n      pA2 = point(6.5, 3)\n      pB1 = point((x3 - xmin) * 30, 6)\n      pB2 = point(26.5, 3)\n      sA = segment(pA1, pA2)\n      sB = segment(pB1, pB2)\n      sA.pointilles = true\n      sB.pointilles = true\n      pC1 = point(6.5 + (x21 - x2) * 200, 3)\n      pC2 = point(6.5, 0)\n      pD1 = point(6.5 + (x31 - x2) * 200, 3)\n      pD2 = point(26.5, 0)\n      sC = segment(pC1, pC2)\n      sD = segment(pD1, pD2)\n      sC.pointilles = true\n      sD.pointilles = true\n      fenetre = { xmin: -1.5, xmax: 35, ymin: -1.5, ymax: 7.5, pixelsParCm: 25, scale: 0.5 }\n      objets.push(d1, d2, d3, sA, sB, sC, sD)\n      objetsCorr.push(d1Corr, d2Corr, d3Corr, sA, sB, sC, sD)\n      const partent = Math.floor(x1); const pardec = calcul(x1 - partent)\n      texteCorr = `L'abscisse de ${noms[1]} est : $${texNombre(x1)}=${texNombre(partent)} + ${texFraction(calcul(pardec * 1000), 1000)}=${texFraction(calcul(x1 * 1000), 1000)}$.<br>`\n    }\n    texte = `Donner l'abscisse de ${noms[1]} sous trois formes : en écriture décimale, comme somme d’un nombre entier et d’une fraction décimale et avec une fraction décimale.<br>`\n    texte += mathalea2d(fenetre, objets)\n    texteCorr += mathalea2d(fenetre, objetsCorr)\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Au dixième\\n2 : Au centième\\n3 : Au millième']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}