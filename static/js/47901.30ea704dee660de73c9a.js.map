{"version":3,"file":"js/47901.30ea704dee660de73c9a.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6C32.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, calcul, choice, arrondiVirgule, texNombre, texPrix } from '../../modules/outils.js'\n\nexport const titre = 'Problème - Les courses'\n\n/**\n * On achète 2 aliments dont on connait la masse (un en grammes et l'autre en kilogrammes) et le prix au kilogramme. Il faut calculer le prix total.\n * @author Rémi Angot\n * Référence 6C32\n */\nexport default function ProblemeCourse () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const prenom = choice([\n      'Benjamin',\n      'Léa',\n      'Aude',\n      'Julie',\n      'Corinne',\n      'Mehdi',\n      'Joaquim'\n    ])\n    let masseEnKgDeAliment1\n    if (this.sup) {\n      masseEnKgDeAliment1 = randint(2, 5)\n    } else {\n      masseEnKgDeAliment1 = calcul(\n        randint(2, 5) + randint(1, 9) / 10\n      )\n    }\n    const prixAliment1 = calcul(randint(2, 4) + randint(1, 9) / 10)\n    const aliment1 = choice(['courgettes', 'carottes', 'pommes'])\n    let masseEnGdeAliment2\n\n    let prixAliment2\n    if (this.sup) {\n      prixAliment2 = randint(15, 25)\n      masseEnGdeAliment2 = randint(2, 7) * 500\n    } else {\n      prixAliment2 = calcul(randint(12, 23) + randint(1, 9) / 10)\n      masseEnGdeAliment2 = randint(21, 97) * 10\n    }\n    const aliment2 = choice(['boeuf', 'veau', 'poulet'])\n\n    let texte = `${prenom} achète ${texNombre(\n      masseEnKgDeAliment1\n    )} kg de ${aliment1} à ${texPrix(prixAliment1)} €/kg `\n    texte += `et ${masseEnGdeAliment2} g de ${aliment2} à ${texPrix(\n      prixAliment2\n    )} €/kg. Quel est le prix total à payer ?`\n    let texteCorr =\n      `Prix des ${aliment1} : ${texNombre(\n        masseEnKgDeAliment1\n      )} kg × ${texPrix(prixAliment1)} €/kg = ${texPrix(\n        calcul(masseEnKgDeAliment1 * prixAliment1)\n      )} €` + '<br>'\n    texteCorr +=\n      `Prix du ${aliment2} : ${texNombre(calcul(masseEnGdeAliment2 / 1000))} kg × ${texPrix(prixAliment2)} €/kg = ${texNombre(calcul((masseEnGdeAliment2 * prixAliment2) / 1000))} € ` + '<br>'\n    texteCorr += `Prix total à payer : ${texNombre(calcul(masseEnKgDeAliment1 * prixAliment1))} € + ${texNombre(calcul(masseEnGdeAliment2 * prixAliment2 / 1000))} €`\n    if (Number.isInteger(calcul((masseEnKgDeAliment1 * prixAliment1 + (masseEnGdeAliment2 * prixAliment2) / 1000)) * 100)) {\n      texteCorr += ' = '\n    } else {\n      texteCorr += ' ≈ '\n    }\n    texteCorr += `${arrondiVirgule(calcul(masseEnKgDeAliment1 * prixAliment1 + (masseEnGdeAliment2 * prixAliment2) / 1000))} €<br>`\n    texteCorr += `<br><i>Le prix total aurait aussi pu être trouvé en un seul calcul</i> : ${texNombre(masseEnKgDeAliment1)} kg × ${texPrix(prixAliment1)} €/kg + ${texNombre(calcul(masseEnGdeAliment2 / 1000))} kg × ${texPrix(prixAliment2)} €/kg `\n    if (Number.isInteger(calcul((masseEnKgDeAliment1 * prixAliment1 + (masseEnGdeAliment2 * prixAliment2) / 1000)) * 100)) {\n      texteCorr += ' = '\n    } else {\n      texteCorr += ' ≈ '\n    }\n    texteCorr += `${arrondiVirgule(calcul(\n        masseEnKgDeAliment1 * prixAliment1 +\n        (masseEnGdeAliment2 * prixAliment2) / 1000\n      )\n    )} €<br>`\n\n    if (!context.isHtml) {\n      texteCorr =\n        `Prix des ${aliment1} : $${texNombre(\n          masseEnKgDeAliment1\n        )}~\\\\text{kg}\\\\times${texPrix(\n          prixAliment1\n        )}~\\\\text{\\\\euro{}/kg} = ${texPrix(\n          calcul(masseEnKgDeAliment1 * prixAliment1)\n        )}~\\\\text{\\\\euro}$` + '<br>'\n      texteCorr +=\n        `Prix du ${aliment2} : $${texNombre(\n          calcul(masseEnGdeAliment2 / 1000)\n        )}~\\\\text{kg}\\\\times${texPrix(\n          prixAliment2\n        )}~\\\\text{\\\\euro{}/kg} = ${texNombre(\n          calcul((masseEnGdeAliment2 * prixAliment2) / 1000)\n        )}~\\\\text{\\\\euro}$` + '<br>'\n      texteCorr += `Prix total à payer : $${texNombre(\n        calcul(masseEnKgDeAliment1 * prixAliment1)\n      )}~\\\\text{\\\\euro} + ${texNombre(\n        calcul((masseEnGdeAliment2 * prixAliment2) / 1000)\n      )}~\\\\text{\\\\euro}`\n      if (Number.isInteger(calcul((masseEnKgDeAliment1 * prixAliment1 + (masseEnGdeAliment2 * prixAliment2) / 1000)) * 100)) {\n        texteCorr += '='\n      } else {\n        texteCorr += '\\\\approx'\n      }\n      texteCorr += ` ${arrondiVirgule(\n        calcul(\n          masseEnKgDeAliment1 * prixAliment1 +\n          (masseEnGdeAliment2 * prixAliment2) / 1000\n        )\n      )}~\\\\text{\\\\euro}$<br>`\n    }\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Calculs faciles']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ProblemeCourse","Exercice","this","consigne","spacing","spacingCorr","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","prenom","choice","masseEnKgDeAliment1","randint","calcul","prixAliment1","aliment1","masseEnGdeAliment2","prixAliment2","aliment2","texte","texNombre","texPrix","texteCorr","Number","isInteger","arrondiVirgule","context","push","listeQuestionsToContenuSansNumero","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}