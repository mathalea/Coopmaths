{"version":3,"file":"js/36834.d18a21a39cde3bbc7533.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta3G15.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, numAlpha, calcul, randint } from '../../modules/outils.js'\nimport { mathalea2d, droite, tracePointSurDroite, labelPoint, tracePoint, rotation, translation2Points, homothetie, symetrieAxiale, point } from '../../modules/2d.js'\n\nexport const titre = 'Utiliser toutes les transformations'\n\nexport default function Exercice_zero_mathalea2d () {\n  Exercice.call(this)\n  this.titre = titre\n  this.nbQuestions = 1 // Ici le nombre de questions\n  this.nbQuestionsModifiable = false // Active le formulaire nombre de questions\n  this.nbCols = 1 // Le nombre de colonnes dans l'énoncé LaTeX\n  this.nbColsCorr = 1// Le nombre de colonne pour la correction LaTeX\n  this.consigne = 'Construire les points suivants.'\n  this.video = 'hFoN9sMWnac'\n  this.typeExercice = 'IEP'\n\n  this.nouvelleVersion = function (numeroExercice) {\n    const anim = new Alea2iep()\n    this.listeQuestions = [] // tableau contenant la liste des questions\n    this.listeCorrections = []\n\n    let objetsEnonce, objetsEnonceml, objetsCorrection, paramsEnonce, paramsCorrection\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      texte = `${numAlpha(0)} $M_1$ symétrique de $M$ par rapport à $(AB)$.` // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texte += '<br><br>'\n      texte += `${numAlpha(1)} $M_2$ symétrique de $M$ par rapport à $O$.` // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texte += '<br><br>'\n      texte += `${numAlpha(2)} $M_3$ image de $M$ dans la translation qui transforme $A$ en $B$.` // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texte += '<br><br>'\n      texte += `${numAlpha(3)} $M_4$ image de $M$ dans la rotation de centre $O$ et de $60$° dans le sens anti-horaire.` // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texte += '<br><br>'\n      texte += `${numAlpha(4)} $M_5$ image de $M$ dans l'homothétie de centre $A$ et de rapport $3$.` // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texte += '<br><br>'\n      texte += `${numAlpha(5)} $M_6$ image de $M$ dans l'homothétie de centre $A$ et de rapport $-2$.` // Nous utilisons souvent cette variable pour construire le texte de la question.\n      texteCorr = '' // Idem pour le texte de la correction.\n\n      const A = point(0, 2, 'A', 'right')\n      const B = point(calcul(randint(20, 30) / 10), calcul(randint(60, 80) / 10), 'B', 'right')\n      const d = droite(A, B)\n      const tA = tracePointSurDroite(A, d)\n      const tB = tracePointSurDroite(B, d)\n      const M = point(calcul(randint(20, 40) / 10) * (-1), 0, 'M')\n      const O = point(randint(4, 7) * (-1), randint(2, 4), 'O')\n      const M1 = symetrieAxiale(M, d, 'M1')\n      const M2 = rotation(M, O, 180, 'M2')\n      const M3 = translation2Points(M, A, B, 'M3')\n      const M4 = rotation(M, O, -60, 'M4')\n      const M5 = homothetie(M, A, 3, 'M5')\n      const M6 = homothetie(M, A, -2, 'M6')\n      const tenonce = tracePoint(M, O)\n      const tcorr = tracePoint(M1, M2, M3, M4, M5, M6)\n      const lenonce = labelPoint(A, B, M, O)\n      const lcorr = labelPoint(M1, M2, M3, M4, M5, M6)\n\n      objetsEnonce = [d, tA, tB, lenonce, tenonce] // on initialise le tableau des objets Mathalea2d de l'enoncé\n      objetsCorrection = [...objetsEnonce, lcorr, tcorr] // Idem pour la correction\n\n      // context.fenetreMathalea2d = [Math.min(M1.x-1,M2.x-1,M3.x-1,M4.x-1,M5.x-1,M6.x-1),Math.min(M1.y-1,M2.y-1,M3.y-1,M4.y-1,M5.y-1,M6.y-1),Math.max(M1.x+1,M2.x+1,M3.x+1,M4.x+1,M5.x+1,M6.x+1),Math.max(M1.y+1,M2.y+1,M3.y+1,M4.y+1,M5.y+1,M6.y+1,B.y+1)]\n\n      anim.recadre(Math.min(M1.x - 1, M2.x - 1, M3.x - 1, M4.x - 1, M5.x - 1, M6.x - 1), Math.max(M1.y + 1, M2.y + 1, M3.y + 1, M4.y + 1, M5.y + 1, M6.y + 1, B.y + 1))\n      anim.vitesse = 1000\n      anim.tempo = 0\n      anim.pointsCreer(A, B, M, O)\n      anim.regleDroite(A, B)\n      anim.vitesse = 10\n      anim.tempo = 1\n      anim.symetrieAxialePoint(M, d, 'M1', { couleur: 'blue', couleurCodage: 'lightblue', codage: '//' })\n      anim.rotationPoint(M, O, -60, 'M4', { couleur: 'green', couleurCodage: 'lightgreen' })\n      anim.translationPoint(M, A, B, 'M3', { couleur: 'red', couleurCodage: 'pink', codage: 'O' })\n      anim.homothetiePoint(M, A, 3, 'M5', { couleur: 'purple', couleurCodage: 'magenta' })\n      anim.homothetiePoint(M, A, -2, 'M6', { couleur: 'black', couleurCodage: 'grey' })\n\n      paramsEnonce = { xmin: Math.min(M1.x - 1, M2.x - 1, M3.x - 1, M4.x - 1, M5.x - 1, M6.x - 1), ymin: Math.min(M1.y - 1, M2.y - 1, M3.y - 1, M4.y - 1, M5.y - 1, M6.y - 1), xmax: Math.max(M1.x + 1, M2.x + 1, M3.x + 1, M4.x + 1, M5.x + 1, M6.x + 1), ymax: Math.max(M1.y + 1, M2.y + 1, M3.y + 1, M4.y + 1, M5.y + 1, M6.y + 1, B.y + 1), pixelsParCm: 20, scale: 1, mainlevee: false }\n      // paramètres de la fenêtre Mathalea2d pour la correction\n      paramsCorrection = { xmin: Math.min(M1.x - 1, M2.x - 1, M3.x - 1, M4.x - 1, M5.x - 1, M6.x - 1), ymin: Math.min(M1.y - 1, M2.y - 1, M3.y - 1, M4.y - 1, M5.y - 1, M6.y - 1), xmax: Math.max(M1.x + 1, M2.x + 1, M3.x + 1, M4.x + 1, M5.x + 1, M6.x + 1), ymax: Math.max(M1.y + 1, M2.y + 1, M3.y + 1, M4.y + 1, M5.y + 1, M6.y + 1, B.y + 1), pixelsParCm: 20, scale: 1, mainlevee: false }\n\n      // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n      texte += '<br><br>'\n      texte += mathalea2d(paramsEnonce, objetsEnonce)\n      // On ajoute au texte de la correction, la figure de la correction\n      texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n      texteCorr += '<br>' + anim.html(numeroExercice)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on la stocke dans la liste des questions\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this) // On envoie l'exercice à la fonction de mise en page\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","Exercice_zero_mathalea2d","typeExercice","anim","Alea2iep","objetsEnonce","objetsCorrection","paramsEnonce","paramsCorrection","texte","texteCorr","cpt","numAlpha","A","point","B","calcul","randint","d","droite","tA","tracePointSurDroite","tB","M","O","M1","symetrieAxiale","M2","rotation","M3","translation2Points","M4","M5","homothetie","M6","tenonce","tracePoint","tcorr","lenonce","labelPoint","lcorr","recadre","Math","min","x","max","y","vitesse","tempo","pointsCreer","regleDroite","symetrieAxialePoint","couleur","couleurCodage","codage","rotationPoint","translationPoint","homothetiePoint","xmin","ymin","xmax","ymax","pixelsParCm","scale","mainlevee","mathalea2d","html","listeQuestionsToContenu"],"sourceRoot":""}