{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3A12.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Fractions_irreductibles","Exercice","this","consigne","sortieHtml","spacing","spacingCorr","nbQuestions","nbCols","nbColsCorr","listePackages","nouvelleVersion","numeroExercice","type_de_questions","boutonAide","modalPdf","listeQuestions","listeCorrections","contenu","contenuCorrection","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","introduction","warnMessage","numAlpha","texte","texteCorr","i","cpt","candidats_premiers_communs","premiers_communs","multiplicites_premiers_communs","r","r_exclus","nb1_dist","nb2_dist","r_ex","tab_nb1","tab_nb2","multiplicites_nb1","multiplicites_nb2","nb1","nb2","premiersEntreBornes","k","m","push","randint","length","idx","indexOf","splice","bool","n","tab_prem_mult_nb1","tab_prem_mult_nb2","sort","a","b","prem","mult","texNombre","decompositionFacteursPremiersArray","listeQuestionsToContenu","consigneCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable"],"mappings":"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","file":"js/3163.25cf6e18b9faba06deaf.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,combinaisonListesSansChangerOrdre,texNombre,modalPdf,numAlpha,premiersEntreBornes,warnMessage,decompositionFacteursPremiersArray} from '../../modules/outils.js'\nexport const titre = 'Fractions irréductibles'\n\n/**\n * 3A12 - Fractions irreductibles\n * @author Sébastien Lozano\n */\nexport default function Fractions_irreductibles() {\n\t'use strict';\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `Rendre irréductible une fraction et son inverse à partir des décompositions en produit de facteurs premiers.`;\n\t//this.consigne += `<br>`;\n\tsortieHtml ? this.spacing = 4 : this.spacing = 2;\n\tsortieHtml ? this.spacingCorr = 4 : this.spacingCorr = 2;\n\tthis.nbQuestions = 1;\n\t//this.correctionDetailleeDisponible = true;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.listePackages = `bclogo`;\n\n\tthis.nouvelleVersion = function (numeroExercice) {\n\t\tlet type_de_questions;\n\t\tif (sortieHtml) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.boutonAide = '';\n\t\t\tthis.boutonAide = modalPdf(numeroExercice, \"assets/pdf/FicheArithmetique-3A12.pdf\", \"Aide mémoire sur les fonctions (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\t//this.boutonAide += modalVideo('conteMathsNombresPremiers','/videos/LesNombresPremiers.mp4','Petit conte mathématique','Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenuCorrection = ''; // Liste de questions corrigées\n\n\n\t\t//let type_de_questions_disponibles = [1,2,3,4];\n\t\tlet type_de_questions_disponibles = [1];\n\t\tlet listeTypeDeQuestions = combinaisonListesSansChangerOrdre(type_de_questions_disponibles, this.nbQuestions);\n\n\t\tthis.introduction = warnMessage(`À la question ` + numAlpha(3) + ` une observation judicieuse et argumentée pourra faire gagner du temps!`, `nombres`, `Coup de pouce`);\n\n\t\tfor (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\ttype_de_questions = listeTypeDeQuestions[i];\n\n\t\t\tvar nb_div_prem_communs; // nombre de diviseurs premiers communs\n\t\t\tvar candidats_premiers_communs; // tableau des candidats premiers communs\n\t\t\tvar premiers_communs; // tableau des diviseurs premiers communs\n\t\t\tvar multiplicites_premiers_communs; // tableau des multiplicités des diviseurs premiers communs \n\t\t\tvar r; // tableau pour le choix des rangs des diviseurs premiers communs\n\t\t\tvar r_exclus; // tableau pour la boucle de creation de r\t\t\t\t\n\t\t\tvar nb1_dist; // diviseur unique du premier nombre \n\t\t\tvar nb2_dist; // divisuer unique du second nombre\n\t\t\tvar r_ex; // pour exlcure le rang de nb1\n\t\t\tvar tab_nb1; // tableau pour les diviseurs de nb1\n\t\t\tvar tab_nb2; // tableau pour les diviseurs de nb2\n\t\t\tvar multiplicites_nb1;\n\t\t\tvar multiplicites_nb2;\n\t\t\tvar nb1; // nbre 1\n\t\t\tvar nb2; // nbre 2\n\n\n\t\t\t// on fixe le tableau de choix\n\t\t\tcandidats_premiers_communs = premiersEntreBornes(2, 13);\n\t\t\t// on fixe le nombre de divisuers premiers communs\n\t\t\tnb_div_prem_communs = 4;\n\t\t\t// on initialise le tableau des diviseurs premiers communs\n\t\t\tpremiers_communs = [];\n\t\t\t// on initialise le tableau des rangs\n\t\t\tr = [];\n\t\t\t// on initialise le tableau des rangs déjà choisis\n\t\t\tr_exclus = [];\n\t\t\t// on complète le tableau des rangs des rangs des diviseurs premiers choisis\n\t\t\tfor (let k = 0; k < nb_div_prem_communs; k++) {\n\t\t\t\tfor (let m = 0; m < k; m++) {\n\t\t\t\t\tr_exclus.push(r[m]);\n\t\t\t\t};\n\t\t\t\tr[k] = randint(0, candidats_premiers_communs.length - 1, r_exclus);\n\t\t\t};\n\t\t\t// on complète le tableau des diviseurs premiers communs\n\t\t\tfor (let k = 0; k < nb_div_prem_communs; k++) {\n\t\t\t\tpremiers_communs.push(candidats_premiers_communs[r[k]]);\n\t\t\t};\n\t\t\t// on initialise et on complète le tableau des multiplicités des diviseurs premiers communs\n\t\t\tmultiplicites_premiers_communs = [];\n\t\t\tfor (let k = 0; k < nb_div_prem_communs; k++) {\n\t\t\t\tmultiplicites_premiers_communs.push(randint(0, 2));\n\t\t\t};\n\t\t\t// on supprime les diviseurs premiers de multiplicité 0 et leur multiplicité\n\t\t\tlet idx = multiplicites_premiers_communs.indexOf(0);\n\t\t\twhile (idx != -1) {\n\t\t\t\tpremiers_communs.splice(idx, 1);\n\t\t\t\tmultiplicites_premiers_communs.splice(idx, 1);\n\t\t\t\tidx = multiplicites_premiers_communs.indexOf(0);\n\t\t\t};\n\t\t\t// on initialise le tableau des diviseurs du premier et du second nombre avec les diviseurs premiers communs\n\t\t\ttab_nb1 = [];\n\t\t\ttab_nb2 = [];\n\t\t\tfor (let k = 0; k < premiers_communs.length; k++) {\n\t\t\t\ttab_nb1[k] = premiers_communs[k];\n\t\t\t\ttab_nb2[k] = premiers_communs[k];\n\t\t\t};\n\t\t\t// on initialise les tableaux de multiplicité, ils sont les mêmes mais on pourrait vouloir qu'ils soient différents\n\t\t\tmultiplicites_nb1 = [];\n\t\t\tmultiplicites_nb2 = [];\n\t\t\tfor (let k = 0; k < premiers_communs.length; k++) {\n\t\t\t\tmultiplicites_nb1[k] = multiplicites_premiers_communs[k];\n\t\t\t\tmultiplicites_nb2[k] = multiplicites_premiers_communs[k];\n\t\t\t};\n\t\t\t// on ajoute un facteur premier distinct pour chaque nombre plus petit que 30\n\t\t\tr_ex = randint(0, premiersEntreBornes(2, 30).length - 1);\n\t\t\tnb1_dist = premiersEntreBornes(2, 30)[r_ex];\n\t\t\tnb2_dist = premiersEntreBornes(2, 30)[randint(0, premiersEntreBornes(2, 30).length - 1, r_ex)];\n\t\t\t// on ajoute nb1_dist, nb2_dist dans les tableaux des diviseurs premiers du premier et du second nombre \n\t\t\t// nb1\n\t\t\tlet bool = false;\n\t\t\tlet n = 0;\n\t\t\twhile (n < tab_nb1.length && bool != true) {\n\t\t\t\tif (nb1_dist == tab_nb1[n]) { // si le diviseur premier est déjà présent on incrémente sa multiplicité\n\t\t\t\t\tmultiplicites_nb1[n]++;\n\t\t\t\t\tbool = true;\n\t\t\t\t};\n\t\t\t\tn++;\n\t\t\t};\n\t\t\t// on teste la valeur de sortie de bool et on ajoute la nouvelle valeur si necessaire\n\t\t\tif (!bool) { // il n'est pas présent on l'ajoute avec la multipplicité 1\n\t\t\t\ttab_nb1.push(nb1_dist);\n\t\t\t\tmultiplicites_nb1.push(1);\n\t\t\t\tbool = true;\n\t\t\t};\n\t\t\t// nb2\n\t\t\tbool = false;\n\t\t\tn = 0;\n\t\t\twhile (n < tab_nb2.length && !bool) {\n\t\t\t\tif (nb2_dist == tab_nb2[n]) { // si le diviseur premier est déjà présent on incrémente sa multiplicité\n\t\t\t\t\tmultiplicites_nb2[n]++;\n\t\t\t\t\tbool = true;\n\t\t\t\t};\n\t\t\t\tn++;\n\t\t\t};\n\t\t\t// on teste la valeur de sortie de bool et on ajoute la nouvelle valeur si necessaire\n\t\t\tif (!bool) { // il n'est pas présent on l'ajoute avec la multipplicité 1\n\t\t\t\ttab_nb2.push(nb2_dist);\n\t\t\t\tmultiplicites_nb2.push(1);\n\t\t\t\tbool = true;\n\t\t\t};\n\t\t\t// on crée un tableau associatif à partir des deux tableaux tab_ni et multiplicites_ni\n\t\t\tlet tab_prem_mult_nb1 = [];\n\t\t\tfor (let k = 0; k < tab_nb1.length; k++) {\n\t\t\t\ttab_prem_mult_nb1[k] = { 'prem': tab_nb1[k], 'mult': multiplicites_nb1[k] };\n\t\t\t};\n\t\t\tlet tab_prem_mult_nb2 = [];\n\t\t\tfor (let k = 0; k < tab_nb2.length; k++) {\n\t\t\t\ttab_prem_mult_nb2[k] = { 'prem': tab_nb2[k], 'mult': multiplicites_nb2[k] };\n\t\t\t};\n\t\t\t// on range selon prem croissant\n\t\t\ttab_prem_mult_nb1.sort(function (a, b) {\n\t\t\t\treturn a.prem > b.prem;\n\t\t\t});\n\t\t\ttab_prem_mult_nb2.sort(function (a, b) {\n\t\t\t\treturn a.prem > b.prem;\n\t\t\t});\n\t\t\t// on initialise nb1 et nb2 et on les calcule à partir des tableaux \t\t\t\t\n\t\t\tnb1 = 1;\n\t\t\tfor (let k = 0; k < tab_nb1.length; k++) {\n\t\t\t\tnb1 = nb1 * tab_prem_mult_nb1[k].prem ** tab_prem_mult_nb1[k].mult;\n\t\t\t};\n\t\t\tnb2 = 1;\n\t\t\tfor (let k = 0; k < tab_nb2.length; k++) {\n\t\t\t\tnb2 = nb2 * tab_prem_mult_nb2[k].prem ** tab_prem_mult_nb2[k].mult;\n\t\t\t};\n\n\t\t\tswitch (type_de_questions) {\n\t\t\t\tcase 1: // décomposition de A\n\t\t\t\t\ttexte = numAlpha(0) + ` Décomposer $A = ${texNombre(nb1)}$ en produit de facteurs premiers : `;\n\t\t\t\t\ttexteCorr = numAlpha(0) + ` La décomposition en produit de facteurs premier de $A = `;\n\t\t\t\t\tswitch (tab_prem_mult_nb1[0].mult) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\ttexteCorr += `${tab_prem_mult_nb1[0].prem}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ttexteCorr += `${tab_prem_mult_nb1[0].prem}^{${tab_prem_mult_nb1[0].mult}}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t};\n\t\t\t\t\tfor (let k = 1; k < tab_nb1.length; k++) {\n\t\t\t\t\t\tswitch (tab_prem_mult_nb1[k].mult) {\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\ttexteCorr += `\\\\times${tab_prem_mult_nb1[k].prem}`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttexteCorr += `\\\\times${tab_prem_mult_nb1[k].prem}^{${tab_prem_mult_nb1[k].mult}}`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `$.`;\n\t\t\t\t\t//\tbreak;\t\t\n\t\t\t\t\t//case 2 : // décomposition de B \t\n\t\t\t\t\ttexte += `<br>` + numAlpha(1) + ` Décomposer $B = ${texNombre(nb2)}$ en produit de facteurs premiers : `;\n\t\t\t\t\ttexteCorr += `<br>` + numAlpha(1) + ` La décomposition en produit de facteurs premier de $B = `;\n\t\t\t\t\tswitch (tab_prem_mult_nb2[0].mult) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\ttexteCorr += `${tab_prem_mult_nb2[0].prem}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ttexteCorr += `${tab_prem_mult_nb2[0].prem}^{${tab_prem_mult_nb2[0].mult}}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t};\n\t\t\t\t\tfor (let k = 1; k < tab_nb2.length; k++) {\n\t\t\t\t\t\tswitch (tab_prem_mult_nb2[k].mult) {\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\ttexteCorr += `\\\\times${tab_prem_mult_nb2[k].prem}`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\ttexteCorr += `\\\\times${tab_prem_mult_nb2[k].prem}^{${tab_prem_mult_nb2[k].mult}}`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `$.`;\n\t\t\t\t\t//\tbreak;\t\n\t\t\t\t\t//case 3 : // reduction de A sur B \t\t\t\n\t\t\t\t\ttexte += `<br>` + numAlpha(2) + ` Rendre la fraction $\\\\dfrac{A}{B} = \\\\dfrac{${texNombre(nb1)}}{${texNombre(nb2)}}$ irréductible `;\n\t\t\t\t\tif (sortieHtml) {\n\t\t\t\t\t\ttexte += ` à l'aide des décompositions obtenues au ` + numAlpha(0) + ` et au ` + numAlpha(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte += ` à l'aide des questions ` + numAlpha(0) + ` et ` + numAlpha(1);\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `<br>` + numAlpha(2) + ` $\\\\dfrac{A}{B} = \\\\dfrac{${texNombre(nb1)}}{${texNombre(nb2)}} = `;\n\t\t\t\t\ttexteCorr += `\\\\dfrac{`;\n\t\t\t\t\ttexteCorr += `\\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[0] + `}`;\n\t\t\t\t\tfor (let k = 1; k < decompositionFacteursPremiersArray(nb1 / nb1_dist).length; k++) {\n\t\t\t\t\t\ttexteCorr += `\\\\times \\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[k] + `}`;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `\\\\times ${nb1_dist}}{`;\n\t\t\t\t\ttexteCorr += `\\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[0] + `}`;\n\t\t\t\t\tfor (let k = 1; k < decompositionFacteursPremiersArray(nb1 / nb1_dist).length; k++) {\n\t\t\t\t\t\ttexteCorr += `\\\\times \\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[k] + `}`;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `\\\\times ${nb2_dist}} = `;\n\t\t\t\t\ttexteCorr += `\\\\dfrac{${nb1_dist}}{${nb2_dist}}$.`;\n\t\t\t\t\t//\tbreak;\t\n\t\t\t\t\t//case 4 : // reduction de B sur A \t\t\t\n\t\t\t\t\ttexte += `<br>` + numAlpha(3) + ` Rendre la fraction $\\\\dfrac{B}{A} = \\\\dfrac{${texNombre(nb2)}}{${texNombre(nb1)}}$ irréductible`;\n\t\t\t\t\tif (sortieHtml) {\n\t\t\t\t\t\ttexte += ` à l'aide des décompositions obtenues au ` + numAlpha(0) + ` et au ` + numAlpha(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte += ` à l'aide des questions ` + numAlpha(0) + ` et ` + numAlpha(1);\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `<br>` + numAlpha(3) + ` $\\\\dfrac{B}{A}$ est l'inverse de $\\\\dfrac{A}{B}$ donc $\\\\dfrac{B}{A} = \\\\dfrac{${texNombre(nb2)}}{${texNombre(nb1)}} = `;\n\t\t\t\t\ttexteCorr += `\\\\dfrac{`;\n\t\t\t\t\ttexteCorr += `\\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[0] + `}`;\n\t\t\t\t\tfor (let k = 1; k < decompositionFacteursPremiersArray(nb1 / nb1_dist).length; k++) {\n\t\t\t\t\t\ttexteCorr += `\\\\times \\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[k] + `}`;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `\\\\times ${nb2_dist}}{`;\n\t\t\t\t\ttexteCorr += `\\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[0] + `}`;\n\t\t\t\t\tfor (let k = 1; k < decompositionFacteursPremiersArray(nb1 / nb1_dist).length; k++) {\n\t\t\t\t\t\ttexteCorr += `\\\\times \\\\cancel{` + decompositionFacteursPremiersArray(nb1 / nb1_dist)[k] + `}`;\n\t\t\t\t\t};\n\t\t\t\t\ttexteCorr += `\\\\times ${nb1_dist}} = `;\n\t\t\t\t\ttexteCorr += `\\\\dfrac{${nb2_dist}}{${nb1_dist}}$.`;\n\t\t\t\t\t//\tbreak;\t\n\t\t\t\t\t//case 5 : // calculer le produit A/B x B/A et réduire. Remarque?\n\t\t\t\t\t// texte += `<br>`+numAlpha(4)+` Combien alculer le produit de $\\\\dfrac{A}{B} = \\\\dfrac{${texNombre(nb1)}}{${texNombre(nb2)}}$ et de $\\\\dfrac{B}{A} = \\\\dfrac{${texNombre(nb2)}}{${texNombre(nb1)}}$.`;\n\t\t\t\t\t// texte += `<br>Donner le résultat sous forme de fraction irréductible.`\n\t\t\t\t\t//texte += `<br>`+numAlpha(4)+` Remarque ?`\n\t\t\t\t\t//texteCorr += `<br>`+numAlpha(4)+' corr type 5';\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t};\n\t\t\tcpt++;\n\t\t};\n\t\tlisteQuestionsToContenu(this);\n\t};\n\t//this.besoinFormulaireNumerique = ['Règle à travailler',5,\"1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissance\\n4 : Produit de puissances de même exposant\\n5 : Mélange\"]; \n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}