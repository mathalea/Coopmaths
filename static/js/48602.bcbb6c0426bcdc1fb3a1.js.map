{"version":3,"file":"js/48602.bcbb6c0426bcdc1fb3a1.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/beta6C33-1.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, calcul } from '../../modules/outils.js'\nexport const titre = 'Parenthèses manquantes'\n\n/**\n * Priorités opératoires, placer les parenthèses.\n * @author Cédric Grolleau\n * Référence 6C33-1\n */\nexport default function Priorites () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Si besoin, ajoute des parenthèses pour rendre l'égalité correcte. <br> S'il y a plusieurs fois la même égalité trouve des solutions différentes.\"\n  this.nbQuestions = 2\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.spacing = 3\n  this.spacingCorr = 3\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let texte; let texteCorr; let a; let b; let c; let d; let i; let e\n    let m; let n; let f; let l; let g; let k; let p; let prevchoice; let choice; let cpt = 0 //\n    texte = ''\n    texteCorr = ''\n    for (i = 0; i < this.nbQuestions && cpt < 50;) {\n      e = randint(1, 3)\n      m = randint(1, 3)\n      n = randint(1, 6)\n      f = randint(1, 4)\n      l = randint(1, 4)\n      g = randint(2, 3)\n      k = calcul(f * e)\n      c = calcul(m * e)\n      a = calcul(n * c)\n      b = calcul(k * c)\n      d = calcul(c * e * l)\n      prevchoice = []\n      texte = ''\n      texteCorr = ''\n      for (p = 0; p < 3; p++) {\n        choice = randint(0, 6, prevchoice)\n        prevchoice.push(choice)\n        switch (choice) {\n          case 0:\n            texte += `$ ${a} + ${b} \\\\div ${c} + ${d} \\\\div ${e} + ${f} \\\\times ${g} = ${calcul(a + b / c + (d / e + f) * g)} $ <br> `\n            texteCorr += `$${a} + ${b} \\\\div ${c} + ${d} \\\\div ${e} + ${f} \\\\times ${g} = ${calcul(a + b / c + (d / e + f) * g)} $<br>`\n            break\n          case 1:\n            texte += `$ ${a} + ${b} \\\\div ${c} + ${d} \\\\div ${e} + ${f} \\\\times ${g} = ${calcul((a + b) / c + d / e + f * g)}  $<br>`\n            texteCorr += `$ (${a} + ${b}) \\\\div ${c} + ${d} \\\\div ${e} + ${f} \\\\times ${g} = ${calcul((a + b) / c + d / e + f * g)} $<br>`\n            break\n          case 2:\n            texte += `$ ${a} + ${b} \\\\div ${c} + ${d} \\\\div ${e} + ${f} \\\\times ${g} = ${calcul((a + b / c + d / e + f) * g)} $<br>`\n            texteCorr += `$ ( ${a} + ${b} \\\\div ${c} + ${d} \\\\div ${e} + ${f} ) \\\\times ${g} = ${calcul((a + b / c + d / e + f) * g)} $<br>`\n            break\n          case 3:\n            texte += `$ ${a} + ${b} \\\\div ${c} + ${d} \\\\div ${e} + ${f} \\\\times ${g} = ${calcul((a + b / c + d) / e + f * g)} $<br>`\n            texteCorr += `$ (${a} + ${b} \\\\div ${c} + ${d}) \\\\div ${e} + ${f} \\\\times ${g} = ${calcul((a + b / c + d) / e + f * g)} $<br>`\n            break\n          case 4:\n            texte += `$ ${a} + ${b} \\\\div ${c} + ${d} \\\\div ${e} + ${f} \\\\times ${g} = ${calcul(((a + b) / c + d / e + f) * g)} $<br>`\n            texteCorr += `$ ((${a} + ${b}) \\\\div ${c} + ${d} \\\\div ${e} + ${f}) \\\\times ${g} = ${calcul(((a + b) / c + d / e + f) * g)} $<br>`\n            break\n          case 5:\n            texte += `$ ${a} + ${b} \\\\div ${c} + ${d} \\\\div ${e} + ${f} \\\\times ${g} = ${calcul(a + (b / c + d) / e + f * g)} $<br>`\n            texteCorr += `$ ${a} + ( ${b} \\\\div ${c} + ${d} ) \\\\div ${e} + ${f} \\\\times ${g} = ${calcul(a + (b / c + d) / e + f * g)} $<br>`\n            break\n          case 6:\n            texte += `$ ${a} + ${b} \\\\div ${c} + ${d} \\\\div ${e} + ${f} \\\\times ${g} = ${calcul(a + b / c + d / e + f * g)} $ <br> `\n            texteCorr += `$${a} + ${b} \\\\div ${c} + ${d} \\\\div ${e} + ${f} \\\\times ${g} = ${calcul(a + b / c + d / e + f * g)} $<br>`\n            break\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","Priorites","texte","texteCorr","a","b","c","d","e","m","n","f","l","g","k","p","prevchoice","choice","cpt","randint","calcul","listeQuestionsToContenu"],"sourceRoot":""}