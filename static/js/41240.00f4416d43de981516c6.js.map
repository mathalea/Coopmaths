{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/_Tables_de_multiplications.js","webpack://mathalea/./src/js/exercices/CM/CM001.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["TablesDeMultiplications","tablesParDefaut","Exercice","this","sup","sup2","titre","consigne","spacing","interactif","amcType","interactifType","nouvelleVersion","parseInt","listeQuestions","listeCorrections","tables","split","couples","creerCouples","nbQuestions","typesDeQuestions","a","b","texte","texteCorr","i","choice","texNombre","ajouteChampTexte","setReponse","length","randint","context","replace","autoCorrection","reponse","param","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","push","listeQuestionsToContenu","besoinFormulaireTexte","besoinFormulaire2Numerique","interactifReady","amcReady","TablesParametres","tables_par_defaut","tailleDiaporama","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/41240.00f4416d43de981516c6.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, creerCouples, choice, texNombre, randint } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\n/**\n * Tables de multiplications classiques, à trou ou un mélange des deux.\n *\n * Par défaut ce sont les tables de 2 à 9 mais on peut choisir les tables que l'on veut\n * @author Rémi Angot\n * Référence 6C10-1\n */\nexport default function TablesDeMultiplications (tablesParDefaut = '2-3-4-5-6-7-8-9') {\n  // Multiplier deux nombres\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.sup = tablesParDefaut\n  this.sup2 = 1 // classique|a_trous|melange\n  this.titre = 'Tables de multiplications'\n  this.consigne = 'Calculer'\n  this.spacing = 2\n  this.interactif = true\n  this.amcType = 4\n  this.interactifType = 'numerique'\n\n  this.nouvelleVersion = function () {\n    this.sup2 = parseInt(this.sup2)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (!this.sup) {\n      // Si aucune table n'est saisie\n      this.sup = '2-3-4-5-6-7-8-9'\n    }\n    let tables = []\n    if (typeof this.sup === 'number') {\n      // Si c'est un nombre c'est qu'il y a qu'une seule table\n      tables[0] = this.sup\n    } else {\n      tables = this.sup.split('-') // Sinon on crée un tableau à partir des valeurs séparées par des -\n    }\n    const couples = creerCouples(\n      tables,\n      [2, 3, 4, 5, 6, 7, 8, 9, 10],\n      this.nbQuestions\n    ) // Liste tous les couples possibles (2,3)≠(3,2)\n    let typesDeQuestions = 'a_trous'\n    for (let i = 0, a, b, texte, texteCorr; i < this.nbQuestions; i++) {\n      a = couples[i][0]\n      b = couples[i][1]\n      if (this.sup2 === 1) {\n        typesDeQuestions = 'classique'\n      } else if (this.sup2 === 2) {\n        typesDeQuestions = 'a_trous'\n      } else {\n        typesDeQuestions = choice(['classique', 'a_trous'])\n      }\n      if (typesDeQuestions === 'classique') {\n        // classique\n        if (choice([true, false])) {\n          texte = `$ ${texNombre(a)} \\\\times ${texNombre(b)} = \\\\dotfill$`\n          texteCorr = `$ ${texNombre(a)} \\\\times ${texNombre(b)} = ${texNombre(a * b)}$`\n          if (this.interactif) texte = `$ ${texNombre(a)} \\\\times ${texNombre(b)} = $` + ajouteChampTexte(this, i)\n          setReponse(this, i, a * b)\n        } else {\n          texte = `$ ${texNombre(b)} \\\\times ${texNombre(a)} = \\\\dotfill$`\n          texteCorr = `$ ${texNombre(b)} \\\\times ${texNombre(a)} = ${texNombre(a * b)}$`\n          if (this.interactif) texte = `$ ${texNombre(b)} \\\\times ${texNombre(a)} = $` + ajouteChampTexte(this, i)\n          setReponse(this, i, a * b)\n        }\n      } else {\n        // a trous\n        if (tables.length > 2) {\n          // Si pour le premier facteur il y a plus de 2 posibilités on peut le chercher\n          if (randint(1, 2) === 1) {\n            texte = '$ ' + a + ' \\\\times \\\\ldots\\\\ldots = ' + a * b + ' $'\n            if (this.interactif) {\n              texte = `$ ${a} \\\\times $` + ajouteChampTexte(this, i) + `$ = ${a * b} $`\n              setReponse(this, i, b)\n            }\n          } else {\n            texte = '$ \\\\ldots\\\\ldots' + ' \\\\times ' + b + ' = ' + a * b + ' $'\n            if (this.interactif) {\n              texte = ajouteChampTexte(this, i) + `$ \\\\times ${b}  = ${a * b} $`\n              setReponse(this, i, a)\n            }\n          }\n        } else {\n          // Sinon on demande forcément le 2e facteur\n          texte = '$ ' + a + ' \\\\times \\\\ldots\\\\ldots = ' + a * b + ' $'\n          if (this.interactif) texte = ajouteChampTexte(this, i) + `$ \\\\times ${b}  = ${a * b} $`\n          setReponse(this, i, b)\n        }\n        texteCorr = '$ ' + a + ' \\\\times ' + b + ' = ' + a * b + ' $'\n      }\n      if (context.isDiaporama) {\n        texte = texte.replace('= \\\\dotfill', '')\n      }\n      this.autoCorrection[i].reponse.param = { digits: 2, decimals: 0, signe: false, exposantNbChiffres: 0, exposantSigne: false, approx: 0 }\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireTexte = [\n    'Choix des tables',\n    'Nombres séparés par des tirets'\n  ] // Texte, tooltip\n  this.besoinFormulaire2Numerique = [\n    'Style de questions',\n    3,\n    '1 : Classique\\n2: À trous\\n3: Mélangé'\n  ]\n}\n","import TablesDeMultiplications from '../6e/_Tables_de_multiplications.js'\n\nexport const titre = 'Tables de multiplication'\nexport const interactifReady = true\nexport const interactifType = 'numerique'\nexport const amcReady = true\nexport const amcType = 4 // Question numérique\n\n/**\n * Tables de multiplications classiques, à trou ou un mélange des deux.\n *\n * Par défaut ce sont les tables de 2 à 9 mais on peut choisir les tables que l'on veut\n * @author Rémi Angot\n * Référence 6C10-1\n */\nexport default function TablesParametres (tables_par_defaut = '2-3-4-5-6-7-8-9') {\n  TablesDeMultiplications.call(this, tables_par_defaut)\n  this.titre = titre\n  this.amcReady = amcReady\n  this.amcType = amcType\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.tailleDiaporama = 100\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}