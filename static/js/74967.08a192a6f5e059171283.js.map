{"version":3,"file":"js/74967.08a192a6f5e059171283.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4P10-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListesSansChangerOrdre, calcul, prenom, texteEnCouleur, texteGras, texPrix, numAlpha } from '../../modules/outils.js'\nimport { point, segment, repere, courbe, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Résoudre un problème de proportionnalité à l’aide d’un graphique'\n\n/**\n * fork de 4P10-1 par Jean-Claude Lhote\n */\n\nexport default function GraphiquesEtProportionnalite2 () {\n  'use strict'\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.debug = false\n  if (this.debug) {\n    this.nbQuestions = 2\n  } else {\n    this.nbQuestions = 1\n  };\n\n  this.titre = titre\n  this.consigne = ''\n\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  // this.nbQuestionsModifiable = false;\n  context.isHtml ? this.spacing = 2 : this.spacing = 1\n  // context.isHtml? this.spacingCorr = 3 : this.spacingCorr = 2;\n\n  let typesDeQuestionsDisponibles\n\n  this.nouvelleVersion = function () {\n    if (this.debug) {\n      typesDeQuestionsDisponibles = [1]\n    } else {\n      typesDeQuestionsDisponibles = [1]\n    };\n\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    // typesDeQuestionsDisponibles=[1];\n\n    // let listeTypeDeQuestions  = combinaisonListes(typesDeQuestionsDisponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    const listeTypeDeQuestions = combinaisonListesSansChangerOrdre(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // on prévoit un peu d'aléatoire pour les prix unitaires\n      const prixUnitaireOranges = choice([1.2, 1.4, 1.6, 1.8])\n      const prixUnitaireBaguettes = choice([0.6, 0.8, 1.2])\n      // on prévoit un tableau avec des situations\n      const situations = [\n        { lieu: 'l\\'épicerie', prenom: prenom(), articles: 'oranges', art_articles: 'd\\'oranges', prix_unitaire: prixUnitaireOranges, qte: 'poids', qte_max: 10, qte2: 3, unite: 'kg d\\'', legendeX: 'poids en kg', legendeY: 'prix en €', fig: {}, figureCorr: {} },\n        { lieu: 'la boulangerie', prenom: prenom(), articles: 'baguettes', art_articles: 'de baguettes', prix_unitaire: prixUnitaireBaguettes, qte: 'nombre', qte_max: 10, qte2: 3, unite: '', legendeX: 'quantité', legendeY: 'prix en €', fig: {}, figureCorr: {} }\n      ]\n      // on en choisit une\n      const situation = situations[randint(0, situations.length - 1)]\n      let r\n      const xscale = 1\n      const yscale = choice([1, 2, 5])\n      // pour aléatoiriser un peu le pas sur l'axe des prix\n      let stepAxeSecondaire\n      if (yscale === 1) stepAxeSecondaire = choice([0.5, 0.2, 0.25])\n      // on finit les appels\n      const mesAppels = [\n        r = repere({\n          xmin: 0,\n          ymin: 0,\n          ymax: situation.qte_max * situation.prix_unitaire + 4,\n          xmax: situation.qte_max,\n          xscale: xscale,\n          yscale: yscale,\n          legendeX: situation.legendeX,\n          legendeY: situation.legendeY,\n          grilleSecondaireVisible: true,\n          grilleSecondaireDistance: stepAxeSecondaire, // 0.2,\n          positionLegendeY: [0.3, situation.qte_max * situation.prix_unitaire + 4 + 0.4]\n        })\n      ]\n      const f = x => calcul(situation.prix_unitaire * x)\n      mesAppels.push(f, courbe(f, 0, situation.qte_max, 'black', 1.5, r))\n      // on prépare l'objet figure\n      const fig = mathalea2d(\n        {\n          xmin: -xscale,\n          ymin: -yscale,\n          xmax: situation.qte_max / xscale + 3,\n          ymax: (situation.qte_max * situation.prix_unitaire + 4) / 2 + 1,\n          pixelsParCm: 40\n        },\n        mesAppels\n      )\n      situation.fig = fig\n\n      // on prépare les appels supplémentaires pour la correction\n      const mesAppelsCorr = mesAppels\n      const A = point(situation.qte_max, 0)\n      const B = point(situation.qte_max, calcul(situation.qte_max * situation.prix_unitaire / yscale))\n      const s1 = segment(A, B, 'red')\n      s1.epaisseur = 2\n      s1.pointilles = true\n      s1.styleExtremites = '->'\n      const C = point(0, calcul(situation.qte_max * situation.prix_unitaire / yscale))\n      const s2 = segment(B, C, 'red')\n      s2.epaisseur = 2\n      s2.pointilles = true\n      s2.styleExtremites = '->'\n\n      const D = point(situation.qte2, 0)\n      const E = point(situation.qte2, calcul(situation.qte2 * situation.prix_unitaire / yscale))\n      const s3 = segment(D, E, 'blue')\n      s3.epaisseur = 2\n      s3.pointilles = true\n      s3.styleExtremites = '->'\n      const F = point(0, calcul(situation.qte2 * situation.prix_unitaire / yscale))\n      const s4 = segment(E, F, 'blue')\n      s4.epaisseur = 2\n      s4.pointilles = true\n      s4.styleExtremites = '->'\n\n      // on ajoute les appels pour la correction\n      mesAppelsCorr.push(\n        s1,\n        s2,\n        s3,\n        s4\n      )\n\n      // on prépare l'objet figure correction\n      const figureCorr = mathalea2d(\n        {\n          xmin: -xscale,\n          ymin: -yscale,\n          xmax: situation.qte_max / xscale + 3,\n          ymax: (situation.qte_max * situation.prix_unitaire + 4) / 2 + 1,\n          pixelsParCm: 40\n        },\n        mesAppelsCorr\n      )\n      situation.figureCorr = figureCorr\n\n      // un compteur pour les sous-questions\n      let k = 0\n      let kCorr = 0\n\n      const enonces = []\n      enonces.push({\n        enonce: `\n          À ${situation.lieu}, ${situation.prenom} utilise le graphique ci-dessous pour indiquer le prix de ses ${situation.articles} en fonction du ${situation.qte} ${situation.art_articles}.\n          <br>${situation.fig}\n          <br> ${numAlpha(k++)} Justifier que c'est une situation de proportionnalité à l'aide du graphique.\n          <br> ${numAlpha(k++)} Quel est le prix de $${situation.qte_max}$ ${situation.unite}  ${situation.articles}?\n          <br> ${numAlpha(k++)} Quel est le prix de $${situation.qte2}$ ${situation.unite}  ${situation.articles}?\n          `,\n        // question:``,\n        correction: `\n        <br> ${numAlpha(kCorr++)} Ce graphique est une droite qui passe par l'origine.\n        <br> ${texteEnCouleur('C\\'est donc bien le graphique d\\'une situation de proportionnalité.')}\n\n        <br> ${numAlpha(kCorr++)} Par lecture graphique, en utilisant les pointillés rouges du graphe ci-dessous, ${texteEnCouleur(`$${situation.qte_max}$ ${situation.unite}  ${situation.articles} coûtent $${texPrix(calcul(situation.qte_max * situation.prix_unitaire))}$ €.`)}\n        <br> ${situation.figureCorr}\n        <br> ${numAlpha(kCorr++)} Pour $${situation.qte2}$ ${situation.unite}  ${situation.articles}, la lecture graphique est moins facile, nous allons détailler deux méthodes.\n        <br><br> ${texteGras('Première méthode par lecture graphique :')} \n        <br> Il faut prendre en compte que chaque petit carreau représente $${texPrix(stepAxeSecondaire * yscale)}$ € et utiliser les pointillés bleus.\n        <br><br> ${texteGras('Seconde méthode en calculant une quatrième proportionnelle :')}\n        <br> $${situation.qte_max}$ ${situation.unite}  ${situation.articles} coûtent $${texPrix(calcul(situation.qte_max * situation.prix_unitaire))}$ €\n        donc $${situation.qte2}$ ${situation.unite}  ${situation.articles} coûtent : <br> $(${texPrix(calcul(situation.qte_max * situation.prix_unitaire))}$ € $\\\\div ${situation.qte_max}$ ${situation.articles} $)\\\\times (${situation.qte2}$ ${situation.articles})  $= ${texPrix(calcul(situation.qte2 * situation.prix_unitaire))}$ €\n        <br><br>${texteEnCouleur(`Quelle que soit la méthode utilisée, ${situation.qte2} ${situation.unite}  ${situation.articles} coûtent $${texPrix(calcul(situation.qte2 * situation.prix_unitaire))}$ €.`)}\n        `\n      })\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte = `${enonces[0].enonce}`\n          // texte = `${fig}`;\n          if (this.debug) {\n            texte += '<br>'\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`\n            texteCorr = ''\n          } else {\n            texteCorr = `${enonces[0].correction}`\n          };\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  // this.besoinFormulaire2CaseACocher = [\"Avec des équations du second degré\"];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","GraphiquesEtProportionnalite2","typesDeQuestionsDisponibles","Exercice","this","debug","nbQuestions","consigne","nbCols","nbColsCorr","context","spacing","nouvelleVersion","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","texte","texteCorr","i","cpt","prixUnitaireOranges","choice","prixUnitaireBaguettes","situations","lieu","prenom","articles","art_articles","prix_unitaire","qte","qte_max","qte2","unite","legendeX","legendeY","fig","figureCorr","situation","randint","length","r","xscale","yscale","stepAxeSecondaire","mesAppels","repere","xmin","ymin","ymax","xmax","grilleSecondaireVisible","grilleSecondaireDistance","positionLegendeY","f","x","calcul","push","courbe","mathalea2d","pixelsParCm","mesAppelsCorr","A","point","B","s1","segment","epaisseur","pointilles","styleExtremites","C","s2","D","E","s3","F","s4","k","kCorr","enonces","enonce","numAlpha","correction","texteEnCouleur","texPrix","texteGras","indexOf","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}