{"version":3,"file":"js/98193.e3ffc1de20d02ce665db.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaAsymptotesObliques.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { xcas, listeQuestionsToContenu, randint, combinaisonListes, texFraction } from '../../modules/outils.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nexport const titre = 'Asymptote oblique'\n\n/**\n * Description didactique de l'exercice\n * @author Eric Schrafstetter\n * Référence\n*/\nexport default function NomQuelconqueDeLaFonctionQuiCreeExercice () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Montrez que la fonction $f$ admet une asymptote oblique en $+\\\\infty$ dont on donnera l\\'équation et la position relative'\n  this.nbQuestions = 2\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  this.typeExercice = 'XCas'\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1)\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typesDeQuestionsDisponibles = ['type1'] // On créé 3 types de questions\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, etape, signe, texteCorr, a, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeDeQuestions[i]) {\n        case 'type1':\n          a = randint(-5, 5, 0)\n        \n          etape = `${xcas('f:=(2*randint(0,1)-1) * randint(4) * x + randint(10) + (2*randint(0,1)-1) * randint(10) / randpoly(1)')}` // f\n          // Numérateur, Dénominateur, Quotient, Reste\n          etape = [\n            'N:=numer(f)','D:=denom(f)','Q:=quo(N,D)','R:=rem(N,D)'\n          ].forEach(e => `${xcas(e)}`) \n\n          etape = `${xcas('P:=piecewise(numer(f-Q)>0,\\'dessus\\',\\'dessous\\')')}` // par le dessus ou le dessous\n          signe = `${xcas('P')}`.includes('dessus') ? '+' : '-'\n          // Etapes de la division\n          etape = [\n            'E1:=simplify(lcoeff(N)*x*D)',\n            'E2:=simplify(N-E1)',\n            'E3:=simplify(lcoeff(E2)*D)',\n            'E4:=simplify(E2-E3)'\n          ].forEach(e => `${xcas(e)}`)\n          // Enoncé\n          texte = `$f(x)=${texFraction(xcas('N'), xcas('D'))}$`\n          // Corrigé\n          texteCorr = `Cherchons un candidat pour être l'asymptote oblique en effectuant la division de $${xcas('N')}$ par $${xcas('D')}$ :`\n          texteCorr += `<br>$\\\\begin{array}{r|l} ${xcas('N')} & ${xcas('D')}\\\\\\\\`\n          texteCorr += `\\\\underline{-(${xcas('E1')})} & \\\\overline{${xcas('Q')}}\\\\\\\\`\n          texteCorr += `${xcas('E2')} & \\\\\\\\`\n          texteCorr += `\\\\underline{-(${xcas('E3')})} & \\\\\\\\`\n          texteCorr += `${xcas('E4')} & \\\\end{array}$`\n          texteCorr += `<br>On en déduit que $f(x)=${texFraction(xcas('N'), xcas('D'))}=${xcas('Q')}+${texFraction(xcas('R'), xcas('D'))}$`\n          texteCorr += `<br>Vérifions que $D:y=${xcas('Q')}$ est asymptote oblique à la courbe de $f$ en $+\\\\infty$ :`\n          texteCorr += `<br>$\\\\lim\\\\limits_{x\\\\to+\\\\infty}f(x)-(${xcas('Q')})=`\n          texteCorr += `\\\\lim\\\\limits_{x\\\\to+\\\\infty}${xcas('normal(f-Q)')}=`\n          texteCorr += `\\\\dfrac{${xcas('numer(f-Q)')}}{${xcas('limit(D,x,+inf)')}}=0^${signe}$`\n          texteCorr += `<br>De plus la fonction $f$ se rapproche de l'asymptote $D$ par le $${xcas('P')}$.`\n          break\n        case 'type2':\n          break\n        case 'type3':\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  //this.besoinFormulaireNumerique = ['Niveau de difficulté', 3]\n}\n\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","NomQuelconqueDeLaFonctionQuiCreeExercice","sup","typeExercice","context","listeTypeDeQuestions","combinaisonListes","texte","etape","signe","texteCorr","a","cpt","randint","xcas","forEach","e","includes","texFraction","listeQuestionsToContenu"],"sourceRoot":""}