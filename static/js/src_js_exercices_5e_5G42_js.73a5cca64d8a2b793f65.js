/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_5e_5G42_js"],{

/***/ "./src/js/exercices/5e/5G42.js":
/*!*************************************!*\
  !*** ./src/js/exercices/5e/5G42.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ demonstrations_parallelogrammes)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n/* harmony import */ var _modules_2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/2d.js */ \"./src/js/modules/2d.js\");\n\n\n\nconst titre = 'Nature de parallélogrammes'\n\n/**\n * Description didactique de l'exercice\n * @Auteur \n * Référence \n*/\nfunction demonstrations_parallelogrammes() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nb_questions = 7;\n  this.nb_cols = 1; // Uniquement pour la sortie LaTeX\n  this.nb_cols_corr = 1; // Uniquement pour la sortie LaTeX\n  this.tailleDiaporama = 50; // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = \"\" // Id YouTube ou url\n\n  this.nouvelle_version = function () {\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n\n    let type_de_questions_disponibles = ['type1','type2','type3','type4','type5','type6','type7']; // On créé 3 types de questions\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(type_de_questions_disponibles,this.nb_questions); // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0,objets,O,A,B,C,D,p,t1,t2,t3,t4,s1,s2,s3,s4,d1,d2, texte, texte_corr,noms,nom,prop1,prop2,type,def,centre, cpt = 0; i < this.nb_questions && cpt < 50;) {\n      noms=(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choisit_lettres_differentes)(5,'Q')\n      nom=`$${noms[0]+noms[1]+noms[2]+noms[3]}$`\n      centre=`$${noms[4]}$`\n      objets=[]\n      O=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(0,0,noms[4],'above left')\n      A=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.rotation)((0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.point)(3,0),O,(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0,90),noms[0])\n      B=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.similitude)(A,O,80+(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0,20),0.8+(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1,40)/100,noms[1])\n      C=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.similitude)(A,O,180,0.9+(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1,20)/100,noms[2])\n      D=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.similitude)(B,O,180,0.9+(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1,20)/100,noms[3])\n      p=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.polygoneAvecNom)(A,B,C,D)\n      s1=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(A,B)\n      s2=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(B,C)\n      s3=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(C,D)\n      s4=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(D,A)\n      d1=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(A,C)\n      d2=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.segment)(B,D)\n      s1.color='blue'\n      s3.color='blue'\n      s2.color='red'\n      s4.color='red'\n      objets.push(s1,s2,s3,s4,p[1])\n        // Boucle principale où i+1 correspond au numéro de la question\n      switch (liste_type_de_questions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'type1': // rectangle 1\n          def=`ses diagonales $[${noms[0]+noms[2]}]$ et $[${noms[1]+noms[3]}]$ ont la même longueur`\n          prop1=`a des diagonales de même longueur`\n          prop2=`$${noms[0]+noms[2]}=${noms[1]+noms[3]}$`\n          type=`rectangle`\n          t2=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||','red',B,O,O,D)\n          t1=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||','red',A,O,O,C)\n          objets.push(t1,t2,d1,d2) \n          break;\n        case 'type2': // losange 1\n        def=`ses diagonales $[${noms[0]+noms[2]}]$ et $[${noms[1]+noms[3]}]$ sont perpendiculaires`\n        prop1=`a des diagonales perpendiculaires`\n        prop2=`$[${noms[0]+noms[2]}]\\\\perp[${noms[1]+noms[3]}]$`\n        type=`losange`\n        t1=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||','red',A,O,O,C)\n        t2=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A,O,D)\n        t3=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('|||','blue',B,O,O,D)\n        t4=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O)    \n        objets.push(t1,t2,t3,t4,d1,d2)   \n          break;\n        case 'type3': // carré 1\n        prop2=`$[${noms[0]+noms[2]}]\\\\perp[${noms[1]+noms[3]}]$ et $${noms[0]+noms[2]}=${noms[1]+noms[3]}$`\n        def=`ses diagonales $[${noms[0]+noms[2]}]$ et $[${noms[1]+noms[3]}]$ ont la même longueur et sont perpendiculaires`\n        prop1=`a des diagonales perpendiculaires et de même longueur`\n        t1=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||','red',A,O,O,C)\n        t2=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A,O,D)\n        t3=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('||','red',B,O,O,D)\n        t4=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O)     \n        objets.push(t1,t2,t3,t4,d1,d2)  \n        type=`carré`\n          break;\n          case 'type4': //losange 2\n          prop2=`$${noms[0]+noms[1]}=${noms[1]+noms[2]}$`\n          def=`ses côtés $[${noms[0]+noms[1]}]$ et $[${noms[1]+noms[2]}]$ ont la même longueur`\n          prop1=`a deux côtés consécutifs de même longueur`\n          type=`losange`\n          t3=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('O','green',A,B,B,C)\n          objets.push(t3)      \n            break;\n          case 'type5': // rectangle 2\n          prop2=`$[${noms[0]+noms[1]}]\\\\perp[${noms[1]+noms[2]}]$`\n          def=`ses côtés $[${noms[0]+noms[1]}]$ et $[${noms[1]+noms[2]}]$ sont perpendiculaires`\n          prop1=`a deux côtés consécutifs perpendiculaires`\n          t3=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A,B,C)\n          objets.push(t3)      \n          type=`rectangle`\n            break;\n            case 'type6': // carré 2\n            prop2=`$[${noms[0]+noms[1]}]\\\\perp[${noms[1]+noms[2]}]$ et $${noms[0]+noms[1]}=${noms[1]+noms[2]}$`\n          def=`ses côtés $[${noms[0]+noms[1]}]$ et $[${noms[1]+noms[2]}]$ sont perpendiculaires et de même longueur`\n          prop1=`a deux côtés consécutifs perpendiculaires et de même longueur`\n          t2=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codeSegments)('O','green',A,B,B,C)\n          t3=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A,B,C)\n          objets.push(t2,t3)\n          type=`carré`\n            break;\n            case 'type7': // carré 3\n            prop2=`$[${noms[0]+noms[1]}]\\\\perp[${noms[1]+noms[2]}]$ et $[${noms[0]+noms[2]}]\\\\perp[${noms[1]+noms[3]}]$`           \n          def=`ses côtés $[${noms[0]+noms[1]}]$ et $[${noms[1]+noms[2]}]$ sont perpendiculaires et ses diagonales $[${noms[0]+noms[2]}]$ et $[${noms[1]+noms[3]}]$ aussi`\n          prop1=`a deux côtés consécutifs perpendiculaires et des diagonales perpendiculaires`\n          type=`carré`\n          t1=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A,O,B)\n          t2=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.codageAngleDroit)(A,B,C)\n          t4=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.labelPoint)(O)  \n          objets.push(t1,t2,t4,d1,d2)     \n            break;\n\n      }\n      texte = `${nom} est un parallélogramme tel que ${def}.<br>`;\n      texte+=`Déterminer la nature de ${nom} en justifiant la réponse.`\n      texte_corr=`Les segments de même couleur sont parallèles sur le schéma suivant :<br>`\n      texte_corr+=(0,_modules_2d_js__WEBPACK_IMPORTED_MODULE_2__.mathalea2d)({xmin:-5,ymin:-4.5,xmax:5,ymax:4.5,pixelsParCm:20,scale:0.5,mainlevee:true,amplitude:0.3},objets)+'<br>'\n      texte_corr+=`On sait que ${prop2}.<br>`\n      texte_corr += `Si un parralélogramme ${prop1}, alors c'est un ${type}.<br>`;\n      texte_corr +=`${nom} est donc un ${type}.`\n\n      if (this.liste_questions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n  };\n  //this.besoin_formulaire_numerique = ['Niveau de difficulté',3];\n}\n\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/5e/5G42.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);