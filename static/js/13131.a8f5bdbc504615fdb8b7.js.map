{"version":3,"file":"js/13131.a8f5bdbc504615fdb8b7.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/1e/1E14.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, rienSi1, ecritureAlgebrique, ecritureAlgebriqueSauf1, ecritureParentheseSiNegatif } from '../../modules/outils.js'\n// import { setReponse, ajouteChampTexteMathLive } from '../../modules/gestionInteractif.js'\n// import { courbeSpline } from '../../modules/2d.js'\n// export const interactifReady = true\n// export const interactifType = 'mathLive'\nexport const titre = 'Factoriser un polynôme du second degré avec racines entières'\n\n/**\n *\n * @author Rémi Angot et Stéphane Guyon\n * Référence 1E14\n*/\nexport default function ResoudreEquationDegre2 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Factoriser les polynômes suivants : '\n  this.nbQuestions = 4\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacingCorr = 3\n  this.sup = 1\n\n  this.nouvelleVersion = function () {\n    this.sup = Number(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeTypeDeQuestions\n    // if (this.interactif) {\n    //  this.consigne += '<br>S\\'il n\\'y a pas de solution, écrire Non'\n    // }\n    if (this.sup === 1) {\n      listeTypeDeQuestions = combinaisonListes(['solutionsEntieres', 'solutionsEntieres', 'pasDeSolution'], this.nbQuestions)\n    }\n\n    for (let i = 0, texte, texteCorr, a, b, c, x1, x2, y1, k, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      if (listeTypeDeQuestions[i] === 'solutionsEntieres') {\n        // k(x-x1)(x-x2)\n        x1 = randint(-5, 2, [0])\n        x2 = randint(x1 + 1, 5, [0, -x1])\n        k = randint(-4, 4, [0])\n        a = k\n        b = -k * x1 - k * x2\n        c = k * x1 * x2\n\n        texte = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        texte += '<br>Donner si possible une écriture factorisée de $P(x).$'\n\n        texteCorr = `On a $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        texteCorr += '<br>On reconnaît un polynôme du second degré. On cherche ses éventuelles racines en calculant son discriminant.'\n        texteCorr += `<br>$\\\\Delta = ${ecritureParentheseSiNegatif(b)}^2-4\\\\times${ecritureParentheseSiNegatif(a)}\\\\times${ecritureParentheseSiNegatif(c)}=${b * b - 4 * a * c}$`\n        texteCorr += '<br>$\\\\Delta>0$ donc $P(x)$ admet deux racines :'\n        texteCorr += '<br> $x_1 = \\\\dfrac{-b-\\\\sqrt{\\\\Delta}}{2a}$ et $x_2 = \\\\dfrac{-b+\\\\sqrt{\\\\Delta}}{2a}$'\n        texteCorr += `<br>$x_1 =\\\\dfrac{${-b}-\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x1}$`\n        texteCorr += `<br>$x_2 =\\\\dfrac{${-b}+\\\\sqrt{${b * b - 4 * a * c}}}{${2 * a}}=${x2}$`\n        texteCorr += '<br>On peut donc factoriser le polynôme sous la forme : $P(x)=a(x-x_1)(x-x_2)$'\n        texteCorr += `<br>$P(x)=${rienSi1(a)}\\\\left(x${ecritureAlgebrique(-x1)}\\\\right)\\\\left(x ${ecritureAlgebrique(-x2)}\\\\right)$.`\n        // setReponse(this, i, [`${x1} ; ${x2}`, `${x2} ; ${x1}`])\n      }\n\n      if (listeTypeDeQuestions[i] === 'pasDeSolution') {\n        k = randint(1, 5)\n        x1 = randint(-3, 3, [0])\n        y1 = randint(1, 5)\n        if (choice(['+', '-']) === '+') { // k(x-x1)^2 + y1 avec k>0 et y1>0\n          a = k\n          b = -2 * k * x1\n          c = k * x1 * x1 + y1\n        } else { // -k(x-x1)^2 -y1 avec k>0 et y1>0\n          a = -k\n          b = 2 * k * x1\n          c = -k * x1 * x1 - y1\n        }\n        texte = `Soit $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        texte += '<br>Donner si possible une écriture factorisée de $P(x).$'\n\n        texteCorr = `On a $P$ le polynôme défini pour tout $x$ de $\\\\mathbb R$ par $P(x)=${rienSi1(a)}x^2${ecritureAlgebriqueSauf1(b)}x${ecritureAlgebrique(c)}$`\n        texteCorr += '<br>On reconnaît un polynôme du second degré. On cherche ses éventuelles racines en calculant son discriminant.'\n        texteCorr += '<br>$\\\\Delta<0$ donc le polynôme n\\'admet pas de racines réelles.'\n        texteCorr += '<br>D\\'après le cours, il n\\'est pas factorisable.'\n        // setReponse(this, i, ['Non', 'non', 'NON'])\n      }\n      // texte += ajouteChampTexteMathLive(this, i)\n      if (this.questionJamaisPosee(i, a, b, c)) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Solutions entières\\n2 : Solutions réelles et calcul du discriminant non obligatoire']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","ResoudreEquationDegre2","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","spacingCorr","sup","nouvelleVersion","listeTypeDeQuestions","Number","listeQuestions","listeCorrections","combinaisonListes","texte","texteCorr","a","b","c","x1","x2","y1","k","i","cpt","randint","rienSi1","ecritureAlgebriqueSauf1","ecritureAlgebrique","ecritureParentheseSiNegatif","choice","questionJamaisPosee","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}