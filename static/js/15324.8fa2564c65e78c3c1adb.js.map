{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","MultiplierEntierPar101001000","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","numeroExercice","boutonAide","modalUrl","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","choice","listeTypeDeQuestions","combinaisonListes","listeDeB","parseInt","texte","texteCorr","a","b","i","cpt","randint","texNombre","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","listePackages"],"mappings":"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","file":"js/15324.8fa2564c65e78c3c1adb.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, texNombre, modalUrl } from '../../modules/outils.js'\nexport const titre = 'Multiplier un entier par 10, 100, 1 000...'\n\n/**\n * Un nombre à 2 chiffres (non multiple de 10) + 9\n * @author Rémi Angot\n * Référence 6N12\n */\nexport default function MultiplierEntierPar101001000 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Calculer'\n  this.nbQuestions = 8\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 2\n\n  this.nouvelleVersion = function (numeroExercice) {\n    this.boutonAide = modalUrl(numeroExercice, 'https://mathix.org/glisse-nombre/index.html',\n      'Glisse-nombre'\n    )\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = [1, 2, 3, 4, choice([5, 6]), 7, 8, 9]\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    let listeDeB = []\n    if (parseInt(this.sup) === 2) {\n      listeDeB = combinaisonListes([10, 100, 1000, 10000, 100000], this.nbQuestions)\n    } else {\n      listeDeB = combinaisonListes([10, 100, 1000], this.nbQuestions)\n    }\n    for (\n      let i = 0, texte, texteCorr, a, b, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          a = randint(1, 9)\n          break\n        case 2:\n          a = randint(2, 9) * 10\n          break\n        case 3:\n          a = randint(2, 9) * 100\n          break\n        case 4:\n          a = randint(2, 9) * 1000\n          break\n        case 5:\n          a = randint(1, 9) * 100 + randint(1, 9)\n          break\n        case 6:\n          a = randint(1, 9) * 1000 + randint(1, 9)\n          break\n        case 7:\n          a = randint(1, 9) * 100 + randint(1, 9) * 10 + randint(1, 9)\n          break\n        case 8:\n          a = randint(1, 9) * 10000 + randint(1, 9) * 100\n          break\n        case 9:\n          a = randint(1, 9) * 10 + randint(1, 9)\n          break\n      }\n\n      b = listeDeB[i]\n      if (choice([true, false])) {\n        texte = `$${texNombre(a)}\\\\times${texNombre(b)}$`\n        texteCorr = `$${texNombre(a)}\\\\times${texNombre(b)}=${texNombre(a * b)}$`\n      } else {\n        texte = `$${texNombre(b)}\\\\times${texNombre(a)}$`\n        texteCorr = `$${texNombre(b)}\\\\times${texNombre(a)}=${texNombre(a * b)}$`\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 2, '1 : Multiplication par 10, 100 ou 1 000\\n2 : Multiplication par 10, 100, 1 000, 10 000 ou 100 000']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}