/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_3e_3A11-2_js"],{

/***/ "./src/js/exercices/3e/3A11-2.js":
/*!***************************************!*\
  !*** ./src/js/exercices/3e/3A11-2.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Decomposition_facteurs_premiers)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst titre = 'Décomposition en facteurs premiers d’un entier'\n\n/**\n * 3A11-2 - Decomposition_facteurs_premiers\n * Décomposer un nombre en facteurs premiers et compter son nombre de diviseurs à partir d'un tableau\n * plusieurs type de nombres à décomposer\n * type 1 : 3 à 5 facteurs premiers max, multiplicités 0,1,2 ou 3 max à préciser\n * type 2 : un produit de deux premiers entre 30 et 100, multiplicité 1 ... suffisamment de possibilités?\n * type 3 : un gros premiers au delà de 1000 et inférieur à 2 000\n * @author Sébastien Lozano\n */\nfunction Decomposition_facteurs_premiers() {\n\t'use strict';\n\t_ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\tthis.sup = 1;\n\tthis.titre = titre;\n\t// pas de différence entre la version html et la version latex pour la consigne\n\tthis.consigne = `À l'aide de la calculatrice, décomposer pas à pas les nombres entiers en produit de facteurs premiers.`;\n\t//this.consigne += `<br>`;\n\tsortie_html ? this.spacing = 3 : this.spacing = 2;\n\tsortie_html ? this.spacing_corr = 2 : this.spacing_corr = 1;\n\tthis.nb_questions = 3;\n\t//this.correction_detaillee_disponible = true;\n\tthis.nb_cols = 1;\n\tthis.nb_cols_corr = 1;\n\tthis.sup = 1;\n\tthis.liste_packages = `bclogo`;\n\n\tthis.nouvelle_version = function (numero_de_l_exercice) {\n\t\tlet type_de_questions;\n\t\tif (sortie_html) { // les boutons d'aide uniquement pour la version html\n\t\t\t//this.bouton_aide = '';\n\t\t\tthis.bouton_aide = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.modal_pdf)(numero_de_l_exercice, \"assets/pdf/FicheArithmetique-3A11.pdf\", \"Aide mémoire sur les nombres premiers (Sébastien Lozano)\", \"Aide mémoire\");\n\t\t\tthis.bouton_aide += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.modal_video)('conteMathsNombresPremiers', '/videos/LesNombresPremiers.mp4', 'Petit conte mathématique - Les Nombres Premiers', 'Intro Vidéo');\n\t\t} else { // sortie LaTeX\n\t\t};\n\n\t\tthis.liste_questions = []; // Liste de questions\n\t\tthis.liste_corrections = []; // Liste de questions corrigées\n\t\tthis.contenu = ''; // Liste de questions\n\t\tthis.contenu_correction = ''; // Liste de questions corrigées\n\n\t\tlet type_de_questions_disponibles = [1, 2, 3];\n\t\ttype_de_questions_disponibles = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)(type_de_questions_disponibles); // on mélange l'ordre des questions\n\n\t\t//let type_de_questions_disponibles = [1];\n\t\tlet liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes_sans_changer_ordre)(type_de_questions_disponibles, this.nb_questions);\n\n\t\tlet string_rappel = `Cette liste des nombres premiers inférieurs à 100 pourra être utile : <br>` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(100)[0];\n\t\tfor (let k = 1; k < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(100).length; k++) {\n\t\t\tstring_rappel += `, ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(100)[k];\n\t\t};\n\t\tstring_rappel += `.`;\n\n\t\tthis.introduction = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.warn_message)(string_rappel, `nombres`, `Coup de pouce`);\n\n\t\tfor (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n\t\t\ttype_de_questions = liste_type_de_questions[i];\n\n\t\t\tswitch (type_de_questions) {\n\t\t\t\tcase 1: // 3 à 5 facteurs premiers max compris entre 0 et 30, de multiplicité 1,2 ou 3 max\n\t\t\t\t\t// on fixe le nombre de facteurs premier entre 3 et 5\n\t\t\t\t\tlet nb_de_premiers = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(3, 5);\n\t\t\t\t\t// on fixe la limite pour le choix des premiers\n\t\t\t\t\tlet max_premier = 11;\n\t\t\t\t\t// on fixe le rang max pour le choix des premiers\n\t\t\t\t\tlet rg_max = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(max_premier).length - 1;\n\t\t\t\t\t// on choisit les rangs pour les nombres premiers\n\t\t\t\t\tlet tab_rangs = [];\n\t\t\t\t\tlet tab_rangs_exclus = [];\n\t\t\t\t\tfor (let k = 0; k < (nb_de_premiers); k++) {\n\t\t\t\t\t\tfor (let m = 0; m < k; m++) {\n\t\t\t\t\t\t\ttab_rangs_exclus.push(tab_rangs[m]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttab_rangs[k] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, rg_max, tab_rangs_exclus);\n\t\t\t\t\t};\n\t\t\t\t\t// on choisit les premiers\n\t\t\t\t\tlet tab_premiers = [];\n\t\t\t\t\tfor (let k = 0; k < tab_rangs.length; k++) {\n\t\t\t\t\t\ttab_premiers[k] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(max_premier)[tab_rangs[k]];\n\t\t\t\t\t};\n\t\t\t\t\t// on range les facteurs premiers dans l'ordre croissant\n\t\t\t\t\ttab_premiers.sort(function (a, b) {\n\t\t\t\t\t\treturn a - b;\n\t\t\t\t\t});\n\t\t\t\t\t// on choisit les multiplicités\n\t\t\t\t\tlet tab_multiplicites = [];\n\t\t\t\t\tfor (let k = 0; k < tab_rangs.length; k++) {\n\t\t\t\t\t\ttab_multiplicites[k] = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 2);\n\t\t\t\t\t};\n\t\t\t\t\t// yapluka écrire le nombre dans l'énoncé et sa décomposition dans la correction\n\t\t\t\t\ttexte = `À l'aide de la calculatrice, décomposer `;\n\t\t\t\t\tlet nombre_a_decomposer = 1;\n\t\t\t\t\tfor (let k = 0; k < tab_rangs.length; k++) {\n\t\t\t\t\t\tfor (let m = 0; m < tab_multiplicites[k]; m++) {\n\t\t\t\t\t\t\tnombre_a_decomposer = nombre_a_decomposer * tab_premiers[k];\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\tlet racine_premier_1 = Math.trunc(Math.sqrt(nombre_a_decomposer));\n\t\t\t\t\ttexte += `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer)}$ en produit de facteurs premiers.`;\n\t\t\t\t\t// correction\t\t\t\t\t\t\n\t\t\t\t\ttexte_corr = `Nous allons successivement tester la divisibilité de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer)}$ par tous les nombres premiers inférieurs à `;\n\t\t\t\t\ttexte_corr += `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer)}$ en commençant par 2, 3, 5, 7, ...<br>`;\n\t\t\t\t\ttexte_corr = `Il est suffisant de tester la divisibilité de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer)}$ par tous les nombres premiers inférieurs ou égaux à $\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer)}}$ c'est à dire inférieurs à $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(racine_premier_1)}$.<br>`;\n\t\t\t\t\ttexte_corr += `Ce sont les nombres de la liste : <br>`;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(racine_premier_1)[0] + ` ; `;\n\t\t\t\t\tfor (let k = 1; k < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(racine_premier_1).length; k++) {\n\t\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(racine_premier_1)[k];\n\t\t\t\t\t\tif (k != (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(racine_premier_1).length - 1) {\n\t\t\t\t\t\t\ttexte_corr += ` ; `;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexte_corr += `.`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (k % 15 == 0) {\n\t\t\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `<br>`;\n\t\t\t\t\tvar liste_facteurs_premiers = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.obtenir_liste_facteurs_premiers)(nombre_a_decomposer);\n\t\t\t\t\tvar quotient_intermediaire = nombre_a_decomposer;\n\t\t\t\t\tfor (let k = 0; k < liste_facteurs_premiers.length; k++) {\n\t\t\t\t\t\ttexte_corr += `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(quotient_intermediaire)}\\\\div${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.mise_en_evidence)(liste_facteurs_premiers[k])} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(quotient_intermediaire / liste_facteurs_premiers[k])}$<br>`;\n\t\t\t\t\t\tquotient_intermediaire = quotient_intermediaire / liste_facteurs_premiers[k];\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `Finalement on obtient la décomposition suivante : $ ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(nombre_a_decomposer)} = `;\n\t\t\t\t\tif (tab_multiplicites[0] == 1) {\n\t\t\t\t\t\ttexte_corr += `${tab_premiers[0]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexte_corr += `${tab_premiers[0]}^{${tab_multiplicites[0]}}`;\n\t\t\t\t\t};\n\t\t\t\t\tfor (let k = 1; k < tab_premiers.length; k++) {\n\t\t\t\t\t\tif (tab_multiplicites[k] == 1) {\n\t\t\t\t\t\t\ttexte_corr += `\\\\times ${tab_premiers[k]}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexte_corr += `\\\\times ${tab_premiers[k]}^{${tab_multiplicites[k]}}`;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `$`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // deux premiers compris entre 30 et 100 de multiplicité 1\n\t\t\t\t\t// on choisit un rang différent pour chaque premier entre 30 et 100\n\t\t\t\t\tlet r1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.premiers_entre_bornes)(30, 100).length - 1);\n\t\t\t\t\tlet r2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.premiers_entre_bornes)(30, 100).length - 1, r1);\n\t\t\t\t\tlet premier1 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.premiers_entre_bornes)(30, 100)[r1];\n\t\t\t\t\tlet premier2 = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.premiers_entre_bornes)(30, 100)[r2];\n\t\t\t\t\tif (premier1 > premier2) { // on inverse p1 et p2 si p1 est supérieur à p2\n\t\t\t\t\t\tlet p = premier1;\n\t\t\t\t\t\tpremier1 = premier2;\n\t\t\t\t\t\tpremier2 = p;\n\t\t\t\t\t};\n\t\t\t\t\ttexte = `À l'aide de la calculatrice, décomposer $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier1 * premier2)}$ en produit de facteurs premiers.`;\n\t\t\t\t\tlet racine_prem = Math.trunc(Math.sqrt(premier1 * premier2));\n\t\t\t\t\ttexte_corr = `Il est suffisant de tester la divisibilité de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier1 * premier2)}$ par tous les nombres premiers inférieurs ou égaux à $\\\\sqrt{${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier1 * premier2)}}$ c'est à dire inférieurs à $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(racine_prem)}$.<br>`;\n\t\t\t\t\ttexte_corr += `Ce sont les nombres de la liste suivante : <br>$`;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(racine_prem)[0];\n\t\t\t\t\tfor (let k = 1; k < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(racine_prem).length; k++) {\n\t\t\t\t\t\ttexte_corr += `; ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(racine_prem)[k];\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `.$<br>`;\n\t\t\t\t\tliste_facteurs_premiers = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.obtenir_liste_facteurs_premiers)(premier1 * premier2);\n\t\t\t\t\tquotient_intermediaire = premier1 * premier2;\n\t\t\t\t\tfor (let k = 0; k < liste_facteurs_premiers.length; k++) {\n\t\t\t\t\t\ttexte_corr += `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(quotient_intermediaire)}\\\\div${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.mise_en_evidence)(liste_facteurs_premiers[k])} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(quotient_intermediaire / liste_facteurs_premiers[k])}$<br>`;\n\t\t\t\t\t\tquotient_intermediaire = quotient_intermediaire / liste_facteurs_premiers[k];\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += ` D'où $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier1 * premier2)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier1)}\\\\times${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier2)}$.`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // un gros premier entre 1000 et 2000\t\t\t\n\t\t\t\t\t// on choisit un rang pour le nombre premier entre 1000 et 2000\n\t\t\t\t\tlet r = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.premiers_entre_bornes)(1000, 2000).length - 1);\n\t\t\t\t\tlet premier = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.premiers_entre_bornes)(1000, 2000)[r];\n\t\t\t\t\tlet racine_premier = Math.trunc(Math.sqrt(premier));\n\t\t\t\t\ttexte = `À l'aide de la calculatrice, décomposer $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier)}$ en produit de facteurs premiers.`;\n\t\t\t\t\ttexte_corr = `En testant la divisibilité de $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier)}$ par tous les nombres premiers inférieurs ou égaux à $${racine_premier}$`;\n\t\t\t\t\ttexte_corr += ` c'est à dire les nombre de la liste $`;\n\t\t\t\t\ttexte_corr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(racine_premier)[0];\n\t\t\t\t\tfor (let k = 1; k < (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(racine_premier).length; k++) {\n\t\t\t\t\t\ttexte_corr += `; ` + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.crible_eratosthene_n)(racine_premier)[k];\n\t\t\t\t\t};\n\t\t\t\t\ttexte_corr += `$, `;\n\t\t\t\t\ttexte_corr += `on se rend compte que $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier)}$ est un nombre premier donc `;\n\t\t\t\t\ttexte_corr += `$${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier)} = ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tex_nombre)(premier)}$.`;\n\t\t\t\t\tbreak;\n\t\t\t};\n\n\t\t\tif (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.liste_questions.push(texte);\n\t\t\t\tthis.liste_corrections.push(texte_corr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\n\t\t(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\t};\n\t//this.besoin_formulaire_numerique = ['Règle à travailler',5,\"1 : Produit de deux puissances de même base\\n2 : Quotient de deux puissances de même base\\n3 : Puissance de puissance\\n4 : Produit de puissances de même exposant\\n5 : Mélange\"]; \n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/3e/3A11-2.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);