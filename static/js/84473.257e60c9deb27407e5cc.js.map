{"version":3,"sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaExoLiouba.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","LeNomDeLaFonctionExercice","pas_de_version_HMTL","typeExercice","objetsEnonce","objetsCorrection","paramsEnonce","paramsCorrection","A","B","C","triangle","triangle0","O","M","X","Y","triangle1","A1","B1","C1","d1","AA1","triangle2","med","nomd","D","F","triangle3","triangle4","triangle5","traces","labels","xMin","xMax","yMin","yMax","bordure","alpha","beta","texteCorr","largeur","hauteur","anim","Alea2iep","point","pointAdistance","randint","similitude","polygone","polygoneAvecNom","pointSurSegment","longueur","rotation","renommePolygone","milieu","droite","symetrieAxiale","mediatrice","translation","vecteur","tracePoint","labelPoint","i","Math","min","listePoints","x","max","y","texte","abs","latexParPoint","triangle2a","symetrieAnimee","triangle3a","rotationAnimee","triangle4a","translationAnimee","triangle5a","vitesse","tempo","recadre","polygoneRapide","pointsCreer","couleur","traitRapide","textePoint","symetrieAxialePolygone","couleurCodage","demiTourPolygone","translationPolygone","rotationPolygone","crayonMasquer","context","push","nommePolygone","xmin","ymin","xmax","ymax","pixelsParCm","scale","mainlevee","mathalea2d","html","listeQuestionsToContenu"],"mappings":"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","file":"js/84473.257e60c9deb27407e5cc.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,combinaisonListes,randint} from \"../../modules/outils.js\"\nimport {symetrieAnimee,rotationAnimee,translationAnimee,polygone,pointIntersectionDD,mathalea2d,point,milieu,pointSurSegment,droite,mediatrice,translation,similitude,rotation,pointAdistance,longueur,symetrieAxiale,vecteur,latexParPoint,tracePoint,labelPoint,polygoneAvecNom, renommePolygone} from \"../../modules/2d.js\"\nimport { nommePolygone } from '../../modules/2d.js';\nimport Alea2iep from \"../../modules/Alea2iep.js\";\n\nexport const titre=\"Tranformations de triangle\"\nexport default function LeNomDeLaFonctionExercice() {\n    \"use strict\"\n    Exercice.call(this)\n    this.titre=\"Tranformations de triangle\";\n    this.nbQuestions = 1; // Ici le nombre de questions (une seule pour cet exercice non modifiable)\n    this.nbQuestionsModifiable=false // désactive le formulaire nombre de questions\n    this.nbCols = 1; // Le nombre de colonnes dans l'énoncé LaTeX\n    this.nbColsCorr = 1;// Le nombre de colonne pour la correction LaTeX\n    this.pasDeVersionLatex=false // mettre à true si on ne veut pas de l'exercice dans le générateur LaTeX\n    this.pas_de_version_HMTL=false // mettre à true si on ne veut pas de l'exercice en ligne\n    this.typeExercice = \"IEP\";\n   // Voir la Classe Exercice pour une liste exhaustive des propriétés disponibles.\n  \n  //  this.sup = false; // A décommenter : valeur par défaut d'un premier paramètre\n  //  this.sup2 = false; // A décommenter : valeur par défaut d'un deuxième paramètre\n  //  this.sup3 = false; // A décommenter : valeur par défaut d'un troisième paramètre\n  \n  // c'est ici que commence le code de l'exercice cette fonction crée une copie de l'exercice\n    this.nouvelleVersion = function (numeroExercice) {\n    // la variable numeroExercice peut être récupérée pour permettre de différentier deux copies d'un même exo\n    // Par exemple, pour être certain de ne pas avoir les mêmes noms de points en appelant 2 fois cet exo dans la même page\n  \n    this.listeQuestions = [] // tableau contenant la liste des questions \n    this.listeCorrections = []\n  // Ci-dessus On crée une liste aléatoire comprenant nbQuestions parmi les types disponibles.\n  /* Un exemple ci-dessous : si la classe est 6, alors les types dispo sont 1 et 2 sinon , 1,2,3 et 4.\n  if (this.classe == 6) typesDeQuestionsDisponibles = [1, 2]\n      else typesDeQuestionsDisponibles = [1, 2, 3,4]\n  listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n  */\n  // boucle pour fabriquer les nbQuestions questions en s'assurant que si il n'y a pas nbQuestions différentes\n  // La boucle s'arrête après 50 tentatives.\n  \n      let objetsEnonce,objetsCorrection,paramsEnonce,paramsCorrection\n  \n        objetsEnonce = [] // on initialise le tableau des objets Mathalea2d de l'enoncé\n        objetsCorrection = [] // Idem pour la correction\n  \n\n        let texteCorr = `` // Idem pour le texte de la correction.\n        let largeur=20,hauteur=20\n        let A,B,C,triangle,triangle0,O,M,X,Y,triangle1,A1,B1,C1,d1,AA1,triangle2,med,nomd,D,F,triangle3,triangle4,triangle5,traces,labels\n        let xMin,xMax,yMin,yMax\n        let bordure,alpha,beta\n        let anim = new Alea2iep()\n        /***************************************/\n/********Ici on définit les objets 2d */\n/*************************************/\nwhile (largeur>16 && hauteur>16) {\n    xMin=0;\n    xMax=0;\n    yMin=0;\n    yMax=0;\nA=point(0,0,'A')\nB=pointAdistance(A,randint(40,60)/10,randint(70,100),'B')\nC=similitude(B,A,randint(20,50),randint(8,12)/10,'C')\ntriangle0=polygone(A,B,C)\ntriangle=polygoneAvecNom(A,B,C)\n//d0=droite(A,B)\nO=pointSurSegment(B,A,2+longueur(A,B))\n//d0.isVisible=false\nbeta=randint(-45,-20)\nA1=rotation(A,O,beta,'A')\nB1=rotation(B,O,beta,'B')\nC1=rotation(C,O,beta,'C')\ntriangle1=polygone(A1,B1,C1)\nrenommePolygone(triangle1,['A_1','B_1','C_1'])\nM=milieu(A,A1)\nd1=droite(A1,B1)\nAA1=droite(A,A1)\ntriangle2=symetrieAxiale(triangle1,d1)\nrenommePolygone(triangle2,['A_1','B_1','C_1'])\nmed=mediatrice(A,A1)\nX=pointSurSegment(M,O,5)\nY=pointSurSegment(O,M,10)\nD=similitude(B1,A1,randint(-40,-10),1.5,'D')\ntriangle3=rotation(triangle2,D,180)\nrenommePolygone(triangle3,['A_2','B_2','C_2'])\nF=translation(D,vecteur(B,A),'F')\ntraces = tracePoint(D,F)\nlabels=labelPoint(D,F)\ntriangle4=translation(triangle3,vecteur(D,F))\nrenommePolygone(triangle4,['A_3','B_3','C_3'])\nalpha=-randint(80,110)\ntriangle5=rotation(triangle4,F,alpha)\nrenommePolygone(triangle5,['A_4','B_4','C_4'])\n\nfor (let i =0; i<3; i++) {\nxMin=Math.min(xMin,triangle0.listePoints[i].x,triangle1.listePoints[i].x,triangle2.listePoints[i].x,triangle3.listePoints[i].x,triangle4.listePoints[i].x,triangle5.listePoints[i].x)\nxMax=Math.max(xMax,triangle0.listePoints[i].x,triangle1.listePoints[i].x,triangle2.listePoints[i].x,triangle3.listePoints[i].x,triangle4.listePoints[i].x,triangle5.listePoints[i].x)\nyMin=Math.min(yMin,triangle0.listePoints[i].y,triangle1.listePoints[i].y,triangle2.listePoints[i].y,triangle3.listePoints[i].y,triangle4.listePoints[i].y,triangle5.listePoints[i].y)\nyMax=Math.max(yMax,triangle0.listePoints[i].y,triangle1.listePoints[i].y,triangle2.listePoints[i].y,triangle3.listePoints[i].y,triangle4.listePoints[i].y,triangle5.listePoints[i].y)\n}\nxMax+=4\nxMin--\nyMin--\nyMax++\nlargeur=xMax-xMin\nhauteur=yMax-yMin\n\n}\n\nlet texte = `Construire<br>$A_1B_1C_1$ le triangle symétrique de $ABC$ par rapport à la droite $(d)$;<br>` // Nous utilisons souvent cette variable pour construire le texte de la question.\ntexte += `$A_2B_2C_2$ le triangle symétrique de $A_1B_1C_1$ par rapport au point $D$;<br>`\ntexte += `$A_3B_3C_3$ le triangle translaté de $A_2B_2C_2$ tel que $D$ soit transformé en $F$;<br>`\ntexte += `$A_4B_4C_4$ le triangle obtenu par la rotation de $A_3B_3C_3$ de centre $F$ et d'angle $${Math.abs(alpha)}\\\\degree$ dans le sens des aiguilles d'une montre.<br>`\n\nbordure=droite(point(xMin,yMin+2),point(xMax,yMin+2))\nnomd=latexParPoint('(d)',translation(milieu(B,B1),vecteur(1,0)),'black',30,12,\"\")\nlet triangle2a=symetrieAnimee(triangle0,med,`id='anim${numeroExercice}A' begin=\"0s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\nlet triangle3a=rotationAnimee(triangle2,D,180,`id='anim${numeroExercice}B' begin=\"2s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\nlet triangle4a=translationAnimee(triangle3,vecteur(D,F),`id='anim${numeroExercice}C' begin=\"4s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\nlet triangle5a=rotationAnimee(triangle4,F,alpha,`id='anim${numeroExercice}D' begin=\"6s\" dur =\"2s\" repeatcount=\"1\" fill=\"freeze\"`)\nanim.vitesse=15\nanim.tempo=0.5\nanim.recadre(xMin,yMax)\nanim.polygoneRapide(...triangle0.listePoints)\nanim.pointsCreer(A,B,C,F,D)\nanim.couleur='black'\nanim.traitRapide(X,Y)\nanim.textePoint('(d)',milieu(B,B1))\nanim.symetrieAxialePolygone(triangle0,med,['A_1','B_1','C_1'],{couleur:'blue',couleurCodage:'lightblue'})\nanim.demiTourPolygone(triangle2,D,['A_2','B_2','C_2'],{couleur:'red',couleurCodage:'pink'})\nanim.translationPolygone(triangle3,D,F,['A_3','B_3','C_3'],{couleur:'brown',couleurCodage:'orange'})\nanim.rotationPolygone(triangle4,F,alpha,['A_4','B_4','C_4'],{couleur:'green',couleurCodage:'lightgreen'})\nanim.crayonMasquer()\n\ncontext.fenetreMathalea2d=[xMin,yMin,xMax,yMax]\n   objetsEnonce.push (triangle0,triangle[1],traces,labels,med,nomd) // On rempli les tableaux d'objets Mathalea2d\n  objetsCorrection.push(triangle0,triangle[1],traces,labels,med,nomd,triangle2,nommePolygone(triangle2),triangle3,nommePolygone(triangle3),triangle4,nommePolygone(triangle4),triangle5,nommePolygone(triangle5),triangle2a,triangle3a,triangle4a,triangle5a)\n  \n  //paramètres de la fenêtre Mathalea2d pour l'énoncé main levée\n    //    paramsEnonceml = { xmin: Math.min(objetsEnonceml.x), ymin: Math.min(objetsEnonceml.y), xmax: Math.max(objetsEnonceml.x), ymax: Math.max(objetsEnonceml.y), pixelsParCm: 20, scale: 1, mainlevee: true, amplitude: 1 }\n  //paramètres de la fenêtre Mathalea2d pour l'énoncé normal\n        paramsEnonce = { xmin:xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 1, mainlevee: false}\n  //paramètres de la fenêtre Mathalea2d pour la correction\n        paramsCorrection = {xmin:xMin, ymin: yMin, xmax: xMax, ymax: yMax, pixelsParCm: 20, scale: 1 }\n  // On ajoute au texte de l'énoncé, la figure à main levée et la figure de l'enoncé.\n        texte += mathalea2d(paramsEnonce, objetsEnonce)\n  // On ajoute au texte de la correction, la figure de la correction\n        texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n        texteCorr += '<br>'\n        texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}A').beginElement()\"><i class=\"redo circle icon\"></i>symétrie axiale</button>`\n        texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}B').beginElement()\"><i class=\"redo circle icon\"></i>symétrie centrale</button>`\n        texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}C').beginElement()\"><i class=\"redo circle icon\"></i>translation</button>`\n        texteCorr += `<button class=\"ui mini compact button\"  style=\"margin:10px\" onclick=\"document.getElementById('anim${numeroExercice}D').beginElement()\"><i class=\"redo circle icon\"></i>rotation</button>`\n    \n        texteCorr += anim.html(numeroExercice)\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        listeQuestionsToContenu(this); // On envoie l'exercice à la fonction de mise en page\n    };\n  // Si les variables suivantes sont définies, elles provoquent l'affichage des formulaires des paramètres correspondants\n  // Il peuvent être de 3 types : _numerique, _case_a_cocher ou _texte.\n  // Il sont associés respectivement aux paramètres sup, sup2 et sup3.\n  \n  //\tthis.besoinFormulaireNumerique = ['Type de questions', 3, `1 : Perpendiculaires\\n 2 : Parallèles\\n 3 : Mélange`]\n  //  this.besoinFormulaire2Numerique = [\"Type de cahier\",3,`1 : Cahier à petits careaux\\n 2 : Cahier à gros carreaux (Seyes)\\n 3 : Feuille blanche`];\n  // this.besoinFormulaire3CaseACocher =['figure à main levée',true]\n  \n  } // Fin de l'exercice.\n  "],"sourceRoot":""}