{"version":3,"file":"js/59953.13e6d997a4236b1c8146.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5A11-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes,texteEnCouleurEtGras} from '../../modules/outils.js'\nimport {mathalea2d,labyrinthe} from '../../modules/2d.js'\n\n\nexport const titre = 'Labyrinthe de multiples basé sur les critères de divisibilité'\n\n/**\n * @author Jean-Claude Lhote\n * Publié le 7/12/2020\n * Ref 5A11-1\n * Sortir du labyrinthe en utilisant les critères de divisibilité.\n */\nexport default function Exercice_labyrinthe_divisibilite() {\n\tExercice.call(this);\n\tthis.titre = titre;\n\tthis.consigne = \"\";\n\tthis.niveau = '6e';\n\tthis.nbQuestions = 1;\n\tthis.nbQuestionsModifiable = false;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.pasDeVersionLatex = false;\n\tthis.pas_de_version_HMTL = false;\n\tthis.sup3 = 3;\n\tthis.sup = 9;\n\tif (this.niveau = 'CM') {\n\t\tthis.sup2 = 1;\n\t\tthis.sup3 = 3;\n\t}\n\telse {\n\t\tthis.sup2 = 2;\n\t\tthis.sup3 = 4;\n\t}\n\t//this.consigne=`Trouve la sortie en ne passant que par les cases contenant un nombre divisible par $${parseInt(this.sup)}$.`\n\tthis.nouvelleVersion = function () {\n\t\tthis.listeCorrections = [];\n\t\tthis.listeQuestions = [];\n\t\tlet params, texte, texteCorr, trouve;\n\t\tlet laby = labyrinthe();\n\t\tlaby.niveau = parseInt(this.sup3); // Le niveau (de 1 à 6=mélange) définit le nombre d'étapes\n\t\tlaby.chemin = laby.choisitChemin(laby.niveau); // On choisi un chemin\n\t\tlaby.murs2d = laby.construitMurs(laby.chemin); // On construit le labyrinthe\n\t\tlaby.chemin2d = laby.traceChemin(laby.chemin); // On trace le chemin solution\n\t\tlet monchemin = laby.chemin;\n\t\tlet table = parseInt(this.sup);\n\t\tif (this.sup2 == 2) {\n\t\t\tif (table % 2 != 0) {\n\t\t\t\ttable = table * 2;\n\t\t\t}\n\t\t}\n\t\telse if (this.sup2 == 3) {\n\t\t\tif (table % 3 != 0) {\n\t\t\t\ttable = table * 3;\n\t\t\t}\n\t\t}\n\t\telse if (this.sup2 == 4) {\n\t\t\tif (table % 4 != 0) {\n\t\t\t\tif (table % 2 != 0) {\n\t\t\t\t\ttable = table * 4;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttable = table * 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.sup2 == 5) {\n\t\t\tif (table % 5 != 0) {\n\t\t\t\ttable = table * 5;\n\t\t\t}\n\t\t}\n\t\telse if (this.sup2 == 6) {\n\t\t\tif (table % 9 != 0) {\n\t\t\t\tif (table % 3 != 0) {\n\t\t\t\t\ttable = table * 9;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttable = table * 3;\n\t\t\t}\n\t\t}\n\t\ttexte = `${texteEnCouleurEtGras(`Trouve la sortie en ne passant que par les cases contenant un nombre divisible par `, 'black')}$${table}$.<br>`;\n\t\ttexteCorr = `${texteEnCouleurEtGras(`Voici le chemin en marron et la sortie était la numéro $${2 - monchemin[monchemin.length - 1][1] + 1}$.`, 'black')}<br>`;\n\t\t// Zone de construction du tableau de nombres : Si ils sont sur monchemin et seulement si, ils doivent vérifier la consigne\n\t\tlet listeMultiples = [], index = 0;\n\t\tfor (let i = 200; i <= 12000; i += randint(1, 100)) {\n\t\t\tlisteMultiples.push(table * i);\n\t\t}\n\t\tlisteMultiples = combinaisonListes(listeMultiples, 12);\n\t\tfor (let a = 1; a < 7; a++) {\n\t\t\tlaby.nombres.push([0, 0, 0]);\n\t\t}\n\t\tfor (let a = 1; a < 7; a++) {\n\t\t\tfor (let b = 0; b < 3; b++) {\n\t\t\t\ttrouve = false;\n\t\t\t\tfor (let k = 0; k < monchemin.length; k++) {\n\t\t\t\t\tif (monchemin[k][0] == a && monchemin[k][1] == b)\n\t\t\t\t\t\ttrouve = true;\n\t\t\t\t}\n\t\t\t\tif (!trouve) {\n\t\t\t\t\tlaby.nombres[a - 1][b] = randint(200, 5000) * table + randint(1, table - 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlaby.nombres[a - 1][b] = listeMultiples[index];\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\t\t} // Le tableau de nombre étant fait, on place les objets nombres.\n\t\tlaby.nombres2d = laby.placeNombres(laby.nombres, 1);\n\t\tparams = { xmin: -4, ymin: 0, xmax: 22, ymax: 11, pixelsParCm: 20, scale: 0.7 };\n\t\ttexte += mathalea2d(params, laby.murs2d, laby.nombres2d);\n\t\ttexteCorr += mathalea2d(params, laby.murs2d, laby.nombres2d, laby.chemin2d);\n\t\tthis.listeQuestions.push(texte);\n\t\tthis.listeCorrections.push(texteCorr);\n\t\tlisteQuestionsToContenu(this);\n\t};\n\tthis.besoinFormulaireNumerique = [\"Critère de divisibilité \", 5, '1 : Par 2\\n2 : Par 3\\n3 : Par 4\\n4 : Par 5\\n5 : Par 9'];\n\tthis.besoinFormulaire2Numerique = [\"Critère de divisibilité supplémentaire \", 6, '1 : Aucun\\n2 : Par 2\\n3 : Par 3\\n4 : Par 4\\n5 : Par 5\\n6 : Par 9'];\n\tthis.besoinFormulaire3Numerique = ['Niveau de rapidité', 6, '1 : Escargot\\n 2 : Tortue\\n 3 : Lièvre\\n 4 : Antilope\\n 5 : Guépard\\n 6 : Au hasard'];\n} // Fin de l'exercice.\n\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Exercice_labyrinthe_divisibilite","Exercice","this","consigne","niveau","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","sup3","sup","sup2","nouvelleVersion","params","texte","texteCorr","trouve","listeCorrections","listeQuestions","laby","labyrinthe","parseInt","chemin","choisitChemin","murs2d","construitMurs","chemin2d","traceChemin","monchemin","table","texteEnCouleurEtGras","length","listeMultiples","index","i","randint","push","combinaisonListes","a","nombres","b","k","nombres2d","placeNombres","xmin","ymin","xmax","ymax","pixelsParCm","scale","mathalea2d","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","besoinFormulaire3Numerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}