{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N33-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Calculer_un_pourcentage","Exercice","this","nbQuestions","consigne","spacing","spacingCorr","nbCols","nbColsCorr","nouvelleVersion","listeChoix","combinaisonListes","listeQuestions","listeCorrections","p1","p2","p3","moy1","moy2","moy3","objets","liste_moyens","liste_sports","liste_hobbies","centre","point","depart","texte","texteCorr","i","cpt","randint","push","codeAngle","texteParPoint","substring","pointSurSegment","rotation","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","mainlevee","amplitude","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/6124.f9632e78b08ec74f0b6f.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes} from '../../modules/outils.js'\nimport {point,pointSurSegment,rotation,codeAngle,texteParPoint,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Problèmes de calcul de pourcentage par complément à 100%'\n\n/**\n * Déduire un pourcentage par complément à 100%\n * @author Jean-Claude Lhote\n * Référence 6N33-2\n */\nexport default function Calculer_un_pourcentage() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.nbQuestions = 1;\n  this.consigne = \"Calculer\";\n  this.spacing = 2;\n  this.spacingCorr = 2;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n\n  this.nouvelleVersion = function () {\n    let typesDeQuestionsDisponibles = [1, 2, 3]\n    let listeChoix = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let liste_moyens = [`en bus`, `en deux-roues`, `à  pieds`, `en voiture`]\n    let liste_sports = [`le foot`, `la natation`, `le basket`, `le ping-pong`, `le volley`, `la gym`]\n    let liste_hobbies = [`la couture`, `le cinéma`, `la musique`, `le sport`, `la programmation`, `le jardinage`, `la cuisine`]\n    let p1, p2, p3, moy1, moy2, moy3\n    let objets, centre = point(5, 5), depart = point(10, 5)\n\n    for (\n      let i = 0, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n    ) {\n      objets = []\n      p1 = randint(6, 9) * 5\n      p2 = randint(6, 9) * 5\n      p3 = 100 - p1 - p2\n      switch (listeChoix[i]) {\n        case 1: // Les moyens de déplacement maison collège\n          [moy1, moy2, moy3] = combinaisonListes(liste_moyens, 3)\n          texte = `Dans un collège, $${p1}\\\\%$ des élèves se déplacent ${moy1}, $${p2}\\\\%$ ${moy2} et les autres ${moy3}.<br>`\n          texte += `Quel est le pourcentage des élèves qui se déplacent ${moy3} ?`\n          texteCorr = `Les élèves qui ${moy1} ou qui ${moy2} représentent $${p1}\\\\%$ + $${p2}\\\\% = ${p1 + p2}\\\\%$.<br>`\n          texteCorr += `Donc on calcule : $100 - ${p1 + p2}\\\\% = ${p3}\\\\%$<br>`\n          texteCorr += `$${p3}\\\\%$ des élèves ${moy3}.<br>`\n          break;\n        case 2: // Les sports pratiqués par les ados\n          [moy1, moy2, moy3] = combinaisonListes(liste_sports, 3)\n          texte = `Dans une association sportive, $${p1}\\\\%$ des ados pratiquent ${moy1}, $${p2}\\\\%$ ${moy2} et les autres ${moy3}.<br>`\n          texte += `Quel est le pourcentage des ados qui pratiquent ${moy3} ?`\n          texteCorr = `Les ados qui pratiquent ${moy1} ou ${moy2} représentent $${p1}\\\\% + ${p2}\\\\% = ${p1 + p2}\\\\%$.<br>`\n          texteCorr += `Donc on calcule : $100\\\\% - ${p1 + p2}\\\\% = ${p3}\\\\%$<br>`\n          texteCorr += `$${p3}\\\\%$ des ados de cette association sportive pratiquent ${moy3}.<br>`\n          break;\n        case 3: // Les sports pratiqués par les ados\n          [moy1, moy2, moy3] = combinaisonListes(liste_hobbies, 3)\n          texte = `Dans une association culturelle, $${p1}\\\\%$ des membres ont comme passe-temps favorit ${moy1}, pour $${p2}\\\\%$ c'est ${moy2} et pour les autres ${moy3}.<br>`\n          texte += `Quel est le pourcentage des membres qui préfèrent ${moy3} ?`\n          texteCorr = `Les membres qui préfère ${moy1} ou ${moy2} représentent $${p1}\\\\% + ${p2}\\\\% = ${p1 + p2}\\\\%$.<br>`\n          texteCorr += `Donc on calcule : $100\\\\% - ${p1 + p2}\\\\% = ${p3}\\\\%$<br>`\n          texteCorr += `$${p3}\\\\%$ des membres de cette association culturelle préfèrent ${moy3}.<br>`\n          break;\n\n      }\n      objets.push(codeAngle(depart, centre, p1 * 3.6, 4.9, '', 'black', 2, 1, 'red', 0.4), texteParPoint(`${moy1.substring(3)}`, pointSurSegment(centre, rotation(depart, centre, p1 * 1.8), 3), 0))\n      objets.push(codeAngle(rotation(depart, centre, p1 * 3.6), centre, p2 * 3.6, 4.9, '', 'black', 2, 1, 'blue', 0.4), texteParPoint(`${moy2.substring(3)}`, pointSurSegment(centre, rotation(depart, centre, p1 * 3.6 + p2 * 1.8), 3), 0))\n      objets.push(codeAngle(depart, centre, -p3 * 3.6, 4.9, '', 'black', 2, 1, 'yellow', 0.4), texteParPoint(`${moy3.substring(3)}`, pointSurSegment(centre, rotation(depart, centre, -p3 * 1.8), 3), 0))\n      texteCorr += mathalea2d({ xmin: 0, ymin: 0, xmax: 10, ymax: 10, pixelsParCm: 20, scale: 0.5, mainlevee: false, amplitude: 1 }, ...objets)\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}