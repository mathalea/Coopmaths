{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C22.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Exercice_multiplier_fractions","Exercice","this","sup","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","sup2","nouvelleVersion","type_de_questions_disponibles","listeQuestions","listeCorrections","nombre_de_signe_moins","liste_fractions","obtenir_liste_fractions_irreductibles","listeTypeDeQuestions","combinaisonListes","ab","cd","a","b","c","d","p","aa","bb","cc","dd","signe","numerateur","denominateur","index","texte","texteCorr","type_de_questions","i","cpt","choice","randint","texFraction","pgcd","texFractionReduite","Math","pow","abs","obtenirListeNombresPremiers","listeavf","listebvf","listea","obtenirListeFacteursPremiers","listeb","listec","listed","decomposition_facteurs_premiers","k","push","forEach","element","length","j","substr","indexOf","listeQuestionsToContenu","besoinFormulaireNumerique","besoin_formulaire2_case_a_cocher","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/955.f130d0ae8d62f6c1a806.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,abs,pgcd,texFractionReduite,obtenirListeFacteursPremiers,obtenir_liste_fractions_irreductibles,obtenirListeNombresPremiers,decomposition_facteurs_premiers,texFraction} from '../../modules/outils.js'\nexport const titre = 'Mutliplier des fractions'\n\n/**\n * Exercice de calcul de produit de deux fractions.\n *\n * Paramétrages possibles :\n * * 1 : Produits de nombres positifs seulement\n * * 2 : deux questions niveau 1 puis deux questions niveau 3\n * * 3 : Produits de nombres relatifs\n * * Si décomposition cochée : les nombres utilisés sont plus importants.\n * @auteur Jean-Claude Lhote\n * 4C22\n */\nexport default function Exercice_multiplier_fractions() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.sup = 1; // Avec ou sans relatifs\n  this.titre = titre;\n  this.consigne = \"Calculer et donner le résultat sous forme irréductible\";\n  this.spacing = 2;\n  this.spacingCorr = 2;\n  this.nbQuestions = 5;\n  this.nbColsCorr = 1;\n  this.sup2 = false; //méthode\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let type_de_questions_disponibles;\n    let liste_fractions = obtenir_liste_fractions_irreductibles();\n\n    if (this.sup == 1) {\n      type_de_questions_disponibles = [1, 2, 2, 2];\n    } // 1*nombre entier,3*fraction (pas de négatifs)\n    else if (this.sup == 2) {\n      type_de_questions_disponibles = [2, 2, 3, 3];\n    } // fractions, 2*positifs, 2*relatifs\n    else {\n      type_de_questions_disponibles = [3];\n    }\n    let nombre_de_signe_moins;\n    let listeTypeDeQuestions = combinaisonListes(\n      type_de_questions_disponibles,\n      this.nbQuestions\n    );\n    for (\n      let i = 0,\n      ab,\n      cd,\n      a,\n      b,\n      c,\n      d,\n      p,\n      aa,\n      bb,\n      cc,\n      dd,\n      signe,\n      numerateur,\n      denominateur,\n      index,\n      texte,\n      texteCorr,\n      type_de_questions,\n      cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      type_de_questions = listeTypeDeQuestions[i];\n      ab = choice(liste_fractions);\n      cd = choice(liste_fractions);\n      a = ab[0];\n      b = ab[1];\n      c = cd[0];\n      d = cd[1];\n      if (this.sup2 == false) {\n        // methode 1 : simplifications finale\n        switch (type_de_questions) {\n          case 1: // entier * fraction (tout positif)\n            if (a == 1) {\n              a = randint(2, 9);\n            }\n            if (a == c) {\n              a = a + 1;\n            }\n            texte = `$${texFraction(a, 1)}\\\\times${texFraction(c, d)}=$`;\n            texteCorr = `$${texFraction(a, 1)}\\\\times${texFraction(c, d)}$`;\n            texteCorr += `$=\\\\dfrac{${a}}{1}\\\\times${texFraction(c, d)}$`;\n            texteCorr += `$=${texFraction(\n              a + \"\\\\times\" + c,\n              \"1\\\\times\" + d\n            )}$`;\n            texteCorr += `$=${texFraction(a * c, d)}$`;\n            if (pgcd(a * c, d) != 1) {\n              texteCorr += `$=${texFractionReduite(a * c, d)}$`;\n            }\n            break;\n\n          case 2: // fraction * fraction tout positif\n            p = pgcd(a * c, b * d);\n            texte = `$${texFraction(a, b)}\\\\times${texFraction(c, d)}=$`;\n            texteCorr = `$${texFraction(a, b)}\\\\times${texFraction(c, d)}$`;\n            texteCorr += `$=${texFraction(\n              a + \"\\\\times\" + c,\n              b + \"\\\\times\" + d\n            )}$`;\n            texteCorr += `$=${texFraction(a * c, b * d)}$`;\n            if (p != 1) {\n              texteCorr += `$=${texFraction(\n                (a * c) / p + \"\\\\times\\\\cancel{\" + p + \"}\",\n                (b * d) / p + \"\\\\times\\\\cancel{\" + p + \"}\"\n              )}$`;\n              texteCorr += `$=${texFraction((a * c) / p, (b * d) / p)}$`;\n            }\n            break;\n\n          case 3:\n            a = a * randint(-1, 1, [0]);\n            b = b * randint(-1, 1, [0]);\n            c = c * randint(-1, 1, [0]);\n            d = d * randint(-1, 1, [0]);\n            nombre_de_signe_moins = (a < 0) + (b < 0) + (c < 0) + (d < 0);\n            if (Math.pow(-1, nombre_de_signe_moins) == 1) {\n              signe = \"\";\n            } else {\n              signe = \"-\";\n            }\n\n            texte = `$${texFraction(a, b)}\\\\times${texFraction(c, d)}$`;\n            texteCorr = `$${texFraction(a, b)}\\\\times${texFraction(c, d)}$`;\n            aa = abs(a);\n            bb = abs(b);\n            cc = abs(c);\n            dd = abs(d);\n            p = pgcd(aa * cc, bb * dd);\n            texteCorr += `$=${signe}${texFraction(\n              aa,\n              bb\n            )}\\\\times${texFraction(cc, dd)}$`;\n            texteCorr += `$=${signe}${texFraction(\n              aa + \"\\\\times\" + cc,\n              bb + \"\\\\times\" + dd\n            )}$`;\n            if (p == 1) {\n              texteCorr += `$=${signe}${texFraction(aa * cc, bb * dd)}$`;\n            } else {\n              texteCorr += `$=${signe}${texFraction(aa * cc, bb * dd)}$`;\n              if (aa * cc != bb * dd) {\n                texteCorr += `$=${signe}${texFraction(\n                  (aa * cc) / p + \"\\\\times\\\\cancel{\" + p + \"}\",\n                  (bb * dd) / p + \"\\\\times\\\\cancel{\" + p + \"}\"\n                )}$`;\n                texteCorr += `$=${signe}${texFraction(\n                  (aa * cc) / p,\n                  (bb * dd) / p\n                )}$`;\n              } else {\n                texteCorr += `$=${signe}1$`;\n              }\n            }\n            break;\n        }\n      } else {\n        //méthode 2 : décomposition\n        if (a == c) {\n          a++;\n        }\n        aa = obtenirListeNombresPremiers()[randint(1, 5)];\n        bb = obtenirListeNombresPremiers()[randint(1, 5, [aa])];\n        a = a * aa;\n        d = d * aa;\n        b = b * bb;\n        c = c * bb;\n\n        var listea = obtenirListeFacteursPremiers(a);\n        var listeb = obtenirListeFacteursPremiers(b);\n        var listec = obtenirListeFacteursPremiers(c);\n        var listed = obtenirListeFacteursPremiers(d);\n        var listeavf, listebvf;\n\n        switch (type_de_questions) {\n          case 1: // entier * fraction (tout positif)\n            texte = `$${a}\\\\times${texFraction(c, d)}=$`;\n            texteCorr = `$${a}\\\\times${texFraction(c, d)}$`;\n            texteCorr += `$=${texFraction(a + \"\\\\times\" + c, d)}$`;\n            texteCorr += `$=${texFraction(\n              decomposition_facteurs_premiers(a) +\n              \"\\\\times\" +\n              decomposition_facteurs_premiers(c),\n              decomposition_facteurs_premiers(d)\n            )}$`;\n            // texteCorr += `$=${texFraction(decomposition_facteurs_premiers(a * c), decomposition_facteurs_premiers(d))}$`\n            for (let k in listec) {\n              listea.push(listec[k]);\n            }\n            listeb = listed;\n            listeavf = [];\n            listebvf = [];\n\n            listea.forEach(function a_ajouter_dans_listeavf(element) {\n              listeavf.push([element, true]);\n            });\n            listeb.forEach(function a_ajouter_dans_listebvf(element) {\n              listebvf.push([element, true]);\n            });\n\n            for (index = 0; index < listeb.length;) {\n              for (let j = 0; j <= listea.length;) {\n                if (listeb[index] == listea[j]) {\n                  listebvf[index] = [listeb[index], false];\n                  listeavf[j] = [listea[j], false];\n                  listea[j] = 1;\n                  listeb[index] = 1;\n                  break;\n                }\n                j++;\n              }\n              index++;\n            }\n\n            a = 1;\n            b = 1;\n            for (let k in listea) {\n              a = a * listea[k];\n            }\n            for (let k in listeb) {\n              b = b * listeb[k];\n            }\n\n            numerateur = \"\";\n            denominateur = \"\";\n\n            for (let j in listeavf) {\n              if (listeavf[j][1] == true) {\n                numerateur += listeavf[j][0] + \"\\\\times\";\n              } else {\n                numerateur += \"\\\\cancel{\" + listeavf[j][0] + \"}\\\\times\";\n              }\n            }\n            numerateur = numerateur.substr(0, numerateur.length - 6);\n\n            for (let j in listebvf) {\n              if (listebvf[j][1] == true) {\n                denominateur += listebvf[j][0] + \"\\\\times\";\n              } else {\n                denominateur += \"\\\\cancel{\" + listebvf[j][0] + \"}\\\\times\";\n              }\n            }\n            denominateur = denominateur.substr(0, denominateur.length - 6);\n\n            texteCorr += `$=\\\\dfrac{${numerateur}}{${denominateur}}$`;\n            texteCorr += `$=${texFraction(a, b)}$`;\n            break;\n\n          case 2: // fraction * fraction tout positif\n            texte = `$${texFraction(a, b)}\\\\times${texFraction(c, d)}=$`;\n            texteCorr = `$${texFraction(a, b)}\\\\times${texFraction(c, d)}$`;\n            texteCorr += `$=${texFraction(\n              a + \"\\\\times\" + c,\n              b + \"\\\\times\" + d\n            )}$`;\n\n            for (let k in listec) {\n              listea.push(listec[k]);\n            }\n            for (let k in listed) {\n              listeb.push(listed[k]);\n            }\n\n            listeavf = [];\n            listebvf = [];\n\n            listea.forEach(function a_ajouter_dans_listeavf(element) {\n              listeavf.push([element, true]);\n            });\n            listeb.forEach(function a_ajouter_dans_listebvf(element) {\n              listebvf.push([element, true]);\n            });\n\n            for (index = 0; index < listeb.length;) {\n              for (let j = 0; j <= listea.length;) {\n                if (listeb[index] == listea[j]) {\n                  listebvf[index] = [listeb[index], false];\n                  listeavf[j] = [listea[j], false];\n                  listea[j] = 1;\n                  listeb[index] = 1;\n                  break;\n                }\n                j++;\n              }\n              index++;\n            }\n\n            a = 1;\n            b = 1;\n            for (let k in listea) {\n              a = a * listea[k];\n            }\n            for (let k in listeb) {\n              b = b * listeb[k];\n            }\n\n            numerateur = \"\";\n            denominateur = \"\";\n\n            for (let j in listeavf) {\n              if (listeavf[j][1] == true) {\n                numerateur += listeavf[j][0] + \"\\\\times\";\n              } else {\n                numerateur += \"\\\\cancel{\" + listeavf[j][0] + \"}\\\\times\";\n              }\n            }\n            numerateur = numerateur.substr(0, numerateur.length - 6);\n\n            for (let j in listebvf) {\n              if (listebvf[j][1] == true) {\n                denominateur += listebvf[j][0] + \"\\\\times\";\n              } else {\n                denominateur += \"\\\\cancel{\" + listebvf[j][0] + \"}\\\\times\";\n              }\n            }\n            denominateur = denominateur.substr(0, denominateur.length - 6);\n\n            texteCorr += `$=\\\\dfrac{${numerateur}}{${denominateur}}$`;\n            texteCorr += `$=${texFraction(a, b)}$`;\n            break;\n\n          case 3:\n            a = a * randint(-1, 1, [0]);\n            b = b * randint(-1, 1, [0]);\n            c = c * randint(-1, 1, [0]);\n            d = d * randint(-1, 1, [0]);\n            nombre_de_signe_moins = (a < 0) + (b < 0) + (c < 0) + (d < 0);\n            if (Math.pow(-1, nombre_de_signe_moins) == 1) {\n              signe = \"\";\n            } else {\n              signe = \"-\";\n            }\n\n            texte = `$${texFraction(a, b)}\\\\times${texFraction(c, d)}$`;\n            texteCorr = `$${texFraction(a, b)}\\\\times${texFraction(c, d)}$`;\n            aa = abs(a);\n            bb = abs(b);\n            cc = abs(c);\n            dd = abs(d);\n\n            texteCorr += `$=${signe}${texFraction(\n              aa,\n              bb\n            )}\\\\times${texFraction(cc, dd)}$`;\n            texteCorr += `$=${signe}${texFraction(\n              aa + \"\\\\times\" + cc,\n              bb + \"\\\\times\" + dd\n            )}$`;\n\n            for (let k in listec) {\n              listea.push(listec[k]);\n            }\n            for (let k in listed) {\n              listeb.push(listed[k]);\n            }\n\n            listeavf = [];\n            listebvf = [];\n\n            listea.forEach(function a_ajouter_dans_listeavf(element) {\n              listeavf.push([element, true]);\n            });\n            listeb.forEach(function a_ajouter_dans_listebvf(element) {\n              listebvf.push([element, true]);\n            });\n\n            for (index = 0; index < listeb.length;) {\n              for (let j = 0; j <= listea.length;) {\n                if (listeb[index] == listea[j]) {\n                  listebvf[index] = [listeb[index], false];\n                  listeavf[j] = [listea[j], false];\n                  listea[j] = 1;\n                  listeb[index] = 1;\n                  break;\n                }\n                j++;\n              }\n              index++;\n            }\n\n            a = 1;\n            b = 1;\n            for (let k in listea) {\n              a = a * listea[k];\n            }\n            for (let k in listeb) {\n              b = b * listeb[k];\n            }\n\n            numerateur = \"\";\n            denominateur = \"\";\n\n            for (let j in listeavf) {\n              if (listeavf[j][1] == true) {\n                numerateur += listeavf[j][0] + \"\\\\times\";\n              } else {\n                numerateur += \"\\\\cancel{\" + listeavf[j][0] + \"}\\\\times\";\n              }\n            }\n            numerateur = numerateur.substr(0, numerateur.length - 6);\n\n            for (let j in listebvf) {\n              if (listebvf[j][1] == true) {\n                denominateur += listebvf[j][0] + \"\\\\times\";\n              } else {\n                denominateur += \"\\\\cancel{\" + listebvf[j][0] + \"}\\\\times\";\n              }\n            }\n            denominateur = denominateur.substr(0, denominateur.length - 6);\n\n            texteCorr += `$=${signe}\\\\dfrac{${numerateur}}{${denominateur}}$`;\n            texteCorr += `$=${signe}${texFraction(a, b)}$`;\n            break;\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n\n    listeQuestionsToContenu(this); //Espacement de 2 em entre chaque questions.\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    3,\n    \"1 : Fractions à numérateurs et dénominateurs positifs \\n 2 : Type 1 et type 3 pour 50%/50%\\n 3 : Ecritures fractionnaires à numérateur et dénominateur entiers relatifs\",\n  ];\n  this.besoin_formulaire2_case_a_cocher = [\"Avec décomposition\"];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}