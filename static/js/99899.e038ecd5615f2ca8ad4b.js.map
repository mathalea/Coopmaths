{"version":3,"file":"js/99899.e038ecd5615f2ca8ad4b.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaTestcanPredef6_10qN1.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import Exercice from '../Exercice.js'\nimport { droiteGraduee2, mathalea2d } from '../../modules/2d'\nimport { listeQuestionsToContenu, randint, texNombrec, range1, combinaisonListesSansChangerOrdre, prenomF, choice, texteEnCouleur, calcul } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'CAN 6ième 10 questions (niveau 1)'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n// Les exports suivants sont optionnels mais au moins la date de publication semble essentielle\nexport const dateDePublication = '/11/2021' // La date de publication initiale au format 'jj/mm/aaaa' pour affichage temporaire d'un tag\n\n/**\n * @author Gilles Mora\n * Référence\n*/\nexport default function Can10Questions6N1 () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.nbQuestions = 10\n  this.nbCols = 1\n  this.nbColsCorr = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let questions = []\n    if (!this.sup) {\n      // Si aucune question n'est sélectionnée\n      questions = combinaisonListesSansChangerOrdre(range1(10), this.nbQuestions)\n    } else {\n      if (typeof this.sup === 'number') {\n        // Si c'est un nombre c'est qu'il y a qu'une seule question\n        questions[0] = this.sup\n        this.nbQuestions = 1\n      } else {\n        questions = this.sup.split('-') // Sinon on créé un tableau à partir des valeurs séparées par des -\n        this.nbQuestions = questions.length\n      }\n    }\n    for (let i = 0; i < questions.length; i++) {\n      questions[i] = parseInt(questions[i]) - 1\n    }\n    const listeIndex = combinaisonListesSansChangerOrdre(questions, this.nbQuestions)\n    const typeQuestionsDisponibles = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\n\n    for (let i = 0, texte, texteCorr, reponse, a, b, c, d, prenom1, maListe, fruits, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (typeQuestionsDisponibles[listeIndex[i]]) {\n        case '1':\n          a = randint(2, 6)\n          b = randint(4, 6)\n          texte = `$${a} \\\\times ${b}$`\n          texteCorr = `$${a} \\\\times ${b}=${a * b}$`\n          reponse = a * b\n          setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n          break\n        case '2':\n          a = randint(1, 5)\n          b = randint(1, 5)\n          c = randint(1, 3)\n          d = randint(1, 2)\n          reponse = d * 10 + b\n          texte = `$${c * 10 + a} + \\\\dots = ${calcul((c + d) * 10 + b + a)}$`\n          texteCorr = `On obtient le nombre cherché par la différence : $${calcul((c + d) * 10 + b + a)} - ${c * 10 + a} = ${reponse}$`\n          texteCorr += texteEnCouleur(`<br> Mentalement : <br>\n            On complète $${c * 10 + a}$ jusqu'à la dizaine la plus proche en ajoutant $${(c + 1) * 10 - (c * 10 + a)}$, on obtient $${(c + 1) * 10}$,\n            puis de $${(c + 1) * 10}$ à $${(c + d) * 10 + b + a}$, on ajoute encore $${(c + d) * 10 + b + a - (c + 1) * 10}$. <br>\n            Au total \n            on a donc ajouter $${(c + 1) * 10 - (c * 10 + a)}$ et  $${(c + d) * 10 + b + a - (c + 1) * 10}$ ce qui donne la réponse $${reponse}$.<br>\n              `)\n          reponse = d * 10 + b\n          setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n          break\n\n        case '3':\n          a = randint(1, 6)\n          if (choice([true, false])) {\n            b = a * 8\n            reponse = a * 2\n            setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n            texte = `Quel est le quart de $${b}$ ?`\n            texteCorr = `Le quart de $${b}$ est $${a * 2}.$`\n            texteCorr += texteEnCouleur(`<br> Mentalement : <br>\n            Prendre le quart d'une quantité revient à la diviser deux fois par $2$.<br>\n            Ainsi, le quart de $${b}$ est égal à $${b}\\\\div 2 \\\\div 2=${a * 4}\\\\div 2=${a * 2}$.\n               `)\n          } else {\n            b = a * 6\n            reponse = a * 2\n            setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n            texte = `Quel est le tiers de $${b}$ ?`\n            texteCorr = `Le tiers de $${b}$ est $${a * 2}.$`\n            texteCorr += texteEnCouleur(`<br> Mentalement : <br>\n            Prendre le tiers d'une quantité revient à la diviser par $3$.<br>\n            Ainsi, le tiers de $${b}$ est égal à $${b}\\\\div 3=${a * 2}$.\n            \n            `)\n          }\n          break\n\n        case '4':\n          a = calcul(randint(2, 9) / 10)\n          b = choice([1, 10])\n          texte = `$${b}-${texNombrec(a)}=$`\n          texteCorr = `$${b}-${texNombrec(a)}=${texNombrec(1 - a)}$`\n          reponse = calcul(b - a)\n          setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n          if (b === 1) {\n            texteCorr += texteEnCouleur(`\n    <br> Mentalement : <br>\n    $1$ unité = $10$ dixièmes.<br>\n    On enlève $${texNombrec(10 * a)}$ dixièmes à $10$ dixièmes, il en reste $${texNombrec(10 * (1 - a))}$.<br>\n    Ainsi, $1-${texNombrec(a)}=${texNombrec(1 - a)}$.  `)\n          } else {\n            texteCorr += texteEnCouleur(`\n    <br> Mentalement : <br>\n    $10$ unités = $100$ dixièmes.<br>\n    On enlève $${texNombrec(10 * a)}$ dixièmes à $100$ dixièmes, il en reste $${texNombrec(10 * (10 - a))}$.<br>\n    Ainsi, $10-${texNombrec(a)}=${texNombrec(10 - a)}$.  `)\n          }\n          break\n\n        case '5':\n          a = randint(6, 9) // choix de la table = écart entre deux graduations\n          c = Math.floor(randint(10, 40) / a) * a // premier nombre.\n          maListe = []\n          for (let q = 0; q < 3; q++) {\n            maListe.push([c + a * q, texNombrec(c + a * q)])\n          }\n          d = droiteGraduee2({\n            Unite: 3 / a,\n            Min: c - a,\n            Max: c + 3 * a,\n            x: 0,\n            y: 0,\n            thickDistance: a,\n            thickSec: false,\n            thickOffset: 0,\n            axeStyle: '->',\n            pointListe: [[c + a * 3, 'A']],\n            labelListe: maListe,\n            pointCouleur: 'blue',\n            pointStyle: 'x',\n            labelsPrincipaux: false\n          })\n          reponse = c + 3 * a\n          texte = mathalea2d({ xmin: -1, ymin: -1, xmax: 15, ymax: 2, scale: 0.5 }, d) + 'Quel est le nombre écrit sous le point A ?'\n          texteCorr = `${texteEnCouleur('Comme les graduations vont de ' + a)} ${texteEnCouleur('en ' + a)} ${texteEnCouleur(', le nombre écrit sous le point $A$ correspond à ')} ${texteEnCouleur(c + 2 * a)} ${texteEnCouleur(' + ' + a)} ${texteEnCouleur('donc c\\'est ' + texNombrec(c + 3 * a) + '.')}`\n          setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n          break\n        case '6':\n          a = randint(2, 5)\n          b = randint(2, 9)\n          c = randint(2, 9)\n          reponse = calcul(a * 1000 + b * 10 + c * 100)\n          if (choice([true, false])) {\n            texte = `$${texNombrec(a)}\\\\times 1000 + ${texNombrec(b)}\\\\times 10 + ${texNombrec(c)}\\\\times 100=$`\n            texteCorr = `$${texNombrec(a)}\\\\times 1000 + ${texNombrec(b)}\\\\times 10 + ${texNombrec(c)}\\\\times 100 =${texNombrec(reponse)}$`\n            texteCorr += texteEnCouleur(`<br> Mentalement : <br>\n      On décompose le calcul (milliers, centaines puis dizaines) : <br>\n      $\\\\bullet$ $${texNombrec(a)}\\\\times 1000=${texNombrec(a * 1000)}$.<br>\n      $\\\\bullet$ $${texNombrec(c)}\\\\times 100=${texNombrec(c * 100)}$.<br>\n      $\\\\bullet$ $${texNombrec(b)}\\\\times 10=${texNombrec(b * 10)}$.<br>\n      Ainsi,  <br>\n      $\\\\begin{aligned}\n    ${texNombrec(a)}\\\\times 1000 + ${texNombrec(b)}\\\\times 10 + ${texNombrec(c)}\\\\times 100 &=${texNombrec(a * 1000)}+${texNombrec(c * 100)}+${texNombrec(b * 10)}\\\\\\\\\n    &=${texNombrec(reponse)}\n    \\\\end{aligned}$.`)\n          } else {\n            texte = `$ ${texNombrec(c)}\\\\times 100+ ${texNombrec(b)}\\\\times 10 + ${texNombrec(a)}\\\\times 1000 =$`\n            texteCorr = `$ ${texNombrec(c)}\\\\times 100+ ${texNombrec(b)}\\\\times 10 + ${texNombrec(a)}\\\\times 1000  =${texNombrec(reponse)}$`\n            texteCorr += texteEnCouleur(`<br> Mentalement : <br>\n    On décompose le calcul (milliers, centaines puis dizaines) : <br>\n    $\\\\bullet$ $${texNombrec(a)}\\\\times 1000=${texNombrec(a * 1000)}$.<br>\n    $\\\\bullet$ $${texNombrec(c)}\\\\times 100=${texNombrec(c * 100)}$.<br>\n    $\\\\bullet$ $${texNombrec(b)}\\\\times 10=${texNombrec(b * 10)}$.<br>\n    Ainsi, <br>$\\\\begin{aligned}\n    ${texNombrec(c)}\\\\times 100+ ${texNombrec(b)}\\\\times 10 + ${texNombrec(a)}\\\\times 1000 &=${texNombrec(a)}\\\\times 1000 + ${texNombrec(c)}\\\\times 100 + ${texNombrec(b)}\\\\times 10\\\\\\\\\n    & =${texNombrec(a * 1000)}+${texNombrec(c * 100)}+${texNombrec(b * 10)}\\\\\\\\\n    &=${texNombrec(reponse)}\n    \\\\end{aligned}$. `)\n          }\n          setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n          break\n        case '7':\n          a = randint(1, 3)\n          b = randint(10, 40)\n          d = calcul(a * 60 + b)\n          texte = `Compléter : <br> $${a}$ heures $${b}$ minutes $=$`\n          texteCorr = `Il y a $60$ minutes dans une heure.<br>\n      Comme $${a} \\\\times 60 + ${b}=${d}$ alors $${a}$h $${b}$min = $${d}$ minutes`\n          reponse = d\n          setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n          break\n\n        case '8':\n          fruits = [\n            ['pêches', 4, 11, 19],\n            ['Noix', 5, 4, 9],\n            ['cerises', 6, 11, 19],\n            ['pommes', 3, 21, 29],\n            ['framboises', 15, 1, 9],\n            ['fraises', 7, 6, 9],\n            ['citrons', 3, 15, 19],\n            ['bananes', 3, 15, 19]\n          ]\n          a = randint(0, 7)\n          b = fruits[a][1]\n          c = randint(fruits[a][2], fruits[a][3])\n          reponse = calcul(c / 5 * b)\n          texte = `$${texNombrec(c / 10)}$ kg de ${fruits[a][0]} coûtent $${texNombrec(c / 10 * b)}$ €, \n            combien coûtent $${texNombrec(c / 5)}$ kg de ${fruits[a][0]} ?`\n          texteCorr = `On reconnaît une situation de proportionnalité : <br>\n            La masse de ${fruits[a][0]} est proportionnelle au prix.<br>\n            On remarque qu'on demande le prix pour une quantité double ($${texNombrec(c / 5)}=2\\\\times ${texNombrec(c / 10)}$).<br> \n            Ainsi, le prix à payer pour $${texNombrec(c / 5)}$ kg de ${fruits[a][0]} est :  $${texNombrec(c / 10 * b)} \\\\times 2 = ${texNombrec(reponse)}$ €`\n          setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n          break\n\n        case '9':\n          prenom1 = prenomF()\n          a = randint(11, 19)\n          b = randint(3, 7)\n          if (choice([true, false])) {\n            texte = `${prenom1} a $${a}$ ans. Elle a  $${b}$ ans de moins que sa soeur.<br>\n          Quel est l'âge de sa soeur ? `\n            texteCorr = `Puisque ${prenom1} a $${a}$ ans et qu'elle a $${b}$ ans de moins que sa soeur, \n          alors sa soeur a $${b}$ ans de plus qu'elle, soit $${a}+${b}=${a + b}$ ans.`\n            reponse = a + b\n          } else {\n            texte = `${prenom1} a $${a}$ ans. Elle a  $${b}$ ans de plus que sa soeur.<br>\n          Quel est l'âge de sa soeur ? `\n            texteCorr = `Puisque ${prenom1} a $${a}$ ans et qu'elle a $${b}$ ans de plus que sa soeur, \n          alors sa soeur a $${b}$ ans de moins qu'elle, soit $${a}-${b}=${a - b}$ ans.`\n            reponse = a - b\n          }\n\n          setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n          break\n\n        case '10':\n          a = randint(6, 11)\n          b = randint(1, 5)\n          texte = `Le périmètre d'un rectangle de $${a}$ m de longueur $${b}$ m de largeur est : `\n          texteCorr = `Le périmètre d'un rectangle de longueur $L$ et de largeur $\\\\ell$ est donné par : $2\\\\times (L+\\\\ell)$.<br>\n          On applique avec $L=${a}$ et $\\\\ell=${b}$, on obtient : \n          $2(${a}+${b})=2\\\\times ${a + b}=${2 * a + 2 * b}$.`\n          reponse = 2 * (a + b)\n          setReponse(this, i, reponse, { formatInteractif: 'calcul' })\n          break\n      }\n      if (typeQuestionsDisponibles[listeIndex[i]] === '7') {\n        if (!this.interactif) {\n          texte += '.... minutes'\n        } else {\n          texte += ajouteChampTexteMathLive(this, i, 'inline largeur15') + 'min'\n        }\n      } else {\n        if (typeQuestionsDisponibles[listeIndex[i]] === '8') {\n          if (!this.interactif) {\n            texte += ''\n          } else { texte += ajouteChampTexteMathLive(this, i, 'inline largeur15') + '€' }\n        } else {\n          if (typeQuestionsDisponibles[listeIndex[i]] === '9') {\n            if (!this.interactif) {\n              texte += ''\n            } else { texte += ajouteChampTexteMathLive(this, i, 'inline largeur15') + 'ans' }\n          } else {\n            if (typeQuestionsDisponibles[listeIndex[i]] === '10') {\n              if (!this.interactif) {\n                texte += '... m'\n              } else { texte += ajouteChampTexteMathLive(this, i, 'inline largeur15') + ' m' }\n            } else {\n              texte += ajouteChampTexteMathLive(this, i, 'inline largeur15')\n            }\n          }\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n}\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","interactifReady","interactifType","dateDePublication","Can10Questions6N1","questions","sup","split","length","combinaisonListesSansChangerOrdre","range1","parseInt","listeIndex","typeQuestionsDisponibles","texte","texteCorr","reponse","a","b","c","d","prenom1","maListe","fruits","cpt","randint","setReponse","formatInteractif","calcul","texteEnCouleur","choice","texNombrec","Math","floor","q","droiteGraduee2","Unite","Min","Max","x","y","thickDistance","thickSec","thickOffset","axeStyle","pointListe","labelListe","pointCouleur","pointStyle","labelsPrincipaux","mathalea2d","xmin","ymin","xmax","ymax","scale","prenomF","ajouteChampTexteMathLive","listeQuestionsToContenu"],"sourceRoot":""}