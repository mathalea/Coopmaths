{"version":3,"file":"js/43497.8f44aa6cb82b9993647c.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/beta/betaEquationsLog.js"],"sourcesContent":["/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import { listeQuestionsToContenu, randint, combinaisonListes, ecritureAlgebrique, calcul, texRacineCarree, ecritureParentheseSiNegatif, texNombre, fractionSimplifiee, texFraction } from '../../modules/outils.js'\nimport { context } from '../../modules/context.js'\nimport Exercice from '../Exercice.js'\nexport const titre = 'Equations avec logarithmes'\nconst drteParab = l => l.length === 2 ? `${l[0]}x${ecritureAlgebrique(l[1])}` : `${l[0]}x^2${ecritureAlgebrique(l[1])}x${ecritureAlgebrique(l[2])}`\nconst EgalEnviron = (v, d = 3) => ((Math.abs(v) * 10 ** d) % 1 > 0 ? '\\\\approx' : '=') + texNombre(calcul(v, 3))\n\n/**\n * Description didactique de l'exercice\n * @author Eric Schrafstetter\n * Référence\n*/\nexport default function EquationAvecUnLogarithme () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Résoudre dans $\\\\mathbb{R}$ les équations suivantes :'\n  this.nbQuestions = 2\n  this.nbCols = 1 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 1 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 3 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  context.isHtml ? (this.spacingCorr = 2) : (this.spacingCorr = 1.5)\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    const typesDeQuestionsDisponibles = ['lnu=lnv', '2lnu=lnv', 'lnu+lnv=lnw']\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    const Txtsimplifier = '<br>L\\'équation étant du type $\\\\ln(a)=\\\\ln(b)$, nous pouvons enlever les logarithmes des 2 côtés de l\\'égalité :'\n    const TxtConclusion = '<br>$\\\\underline{\\\\text{Conclusion}}$ :'\n    for (let i = 0, texte, texteCorr, droites, c, a, b, nbelt, formule, u, v, x1, x2, etape, faux, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      droites = []\n      c = []\n      for (let j = 0; j < 3; j++) {\n        a = randint(-10, 10, [0, -1, 1]) // on génère 3 équations de droites ax+b\n        b = randint(-10, 10, 0)\n        c.push(a, b)\n        droites.push(`${a}x${ecritureAlgebrique(b)}`)\n      }\n\n      switch (listeTypeDeQuestions[i]) {\n        case 'lnu=lnv': // Equation du type ln(u)=ln(v)\n          nbelt = 2 // 2 éléments u et v\n          // Enoncé\n          texte = `$\\\\ln(${droites[0]})=\\\\ln(${droites[1]})$`\n          formule = Txtsimplifier\n          u = [c[0], c[1]] // u et v sont des droites\n          v = [c[2], c[3]]\n          break\n        case '2lnu=lnv': // Equation du type 2.ln(u) = ln(v)\n          nbelt = 2 // 2 éléments u et v\n          texte = `$2\\\\ln(${droites[0]})=\\\\ln(${droites[1]})$`\n          formule = '<br>Ecrivons le côté gauche sous la forme $\\\\ln(a)$ en utilisant la propriété $n.\\\\ln(a)=\\\\ln(a^n)$ :'\n          formule += `<br>$\\\\ln[(${droites[0]})^2]=\\\\ln(${droites[1]})$`\n          formule += Txtsimplifier\n          formule += `<br>$(${droites[0]})^2=${droites[1]}$`\n          u = [c[0] * c[0], 2 * c[0] * c[1], c[1] * c[1]] // u est une parabole\n          v = [c[2], c[3]] // v est une droite\n          formule += `<br>Comme $(${droites[0]})^2=${drteParab(u)}$, l'équation s'écrit :`\n          break\n        case 'lnu+lnv=lnw': // Equation du type ln(u) + ln(v) = ln(w)\n          nbelt = 3 // 3 éléments u, v et w\n          texte = `$\\\\ln(${droites[0]})+\\\\ln(${droites[1]})=\\\\ln(${droites[2]})$`\n          formule = '<br>Ecrivons le côté gauche sous la forme $\\\\ln(a)$ en utilisant la propriété $\\\\ln(u)+\\\\ln(v)=\\\\ln(uv)$ :'\n          formule += `<br>$\\\\ln[(${droites[0]})(${droites[1]})]=\\\\ln(${droites[2]})$`\n          formule += Txtsimplifier\n          formule += `<br>$(${droites[0]})(${droites[1]})=${droites[2]}$`\n          u = [c[0] * c[2], c[0] * c[3] + c[1] * c[2], c[1] * c[3]] // u est une parabole\n          v = [c[4], c[5]] // v est une droite\n          formule += `<br>Comme $(${droites[0]})(${droites[1]})=${drteParab(u)}$, l'équation s'écrit :`\n          break\n      }\n      texteCorr = `Cette équation n'a un sens que si : $${droites[0]} > 0$ et $${droites[1]} > 0$ ` +\n        (nbelt === 2 ? '' : ` et $${droites[2]} > 0$`)\n      texteCorr += formule\n      texteCorr += `<br>$${drteParab(u)}=${drteParab(v)}$`\n      if (u.length === 3) { // équation du 2e degré\n        a = [u[0], u[1] - v[0], u[2] - v[1]]\n        texteCorr += '<br>En passant tous les termes d\\'un même côté :'\n        texteCorr += `<br>$${drteParab(a)}=0$`\n        b = a[1] ** 2 - 4 * a[0] * a[2]\n        texteCorr += `<br>Son discriminant vaut $\\\\Delta = ${b}$`\n        if (b > 0) { // On a a priori 2 solutions\n          texteCorr += '$> 0$'\n          x1 = (-a[1] - Math.sqrt(b)) / 2 / a[0]\n          x2 = (-a[1] + Math.sqrt(b)) / 2 / a[0]\n          texteCorr += '<br>D\\'où 2 solutions '\n          texteCorr += `$x_1=\\\\dfrac{${ecritureAlgebrique(-a[1])}-${texRacineCarree(b)}}{2\\\\times ${ecritureParentheseSiNegatif(a[0])}}${EgalEnviron(x1, 3)}$`\n          texteCorr += ` et $x_2=\\\\dfrac{${ecritureAlgebrique(-a[1])}+${texRacineCarree(b)}}{2\\\\times ${ecritureParentheseSiNegatif(a[0])}}${EgalEnviron(x2)}$`\n          // On va vérifier si les solutions conviennent\n          // eslint-disable-next-line no-unused-vars\n          etape = [x1, x2].forEach((v, i) => {\n            texteCorr += `<br>Vérifions si $x_${i + 1}$ est bien dans le domaine de définition de l'équation : `\n            faux = false\n            for (let j = 0; j < 3; j++) {\n              const resultat = c[2 * j] * v + c[2 * j + 1]\n              texteCorr += `<br>$${c[2 * j]}x_${i + 1}${ecritureAlgebrique(c[2 * j + 1])}${EgalEnviron(resultat)}`\n              if (c[2 * j] * v + c[2 * j + 1] > 0) {\n                texteCorr += '> 0$'\n              } else {\n                texteCorr += '\\\\leq 0$ ce qui n\\'est pas possible.'\n                faux = true\n                break\n              }\n            }\n            texteCorr += `${TxtConclusion} La valeur $x_${i + 1}$ ` + (faux ? 'ne convient pas' : '$\\\\textbf{\\\\text{convient}}$')\n          })\n        } else if (b === 0) { // a priori 1 seule solution\n          x1 = -a[1] / 2 / a[0]\n          texteCorr += '<br>Ce qui donne 1 solution '\n          texteCorr += `$x_1=\\\\dfrac{${ecritureAlgebrique(-a[1])}}{2\\\\times ${ecritureParentheseSiNegatif(a[0])}}${EgalEnviron(x1)}$`\n          texteCorr += '<br>Vérifions si cette solution est bien dans le domaine de définition de l\\'équation : '\n          faux = false\n          // On va vérifier si la solution convient\n          for (let j = 0; j < 3; j++) {\n            texteCorr += `<br>$${c[2 * j]}x_${i + 1}${ecritureAlgebrique(c[2 * j + 1])}${EgalEnviron(c[2 * j] * v + c[2 * j + 1])}`\n            if (c[2 * j] * v + c[2 * j + 1] > 0) {\n              texteCorr += ' > 0$'\n            } else {\n              texteCorr += '\\\\leq 0$ ce qui n\\'est pas possible.'\n              faux = true\n              break\n            }\n          }\n          texteCorr += `${TxtConclusion} La valeur $x_1$ ` + (faux ? 'ne convient pas' : '$\\\\textbf{\\\\text{convient}}$')\n        } else { // pas de solution\n          texteCorr += '$< 0$'\n          texteCorr += `${TxtConclusion} L'équation n'a donc pas de solution réelle.`\n        }\n      } else { // Equation 1er degré\n        a = [u[0] - v[0], v[1] - u[1]]\n        texteCorr += `<br>Ce qui donne : $${a[0]}x=${a[1]}$`\n        if (a[0] === 0) { // 0.x = b\n          if (a[1] === 0) { // 0.x = 0\n            texteCorr += `${TxtConclusion} Tous les réels du domaine de définition sont solutions de l'équation.`\n          } else {\n            texteCorr += `${TxtConclusion} L'équation n'a pas de solution.`\n          }\n        } else { // a.x = b avec a non nul\n          x1 = fractionSimplifiee(a[1], a[0])\n          x2 = a[1] / a[0] // valeur approchée\n          texteCorr += `<br>Vérifions si la solution $x=${texFraction(x1[0], x1[1])}$ est bien dans le domaine de définition de l'équation : `\n          faux = false\n          // On va vérifier si la solution convient\n          for (let j = 0; j < 2; j++) {\n            const resultat = c[2 * j] * x2 + c[2 * j + 1]\n            texteCorr += `<br>$${c[2 * j]}\\\\times${texFraction(x1[0], x1[1])}${ecritureAlgebrique(c[2 * j + 1])}${EgalEnviron(resultat)}`\n            if (c[2 * j] * x2 + c[2 * j + 1] > 0) {\n              texteCorr += '> 0$'\n            } else {\n              texteCorr += '\\\\leq 0$ ce qui n\\'est pas possible.'\n              faux = true\n              break\n            }\n          }\n          texteCorr += `${TxtConclusion} La valeur ` + (faux ? 'ne convient pas' : '$\\\\textbf{\\\\text{convient}}$')\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 3]\n}\n\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n"],"names":["Exercice","this","titre","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbCols","nbColsCorr","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","nbQuestions","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","nouvelleVersion","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push","drteParab","l","length","ecritureAlgebrique","EgalEnviron","v","d","Math","abs","texNombre","calcul","EquationAvecUnLogarithme","sup","context","listeTypeDeQuestions","combinaisonListes","Txtsimplifier","TxtConclusion","texte","texteCorr","droites","c","a","b","nbelt","formule","u","x1","x2","etape","faux","cpt","j","randint","sqrt","texRacineCarree","ecritureParentheseSiNegatif","forEach","resultat","fractionSimplifiee","texFraction","listeQuestionsToContenu"],"sourceRoot":""}