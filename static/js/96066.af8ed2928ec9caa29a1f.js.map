{"version":3,"file":"js/96066.af8ed2928ec9caa29a1f.js","mappings":"oRAKO,MAAMA,EAAQ,8CACRC,GAAkB,EAClBC,EAAiB,WACjBC,GAAW,EACXC,EAAU,SAOR,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKP,MAAQA,EACbO,KAAKC,SAAW,GAChBD,KAAKE,QAAU,EACfF,KAAKG,YAAc,EACnBH,KAAKI,YAAc,EACnBJ,KAAKK,uBAAwB,EAC7BL,KAAKM,OAAS,EACdN,KAAKO,WAAa,EAClBP,KAAKQ,KAAM,EAEXR,KAAKS,gBAAkB,WACrBT,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxBX,KAAKY,eAAiB,GACtB,MAAMC,GAASC,EAAAA,EAAAA,KAAO,CACpB,WACA,MACA,OACA,QACA,UACA,QACA,YAEF,IAAIC,EAEFA,EADEf,KAAKQ,KACeQ,EAAAA,EAAAA,KAAQ,EAAG,IAEXC,EAAAA,EAAAA,MACpBD,EAAAA,EAAAA,KAAQ,EAAG,IAAKA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,IAGpC,MAAME,GAAeD,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,KAAQ,EAAG,IAAKA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,IACtDG,GAAWL,EAAAA,EAAAA,KAAO,CAAC,aAAc,WAAY,WACnD,IAAIM,EAEAC,EACArB,KAAKQ,KACPa,GAAeL,EAAAA,EAAAA,KAAQ,GAAI,IAC3BI,EAAqC,KAAhBJ,EAAAA,EAAAA,KAAQ,EAAG,KAEhCK,GAAeJ,EAAAA,EAAAA,MAAOD,EAAAA,EAAAA,KAAQ,GAAI,KAAMA,EAAAA,EAAAA,KAAQ,EAAG,GAAK,IACxDI,EAAuC,IAAlBJ,EAAAA,EAAAA,KAAQ,GAAI,KAEnC,MAAMM,GAAWR,EAAAA,EAAAA,KAAO,CAAC,QAAS,OAAQ,WACpCS,GAAoBN,EAAAA,EAAAA,KAAOF,EAAsBG,GACjDM,GAAoBP,EAAAA,EAAAA,KAAQG,EAAqBC,EAAgB,KACjEI,GAAYR,EAAAA,EAAAA,KAAOM,EAAoBC,GACvCE,GAAsBT,EAAAA,EAAAA,KAAOG,EAAqB,KAExD,IAAIO,EAAS,GAAEd,aAAiBe,EAAAA,EAAAA,KAAUb,YAA8BI,QAAcU,EAAAA,EAAAA,KAAQX,WAC9FS,GAAU,MAAKP,UAA2BE,QAAcO,EAAAA,EAAAA,KAAQR,4CAChE,IAAIS,EAAa,YAAWX,QAAcS,EAAAA,EAAAA,KAAUb,YAA6Bc,EAAAA,EAAAA,KAAQX,cAAwBW,EAAAA,EAAAA,KAAQN,WACzHO,GAAc,WAAUR,QAAcM,EAAAA,EAAAA,KAAUF,YAA6BG,EAAAA,EAAAA,KAAQR,cAAwBO,EAAAA,EAAAA,KAAUJ,YACvHM,GAAc,yBAAuBF,EAAAA,EAAAA,KAAUL,WAA0BK,EAAAA,EAAAA,KAAUJ,OAC/EO,OAAOC,WAAUf,EAAAA,EAAAA,KAAiD,KAAzCM,EAAoBC,KAC/CM,GAAa,MAEbA,GAAa,MAEfA,GAAc,IAAEG,EAAAA,EAAAA,KAAeR,WAC/BK,GAAc,6EAA2EF,EAAAA,EAAAA,KAAUb,YAA6Bc,EAAAA,EAAAA,KAAQX,cAAwBU,EAAAA,EAAAA,KAAUF,YAA6BG,EAAAA,EAAAA,KAAQR,WAC3MU,OAAOC,UAAsB,IAAZP,GACnBK,GAAa,MAEbA,GAAa,MAEfA,GAAc,IAAEG,EAAAA,EAAAA,KAAeR,WAC1BS,EAAAA,GAAAA,SACHJ,EAAa,YAAWX,SAAeS,EAAAA,EAAAA,KAAUb,wBAAyCc,EAAAA,EAAAA,KAAQX,6BAAuCW,EAAAA,EAAAA,KAAQN,yBACjJO,GAAc,WAAUR,SAAeM,EAAAA,EAAAA,KAAUF,wBAAyCG,EAAAA,EAAAA,KAAQR,6BAAuCO,EAAAA,EAAAA,KAAUJ,yBACnJM,GAAc,0BAAwBF,EAAAA,EAAAA,KAAUL,wBAAuCK,EAAAA,EAAAA,KAAUJ,oBAC7FO,OAAOC,UAAsB,IAAZP,GACnBK,GAAa,IAEbA,GAAa,WAEfA,GAAc,KAAGG,EAAAA,EAAAA,KAAeR,0BAIlC,MAAMU,GAAUF,EAAAA,EAAAA,KAAeR,GACzBW,EAAW,CAACD,EAAU,GAAEA,OAC9BE,EAAAA,EAAAA,IAAWrC,KAAM,EAAGoC,GAChBF,EAAAA,GAAAA,QACFlC,KAAKY,eAAe,GAAGuB,QAAQG,OAAO,IAAKC,EAAAA,EAAAA,KAAQd,EAAW,GAC9DzB,KAAKY,eAAe,GAAGuB,QAAQK,MAAMC,OAAS,EAC9CzC,KAAKY,eAAe,GAAGuB,QAAQK,MAAME,SAAW,GAE9C1C,KAAK2C,aACPhB,GAAU,SAAOiB,EAAAA,EAAAA,IAAyB5C,KAAM,EAAG,mBAAoB,CAAE6C,WAAY,KAAMlB,MAAO,sCAEpG3B,KAAKU,eAAeoC,KAAKnB,GACzB3B,KAAKW,iBAAiBmC,KAAKhB,IAE3BiB,EAAAA,EAAAA,KAAkC/C,OAEpCA,KAAKgD,4BAA8B,CAAC,qB,gBC5GvB,SAASjD,IAItBC,KAAKP,MAAQ,GACbO,KAAKiD,YAAa,EAclBjD,KAAKC,SAAW,GAChBD,KAAKkD,mBAAqB,GAC1BlD,KAAKmD,aAAe,GACpBnD,KAAKU,eAAiB,GACtBV,KAAKW,iBAAmB,GACxBX,KAAKoD,QAAU,GACfpD,KAAKqD,kBAAoB,GACzBrD,KAAKY,eAAiB,GACtBZ,KAAKsD,sBAAwB,GAK7BtD,KAAKE,QAAU,EACfF,KAAKG,YAAc,EAKnBH,KAAKuD,mBAAoB,EACzBvD,KAAKwD,cAAgB,GACrBxD,KAAKyD,oBAAqB,EAC1BzD,KAAKK,uBAAwB,EAC7BL,KAAKM,OAAS,EACdN,KAAKO,WAAa,EAClBP,KAAK0D,kBAAmB,EACxB1D,KAAK2D,sBAAuB,EAC5B3D,KAAK4D,mBAAoB,EACzB5D,KAAK6D,uBAAwB,EAM7B7D,KAAK8D,QAAS,EACd9D,KAAK+D,gBAAkB,EAKvB/D,KAAKI,YAAc,GACnBJ,KAAKgE,mBAAqB,EAC1BhE,KAAKiE,+BAAgC,EACrCjE,KAAKkE,qBAAsB,EAC3BlE,KAAKmE,oBAAqB,EAC1BnE,KAAKoE,MAAQ,GAEbpE,KAAK2C,YAAa,EAClB3C,KAAKqE,uBAAwB,EAE7BrE,KAAKsE,2BAA4B,EACjCtE,KAAKuE,uBAAwB,EAC7BvE,KAAKgD,6BAA8B,EAEnChD,KAAKwE,4BAA6B,EAClCxE,KAAKyE,wBAAyB,EAC9BzE,KAAK0E,8BAA+B,EAEpC1E,KAAK2E,4BAA6B,EAClC3E,KAAK4E,wBAAyB,EAC9B5E,KAAK6E,8BAA+B,EAEpC7E,KAAK8E,4BAA6B,EAClC9E,KAAK+E,wBAAyB,EAC9B/E,KAAKgF,8BAA+B,EAMpChF,KAAKiF,cAAe,EASpBjF,KAAKkF,eAAiB,GAMtBlF,KAAKS,gBAAkB,SAAU0E,KAQjCnF,KAAKoF,oBAAsB,SAAUC,KAAMC,GAC/B,IAAND,IAASrF,KAAKkF,eAAiB,IACnC,IAAIK,EAAiB,GACrB,IAAK,MAAMC,KAAOF,OACJG,IAARD,IAAmBD,GAAkBC,EAAIE,YAE/C,QAAI1F,KAAKkF,eAAeS,QAAQJ,IAAmB,KAGjDvF,KAAKkF,eAAepC,KAAKyC,IAClB,I,gOC/HN,MAAM9F,EAAQ,yBAON,SAASmG,IACtB9F,EAAAA,QAAAA,KAAoBE,MACpBA,KAAKI,YAAc,EACnBJ,KAAKQ,KAAM","sources":["webpack://mathalea/./src/js/exercices/6e/6C32.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/exercices/c3/c3C31.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, randint, calcul, choice, arrondiVirgule, texNombre, texPrix, arrondi } from '../../modules/outils.js'\nimport { setReponse, ajouteChampTexteMathLive } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Résoudre des problèmes de courses au marché'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcReady = true\nexport const amcType = 'AMCNum'\n\n/**\n * On achète 2 aliments dont on connait la masse (un en grammes et l'autre en kilogrammes) et le prix au kilogramme. Il faut calculer le prix total.\n * @author Rémi Angot\n * Référence 6C32\n */\nexport default function ProblemeCourse () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.spacing = 2\n  this.spacingCorr = 2\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = false\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    const prenom = choice([\n      'Benjamin',\n      'Léa',\n      'Aude',\n      'Julie',\n      'Corinne',\n      'Mehdi',\n      'Joaquim'\n    ])\n    let masseEnKgDeAliment1\n    if (this.sup) {\n      masseEnKgDeAliment1 = randint(2, 5)\n    } else {\n      masseEnKgDeAliment1 = calcul(\n        randint(2, 5) + randint(1, 9) / 10\n      )\n    }\n    const prixAliment1 = calcul(randint(2, 4) + randint(1, 9) / 10)\n    const aliment1 = choice(['courgettes', 'carottes', 'pommes'])\n    let masseEnGdeAliment2\n\n    let prixAliment2\n    if (this.sup) {\n      prixAliment2 = randint(15, 25)\n      masseEnGdeAliment2 = randint(2, 7) * 500\n    } else {\n      prixAliment2 = calcul(randint(12, 23) + randint(1, 9) / 10)\n      masseEnGdeAliment2 = randint(21, 97) * 10\n    }\n    const aliment2 = choice(['boeuf', 'veau', 'poulet'])\n    const prixTotalAliment1 = calcul(masseEnKgDeAliment1 * prixAliment1)\n    const prixTotalAliment2 = calcul((masseEnGdeAliment2 * prixAliment2) / 1000)\n    const prixTotal = calcul(prixTotalAliment1 + prixTotalAliment2)\n    const masseEnKgDeAliment2 = calcul(masseEnGdeAliment2 / 1000)\n\n    let texte = `${prenom} achète ${texNombre(masseEnKgDeAliment1)} kg de ${aliment1} à ${texPrix(prixAliment1)} €/kg `\n    texte += `et ${masseEnGdeAliment2} g de ${aliment2} à ${texPrix(prixAliment2)} €/kg. Quel est le prix total à payer ?`\n    let texteCorr = `Prix des ${aliment1} : ${texNombre(masseEnKgDeAliment1)} kg × ${texPrix(prixAliment1)} €/kg = ${texPrix(prixTotalAliment1)} €` + '<br>'\n    texteCorr += `Prix du ${aliment2} : ${texNombre(masseEnKgDeAliment2)} kg × ${texPrix(prixAliment2)} €/kg = ${texNombre(prixTotalAliment2)} € ` + '<br>'\n    texteCorr += `Prix total à payer : ${texNombre(prixTotalAliment1)} € + ${texNombre(prixTotalAliment2)} €`\n    if (Number.isInteger(calcul((prixTotalAliment1 + prixTotalAliment2) * 100))) {\n      texteCorr += ' = '\n    } else {\n      texteCorr += ' ≈ '\n    }\n    texteCorr += `${arrondiVirgule(prixTotal)} €<br>`\n    texteCorr += `<br><i>Le prix total aurait aussi pu être trouvé en un seul calcul</i> : ${texNombre(masseEnKgDeAliment1)} kg × ${texPrix(prixAliment1)} €/kg + ${texNombre(masseEnKgDeAliment2)} kg × ${texPrix(prixAliment2)} €/kg `\n    if (Number.isInteger(prixTotal * 100)) {\n      texteCorr += ' = '\n    } else {\n      texteCorr += ' ≈ '\n    }\n    texteCorr += `${arrondiVirgule(prixTotal)} €<br>`\n    if (!context.isHtml) {\n      texteCorr = `Prix des ${aliment1} : $${texNombre(masseEnKgDeAliment1)}~\\\\text{kg}\\\\times${texPrix(prixAliment1)}~\\\\text{\\\\euro{}/kg} = ${texPrix(prixTotalAliment1)}~\\\\text{\\\\euro}$` + '<br>'\n      texteCorr += `Prix du ${aliment2} : $${texNombre(masseEnKgDeAliment2)}~\\\\text{kg}\\\\times${texPrix(prixAliment2)}~\\\\text{\\\\euro{}/kg} = ${texNombre(prixTotalAliment2)}~\\\\text{\\\\euro}$` + '<br>'\n      texteCorr += `Prix total à payer : $${texNombre(prixTotalAliment1)}~\\\\text{\\\\euro} + ${texNombre(prixTotalAliment2)}~\\\\text{\\\\euro}`\n      if (Number.isInteger(prixTotal * 100)) {\n        texteCorr += '='\n      } else {\n        texteCorr += '\\\\approx'\n      }\n      texteCorr += ` ${arrondiVirgule(prixTotal)}~\\\\text{\\\\euro}$<br>`\n    }\n\n    // Pour tolérer l'écriture d'un somme avec des centimes, par exemple 54,1 € ou 54,10 €\n    const reponse = arrondiVirgule(prixTotal)\n    const reponses = [reponse, `${reponse}0`]\n    setReponse(this, 0, reponses)\n    if (context.isAmc) {\n      this.autoCorrection[0].reponse.valeur[0] = arrondi(prixTotal, 2)\n      this.autoCorrection[0].reponse.param.digits = 5\n      this.autoCorrection[0].reponse.param.decimals = 2\n    }\n    if (this.interactif) {\n      texte += `<br> ${ajouteChampTexteMathLive(this, 0, 'largeur20 inline', { texteApres: ' €', texte: 'Le prix total à payer sera de ' })}`\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n\n    listeQuestionsToContenuSansNumero(this)\n  }\n  this.besoinFormulaireCaseACocher = ['Calculs faciles']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n","import ProblemeCourse from '../6e/6C32.js'\nexport const titre = 'Problème - Les courses'\nexport { interactifReady, interactifType, amcReady, amcType } from '../6e/6C32.js'\n/**\n *Clone de 6C32 pour les CM1-CM2\n *\n * @author Jean-Claude Lhote\n */\nexport default function ProblemeCourseC3 () {\n  ProblemeCourse.call(this)\n  this.nbQuestions = 1\n  this.sup = true\n}\n"],"names":["titre","interactifReady","interactifType","amcReady","amcType","ProblemeCourse","Exercice","this","consigne","spacing","spacingCorr","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","prenom","choice","masseEnKgDeAliment1","randint","calcul","prixAliment1","aliment1","masseEnGdeAliment2","prixAliment2","aliment2","prixTotalAliment1","prixTotalAliment2","prixTotal","masseEnKgDeAliment2","texte","texNombre","texPrix","texteCorr","Number","isInteger","arrondiVirgule","context","reponse","reponses","setReponse","valeur","arrondi","param","digits","decimals","interactif","ajouteChampTexteMathLive","texteApres","push","listeQuestionsToContenuSansNumero","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","ProblemeCourseC3"],"sourceRoot":""}