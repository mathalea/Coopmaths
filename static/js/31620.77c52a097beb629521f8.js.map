{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6S10.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","LectureDiagrammeBarre","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","sup2","nouvelleVersion","listeQuestions","listeCorrections","lstAnimaux","nbAnimaux","parseInt","lstAnimauxExo","lstNombresAnimaux","nom","texte","texteCorr","lstVal","N","i","randint","push","concat","choice","nMin","Math","min","nMax","max","numAlpha","numAnimal","coef","r","repere2","grilleX","grilleY","xThickListe","xLabelListe","yUnite","yThickDistance","yMax","xMin","xMax","yMin","axeXStyle","yLegende","lstElementGraph","traceBarre","premiereLettreEnMajuscule","unite","mathalea2d","xmin","xmax","ymin","ymax","pixelsParCm","scale","indexOf","reponse","reponseinf","floor","reponsesup","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/31620.77c52a097beb629521f8.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, premiereLettreEnMajuscule, numAlpha } from '../../modules/outils.js'\nimport { repere2, traceBarre, mathalea2d } from '../../modules/2d.js'\nexport const titre = 'Lire un diagramme en barre'\n\n/**\n * Lire un diagramme en barre\n * @author Erwan Duplessy\n * Référence 6S10\n */\n\nexport default function LectureDiagrammeBarre () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = \"Répondre aux questions à l'aide du graphique.\"\n  this.nbQuestions = 3\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.sup2 = 1\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // vide la liste de questions\n    this.listeCorrections = [] // vide la liste de questions corrigées\n\n    const lstAnimaux = ['girafes', 'zèbres', 'gnous', 'buffles', 'gazelles', 'crocodiles', 'rhinocéros', 'léopards', 'guépards', 'hyènes', 'lycaons', 'servals', 'phacochères']\n    let nbAnimaux = 4 // nombre d'animaux différents dans l'énoncé\n    switch (parseInt(this.sup)) {\n      case 1: nbAnimaux = 4; break\n      case 2: nbAnimaux = 5; break\n      case 3: nbAnimaux = 6; break\n      default: nbAnimaux = 4\n    }\n    const lstAnimauxExo = [] // liste des animaux uniquement cités dans l'exercice\n    const lstNombresAnimaux = [] // liste des effectifs de chaque animal\n    let lstVal = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100] // liste des valeurs à éviter pour les effectifs\n    let N = 0; let nom; let texte; let texteCorr\n\n    switch (parseInt(this.sup2)) {\n      case 1:\n        for (let i = 0; i < nbAnimaux; i++) {\n          N = randint(2, 100, lstVal) // choisit un nombre entre 2 et 100 sauf dans les valeurs à éviter\n          lstNombresAnimaux.push(N)\n          lstVal = lstVal.concat([N - 1, N, N + 1]) // valeurs à supprimer pour éviter des valeurs proches\n        }\n        break\n      case 2:\n        for (let i = 0; i < nbAnimaux; i++) {\n          N = randint(2, 100, lstVal) // choisit un nombre entre 2 et 100 sauf dans les valeurs à éviter\n          lstNombresAnimaux.push(10 * N)\n          lstVal = lstVal.concat([N - 1, N, N + 1]) // valeurs à supprimer pour éviter des valeurs proches\n        }\n        break\n    }\n\n    for (let i = 0; i < nbAnimaux; i++) {\n      nom = choice(lstAnimaux, lstAnimauxExo) // choisit un animal au hasard sauf parmi ceux déjà utilisés\n      lstAnimauxExo.push(nom)\n    }\n\n    const nMin = Math.min(...lstNombresAnimaux)\n    const nMax = Math.max(...lstNombresAnimaux)\n\n    const lstNomParc = ['Dramve', 'Fatenmin', 'Batderfa', 'Vihi', 'Genser', 'Barbetdou', 'Dramrendu', 'Secai', 'Cipeudram', 'Cigel', 'Lisino', 'Fohenlan',\n      'Farnfoss', 'Kinecardine', 'Zeffari', 'Barmwich', 'Swadlincote', 'Swordbreak', 'Loshull', 'Ruyron', 'Fluasall', 'Blueross', 'Vlane']\n\n    texte = 'Dans le parc naturel de ' + choice(lstNomParc) + ', il y a beaucoup d’animaux. Voici un diagramme en bâtons qui donne le nombre d’individus pour chaque espèce.<br>'\n    texte += numAlpha(0) + ' Quels sont les animaux les plus nombreux ?<br>'\n    texte += numAlpha(1) + ' Quels sont les animaux les moins nombreux ?<br>'\n\n    const numAnimal = randint(0, nbAnimaux - 1)\n    switch (parseInt(this.sup2)) {\n      case 1: texte += numAlpha(2) + ' Donner un encadrement à la dizaine du nombre de ' + lstAnimauxExo[numAnimal] + ' ?<br>'\n        break\n      case 2: texte += numAlpha(2) + ' Donner un encadrement à la centaine du nombre de ' + lstAnimauxExo[numAnimal] + ' ?<br>'\n        break\n    }\n    texte += '<br>'\n\n    // coefficient pour gérer les deux types d'exercices (entre 1 et 100) ou (entre 10 et 1000)\n    let coef = 1\n    switch (parseInt(this.sup2)) {\n      case 1:\n        coef = 1\n        break\n      case 2:\n        coef = 10\n        break\n    }\n\n    const r = repere2({\n      grilleX: false,\n      grilleY: 'pointilles',\n      xThickListe: [],\n      xLabelListe: [],\n      yUnite: 0.1 / coef,\n      yThickDistance: 10 * coef,\n      yMax: 110 * coef,\n      xMin: 0,\n      xMax: 10,\n      yMin: 0,\n      axeXStyle: '',\n      yLegende: \"Nombre d'individus\"\n    })\n\n    const lstElementGraph = []\n    for (let i = 0; i < nbAnimaux; i++) {\n      lstElementGraph.push(traceBarre((((r.xMax - r.xMin) / (nbAnimaux + 1)) * (i + 1)), lstNombresAnimaux[i], premiereLettreEnMajuscule(lstAnimauxExo[i]), { unite: 0.1 / coef }))\n    }\n\n    texte += mathalea2d({ xmin: -5, xmax: 11, ymin: -4, ymax: 11, pixelsParCm: 30, scale: 0.5 }, r, lstElementGraph)\n    // debut de la correction\n    // question 1\n    texteCorr = numAlpha(0) + ' Les animaux les plus nombreux sont les ' + lstAnimauxExo[lstNombresAnimaux.indexOf(nMax)] + '.<br>'\n    // question 2\n    texteCorr += numAlpha(1) + ' Les animaux les moins nombreux sont les ' + lstAnimauxExo[lstNombresAnimaux.indexOf(nMin)] + '.<br>'\n    // question 3\n    const reponse = lstNombresAnimaux[lstAnimauxExo.indexOf(lstAnimauxExo[numAnimal])]\n    const reponseinf = 10 * coef * Math.floor(reponse / (10 * coef))\n    const reponsesup = reponseinf + 10 * coef\n    texteCorr += numAlpha(2) + ' Il y a entre ' + reponseinf + ' et ' + reponsesup + ' ' + lstAnimauxExo[numAnimal] + '.<br>'\n\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Nombre d\\'espèces différentes', 3, ' choix 1 : 4 espèces\\n choix 2 : 5 espèces\\n choix 3 : 6 espèces']\n  this.besoinFormulaire2Numerique = ['Valeurs numériques', 2, ' choix 1 : entre 1 et 100\\n choix 2 : entre 100 et 1 000']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}