{"version":3,"file":"js/62703.94ef9575a83524c9300f.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C30-3.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, texNombre, puissanceEnProduit } from '../../modules/outils.js'\nexport const titre = 'Écriture décimale ou fractionnaire d\\'une puissance'\n\n/**\n * Donner l'écriture décimale d'une puissance de 10\n * @author Rémi Angot\n* Référence 4C30-3\n */\nexport default function EcritureDecimalePuissance () {\n  Exercice.call(this)\n  this.titre = titre\n  this.consigne = \"Donner l'écriture sous la forme d'un nombre entier ou d'une fraction.\"\n  this.nbQuestions = 8\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.sup = 3 // exposants positifs et négatifs par défaut\n\n  this.nouvelleVersion = function () {\n    this.sup = Number(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const listeDeCalculs = combinaisonListes([[2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [3, 2], [3, 3], [3, 4], [4, 2], [4, 3], [5, 2], [5, 3], [6, 2], [6, 3], [7, 2], [7, 3], [8, 2], [8, 3], [9, 2], [9, 3]], this.nbQuestions)\n\n    let listeTypeDeQuestions\n    if (this.sup === 1) {\n      listeTypeDeQuestions = combinaisonListes(['+'], this.nbQuestions)\n      this.consigne = \"Donner l'écriture sous la forme d'un nombre entier.\"\n    }\n    if (this.sup === 2) {\n      listeTypeDeQuestions = combinaisonListes(['-'], this.nbQuestions)\n    }\n    if (this.sup === 3) {\n      listeTypeDeQuestions = combinaisonListes(['+', '-'], this.nbQuestions)\n    }\n    for (let i = 0, texte, texteCorr, a, n, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case '+':\n          a = listeDeCalculs[i][0]\n          n = listeDeCalculs[i][1]\n          texte = `$${a}^{${n}}$`\n          if (n < 2) {\n            texteCorr = `${a}^${n}=$${a}**n}$`\n          } else {\n            texteCorr = `$${a}^{${n}}=${puissanceEnProduit(a, n)}=${texNombre(a ** n)}$`\n          }\n          break\n        case '-':\n          a = listeDeCalculs[i][0]\n          n = listeDeCalculs[i][1]\n          texte = `$${a}^{${-n}}$`\n          texteCorr = `$${a}^{${-n}}=\\\\dfrac{1}{${a}^{${n}}}=\\\\dfrac{1}{${puissanceEnProduit(a, n)}}=\\\\dfrac{1}{${texNombre(a ** n)}}$`\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Niveau de difficulté', 3, '1 : Exposants positifs\\n2 : Exposants négatifs\\n3 : Mélange']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","EcritureDecimalePuissance","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","Number","listeQuestions","listeCorrections","listeDeCalculs","combinaisonListes","listeTypeDeQuestions","texte","texteCorr","a","n","i","cpt","puissanceEnProduit","texNombre","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}