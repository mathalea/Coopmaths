{"version":3,"file":"js/39128.5eaafac2c1ea5eab82d7.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/5e/5L14-6.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes} from '../../modules/outils.js'\nimport Choisir_expression_litterale from './_Choisir_expression_litterale.js';\n\nexport const titre = 'Déterminer la dernière opération à effectuer dans une expression numérique'\n\n/**\n * Référence 5L14-6\n * Déterminer la dernière opération à effectuer dans une expression numérique\n * @author Sébastien Lozano\n */\nexport default function Determiner_derniere_operation_exp_num() {\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.debug = false;\n\tthis.consigne = \"\";\n\tthis.nbQuestions = 4;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\tthis.sup = true;\n\tthis.sup2 = false; // si false alors utilisation de nombres entiers, si true alors utilisation de nombres à un chiffre après la virgule.\n\tthis.titre = titre\n\n\tthis.nouvelleVersion = function () {\n\t\tlet typesDeQuestionsDisponibles\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\ttypesDeQuestionsDisponibles = [5] //expressions complexes\n\t\tlet expf, expn, expc, decimal = 1, nbval, nb_operations, resultats, last_op\n\t\tlet listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n\t\tif (this.sup2) decimal = 10;\n\t\tfor (let i = 0, texte, texteCorr, val1, val2, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n\t\t\tnb_operations = parseInt(listeTypeDeQuestions[i])\n\t\t\tval1 = randint(2, 5)\n\t\t\tval2 = randint(6, 9)\n\t\t\t//resultats=Choisir_expression_litteraleBis(nb_operations,decimal,val1,val2)\n\t\t\tresultats = Choisir_expression_litterale(nb_operations, decimal, val1, val2, this.sup)\n\t\t\texpf = resultats[0]\n\t\t\texpn = resultats[1]\n\t\t\texpc = resultats[2]\n\t\t\tnbval = resultats[3]\n\t\t\tlast_op = resultats[4];\n\t\t\tlet str = expc.split('=');\n\n\t\t\tswitch (listeTypeDeQuestions[i]) {\n\t\t\t\tcase 5:\n\t\t\t\t\tif (expn.indexOf('ou') > 0) expn = expn.substring(0, expn.indexOf('ou')) // on supprime la deuxième expression fractionnaire\n\t\t\t\t\tthis.consigne = `Déterminer la dernière opération à effectuer .`\n\t\t\t\t\ttexte = `$${str[1]}$`\n\t\t\t\t\t//texte=`${expn}`\n\t\t\t\t\tif (this.debug) {\n\t\t\t\t\t\ttexte += `<br><br>=====CORRECTION======<br>`;\n\t\t\t\t\t\ttexte += `$`\n\t\t\t\t\t\tfor (let l = 1; l < str.length - 1; l++) {\n\t\t\t\t\t\t\ttexte += `${str[l]}=`\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexte += `${str[str.length - 1]}`\n\t\t\t\t\t\ttexte += `<br>$\\\\textbf{La dernière opération dans $${str[1]}$ est donc une ${last_op}.}$`;\n\t\t\t\t\t\ttexteCorr = ``;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexteCorr = `$`\n\t\t\t\t\t\tfor (let l = 1; l < str.length - 1; l++) {\n\t\t\t\t\t\t\ttexteCorr += `${str[l]}=`\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttexteCorr += `${str[str.length - 1]}`\n\t\t\t\t\t\ttexteCorr += `<br>$\\\\textbf{La dernière opération dans $${str[1]}$ est donc une ${last_op}.}$`;\n\t\t\t\t\t};\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\tif (this.listeQuestions.indexOf(texte) === -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n\t\t}\n\t\tlisteQuestionsToContenu(this);\n\t}\n\tthis.besoinFormulaire2CaseACocher = [\"Avec décimaux.\", false]\n\tthis.besoinFormulaireCaseACocher = [\"Avec le signe × devant les parenthèses\", true]\n\n}\n\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","Determiner_derniere_operation_exp_num","Exercice","this","debug","consigne","nbQuestions","nbCols","nbColsCorr","sup","sup2","nouvelleVersion","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","expf","expn","expc","nbval","nb_operations","resultats","last_op","decimal","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","val1","val2","i","cpt","parseInt","randint","Choisir_expression_litterale","str","split","indexOf","substring","l","length","push","listeQuestionsToContenu","besoinFormulaire2CaseACocher","besoinFormulaireCaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","correctionDetailleeDisponible","correctionDetaillee","video","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}