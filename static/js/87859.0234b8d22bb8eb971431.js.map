{"version":3,"file":"js/87859.0234b8d22bb8eb971431.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4C34.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { calcul, listeQuestionsToContenuSansNumero, lettreDepuisChiffre, randint, choice, range1, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif, miseEnEvidence, nombreDeChiffresDansLaPartieEntiere } from '../../modules/outils.js'\n\nexport const amcReady = true\nexport const amcType = 'AMCOpenNum' // type de question AMC\n\nexport const titre = 'Calculs utilisant les priorités opératoires et les puissances'\n\n/**\n * Plusieurs type de calcul avec priorités opératoires/ relatifs/ puissances\n *\n * Sans parenthèses :\n * * a²+b*c\n * * a+b²*c\n * * a²+b+c*d\n *\n * * a²*b+c\n * * a*b²+c\n * * a²+b+c\n * * a+b²+c\n * * a+b+c²\n * * a+b²+c*d\n * * a+b+c²*d\n * * a+b+c*d²\n * * a²*b+c*d\n * * a*b+c*d²\n *\n * Avec parenthèses :\n * * a²*(b+c)\n * * a*(b²+c*d)\n * * (a+b+c²)*d\n * * d²(a+b+c)\n *\n * * a*(b²+c)\n * * a*(b+c²)\n * * (a²+b)*c\n * * (a+b²)*c\n * * (a+b)*c²\n * * a²*(b+c)*d\n * * a*(b²+c)*d\n * * a*(b+c²)*d\n * * a*(b+c)*d²\n * * a²*b*(c+d)\n * * a*b²*(c+d)\n * * a*b*(c²+d)\n * * a*b*(c+d²)\n * * a²*(b+c*d)\n * * a*(b+c²*d)\n * * a*(b+c*d²)\n * * a²+(b+c)\n * * a+(b²+c)\n * * a+(b+c²)\n * * (a²+b+c)*d\n * * (a+b²+c)*d\n * @author Mireille Gain\n * Référence 4C34\n * Date 2021-01-23\n */\nexport default function PrioritesEtRelatifsEtPuissances () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Calculer :'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 1\n  this.tailleDiaporama = 100\n  this.video = 'https://youtu.be/0G9xWLl-0zg' // Id YouTube ou url\n  this.spacing = context.isHtml ? 3 : 1\n  this.spacingCorr = context.isHtml ? 3 : 1\n  this.amcReady = amcReady\n  this.amcType = amcType\n\n  this.nouvelleVersion = function () {\n    let reponse\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const listeQuestionsDisponibles = range1(7)\n\n    const listeTypeDeQuestions = combinaisonListes(\n      listeQuestionsDisponibles,\n      this.nbQuestions\n    )\n    for (\n      let i = 0, texte, texteCorr, a, b, c, d, m, n, p, cpt = 0;\n      i < this.nbQuestions && cpt < 50;) {\n      a = randint(1, 7) * choice([-1, 1])\n      b = randint(1, 7) * choice([-1, 1])\n      c = randint(1, 7) * choice([-1, 1])\n      d = randint(1, 7) * choice([-1, 1])\n      m = randint(1, 5) * choice([-1, 1])\n      n = randint(1, 3) * (-1)\n      p = randint(1, 3)\n      this.autoCorrection[i] = {}\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // a² + b*c\n          texte = `$${lettreDepuisChiffre(i + 1)} = ${ecritureParentheseSiNegatif(a)}^2 +  ${ecritureParentheseSiNegatif(b)} \\\\times ${ecritureParentheseSiNegatif(c)}$`\n          texteCorr = `$\\\\begin{aligned}${lettreDepuisChiffre(i + 1)}&\n        =${miseEnEvidence(ecritureParentheseSiNegatif(a) + '^2', 'blue')}  +  ${ecritureParentheseSiNegatif(b)} \\\\times ${ecritureParentheseSiNegatif(c)}\n        \\\\\\\\&=${a * a} + ${miseEnEvidence((ecritureParentheseSiNegatif(b) + '\\\\times' + ecritureParentheseSiNegatif(c)), 'blue')}\n        \\\\\\\\&=${a * a} ${ecritureAlgebrique(b * c)}\\\\end{aligned}\n        \\\\\\\\${miseEnEvidence(lettreDepuisChiffre(i + 1) + '=' + (a * a + b * c))}\\\\\\\\$`\n          reponse = calcul(a * a + b * c)\n          break\n\n        case 2: // a + b²*c\n          texte = `$${lettreDepuisChiffre(i + 1)} = ${a} + ${ecritureParentheseSiNegatif(p)}^2 \\\\times ${ecritureParentheseSiNegatif(c)}$`\n          texteCorr = `$\\\\begin{aligned}${lettreDepuisChiffre(i + 1)}&\n          =${a} + ${miseEnEvidence(ecritureParentheseSiNegatif(p) + '^2', 'blue')} \\\\times ${ecritureParentheseSiNegatif(c)}\n          \\\\\\\\&=${a} + ${miseEnEvidence(ecritureParentheseSiNegatif(p * p) + '\\\\times' + ecritureParentheseSiNegatif(c), 'blue')}\n          \\\\\\\\&=${a + ecritureAlgebrique(p * p * c)}\\\\end{aligned}\n          \\\\\\\\${miseEnEvidence(lettreDepuisChiffre(i + 1) + '=' + (a + p * p * c))}\\\\\\\\$`\n          reponse = calcul(a + p * p * c)\n          break\n\n        case 3: // a²+b+c*d\n          texte = `$${lettreDepuisChiffre(i + 1)} = ${ecritureParentheseSiNegatif(a)}^2   ${ecritureAlgebrique(b)} ${ecritureAlgebrique(c)} \\\\times ${ecritureParentheseSiNegatif(d)}$`\n          texteCorr = `$\\\\begin{aligned}${lettreDepuisChiffre(i + 1)}&\n        =${miseEnEvidence(ecritureParentheseSiNegatif(a) + '^2', 'blue')} ${ecritureAlgebrique(b)}  ${ecritureAlgebrique(c)} \\\\times ${ecritureParentheseSiNegatif(d)}\n        \\\\\\\\&=${a * a} ${ecritureAlgebrique(b)} +  ${miseEnEvidence((ecritureParentheseSiNegatif(c) + '\\\\times' + ecritureParentheseSiNegatif(d)), 'blue')}\n        \\\\\\\\&=${a * a + ecritureAlgebrique(b) + ecritureAlgebrique(c * d)}\\\\end{aligned}\n        \\\\\\\\${miseEnEvidence(lettreDepuisChiffre(i + 1) + '=' + (a * a + b + c * d))}\\\\\\\\$`\n          reponse = calcul(a * a + b + c * d)\n          break\n\n        case 4: // a²*(b+c)\n          texte = `$${lettreDepuisChiffre(i + 1)} = ${ecritureParentheseSiNegatif(n)}^2 \\\\times ( ${b + ecritureAlgebrique(c)})$`\n          texteCorr = `$\\\\begin{aligned}${lettreDepuisChiffre(i + 1)}&\n          =${miseEnEvidence(ecritureParentheseSiNegatif(n) + '^2', 'blue')}  \\\\times ( ${b + ecritureAlgebrique(c)})\n          \\\\\\\\&=${n * n} \\\\times ( ${miseEnEvidence(b + ecritureAlgebrique(c), 'blue')})\n          \\\\\\\\&=${n * n} \\\\times ${ecritureParentheseSiNegatif(b + c)}\\\\end{aligned}\n          \\\\\\\\${miseEnEvidence(lettreDepuisChiffre(i + 1) + '=' + (n * n * (b + c)))}\\\\\\\\$`\n          reponse = calcul(n * n * (b + c))\n          break\n\n        case 5: // m*(n²+p*n)\n          texte = `$${lettreDepuisChiffre(i + 1)} = ${m} \\\\times ( ${ecritureParentheseSiNegatif(n)}^2${ecritureAlgebrique(p)}\\\\times${ecritureParentheseSiNegatif(n)})$`\n          texteCorr = `$\\\\begin{aligned}${lettreDepuisChiffre(i + 1)}&\n            =${m} \\\\times ( ${miseEnEvidence(ecritureParentheseSiNegatif(n) + '^2', 'blue')} ${ecritureAlgebrique(p)}\\\\times${ecritureParentheseSiNegatif(n)})\n            \\\\\\\\&=${m} \\\\times ( ${n * n} + ${miseEnEvidence(ecritureParentheseSiNegatif(p) + '\\\\times' + ecritureParentheseSiNegatif(n), 'blue')})\n            \\\\\\\\&=${m}\\\\times ( ${miseEnEvidence((n * n + ecritureAlgebrique(p * n)), 'blue')})\n            \\\\\\\\&=${m}\\\\times ${ecritureParentheseSiNegatif(n * n + p * n)}\\\\end{aligned}\n            \\\\\\\\${miseEnEvidence(lettreDepuisChiffre(i + 1) + '=' + (m * (n * n + p * n)))}\\\\\\\\$`\n          reponse = calcul(m * (n * n + p * n))\n          break\n\n        case 6: // (a+b+n²)*d\n          texte = `$${lettreDepuisChiffre(i + 1)} = (${a} ${ecritureAlgebrique(b)} + ${ecritureParentheseSiNegatif(n)}^2 ) \\\\times ${ecritureParentheseSiNegatif(d)}$`\n          texteCorr = `$\\\\begin{aligned}${lettreDepuisChiffre(i + 1)}&\n              =(${a} + ${ecritureParentheseSiNegatif(b)} + ${miseEnEvidence(ecritureParentheseSiNegatif(n) + '^2', 'blue')}  ) \\\\times ${ecritureParentheseSiNegatif(d)}\n              \\\\\\\\&=(${miseEnEvidence((a + ecritureAlgebrique(b) + ecritureAlgebrique(n * n)), 'blue')}) \\\\times ${ecritureParentheseSiNegatif(d)}\n              \\\\\\\\&=${a + b + n * n} \\\\times ${ecritureParentheseSiNegatif(d)}\\\\end{aligned}\n              \\\\\\\\${miseEnEvidence(lettreDepuisChiffre(i + 1) + '=' + ((a + b + n * n) * d))}\\\\\\\\$`\n          reponse = calcul((a + b + n * n) * d)\n          break\n\n        case 7: // n²*(a+b+c)\n          texte = `$${lettreDepuisChiffre(i + 1)} = ${ecritureParentheseSiNegatif(n)}^2 \\\\times ( ${a + ecritureAlgebrique(b) + ecritureAlgebrique(c)})$`\n          texteCorr = `$\\\\begin{aligned}${lettreDepuisChiffre(i + 1)}&\n                =${miseEnEvidence(ecritureParentheseSiNegatif(n) + '^2', 'blue')} \\\\times ( ${a} ${ecritureAlgebrique(b)} ${ecritureAlgebrique(c)})\n                \\\\\\\\&=${n * n} \\\\times ( ${miseEnEvidence(a + ecritureAlgebrique(b) + ecritureAlgebrique(c), 'blue')})\n                \\\\\\\\&=${n * n} \\\\times ${ecritureParentheseSiNegatif(a + b + c)}\\\\end{aligned}\n                \\\\\\\\${miseEnEvidence(lettreDepuisChiffre(i + 1) + '=' + (n * n * (a + b + c)))}\\\\\\\\$`\n          reponse = calcul(n * n * (a + b + c))\n          break\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        this.autoCorrection[i].enonce = texte\n        this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: 3 }]\n        this.autoCorrection[i].reponse = { texte: 'résultat', valeur: reponse, param: { digits: Math.max(2, nombreDeChiffresDansLaPartieEntiere(reponse)), decimals: 0, signe: true, exposantNbChiffres: 0, exposantSigne: false } }\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenuSansNumero(this)\n  }\n}\n// python3 list-to-js.py pour faire apparaitre l'exercice dans le menu\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","titre","PrioritesEtRelatifsEtPuissances","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","tailleDiaporama","video","spacing","context","spacingCorr","nouvelleVersion","reponse","listeQuestions","listeCorrections","listeQuestionsDisponibles","range1","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","d","m","n","p","i","cpt","randint","choice","autoCorrection","lettreDepuisChiffre","ecritureParentheseSiNegatif","miseEnEvidence","ecritureAlgebrique","calcul","indexOf","push","enonce","propositions","statut","valeur","param","digits","Math","max","nombreDeChiffresDansLaPartieEntiere","decimals","signe","exposantNbChiffres","exposantSigne","listeQuestionsToContenuSansNumero","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}