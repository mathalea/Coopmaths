{"version":3,"file":"js/10785.9156465ca8a36897b63a.js","mappings":"oRAKO,MAAMA,EAAoB,YACpBC,EAAQ,4BACRC,GAAkB,EAClBC,EAAiB,kBAEf,SAASC,IACtBC,EAAAA,QAAAA,KAAcC,MACdA,KAAKC,YAAc,EACnBD,KAAKE,QAAU,EACfF,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKK,mBAAoB,EACzBL,KAAKM,qBAAsB,EAC3B,MAAMC,GAAIC,EAAAA,EAAAA,KAAM,EAAG,GACnB,IAAIC,EACJT,KAAKU,IAAM,EACX,MAAMC,EAAS,EACbC,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAC9GI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAC9GI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAC5LI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAClKI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAClKI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAClKI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MACpFI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MACxII,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MACrJI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MACpFI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAC3HI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAClKI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAClKI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MACjGI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAC9GI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAC3HI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAC1QI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MACrJI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MACxII,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAC9GI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,MAClKI,EAAAA,EAAAA,KAAS,EAACJ,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IAAIA,EAAAA,EAAAA,KAAM,EAAG,IA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","sources":["webpack://mathalea/./src/js/exercices/4e/4G12-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { texcolors, choice, lettreDepuisChiffre, listeQuestionsToContenu, texteEnCouleurEtGras, sp, randint, deuxColonnes, contraindreValeur } from '../../modules/outils.js'\nimport { grille, mathalea2d, point, segment, tracePoint, homothetie, polygone, symetrieAxiale, translation, droite, vecteur, rotation, milieu, texteParPointEchelle, symetrieAnimee, translationAnimee, rotationAnimee } from '../../modules/2d.js'\nimport { context } from '../../modules/context.js'\nimport { choixDeroulant, setReponse } from '../../modules/gestionInteractif.js'\nexport const dateDePublication = '3/12/2021'\nexport const titre = 'Trouver la transformation'\nexport const interactifReady = false // Pour l'instant le listeDeroulante n'est pas au point avec les chaines ???\nexport const interactifType = 'listeDeroulante'\n\nexport default function TrouverLaTransformations () {\n  Exercice.call(this)\n  this.nbQuestions = 1\n  this.spacing = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.pasDeVersionLatex = false\n  this.pas_de_version_HMTL = false\n  const A = point(0, 0)\n  let typeDeTransfos\n  this.sup = 3\n  const motifs = [\n    polygone([point(1, 1), point(2, 1), point(2, 4), point(6, 4), point(6, 5), point(3, 5), point(3, 6), point(1, 6)]),\n    polygone([point(1, 1), point(3, 1), point(3, 4), point(6, 4), point(6, 6), point(3, 6), point(3, 5), point(1, 5)]),\n    polygone([point(2, 1), point(3, 1), point(3, 3), point(4, 3), point(4, 4), point(3, 4), point(3, 5), point(5, 5), point(5, 6), point(2, 6), point(2, 4), point(1, 4), point(1, 3), point(2, 3)]),\n    polygone([point(1, 1), point(4, 1), point(4, 2), point(5, 2), point(5, 4), point(4, 4), point(4, 5), point(3, 5), point(3, 6), point(2, 6), point(2, 2), point(1, 2)]),\n    polygone([point(2, 1), point(5, 1), point(5, 3), point(6, 3), point(6, 4), point(4, 4), point(4, 3), point(3, 3), point(3, 5), point(5, 5), point(5, 6), point(2, 6)]),\n    polygone([point(1, 1), point(5, 1), point(5, 2), point(2, 2), point(2, 3), point(3, 3), point(3, 4), point(2, 4), point(2, 5), point(4, 5), point(4, 6), point(1, 6)]),\n    polygone([point(2, 6), point(2, 1), point(5, 1), point(5, 2), point(3, 2), point(3, 6)]),\n    polygone([point(2, 6), point(5, 6), point(5, 5), point(4, 5), point(4, 1), point(1, 1), point(1, 2), point(3, 2), point(3, 5), point(2, 5)]),\n    polygone([point(2, 1), point(3, 1), point(6, 1), point(6, 2), point(3, 2), point(3, 3), point(5, 3), point(5, 5), point(3, 5), point(3, 6), point(2, 6)]),\n    polygone([point(2, 1), point(3, 1), point(3, 3), point(5, 3), point(5, 6), point(2, 6)]),\n    polygone([point(2, 1), point(2, 6), point(5, 6), point(5, 3), point(3, 3), point(5, 1), point(4, 1), point(3, 2), point(3, 1)]),\n    polygone([point(2, 1), point(6, 1), point(6, 4), point(3, 4), point(3, 5), point(5, 5), point(5, 6), point(2, 6), point(2, 3), point(5, 3), point(5, 2), point(2, 2)]),\n    polygone([point(2, 1), point(4, 1), point(5, 2), point(5, 1), point(6, 1), point(6, 6), point(5, 6), point(5, 3), point(4, 2), point(3, 2), point(3, 6), point(2, 6)]),\n    polygone([point(1, 6), point(2, 6), point(4, 3), point(5, 5), point(6, 5), point(4, 1), point(3, 1)]),\n    polygone([point(2, 6), point(3, 6), point(4, 4), point(5, 6), point(6, 6), point(3, 1), point(2, 1), point(3, 3)]),\n    polygone([point(1, 1), point(6, 1), point(6, 2), point(3, 5), point(5, 5), point(5, 6), point(1, 6), point(5, 2), point(1, 2)]),\n    polygone([point(3, 6), point(3, 5), point(2, 5), point(2, 4), point(3, 4), point(3, 3), point(1, 3), point(1, 2), point(3, 2), point(3, 1), point(4, 1), point(4, 2), point(5, 2), point(5, 3), point(4, 3), point(4, 4), point(6, 4), point(6, 5), point(4, 5), point(4, 6)]),\n    polygone([point(2, 1), point(3, 3), point(2, 3), point(2, 4), point(6, 4), point(6, 3), point(5, 3), point(5, 1), point(4, 1), point(4, 3), point(3, 1)]),\n    polygone([point(2, 2), point(3, 3), point(3, 2), point(4, 3), point(4, 2), point(5, 3), point(5, 2), point(6, 3), point(6, 5), point(2, 5)]),\n    polygone([point(1, 1), point(3, 1), point(3, 5), point(5, 5), point(5, 6), point(2, 6), point(2, 2), point(1, 2)]),\n    polygone([point(1, 1), point(6, 1), point(6, 2), point(4, 2), point(4, 4), point(5, 4), point(5, 5), point(1, 5), point(1, 4), point(3, 4), point(3, 2), point(1, 2)]),\n    polygone([point(2, 1), point(2, 3), point(4, 3), point(4, 4), point(3, 4), point(3, 6), point(6, 6), point(6, 4), point(5, 4), point(5, 3), point(6, 3), point(6, 1), point(5, 1), point(5, 2), point(4, 2), point(4, 1)]),\n    polygone([point(2, 6), point(2, 4), point(1, 4), point(1, 2), point(2, 2), point(2, 1), point(3, 1), point(3, 3), point(5, 3), point(5, 4), point(4, 4), point(4, 5), point(3, 5), point(3, 6)]),\n    polygone([point(1, 3), point(1, 1), point(3, 1), point(3, 2), point(6, 2), point(6, 5), point(3, 5), point(3, 3)]),\n    polygone([point(2, 1), point(2, 2), point(1, 2), point(1, 4), point(2, 4), point(2, 3), point(3, 3), point(3, 2), point(4, 2), point(4, 4), point(3, 4), point(3, 6), point(6, 6), point(6, 4), point(5, 4), point(5, 3), point(6, 3), point(6, 1)]),\n    polygone([point(3, 1), point(3, 2), point(1, 2), point(1, 3), point(2, 3), point(2, 4), point(3, 4), point(3, 5), point(5, 5), point(5, 4), point(6, 4), point(6, 3), point(5, 3), point(5, 2), point(4, 2), point(4, 1)])\n  ]\n  const noeuds = []\n  const maGrille = []\n  const labels = []\n  maGrille.push(grille(0, 0, 16, 16, 'black', 0.2, 0.4))\n  for (let i = 0; i < 6; i++) {\n    maGrille.push(segment(i * 3.2, 0, i * 3.2, 16))\n    maGrille.push(segment(0, i * 3.2, 16, i * 3.2))\n    for (let j = 0; j < 6; j++) {\n      labels[i * 6 + j] = i * 6 + j < 26 ? lettreDepuisChiffre(i * 6 + j + 1) : lettreDepuisChiffre((i * 6 + j) % 26 + 1) + \"'\"\n      noeuds[i * 6 + j] = point(i * 3.2, j * 3.2, labels[i * 6 + j], 'above right')\n      maGrille.push(tracePoint(noeuds[i * 6 + j]))\n    }\n  }\n  function transfoPoly (pol, { type = 'symax', centre, axe, vecteur, angle = 90, sens = true }) {\n    switch (type) { // type est l'une des chaine suivante 'symax', 'trans', 'rot90', 'rot180'\n      case 'symax':\n        return symetrieAxiale(pol, axe)\n      case 'trans':\n        return translation(pol, vecteur)\n      case 'rot90':\n        return rotation(pol, centre, sens ? angle : -angle)\n      case 'rot180':\n        return rotation(pol, centre, 180)\n      default:\n        return pol\n    }\n  }\n  function definitElements (type, depart, arrivee, leSens = true, num = 0, poly1) {\n    let texte, texteCorr, texteInteractif, animation, axe, centre, vector\n    const Est = (arrivee - depart === 6) // si on va vers la droite il y a 6 numéros d'écart entre arrivée et départ sinon, c'est 1 (vers le haut)\n    switch (type) {\n      case 'symax': // vers l'est la droite est définie par arrivee et arrivee+1 sinon c'est arrivee et arrivee+6\n        texteCorr = `La figure ${texteEnCouleurEtGras(depart, texcolors(num + 8))} a pour image la figure ${texteEnCouleurEtGras(arrivee, texcolors(num + 9))} par la symétrie d'axe $(${noeuds[arrivee].nom}${Est ? noeuds[arrivee + 1].nom : noeuds[arrivee + 6].nom})$.`\n        texte = `La figure ${sp(1)}\\\\ldots${sp(1)} a pour image la figure ${sp(1)}\\\\ldots${sp(1)} par la symétrie d'axe $(${sp(1)}\\\\ldots${sp(1)})$.`\n        texteInteractif = \"Une symétrie axiale d'axe passant par deux points du quadrillage.\"\n        axe = Est ? droite(noeuds[arrivee], noeuds[arrivee + 1]) : droite(noeuds[arrivee], noeuds[arrivee + 6])\n        animation = symetrieAnimee(poly1, axe, 'begin=\"0s\" dur=\"5s\" repeatCount=\"indefinite\"')\n        return { animation: animation, depart: depart, arrivee: arrivee, texte: texte, texteCorr: texteCorr, texteInteractif: texteInteractif, type: type, axe: axe }\n      case 'trans': // facile pour la translation : depart->arrivee\n        texteCorr = `La figure ${texteEnCouleurEtGras(depart, texcolors(num + 8))} a pour image la figure ${texteEnCouleurEtGras(arrivee, texcolors(num + 9))} par la translation transformant $${noeuds[depart].nom}$ en $${noeuds[arrivee].nom}$.`\n        texte = `La figure ${sp(1)}\\\\ldots${sp(1)} a pour image la figure ${sp(1)}\\\\ldots${sp(1)} par la translation transformant ${sp(1)}\\\\ldots${sp(1)} en ${sp(1)}\\\\ldots${sp(1)}.`\n        texteInteractif = 'Une translation définie par deux points du quadrillage.'\n        vector = vecteur(noeuds[depart], noeuds[arrivee])\n        animation = translationAnimee(poly1, vector, 'begin=\"0s\" dur=\"5s\" repeatCount=\"indefinite\"')\n        return { animation: animation, depart: depart, arrivee: arrivee, texte: texte, texteCorr: texteCorr, texteInteractif: texteInteractif, type: type, vecteur: vecteur(noeuds[depart], noeuds[arrivee]) }\n      case 'rot90': // la position du centre dépend du sens de rotation et de départ et arrivee.\n        texteCorr = `La figure ${texteEnCouleurEtGras(depart, texcolors(num + 8))} a pour image la figure ${texteEnCouleurEtGras(arrivee, texcolors(num + 9))} par la rotation de centre $${Est ? (leSens ? noeuds[arrivee + 1].nom : noeuds[arrivee].nom) : (leSens ? noeuds[arrivee].nom : noeuds[arrivee + 6].nom)}$ d'angle $90\\\\degree$ dans le sens ${leSens ? \"contraire des aiguilles d'une montre\" : \"des aiguilles d'une montre\"}.`\n        texte = `La figure ${sp(1)}\\\\ldots${sp(1)} a pour image la figure ${sp(1)}\\\\ldots${sp(1)} par la rotation de centre ${sp(1)}\\\\ldots${sp(1)} d'angle $90\\\\degree$ dans le sens  ${leSens ? \"contraire des aiguilles d'une montre\" : \"des aiguilles d'une montre\"}.`\n        texteInteractif = \"Une rotation d'angle 90° et de centre un point du quadrillage.\"\n        centre = Est ? (leSens ? noeuds[arrivee + 1] : noeuds[arrivee]) : (leSens ? noeuds[arrivee] : noeuds[arrivee + 6])\n        animation = rotationAnimee(poly1, centre, leSens ? 90 : -90, 'begin=\"0s\" dur=\"5s\" repeatCount=\"indefinite\"')\n        return { animation: animation, depart: depart, arrivee: arrivee, texte: texte, texteCorr: texteCorr, texteInteractif: texteInteractif, type: type, centre: centre, sens: leSens }\n      case 'rot180': // pas besoin du sens, mais le milieu choisit dépend de depart et arrivee\n        texteCorr = `La figure ${texteEnCouleurEtGras(depart, texcolors(num + 8))} a pour image la figure ${texteEnCouleurEtGras(arrivee, texcolors(num + 9))} par la symétrie de centre le milieu de $[${noeuds[arrivee].nom}${Est ? noeuds[arrivee + 1].nom : noeuds[arrivee + 6].nom}]$.`\n        texte = `La figure ${sp(1)}\\\\ldots${sp(1)} a pour image la figure ${sp(1)}\\\\ldots${sp(1)} par la symétrie de centre le milieu de $[${sp(1)}\\\\ldots${sp(1)}]$.`\n        texteInteractif = \"Une symétrie centrale de centre un milieu d'un segment d'éxtrémités deux points du quadrillage.\"\n        centre = milieu(noeuds[arrivee], Est ? noeuds[arrivee + 1] : noeuds[arrivee + 6])\n        animation = rotationAnimee(poly1, centre, 180, 'begin=\"0s\" dur=\"5s\" repeatCount=\"indefinite\"')\n        return { animation: animation, depart: depart, arrivee: arrivee, texte: texte, texteCorr: texteCorr, texteInteractif: texteInteractif, type: type, centre: centre }\n    }\n  }\n  function transformation (type) {\n    switch (type) {\n      case 'symax' : return 'symétrie axiale'\n      case 'rot180' : return 'symétrie centrale'\n      case 'trans' : return 'translation'\n      case 'rot90' : return 'quart de tour'\n    }\n  }\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    this.sup = contraindreValeur(1, 3, this.sup, 3)\n    if (this.sup === 1) typeDeTransfos = ['symax', 'rot180']\n    else if (this.sup === 2) typeDeTransfos = ['symax', 'trans', 'rot180']\n    else typeDeTransfos = ['symax', 'trans', 'rot90', 'rot180']\n    this.listeQuestions = []\n    this.listeCorrections = []\n    const objetsEnonce = []\n    const objetsCorrection = []\n    const polys = []\n    const transfos = []\n    polys[0] = homothetie(choice(motifs), A, 0.4)\n    for (let x = 0; x < 5; x++) {\n      for (let y = 0, dalle, transfoAlea, elements; y < 5; y++) {\n        if (x + y > 0) {\n          dalle = x * 6 + y\n          transfoAlea = choice(typeDeTransfos)\n          if (y > 0) {\n            elements = definitElements(transfoAlea, dalle - 1, dalle, choice([true, false]))\n            polys[dalle] = transfoPoly(polys[dalle - 1], elements)\n          } else {\n            elements = definitElements(transfoAlea, dalle - 6, dalle, choice([true, false]))\n            polys[dalle] = transfoPoly(polys[dalle - 6], elements)\n          }\n        }\n      }\n    }\n\n    for (let i = 0, depart = [], arrivee = []; i < this.nbQuestions;) {\n      depart[i] = randint(0, 3) * 6 + randint(0, 3)\n      arrivee[i] = depart[i] + (choice([true, false]) ? 1 : 6)\n      transfos[i] = definitElements(choice(typeDeTransfos), depart[i], arrivee[i], choice([true, false]), 12, polys[depart[i]])\n      if (depart.indexOf(arrivee[i]) === -1 && arrivee.indexOf(depart[i]) === -1 && this.questionJamaisPosee(i, depart[i], arrivee[i])) {\n        polys[arrivee[i]] = transfoPoly(polys[depart[i]], transfos[i])\n        i++\n      }\n    }\n\n    for (let x = 0; x < 5; x++) {\n      for (let y = 0, numero; y < 5; y++) {\n        numero = texteParPointEchelle(Number(x * 6 + y).toString(), point(x * 3.2 + 1.6, y * 3.2 + 1.6), 'milieu', context.isHtml ? 'yellow' : 'black', 1.2, 'middle', true, 0.4)\n        numero.contour = context.isHtml\n        numero.couleurDeRemplissage = 'black'\n        numero.opacite = context.isHtml ? 0.5 : 1\n        numero.opaciteDeRemplissage = 1\n        maGrille.push(numero)\n        polys[x * 6 + y].opacite = 0.7\n        polys[x * 6 + y].color = 'blue'\n      }\n    }\n    objetsEnonce.push(...polys)\n    objetsCorrection.push(...polys)\n    objetsCorrection.push(...maGrille)\n    objetsEnonce.push(...maGrille)\n    for (let x = 0; x < 6; x++) {\n      for (let y = 0, label; y < 6; y++) {\n        label = texteParPointEchelle(noeuds[x * 6 + y].nom, translation(noeuds[x * 6 + y], vecteur(0.3, 0.3)), 'milieu', context.isHtml ? 'red' : 'black', 1.2, 'middle', true, 0.4)\n        label.contour = context.isHtml\n        label.couleurDeRemplissage = 'black'\n        label.opacite = context.isHtml ? 0.8 : 1\n        label.opaciteDeRemplissage = 1\n        objetsEnonce.push(label)\n        objetsCorrection.push(label)\n      }\n    }\n    for (let i = 0; i < this.nbQuestions; i++) {\n      objetsCorrection.push(transfos[i].animation)\n    }\n\n    const paramsEnonce = { xmin: -0.5, ymin: -0.5, xmax: 17, ymax: 16.5, pixelsParCm: 20, scale: 0.7 }\n    const paramsCorrection = { xmin: -0.5, ymin: -0.5, xmax: 17, ymax: 16.5, pixelsParCm: 20, scale: 0.6 }\n    for (let i = 0, texte, texteCorr; i < this.nbQuestions; i++) {\n      texte = this.interactif\n        ? `Quelle transformation permet de passer de la figure ${transfos[i].depart} à la figure ${transfos[i].arrivee} ? ` + choixDeroulant(this, i, 0, ['symétrie axiale', 'symétrie centrale', 'translation', 'quart de tour'], 'texte')\n        : `Quelle transformation permet de passer de la figure ${transfos[i].depart} à la figure ${transfos[i].arrivee} ?`\n      texteCorr = transfos[i].texteCorr\n      setReponse(this, i, [transformation(transfos[i].type), { formatInteractif: 'texte' }])\n      this.listeQuestions.push(texte)\n      this.listeCorrections.push(texteCorr)\n    }\n    listeQuestionsToContenu(this)\n    this.contenu = deuxColonnes(this.contenu, mathalea2d(paramsEnonce, objetsEnonce), 50)\n    this.contenuCorrection = deuxColonnes(this.contenuCorrection, mathalea2d(paramsCorrection, objetsCorrection), 50)\n  }\n  this.besoinFormulaireNumerique = ['Types de transformations possibles', 3, '1 : Symétries axiales et centrales\\n2 : Symétries et translations\\n3 : Symétries, translations et quarts de tour']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["dateDePublication","titre","interactifReady","interactifType","TrouverLaTransformations","Exercice","this","nbQuestions","spacing","nbCols","nbColsCorr","pasDeVersionLatex","pas_de_version_HMTL","A","point","typeDeTransfos","sup","motifs","polygone","noeuds","maGrille","labels","push","grille","i","segment","j","lettreDepuisChiffre","tracePoint","transfoPoly","pol","type","centre","axe","vecteur","angle","sens","symetrieAxiale","translation","rotation","definitElements","depart","arrivee","leSens","num","poly1","texte","texteCorr","texteInteractif","animation","vector","Est","texteEnCouleurEtGras","texcolors","nom","sp","droite","symetrieAnimee","translationAnimee","rotationAnimee","milieu","transformation","nouvelleVersion","autoCorrection","contraindreValeur","listeQuestions","listeCorrections","objetsEnonce","objetsCorrection","polys","transfos","homothetie","choice","x","dalle","transfoAlea","elements","y","randint","indexOf","questionJamaisPosee","numero","texteParPointEchelle","Number","toString","context","contour","couleurDeRemplissage","opacite","opaciteDeRemplissage","color","label","interactif","choixDeroulant","setReponse","formatInteractif","listeQuestionsToContenu","contenu","deuxColonnes","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","contenuCorrection","besoinFormulaireNumerique","boutonAide","consigne","consigneCorrection","introduction","tableauSolutionsDuQcm","spacingCorr","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","args","argsConcatenes","arg","undefined"],"sourceRoot":""}