{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G20-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Problemes_Thales","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","A","B","C","D","E","M","N","x","k","y","p","codage1","codage2","codage3","codage4","sMN","sBD","sCote","texte1","texte2","texte3","texte4","labels","BC","BD","MN","texte","texteCorr","randint","calcul","creerNomDePolygone","texNombre","texNombrec","context","fig1","fig2","choice","nomA","nomB","nomC","nomD","point","polygone","codageAngleDroit","pointSurSegment","longueur","segment","styleExtremites","texteParPoint","milieu","texteSurSegment","nombreAvecEspace","labelPoint","mathalea2d","xmin","xmax","ymin","ymax","scale","texFraction","arrondi","listeQuestionsToContenu","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/2249.5d853b6119e40de56d69.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,arrondi,calcul,texNombrec,creerNomDePolygone,texNombre,nombreAvecEspace,texFraction} from '../../modules/outils.js'\nimport {point,milieu,pointSurSegment,labelPoint,segment,polygone,codageAngleDroit,texteSurSegment,texteParPoint,longueur,mathalea2d} from '../../modules/2d.js'\nexport const titre = 'Problèmes avec le théorème de Thalès'\n\n/**\n* Banque de problèmes utilisant le théorème de Thalès et différentes propriétés de géométrie\n* @author Rémi Angot\n* 3G20-1\n*/\nexport default function Problemes_Thales() {\n\tExercice.call(this); // Héritage de la classe Exercice()\n\tthis.titre = titre;\n\tthis.nbQuestions = 1;\n\tthis.nbQuestionsModifiable = false;\n\tthis.nbCols = 1;\n\tthis.nbColsCorr = 1;\n\n\n\tthis.nouvelleVersion = function () {\n\t\tthis.listeQuestions = []; // Liste de questions\n\t\tthis.listeCorrections = []; // Liste de questions corrigées\n\t\tlet texte = '';\n\t\tlet texteCorr = '';\n\t\tlet typesDeQuestions = randint(1, 2);\n\t\tlet A, B, C, D,E, M, N, x, k, y, p, codage1, codage2, codage3, codage4, sMN, sBD, sCote, texte1, texte2, texte3, texte4, labels, BC, BD, MN;\n\n\n\t\tswitch (typesDeQuestions) {\n\t\t\tcase 1:\n\t\t\t\tx = randint(6, 10);\n\t\t\t\tk = calcul(randint(12, 19) / 10);\n\t\t\t\ty = calcul(randint(30, 50) / 10);\n\t\t\t\t[A, B, C, D, E] = creerNomDePolygone(5);\n\t\t\t\ttexte = `On sait que $${A}${E}=${texNombre(x)}$ cm ; $${A}${D}=${texNombrec(k * x)}$ cm et $${E}${B}=${texNombre(y)}$ cm.<br>`;\n\t\t\t\ttexte += `Calculer la valeur exacte de $${D}${C}$.`;\n\t\t\t\tif (context.isHtml) {\n\t\t\t\t\t// Pour le svg toutes les longueurs sont multipliées par 20\n\t\t\t\t\tlet fig1 = `<div><svg width=\"450\" height=\"300\" viewBox=\"-40 -40 450 300\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t  <polygon points=\"0,0 ${calcul(k * x * 20)},0 ${calcul(k * x * 20)},${calcul(k * y * 20)}  \" fill=\"none\" stroke=\"black\" />\n\t\t\t\t\t  <line x1=\"${calcul(x * 20)}\" y1=\"0\" x2=\"${calcul(x * 20)}\" y2=\"${calcul(y * 20)}\" stroke=\"black\" /> //[BE]\n\t\t\t\t\t  <polyline points=\"${calcul(x * 20 - 10)},0 ${calcul(x * 20 - 10)},10 ${calcul(x * 20)},10\" fill=\"none\" stroke=\"black\" />  //Angle droit en E\n\t\t\t\t\t  <polyline points=\"${calcul(k * x * 20 - 10)},0 ${calcul(k * x * 20 - 10)},10 ${calcul(k * x * 20)},10\" fill=\"none\" stroke=\"black\" />  //Angle droit en D\n\t\t\t\t\t  <text x=\"-10\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${A}</text> \n\t\t\t\t\t  <text x=\"${calcul(x * 20)}\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${E}</text> \n\t\t\t\t\t  <text x=\"${calcul(x * 20)}\" y=\"${calcul(y * 20 + 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${B}</text> \n\t\t\t\t\t  <text x=\"${calcul(k * x * 20 + 10)}\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${D}</text>\n\t\t\t\t\t  <text x=\"${calcul(k * x * 20 + 10)}\" y=\"${calcul(k * y * 20 + 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${C}</text>\n\t\t\t\t\t</svg></div>`;\n\n\t\t\t\t\tlet fig2 = `<div><svg width=\"450\" height=\"300\" viewBox=\"-40 -260 450 300\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t  <polygon points=\"0,0 ${calcul(k * x * 20)},0 ${calcul(k * x * 20)},${calcul(-k * y * 20)}  \" fill=\"none\" stroke=\"black\" />\n\t\t\t\t\t  <line x1=\"${calcul(x * 20)}\" y1=\"0\" x2=\"${calcul(x * 20)}\" y2=\"${calcul(-y * 20)}\" stroke=\"black\" /> //[BE]\n\t\t\t\t\t  <polyline points=\"${calcul(x * 20 - 10)},0 ${calcul(x * 20 - 10)},-10 ${calcul(x * 20)},-10\" fill=\"none\" stroke=\"black\" />  //Angle droit en E\n\t\t\t\t\t  <polyline points=\"${calcul(k * x * 20 - 10)},0 ${calcul(k * x * 20 - 10)},-10 ${calcul(k * x * 20)},-10\" fill=\"none\" stroke=\"black\" />  //Angle droit en D\n\t\t\t\t\t  <text x=\"-10\" y=\"-10\" text-anchor=\"middle\" alignment-baseline=\"central\">${A}</text> \n\t\t\t\t\t  <text x=\"${calcul(x * 20)}\" y=\"10\" text-anchor=\"middle\" alignment-baseline=\"central\">${E}</text> \n\t\t\t\t\t  <text x=\"${calcul(x * 20)}\" y=\"${calcul(-y * 20 - 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${B}</text> \n\t\t\t\t\t  <text x=\"${calcul(k * x * 20 + 10)}\" y=\"10\" text-anchor=\"middle\" alignment-baseline=\"central\">${D}</text>\n\t\t\t\t\t  <text x=\"${calcul(k * x * 20 + 10)}\" y=\"${calcul(-k * y * 20 - 10)}\" text-anchor=\"middle\" alignment-baseline=\"central\">${C}</text>\n\t\t\t\t\t</svg></div>`;\n\n\t\t\t\t\ttexte += choice([fig1, fig2]);\n\n\n\n\t\t\t\t} else {\n\t\t\t\t\tlet fig1 = `\\\\begin{tikzpicture}[scale=.6]\n\\\\draw (0,0)--(${calcul(k * x)},0)--(${calcul(k * x)},${-k * y})--cycle;\n\\\\draw (${x},0)--(${x},${-y});\n\\\\draw (${x},0) rectangle ++(-.5,-.5);\n\\\\draw (${calcul(k * x)},0) rectangle ++(-.5,-.5);\n\\\\node [above left] at (0,0) {${A}};\n\\\\node [above] at (${x},0) {${E}};\n\\\\node [above right] at (${k * x},0) {${D}};\n\\\\node [below right] at (${k * x},${-k * y}) {${C}};\n\\\\node [below] at (${x},${-y}) {${B}};\n\\\\end{tikzpicture}`;\n\n\t\t\t\t\tlet fig2 = `\\\\begin{tikzpicture}[scale=.6]\n\\\\draw (0,0)--(${calcul(k * x)},0)--(${calcul(k * x)},${k * y})--cycle;\n\\\\draw (${x},0)--(${x},${y});\n\\\\draw (${x},0) rectangle ++(.5,.5);\n\\\\draw (${calcul(k * x)},0) rectangle ++(.5,.5);\n\\\\node [below left] at (0,0) {${A}};\n\\\\node [below] at (${x},0) {${E}};\n\\\\node [below right] at (${k * x},0) {${D}};\n\\\\node [above right] at (${k * x},${k * y}) {${C}};\n\\\\node [above] at (${x},${y}) {${B}};\n\\\\end{tikzpicture}`;\n\n\t\t\t\t\ttexte += '<br>' + choice([fig1, fig2]);\n\n\t\t\t\t}\n\n\t\t\t\ttexteCorr = `Les droites $(${E}${B})$ et $(${D}${C})$ sont perpendiculaires à la même droite $(${A}${D})$, elles sont donc parallèles entre elles.`;\n\t\t\t\ttexteCorr += `<br>De plus les points $${A}$, $${E}$, $${D}$  et $${A}$, $${B}$, $${C}$ sont alignés dans cet ordre donc d'après le théorème de Thalès on a :`;\n\t\t\t\ttexteCorr += `<br><br>$\\\\dfrac{${A}${E}}{${A}${D}}=\\\\dfrac{${E}${B}}{${D}${C}}=\\\\dfrac{${A}${B}}{${A}${C}}$`;\n\t\t\t\ttexteCorr += `<br><br>$\\\\dfrac{${texNombre(x)}}{${texNombrec(k * x)}}=\\\\dfrac{${texNombre(y)}}{${D}${C}}$`;\n\t\t\t\ttexteCorr += `<br><br>$${D}${C}=\\\\dfrac{${texNombrec(k * x)}\\\\times${texNombre(y)}}{${texNombre(x)}}=${texNombrec(k * y)}$`;\n\t\t\t\tbreak;\n\n\n\t\t\tcase 2:\n\t\t\t\tlet [nomA, nomB, nomC, nomD] = creerNomDePolygone(4, ['M', 'N']);\n\t\t\t\tBC = randint(2, 6);\n\t\t\t\tBD = 2 * BC;\n\t\t\t\tMN = calcul(BD * choice([0.2, 0.3, 0.4]));\n\t\t\t\tA = point(0, 4, nomA, 'above');\n\t\t\t\tB = point(7, 4, nomB, 'above');\n\t\t\t\tC = point(7, 0, nomC, 'below');\n\t\t\t\tD = point(0, 0, nomD, 'below');\n\t\t\t\tp = polygone(A, B, C, D);\n\t\t\t\tcodage1 = codageAngleDroit(D, A, B);\n\t\t\t\tcodage2 = codageAngleDroit(A, B, C);\n\t\t\t\tcodage3 = codageAngleDroit(B, C, D);\n\t\t\t\tcodage4 = codageAngleDroit(C, D, A);\n\t\t\t\tM = pointSurSegment(A, B, longueur(A, B) / 3, 'M', 'above');\n\t\t\t\tN = pointSurSegment(A, D, longueur(A, D) / 3, 'N', 'left');\n\t\t\t\tsMN = segment(M, N);\n\t\t\t\tsBD = segment(B, D);\n\t\t\t\tsCote = segment(point(N.x - 1.3, N.y), point(D.x - 1.3, D.y));\n\t\t\t\tsCote.styleExtremites = '<->';\n\t\t\t\ttexte1 = texteParPoint('?', milieu(point(N.x - 1.5, N.y), point(D.x - 1.5, D.y)), 'gauche');\n\t\t\t\ttexte2 = texteSurSegment(nombreAvecEspace(BD) + ' cm', B, D);\n\t\t\t\ttexte3 = texteSurSegment(nombreAvecEspace(MN) + ' cm', M, N);\n\t\t\t\ttexte4 = texteSurSegment(nombreAvecEspace(BC) + ' cm', B, C);\n\n\t\t\t\tlabels = labelPoint(M, N, A, B, C, D);\n\n\t\t\t\ttexte = `Sur la figure ci-dessous $${nomA + nomB + nomC + nomD}$ est un rectangle et $(MN)$ est parallèle à la diagonale $(${nomB + nomD})$.`;\n\t\t\t\ttexte += `<br>Calculer la longueur $${nomD + 'N'}$ au millimètre près.<br><br>`;\n\t\t\t\ttexte += mathalea2d({\n\t\t\t\t\txmin: -2,\n\t\t\t\t\txmax: 9,\n\t\t\t\t\tymin: -1.5,\n\t\t\t\t\tymax: 5,\n\t\t\t\t\tscale: .8\n\t\t\t\t}, p, codage1, codage2, codage3, codage4, sMN, sBD, sCote, texte1, texte2, texte3, texte4, labels);\n\n\t\t\t\ttexteCorr = `Dans le triangle $${nomA + nomB + nomD}$, $M$ est un point de $[${nomA + nomB}]$, $N$ est un point de $[${nomA + nomD}]$ et $(MN)$ est parallèle à $(${nomB + nomD})$ donc d'après le théorème de Thalès on a : `;\n\t\t\t\ttexteCorr += `<br><br> $${texFraction(nomA + 'M', nomA + nomB)}=${texFraction(nomA + 'N', nomA + nomD)}=${texFraction('MN', nomB + nomD)}$`;\n\t\t\t\ttexteCorr += `<br><br> $${texFraction(nomA + 'M', nomA + nomB)}=${texFraction(nomA + 'N', BC)}=${texFraction(texNombre(MN), texNombre(BD))}$`;\n\t\t\t\ttexteCorr += `<br><br> $${nomA}N = ${texFraction(BC + '\\\\times' + texNombre(MN), BD)}=${texNombre(arrondi(calcul(BC * MN / BD), 1))}$ cm`;\n\t\t\t\ttexteCorr += `<br><br> Les points $${nomA}$, $N$ et $${nomD}$ sont alignés dans cet ordre donc $N${nomD}=${nomA + nomD}-${nomA}N= ${BC}-${texNombre(arrondi(calcul(BC * MN / BD), 1))}=${texNombre(arrondi(calcul(BC - BC * MN / BD), 1))}$ cm.`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.listeQuestions[0] = texte;\n\t\tthis.listeCorrections[0] = texteCorr;\n\t\tlisteQuestionsToContenu(this);\n\t\t// this.besoinFormulaireNumerique = ['Type de questions',2,\"1 : Donner l'égalité\\n2 : Compléter une égalité avec une addition ou une soustraction\"];\n\t\t// this.besoinFormulaire2CaseACocher = ['Sans figures']\n\t};\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}