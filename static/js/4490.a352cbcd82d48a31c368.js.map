{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C22-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Exercice_diviser_fractions","Exercice","this","sup","consigne","spacing","spacingCorr","nbQuestions","nbColsCorr","nouvelleVersion","listeQuestions","listeCorrections","typesDeQuestionsDisponibles","nombre_de_signe_moins","liste_fractions","obtenirListeFractionsIrreductibles","parseInt","listeTypeDeQuestions","combinaisonListes","ab","cd","a","b","c","d","p","signe","texte","texteCorr","typesDeQuestions","i","cpt","choice","pgcd","texFraction","randint","Math","pow","abs","ecritureParentheseSiNegatif","texFractionSigne","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/4490.a352cbcd82d48a31c368.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,choice,combinaisonListes,ecritureParentheseSiNegatif,abs,pgcd,texFractionSigne,obtenirListeFractionsIrreductibles,texFraction} from '../../modules/outils.js'\nexport const titre = 'Diviser des fractions'\n\n/**\n * Calcul du quotient de deux fractions. Paramétrages possibles :\n * * 1 : Nombres positifs exclusivement\n * * 2 : nombres relatifs\n * @author Jean-Claude Lhote\n * 4C22-2\n */\nexport default function Exercice_diviser_fractions() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.sup = 1; // Avec ou sans relatifs\n  this.titre = titre;\n  this.consigne = \"Calculer et donner le résultat sous forme irréductible\";\n  this.spacing = 2;\n  this.spacingCorr = 2;\n  this.nbQuestions = 5;\n  this.nbColsCorr = 1;\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let liste_fractions = obtenirListeFractionsIrreductibles();\n\n    let typesDeQuestionsDisponibles;\n    typesDeQuestionsDisponibles = [parseInt(this.sup)];\n    let nombre_de_signe_moins;\n    let listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    );\n    for (\n      let i = 0,\n      ab,\n      cd,\n      a,\n      b,\n      c,\n      d,\n      p,\n      signe,\n      texte,\n      texteCorr,\n      typesDeQuestions,\n      cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      typesDeQuestions = listeTypeDeQuestions[i];\n      ab = choice(liste_fractions);\n      cd = choice(liste_fractions);\n      a = ab[0];\n      b = ab[1];\n      c = cd[0];\n      d = cd[1];\n\n      p = pgcd(a * d, b * c);\n\n      switch (typesDeQuestions) {\n        //\tcase 0 : // entier * fraction (tout positif)\n        //\t\ttexte=`$${texFraction(a,1)}\\\\div${texFraction(c,d)}=$`;\n        //\t\tif (pgcd(a*d,c)==1) {\n        //\t\t\ttexteCorr= `$${texFraction(a,1)}\\\\div${texFraction(c,d)}=${texFraction(a,1)}\\\\times${texFraction(d,c)}=\\\\dfrac{${a}}{1}\\\\times${texFraction(d,c)}=${texFraction(a +'\\\\times'+d,'1\\\\times'+c)}=${texFraction(a*d,c)}$`\n        //\t\t}\n        //\t\telse {\n        //\t\t\ttexteCorr= `$${texFraction(a,1)}\\\\div${texFraction(c,d)}=${texFraction(a,1)}\\\\times${texFraction(d,c)}=${texFraction(a*d,c)}=${texFractionReduite(a*d,c)}$`\n        //\t\t}\n        //\t\tbreak\n        //\n        case 1: // fraction * fraction tout positif\n          texte = `$${texFraction(a, b)}\\\\div${texFraction(c, d)}=$`;\n          if (p == 1) {\n            texteCorr = `$${texFraction(a, b)}\\\\div${texFraction(\n              c,\n              d\n            )}=${texFraction(a, b)}\\\\times${texFraction(d, c)}=${texFraction(\n              a + \"\\\\times\" + d,\n              b + \"\\\\times\" + c\n            )}=${texFraction(a * d, b * c)}$`;\n          } else {\n            texteCorr = `$${texFraction(a, b)}\\\\div${texFraction(\n              c,\n              d\n            )}=${texFraction(a, b)}\\\\times${texFraction(d, c)}=${texFraction(\n              a + \"\\\\times\" + d,\n              b + \"\\\\times\" + c\n            )}=${texFraction(a * d, b * c)}=${texFraction(\n              (a * d) / p + \"\\\\times\\\\cancel{\" + p + \"}\",\n              (b * c) / p + \"\\\\times\\\\cancel{\" + p + \"}\"\n            )}=${texFraction((a * d) / p, (b * c) / p)}$`;\n          }\n          break;\n\n        case 2:\n          a = a * randint(-1, 1, [0]);\n          b = b * randint(-1, 1, [0]);\n          c = c * randint(-1, 1, [0]);\n          d = d * randint(-1, 1, [0]);\n          nombre_de_signe_moins = (a < 0) + (b < 0) + (c < 0) + (d < 0);\n          if (Math.pow(-1, nombre_de_signe_moins) == 1) {\n            signe = \"\";\n          } else {\n            signe = \"-\";\n          }\n          texte = `$${texFraction(a, b)}\\\\div${texFraction(c, d)}=$`;\n          texteCorr = `$${texFraction(a, b)}\\\\div${texFraction(c, d)}$`;\n          a = abs(a);\n          b = abs(b);\n          c = abs(c);\n          d = abs(d);\n          p = pgcd(a * d, b * c);\n          texteCorr += `$=${signe}${texFraction(a, b)}\\\\times${texFraction(\n            d,\n            c\n          )}$`;\n          texteCorr += `$=${signe}${texFraction(\n            a + \"\\\\times\" + ecritureParentheseSiNegatif(d),\n            b + \"\\\\times\" + ecritureParentheseSiNegatif(c)\n          )}$`;\n          if (p == 1) {\n            texteCorr += `$=${signe}${texFractionSigne(a * d, b * c)}$`;\n          } else {\n            texteCorr += `$=${signe}${texFraction(a * d, b * c)}$`;\n            if (a * d != b * c) {\n              texteCorr += `$=${signe}${texFraction(\n                (a * d) / p + \"\\\\times\\\\cancel{\" + p + \"}\",\n                (b * c) / p + \"\\\\times\\\\cancel{\" + p + \"}\"\n              )}$`;\n              texteCorr += `$=${signe}${texFraction(\n                (a * d) / p,\n                (b * c) / p\n              )}$`;\n            } else {\n              texteCorr += `$=${signe}1$`;\n            }\n          }\n          break;\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n\n      cpt++;\n    }\n    listeQuestionsToContenu(this); //Espacement de 2 em entre chaque questions.\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    2,\n    \"1 : Fractions à numérateur et dénominateur positifs \\n 2 : Fractions à numérateur et dénominateur relatifs\",\n  ];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}