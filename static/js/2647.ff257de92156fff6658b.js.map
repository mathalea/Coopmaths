{"version":3,"sources":["webpack://mathalea/./src/js/exercices/5e/5R10-1.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Deviner_nombre_relatif","Exercice","this","consigne","spacing","nbQuestions","nouvelleVersion","listeQuestions","listeCorrections","dixieme","signe","centieme","unite","somme","produit","facteurs","listeTypeDeQuestions","combinaisonListes","type","texte","texteCorr","i","cpt","choice","randint","obtenirListeFacteursPremiers","push","shuffle","texNombrec","indexOf","listeQuestionsToContenu","consigneCorrection","introduction","contenu","contenuCorrection","nbCols","nbColsCorr","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"8KAGO,MAAMA,EAAQ,4BAQN,SAASC,IAEtBC,eAAcC,MACbA,KAAKH,MAAQA,EACdG,KAAKC,SAAW,gBAChBD,KAAKE,QAAU,EACfF,KAAKG,YAAY,EACjBH,KAAKI,gBAAkB,WACrBJ,KAAKK,eAAiB,GACtBL,KAAKM,iBAAmB,GACxB,IAEIC,EAAQC,EAAMC,EAASC,EAAMC,EAAMC,EAAQC,EAD3CC,GAAqBC,SADS,CAAC,EAAE,EAAE,GACkCf,KAAKG,aACtBa,EAAK,CAAC,UAAU,MAAM,WAC9E,IAAK,IAAWC,EAAOC,EAAdC,EAAI,EAAoBC,EAAI,EAAGD,EAAInB,KAAKG,aAAc,CAE3D,OADAK,GAAMa,SAAO,EAAE,EAAE,IACTP,EAAqBK,IAC7B,KAAK,EACDT,GAAMY,SAAQ,EAAE,GAChBX,GAAMW,SAAQZ,EAAM,EAAEA,EAAM,GAC5BH,EAAQI,EAAMD,EACdD,EAAS,EACXQ,EAAS,qBAAoBD,EAAKR,EAAM,iDAAiDE,QAAYA,EAAM,SAC3GO,GAAQ,mDAAkDN,sBAC5D,MAEA,KAAK,EACDD,GAAMY,SAAQ,EAAE,GAChBX,GAAMW,SAAQZ,EAAM,EAAEA,EAAM,GAC5BH,EAAQI,EAAMD,EACdD,EAAS,EACXQ,EAAS,qDAELA,GADAT,EAAM,EACE,IAAGE,UAAcA,EAAM,UAGzB,KAAIA,EAAM,WAAWA,UAE/BO,GAAQ,sCAAqCN,uBAC/C,MAEA,KAAK,EACDC,GAAQS,SAAO,CAAC,EAAE,GAAG,KACrBR,GAASU,SAA6BX,GACtCC,EAASW,KAAK,GACdX,GAASY,SAAQZ,GACjBH,EAAMG,EAAS,GACfN,EAAQM,EAAS,GACjBJ,EAASI,EAAS,GAClBI,EAAS,qBAAoBD,EAAKR,EAAM,iDAAiDE,QAAYA,EAAM,SAC3GO,GAAQ,yCAAwCL,SAE5CK,GADAV,EAAQE,EACA,sEAGA,sEAEXQ,GAAQ,iBAOfC,EAAa,aAAWQ,SAAWlB,GAAOE,EAAMH,EAAQ,GAAGE,EAAS,WAE5B,GAAvCT,KAAKK,eAAesB,QAAQV,KAC/BjB,KAAKK,eAAemB,KAAKP,GACzBjB,KAAKM,iBAAiBkB,KAAKN,GAC3BC,KAEDC,KAECQ,SAAwB5B,S,6BC7Eb,SAASD,IAEtBC,KAAKH,MAAQ,GACbG,KAAKC,SAAW,GAChBD,KAAK6B,mBAAqB,GAC1B7B,KAAKK,eAAiB,GACtBL,KAAKM,iBAAmB,GACxBN,KAAK8B,aAAe,GACpB9B,KAAK+B,QAAU,GACf/B,KAAKgC,kBAAoB,GACzBhC,KAAKG,YAAc,GACnBH,KAAKiC,OAAS,EACdjC,KAAKkC,WAAa,EAClBlC,KAAKE,QAAU,EACfF,KAAKmC,YAAc,EACnBnC,KAAKoC,QAAS,EAEdpC,KAAKqC,2BAA4B,EACjCrC,KAAKsC,uBAAwB,EAC7BtC,KAAKuC,6BAA8B,EACnCvC,KAAKwC,oBAAqB,EAC1BxC,KAAKyC,uBAAwB,EAC7BzC,KAAK0C,kBAAmB,EACxB1C,KAAK2C,sBAAuB,EAC5B3C,KAAK4C,mBAAoB,EACzB5C,KAAK6C,uBAAwB,EAC7B7C,KAAK8C,+BAAgC,EACrC9C,KAAK+C,qBAAsB,EAC3B/C,KAAKgD,MAAQ,GACbhD,KAAKiD,YAAa,EAClBjD,KAAKkD,gBAAkB,GAMvBlD,KAAKmD,mBAAoB,EACzBnD,KAAKoD,KAAM,EACXpD,KAAKqD,eAAgB,EACrBrD,KAAKsD,SAAU,EACftD,KAAKuD,sBAAwB,GAC7BvD,KAAKwD,cAAe,EACpBxD,KAAKI,gBAAkB,SAAUqD,KACjCzD,KAAK0D,cAAgB,G","file":"js/2647.ff257de92156fff6658b.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,shuffle,texNombrec,obtenirListeFacteursPremiers,choice,combinaisonListes} from '../../modules/outils.js'\n\nexport const titre = 'Deviner un nombre relatif'\n\n/**\n * Additions à trou dans les relatifs\n *\n *  @Auteur Jean-Claude Lhote à partir de CM000 de Rémi Angot\n * Référence 5R10\n */\nexport default function Deviner_nombre_relatif() {\n  \"use strict\";\n  Exercice.call(this); // Héritage de la classe Exercice()\n   this.titre = titre;\n  this.consigne = \"Qui suis-je ?\";\n  this.spacing = 2;\n  this.nbQuestions=3;\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let type_de_questions_disponibles=[1,2,3]\n    let listeTypeDeQuestions=combinaisonListes(type_de_questions_disponibles,this.nbQuestions)\n    let dixieme,signe,centieme,unite,somme,produit,facteurs,type=['négatif','nul','positif'];\n    for (let i = 0, texte, texteCorr,cpt=0; i < this.nbQuestions;) {\n        signe=choice([-1,1])\n        switch (listeTypeDeQuestions[i]) {\n        case 1:\n            unite=randint(1,9)\n            somme=randint(unite+1,unite+9)\n            dixieme=somme-unite\n            centieme=0\n          texte = `Je suis un nombre ${type[signe+1]} dont la distance à zéro est comprise entre ${unite} et ${unite+1}.<br>`\n          texte+=`On m'écrit avec deux chiffres dont la somme est ${somme}.<br>Qui suis-je ?`;\n        break\n\n        case 2:\n            unite=randint(1,9)\n            somme=randint(unite+1,unite+9)\n            dixieme=somme-unite\n            centieme=0\n          texte = `Je suis un nombre dont l'opposé est compris entre `\n          if (signe<0) {\n              texte+=`$${unite}$ et $${unite+1}$.<br>`\n          }\n          else {\n            texte+=`$${-unite-1}$ et $${-unite}$.<br>`\n          } \n          texte+=`La somme de mes deux chiffres est $${somme}$.<br>Qui suis-je ?`;\n        break\n\n        case 3:\n            produit=choice([6,10,15])\n            facteurs=obtenirListeFacteursPremiers(produit)\n            facteurs.push(1)\n            facteurs=shuffle(facteurs)\n            unite=facteurs[0]\n            dixieme=facteurs[1]\n            centieme=facteurs[2]\n            texte = `Je suis un nombre ${type[signe+1]} dont la distance à zéro est comprise entre ${unite} et ${unite+1}.<br>`\n            texte+=`Le produit de mes trois chiffres vaut ${produit}.<br>`\n            if (dixieme<centieme) {\n                texte+=`Mon chiffre des centièmes est supérieur à mon chiffre des dixièmes.`\n            }\n            else {\n                texte+=`Mon chiffre des centièmes est inférieur à mon chiffre des dixièmes.`\n            }\n             texte+=` Qui suis-je ?`;\n         break\n\n        case 4: \n        break\n\n      }\n      texteCorr = `Je suis $${texNombrec(signe*(unite+dixieme/10+centieme/100))}$.`;\n\n\t\t\tif (this.listeQuestions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n\t\t\t\tthis.listeQuestions.push(texte);\n\t\t\t\tthis.listeCorrections.push(texteCorr);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n//  this.besoinFormulaireNumerique = [\"Niveau de difficulté\",2,\"1 : Nombres entiers\\n2 : Nombres décimaux\"]; \n//  this.besoinFormulaire2Numerique = [\"Valeur maximale\", 9999]\n//  this.besoinFormulaire3Numerique = [\"Type d'égalité\",2,\"1 : Égalité à trou\\n2 : Équation\"]; \n}","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}