{"version":3,"sources":["webpack://mathalea/./src/js/exercices/ClasseExercice.js","webpack://mathalea/./src/js/exercices/beta/beta4C25-00.js"],"names":["Exercice","this","titre","consigne","consigneCorrection","listeQuestions","listeCorrections","introduction","contenu","contenuCorrection","nbQuestions","nbCols","nbColsCorr","spacing","spacingCorr","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","nouvelleVersion","numeroExercice","listePackages","Problemes_additifs_fractions_bis","type_de_questions_disponibles","debug","sup","sortieHtml","choice","listeTypeDeQuestions","combinaisonListesSansChangerOrdre","p1","p2","p3","currentDate","currentAnnee","listefrac","listefrac2","denominateurCommun","frac_meme_denom","frac_meme_denom_rangees","frac_rangees","n1","n2","n3","d1","d2","d3","F1","F2","F3","F4","n4","d4","denoms_cool_4","denoms_amis","pb_4_f","pb_3_f","texte","texteCorr","i","denoms_cool_3","cpt","randint","length","fraction","num","superieurlarge","simplifie","push","prenoms","prenomM","fractions","enonce","question","correction","prenomF","Date","getFullYear","texFraction","listeFractions","enleveElementBis","listeMemeDenominateur","listeRangeeMemeDenominateur","listeRangee","den","liste","egal","texteEnCouleurEtGras","indexOf","prenom","listeQuestionsToContenu"],"mappings":"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","file":"js/295.e5c538a45857b38f9b9e.js","sourcesContent":["/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","import Exercice from '../ClasseExercice.js';\nimport {enleveElementBis, listeQuestionsToContenu, randint, choice, combinaisonListesSansChangerOrdre, prenomF, prenomM, prenom, texteEnCouleurEtGras } from '../../modules/outils.js'\nimport { fraction, listeFractions} from '../../modules/Fractions.js'\n\nexport const titre = 'Re-Problèmes additifs et de comparaison sur les rationnels'\n\n/**\n * Problèmes additifs et de comparaion sur les rationnels\n * 4C25-0\n * @author Sébastien Lozano\n */\nexport default function Problemes_additifs_fractions_bis() {\n    \"use strict\";\n    Exercice.call(this); // Héritage de la classe Exercice()\n    this.debug = false;\n    this.sup = 1;\n    this.video=\"\"\n    if (this.debug) {\n        this.nbQuestions = 2;\n    } else {\n        this.nbQuestions = 2;\n    }\n    this.titre = titre;\n    this.consigne = `Justifier vos réponses aux problèmes suivants.`;\n\n    this.nbCols = 1;\n    this.nbColsCorr = 1;\n    //this.nbQuestionsModifiable = false;\n    sortieHtml ? (this.spacing = 2) : (this.spacing = 1.5);\n    sortieHtml ? (this.spacingCorr = 3) : (this.spacingCorr = 1.15);\n\n    let type_de_questions_disponibles;\n\n    this.nouvelleVersion = function () {\n        if (this.debug) {\n            type_de_questions_disponibles = [1, 2, 3, 4, 5];\n        } else {\n            type_de_questions_disponibles = [choice([1, 2]), choice([3, 4, 5])];\n        }\n\n        //let listeTypeDeQuestions = combinaisonListes(type_de_questions_disponibles,this.nbQuestions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n        let listeTypeDeQuestions = combinaisonListesSansChangerOrdre(\n            type_de_questions_disponibles,\n            this.nbQuestions\n        ); // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n        this.listeQuestions = []; // Liste de questions\n        this.listeCorrections = []; // Liste de questions corrigées\n        let denoms_amis = [\n            [40, 2, 20, 4, 10, 5, 8],\n            [60, 2, 30, 3, 20, 4, 15, 5, 12, 6, 10],\n            [80, 2, 40, 4, 20, 5, 16, 8, 10],\n        ];\n        let p1, p2, p3; // les 3 prénoms\n        let currentDate\n        let currentAnnee\n        let listefrac,listefrac2,denominateurCommun,frac_meme_denom,frac_meme_denom_rangees,frac_rangees\n            // le tableau d'objets contenant tout le necesssaire, fractions, énoncé, question ... pour les problème avec 4 fractions\n        let pb_4_f = [],pb_3_f =[];\n            // les numérateurs et dénominateurs des 4 fractions attention les trois premières doivent être inférieures à 1/3 si on veut qu'elles soient toutes positives !\n            // et on veut des fractions distinctes\n        let n1, n2, n3, d1, d2, d3,F1, F2, F3,F4;\n        let n4, d4; // en plus parce qu'il y a 4 fractions\n            // on choisit un tableau de dénominateurs qui vont bien\n        let denoms_cool_4 ;\n        for (\n            let i = 0,denoms_cool_3 =[],texte, texteCorr, cpt = 0;\n            i < this.nbQuestions && cpt < 50;\n\n        ) {\n\n            //======================================================\n            //======== \t\tAVEC 3 FRACTIONS\t\t\t  \t========\n            //======================================================\n\n            // le tableau d'objets contenant tout le necesssaire, fractions, énoncé, question ... pour les problème avec 3 fractions\n            pb_3_f = [];\n            // les numérateurs et dénominateurs des 3 fractions attention les deux premières doivent être inférieures à 1/2 si on veut qu'elles soient toutes positives !\n            // et on veut des fractions distinctes !\n            \n            \n            // on choisit un tableau de dénominateurs qui vont bien\n            denoms_cool_3 = denoms_amis[randint(0, denoms_amis.length - 1)];\n            F1 = fraction(1, 2)\n            F2 = fraction(1, 2)\n            F3 = fraction(1, 2)\n            while (\n                F1.num == F2.num ||\n                F1.num == F3.num ||\n                F2.num == F3.num ||\n                F1.superieurlarge(fraction(1, 2)) ||\n                F2.superieurlarge(fraction(1, 2))\n            ) {\n                n1 = randint(1, 6);\n                d1 = choice(denoms_cool_3);\n                n2 = randint(2, 10, n1); //on évite n1 pour pouvoir retrouver le texte de la plus grande fraction\n                d2 = choice(denoms_cool_3, d1);\n                n3 = d1 * d2 - n1 * d2 - n2 * d1; //la somme des trois vaut 1 !\n                d3 = d1 * d2;\n                F1 = fraction(n1, d1).simplifie()\n                F2 = fraction(n2, d2).simplifie()\n                F3 = fraction(n3, d3).simplifie()\n\n            }\n            //======================================================\n            //========= indice 0 le triathlon des neiges  ==========\n            //======================================================\n            pb_3_f.push({\n                prenoms: [prenomM()],\n                fractions: [F1,\"VTT\",F2,\"ski de fond\",F3,\"pied\"],\n                enonce: ``,\n                question: `Pour quelle discipline, la distance est-elle la plus grande ?`,\n                correction: ``,\n            });\n\n            // les 3 prénomns doivent être distincts\n   \n            while (p1 == p2 || p1 == p3 || p2 == p3) {\n                p1 = prenomF();\n                p2 = prenomF();\n                p3 = prenomF();\n            }\n\n            //======================================================\n            //=========== \t\tindice 1 Miss Math\t\t ===========\n            //======================================================\n            pb_3_f.push({\n                prenoms: [],\n                fractions: [F1,p1,F2,p2,F3,p3],\n                enonce: ``,\n                question: `Qui a été élue ?`,\n                correction: ``,\n            });\n            currentDate = new Date();\n            currentAnnee = currentDate.getFullYear();\n\n            //======================================================\n            //====== énoncé indice 0 le triathlon des neiges  ======\n            //======================================================\n            pb_3_f[0].enonce += `Le triathlon des neiges de la vallée des loups comprend trois épreuves qui s'enchaînent : VTT, ski de fond et course à pied.`;\n            pb_3_f[0].enonce += `<br>${pb_3_f[0].prenoms[0]}, un passionné de cette épreuve, s'entraîne régulièrement sur le même circuit. `;\n            pb_3_f[0].enonce += `<br>À chaque entraînement, il parcourt le circuit de la façon suivante : $${pb_3_f[0].fractions[0].texFraction}$ à ${pb_3_f[0].fractions[1]}, `;\n            pb_3_f[0].enonce += `$${pb_3_f[0].fractions[2].texFraction}$ à ${pb_3_f[0].fractions[3]} et le reste à ${pb_3_f[0].fractions[5]}.`;\n\n            //======================================================\n            //=========== énoncé indice 1 Miss Math\t\t ===========\n            //======================================================\n            pb_3_f[1].enonce = `À l'élection de Miss Math ${currentAnnee}, ${pb_3_f[1].fractions[1]} a remporté $${pb_3_f[1].fractions[0].texFraction}$ des suffrages, `;\n            pb_3_f[1].enonce += `${pb_3_f[1].fractions[3]} $${pb_3_f[1].fractions[2].texFraction}$ et `;\n            pb_3_f[1].enonce += `${pb_3_f[1].fractions[5]} tous les autres.`;\n\n            //======================================================\n            //=========== \t\tCorrection Commune  \t ===========\n            //======================================================\n            listefrac = listeFractions(F1, F2, F3)\n            frac_meme_denom = enleveElementBis(listefrac.listeMemeDenominateur)\n            frac_meme_denom_rangees = enleveElementBis(listefrac.listeRangeeMemeDenominateur)\n            frac_rangees = enleveElementBis(listefrac.listeRangee)\n            denominateurCommun = listefrac.listeMemeDenominateur[0].den\n            for (let i = 0; i < 2; i++) {\n                pb_3_f[\n                    i\n                ].correction = `Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>`;\n                if (listefrac.liste[0].den == listefrac.liste[1].den) {\n                    pb_3_f[i].correction += `Les fractions de l'énoncé ont déjà le même dénominateur.<br>`;\n                }\n                else {\n                    pb_3_f[i].correction += `Réduisons les fractions de l'énoncé au même dénominateur :  `;\n\n                    pb_3_f[i].correction += `$${listefrac.liste[0].texFraction}$ `\n                    if (listefrac.liste[0].den!==denominateurCommun) pb_3_f[i].correction +=`$= ${listefrac.listeMemeDenominateur[0].texFraction}$ et `\n                    else  pb_3_f[i].correction +=` et `\n                    pb_3_f[i].correction += `$${listefrac.liste[1].texFraction}$ `\n                    if (listefrac.liste[1].den!==denominateurCommun)  pb_3_f[i].correction+=`$= ${listefrac.listeMemeDenominateur[1].texFraction}$.<br>`\n                    else pb_3_f[i].correction+=`.<br>`\n\n                }\n            }\n\n            //======================================================\n            //==== Correction indice 0 le triathlon des neiges  ====\n            //======================================================\n            pb_3_f[0].correction += `Calculons alors la distance à `;\n\n            //======================================================\n            //======== \t\tCorrection indice 1 Miss Math  \t========\n            //======================================================\n            pb_3_f[1].correction += `Calculons d'abord la fraction des suffrages remportés par `;\n\n            //======================================================\n            //=========== \t\tCorrection Commune  \t ===========\n            //======================================================\n            for (let i = 0; i < 2; i++) {\n                pb_3_f[i].correction += `${pb_3_f[i].fractions[5]} : <br>`;\n                pb_3_f[\n                    i\n                ].correction += `$1-${pb_3_f[i].fractions[0].texFraction}-${pb_3_f[i].fractions[2].texFraction} = `;\n                pb_3_f[\n                    i\n                ].correction += `${fraction(denominateurCommun, denominateurCommun).texFraction}-${listefrac.listeMemeDenominateur[0].texFraction}-${listefrac.listeMemeDenominateur[1].texFraction} = `;\n                pb_3_f[\n                    i\n                ].correction += `\\\\dfrac{${denominateurCommun}-${listefrac.listeMemeDenominateur[0].num}-${listefrac.listeMemeDenominateur[1].num}}{${denominateurCommun}} = `;\n                pb_3_f[i].correction += `${fraction(denominateurCommun - listefrac.listeMemeDenominateur[0].num - listefrac.listeMemeDenominateur[1].num, denominateurCommun).texFraction}`;\n                if (!(denominateurCommun == F3.den)) {\n                    pb_3_f[\n                        i\n                    ].correction += ` = ${pb_3_f[i].fractions[4].texFraction}$`;\n                } else {\n                    pb_3_f[i].correction += `$`;\n                }\n            }\n\n            //======================================================\n            //==== Conclusion indice 0 le triathlon des neiges  ====\n            //======================================================\n            pb_3_f[0].correction += `<br>${pb_3_f[0].prenoms[0]} fait donc $${pb_3_f[0].fractions[0].texFraction}$ à ${pb_3_f[0].fractions[1]}, `;\n            pb_3_f[0].correction += `$${pb_3_f[0].fractions[2].texFraction}$ à ${pb_3_f[0].fractions[3]} et `;\n            pb_3_f[0].correction += `$${pb_3_f[0].fractions[4].texFraction}$ à ${pb_3_f[0].fractions[5]}.`;\n\n            pb_3_f[0].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n            pb_3_f[0].correction += `${pb_3_f[0].prenoms[0]} fait donc $${frac_meme_denom[0].texFraction}$ à ${pb_3_f[0].fractions[1]}, `;\n            pb_3_f[0].correction += `$${frac_meme_denom[1].texFraction}$ à ${pb_3_f[0].fractions[3]} et `;\n            pb_3_f[0].correction += `$${frac_meme_denom[2].texFraction}$ à ${pb_3_f[0].fractions[5]}.`;\n\n            //let frac_rangees,frac_meme_denom_rangees;\n            if (\n                F1.egal(F2) &&\n                F1.egal(F3)\n            ) {\n                pb_3_f[0].correction += `<br> ${texteEnCouleurEtGras(\n                    `Les trois fractions sont équivalentes, ${pb_3_f[0].prenoms[0]} parcours donc la même distance dans les trois disciplines.`\n                )}`;\n            } else {\n                pb_3_f[0].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${frac_meme_denom_rangees[0].texFraction}$, $${frac_meme_denom_rangees[1].texFraction}$, $${frac_meme_denom_rangees[2].texFraction}$.`;\n\n                pb_3_f[0].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${frac_rangees[0].texFraction}$, $${frac_rangees[1].texFraction}$, $${frac_rangees[2].texFraction}$.`;\n\n                pb_3_f[0].correction += `<br> ${texteEnCouleurEtGras(\n                    `C'est donc à ${pb_3_f[0].fractions[\n                    pb_3_f[0].fractions.indexOf(frac_rangees[2]) + 1\n                    ]\n                    } que ${pb_3_f[0].prenoms[0]} fait la plus grande distance.`\n                )}`;\n            }\n\n            //======================================================\n            //======== \t\tConclusion indice 1 Miss Math  \t========\n            //======================================================\n            pb_3_f[1].correction += `<br>${pb_3_f[1].fractions[1]} a donc remporté $${pb_3_f[1].fractions[0].texFraction}$, `;\n            pb_3_f[1].correction += `${pb_3_f[1].fractions[3]} a remporté $${pb_3_f[1].fractions[2].texFraction}$ et `;\n            pb_3_f[1].correction += `${pb_3_f[1].fractions[5]} $${pb_3_f[1].fractions[4].texFraction}$.`;\n\n            pb_3_f[1].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n            pb_3_f[1].correction += `${pb_3_f[1].fractions[1]} remporte donc $${frac_meme_denom[0].texFraction}$, `;\n            pb_3_f[1].correction += `${pb_3_f[1].fractions[3]} $${frac_meme_denom[1].texFraction}$ et `;\n            pb_3_f[1].correction += `${pb_3_f[1].fractions[5]} $${frac_meme_denom[2].texFraction}$.`;\n\n            if (\n                F1.egal(F2) &&\n                F1.egal(F3)\n            ) {\n                pb_3_f[1].correction += `<br> ${texteEnCouleurEtGras(\n                    `Les trois fractions sont équivalentes, les trois candidates ont donc remporté le même nombre de suffrages.`\n                )}`;\n            } else {\n                pb_3_f[1].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${frac_meme_denom_rangees[0].texFraction}$, $${frac_meme_denom_rangees[1].texFraction}$, $${frac_meme_denom_rangees[2].texFraction}$.`;\n\n\n                pb_3_f[1].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${frac_rangees[0].texFraction}$, $${frac_rangees[1].texFraction}$, $${frac_rangees[2].texFraction}$.`;\n\n                pb_3_f[1].correction += `<br> ${texteEnCouleurEtGras(\n                    `C'est donc ${pb_3_f[1].fractions[\n                    pb_3_f[1].fractions.indexOf(frac_rangees[2]) + 1\n                    ]\n                    } qui a été élue.`\n                )}`;\n            }\n\n            //======================================================\n            //======== \t\tAVEC 4 FRACTIONS\t\t\t  \t========\n            //======================================================\n            pb_4_f = [];\n            denoms_cool_4 = denoms_amis[randint(2, denoms_amis.length - 1)]\n\n            F1 = fraction(1, 3)\n            F2 = fraction(1, 3)\n            F3 = fraction(1, 3)\n            F4 = fraction(1, 3)\n            while (\n                F1.num == F2.num ||\n                F1.num == F3.num ||\n                F1.num == F4.num ||\n                F2.num == F3.num ||\n                F2.num == F4.num ||\n                F3.num == F4.num ||\n                F1.superieurlarge(fraction(1, 3)) ||\n                F2.superieurlarge(fraction(1, 3)) ||\n                F3.superieurlarge(fraction(1, 3))\n            ) {\n                n1 = randint(1, 5);\n                d1 = choice(denoms_cool_4);\n                n2 = randint(1, 11, n1); //on évite n1 pour pouvoir retrouver le texte de la plus grande fraction\n                d2 = choice(denoms_cool_4);\n                n3 = randint(1, 17, [n1, n2]); //on évite n1 et n2 pour pouvoir retrouver le texte de la plus grande fraction\n                d3 = choice(denoms_cool_4);\n                n4 = d1 * d2 * d3 - n1 * d2 * d3 - n2 * d1 * d3 - n3 * d1 * d2; //la somme des quatre vaut 1 !\n                d4 = d1 * d2 * d3;\n                F1 = fraction(n1, d1).simplifie()\n                F2 = fraction(n2, d2).simplifie()\n                F3 = fraction(n3, d3).simplifie()\n                F4 = fraction(n4, d4).simplifie()\n            }\n\n            //======================================================\n            //=========== \t\tindice 0 le mandala\t\t ===========\n            //======================================================\n            pb_4_f.push({\n                //\n                prenoms: [prenom()],\n                fractions: [F1,\"carmin\",F2,\"ocre jaune\",F3,\"turquoise\",F4,\"pourpre\"],\n                enonce: ``,\n                question: `Quelle est elle la couleur qui recouvre le plus de surface ?`,\n                correction: ``\n            });\n\n            //======================================================\n            //===========\t\tindice 1 le jardin\t \t ===========\n            //======================================================\n            pb_4_f.push({\n                // indice 1 le jardin\n                prenoms: [],\n                fractions: [F1,\"la culture des légumes\",F2,\"la culture des plantes aromatiques\",F3,\"une serre servant aux semis\",F4,\"la culture des fraisiers\"],\n                enonce: ``,\n                question: `Quelle est la culture qui occupe le plus de surface ?`,\n                correction: ``\n            });\n\n            //======================================================\n            //===========\tindice 2 le stade\t\t \t ===========\n            //======================================================\n            pb_4_f.push({\n                // indice 2 le stade\n                prenoms: [],\n                fractions: [F1,\"le pays organisateur\",F2,\"l'ensemble des supporters des deux équipes en jeu\",F3,\"les sponsors et officiels\",F4,\"les places en vente libre\"],\n                enonce: ``,\n                question: `Quelle est la catégorie la plus importante dans le stade ?`,\n                correction: ``\n            });\n\n            //======================================================\n            //===========\ténoncé indice 0 le mandala \t ===========\n            //======================================================\n            pb_4_f[0].enonce = `${pb_4_f[0].prenoms[0]} colorie un mandala selon les proportions suivantes :  $${pb_4_f[0].fractions[0].texFraction}$ en ${pb_4_f[0].fractions[1]}, `;\n            pb_4_f[0].enonce += `$${pb_4_f[0].fractions[2].texFraction}$ en  ${pb_4_f[0].fractions[3]}, `;\n            pb_4_f[0].enonce += `$${pb_4_f[0].fractions[4].texFraction}$ en  ${pb_4_f[0].fractions[5]} et `;\n            pb_4_f[0].enonce += `le reste en ${pb_4_f[0].fractions[7]}.`;\n\n            //======================================================\n            //===========\ténoncé indice 1 le jardin \t ===========\n            //======================================================\n            pb_4_f[1].enonce = `Un jardin est aménagé selon les proportions suivantes :  $${pb_4_f[1].fractions[0].texFraction}$ par ${pb_4_f[1].fractions[1]}, `;\n            pb_4_f[1].enonce += `$${pb_4_f[1].fractions[2].texFraction}$ par  ${pb_4_f[1].fractions[3]}, `;\n            pb_4_f[1].enonce += `$${pb_4_f[1].fractions[4].texFraction}$ par  ${pb_4_f[1].fractions[5]} et `;\n            pb_4_f[1].enonce += `le reste par ${pb_4_f[1].fractions[7]}.`;\n\n            //======================================================\n            //===========\ténoncé indice 2 le stade \t ===========\n            //======================================================\n            pb_4_f[2].enonce = `Pour chaque match, les places du stade sont mises en vente dans les proportions suivantes :  $${pb_4_f[2].fractions[0].texFraction}$ pour ${pb_4_f[2].fractions[1]}, `;\n            pb_4_f[2].enonce += `$${pb_4_f[2].fractions[2].texFraction}$ pour  ${pb_4_f[2].fractions[3]}, `;\n            pb_4_f[2].enonce += `$${pb_4_f[2].fractions[4].texFraction}$ pour  ${pb_4_f[2].fractions[5]} et `;\n            pb_4_f[2].enonce += `le reste pour ${pb_4_f[2].fractions[7]}.`;\n\n            //======================================================\n            //=========== \t\tCorrection Commune  \t ===========\n            //======================================================\n            listefrac2 = listeFractions(F1, F2, F3, F4)\n            frac_meme_denom = enleveElementBis(listefrac2.listeMemeDenominateur)\n            frac_meme_denom_rangees = enleveElementBis(listefrac2.listeRangeeMemeDenominateur)\n            frac_rangees = enleveElementBis(listefrac2.listeRangee)\n            denominateurCommun = listefrac2.listeMemeDenominateur[0].den\n            for (let i = 0; i < 3; i++) {\n                pb_4_f[\n                    i\n                ].correction = `Il s'agit d'un problème additif. Il va être necessaire de réduire les fractions au même dénominateur pour les additionner, les soustraire ou les comparer.<br>`;\n\n                if (listefrac2.liste[0].den == denominateurCommun && listefrac2.liste[1].den==denominateurCommun &&listefrac2.liste[2].den==denominateurCommun) {\n                    pb_4_f[i].correction += `Les fractions de l'énoncé ont déjà le même dénominateur.`;\n                }\n                else {\n                    pb_4_f[i].correction += `Réduisons les fractions de l'énoncé au même dénominateur :  `;\n                    pb_4_f[i].correction += `$${listefrac2.liste[0].texFraction}$ `\n                    if (listefrac2.liste[0].den!=denominateurCommun) pb_4_f[i].correction += `$= ${listefrac2.listeMemeDenominateur[0].texFraction}$ ; `;\n                    else pb_4_f[i].correction += ` ; `\n                    pb_4_f[i].correction += `$${listefrac2.liste[1].texFraction}$ `\n                    if (listefrac2.liste[1].den!=denominateurCommun) pb_4_f[i].correction += `$= ${listefrac2.listeMemeDenominateur[1].texFraction}$ et `;\n                    else pb_4_f[i].correction += ` et `\n                    pb_4_f[i].correction += `$${listefrac2.liste[2].texFraction}$ `\n                    if (listefrac2.liste[2].den!=denominateurCommun) pb_4_f[i].correction +=`$= ${listefrac2.listeMemeDenominateur[2].texFraction}$.<br>`;\n                    else pb_4_f[i].correction +=`.<br>`\n\n                }\n\n            }\n\n            //======================================================\n            //===========\tCorrection indice 0 le mandala==========\n            //======================================================\n            pb_4_f[0].correction += `Calculons alors la fraction du mandala recouverte en `;\n\n            //======================================================\n            //===========\tCorrection indice 1 le jardin===========\n            //======================================================\n            pb_4_f[1].correction += `Calculons d'abord la fraction du jardin occupée par `;\n\n            //======================================================\n            //===========\ténoncé indice 2 le stade \t ===========\n            //======================================================\n            pb_4_f[2].correction += `Calculons d'abord la fraction du stade occupée par `;\n\n            //======================================================\n            //=========== \t\tCorrection Commune  \t ===========\n            //======================================================\n            for (let i = 0; i < 3; i++) {\n                pb_4_f[i].correction += `${pb_4_f[i].fractions[5]} : <br>`;\n                pb_4_f[\n                    i\n                ].correction += `$1-${pb_4_f[i].fractions[0].texFraction}-${pb_4_f[i].fractions[2].texFraction}-${pb_4_f[i].fractions[4].texFraction} = `;\n                pb_4_f[\n                    i\n                ].correction += `\\\\dfrac{${denominateurCommun}}{${denominateurCommun}}-${frac_meme_denom[0].texFraction}-${frac_meme_denom[1].texFraction}-${frac_meme_denom[2].texFraction} = `;\n                pb_4_f[\n                    i\n                ].correction += `\\\\dfrac{${denominateurCommun}-${frac_meme_denom[0].num}-${frac_meme_denom[1].num}-${frac_meme_denom[2].num}}{${denominateurCommun}} = `;\n                pb_4_f[i].correction += `${frac_meme_denom[3].texFraction}`;\n                if (frac_meme_denom[3].den != pb_4_f[i].fractions[6].den) {\n                    pb_4_f[\n                        i\n                    ].correction += ` = ${pb_4_f[i].fractions[6].texFraction}$`;\n                } else {\n                    pb_4_f[i].correction += `$`;\n                }\n            }\n\n            //======================================================\n            //=========== Conclusion indice 0 le mandala ===========\n            //======================================================\n\n            pb_4_f[0].correction += `<br>Le mandala est donc colorié de la façon suivante : $${pb_4_f[0].fractions[0].texFraction}$ en ${pb_4_f[0].fractions[1]}, `;\n            pb_4_f[0].correction += `$${pb_4_f[0].fractions[2].texFraction}$ en ${pb_4_f[0].fractions[3]}, `;\n            pb_4_f[0].correction += `$${pb_4_f[0].fractions[4].texFraction}$ en ${pb_4_f[0].fractions[5]} et `;\n            pb_4_f[0].correction += `$${pb_4_f[0].fractions[6].texFraction}$ en ${pb_4_f[0].fractions[7]}.`;\n\n            pb_4_f[0].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n            pb_4_f[0].correction += `le mandala est donc colorié de la façon suivante : $${frac_meme_denom[0].texFraction}$ en ${pb_4_f[0].fractions[1]}, `;\n            pb_4_f[0].correction += `$${frac_meme_denom[1].texFraction}$ en ${pb_4_f[0].fractions[3]}, `;\n            pb_4_f[0].correction += `$${frac_meme_denom[2].texFraction}$ en ${pb_4_f[0].fractions[5]} et `;\n            pb_4_f[0].correction += `$${frac_meme_denom[3].texFraction}$ en ${pb_4_f[0].fractions[7]}.`;\n\n            if (\n                pb_4_f[0].fractions[0].egal(pb_4_f[0].fractions[2]) &&\n                pb_4_f[0].fractions[0].egal(pb_4_f[0].fractions[4]) &&\n                pb_4_f[0].fractions[0].egal(pb_4_f[0].fractions[6]) \n            ) {\n                pb_4_f[0].correction += `<br> ${texteEnCouleurEtGras(\n                    `Les quatre fractions sont équivalentes, ${pb_4_f[0].prenoms[0]} colorie donc la même surface avec les quatre couleurs.`\n                )}`;\n            } else {\n                pb_4_f[0].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${frac_meme_denom_rangees[0].texFraction}$, $${frac_meme_denom_rangees[1].texFraction}$, $${frac_meme_denom_rangees[2].texFraction}$, $${frac_meme_denom_rangees[3].texFraction}$.`;\n\n                pb_4_f[0].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${frac_rangees[0].texFraction}$, $${frac_rangees[1].texFraction}$, $${frac_rangees[2].texFraction}$, $${frac_rangees[3].texFraction}$.`;\n\n                pb_4_f[0].correction += `<br> ${texteEnCouleurEtGras(\n                    `C'est donc en ${pb_4_f[0].fractions[\n                    pb_4_f[0].fractions.indexOf(frac_rangees[3]) + 1\n                    ]\n                    } que le mandala est le plus recouvert.`\n                )}`;\n            }\n\n            //======================================================\n            //=========== Conclusion indice 1 le jardin\t ===========\n            //======================================================\n            pb_4_f[1].correction += `<br>Le jardin est donc occupé de la façon suivante : $${pb_4_f[1].fractions[0].texFraction}$ par ${pb_4_f[1].fractions[1]}, `;\n            pb_4_f[1].correction += `$${pb_4_f[1].fractions[2].texFraction}$ par ${pb_4_f[1].fractions[3]}, `;\n            pb_4_f[1].correction += `$${pb_4_f[1].fractions[4].texFraction}$ par ${pb_4_f[1].fractions[5]} et `;\n            pb_4_f[1].correction += `$${pb_4_f[1].fractions[6].texFraction}$ par ${pb_4_f[1].fractions[7]}.`;\n\n            pb_4_f[1].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n            pb_4_f[1].correction += `le jardin est donc occupé de la façon suivante : $${frac_meme_denom[0].texFraction}$ par ${pb_4_f[1].fractions[1]}, `;\n            pb_4_f[1].correction += `$${frac_meme_denom[1].texFraction}$ par ${pb_4_f[1].fractions[3]}, `;\n            pb_4_f[1].correction += `$${frac_meme_denom[2].texFraction}$ par ${pb_4_f[1].fractions[5]} et `;\n            pb_4_f[1].correction += `$${frac_meme_denom[3].texFraction}$ par ${pb_4_f[1].fractions[7]}.`;\n\n            //let frac_rangees,frac_meme_denom_rangees;\n            if (\n                pb_4_f[1].fractions[0].egal(pb_4_f[1].fractions[2]) &&\n                pb_4_f[1].fractions[0].egal(pb_4_f[1].fractions[4]) &&\n                pb_4_f[1].fractions[0].egal(pb_4_f[1].fractions[6]) \n            ) {\n                pb_4_f[1].correction += `<br> ${texteEnCouleurEtGras(\n                    `Les quatre fractions sont équivalentes, la même surface du jardin est donc occupée par les quatre cultures.`\n                )}`;\n            } else {\n                pb_4_f[1].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${frac_meme_denom_rangees[0].texFraction}$, $${frac_meme_denom_rangees[1].texFraction}$, $${frac_meme_denom_rangees[2].texFraction}$, $${frac_meme_denom_rangees[3].texFraction}$.`;\n                pb_4_f[1].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${frac_rangees[0].texFraction}$, $${frac_rangees[1].texFraction}$, $${frac_rangees[2].texFraction}$, $${frac_rangees[3].texFraction}$.`;\n\n                pb_4_f[1].correction += `<br> ${texteEnCouleurEtGras(\n                    `C'est donc par ${pb_4_f[1].fractions[pb_4_f[1].fractions.indexOf(frac_rangees[3])+1]}\n                     que le jardin est le plus occupé.`\n                )}`;\n            }\n\n            //======================================================\n            //=========== Conclusion indice 2 le stade\t ===========\n            //======================================================\n            pb_4_f[2].correction += `<br>Le stade est donc occupé de la façon suivante : $${pb_4_f[2].fractions[0].texFraction}$ pour ${pb_4_f[2].fractions[1]}, `;\n            pb_4_f[2].correction += `$${pb_4_f[2].fractions[2].texFraction}$ pour ${pb_4_f[2].fractions[3]}, `;\n            pb_4_f[2].correction += `$${pb_4_f[2].fractions[4].texFraction}$ pour ${pb_4_f[2].fractions[5]} et `;\n            pb_4_f[2].correction += `$${pb_4_f[2].fractions[6].texFraction}$ pour ${pb_4_f[2].fractions[7]}.`;\n\n            pb_4_f[2].correction += `<br> Avec les mêmes dénominateurs pour pouvoir comparer, `;\n            pb_4_f[2].correction += `le stade est donc occupé de la façon suivante : $${frac_meme_denom[0].texFraction}$ pour ${pb_4_f[2].fractions[1]}, `;\n            pb_4_f[2].correction += `$${frac_meme_denom[1].texFraction}$ pour ${pb_4_f[2].fractions[3]}, `;\n            pb_4_f[2].correction += `$${frac_meme_denom[2].texFraction}$ pour ${pb_4_f[2].fractions[5]} et `;\n            pb_4_f[2].correction += `$${frac_meme_denom[3].texFraction}$ pour ${pb_4_f[2].fractions[7]}.`;\n\n            //let frac_rangees,frac_meme_denom_rangees;\n            if (\n                pb_4_f[2].fractions[0].egal(pb_4_f[2].fractions[2]) &&\n                pb_4_f[2].fractions[0].egal(pb_4_f[2].fractions[4]) &&\n                pb_4_f[2].fractions[0].egal(pb_4_f[2].fractions[6]) \n            ) {\n                pb_4_f[2].correction += `<br> ${texteEnCouleurEtGras(\n                    `Les quatre fractions sont équivalentes, chaque catégorie a donc la même importance dans le stade.`\n                )}`;\n            } else {\n\n                pb_4_f[2].correction += `<br>Nous pouvons alors ranger ces fractions dans l'ordre croissant : $${frac_meme_denom_rangees[0].texFraction}$, $${frac_meme_denom_rangees[1].texFraction}$, $${frac_meme_denom_rangees[2].texFraction}$, $${frac_meme_denom_rangees[3].texFraction}$.`;\n                pb_4_f[2].correction += `<br>Enfin, nous pouvons ranger les fractions de l'énoncé et la fraction calculée dans l'ordre croissant : $${frac_rangees[0].texFraction}$, $${frac_rangees[1].texFraction}$, $${frac_rangees[2].texFraction}$, $${frac_rangees[3].texFraction}$.`;\n                pb_4_f[2].correction += `<br> ${texteEnCouleurEtGras(\n                    `C'est donc pour ${pb_4_f[2].fractions[\n                    pb_4_f[2].fractions.indexOf(frac_rangees[3]) + 1\n                    ]\n                    } que le nombre de places est le plus important.`\n                )}`;\n\n            }\n\n            switch (listeTypeDeQuestions[i]) {\n                case 1: // Triathlon des neiges --> VTT, ski de fond, course\n                    texte = `${pb_3_f[0].enonce} <br> ${pb_3_f[0].question}`;\n                    if (this.debug) {\n                        texte += `<br>`;\n                        texte += `<br> ${pb_3_f[0].correction}`;\n                        texteCorr = ``;\n                    } else {\n                        texteCorr = `${pb_3_f[0].correction}`;\n                    }\n                    break;\n                case 2: //Miss Math --> Noémie, Samia, Alexia\n                    texte = `${pb_3_f[1].enonce} <br> ${pb_3_f[1].question}`;\n                    if (this.debug) {\n                        texte += `<br>`;\n                        texte += `<br> ${pb_3_f[1].correction}`;\n                        texteCorr = ``;\n                    } else {\n                        texteCorr = `${pb_3_f[1].correction}`;\n                    }\n                    break;\n                case 3: // Mandala --> carmin, ocre jaune, turquoise, pourpre\n                    texte = `${pb_4_f[0].enonce} <br> ${pb_4_f[0].question}`;\n                    if (this.debug) {\n                        texte += `<br>`;\n                        texte += `<br> ${pb_4_f[0].correction}`;\n                        texteCorr = ``;\n                    } else {\n                        texteCorr = `${pb_4_f[0].correction}`;\n                    }\n                    break;\n                case 4: // Jardin --> légumes, plantes aromatiques, semis, fraisiers\n                    texte = `${pb_4_f[1].enonce} <br> ${pb_4_f[1].question}`;\n                    if (this.debug) {\n                        texte += `<br>`;\n                        texte += `<br> ${pb_4_f[1].correction}`;\n                        texteCorr = ``;\n                    } else {\n                        texteCorr = `${pb_4_f[1].correction}`;\n                    }\n                    break;\n                case 5: // Stade --> pays organisatuers, supporters, sponsors, vente libre\n                    texte = `${pb_4_f[2].enonce} <br> ${pb_4_f[2].question}`;\n                    if (this.debug) {\n                        texte += `<br>`;\n                        texte += `<br> ${pb_4_f[2].correction}`;\n                        texteCorr = ``;\n                    } else {\n                        texteCorr = `${pb_4_f[2].correction}`;\n                    }\n                    break;\n            }\n            if (this.listeQuestions.indexOf(texte) == -1) {\n                // Si la question n'a jamais été posée, on en créé une autre\n                this.listeQuestions.push(texte);\n                this.listeCorrections.push(texteCorr);\n                i++;\n            }\n            cpt++;\n        }\n        listeQuestionsToContenu(this);\n    };\n    //this.besoinFormulaireNumerique = ['Niveau de difficulté',4,\"1 : nombre enier positif\\n2 : nombre décimal positif\\n3 : nombre enier positif inférieur à un\\n4 : Mélange\"];\n}\n\n"],"sourceRoot":""}