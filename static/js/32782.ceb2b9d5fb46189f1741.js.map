{"version":3,"file":"js/32782.ceb2b9d5fb46189f1741.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N10-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, randint, choice, combinaisonListes, texNombrec, calcul, miseEnEvidence } from '../../modules/outils.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Décomposer un nombre décimal (nombre de..., chiffre des..., partie entière, partie décimale)'\nexport const amcReady = true\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\nexport const amcType = 'AMCNum'\n\n/**\n * Des questions sur le nombre ou le chiffre de centaines, de dizaines, de dixièmes, de centièmes...\n * @author Rémi Angot\n * Ajout de l'interactivité, de l'export AMC et du paramétrage par Jean-Claude Lhote (15/10/2021)\n * Référence 6N10-2\n * Relecture : Décembre 2021 par EE\n */\nexport default function DecompositionNombreDecimal () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.consigne = 'Compléter les phrases suivantes.'\n  this.nbQuestions = 5\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.sup = 7\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    let typesDeQuestionsDisponibles\n    switch (parseInt(this.sup)) {\n      case 1:\n        typesDeQuestionsDisponibles = [3, 4, 5, 6, 7, 8]\n        break\n      case 2:\n        typesDeQuestionsDisponibles = [9, 10, 11, 12]\n        break\n      case 3:\n        typesDeQuestionsDisponibles = [1, 2]\n        break\n      case 4:\n        typesDeQuestionsDisponibles = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n        break\n      case 5:\n        typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7, 8]\n        break\n      case 6:\n        typesDeQuestionsDisponibles = [1, 2, 9, 10, 11, 12]\n        break\n      default:\n        typesDeQuestionsDisponibles = [\n          1,\n          2,\n          choice([3, 4, 5]),\n          choice([6, 7, 8]),\n          choice([9, 10]),\n          choice([11, 12])\n        ] // sans chevauchement ou avec chevauchement\n        break\n    }\n    const listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n    // calcul ne semble pas marcher avec 7 chiffres significatifs\n    this.consigne = 'Compléter les phrases suivantes.'\n    for (\n      let i = 0, m, c, d, u, di, ci, mi, n, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      if (i % typesDeQuestionsDisponibles.length === 0) {\n        m = randint(1, 9) // le nombre sera le même tant qu'on peut poser des questions dessus, s'il y a trop de questions, on choisit un autre nombre\n        c = randint(0, 9, [m])\n        d = randint(0, 9, [m, c])\n        u = randint(0, 9, [m, c, d])\n        di = randint(0, 9, [m, c, d, u])\n        ci = randint(0, 9, [m, c, d, u, di])\n        mi = randint(1, 9, [m, c, d, u, di, ci])\n        n =\n          m.toString() +\n          '~' +\n          c.toString() +\n          d.toString() +\n          u.toString() +\n          ',' +\n          di.toString() +\n          ci.toString() +\n          mi\n      }\n      switch (listeTypeDeQuestions[i]) {\n        case 1:\n          texte = `La partie entière du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(texNombrec(m * 1000 + c * 100 + d * 10 + u))}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, m * 1000 + c * 100 + d * 10 + u)\n          this.autoCorrection[i].reponse.param.digits = 5\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n        case 2:\n          texte = `La partie décimale du nombre $${n}$ est : `\n          texteCorr =\n            texte + `$${miseEnEvidence(texNombrec(di / 10 + ci / 100 + mi / 1000))}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, calcul(di / 10 + ci / 100 + mi / 1000))\n          this.autoCorrection[i].reponse.param.digits = 6\n          this.autoCorrection[i].reponse.param.decimals = 4\n          break\n        case 3:\n          texte = `Le chiffre des dizaines du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(d)}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, d)\n          this.autoCorrection[i].reponse.param.digits = 1\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n        case 4:\n          texte = `Le chiffre des centaines du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(c)}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, c)\n          this.autoCorrection[i].reponse.param.digits = 1\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n        case 5:\n          texte = `Le chiffre des miliers du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(m)}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, m)\n          this.autoCorrection[i].reponse.param.digits = 1\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n        case 6:\n          texte = `Le chiffre des dixièmes du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(di)}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, di)\n          this.autoCorrection[i].reponse.param.digits = 1\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n        case 7:\n          texte = `Le chiffre des centièmes du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(ci)}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, ci)\n          this.autoCorrection[i].reponse.param.digits = 1\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n        case 8:\n          texte = `Le chiffre des millièmes du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(mi)}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, mi)\n          this.autoCorrection[i].reponse.param.digits = 1\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n        case 9:\n          texte = `Le nombre de dizaines du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(texNombrec(d + c * 10 + m * 100))}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, calcul(d + c * 10 + m * 100))\n          this.autoCorrection[i].reponse.param.digits = 6\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n        case 10:\n          texte = `Le nombre de centaines du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(texNombrec(c + m * 10))}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, calcul(c + m * 10))\n          this.autoCorrection[i].reponse.param.digits = 6\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n        case 11:\n          texte = `Le nombre de dixièmes du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(texNombrec(di + u * 10 + d * 100 + c * 1000 + m * 10000))}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, calcul(di + u * 10 + d * 100 + c * 1000 + m * 10000))\n          this.autoCorrection[i].reponse.param.digits = 6\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n        case 12:\n          texte = `Le nombre de centièmes du nombre $${n}$ est : `\n          texteCorr = texte + `$${miseEnEvidence(texNombrec(ci + di * 10 + u * 100 + d * 1000 + c * 10000 + m * 100000))}$`\n          texte += ajouteChampTexteMathLive(this, i, 'largeur25 inline')\n          setReponse(this, i, ci + di * 10 + u * 100 + d * 1000 + c * 10000 + m * 100000)\n          this.autoCorrection[i].reponse.param.digits = 6\n          this.autoCorrection[i].reponse.param.decimals = 0\n          break\n      }\n\n      texteCorr += '.'\n      if (!this.interactif) texte += '\\\\ldots'\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Choix de questions', 7, \"1 : 'Chiffre des'\\n2 : 'Nombre de'\\n3 : Partie entière ou partie décimale\\n4 : 'Chiffre des' ou 'nombre de'\\n5 : 'Chiffre des' ou partie entière ou partie décimale\\n6 : 'Nombre de' ou partie entière ou partie décimale\\n7 : Mélange\"]\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","interactifReady","interactifType","amcType","DecompositionNombreDecimal","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","typesDeQuestionsDisponibles","listeQuestions","listeCorrections","autoCorrection","parseInt","choice","listeTypeDeQuestions","combinaisonListes","m","c","d","u","di","ci","mi","n","texte","texteCorr","i","cpt","length","randint","toString","miseEnEvidence","texNombrec","ajouteChampTexteMathLive","setReponse","reponse","param","digits","decimals","calcul","interactif","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined"],"sourceRoot":""}