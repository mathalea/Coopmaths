{"version":3,"sources":["webpack://mathalea/./src/js/exercices/3e/3G32-5.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","CalculsTrigo","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","objetsEnonce","objetsCorrection","paramsEnonce","paramsCorrection","texte","texteCorr","AD","randint","AE","AC","A","point","C","D","dDE","droiteVerticaleParPoint","cAE","cercle","E","pointIntersectionLC","positionLabel","p","polygone","dAE","droite","B","projectionOrtho","codage1","codageAngleDroit","codage2","labels","labelPoint","nomDesSommets","creerNomDePolygone","nom","choice","x","sBC","segment","xmin","ymin","xmax","ymax","y","pixelsParCm","scale","mainlevee","mathalea2d","texNombre","arrondi","angle","longueur","texFractionReduite","push","listeQuestionsToContenu","consigne","consigneCorrection","introduction","contenu","contenuCorrection","spacing","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1510.3e0c32e4b121b7699e74.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { texFractionReduite, choice, texNombre, calcul,listeQuestionsToContenu, combinaisonListes, randint, arrondi, creerNomDePolygone } from '../../modules/outils.js'\nimport { mathalea2d, angle, point, droite, droiteVerticaleParPoint, cercle, pointIntersectionLC, polygone, projectionOrtho, segment, codageAngleDroit, labelPoint, longueur } from '../../modules/2d.js'\n\n\nexport const titre = 'Problème trigonométrique - Triangle rectangle inscrit dans un triangle rectangle'\n\n/**\n * Calculer un angle pour pouvoir ensuite calculer une longueur avec 2 triangles rectangles imbriqués\n * @author Rémi Angot\n * Référence 3G32-5\n * 2021-02-14\n*/\nexport default function CalculsTrigo() {\n    Exercice.call(this)\n    this.titre = titre;\n    this.nbQuestions = 1;\n    this.nbQuestionsModifiable = false;\n    this.nbCols = 1;\n    this.nbColsCorr = 1;\n    this.spacingCorr = 3;\n\n    this.nouvelleVersion = function () {\n\n        this.listeQuestions = [] // tableau contenant la liste des questions \n        this.listeCorrections = []\n\n        let objetsEnonce = [], objetsCorrection = [], paramsEnonce = {}, paramsCorrection = {}, texte = '', texteCorr = '';\n        let AD = randint(5,9)\n        let AE = randint(AD+1,AD+4)\n        let AC = randint(3,AD-1)\n        let A = point(0,0,'A','below left')\n        let C = point(AC,0,'C','below')\n        let D = point(AD,0,'D','below right')\n        let dDE = droiteVerticaleParPoint(D)\n        let cAE = cercle(A,AE)\n        let E = pointIntersectionLC(dDE,cAE,'E')\n        E.positionLabel = 'right'\n        let p = polygone(A,D,E)\n        let dAE = droite(A,E)\n        let B = projectionOrtho(C,dAE,'B','above left')\n        let codage1 = codageAngleDroit(A,B,C)\n        let codage2 = codageAngleDroit(A,D,E)\n        let labels = labelPoint(A,B,C,D,E)\n        let nomDesSommets = creerNomDePolygone(5)\n        A.nom = nomDesSommets[0]\n        B.nom = nomDesSommets[1]\n        C.nom = nomDesSommets[2]\n        D.nom = nomDesSommets[3]\n        E.nom = nomDesSommets[4]\n        let mirroir = choice([true,false])\n        if (mirroir){\n            B.x *=-1\n            C.x *=-1\n            D.x *=-1\n            E.x *=-1\n            A.positionLabel = 'below' \n            B.positionLabel = 'above'\n            C.positionLabel = 'below'\n            D.positionLabel = 'below'\n            E.positionLabel = 'above'\n        }\n        let sBC = segment(B,C)\n\n        objetsEnonce = [p, sBC, codage1, codage2, labels]\n        objetsCorrection = [p, sBC, codage1, codage2, labels]\n        paramsEnonce = { xmin: -10, ymin: -1, xmax:10, ymax: E.y+1.5 , pixelsParCm: 20, scale: 1, mainlevee: false }\n        paramsCorrection = { xmin: -1, ymin: -1, xmax:D.x+1.5, ymax: E.y+1.5 , pixelsParCm: 20, scale: 1, mainlevee: false }\n        texte += mathalea2d(paramsEnonce, objetsEnonce)\n        texte += `<br><br> $${A.nom+E.nom} = ${AE}~\\\\text{cm}$, $${A.nom+D.nom} = ${AD}~\\\\text{cm}$ et $${A.nom+C.nom} = ${AC}~\\\\text{cm}$.`\n        texte += `<br> Calculer la longueur $${A.nom+B.nom}$ et donner une valeur approchée au millimètre près.`\n        //texteCorr += mathalea2d(paramsCorrection, objetsCorrection)\n        texteCorr += `Dans le triangle $${A.nom+D.nom+E.nom}$ rectangle en $${D.nom}$ : `\n        texteCorr += `<br>$\\\\cos(\\\\widehat{${D.nom+A.nom+E.nom}})=\\\\dfrac{${A.nom+D.nom}}{${A.nom+E.nom}}\\\\quad$ soit $\\\\quad\\\\cos(\\\\widehat{${D.nom+A.nom+E.nom}})=\\\\dfrac{${AD}}{${AE}}$,`\n        texteCorr += `<br> d'où $\\\\widehat{${D.nom+A.nom+E.nom}}=\\\\text{arccos}\\\\left(\\\\dfrac{${AD}}{${AE}}\\\\right)\\\\approx${texNombre(arrondi(angle(D,A,E),1))}\\\\degree$.`\n\n\n        texteCorr += `<br><br>Dans le triangle $${A.nom+B.nom+C.nom}$ rectangle en $${B.nom}$ : `\n        texteCorr += `<br>$\\\\cos(\\\\widehat{${B.nom+A.nom+C.nom}})=\\\\dfrac{${A.nom+B.nom}}{${A.nom+C.nom}}\\\\quad$ soit $\\\\quad\\\\cos(${texNombre(arrondi(angle(D,A,E),1))}\\\\degree)\\\\approx\\\\dfrac{${A.nom+B.nom}}{${AC}}$,`\n        texteCorr += `<br> d'où $${A.nom+B.nom} \\\\approx ${AC} \\\\times \\\\cos(${texNombre(arrondi(angle(D,A,E),1))}\\\\degree)\\\\approx${texNombre(arrondi(longueur(A,B),1))}~\\\\text{cm}$.`\n        \n        texteCorr += `<br><br>On pouvait aussi écrire : $${A.nom+B.nom} = ${AC} \\\\times \\\\cos\\\\left(\\\\text{arccos}\\\\left(\\\\dfrac{${AD}}{${AE}}\\\\right)\\\\right)=${AC}\\\\times\\\\dfrac{${AD}}{${AE}}=${texFractionReduite(AC*AD,AE)}$.`\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        listeQuestionsToContenu(this); // On envoie l'exercice à la fonction de mise en page\n    };\n\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}