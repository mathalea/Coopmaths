{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C11.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","interactifType","PrioritesEtRelatifs","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","nouvelleVersion","listeQuestionsDisponibles","parseInt","listeQuestions","listeCorrections","range1","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","a","b","c","d","i","cpt","randint","choice","ecritureAlgebrique","ecritureParentheseSiNegatif","miseEnEvidence","setReponse","listeDesDiviseurs","length","liste","pop","enleveElement","somme","ajouteChampTexteMathLive","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/81200.ba24d084a2ef5d2e45e5.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { setReponse, ajouteChampTexteMathLive } from '../../modules/gestionInteractif.js'\nimport { listeQuestionsToContenu, randint, enleveElement, choice, range1, combinaisonListes, ecritureAlgebrique, ecritureParentheseSiNegatif, miseEnEvidence, listeDesDiviseurs } from '../../modules/outils.js'\nexport const titre = 'Calculs utilisant les priorités opératoires'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Plusieurs type de calcul avec des entiers.\n *\n * Sans parenthèses :\n * * a+b*c\n * * a+b÷c\n * * a/b*c\n * * a*b÷c\n * * a*b+c\n * * a-b+c\n * * a+b+c*d\n * * a*b+c*d\n * * a*b*c+d\n * * a*b-c÷d\n * * a*b+c÷d\n *\n * Avec parenthèses :\n * * a*(b-c)\n * * (a-b)*c\n * * (a-b)÷c\n * * a÷(b+c)\n * * (a-b)÷c\n * * a*(b-c)*d\n * * a*b*(c-d)\n * * a*(b-c*d)\n * * (a+b*c)÷d\n * * a*(b-c*d)\n * * a*b÷(c+d)\n * * a*(b÷c+d)\n * * a-(b+c)\n * * (a+b+c)*d\n * @author Rémi Angot\n * 4C11\n */\nexport default function PrioritesEtRelatifs () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.consigne = 'Calculer'\n  this.nbQuestions = 5\n  this.nbCols = 2\n  this.nbColsCorr = 1\n  this.sup = 3\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    let listeQuestionsDisponibles\n    if (this.sup === 1) {\n      listeQuestionsDisponibles = range1(11)\n    } else if (this.sup === 2) {\n      listeQuestionsDisponibles = range1(20, range1(11))\n    } else {\n      listeQuestionsDisponibles = range1(20)\n    }\n    const listeTypeDeQuestions = combinaisonListes(\n      listeQuestionsDisponibles,\n      this.nbQuestions\n    )\n    for (\n      let i = 0, texte, texteCorr, a, b, c, d, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n\n    ) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // a+b*c\n          a = randint(2, 11) * choice([-1, 1])\n          b = randint(2, 11) * choice([-1, 1])\n          c = randint(2, 11) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0) {\n            a = randint(2, 11) * choice([-1, 1])\n            b = randint(2, 11) * choice([-1, 1])\n            c = randint(2, 11) * choice([-1, 1])\n          }\n          texte = `$${a}${ecritureAlgebrique(b)}\\\\times${ecritureParentheseSiNegatif(c)}$`\n          texteCorr = `$${a}${miseEnEvidence('~' + ecritureAlgebrique(b) + '\\\\times' + ecritureParentheseSiNegatif(c))}=${a}${ecritureAlgebrique(b * c)\n            }=${a + b * c}$`\n          setReponse(this, i, a + b * c)\n          break\n        case 2: // a+b/c\n          a = randint(2, 11) * choice([-1, 1])\n          c = randint(2, 11) * choice([-1, 1])\n          b = c * randint(2, 11) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0) {\n            a = randint(2, 11) * choice([-1, 1])\n            c = randint(2, 11) * choice([-1, 1])\n            b = c * randint(2, 11) * choice([-1, 1])\n          }\n          texte = `$${a}${ecritureAlgebrique(b)}\\\\div${ecritureParentheseSiNegatif(c)}$`\n          texteCorr = `$${a}${miseEnEvidence('~' + ecritureAlgebrique(b) + '\\\\div' + ecritureParentheseSiNegatif(c))}=${a}${ecritureAlgebrique(b / c)\n            }=${a + b / c}$`\n          setReponse(this, i, a + b / c)\n          break\n        case 3: // a/b*c\n          b = randint(2, 11) * choice([-1, 1])\n          c = randint(2, 11) * choice([-1, 1])\n          a = b * randint(2, 11) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0) {\n            b = randint(2, 11) * choice([-1, 1])\n            c = randint(2, 11) * choice([-1, 1])\n            a = b * randint(2, 11) * choice([-1, 1])\n          }\n          texte = `$${a}\\\\div${ecritureParentheseSiNegatif(b)}\\\\times${ecritureParentheseSiNegatif(c)}$`\n          texteCorr = `$${miseEnEvidence(a + '\\\\div' + ecritureParentheseSiNegatif(b))}\\\\times${ecritureParentheseSiNegatif(c)}=${a / b\n            }\\\\times${ecritureParentheseSiNegatif(c)}=${(a / b) * c}$`\n          setReponse(this, i, (a / b) * c)\n          break\n        case 4: // a*b/c\n          if (choice([true, false])) {\n            // a est un multiple de c\n            c = randint(2, 6) * choice([-1, 1])\n            a = c * randint(2, 5) * choice([-1, 1])\n            b = randint(2, 6) * choice([-1, 1])\n            while (a > 0 && b > 0 && c > 0) {\n              c = randint(2, 6) * choice([-1, 1])\n              a = c * randint(2, 5) * choice([-1, 1])\n              b = randint(2, 6) * choice([-1, 1])\n            }\n          } else {\n            // b est un multiple de c\n            c = randint(2, 6) * choice([-1, 1])\n            b = c * randint(2, 5) * choice([-1, 1])\n            a = randint(2, 6) * choice([-1, 1])\n            while (a > 0 && b > 0 && c > 0) {\n              c = randint(2, 6) * choice([-1, 1])\n              b = c * randint(2, 5) * choice([-1, 1])\n              a = randint(2, 6) * choice([-1, 1])\n            }\n          }\n          texte = `$${a}\\\\times${ecritureParentheseSiNegatif(b)}\\\\div${ecritureParentheseSiNegatif(c)}$`\n          texteCorr = `$${miseEnEvidence(a + '\\\\times' + ecritureParentheseSiNegatif(b))}\\\\div${ecritureParentheseSiNegatif(c)}=${a * b\n            }\\\\div${ecritureParentheseSiNegatif(c)}=${(a * b) / c}$`\n          setReponse(this, i, (a * b) / c)\n          break\n        case 5: // a*b+c\n          a = randint(2, 11) * choice([-1, 1])\n          b = randint(2, 11) * choice([-1, 1])\n          c = randint(2, 11) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0) {\n            a = randint(2, 11) * choice([-1, 1])\n            b = randint(2, 11) * choice([-1, 1])\n            c = randint(2, 11) * choice([-1, 1])\n          }\n          texte = `$${a}\\\\times${ecritureParentheseSiNegatif(b)}${ecritureAlgebrique(c)}$`\n          texteCorr = `$${miseEnEvidence(a + '\\\\times' + ecritureParentheseSiNegatif(b))}${ecritureAlgebrique(c)}=${a * b\n            }${ecritureAlgebrique(c)}=${a * b + c}$`\n          setReponse(this, i, a * b + c)\n          break\n        case 6: // a-b+c\n          a = randint(2, 11) * choice([-1, 1])\n          b = randint(2, 11) * choice([-1, 1])\n          c = randint(2, 11) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0) {\n            a = randint(2, 11) * choice([-1, 1])\n            b = randint(2, 11) * choice([-1, 1])\n            c = randint(2, 11) * choice([-1, 1])\n          }\n          texte = `$${a}-(${ecritureAlgebrique(b)})${ecritureAlgebrique(c)}$`\n          texteCorr = `$${a}${miseEnEvidence(ecritureAlgebrique(-b))}${ecritureAlgebrique(c)}=${a - b}${ecritureAlgebrique(c)}=${a - b + c\n            }$`\n          setReponse(this, i, a - b + c)\n          break\n        case 7: // a+b+c*d\n          a = randint(2, 20) * choice([-1, 1])\n          b = randint(2, 20) * choice([-1, 1])\n          c = randint(2, 11) * choice([-1, 1])\n          d = randint(2, 11) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0 && d > 0) {\n            a = randint(2, 20) * choice([-1, 1])\n            b = randint(2, 20) * choice([-1, 1])\n            c = randint(2, 11) * choice([-1, 1])\n            d = randint(2, 11) * choice([-1, 1])\n          }\n          texte = `$${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c)}\\\\times${ecritureParentheseSiNegatif(d)}$`\n          texteCorr = `$${a}${ecritureAlgebrique(b)}${miseEnEvidence(\n            ecritureAlgebrique(c) + '\\\\times' + ecritureParentheseSiNegatif(d)\n          )}=${a}${ecritureAlgebrique(b)}${ecritureAlgebrique(c * d)}=${a + b + c * d}$`\n          setReponse(this, i, a + b + c * d)\n          break\n        case 8: // a*b+c*d\n          a = randint(2, 11) * choice([-1, 1])\n          b = randint(2, 11) * choice([-1, 1])\n          c = randint(2, 11) * choice([-1, 1])\n          d = randint(2, 11) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0 && d > 0) {\n            a = randint(2, 20) * choice([-1, 1])\n            b = randint(2, 20) * choice([-1, 1])\n            c = randint(2, 11) * choice([-1, 1])\n            d = randint(2, 11) * choice([-1, 1])\n          }\n          texte = `$${a}\\\\times${ecritureParentheseSiNegatif(b)}${ecritureAlgebrique(c)}\\\\times${ecritureParentheseSiNegatif(d)}$`\n          texteCorr = `$${a + miseEnEvidence('\\\\times') + ecritureParentheseSiNegatif(b)\n            }${ecritureAlgebrique(c) + miseEnEvidence('\\\\times') + ecritureParentheseSiNegatif(d)}=${a * b}${ecritureAlgebrique(c * d)}=${a * b + c * d\n            }$`\n          setReponse(this, i, a * b + c * d)\n          break\n        case 9: // a*b*c+d\n          a = randint(2, 5) * choice([-1, 1])\n          b = randint(2, 5) * choice([-1, 1])\n          c = randint(2, 5) * choice([-1, 1])\n          d = randint(2, 11) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0 && d > 0) {\n            a = randint(2, 5) * choice([-1, 1])\n            b = randint(2, 5) * choice([-1, 1])\n            c = randint(2, 5) * choice([-1, 1])\n            d = randint(2, 11) * choice([-1, 1])\n          }\n          texte = `$${a}\\\\times${ecritureParentheseSiNegatif(b)}\\\\times${ecritureParentheseSiNegatif(c)}${ecritureAlgebrique(d)}$`\n          texteCorr = `$${miseEnEvidence(\n            a + '\\\\times' + ecritureParentheseSiNegatif(b)\n          )}\\\\times${ecritureParentheseSiNegatif(c)}${ecritureAlgebrique(d)}=${miseEnEvidence(a * b + '\\\\times' + ecritureParentheseSiNegatif(c))}${ecritureAlgebrique(d)}\n          =${a * b * c}${ecritureAlgebrique(d)}\n          =${a * b * c + d}$`\n          setReponse(this, i, a * b * c + d)\n          break\n        case 10:\n          a = randint(2, 11) * choice([-1, 1])\n          b = randint(2, 11) * choice([-1, 1])\n          d = randint(2, 11) * choice([-1, 1])\n          c = d * randint(2, 8) * choice([-1, 1])\n          texte = `$${a}\\\\times${ecritureParentheseSiNegatif(b)}${ecritureAlgebrique(c)}\\\\div${ecritureParentheseSiNegatif(d)}$`\n          texteCorr = `$${a + miseEnEvidence('\\\\times') + ecritureParentheseSiNegatif(b) +\n            ecritureAlgebrique(c) + miseEnEvidence('\\\\div') + ecritureParentheseSiNegatif(d)}=${a * b}${ecritureAlgebrique(c / d)}=${a * b + c / d\n            }$`\n          setReponse(this, i, a * b + c / d)\n          break\n        case 11: // a*(b+c)\n          a = randint(2, 11) * choice([-1, 1])\n          b = randint(1, 11) * choice([-1, 1])\n          c = randint(1, 11) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0) {\n            a = randint(2, 11) * choice([-1, 1])\n            b = randint(1, 11) * choice([-1, 1])\n            c = randint(1, 11) * choice([-1, 1])\n          }\n          texte = `$${a}\\\\times(${b}${ecritureAlgebrique(c)})$`\n          texteCorr = `$${a}\\\\times(${miseEnEvidence(b + ecritureAlgebrique(c))})=${a}\\\\times${ecritureParentheseSiNegatif(b + c)}=${a * (b + c)}$`\n          setReponse(this, i, a * (b + c))\n          break\n        case 12: // (a+b)*c\n          a = randint(1, 11) * choice([-1, 1])\n          b = randint(1, 11) * choice([-1, 1])\n          c = randint(2, 11) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0) {\n            a = randint(1, 11) * choice([-1, 1])\n            b = randint(1, 11) * choice([-1, 1])\n            c = randint(2, 11) * choice([-1, 1])\n          }\n          texte = `$(${a}${ecritureAlgebrique(b)})\\\\times${ecritureParentheseSiNegatif(c)}$`\n          texteCorr = `$(${miseEnEvidence(a + ecritureAlgebrique(b))})\\\\times${ecritureParentheseSiNegatif(c)}=${a + b}\\\\times${ecritureParentheseSiNegatif(c)}=${(a + b) * c}$`\n          setReponse(this, i, (a + b) * c)\n          break\n        case 13: // (a+b)/c\n          c = randint(2, 11) * choice([-1, 1])\n          b = randint(11, 39) * choice([-1, 1])\n          a = c * randint(2, 9) * [choice([-1, 1])] - b\n          while (a > 0 && b > 0 && c > 0) {\n            c = randint(2, 11) * choice([-1, 1])\n            b = randint(11, 39) * choice([-1, 1])\n            a = c * randint(2, 9) * [choice([-1, 1])] - b\n          }\n          texte = `$(${a}${ecritureAlgebrique(b)})\\\\div${ecritureParentheseSiNegatif(c)}$`\n          texteCorr = `$(${miseEnEvidence(a + ecritureAlgebrique(b))})\\\\div${ecritureParentheseSiNegatif(c)}=${a + b\n            }\\\\div${ecritureParentheseSiNegatif(c)}=${(a + b) / c}$`\n          setReponse(this, i, (a + b) / c)\n          break\n        case 14: // a/(b+c)\n          b = randint(-5, 5, [-1, 0, 1])\n          c = randint(-6, 6, [-1, 0, 1, -b])\n          a = (b + c) * randint(2, 9) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0) {\n            b = randint(-5, 5, [-1, 0, 1])\n            c = randint(-6, 6, [-1, 0, 1, -b])\n            a = (b + c) * randint(2, 9) * choice([-1, 1])\n          }\n          texte = `$${a}\\\\div(${b}${ecritureAlgebrique(c)})$`\n          texteCorr = `$${a}\\\\div(${miseEnEvidence(b + ecritureAlgebrique(c))})=${a}\\\\div${ecritureParentheseSiNegatif(b + c)}=${a / (b + c)}$`\n          setReponse(this, i, a / (b + c))\n          break\n        case 15: // a(b+c)*d\n          c = randint(11, 39) * choice([-1, 1])\n          b = randint(2, 5) * choice([-1, 1]) - c\n          a = randint(2, 5) * choice([-1, 1])\n          d = randint(2, 5) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0 && d > 0) {\n            c = randint(11, 39) * choice([-1, 1])\n            b = (randint(2, 5) - c) * choice([-1, 1])\n            a = randint(2, 5) * choice([-1, 1])\n            d = randint(2, 5) * choice([-1, 1])\n          }\n          texte = `$${a}\\\\times(${b}${ecritureAlgebrique(c)})\\\\times${ecritureParentheseSiNegatif(d)}$`\n          texteCorr = `$${a}\\\\times(${miseEnEvidence(b + ecritureAlgebrique(c))})\\\\times${ecritureParentheseSiNegatif(d)}=${a}\\\\times${ecritureParentheseSiNegatif(b + c)}\\\\times${ecritureParentheseSiNegatif(d)}=${a * (b + c) * d}$`\n          setReponse(this, i, a * (b + c) * d)\n          break\n        case 16: // a*b*(c+d)\n          d = randint(11, 39) * choice([-1, 1])\n          c = randint(2, 5) * choice([-1, 1]) - d\n          a = randint(2, 5) * choice([-1, 1])\n          b = randint(2, 5) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0 && d > 0) {\n            d = randint(11, 39) * choice([-1, 1])\n            c = randint(2, 5) * choice([-1, 1]) - d\n            a = randint(2, 5) * choice([-1, 1])\n            b = randint(2, 5) * choice([-1, 1])\n          }\n          texte = `$${a}\\\\times${ecritureParentheseSiNegatif(b)}\\\\times(${c}${ecritureAlgebrique(d)})$`\n          texteCorr = `$${a}\\\\times${ecritureParentheseSiNegatif(b)}\\\\times(${miseEnEvidence(\n            c + ecritureAlgebrique(d))})=${a}\\\\times${ecritureParentheseSiNegatif(b)}\\\\times${ecritureParentheseSiNegatif(c + d)}=${a * b * (c + d)}$`\n          setReponse(this, i, a * b * (c + d))\n          break\n        case 17: // a*(b/c+d)\n          a = randint(2, 11) * choice([-1, 1])\n          c = randint(2, 11) * choice([-1, 1])\n          b = c * randint(2, 5) * choice([-1, 1])\n          d = randint(2, 6) * choice([-1, 1])\n          texte = `$${a}\\\\times(${b}\\\\div${ecritureParentheseSiNegatif(c)}${ecritureAlgebrique(d)})$`\n          texteCorr = `$${a}\\\\times(${miseEnEvidence(\n            b + '\\\\div' + ecritureParentheseSiNegatif(c)\n          )}${ecritureAlgebrique(d)})=${a}\\\\times(${miseEnEvidence(\n            b / c + ecritureAlgebrique(d)\n          )})=${a}\\\\times${ecritureParentheseSiNegatif(b / c + d)}=${a * (b / c + d)}$`\n          setReponse(this, i, a * (b / c + d))\n          break\n        case 18: // a*b/(c+d)\n          a = randint(2, 11)\n          b = randint(2, 11)\n          while (listeDesDiviseurs(a * b).length < 5) {\n            a = randint(2, 11)\n            b = randint(2, 11)\n          }\n          const liste = listeDesDiviseurs(a * b)\n          if (liste.length > 2) {\n            liste.pop() // on supprime le plus grand diviseur qui est le produit\n            enleveElement(liste, a) // on supprime a\n            enleveElement(liste, b) // on supprime b\n          }\n          const somme = choice(liste, [1]) * choice([-1, 1]) // la somme doit être un diviseur différent de 1\n          c = randint(-30, 30, [0])\n          d = somme - c\n\n          while (a > 0 && b > 0 && c > 0 && d > 0) {\n            a *= choice([-1, 1])\n            b *= choice([-1, 1])\n          }\n          texte = `$${a}\\\\times${ecritureParentheseSiNegatif(b)}\\\\div(${c}${ecritureAlgebrique(d)})$`\n          texteCorr = `$${a}\\\\times${ecritureParentheseSiNegatif(b)}\\\\div(${miseEnEvidence(\n            c + ecritureAlgebrique(d))})=${miseEnEvidence(a + '\\\\times' + ecritureParentheseSiNegatif(b))}\\\\div${ecritureParentheseSiNegatif(c + d)}=${a * b\n            }\\\\div${ecritureParentheseSiNegatif(c + d)}=${(a * b) / (c + d)}$`\n          setReponse(this, i, (a * b) / (c + d))\n          break\n        case 19: // a-(b+c)\n          a = randint(1, 9) * choice([-1, 1])\n          b = randint(1, 9) * choice([-1, 1])\n          c = randint(1, 9) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0) {\n            a = randint(1, 9) * choice([-1, 1])\n            b = randint(1, 9) * choice([-1, 1])\n            c = randint(1, 9) * choice([-1, 1])\n          }\n          texte = `$${a}-(${b}${ecritureAlgebrique(c)})$`\n          texteCorr = `$${a}-(${miseEnEvidence(b + ecritureAlgebrique(c))})=${a}-(${ecritureAlgebrique(b + c)})=${a + ecritureAlgebrique(-b - c)}=${a - b - c}$`\n          setReponse(this, i, a - b - c)\n          break\n        case 20: // (a+b+c)*d\n          a = randint(1, 9) * choice([-1, 1])\n          b = randint(1, 9) * choice([-1, 1])\n          c = randint(1, 9) * choice([-1, 1])\n          d = randint(2, 5) * choice([-1, 1])\n          while (a > 0 && b > 0 && c > 0) {\n            a = randint(1, 9) * choice([-1, 1])\n            b = randint(1, 9) * choice([-1, 1])\n            c = randint(1, 9) * choice([-1, 1])\n          }\n          texte = `$(${a + ecritureAlgebrique(b) + ecritureAlgebrique(c)})\\\\times${ecritureParentheseSiNegatif(d)}$`\n          texteCorr = `$(${miseEnEvidence(a + ecritureAlgebrique(b) + ecritureAlgebrique(c))})\\\\times${ecritureParentheseSiNegatif(d)}=${a + b + c}\\\\times${ecritureParentheseSiNegatif(d)}=${(a + b + c) * d} $`\n          setReponse(this, i, (a + b + c) * d)\n          break\n      }\n      texte += ajouteChampTexteMathLive(this, i)\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Type de calculs',\n    3,\n    '1 : Sans opérations entre parenthèses\\n2: Avec des opérations entre parenthèses\\n3: Avec ou sans opérations entre parenthèses'\n  ]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}