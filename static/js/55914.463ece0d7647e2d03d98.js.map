{"version":3,"file":"js/55914.463ece0d7647e2d03d98.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/6e/6N33-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, calcul, texNombrec, texNombre, texFraction } from '../../modules/outils.js'\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 'AMCNum' // type de question AMC\nexport const interactifReady = true\nexport const interactifType = 'numerique'\n\nexport const titre = 'Calculer mentalement le pourcentage d’un nombre'\n\n/**\n * Calculer 10, 20, 30, 40 ou 50% d'un nombre\n * @author Rémi Angot + Jean-Claude Lhote\n * 6N33-1\n * Ajout niveau 2 + 1 correction différente cgrolleau 03/2021\n */\nexport default function PourcentageDunNombre () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.nbQuestions = 5\n  this.consigne = 'Calculer :'\n  this.spacing = 2\n  this.spacingCorr = 3.5\n  this.nbCols = 2\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.interactif = false\n\n  this.nouvelleVersion = function () {\n    let listePourcentages = []\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    for (\n      let i = 0, p, n, texte, texteCorr, cpt = 0;\n      i < this.nbQuestions && cpt < 50;\n    ) {\n      switch (parseInt(this.sup)) { // niveu de difficulté.\n        case 1:\n          listePourcentages = [10, 20, 30, 40, 50]\n          n = choice([randint(2, 9), randint(2, 9) * 10, randint(1, 9) * 10 + randint(1, 2)])\n          break\n        case 2: // niveau 2 : ajout de 25%, 60% et 90% + possibilité d'avoir n'importe quel multiple de 4 entre 4 et 200\n          listePourcentages = [10, 20, 25, 30, 40, 50, 60, 90]\n          n = choice([randint(2, 9), randint(2, 9) * 10, randint(1, 9) * 10 + randint(1, 2), randint(1, 50) * 4])\n          break\n      }\n      p = choice(listePourcentages)\n      texte = `$${p}~\\\\%~\\\\text{de }${n}$`\n      switch (p) {\n        case 50 :\n          texteCorr = `$${p}~\\\\%~\\\\text{de }${n}=${n}\\\\div${2} = ${texNombre(calcul(n / 2))}$` // calcul de n/2 si p = 50%\n          break\n        case 25 :\n          texteCorr = `$${p}~\\\\%~\\\\text{de }${n}=${n}\\\\div${4} = ${texNombre(calcul(n / 4))}$` // calcul de n/4 si p = 25%\n          break\n        default :\n          texteCorr = `$${p}~\\\\%~\\\\text{de }${n}=${texFraction(p, 100)}\\\\times${n}=(${p}\\\\times${n})\\\\div100=${texNombre(p * n)}\\\\div100=${texNombre(calcul((p * n) / 100))}$`\n          if (this.sup2) {\n            texteCorr += `<br>$${p}~\\\\%~\\\\text{de }${n}=${texFraction(p, 100)}\\\\times${n}=(${n}\\\\div100)\\\\times${p}=${texNombrec(calcul(n / 100))}\\\\times${p}=${texNombre(calcul((p * n) / 100))}$`\n            texteCorr += `<br>$${p}~\\\\%~\\\\text{de }${n}=${texFraction(p, 100)}\\\\times${n}=${texNombrec(calcul(p / 100))}\\\\times${n}=${texNombre(calcul((p * n) / 100))}$`\n            if (p === 60) {\n              texteCorr += `<br>$${p}~\\\\%~\\\\text{de }${n}$ c'est $50~\\\\%~\\\\text{de }${n}$\nplus $10 ~\\\\%~\\\\text{de }${n} $ soit la moitié de $ ${n} \\\\text{ plus } 10 ~\\\\%~\\\\text{de }${n} $ :\n$${p}~\\\\%~\\\\text{de }${n}=${n}\\\\div${2} + ${n}\\\\div${10} =  ${texNombre(calcul(n * 0.6))}$`\n            } else if (p === 90) {\n              texteCorr += `<br>$${p}~\\\\%~\\\\text{de }${n}$ c'est $${n}$\nmoins $10 ~\\\\%~\\\\text{de }${n} $ :\n$${p}~\\\\%~\\\\text{de }${n}=${n} - ${n}\\\\div${10} =  ${texNombre(calcul(n * 0.9))}$`\n            } else if (p > 10) {\n              texteCorr += `<br>$${p}~\\\\%~\\\\text{de }${n}$ c'est $ ${calcul(p / 10)} $ fois $ 10 ~\\\\%~\\\\text{de }${n} $ :\n$${p}~\\\\%~\\\\text{de }${n}= ${calcul(p / 10)} \\\\times ${n}\\\\div${10} =  ${texNombre(calcul((p * n) / 100))}$`\n            }\n          }\n      }\n      if (context.isHtml && this.interactif) texte += ajouteChampTexte(this, i, { inline: true })\n      setReponse(this, i, calcul(n * p / 100))\n      if (context.isAmc) {\n        this.autoCorrection[i].enonce = texte + '='\n        this.autoCorrection[i].propositions = [{ texte: texteCorr, statut: '' }]\n        this.autoCorrection[i].reponse.param.digits = 3\n        this.autoCorrection[i].reponse.param.decimals = 1\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\n    'Niveau de difficulté',\n    2,\n    ' 1 : Pourcentages 10, 20, 30, 40, 50 \\n 2 : Pourcentages 10, 20, 25, 30, 40, 50, 60, 90'\n  ]\n  this.besoinFormulaire2CaseACocher = ['Plusieurs méthodes']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["amcReady","amcType","interactifReady","interactifType","titre","PourcentageDunNombre","Exercice","this","nbQuestions","consigne","spacing","spacingCorr","nbCols","nbColsCorr","sup","interactif","nouvelleVersion","listePourcentages","listeQuestions","listeCorrections","autoCorrection","p","n","texte","texteCorr","i","cpt","parseInt","choice","randint","texNombre","calcul","texFraction","sup2","texNombrec","context","ajouteChampTexte","inline","setReponse","enonce","propositions","statut","reponse","param","digits","decimals","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","tableauSolutionsDuQcm","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}