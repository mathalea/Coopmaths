{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4C32.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","interactifReady","amcReady","amcType","NotationScientifique","Exercice","this","sup","sup2","nbCols","nbColsCorr","nbQuestions","interactif","nouvelleVersion","reponse","typesDeQuestionsDisponibles","consigne","listeQuestions","listeCorrections","listeTypeDeQuestions","combinaisonListes","texte","texteCorr","mantisse","exp","decimalstring","scientifiquestring","i","cpt","randint","calcul","choice","texNombrec","texNombre","ajouteChampTexte","indexOf","push","setReponse","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","strict","vertical","Math","abs","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2Numerique","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"sPAMO,MAAMA,EAAQ,wBACRC,GAAkB,EAClBC,GAAW,EACXC,EAAU,EAQR,SAASC,IACtBC,eAAcC,MACdA,KAAKC,IAAM,EACXD,KAAKE,KAAO,EACZF,KAAKN,MAAQA,EACbM,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKK,YAAc,EACnBL,KAAKM,YAAa,EAClBN,KAAKL,gBAAkBA,EACvBK,KAAKH,QAAUA,EACfG,KAAKJ,SAAWA,EAShBI,KAAKO,gBAAkB,WACrB,IAAIC,EAGAC,EAFa,IAAbT,KAAKC,IAAWD,KAAKU,SAAW,uDAC/BV,KAAKU,SAAW,mDAErBV,KAAKW,eAAiB,GACtBX,KAAKY,iBAAmB,GACHH,EAAH,IAAdT,KAAKE,KAA0C,CAAC,EAAG,EAAG,EAAG,EAAG,GACzC,IAAdF,KAAKE,KAA0C,CAAC,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,GAEhD,MAAMW,GAAuBC,SAAkBL,EAA6BT,KAAKK,aACjF,IAAK,IAAWU,EAAOC,EAAWC,EAAUC,EAAKC,EAAeC,EAAvDC,EAAI,EAAuEC,EAAM,EACxFD,EAAIrB,KAAKK,aAAeiB,EAAM,IAAK,CACnC,OAAQT,EAAqBQ,IAC3B,KAAK,EACHJ,GAAWM,SAAQ,EAAG,GACtBL,GAAMK,SAAQ,EAAG,GACjB,MACF,KAAK,EACHN,GAAWO,UAAOD,SAAQ,GAAI,IAAM,IACpCL,GAAMK,SAAQ,EAAG,GACjB,MACF,KAAK,EACsBN,EAAH,KAAlBM,SAAQ,EAAG,IAAqBC,UAAOD,SAAQ,IAAK,KAAO,MAC/CC,UAAwB,KAAhBD,SAAQ,EAAG,IAAWA,SAAQ,EAAG,IAAM,KAC/DL,GAAMK,SAAQ,EAAG,IAAKE,SAAO,EAAE,EAAG,IAClC,MACF,KAAK,EACsBR,EAAH,KAAlBM,SAAQ,EAAG,IAAqBC,UAAwB,KAAhBD,SAAQ,EAAG,GAA6B,GAAjBA,SAAQ,EAAG,KAAW,MACzEC,UAAOD,SAAQ,KAAM,MAAQ,KAC7CL,GAAMK,SAAQ,EAAG,IAAKE,SAAO,EAAE,EAAG,IAGtCjB,GAAUgB,SAAOP,EAAW,IAAMC,GAClCC,GAAgBO,SAAWT,EAAW,IAAMC,GAC5CE,EAAsB,IAAEO,SAAUV,iBAAwBC,KACzC,IAAblB,KAAKC,KACPc,EAAS,IAAGI,KACZH,EAAa,IAAGG,OAAmBC,KAC/BpB,KAAKM,aACPS,GAAQa,QAAiB5B,KAAMqB,EAAG,CAChCN,MAAQ,IAAGI,aAIfH,EAAa,IAAGI,OAAwBD,KACxCJ,EAAS,IAAGK,KACRpB,KAAKM,aACPS,GAAQa,QAAiB5B,KAAMqB,EAAG,CAChCN,MAAQ,IAAGK,aAI2B,IAAxCpB,KAAKW,eAAekB,QAAQd,KAC9Bf,KAAKW,eAAemB,KAAKf,GACzBf,KAAKY,iBAAiBkB,KAAKd,GAEV,IAAbhB,KAAKC,KACP8B,QAAW/B,KAAMqB,EAAGb,EAAS,CAAEwB,OAAQnB,EAAqBQ,GAAK,EAAGY,SAAUpB,EAAqBQ,GAAK,EAAGa,OAAO,EAAOC,mBAAoB,EAAGC,eAAe,EAAMC,OAAQ,KAE7KN,QAAW/B,KAAMqB,EAAGb,EAAS,CAAE8B,QAAQ,EAAOC,UAAU,EAAOP,OAAQ,EAAIQ,KAAKC,IAAIvB,GAAO,EAAGe,SAAUO,KAAKC,IAAIvB,GAAO,EAAGgB,OAAO,EAAOC,mBAAoB,EAAGC,eAAe,EAAMC,OAAQ,IAG/LhB,KAEFC,KAEFoB,SAAwB1C,OAE1BA,KAAK2C,0BAA4B,CAAC,mBAAoB,EAAG,4EACzD3C,KAAK4C,2BAA6B,CAAC,wBAAyB,EAAG,0C,6BCtGlD,SAAS7C,IAEtBC,KAAKN,MAAQ,GACbM,KAAKU,SAAW,GAChBV,KAAK6C,mBAAqB,GAC1B7C,KAAKW,eAAiB,GACtBX,KAAKY,iBAAmB,GACxBZ,KAAK8C,aAAe,GACpB9C,KAAK+C,QAAU,GACf/C,KAAKgD,kBAAoB,GACzBhD,KAAKK,YAAc,GACnBL,KAAKG,OAAS,EACdH,KAAKI,WAAa,EAClBJ,KAAKiD,QAAU,EACfjD,KAAKkD,YAAc,EACnBlD,KAAKmD,QAAS,EAEdnD,KAAK2C,2BAA4B,EACjC3C,KAAKoD,uBAAwB,EAC7BpD,KAAKqD,6BAA8B,EACnCrD,KAAKsD,oBAAqB,EAC1BtD,KAAKuD,uBAAwB,EAC7BvD,KAAKwD,kBAAmB,EACxBxD,KAAKyD,sBAAuB,EAC5BzD,KAAK0D,mBAAoB,EACzB1D,KAAK2D,uBAAwB,EAC7B3D,KAAK4D,+BAAgC,EACrC5D,KAAK6D,qBAAsB,EAC3B7D,KAAK8D,MAAQ,GACb9D,KAAK+D,YAAa,EAClB/D,KAAKgE,gBAAkB,GAMvBhE,KAAKiE,mBAAoB,EACzBjE,KAAKM,YAAa,EAClBN,KAAKkE,uBAAwB,EAC7BlE,KAAKmE,KAAM,EACXnE,KAAKoE,eAAgB,EACrBpE,KAAKqE,SAAU,EACfrE,KAAKsE,eAAiB,GACtBtE,KAAKuE,sBAAwB,GAC7BvE,KAAKwE,cAAe,EACpBxE,KAAKO,gBAAkB,SAAUkE,KACjCzE,KAAK0E,cAAgB,G","file":"js/499.999bb9c4daefb7d0a107.js","sourcesContent":["import { machineMathsVideo, listeQuestionsToContenu, randint, choice, combinaisonListes, calcul, texNombrec, texNombre } from '../../modules/outils.js'\nimport Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\n\nimport { ajouteChampTexte, setReponse } from '../../modules/gestionInteractif.js'\n\nexport const titre = 'Notation scientifique'\nexport const interactifReady = false\nexport const amcReady = false // tant qu'il n'a pas été adapté à la version 2.6\nexport const amcType = 4 // type de question AMC\n\n/**\n * Ecrire un nombre décimal en notation scientifique et inversement\n * @author Jean-Claude Lhote\n * 4C32\n */\n\nexport default function NotationScientifique () {\n  Exercice.call(this)\n  this.sup = 1\n  this.sup2 = 1\n  this.titre = titre\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nbQuestions = 5\n  this.interactif = false\n  this.interactifReady = interactifReady\n  this.amcType = amcType\n  this.amcReady = amcReady\n\n  /********************************************************************/\n  /** Type 4 : questionmultx avec AMCnumericChoices */\n  // Dans ce cas, le tableau des booléens comprend les renseignements nécessaires pour paramétrer \\AMCnumericCoices\n  // {int digits,int decimals,bool signe,int exposantNbChiffres,bool exposantSigne,int approx}\n  // La correction est dans tabQCM[1][0] et la réponse numlérique est dans tabQCM[1][1]\n  /********************************************************************/\n\n  this.nouvelleVersion = function () {\n    let reponse\n    if (this.sup === 1) this.consigne = 'Donner l\\'écriture scientifique des nombres suivants.'\n    else this.consigne = 'Donner l\\'écriture décimale des nombres suivants.'\n    let typesDeQuestionsDisponibles\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    if (this.sup2 === 1) typesDeQuestionsDisponibles = [0, 0, 0, 1, 1]\n    else if (this.sup2 === 2) typesDeQuestionsDisponibles = [0, 1, 1, 2, 2]\n    else typesDeQuestionsDisponibles = [2, 2, 3, 3, 3]\n\n    const listeTypeDeQuestions = combinaisonListes(typesDeQuestionsDisponibles, this.nbQuestions)\n    for (let i = 0, texte, texteCorr, mantisse, exp, decimalstring, scientifiquestring, cpt = 0;\n      i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case 0:\n          mantisse = randint(1, 9)\n          exp = randint(1, 5)\n          break\n        case 1:\n          mantisse = calcul(randint(11, 99) / 10)\n          exp = randint(1, 5)\n          break\n        case 2:\n          if (randint(0, 1) === 1) mantisse = calcul(randint(111, 999) / 100)\n          else mantisse = calcul((randint(1, 9) * 100 + randint(1, 9)) / 100)\n          exp = randint(1, 7) * choice([-1, 1])\n          break\n        case 3:\n          if (randint(0, 1) === 1) mantisse = calcul((randint(1, 9) * 1000 + randint(1, 19) * 5) / 1000)\n          else mantisse = calcul(randint(1111, 9999) / 1000)\n          exp = randint(3, 7) * choice([-1, 1])\n          break\n      }\n      reponse = calcul(mantisse * 10 ** exp)\n      decimalstring = texNombrec(mantisse * 10 ** exp)\n      scientifiquestring = `${texNombre(mantisse)}\\\\times 10^{${exp}}`\n      if (this.sup === 1) {\n        texte = `$${decimalstring}$`\n        texteCorr = `$${decimalstring} = ${scientifiquestring}$`\n        if (this.interactif) {\n          texte = ajouteChampTexte(this, i, {\n            texte: `$${decimalstring} = $`\n          })\n        }\n      } else {\n        texteCorr = `$${scientifiquestring} = ${decimalstring}$`\n        texte = `$${scientifiquestring}$`\n        if (this.interactif) {\n          texte = ajouteChampTexte(this, i, {\n            texte: `$${scientifiquestring} = $`\n          })\n        }\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n\n        if (this.sup === 1) {\n          setReponse(this, i, reponse, { digits: listeTypeDeQuestions[i] + 3, decimals: listeTypeDeQuestions[i] + 1, signe: false, exposantNbChiffres: 1, exposantSigne: true, approx: 0 })\n        } else {\n          setReponse(this, i, reponse, { strict: false, vertical: false, digits: 2 * Math.abs(exp) + 2, decimals: Math.abs(exp) + 1, signe: false, exposantNbChiffres: 0, exposantSigne: true, approx: 0 })\n        }\n\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = [\"Type d'exercices\", 2, '1 : Traduire en notation scientifique\\n2 : Traduire en notation décimale']\n  this.besoinFormulaire2Numerique = ['Niveaux de difficulté', 3, '1 : Facile\\n2 : Moyen\\n3 : Difficile']\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}