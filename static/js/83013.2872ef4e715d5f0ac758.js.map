{"version":3,"file":"js/83013.2872ef4e715d5f0ac758.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/3e/3F13-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { deuxColonnes, randint, texConsigne, numAlpha, calcul } from '../../modules/outils.js'\nimport { repere2, graphiqueInterpole, mathalea2d } from '../../modules/2d.js'\nimport { ajouteChampTexteMathLive, setReponse } from '../../modules/gestionInteractif.js'\nexport const titre = 'Lecture graphique d’images et d’antécédents'\nexport const interactifReady = true\nexport const interactifType = 'mathLive'\n\n/**\n * Lecture d'images et antécédents sur un graphe sinusoidale\n * @author Rémi Angot\n * Référence 3F13-1\n*/\nexport default function AntecedentEtImageGraphique () {\n  Exercice.call(this)\n  this.titre = titre\n  this.interactifReady = interactifReady\n  this.interactifType = interactifType\n  this.nbQuestions = 1\n  this.nbQuestionsModifiable = false\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  if (context.isHtml) { this.spacingCorr = 2 }\n\n  this.nouvelleVersion = function () {\n    const r = repere2({\n      xMin: -5,\n      xMax: 5,\n      yMin: -4,\n      yMax: 4\n    })\n    let a = randint(1, 3)\n    let b = a - 4\n    let c = a - 2\n    const x0 = randint(-4, -2)\n    let gr = graphiqueInterpole([[randint(-8, -5), a - 1], [x0, a], [x0 + 4, b], [x0 + 6, c], [randint(6, 10), c - 1]] // Coordonnées des \"sommets\"\n      ,\n      { repere: r, color: 'blue', step: 0.15, epaisseur: 2 })\n\n    if (randint(1, 2) === 1) {\n      a *= -1\n      b *= -1\n      c *= -1\n      gr = graphiqueInterpole([[randint(-8, -5), a + 1], [x0, a], [x0 + 4, b], [x0 + 6, c], [randint(6, 10), c + 1]] // Coordonnées des \"sommets\"\n        ,\n        { repere: r, color: 'blue', step: 0.15, epaisseur: 2 })\n    }\n    this.contenu = 'Ci-dessous, on a tracé la courbe représentative de la fonction $f$.'\n    if (context.isHtml && this.interactif) {\n      this.contenu += '<br><em>S\\'il y a plusieurs réponses, les séparer les réponses avec un point-virgule.</em>'\n    }\n    this.contenu += '<br><br>'\n    let cont1 = `${numAlpha(0)} Quelle est l'image de $${x0}$ ?`\n    cont1 += ajouteChampTexteMathLive(this, 0)\n    cont1 += `<br>${numAlpha(1)} Quelle est l'image de $${x0 + 5}$ ?`\n    cont1 += ajouteChampTexteMathLive(this, 1)\n    const ordre = randint(1, 2)\n    let cont2\n    if (ordre === 1) {\n      cont2 = `${numAlpha(2)} Déterminer le (ou les) antécédent(s) de $${b}$.`\n      cont2 += ajouteChampTexteMathLive(this, 2)\n      cont2 += `<br>${numAlpha(3)} Déterminer le (ou les) antécédent(s) de $${c}$.`\n      cont2 += ajouteChampTexteMathLive(this, 3)\n    } else {\n      cont2 = `${numAlpha(2)} Déterminer le (ou les) antécédent(s) de $${c}$.`\n      cont2 += ajouteChampTexteMathLive(this, 2)\n      cont2 += `<br>${numAlpha(3)} Déterminer le (ou les) antécédent(s) de $${b}$.`\n      cont2 += ajouteChampTexteMathLive(this, 3)\n    }\n    this.contenu += deuxColonnes(cont1, cont2)\n    this.contenu += mathalea2d({ xmin: -7, ymin: -4.5, xmax: 7, ymax: 4.5, pixelsParCm: 30 }, r, gr)\n    this.contenuCorrection = (context.isHtml) ? '' : '\\n\\\\exo{}\\n\\n'\n    this.contenuCorrection += `${numAlpha(0)} L'image de $${x0}$ est $${a}$, on note $f(${x0})=${a}$.`\n    setReponse(this, 0, a)\n    this.contenuCorrection += `<br>${numAlpha(1)} L'image de $${x0 + 5}$ est $${(b + c) / 2}$, on note $f(${x0 + 5})=${(b + c) / 2}$.`\n    setReponse(this, 1, calcul((b + c) / 2))\n    if (ordre === 1) {\n      this.contenuCorrection += `<br>${numAlpha(2)} $${b}$ a pour unique antécédent $${x0 + 4}$, on note $f(${x0 + 4})=${b}$.`\n      setReponse(this, 2, x0 + 4)\n      this.contenuCorrection += `<br>${numAlpha(3)} $${c}$ a deux antécédents $${x0 + 2}$ et $${x0 + 6}$, on note $f(${x0 + 2})=f(${x0 + 6})=${c}$.`\n      setReponse(this, 3, [`${x0 + 2};${x0 + 6}`, `${x0 + 6};${x0 + 2}`])\n    } else {\n      this.contenuCorrection += `<br>${numAlpha(2)} $${c}$ a deux antécédents $${x0 + 2}$ et $${x0 + 6}$, on note $f(${x0 + 2})=f(${x0 + 6})=${c}$.`\n      setReponse(this, 2, [`${x0 + 2};${x0 + 6}`, `${x0 + 6};${x0 + 2}`])\n      this.contenuCorrection += `<br>${numAlpha(3)} $${b}$ a pour unique antécédent $${x0 + 4}$, on note $f(${x0 + 4})=${b}$.`\n      setReponse(this, 3, x0 + 4)\n    }\n    if (this.interactif && context.isHtml) {\n      this.contenu += `<br><button class=\"ui button checkReponses\" type=\"submit\" style=\"margin-bottom: 20px\" id=\"btnValidationEx${this.numeroExercice}-${this.id}\">Vérifier les réponses</button>`\n    }\n    if (!context.isHtml) {\n      this.contenu = texConsigne('') + this.contenu.replace(/<br><br>/g, '\\n\\n\\\\medskip\\n').replace(/<br>/g, '\\\\\\\\\\n')\n      this.contenuCorrection = this.contenuCorrection.replace(/<br><br>/g, '\\n\\n\\\\medskip\\n').replace(/<br>/g, '\\\\\\\\\\n')\n    } else {\n      this.contenuCorrection = `<div style=\"line-height: ${this.spacingCorr};\">\\n${this.contenuCorrection}\\n</div>`\n    }\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","interactifReady","interactifType","AntecedentEtImageGraphique","Exercice","this","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","context","spacingCorr","nouvelleVersion","r","repere2","xMin","xMax","yMin","yMax","a","randint","b","c","x0","gr","graphiqueInterpole","repere","color","step","epaisseur","contenu","interactif","cont1","numAlpha","ajouteChampTexteMathLive","ordre","cont2","deuxColonnes","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","contenuCorrection","setReponse","calcul","numeroExercice","id","texConsigne","replace","boutonAide","consigne","consigneCorrection","introduction","listeQuestions","listeCorrections","autoCorrection","tableauSolutionsDuQcm","spacing","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","questionJamaisPosee","i","args","argsConcatenes","arg","undefined","toString","indexOf","push"],"sourceRoot":""}