/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_4e_4S11_js"],{

/***/ "./src/js/exercices/4e/4S11.js":
/*!*************************************!*\
  !*** ./src/js/exercices/4e/4S11.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Calculer_des_frequences)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\n\nconst titre = 'Déterminer des médianes';\n/**\n * Calculs de médianes dans des séries statistiques\n* @auteur Sébastien Lozano forked de Jean-Claude Lhote\n* Référence 4S11\n* Date initiale 2021-01-12\n* Mise à jour le ...\n*/\n\nfunction Calculer_des_frequences() {\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n\n  this.titre = titre;\n  this.consigne = \"\";\n  this.nbQuestions = 1;\n  this.spacing = 1;\n  this.spacingCorr = 1.5;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 1;\n  this.listePackages = `bclogo`;\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    for (let i = 0, temperatures, nombre_temperatures, nombre_notes, notes, nombre_des, nombre_faces, nombre_tirages, index_valeur, frequence, tirages, texte, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      var underbrace_mediane = nb_val => {\n        let sortie;\n\n        if (nb_val % 2 == 0) {\n          // nb pair de valeurs\n          sortie = `$\\\\underbrace{1^e\\\\hspace{0.25cm}2^e ... ${nb_val / 2 - 1}^e}_{${nb_val / 2 - 1}\\\\; valeurs} \\\\hspace{0.25cm} ${nb_val / 2}^e \\\\hspace{0.25cm} ${nb_val / 2 + 1}^e \\\\hspace{0.25cm} \\\\underbrace{${nb_val / 2 + 2}^e ... ${nb_val}^e}_{${nb_val / 2 - 1}\\\\; valeurs}$`;\n        } else {\n          // nb impair de valeurs\n          sortie = `$\\\\underbrace{1^e\\\\hspace{0.25cm}2^e ... ${(nb_val - 1) / 2}^e}_{${(nb_val - 1) / 2}\\\\; valeurs} \\\\hspace{0.25cm} ${(nb_val - 1) / 2 + 1}^e \\\\hspace{0.25cm} \\\\underbrace{${(nb_val - 1) / 2 + 2}^e ... ${nb_val}^e}_{${(nb_val - 1) / 2}\\\\; valeurs}$`;\n        }\n\n        return sortie;\n      };\n\n      var des_tab_eff_cumul = (tirages, effCumulBool) => {\n        let sortie;\n\n        if (!effCumulBool) {\n          sortie = ``;\n\n          if (tirages.length > 12) {\n            sortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 1/2\n\n            for (let j = 0; j <= Math.round(tirages.length / 2); j++) sortie += '|c';\n\n            sortie += '}\\\\hline  \\\\text{Scores}';\n\n            for (let j = 0; j < Math.round(tirages.length / 2); j++) sortie += '&' + tirages[j][0];\n\n            sortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\n            for (let j = 0; j < Math.round(tirages.length / 2); j++) sortie += '&' + tirages[j][1];\n\n            sortie += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>';\n            sortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 2/2\n\n            for (let j = Math.round(tirages.length / 2); j <= tirages.length; j++) sortie += '|c';\n\n            sortie += '}\\\\hline  \\\\text{Scores}';\n\n            for (let j = Math.round(tirages.length / 2); j < tirages.length; j++) sortie += '&' + tirages[j][0];\n\n            sortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\n            for (let j = Math.round(tirages.length / 2); j < tirages.length; j++) sortie += '&' + tirages[j][1];\n\n            sortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n          } else {\n            sortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs en un seul morceau\n\n            for (let j = 0; j <= tirages.length; j++) sortie += '|c';\n\n            sortie += '}\\\\hline  \\\\text{Scores}';\n\n            for (let j = 0; j < tirages.length; j++) sortie += '&' + tirages[j][0];\n\n            sortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\n            for (let j = 0; j < tirages.length; j++) sortie += '&' + tirages[j][1];\n\n            sortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n          }\n\n          ;\n        } else {\n          sortie = ``;\n\n          if (tirages.length > 12) {\n            sortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 1/2\n\n            for (let j = 0; j <= Math.round(tirages.length / 2); j++) sortie += '|c';\n\n            sortie += '}\\\\hline  \\\\text{Scores}';\n\n            for (let j = 0; j < Math.round(tirages.length / 2); j++) sortie += '&' + tirages[j][0];\n\n            sortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\n            for (let j = 0; j < Math.round(tirages.length / 2); j++) sortie += '&' + tirages[j][1];\n\n            sortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions cumulées}';\n\n            for (let j = 0; j < Math.round(tirages.length / 2); j++) {\n              let cumul = 0;\n\n              for (let k = 0; k <= j; k++) {\n                cumul += tirages[k][1];\n              }\n\n              sortie += '&' + cumul; //tirages[j][1];\n            }\n\n            sortie += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>';\n            sortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs 2/2\n\n            for (let j = Math.round(tirages.length / 2); j <= tirages.length; j++) sortie += '|c';\n\n            sortie += '}\\\\hline  \\\\text{Scores}';\n\n            for (let j = Math.round(tirages.length / 2); j < tirages.length; j++) sortie += '&' + tirages[j][0];\n\n            sortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\n            for (let j = Math.round(tirages.length / 2); j < tirages.length; j++) sortie += '&' + tirages[j][1];\n\n            sortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions cumulées}';\n\n            for (let j = Math.round(tirages.length / 2); j < tirages.length; j++) {\n              let cumul = 0;\n\n              for (let k = 0; k <= j; k++) {\n                cumul += tirages[k][1];\n              }\n\n              sortie += '&' + cumul; //tirages[j][1];\n            }\n\n            sortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n          } else {\n            sortie += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // construction du tableau des effectifs en un seul morceau\n\n            for (let j = 0; j <= tirages.length; j++) sortie += '|c';\n\n            sortie += '}\\\\hline  \\\\text{Scores}';\n\n            for (let j = 0; j < tirages.length; j++) sortie += '&' + tirages[j][0];\n\n            sortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions}';\n\n            for (let j = 0; j < tirages.length; j++) sortie += '&' + tirages[j][1];\n\n            sortie += '\\\\\\\\\\\\hline \\\\text{Nombre d\\'apparitions cumulées}';\n\n            for (let j = 0; j < tirages.length; j++) {\n              let cumul = 0;\n\n              for (let k = 0; k <= j; k++) {\n                cumul += tirages[k][1];\n              }\n\n              sortie += '&' + cumul; //tirages[j][1];\n            }\n\n            sortie += '\\\\\\\\\\\\hline\\\\end{array}$';\n          }\n\n          ;\n        }\n\n        ;\n        return sortie;\n      };\n\n      if (this.sup == 1) {\n        // ici on lance des dés\n        var solid_name = nb_cot => {\n          switch (nb_cot) {\n            case 4:\n              return `tétraèdre`;\n              break;\n\n            case 6:\n              return `hexaèdre`;\n              break;\n\n            case 8:\n              return `octaèdre`;\n              break;\n\n            case 10:\n              return `decaèdre`;\n              break;\n\n            default:\n              return `cas non prévu`;\n              break;\n          }\n\n          ;\n        };\n\n        nombre_des = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 2);\n        nombre_faces = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([4, 6, 8, 10]);\n        nombre_tirages = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([50, 99, 100, 199, 200, 299, 500, 999, 1000, 1999, 2000]);\n        tirages = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.tirer_les_des)(nombre_tirages, nombre_faces, nombre_des); // on récupère une série rangée dans l'ordre croissant avec les effectifs correspondants\n\n        do index_valeur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, tirages.length - 1); while (tirages[index_valeur][1] == 0); // on choisi au hasard l'index d'une valeur dont l'effectif est différent de 0.\n\n\n        if (nombre_des > 1) {\n          texte = `On a réalisé $${nombre_tirages}$ lancers de $${nombre_des}$ dés à $${nombre_faces}$ faces.<br>`;\n        } else {\n          texte = `On a réalisé $${nombre_tirages}$ lancers d'un dé à $${nombre_faces}$ faces.<br>`;\n        }\n\n        texte += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampeMessage)({\n          titre: `Vocabulaire`,\n          texte: `Le solide qui correspond à ce type de dé s'appelle ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(solid_name(nombre_faces))}.`,\n          couleur: `nombres`\n        }) + '<br>';\n        texte += 'Les résultats sont inscrits dans le tableau ci-dessous :<br><br>';\n        texte += des_tab_eff_cumul(tirages, false) + '<br>';\n        texte += `<br><br> Déterminer une médiane de cette série.`;\n        texteCorr = `On a réalisé $${nombre_tirages}$ lancers en tout.<br>`;\n\n        if (nombre_tirages % 2 == 0) {\n          texteCorr += `Le nombre de lancers est pair, les scores sont rangés dans l'ordre croissant.<br>\n\t\t\t\t\tLes deux valeurs centrales sont la $${nombre_tirages / 2}^{e}$ et la $${nombre_tirages / 2 + 1}^{e}$ valeur.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(nombre_tirages)} <br>\n\t\t\t\t\tUne médiane est donc un score compris entre le $${nombre_tirages / 2}^{e}$ et le $${nombre_tirages / 2 + 1}^{e}$ score.<br>\n\t\t\t\t\tOn peut ajouter une ligne avec les effectifs cumulés pour trouver ces deux valeurs.<br><br>\n\t\t\t\t\t${des_tab_eff_cumul(tirages, true)}<br><br>\n\t\t\t\t\t`; // on récupère le score des deux lancers médians\n\n          let scoresMedians = []; // compteur\n\n          let _cpt = 0; // Pour cumuler les effectifs, tirages est un tableau 2D qui contient les couples [score,effectif]\n\n          let effCumulCroiss = tirages[0][1]; // On récupère le premier score médian\n\n          while (effCumulCroiss <= nombre_tirages / 2) {\n            _cpt += 1;\n            effCumulCroiss += tirages[_cpt][1];\n          }\n\n          ;\n          scoresMedians.push(tirages[_cpt][0]); // On récupère le second score médian\n\n          _cpt = 0;\n          effCumulCroiss = tirages[0][1];\n\n          while (effCumulCroiss <= nombre_tirages / 2 + 1) {\n            _cpt += 1;\n            effCumulCroiss += tirages[_cpt][1];\n          }\n\n          ;\n          scoresMedians.push(tirages[_cpt][0]);\n          texteCorr += `D'où ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(`le score médian : ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)((scoresMedians[0] + scoresMedians[1]) / 2)}`)}<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampeMessage)({\n            titre: `Interprétation`,\n            texte: `Ìl y a bien $${nombre_tirages / 2}$ lancers dont le score est inférieur ou égal à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(scoresMedians[0])}$ et $${nombre_tirages / 2}$ lancers dont le score est supérieur ou égal à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(scoresMedians[0])}$.`,\n            couleur: `nombres`\n          });\n        } else {\n          // Le nombre de lancers est impair ici\n          texteCorr += `Le nombre de lancers est impair, les scores sont rangés dans l'odre croissant.<br>\n\t\t\t\t\tLa valeur centrale est la $${(nombre_tirages - 1) / 2 + 1}^{e}$ valeur.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(nombre_tirages)} <br>\n\t\t\t\t\tUne médiane est donc le $${(nombre_tirages - 1) / 2 + 1}^{e}$ score.<br>\n\t\t\t\t\tOn peut ajouter une ligne avec les effectifs cumulés pour trouver cette valeur.<br><br>\n\t\t\t\t\t${des_tab_eff_cumul(tirages, true)}<br><br>`; // on récupère le score des deux lancers médians\n\n          let scoresMedians = []; // compteur\n\n          let _cpt2 = 0; // Pour cumuler les effectifs, tirages est un tableau 2D qui contient les couples [score,effectif]\n\n          let effCumulCroiss = tirages[0][1]; // On récupère le premier score médian\n\n          while (effCumulCroiss <= nombre_tirages / 2) {\n            _cpt2 += 1;\n            effCumulCroiss += tirages[_cpt2][1];\n          }\n\n          ;\n          scoresMedians.push(tirages[_cpt2][0]);\n          texteCorr += `D'où ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(`le score médian : ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(scoresMedians[0])}`)}<br>`;\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampeMessage)({\n            titre: `Interprétation`,\n            texte: `Ìl y a bien $${(nombre_tirages - 1) / 2}$ lancers dont le score est inférieur ou égal à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(scoresMedians[0])}$ et $${(nombre_tirages - 1) / 2}$ lancers dont le score est supérieur ou égal à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(scoresMedians[0])}$.`,\n            couleur: `nombres`\n          });\n        }\n      } else if (this.sup == 2) {\n        // ici on trie des notes\n        nombre_notes = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)([7, 8, 9, 10, 11, 12]);\n        notes = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_notes)(nombre_notes, (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, 7), (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(13, 20)); // on récupère une liste de notes (série brute)\n\n        index_valeur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, notes.length - 1); // on choisi une des notes au hasard\n\n        frequence = 0;\n\n        for (let j = 0; j < notes.length; j++) {\n          // frequence va contenir l'effectif de la note choisie\n          if (notes[j] == notes[index_valeur]) frequence++;\n        }\n\n        texte = `${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)()} a obtenu ces notes ce trimestre-ci en mathématiques :<br>`;\n        texte += `$${notes[0]}$`;\n\n        for (let j = 1; j < nombre_notes - 1; j++) texte += `; $${notes[j]}$ `; // On liste les notes (série brute)\n\n\n        texte += `et $${notes[nombre_notes - 1]}$.`;\n        texte += `<br><br>Déterminer une médiane de cette série.`;\n        let notes_rangees = notes.sort((a, b) => a - b);\n        let mediane;\n\n        if (notes.length % 2 == 0) {\n          // attention les indices commencent à 0 !\n          mediane = (notes_rangees[notes.length / 2 - 1] + notes_rangees[notes.length / 2]) / 2; //console.log('parité');\n        } else {\n          mediane = notes_rangees[(notes.length - 1) / 2]; //console.log('imparité');\n        }\n\n        texteCorr = `Il y a $${notes.length}$ notes en tout. `;\n\n        if (notes.length % 2 == 0) {\n          texteCorr += `Le nombre de notes est pair.<br>`;\n        } else {\n          texteCorr += `Le nombre de notes est impair.<br>`;\n        }\n\n        ;\n        texteCorr += `Il faut par exemple ranger les notes dans l'ordre croissant : <br> $${notes[0]}$`;\n\n        for (let j = 1; j < nombre_notes - 1; j++) texteCorr += `; $${notes[j]}$ `; // On liste les notes (série brute)\n\n\n        texteCorr += `et $${notes[nombre_notes - 1]}$.<br>`;\n\n        if (notes.length % 2 == 0) {\n          texteCorr += `Les notes centrales sont la $${notes.length / 2}^{e}$ et la $${notes.length / 2 + 1}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(notes.length)}<br>\n\t\t\t\t\tUne médiane est donc une note comprise entre la $${notes.length / 2}^{e}$ et la $${notes.length / 2 + 1}^{e}$ note, lorsque ces notes sont rangées.<br>`;\n        } else {\n          texteCorr += `La note centrale est donc la $${(notes.length + 1) / 2}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(notes.length)}<br>\t\t\t\t\t\n\t\t\t\t\tUne médiane est donc la $${(notes.length + 1) / 2}^{e}$ note, lorsque ces notes sont rangées.<br>`;\n        }\n\n        ;\n        texteCorr += `D'où ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(`la note médiane : ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(mediane)}`)}<br>`;\n\n        if (notes.length % 2 == 0) {\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampeMessage)({\n            titre: `Interprétation`,\n            texte: `Ìl y a bien $${notes.length / 2}$ notes inférieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(mediane)}$ et $${notes.length / 2}$ notes supérieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(mediane)}$.`,\n            couleur: `nombres`\n          });\n        } else {\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampeMessage)({\n            titre: `Interprétation`,\n            texte: `Ìl y a bien $${(notes.length - 1) / 2}$ notes inférieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(mediane)}$ et $${(notes.length - 1) / 2}$ notes supérieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(mediane)}$.`,\n            couleur: `nombres`\n          });\n        }\n      } else {\n        // ici on relève des températures\n        let mois = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 12);\n        let annee = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1980, 2019);\n        let temperatures_de_base = [3, 5, 9, 13, 19, 24, 26, 25, 23, 18, 10, 5];\n        nombre_temperatures = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.jours_par_mois)(mois);\n        temperatures = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.unMoisDeTemperature)(temperatures_de_base[mois - 1], mois, annee); // on récupère une série de température correspondant à 1 mois d'une année (série brute)\n\n        index_valeur = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, temperatures.length - 1); // on choisi l'index d'une valeur au hasard\n\n        frequence = 0;\n\n        for (let j = 0; j < temperatures.length; j++) {\n          if (temperatures[j] == temperatures[index_valeur]) frequence++; // frequence contient l'effectif de cette valeur\n        }\n\n        texte = `En ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.nom_du_mois)(mois)} ${annee}, à ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.choice)(['Moscou', 'Berlin', 'Paris', 'Bruxelles', 'Rome', 'Belgrade'])}, on a relevé les températures suivantes<br>`;\n        texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // On construit le tableau des températures\n\n        texte += '|c';\n\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) texte += '|c';\n\n        texte += '}\\\\hline  \\\\text{Jour}';\n\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) texte += '&' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(j + 1);\n\n        texte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}';\n\n        for (let j = 0; j < Math.round(temperatures.length / 2); j++) texte += '&' + temperatures[j];\n\n        texte += '\\\\\\\\\\\\hline\\\\end{array}$<br><br>';\n        texte += '$\\\\def\\\\arraystretch{1.5}\\\\begin{array}{|c'; // On construit le tableau des températures\n\n        texte += '|c';\n\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) texte += '|c';\n\n        texte += '}\\\\hline  \\\\text{Jour}';\n\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) texte += '&' + (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(j + 1);\n\n        texte += '\\\\\\\\\\\\hline \\\\text{Température\\\\thickspace en} \\\\thickspace ^\\\\circ\\\\text{C}';\n\n        for (let j = Math.round(temperatures.length / 2); j < temperatures.length; j++) texte += '&' + temperatures[j];\n\n        texte += '\\\\\\\\\\\\hline\\\\end{array}$';\n        texte += `<br><br>Déterminer une médiane de cette série.`; //texte += temperatures;\n        //texte += temperatures.length;\n\n        texteCorr = ``;\n        let temperatures_rangees = temperatures.sort((a, b) => a - b);\n        let mediane;\n\n        if (temperatures.length % 2 == 0) {\n          // attention les indices commencent à 0 !\n          mediane = (temperatures_rangees[temperatures.length / 2 - 1] + temperatures_rangees[temperatures.length / 2]) / 2;\n        } else {\n          mediane = temperatures_rangees[(temperatures.length - 1) / 2];\n        }\n\n        ;\n        texteCorr = `Il y a $${temperatures.length}$ températures relevées en tout. `;\n\n        if (temperatures.length % 2 == 0) {\n          texteCorr += `Le nombre de temperatures est pair.<br>`;\n        } else {\n          texteCorr += `Le nombre de temperatures est impair.<br>`;\n        }\n\n        ;\n        texteCorr += `Il faut par exemple ranger les temperatures dans l'ordre croissant : <br> $${temperatures[0]}$`;\n\n        for (let j = 1; j < nombre_temperatures - 1; j++) texteCorr += `; $${temperatures[j]}$ `; // On liste les temperatures (série brute)\n\n\n        texteCorr += `et $${temperatures[nombre_temperatures - 1]}$.<br>`;\n\n        if (temperatures.length % 2 == 0) {\n          texteCorr += `Les temperatures centrales sont la $${temperatures.length / 2}^{e}$ et la $${temperatures.length / 2 + 1}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(temperatures.length)}<br>\n\t\t\t\t\tUne médiane est donc une temperature comprise entre la $${temperatures.length / 2}^{e}$ et la $${temperatures.length / 2 + 1}^{e}$ temperature, lorsque ces temperatures sont rangées.<br>`;\n        } else {\n          texteCorr += `La temperature centrale est donc la $${(temperatures.length + 1) / 2}^{e}$.<br>\n\t\t\t\t\tEn effet, ${underbrace_mediane(temperatures.length)}<br>\t\t\t\t\t\n\t\t\t\t\tUne médiane est donc la $${(temperatures.length + 1) / 2}^{e}$ temperature, lorsque ces temperatures sont rangées.<br>`;\n        }\n\n        ;\n        texteCorr += `D'où ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_gras)(`la temperature médiane : ${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(mediane)}`)}<br>`;\n\n        if (temperatures.length % 2 == 0) {\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampeMessage)({\n            titre: `Interprétation`,\n            texte: `Ìl y a bien $${temperatures.length / 2}$ temperatures inférieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(mediane)}$ et $${temperatures.length / 2}$ temperatures supérieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(mediane)}$.`,\n            couleur: `nombres`\n          });\n        } else {\n          texteCorr += (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.lampeMessage)({\n            titre: `Interprétation`,\n            texte: `Ìl y a bien $${(temperatures.length - 1) / 2}$ temperatures inférieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(mediane)}$ et $${(temperatures.length - 1) / 2}$ temperatures supérieures ou égales à  $${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texNombre)(mediane)}$.`,\n            couleur: `nombres`\n          });\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) == -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n\n      cpt++;\n    }\n\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.listeQuestionsToContenu)(this);\n  };\n\n  this.besoinFormulaireNumerique = ['Type de séries', 3, \"1 : Lancers de dés \\n 2 : Liste de notes\\n 3 : Un mois de températures\"];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/exercices/4e/4S11.js\n");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice() {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigneCorrection = '';\n  this.listeQuestions = [];\n  this.listeCorrections = [];\n  this.introduction = '';\n  this.contenu = '';\n  this.contenuCorrection = '';\n  this.nbQuestions = 10;\n  this.nbCols = 2;\n  this.nbColsCorr = 2;\n  this.spacing = 1;\n  this.spacingCorr = 1;\n  this.beamer = false;\n  this.besoinFormulaireNumerique = false; // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n\n  this.besoinFormulaireTexte = false; // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n\n  this.besoinFormulaireCaseACocher = false; // Sinon this.besoinFormulaireCaseACocher = [texte];\n\n  this.consigneModifiable = true;\n  this.nbQuestionsModifiable = true;\n  this.nbColsModifiable = true;\n  this.nbColsCorrModifiable = true;\n  this.spacingModifiable = true;\n  this.spacingCorrModifiable = true;\n  this.correctionDetailleeDisponible = false;\n  this.correctionDetaillee = true;\n  this.video = '';\n  this.boutonAide = false;\n  this.tailleDiaporama = 50; // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  this.pasDeVersionLatex = false;\n  this.qcm = false; // Pour les exercices de type QCM : contient un tableau.\n\n  this.qcmDisponible = false; // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n\n  this.modeQcm = false; // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false; // pas d'interface par défaut pour les figures MG32\n\n  this.nouvelleVersion = function (numeroExercice) {};\n\n  this.listePackages = []; // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWF0aGFsZWEvLi9zcmMvanMvZXhlcmNpY2VzL0NsYXNzZUV4ZXJjaWNlLmpzP2RiNDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogIENsYXNzZSBwYXJlbnRlIGRlIHRvdXMgbGVzIGV4ZXJjaWNlc1xuICpcbiAqIEBBdXRldXIgUsOpbWkgQW5nb3RcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRXhlcmNpY2UgKCkge1xuICAvLyBDbGFzc2UgcGFyZW50ZSBkZSB0b3VzIGxlcyBleGVyY2ljZXMgcXVpIHNlcm9udCBjcsOpw6lzXG4gIHRoaXMudGl0cmUgPSAnJ1xuICB0aGlzLmNvbnNpZ25lID0gJydcbiAgdGhpcy5jb25zaWduZUNvcnJlY3Rpb24gPSAnJ1xuICB0aGlzLmxpc3RlUXVlc3Rpb25zID0gW11cbiAgdGhpcy5saXN0ZUNvcnJlY3Rpb25zID0gW11cbiAgdGhpcy5pbnRyb2R1Y3Rpb24gPSAnJ1xuICB0aGlzLmNvbnRlbnUgPSAnJ1xuICB0aGlzLmNvbnRlbnVDb3JyZWN0aW9uID0gJydcbiAgdGhpcy5uYlF1ZXN0aW9ucyA9IDEwXG4gIHRoaXMubmJDb2xzID0gMlxuICB0aGlzLm5iQ29sc0NvcnIgPSAyXG4gIHRoaXMuc3BhY2luZyA9IDFcbiAgdGhpcy5zcGFjaW5nQ29yciA9IDFcbiAgdGhpcy5iZWFtZXIgPSBmYWxzZVxuXG4gIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IGZhbHNlIC8vIFNpbm9uIHRoaXMuYmVzb2luRm9ybXVsYWlyZU51bWVyaXF1ZSA9IFt0ZXh0ZSxtYXgsdG9vbHRpcCBmYWN1bHRhdGlmXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlVGV4dGUgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVUZXh0ZSA9IFt0ZXh0ZSx0b29sdGlwXTtcbiAgdGhpcy5iZXNvaW5Gb3JtdWxhaXJlQ2FzZUFDb2NoZXIgPSBmYWxzZSAvLyBTaW5vbiB0aGlzLmJlc29pbkZvcm11bGFpcmVDYXNlQUNvY2hlciA9IFt0ZXh0ZV07XG4gIHRoaXMuY29uc2lnbmVNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iUXVlc3Rpb25zTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5uYkNvbHNNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLm5iQ29sc0NvcnJNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdNb2RpZmlhYmxlID0gdHJ1ZVxuICB0aGlzLnNwYWNpbmdDb3JyTW9kaWZpYWJsZSA9IHRydWVcbiAgdGhpcy5jb3JyZWN0aW9uRGV0YWlsbGVlRGlzcG9uaWJsZSA9IGZhbHNlXG4gIHRoaXMuY29ycmVjdGlvbkRldGFpbGxlZSA9IHRydWVcbiAgdGhpcy52aWRlbyA9ICcnXG4gIHRoaXMuYm91dG9uQWlkZSA9IGZhbHNlXG4gIHRoaXMudGFpbGxlRGlhcG9yYW1hID0gNTAgLy8gVGFpbGxlIGVuIHBpeGVscyBwb3VyIGxlIGNhbGN1bCBjaHJvbm9tw6l0csOpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsVGV4dGVDb3VydChudW1lcm9FeGVyY2ljZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFRleHRlTG9uZyhudW1lcm9FeGVyY2ljZSx0aXRyZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlXCIsaWNvbmU9XCJpbmZvIGNpcmNsZVwiKVxuICAvLyB0aGlzLmJvdXRvbkFpZGUgPSBtb2RhbFlvdXR1YmUobnVtZXJvRXhlcmNpY2UsaWRfeW91dHViZSx0ZXh0ZSxsYWJlbF9ib3V0b249XCJBaWRlIC0gVmlkw6lvXCIsaWNvbmU9XCJ5b3V0dWJlXCIpXG4gIC8vIHRoaXMuYm91dG9uQWlkZSA9IG1vZGFsUGRmKG51bWVyb0V4ZXJjaWNlLHVybF9wZGYsdGV4dGU9XCJBaWRlXCIsbGFiZWxfYm91dG9uPVwiQWlkZSAtIFBERlwiLGljb25lPVwiZmlsZSBwZGZcIilcbiAgLy8gdGhpcy52c3BhY2UgPSAtMSAvL0Fqb3V0ZSB1biBcXHZzcGFjZXstMWNtfSBhdmFudCBsJ8Opbm9uY8OpIGNlIHF1aSBwZXV0IMOqdHJlIHByYXRpcXVlIHBvdXIgZGVzIGV4ZXJjaWNlcyBhdmVjIGRlcyBmaWd1cmVzLlxuICB0aGlzLnBhc0RlVmVyc2lvbkxhdGV4ID0gZmFsc2VcbiAgdGhpcy5xY20gPSBmYWxzZSAvLyBQb3VyIGxlcyBleGVyY2ljZXMgZGUgdHlwZSBRQ00gOiBjb250aWVudCB1biB0YWJsZWF1LlxuICB0aGlzLnFjbURpc3BvbmlibGUgPSBmYWxzZSAvLyBQb3VyIGFqb3V0ZXIgdW5lIGNhc2Ugw6AgY29jaGVyIE1vZGUgUUNNIHF1aSBwZXJtZXQgZGUgY2hhbmdlciBsZSBzdGF0dXQgZGUgdGhpcy5tb2RlUWNtXG4gIHRoaXMubW9kZVFjbSA9IGZhbHNlIC8vIFBvdXIgY2hvaXNpciBsYSB2ZXJzaW9uIFFDTSBvdSBsYSB2ZXJzaW9uIGNsYXNzaXF1ZSAoZmFsc2UgPSB2ZXJzaW9uIGNsYXNzaXF1ZSlcblxuICB0aGlzLm1nMzJFZGl0YWJsZSA9IGZhbHNlIC8vIHBhcyBkJ2ludGVyZmFjZSBwYXIgZMOpZmF1dCBwb3VyIGxlcyBmaWd1cmVzIE1HMzJcbiAgdGhpcy5ub3V2ZWxsZVZlcnNpb24gPSBmdW5jdGlvbiAobnVtZXJvRXhlcmNpY2UpIHt9XG4gIHRoaXMubGlzdGVQYWNrYWdlcyA9IFtdIC8vIHN0cmluZyBvdSBsaXN0ZSBkZSBzdHJpbmcgYXZlYyBsZSBub20gZGVzIHBhY2thZ2VzIHNww6ljaWZpcXVlcyDDoCBham91dGVyIGRhbnMgbGUgcHLDqWFtYnVsZVxuICAvLyB0aGlzLnR5cGVFeGVyY2ljZSA9IFwiTUczMlwiO1xuICAvLyB0aGlzLmRpbWVuc2lvbnNEaXZNZzMyID0gWzUwMCwgNDUwXTtcbiAgLy8gdGhpcy50eXBlRXhlcmNpY2UgPSBcIlNjcmF0Y2hcIlxuICAvLyB0aGlzLnFjbT1bXCJRdWVscyBzb250IGxlcyBub21icmVzIHBhaXJzID9cIixbNywxMiwzNCwyNSwxOF0sWzAsMSwxLDAsMV1dID0+W1wiTGEgcXVlc3Rpb25cIixbbGVzIHLDqXBvbnNlc10sW2Jvbm5lPTEgZXQgbWF1dmFpc2U9MF1dXG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/exercices/ClasseExercice.js\n");

/***/ })

}]);