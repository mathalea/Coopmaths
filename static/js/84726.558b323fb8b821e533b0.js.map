{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N43-2.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["amcReady","amcType","titre","TableauCriteresDeDivisibilite","Exercice","this","spacing","spacingCorr","nbQuestions","nbColsCorr","nbCols","nouvelleVersion","autoCorrection","modeQcm","consigne","espace","context","listeQuestions","listeCorrections","listeDesTypesDeNombres","combinaisonListes","tableauDeNombres","texte","texteCorr","tableauDeNombresAvecCorrection","listeDeFacteurs","i","options","choice","texNombre2","propositions","statut","feedback","enonce","toString","charAt","length","ordered","lastChoice","propositionsQcm","k","l","push","interactif","listeQuestionsToContenu","listeQuestionsToContenuSansNumero","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulair2eNumerique","besoinFormulair2eTexte","besoinFormulair2eCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/84726.558b323fb8b821e533b0.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenuSansNumero, listeQuestionsToContenu, choice, combinaisonListes, texNombre2 } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\nexport const amcReady = true\nexport const amcType = 2 // type de question AMC\n\nexport const titre = 'Critères de divisibilité (plusieurs possibles)'\n\n/**\n * Un nombre est-il divisible par 2, 3, 5, 9 ?\n *\n *\n * @author Rémi Angot\n * 6N43-2\n */\nexport default function TableauCriteresDeDivisibilite () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.amcType = amcType\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.nbQuestions = 5\n  this.nbColsCorr = 1\n  this.nbCols = 1\n\n  this.nouvelleVersion = function () {\n    this.autoCorrection = []\n    if (!this.modeQcm) {\n      this.consigne =\n        'Compléter le tableau en mettant oui ou non dans chaque case.'\n    } else {\n      this.consigne =\n        'mettre une croix dans la ou les cases qui conviennent.'\n    }\n    let espace = ''\n    if (context.isHtml) {\n      espace = '&emsp;'\n    } else {\n      espace = '\\\\qquad'\n    }\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const listeDesNombresPossibles = [\n      'div2',\n      'div3',\n      'div39',\n      'div5',\n      'div25',\n      'div23',\n      'div239',\n      'div35',\n      'div2359',\n      'divrien'\n    ]\n    // divisible par 2, divisible par 3, divisible par 3 et 9...\n\n    const listeDesTypesDeNombres = combinaisonListes(\n      listeDesNombresPossibles,\n      this.nbQuestions\n    )\n    const tableauDeNombres = []; let texte; let texteCorr\n    const tableauDeNombresAvecCorrection = []\n    const listeDeFacteurs = [\n      7,\n      11,\n      13,\n      17,\n      19,\n      23,\n      29,\n      31,\n      37,\n      41,\n      43,\n      47,\n      53,\n      59,\n      61,\n      67,\n      71,\n      73,\n      79,\n      83,\n      89,\n      97,\n      101,\n      103,\n      107,\n      109,\n      113,\n      127,\n      131,\n      137,\n      139,\n      149,\n      151,\n      157,\n      163,\n      167,\n      173,\n      179,\n      181,\n      191,\n      193,\n      197,\n      199,\n      211,\n      223,\n      227,\n      229,\n      233,\n      239,\n      241,\n      251,\n      257,\n      263,\n      269,\n      271,\n      277,\n      281,\n      283,\n      293\n    ]\n    texteCorr = ''\n    texte = ''\n    for (let i = 0; i < this.nbQuestions; i++) {\n      this.autoCorrection[i] = {}\n      this.autoCorrection[i].options = {}\n      switch (listeDesTypesDeNombres[i]) {\n        case 'div2':\n          tableauDeNombres[i] = 2 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $3$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $3$.\"\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est pair. Il est donc divisible par 2.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n\n          break\n        case 'div3':\n          tableauDeNombres[i] = 3 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: false,\n              feedback: \"Ce nombre est impair. Il n'est pas divisible par $2$\"\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est divisible par $3$ car la somme de ses chiffres est divisible par $3$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div39':\n          tableauDeNombres[i] = 9 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\color{blue} \\\\text{oui} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: false,\n              feedback: \"Ce nombre est impair. Il n'est pas divisible par $2$\"\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est divisible par $9$ et par $3$ car la somme de ses chiffres est divisible par $9$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div5':\n          tableauDeNombres[i] = 5 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: false,\n              feedback: \"Ce nombre est impair. Il n'est pas divisible par $2$\"\n            },\n            {\n              texte: 'par $3$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $3$.\"\n            },\n            {\n              texte: 'par $5$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: `Ce nombre est divisible par $5$ car son chiffre des unités est $${tableauDeNombres[i].toString().charAt(tableauDeNombres[i].toString().length - 1)}$.`\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div25':\n          tableauDeNombres[i] = 10 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $3$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $3$.\"\n            },\n            {\n              texte: 'par $5$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un multiple de $10$. Il est donc divisible par $2$ et par $5$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div23':\n          tableauDeNombres[i] = 6 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par $2$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div239':\n          tableauDeNombres[i] = 18 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\color{blue} \\\\text{oui} & \\\\text{non} & \\\\color{blue} \\\\text{oui} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par $2$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div35':\n          tableauDeNombres[i] = 15 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\color{blue} \\\\text{oui} & \\\\color{blue} \\\\text{oui} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: false,\n              feedback: \"Ce nombre est impair. Il n'est pas divisible par $2$\"\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par $2$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'div2359':\n          tableauDeNombres[i] = 90 * choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\color{blue} \\\\text{oui} & \\\\text{oui} & \\\\text{oui} & \\\\text{oui} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $3$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $5$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par $9$',\n              statut: true,\n              feedback: 'Correct !'\n            },\n            {\n              texte: 'par aucun',\n              statut: false,\n              feedback: 'Ce nombre est un nombre pair. Il est donc divisible par $2$.'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n        case 'divrien':\n          tableauDeNombres[i] = choice(listeDeFacteurs)\n          tableauDeNombresAvecCorrection[i] = `${texNombre2(\n            tableauDeNombres[i]\n          )} & \\\\text{non} & \\\\text{non} & \\\\text{non} & \\\\text{non} \\\\\\\\`\n          this.autoCorrection[i].propositions = [\n            {\n              texte: 'par $2$',\n              statut: false,\n              feedback: \"Ce nombre est un nombre impair. Il ,'est pas divisible par $2$\"\n            },\n            {\n              texte: 'par $3$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $3$.\"\n            },\n            {\n              texte: 'par $5$',\n              statut: false,\n              feedback: \"Le chiffre des unités n'est ni $0$ ni $5$.\"\n            },\n            {\n              texte: 'par $9$',\n              statut: false,\n              feedback: \"La somme des chiffres n'est pas divisible par $9$.\"\n            },\n            {\n              texte: 'par aucun',\n              statut: true,\n              feedback: 'Correct !'\n            }\n          ]\n          this.autoCorrection[i].enonce = `$${texNombre2(tableauDeNombres[i])}$ est divisible\\n`\n          break\n      }\n      this.autoCorrection[i].options = {\n        ordered: true,\n        lastChoice: 4\n      }\n      if (!context.isAmc && this.modeQcm) {\n        texte += `$${texNombre2(tableauDeNombres[i])}$ est divisible ${espace}  `\n        texte += propositionsQcm(this, i).texte\n        texte += '<br>'\n      }\n    } // fin de boucle de préparation des question\n    // mise en forme selon les cas de figures\n    // l'enoncé\n    if (context.isHtml && !this.modeQcm) {\n      texte = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n    if (!context.isHtml && !this.modeQcm) {\n      texte = '$\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n    if (!context.isAmc && !this.modeQcm) {\n      texte += '\\\\hline\\n'\n      texte += '\\\\text{... est divisible} & \\\\text{par }2 & \\\\text{par }3 & \\\\text{par }5 & \\\\text{par }9\\\\\\\\\\n'\n      texte += '\\\\hline\\n'\n      for (let k = 0; k < this.nbQuestions; k++) {\n        texte += `${texNombre2(tableauDeNombres[k])} & & & & \\\\\\\\\\n`\n        texte += '\\\\hline\\n'\n      }\n      texte += '\\\\end{array}\\n$'\n    }\n\n    // la correction\n    if (context.isHtml) {\n      texteCorr = '$\\\\def\\\\arraystretch{2.5}\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n    if (!context.isHtml && !context.isAmc) {\n      texteCorr = '$\\\\begin{array}{|l|c|c|c|c|}\\n'\n    }\n\n    if (!context.isAmc) {\n      texteCorr += '\\\\hline\\n'\n      texteCorr += '\\\\text{... est divisible} & \\\\text{par }2 & \\\\text{par }3 & \\\\text{par }5 & \\\\text{par }9\\\\\\\\\\n'\n      texteCorr += '\\\\hline\\n'\n      for (let l = 0; l < this.nbQuestions; l++) {\n        texteCorr += tableauDeNombresAvecCorrection[l]\n        texteCorr += '\\\\hline\\n'\n      }\n      texteCorr += '\\\\end{array}$\\n'\n    }\n    this.listeQuestions.push(texte)\n    this.listeCorrections.push(texteCorr)\n    if (!context.isAmc) {\n      if (this.interactif) {\n        listeQuestionsToContenu(this)\n      } else {\n        listeQuestionsToContenuSansNumero(this)\n      }\n    }\n  }\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte,tooltip];\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte];\n  this.besoinFormulair2eNumerique = false // Sinon this.besoinFormulair2eNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulair2eTexte = false // Sinon this.besoinFormulair2eTexte = [texte,tooltip];\n  this.besoinFormulair2eCaseACocher = false // Sinon this.besoinFormulair2eCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}