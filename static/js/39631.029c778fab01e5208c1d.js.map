{"version":3,"file":"js/39631.029c778fab01e5208c1d.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/2e/2G34-1.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { listeQuestionsToContenu, combinaisonListes, randint, texFraction, texFractionReduite, pgcd, ecritureParentheseSiNegatif } from '../../modules/outils.js'\nexport const titre = 'Alignement de 3 points.'\n/**\n * Description didactique de l'exercice Démontrer alignement de 3 points avec coefficient directeur\n * @author Stéphane Guyon\n * Référence\n * A DEPLACER EN 2G34-1 !!!!!!!!!!!!!!!!!!!\n*/\nexport default function alignementdetroispoints () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = 'Soit $\\\\big(O,\\\\vec i;\\\\vec j\\\\big)$ un repère orthogonal.  Déterminer si les 3 points $A$, $B$ et $C$ suivants sont ou non alignés. <br> '\n  this.nbQuestions = 3\n  this.nbCols = 2 // Uniquement pour la sortie LaTeX\n  this.nbColsCorr = 2 // Uniquement pour la sortie LaTeX\n  this.sup = 1 // Niveau de difficulté\n  this.tailleDiaporama = 100 // Pour les exercices chronométrés. 50 par défaut pour les exercices avec du texte\n  this.video = '' // Id YouTube ou url\n  // this.consigne = 'Déterminer si les points donnés ci-dessous, sont ou non, alignés. <br> <i>On demande une démonstration en lien avec les équations de droites</i>'\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n\n    const typeQuestionsDisponibles = ['oui', 'non'] // On créé 3 types de questions\n    const listeTypeQuestions = combinaisonListes(typeQuestionsDisponibles, this.nbQuestions) // Tous les types de questions sont posés mais l'ordre diffère à chaque \"cycle\"\n    for (let i = 0, texte, xA, yA, xB, yB, xC, yC, k, n1, d1, n2, d2, texteCorr, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      // Boucle principale où i+1 correspond au numéro de la question\n      switch (listeTypeQuestions[i]) { // Suivant le type de question, le contenu sera différent\n        case 'non':\n          xA = randint(-5, 5)\n          yA = randint(-5, 5)\n          xB = randint(-5, 5, xA)\n          yB = randint(-5, 5)\n          xC = randint(-5, 5, xA)\n          yC = randint(-5, 5)\n          n1 = yB - yA\n          d1 = xB - xA\n          n2 = yC - yA\n          d2 = xC - xA\n          if (n1 * d2 === n2 * d1) { // on évite le cas de l'alignement\n            yA = yA + 1\n          }\n          texte = ` $A(${xA};${yA})$ ; $B(${xB};${yB})$ et $C(${xC};${yC})$.`\n          texteCorr = 'Pour déterminer si les points $A$, $B$, et $C$ sont alignés, on va étudier les positions relatives des droites $(AB)$ et $(AC)$'\n          texteCorr += '<br>On observe que les droites ne sont pas verticales car les abscisses des points $A$, $B$ et $C$ sont distinctes.'\n          texteCorr += '<br>On peut donc calculer leur coefficient directeur respectif.'\n          texteCorr += '<br>On sait d\\'après le cours, que le coefficient directeur de la droite $(AB)$, si $x_A\\\\neq x_B$ est  : $m=\\\\dfrac{y_B-y_A}{x_B-x_A}$.'\n          texteCorr += '<br>On applique avec les données de l\\'énoncé pour chacune des deux droites : '\n          texteCorr += `<br>$\\\\bullet  (AB)$ : $m_1=\\\\dfrac{${yB}-${ecritureParentheseSiNegatif(yA)}}{${xB}-${ecritureParentheseSiNegatif(xA)}}=${texFraction(n1, d1)}`\n          if ((pgcd(n1, d1) !== 1 || d1 === 1 || d1 < 0) && n1 !== 0) {\n            texteCorr += `=${texFractionReduite(n1, d1)}`\n          }\n          texteCorr += '$'\n          texteCorr += `<br>$\\\\bullet  (AC)$ : $m_2=\\\\dfrac{${yC}-${ecritureParentheseSiNegatif(yA)}}{${xC}-${ecritureParentheseSiNegatif(xA)}}=${texFraction(n2, d2)}`\n          if ((pgcd(n2, d2) !== 1 || d2 === 1 || d2 < 0) && n2 !== 0) {\n            texteCorr += `=${texFractionReduite(n2, d2)}`\n          }\n          texteCorr += '$'\n          texteCorr += '<br>On onserve que $m_1 \\\\neq m_2$. '\n          texteCorr += '<br>Les droites $(AB)$ et $(AC)$ ne sont donc pas parallèles. '\n          texteCorr += '<br>Les points $A$, $B$ et $C$ ne sont pas alignés. '\n\n          break\n        case 'oui':\n          xA = randint(-4, 4)\n          yA = randint(-4, 4)\n          xB = randint(-4, 4, xA)\n          yB = randint(-4, 4)\n          k = randint(-3, 3, [0, 1])\n          xC = xA + (xB - xA) * k\n          yC = yA + (yB - yA) * k\n          n1 = yB - yA\n          d1 = xB - xA\n          n2 = yC - yA\n          d2 = xC - xA\n          if (n1 * d2 === n2 * d1) { // on évite le cas de l'alignement\n            yA = yA + 1\n          }\n          texte = ` $A(${xA};${yA})$ ; $B(${xB};${yB})$ et $C(${xC};${yC})$.`\n          texteCorr = 'Pour déterminer si les points $A$, $B$, et $C$ sont alignés, on va étudier les positions relatives des droites $(AB)$ et $(AC)$'\n          texteCorr += '<br>On observe déjà que les 3 abscisses sont distinctes. Ni la droite $(AB)$, ni la droite $(AC)$ n\\'est verticale.'\n          texteCorr += '<br>On peut donc calculer leur coefficient directeur respectif.'\n          texteCorr += '<br>On sait d\\'après le cours, que le coefficient directeur de la droite $(AB)$, si $x_A\\\\neq x_B$ est  : $m=\\\\dfrac{y_B-y_A}{x_B-x_A}$.'\n          texteCorr += '<br>On applique avec les données de l\\'énoncé pour chacune des deux droites : '\n          texteCorr += `<br>$\\\\bullet  (AB)$ : $m_1=\\\\dfrac{${yB}-${ecritureParentheseSiNegatif(yA)}}{${xB}-${ecritureParentheseSiNegatif(xA)}}=${texFraction(n1, d1)}`\n          if ((pgcd(n1, d1) !== 1 || d1 === 1 || d1 < 0) && n1 !== 0) {\n            texteCorr += `=${texFractionReduite(n1, d1)}`\n          }\n          texteCorr += '$'\n\n          texteCorr += `<br>$\\\\bullet  (AC)$ : $m_2=\\\\dfrac{${yC}-${ecritureParentheseSiNegatif(yA)}}{${xC}-${ecritureParentheseSiNegatif(xA)}}=${texFraction(n2, d2)}`\n          if ((pgcd(n2, d2) !== 1 || d2 === 1 || d2 < 0) && n2 !== 0) {\n            texteCorr += `=${texFractionReduite(n2, d2)}`\n          }\n          texteCorr += '$'\n\n          texteCorr += '<br>On onserve que $m_1 = m_2$. '\n          texteCorr += '<br>Les droites $(AB)$ et $(AC)$ ont le même coefficient directeur, elles sont donc parallèles. '\n          texteCorr += '<br>Le point $A$ appartenant aux deux droites parallèles, $(AB)$ et $(AC)$ sont des droites confondues.'\n          texteCorr += '<br>On en déduit que les points $A$, $B$ et $C$ sont alignés. '\n          break\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte)\n        this.listeCorrections.push(texteCorr)\n        i++\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  // this.besoinFormulaireNumerique = ['Niveau de difficulté', 2,'1 : Facile\\n2 : Difficile'];\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré.\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  this.listeArguments = []\n\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   *\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","alignementdetroispoints","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","sup","tailleDiaporama","video","nouvelleVersion","listeQuestions","listeCorrections","listeTypeQuestions","combinaisonListes","texte","xA","yA","xB","yB","xC","yC","k","n1","d1","n2","d2","texteCorr","i","cpt","randint","ecritureParentheseSiNegatif","texFraction","pgcd","texFractionReduite","indexOf","push","listeQuestionsToContenu","boutonAide","consigneCorrection","introduction","contenu","contenuCorrection","autoCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","correctionDetailleeDisponible","correctionDetaillee","interactif","interactifObligatoire","besoinFormulaireNumerique","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString"],"sourceRoot":""}