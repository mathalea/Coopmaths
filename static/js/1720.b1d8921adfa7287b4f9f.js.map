{"version":3,"sources":["webpack://mathalea/./src/js/exercices/4e/4G53.js","webpack://mathalea/./src/js/exercices/6e/6M30.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"names":["titre","Calcul_de_volumes_4e","Calcul_de_volumes","this","sup","classe","typesDeQuestionsDisponibles","Exercice","consigne","nbQuestions","nbCols","nbColsCorr","nouvelleVersion","listeTypeDeQuestions","combinaisonListes","listeQuestions","listeCorrections","partieDecimale1","partieDecimale2","partieDecimale3","liste_unites","sup2","calcul","randint","texte","texteCorr","L","l","h","c","r","j","i","cpt","texNombre","texNombrec","arrondi","Math","PI","texFraction","indexOf","push","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","spacing","spacingCorr","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactif","interactifObligatoire","qcm","qcmDisponible","modeQcm","autoCorrection","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/1720.b1d8921adfa7287b4f9f.js","sourcesContent":["import Calcul_de_volumes from '../6e/6M30.js'\n\nexport const titre = 'Calculs de volumes'\n\n/**\n * @author Jean-claude Lhote\n */\nexport default function Calcul_de_volumes_4e() {\n  Calcul_de_volumes.call(this);\n  this.titre = titre;\n  this.sup = 1;\n  this.classe = 4;\n\n}\n","import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport {listeQuestionsToContenu,randint,combinaisonListes,arrondi,calcul,texNombrec,texNombre,texFraction} from '../../modules/outils.js'\n\nexport const titre = 'Calculs de volumes'\n\n/**\n * Calcul de volumes (cube et pavé droit).\n * @author Jean-Claude Lhote // modifié par Mireille Gain pour y ajouter les décimaux\n * référence 6M30\n */\n\nexport default function Calcul_de_volumes() {\n  \"use strict\";\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"Calculer, en détaillant, le volume des solides donnés.\";\n  this.nbQuestions = 4;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = 1;\n  this.classe=6\n\n  let typesDeQuestionsDisponibles;\n\n  this.nouvelleVersion = function () {\n    if (this.classe == 6)\n      typesDeQuestionsDisponibles = [1, 2];\n\n    // sixième : cube et pavé droit\n    else if (this.classe == 5)\n      typesDeQuestionsDisponibles = [1, 2, 3, 4];\n\n    // cinquième : on ajoute les prismes et le cylindre\n    else if (this.classe == 4)\n      typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6];\n\n    // Quatrième : on ajoute pyramides et cones\n    else\n      typesDeQuestionsDisponibles = [1, 2, 3, 4, 5, 6, 7]; // Troisième : on ajoute les boules.\n    let listeTypeDeQuestions = combinaisonListes(\n      typesDeQuestionsDisponibles,\n      this.nbQuestions\n    ); // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n    let liste_unites = [\n      [`~\\\\text{m}`, `~\\\\text{m}^3`],\n      [`~\\\\text{dm}`, `~\\\\text{dm}^3`],\n      [`~\\\\text{cm}`, `~\\\\text{cm}^3`],\n      [`~\\\\text{mm}`, `~\\\\text{mm}^3`],\n    ];\n    let partieDecimale1, partieDecimale2, partieDecimale3;\n    if (this.sup2) {\n      partieDecimale1 = calcul(randint(1, 9) / 10 * randint(0, 1));\n      partieDecimale2 = calcul(randint(1, 9) / 10 * randint(0, 1));\n      partieDecimale3 = calcul(randint(1, 9) / 10 * randint(0, 1));\n    }\n    else {\n      partieDecimale1 = 0;\n      partieDecimale2 = 0;\n      partieDecimale3 = 0;\n    }\n    for (let i = 0, texte, texteCorr, L, l, h, c, r, j, cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      switch (listeTypeDeQuestions[i]) {\n        case 1: // cube\n          c = calcul(randint(2, 10) + partieDecimale1);\n          j = randint(0, 3); // pour le choix de l'unité\n          texte = `Un cube de $${texNombre(c)} ${liste_unites[j][0]}$ d'arête.`;\n          texteCorr = `$\\\\mathcal{V}= c^3 =c \\\\times c \\\\times c = ${texNombre(c)}${liste_unites[j][0]}\\\\times${texNombre(c)}${liste_unites[j][0]}\\\\times${texNombre(c)}${liste_unites[j][0]}=${texNombrec(c * c * c)}${liste_unites[j][1]}$`;\n          break;\n        case 2: // pavé droit\n          if (this.sup == 1) {\n            //sans conversion\n            j = randint(0, 3); // pour le choix de l'unité\n            l = calcul(randint(2, 5) + partieDecimale1);\n            h = calcul(randint(3, 6) + partieDecimale2);\n            L = calcul(randint(6, 10) + partieDecimale3);\n            texte = `Un pavé droit de $${texNombre(l)}${liste_unites[j][0]}$ de largeur, de $${texNombre(L)}${liste_unites[j][0]}$ de longueur et de $${texNombre(h)}${liste_unites[j][0]}$ de hauteur.`;\n            texteCorr = `$\\\\mathcal{V}= l \\\\times L \\\\times h = ${texNombre(l)}${liste_unites[j][0]}\\\\times${texNombre(L)}${liste_unites[j][0]}\\\\times${texNombre(h)}${liste_unites[j][0]}=${texNombrec(l * L * h)}${liste_unites[j][1]}$`;\n          } else {\n            // avec conversion\n            j = randint(1, 2); // pour le choix de l'unité  centrale\n            l = calcul(randint(2, 5) + partieDecimale1);\n            h = calcul(randint(3, 6) * 10 + partieDecimale2);\n            L = arrondi(randint(6, 10) / 10, 1);\n            texte = `Un pavé droit de $${texNombre(l)}${liste_unites[j][0]}$ de largeur, de $${texNombre(L)}${liste_unites[j - 1][0]}$ de longueur et de $${texNombre(h)}${liste_unites[j + 1][0]}$ de hauteur.`;\n            texteCorr = `$\\\\mathcal{V}= l \\\\times L \\\\times h = ${texNombre(l)}${liste_unites[j][0]}\\\\times${texNombre(L)}${liste_unites[j - 1][0]}\\\\times${texNombre(h)}${liste_unites[j + 1][0]}=${l}${liste_unites[j][0]}\\\\times${texNombrec(L * 10)}${liste_unites[j][0]}\\\\times${texNombrec(h / 10)}${liste_unites[j][0]}=${texNombrec(\n              arrondi(l * L * h)\n            )}${liste_unites[j][1]}$`;\n          }\n          break;\n        case 3: // Cylindre\n          if (this.sup == 1) {\n            //sans conversion\n            j = randint(0, 3); // pour le choix de l'unité\n            r = randint(2, 10);\n            h = randint(2, 15);\n            texte = `Un cylindre de $${r}${liste_unites[j][0]}$ de rayon et de $${texNombre(h)}${liste_unites[j][0]}$ de hauteur.`;\n            texteCorr = `$\\\\mathcal{V}=\\\\pi \\\\times R ^2 \\\\times h =\\\\pi\\\\times\\\\left(${r}${liste_unites[j][0]}\\\\right)^2\\\\times${h}${liste_unites[j][0]}=${texNombrec(\n              r * r * h\n            )}\\\\pi${liste_unites[j][1]}\\\\approx${texNombrec(\n              arrondi(r * r * h * Math.PI, 1)\n            )}${liste_unites[j][1]}$`;\n          } else {\n            j = randint(2, 3); // pour le choix de l'unité\n            r = randint(2, 10);\n            h = randint(20, 150);\n            texte = `Un cylindre de $${r}${liste_unites[j][0]}$ de rayon et de $${texNombrec(h / 10)}${liste_unites[j - 1][0]}$ de hauteur.`;\n            texteCorr = `$\\\\mathcal{V}=\\\\pi \\\\times R ^2 \\\\times h =\\\\pi\\\\times\\\\left(${r}${liste_unites[j][0]}\\\\right)^2\\\\times${texNombrec(h / 10)}${liste_unites[j - 1][0]}=\\\\pi\\\\times${r * r}${liste_unites[j][0]}^2\\\\times${h}${liste_unites[j][0]}=${texNombrec(r * r * h)}\\\\pi${liste_unites[j][1]}\\\\approx${texNombrec(calcul(r * r * h * Math.PI, 1))}${liste_unites[j][1]}$`;\n          }\n          break;\n        case 4: // prisme droit\n          if (this.sup == 1) {\n            //sans conversion\n            j = randint(0, 3); // pour le choix de l'unité\n            c = calcul(randint(2, 10) + partieDecimale3);\n            h = randint(2, 5);\n            l = randint(6, 10);\n            texte = `Un prisme droit de hauteur $${texNombre(l)}${liste_unites[j][0]}$ et dont les bases sont des triangles de base $${texNombre(c)}${liste_unites[j][0]}$ et de hauteur correspondante $${h}${liste_unites[j][0]}$.`;\n            texteCorr = `$\\\\mathcal{V}=\\\\mathcal{B} \\\\times h=\\\\dfrac{${texNombre(c)}${liste_unites[j][0]}\\\\times${texNombre(h)}${liste_unites[j][0]}}{2}\\\\times${texNombre(l)}${liste_unites[j][0]}=${texNombrec(arrondi(calcul((c * h * l) / 2), 1))}${liste_unites[j][1]}$`;\n          } else {\n            j = randint(1, 2); // pour le choix de l'unité\n            c = calcul(randint(2, 10) + partieDecimale3);\n            h = randint(30, 50);\n            l = arrondi(randint(5, 15) / 10, 1);\n            texte = `Un prisme droit de hauteur $${texNombre(l)}${liste_unites[j - 1][0]}$ et dont les bases sont des triangles de base $${texNombre(c)}${liste_unites[j][0]}$ et de hauteur correspondante $${h}${liste_unites[j + 1][0]}$.`;\n            texteCorr = `$\\\\mathcal{V}=\\\\mathcal{B} \\\\times h=\\\\dfrac{${c}${liste_unites[j][0]}\\\\times${h}${liste_unites[j + 1][0]}}{2}\\\\times${texNombrec(l)}${liste_unites[j - 1][0]}=\\\\dfrac{${c}${liste_unites[j][0]}\\\\times${texNombrec(\n              calcul(h / 10)\n            )}${liste_unites[j][0]}}{2}\\\\times${l * 10}${liste_unites[j][0]}=${texNombrec(calcul((c * h * l) / 2))}${liste_unites[j][1]}$`;\n          }\n          break;\n        case 5: // cone\n          if (this.sup == 1) {\n            //sans conversion\n            j = randint(0, 3); // pour le choix de l'unité\n            r = randint(2, 10);\n            h = randint(2, 15);\n            texte = `Un cône de $${r}${liste_unites[j][0]}$ de rayon et de $${texNombre(h)}${liste_unites[j][0]}$ de hauteur.`;\n            texteCorr = `$\\\\mathcal{V}=\\\\dfrac{1}{3} \\\\times \\\\mathcal{B} \\\\times h=\\\\dfrac{1}{3}\\\\times\\\\pi\\\\times\\\\left(${r}${liste_unites[j][0]}\\\\right)^2\\\\times${h}${liste_unites[j][0]}=${texFraction(\n              r * r * h,\n              3\n            )}\\\\pi${liste_unites[j][1]}\\\\approx${texNombrec(\n              arrondi((r * r * h * Math.PI) / 3)\n            )}${liste_unites[j][1]}$`;\n          } else {\n            j = randint(2, 3); // pour le choix de l'unité\n            r = randint(2, 10);\n            h = randint(20, 150);\n            texte = `Un cône de $${texNombre(r)}${liste_unites[j][0]}$ de rayon et de $${texNombrec(h / 10)}${liste_unites[j - 1][0]}$ de hauteur.`;\n            texteCorr = `$\\\\mathcal{V}=\\\\dfrac{1}{3} \\\\times \\\\mathcal{B} \\\\times h=\\\\dfrac{1}{3}\\\\times\\\\pi\\\\times\\\\left(${r}${liste_unites[j][0]}\\\\right)^2\\\\times${texNombrec(calcul(h / 10))}${liste_unites[j - 1][0]}=\\\\dfrac{1}{3}\\\\times\\\\pi\\\\times\\\\left(${r}${liste_unites[j][0]}\\\\right)^2\\\\times${texNombrec(h)}${liste_unites[j][0]}=${texFraction(r * r * h, 3)}\\\\pi\\\\approx${texNombrec(\n              calcul((r * r * h * Math.PI) / 3, 1)\n            )}${liste_unites[j][1]}$`;\n          }\n          break;\n        case 6: // pyramide\n          if (this.sup == 1) {\n            //sans conversion\n            j = randint(0, 3); // pour le choix de l'unité\n            c = calcul(randint(2, 10) + partieDecimale2);\n            h = randint(2, 5);\n            l = randint(6, 10);\n            texte = `Une pyramide de hauteur $${h}${liste_unites[j][0]}$ et dont la base  est un carré de $${texNombre(c)}${liste_unites[j][0]}$ de côté.`;\n            texteCorr = `$\\\\mathcal{V}=\\\\dfrac{1}{3} \\\\times \\\\mathcal{B} \\\\times h=\\\\dfrac{1}{3}\\\\times\\\\left(${texNombre(c)}${liste_unites[j][0]}\\\\right)^2\\\\times${h}${liste_unites[j][0]}`;\n            if (calcul((c * c * h) / 3, false) == arrondi((c * c * h) / 3, 1))\n              texteCorr += `=${texNombrec(\n                arrondi(calcul((c * c * h) / 3), 1)\n              )}${liste_unites[j][1]}$`;\n\n            else\n              texteCorr += `\\\\approx${texNombrec(\n                arrondi(calcul((c * c * h) / 3), 1)\n              )}${liste_unites[j][1]}$`;\n          } else {\n            j = randint(1, 2); // pour le choix de l'unité\n            c = calcul(randint(2, 10) + partieDecimale2);\n            h = randint(30, 50);\n            l = arrondi(randint(5, 15) / 10, 1);\n            texte = `Une pyramide de hauteur $${texNombrec(h / 10)}${liste_unites[j - 1][0]}$ et dont la base  est un carré de $${texNombre(c)}${liste_unites[j][0]}$ et de hauteur correspondante $${h}${liste_unites[j + 1][0]}$.`;\n            texteCorr = `$\\\\mathcal{V}=\\\\dfrac{1}{3} \\\\times \\\\mathcal{B} \\\\times h=\\\\dfrac{1}{3}\\\\times\\\\left(${texNombre(c)}${liste_unites[j][0]}\\\\right)^2\\\\times${texNombrec(h / 10)}${liste_unites[j - 1][0]}=\\\\dfrac{1}{3}\\\\times${c * c}${liste_unites[j][0]}^2\\\\times${texNombrec(h)}${liste_unites[j][0]}`;\n            if (calcul((c * c * h) / 3, false) == arrondi((c * c * h) / 3, 1))\n              texteCorr += `=${texNombrec(\n                arrondi(calcul((c * h * c) / 3), 1)\n              )}${liste_unites[j][1]}$`;\n\n            else\n              texteCorr += `\\\\approx${texNombrec(\n                arrondi(calcul((c * h * c) / 3), 1)\n              )}${liste_unites[j][1]}$`;\n          }\n          break;\n        case 7: // boule\n          j = randint(0, 3); // pour le choix de l'unité\n          r = randint(2, 10);\n          texte = `Une boule de $${r}${liste_unites[j][0]}$ de rayon.`;\n          texteCorr = `$\\\\mathcal{V}=\\\\dfrac{4}{3} \\\\times \\\\pi \\\\times R^3=\\\\dfrac{4}{3}\\\\times\\\\pi\\\\times\\\\left(${r}${liste_unites[j][0]}\\\\right)^3=${texFraction(calcul(4 * r * r * r), 3)}\\\\pi${liste_unites[j][1]}\\\\approx${texNombrec(\n            arrondi(calcul((4 * Math.PI * r * r * r) / 3), 1)\n          )}${liste_unites[j][1]}$`;\n          break;\n      }\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en crée une autre\n        this.listeQuestions.push(texte);\n        this.listeCorrections.push(texteCorr);\n        i++;\n      }\n      cpt++;\n    }\n    listeQuestionsToContenu(this);\n  };\n  this.besoinFormulaireNumerique = [\n    \"Niveau de difficulté\",\n    2,\n    \"1 : Sans conversions\\n2 : Avec des conversions\",\n  ];\n  this.besoinFormulaire2CaseACocher = [\"Avec des décimaux\", false];\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,labelBouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,idYoutube,texte,labelBouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,urlPdf,texte=\"Aide\",labelBouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}