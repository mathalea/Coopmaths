{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6N31-3.js","webpack://mathalea/./src/js/exercices/Exercice.js","webpack://mathalea/./src/js/modules/gestionInteractif.js","webpack://mathalea/./src/js/modules/dom.js","webpack://mathalea/./src/js/modules/messages.js"],"names":["amcReady","amcType","interactifReady","titre","ArrondirUneValeur","Exercice","this","nbQuestions","nbCols","nbColsCorr","sup","sup2","interactif","context","spacingCorr","nouvelleVersion","parseInt","autoCorrection","consigne","tabrep","tabicone","preTabRep","m","c","d","u","di","ci","mi","me","ce","de","n","den","num","nb","rac","preTabIcone","espace","listeQuestions","listeCorrections","i","texte","texteCorr","cpt","randint","calcul","texNombre","choice","texFraction","troncature","listeNombresPremiersStrictJusqua","Math","sqrt","miseEnEvidence","shuffle2tableaux","push","enonce","options","vertical","ordered","propositions","statut","feedback","modeQcm","indexOf","propositionsQcm","length","listeQuestionsToContenu","besoinFormulaireNumerique","besoinFormulaire2CaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","spacing","beamer","besoinFormulaireTexte","besoinFormulaireCaseACocher","consigneModifiable","nbQuestionsModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","interactifObligatoire","qcm","qcmDisponible","tableauSolutionsDuQcm","mg32Editable","numeroExercice","listePackages","exerciceInteractif","exercice","document","addEventListener","button","querySelector","event","spanReponseLigne","champTexte","getElementById","value","replaceAll","reponse","valeur","toString","innerHTML","readOnly","style","fontSize","classList","add","questionNumerique","$","checkbox","monRouge","monVert","indiceFeedback","nbBonnesReponses","nbMauvaisesReponses","nbBonnesReponsesAttendues","k","forEach","proposition","indice","label","check","backgroundColor","checked","typeFeedback","messageFeedback","id","type","querySelectorAll","uicheck","exerciceQcm","undefined","shuffleJusqua","lastChoice","doublonsTrouves","j","splice","elimineDoublons","rep","ajouteChampTexte","texteApres","inline","numeric","setReponse","a","digits","decimals","signe","exposantNbChiffres","exposantSigne","approx","param","hasProp","object","prop","Object","prototype","hasOwnProperty","call","setStyles","elt","styles","split","paire","exec","key","error","console","addText","text","appendChild","window","createTextNode","get","strict","TypeError","Error","addElement","parent","tag","attrs","content","txtContent","createElement","attr","className","class","setAttribute","create","types","addFeedback","container","message","level","includes","div","cssIcon","remove","divTitre","messageUtilisateur","code","width"],"mappings":"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","file":"js/7503.330d8f36b66146348a3c.js","sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeNombresPremiersStrictJusqua, shuffle2tableaux, choice, listeQuestionsToContenu, randint, troncature, calcul, texNombre, miseEnEvidence, texFraction } from '../../modules/outils.js'\nimport { propositionsQcm } from '../../modules/gestionInteractif.js'\n\nexport const amcReady = true\nexport const amcType = 2 // type de question AMC\nexport const interactifReady = true\nexport const titre = 'Arrondir une valeur'\n\n/**\n * * Encadrer_puis_arrondir_une_valeur\n * * 6N31-3\n * @author Mireille Gain, s'inspirant de 6N31-1 de Sébastien Lozano\n */\n\nexport default function ArrondirUneValeur () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n\n  this.nbQuestions = 3\n  this.nbCols = 3\n  this.nbColsCorr = 1\n  this.sup = 1\n  this.sup2 = false\n  this.interactifReady = true\n  this.interactif = true\n  this.amcType = amcType\n  context.isHtml ? (this.spacingCorr = 2.5) : (this.spacingCorr = 3.5)\n\n  this.nouvelleVersion = function () {\n    this.sup = parseInt(this.sup)\n    this.autoCorrection = []\n    if (!context.isAmc && !this.interactif) {\n      this.consigne = \"Encadrer chaque nombre à l'unité, puis au dixième, puis au centième.<br>Dans chaque cas, mettre ensuite en évidence son arrondi.\"\n    } else {\n      this.consigne = \"Quelles sont les encadrements où la valeur orange est la valeur arrondie du nombre à l'unité, au dixième et au centième\"\n    }\n    const tabrep = []; const tabicone = []; const preTabRep = []; let preTabIcone = []\n    let espace = ''\n    if (context.isHtml) {\n      espace = '<br>'\n    } else {\n      espace = '\\\\\\\\'\n    }\n    this.listeQuestions = []\n    this.listeCorrections = []\n    let m, c, d, u, di, ci, mi, me, ce, de, n, den, num, nb, rac\n\n    for (let i = 0, texte = '', texteCorr = '', cpt = 0; i < this.nbQuestions && cpt < 50;) {\n      this.autoCorrection[i] = {}\n      if (this.sup === 1) {\n        m = randint(0, 9)\n        c = randint(0, 9)\n        d = randint(0, 9)\n        u = randint(0, 9)\n        di = randint(1, 9)\n        ci = randint(1, 9)\n        mi = randint(1, 9, 5)\n        me = randint(0, 1)\n        ce = randint(0, 1)\n        de = randint(0, 1)\n        n = me * m * 1000 + ce * c * 100 + de * d * 10 + u * 1 + calcul(di * 0.1 + ci * 0.01 + mi * 0.001)\n        nb = texNombre(n)\n      } else if (this.sup === 2) {\n        den = choice([7, 9, 11, 13])\n        num = randint(1, 50, [7, 9, 11, 13, 14, 18, 21, 22, 26, 27, 28, 33, 35, 36, 39, 42, 44, 45, 49])\n        n = num / den\n        nb = texFraction(num, den)\n        di = 10 * (troncature(n - troncature(n, 0), 1))\n        ci = 100 * (troncature(n - troncature(n, 1), 2))\n        mi = 1000 * (troncature(n - troncature(n, 2), 3))\n      } else if (this.sup === 3) {\n        rac = randint(2, 300, [listeNombresPremiersStrictJusqua(300)])\n        n = Math.sqrt(rac)\n        nb = `\\\\sqrt{${rac}}`\n        di = 10 * (troncature(n - troncature(n, 0), 1))\n        ci = 100 * (troncature(n - troncature(n, 1), 2))\n        mi = 1000 * (troncature(n - troncature(n, 2), 3))\n      }\n\n      if (this.sup === 1) texte = `$${nb}$`\n      else if (this.sup === 2) texte = `$\\\\text{Quand~on~écrit~sur~la~calculatrice~} ${num}\\\\div ${den}, \\\\text{~elle~renvoie} : ${texNombre(n)}$`\n      else if (this.sup === 3) texte = `$\\\\text{Quand~on~écrit~sur~la~calculatrice~} ${nb}, \\\\text{~elle~renvoie} : ${texNombre(n)}$`\n\n      texteCorr = \"Encadrement et arrondi à l'unité : \"\n      if (di < 5) {\n        texteCorr += `$\\\\phantom{1234567}${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n        preTabRep[0] = `$${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n        preTabRep[1] = `$${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      } else {\n        texteCorr += `$\\\\phantom{1234567}${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        preTabRep[0] = `$${texNombre(troncature(n, 0))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 1, 0)))}$`\n        preTabRep[1] = `$${miseEnEvidence(texNombre(troncature(n, 0)))} < ${nb} < ${texNombre(troncature(n + 1, 0))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      }\n\n      texteCorr += '<br>Encadrement et arrondi au dixième : '\n      if (ci < 5) {\n        texteCorr += `$\\\\phantom{123}${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        preTabRep[0] = `$${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        preTabRep[1] = `$${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      } else {\n        texteCorr += `$\\\\phantom{123}${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        preTabRep[0] = `$${texNombre(troncature(n, 1))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.1, 1)))}$`\n        preTabRep[1] = `$${miseEnEvidence(texNombre(troncature(n, 1)))} < ${nb} < ${texNombre(troncature(n + 0.1, 1))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      }\n\n      texteCorr += '<br>Encadrement et arrondi au centième : $~$'\n      if (mi < 5) {\n        texteCorr += `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        preTabRep[0] = `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        preTabRep[1] = `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      } else {\n        texteCorr += `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        preTabRep[0] = `$${texNombre(troncature(n, 2))} < ${nb} < ${miseEnEvidence(texNombre(troncature(n + 0.01, 2)))}$`\n        preTabRep[1] = `$${miseEnEvidence(texNombre(troncature(n, 2)))} < ${nb} < ${texNombre(troncature(n + 0.01, 2))}$`\n        preTabIcone = [true, false]\n        if (choice([false, true])) {\n          shuffle2tableaux(preTabRep, preTabIcone)\n        }\n        tabrep.push(preTabRep[0], preTabRep[1])\n        tabicone.push(preTabIcone[0], preTabIcone[1])\n      }\n      this.autoCorrection[i].enonce = `Quels sont les encadrements où la valeur orange est l'arrondi de ${texte} ?\\\\\\\\ \\n Réponses possibles`\n      this.autoCorrection[i].options = { vertical: true, ordered: true }\n      this.autoCorrection[i].propositions = [\n        {\n          texte: tabrep[0],\n          statut: tabicone[0],\n          feedback: ''\n        },\n        {\n          texte: tabrep[1],\n          statut: tabicone[1],\n          feedback: ''\n        },\n        {\n          texte: tabrep[2],\n          statut: tabicone[2],\n          feedback: ''\n        },\n        {\n          texte: tabrep[3],\n          statut: tabicone[3],\n          feedback: ''\n        },\n        {\n          texte: tabrep[4],\n          statut: tabicone[4],\n          feedback: ''\n        },\n        {\n          texte: tabrep[5],\n          statut: tabicone[5],\n          feedback: ''\n        }\n      ]\n      if (this.modeQcm && !context.isAmc) {\n        texte += '<br><br>Réponses possibles : <br>  '\n        texteCorr = ''\n        // shuffle2tableaux(tabrep, tabicone);\n        for (let i = 0; i < 6; i++) {\n          texte += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n          if (tabicone[i] === 1) {\n            texteCorr += `$\\\\blacksquare\\\\;$ ${tabrep[i]}` + espace\n          } else {\n            texteCorr += `$\\\\square\\\\;$ ${tabrep[i]}` + espace\n          }\n        }\n      }\n\n      if (this.listeQuestions.indexOf(texte) === -1) {\n        // Si la question n'a jamais été posée, on en créé une autre\n        if (this.interactif) {\n          texte += propositionsQcm(this, i).texte\n        }\n        this.listeQuestions.push(texte) // Sinon on enregistre la question dans listeQuestions\n        this.listeCorrections.push(texteCorr) // On fait pareil pour la correction\n        tabrep.length = 0\n        tabicone.length = 0\n        i++ // On passe à la question suivante\n      }\n      cpt++\n    }\n    listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Type de nombre', 2, '1 : Nombre décimal\\n 2 : Fraction']\n  this.besoinFormulaire2CaseACocher = ['Affichage de la valeur donnée à la calculatrice', false]\n}\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.interactif = false // Exercice sans saisie utilisateur par défaut\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactiveout\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n","/* global $ */\nimport { context } from './context.js'\nimport { shuffleJusqua } from './outils.js'\nimport { messageFeedback } from './messages.js'\n\nexport function exerciceInteractif (exercice) {\n  if (exercice.amcType === 4 || exercice.amcType === 5) questionNumerique(exercice)\n  if (exercice.amcType === 1 || exercice.amcType === 2) exerciceQcm(exercice)\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function exerciceQcm (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    // On active les checkbox\n    $('.ui.checkbox').checkbox()\n    // Couleur pour surligner les label avec une opacité de 50%\n    const monRouge = 'rgba(217, 30, 24, 0.5)'\n    const monVert = 'rgba(123, 239, 178, 0.5)'\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        for (let i = 0; i < exercice.nbQuestions; i++) {\n          // i est l'indice de la question\n          let nbBonnesReponses = 0\n          let nbMauvaisesReponses = 0\n          let nbBonnesReponsesAttendues = 0\n          let indiceFeedback\n          // Compte le nombre de réponses justes attendues\n          for (let k = 0; k < exercice.autoCorrection[i].propositions.length; k++) {\n            if (exercice.autoCorrection[i].propositions[k].statut) nbBonnesReponsesAttendues++\n          }\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          exercice.autoCorrection[i].propositions.forEach((proposition, indice) => {\n            const label = document.querySelector(`#labelEx${exercice.numeroExercice}Q${i}R${indice}`)\n            const check = document.querySelector(`#checkEx${exercice.numeroExercice}Q${i}R${indice}`)\n            if (proposition.statut) {\n              label.style.backgroundColor = monVert\n              if (check.checked) {\n                nbBonnesReponses++\n                indiceFeedback = indice\n              }\n            } else if (check.checked === true) {\n              label.style.backgroundColor = monRouge\n              nbMauvaisesReponses++\n              indiceFeedback = indice\n            }\n          })\n          let typeFeedback = 'positive'\n          if (nbMauvaisesReponses === 0 && nbBonnesReponses === nbBonnesReponsesAttendues) {\n            spanReponseLigne.innerHTML = '😎'\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            typeFeedback = 'error'\n          }\n          spanReponseLigne.style.fontSize = 'large'\n          if (indiceFeedback > -1) {\n            messageFeedback({\n              id: `feedbackEx${exercice.numeroExercice}Q${i}`,\n              texte: exercice.autoCorrection[i].propositions[indiceFeedback].feedback,\n              type: typeFeedback\n            })\n          }\n        }\n        const uichecks = document.querySelectorAll(`.ui.checkbox.ex${exercice.numeroExercice}`)\n        uichecks.forEach(function (uicheck) {\n          uicheck.classList.add('read-only')\n        })\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\n/**\n * @param {exercice}\n * @param {i} i indice de la question\n * @returns {object} {texte, texteCorr} le texte à ajouter pour la question traitée\n */\nexport function propositionsQcm (exercice, i) {\n  exercice.titre = 'cacaboudin'\n  let texte = ''\n  let texteCorr = ''\n  let espace = ''\n  if (context.isHtml) {\n    espace = '&emsp;'\n  } else {\n    espace = '\\\\qquad'\n  }\n  // Mélange les propositions du QCM sauf celles à partir de lastchoice (inclus)\n  if (exercice.autoCorrection[i].options !== undefined) {\n    if (!exercice.autoCorrection[i].options.ordered) {\n      exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions, exercice.autoCorrection[i].options.lastChoice)\n    }\n  } else { // Si les options ne sont pas définies, on mélange\n    exercice.autoCorrection[i].propositions = shuffleJusqua(exercice.autoCorrection[i].propositions)\n  }\n  elimineDoublons(exercice.autoCorrection[i].propositions)\n  if (!context.isAmc) {\n    if (context.isHtml) {\n      texte += `<br>  <form id=\"formEx${exercice.numeroExercice}Q${i}\">`\n    } else {\n      texte += '<br>'\n    }\n    for (let rep = 0; rep < exercice.autoCorrection[i].propositions.length; rep++) {\n      if (context.isHtml) {\n        texte += `<div class=\"ui checkbox ex${exercice.numeroExercice} monQcm\">\n            <input type=\"checkbox\" tabindex=\"0\" class=\"hidden\" id=\"checkEx${exercice.numeroExercice}Q${i}R${rep}\">\n            <label id=\"labelEx${exercice.numeroExercice}Q${i}R${rep}\">${exercice.autoCorrection[i].propositions[rep].texte + espace}</label>\n          </div>`\n      } else {\n        texte += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n      if (exercice.autoCorrection[i].propositions[rep].statut) {\n        texteCorr += `$\\\\blacksquare\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      } else {\n        texteCorr += `$\\\\square\\\\;$ ${exercice.autoCorrection[i].propositions[rep].texte}` + espace\n      }\n    }\n    if (context.isHtml) {\n      texte += `<span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>`\n      texte += `\\n<div id=\"feedbackEx${exercice.numeroExercice}Q${i}\"></span></form>`\n    }\n  }\n  return { texte: texte, texteCorr: texteCorr }\n}\n\n/**\n * prend un tableau de propositions [{texte: 'prop1', statut: true, feedback: 'Correct !'}, {texte: 'prop2', statut: false, ....}\n * élimine en cas de doublon la proposition fausse ou la deuxième proposition si elle sont toutes les deux fausses.\n * @author Jean-Claude Lhote\n */\nexport function elimineDoublons (propositions) { // fonction qui va éliminer les doublons si il y en a\n  let doublonsTrouves = false\n  for (let i = 0; i < propositions.length - 1; i++) {\n    for (let j = i + 1; j < propositions.length;) {\n      if (propositions[i].texte === propositions[j].texte) {\n        // les réponses i et j sont les mêmes\n        doublonsTrouves = true\n        if (propositions[i].statut) { // si la réponse i est bonne, on vire la j\n          propositions.splice(j, 1)\n        } else if (propositions[j].statut) { // si la réponse i est mauvaise et la réponse j bonne,\n          // comme ce sont les mêmes réponses, on vire la j mais on met la i bonne\n          propositions.splice(j, 1)\n          propositions[i].statut = true\n        } else { // Les deux réponses sont mauvaises\n          propositions.splice(j, 1)\n        }\n      } else {\n        j++\n      }\n    }\n  }\n  return doublonsTrouves\n}\n\n/**\n * Lorsque l'évènement 'exercicesAffiches' est lancé par mathalea.js\n * on vérifie la présence du bouton de validation d'id btnQcmEx{i} créé par listeQuestionsToContenu\n * et on y ajoute un listenner pour vérifier les réponses cochées\n * @param {object} exercice\n */\nexport function questionNumerique (exercice) {\n  document.addEventListener('exercicesAffiches', () => {\n    const button = document.querySelector(`#btnQcmEx${exercice.numeroExercice}`)\n    if (button) {\n      button.addEventListener('click', event => {\n        let nbBonnesReponses = 0\n        let nbMauvaisesReponses = 0\n        const nbBonnesReponsesAttendues = exercice.nbQuestions\n        for (const i in exercice.autoCorrection) {\n          const spanReponseLigne = document.querySelector(`#resultatCheckEx${exercice.numeroExercice}Q${i}`)\n          // On compare le texte avec la réponse attendue en supprimant les espaces pour les deux\n          const champTexte = document.getElementById(`champTexteEx${exercice.numeroExercice}Q${i}`)\n          if (champTexte.value.replaceAll(' ', '') === exercice.autoCorrection[i].reponse.valeur.toString().replaceAll(' ', '').replaceAll('.',',')) {\n            spanReponseLigne.innerHTML = '😎'\n            nbBonnesReponses++\n          } else {\n            spanReponseLigne.innerHTML = '☹️'\n            nbMauvaisesReponses++\n          }\n          champTexte.readOnly = true\n          spanReponseLigne.style.fontSize = 'large'\n        }\n        button.classList.add('disabled')\n      })\n    }\n  })\n}\n\nexport function ajouteChampTexte (exercice, i, { texte = '', texteApres = '', inline = true, numeric = true } = {}) {\n  if (context.isHtml && exercice.interactif) {\n    return `<div class=\"ui form ${inline ? 'inline' : ''}\" >\n    <div class=\"inline  field\" >\n    <label>${texte}</label>\n      <input type=\"text\" ${numeric ? 'type=\"number\" min=\"0\" inputmode=\"numeric\" pattern=\"[0-9]*\"' : ''}  id=\"champTexteEx${exercice.numeroExercice}Q${i}\" >\n      <span>${texteApres}</span>\n      <span id=\"resultatCheckEx${exercice.numeroExercice}Q${i}\"></span>\n    </div>\n    </div>`\n  } else {\n    return ''\n  }\n}\n\n/**\n * Précise la réponse attendue\n * @param {'objet exercice'} exercice\n * @param {'numero de la question'} i\n * @param {'réponse'} a\n */\nexport function setReponse (exercice, i, a, {digits = 0, decimals = 0, signe = false, exposantNbChiffres = 0, exposantSigne = false, approx = 0} = {}) {\n  if (exercice.autoCorrection[i] === undefined) {\n    exercice.autoCorrection[i] = {}\n  }\n  if (exercice.autoCorrection[i].reponse === undefined) {\n    exercice.autoCorrection[i].reponse = {}\n  }\n\n\n  exercice.autoCorrection[i].reponse.valeur = a\n  exercice.autoCorrection[i].reponse.param = { digits: digits, decimals: decimals, signe: signe, exposantNbChiffres: exposantNbChiffres, exposantSigne: exposantSigne, approx: approx }\n}\n","/**\n * Fonctions de gestion du dom\n * @module\n */\n/**\n * Retourne true si l'objet à la propriété\n * @param {Object} object\n * @param {string} prop\n * @return {boolean}\n */\nconst hasProp = (object, prop) => typeof object === 'object' && Object.prototype.hasOwnProperty.call(object, prop)\n\n/**\n * Affecte des styles à un élément html (on peut pas affecter elt.style directement car read only, faut faire du elt.style.foo = bar)\n * sans planter en cas de pb (on le signale juste en console)\n * @param {HTMLElement} elt\n * @param {string|object} styles\n */\nfunction setStyles (elt, styles) {\n  try {\n    if (elt && elt.style) {\n      if (typeof styles === 'string') {\n        styles = styles.split(';')\n        styles.forEach(function (paire) {\n          paire = /([\\w]+):(.+)/.exec(paire)\n          if (paire) {\n            const [, key, value] = paire\n            elt.style[key] = value\n          }\n        })\n      } else if (typeof styles === 'object') {\n        for (var prop in styles) {\n          if (hasProp(styles, prop)) {\n            elt.style[prop] = styles[prop]\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Ajoute du texte dans un élément\n * @param {HTMLElement} elt\n * @param {string} text\n */\nexport function addText (elt, text) {\n  elt.appendChild(window.document.createTextNode(text))\n}\n\n/**\n * Retourne l'élément du dom\n * @param {string} id\n * @param {boolean} [strict=true] Passer false pour retourner null plutôt que throw une erreur si id n'existe pas\n * @return {HTMLElement}\n * @throws {TypeError} Si id n'est pas une string\n * @throws {Error} Si l'élément id n'existe pas\n */\nexport function get (id, strict = true) {\n  if (typeof id !== 'string') throw TypeError('argument invalide')\n  const elt = document.getElementById(id)\n  if (!elt && strict) throw Error(`L’élément html ${id} n’existe pas`)\n  return elt\n}\n\n/**\n * Retourne un élément html de type tag (non inséré dans le dom)\n * @param {string} tag\n * @param {Object} [attrs] Les attributs\n * @param {string} [txtContent] Contenu textuel éventuel\n */\nexport function create (tag, attrs, txtContent) {\n  const elt = window.document.createElement(tag)\n  let attr\n  try {\n    if (attrs) {\n      for (attr in attrs) {\n        if (hasProp(attrs, attr)) {\n          if (attr === 'class') elt.className = attrs.class\n          else if (attr === 'className') elt.className = attrs.className\n          else if (attr === 'style') setStyles(elt, attrs.style)\n          else elt.setAttribute(attr, attrs[attr])\n        }\n      }\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (txtContent) addText(elt, txtContent)\n\n  return elt\n}\n\n/**\n * Ajoute un élément html de type tag à parent\n * @param {HTMLElement} parent\n * @param {string} tag\n * @param {Object=} attrs Les attributs\n * @param {string=} content\n * @returns {HTMLElement} L'élément ajouté\n */\nexport function addElement (parent, tag, attrs, content) {\n  const elt = create(tag, attrs, content)\n  parent.appendChild(elt)\n  return elt\n}\n","import { addElement, addText, get } from './dom'\n// Module regroupant les fonctions de gestions des erreurs.\n\nconst types = ['info', 'warning', 'error', 'positive']\n\n/**\n * Ajoute le feedback dans container\n * @param {HTMLElement} container\n * @param {Object} erreur\n * @param {string} [erreur.message]\n * @param {string} [erreur.level]\n * @param {string} [erreur.titre]\n */\nexport function addFeedback (container, { message = 'Une erreur est survenue', level = 'erreur', titre = 'Erreur interne' } = {}) {\n  if (!types.includes(level)) {\n    console.error(Error(`type de message inconnu : ${level}`))\n    level = 'error'\n  }\n  const cssDiv = level === 'info' ? '' : level\n  const div = addElement(container, 'div', { className: `ui message ${cssDiv}` })\n  const cssIcon = level === 'error'\n    ? 'frown outline'\n    : (level === 'warning')\n        ? 'bullhorn'\n        : 'bell outline' // info\n  const iconClose = addElement(div, 'i', { className: 'close icon' })\n  iconClose.addEventListener('click', () => div.remove())\n  if (titre) {\n    const divTitre = addElement(div, 'div', { className: 'header' })\n    addElement(divTitre, 'i', { className: `${cssIcon} icon` })\n    addText(divTitre, titre)\n  }\n  addText(div, message)\n}\n\n/**\n* Affiche un message à l'utilisateur\n* @author Cédric GROLLEAU\n* @param {Object} datas\n* @param {string} datas.code codeExerciceInconnu|mg32load|scratchLoad\n* @param {string} [datas.exercice] à fournir si code vaut 'codeExerciceInconnu'\n*/\nexport function messageUtilisateur ({ code, exercice }) {\n  const container = get('containerErreur')\n  switch (code) {\n    case 'codeExerciceInconnu':\n      addFeedback(container, {\n        titre: 'le code de l’exercice n’est pas valide',\n        message: `L'identifiant ${exercice} ne correspond à aucun exercice MathALEA. <br> Ceci est peut-être dû à un lien incomplet ou obsolète. `,\n        level: 'error'\n      })\n      break\n    case 'mg32load':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module mg32',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        level: 'warning'\n      })\n      break\n    case 'scratchLoad':\n      addFeedback(container, {\n        titre: 'Erreur de chargement du module scratch',\n        message: `Une erreur est survenue lors du chargement d'un module pour l'affichage de l'exercice. <br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        level: 'warning'\n      })\n      break\n    default:\n      console.error(Error(`code ${code} non géré par messageUtilisateur`))\n      addFeedback(container, {\n        titre: 'Erreur interne',\n        message: `Une erreur est survenue.<br>\n          Essayez de rafraichir la page. <br> Si l'erreur persiste merci de contacter : <a href=\"mailto:contact@coopmaths.fr\">contact@coopmaths.fr</a>`,\n        level: 'warning'\n      })\n  }\n}\n\n/**\n * Ajoute un feedback (erreur ou encouragement)\n * @param {Object} data\n * @param {string} data.id id du div conteneur à utiliser\n * @param {string} data.texte Le texte à afficher\n * @param {string} data.type error|positive\n * @author Rémi ANGOT\n */\nexport function messageFeedback ({ id, texte = '', type = 'error' } = {}) {\n  if (!id || !texte) return console.error(TypeError('arguments manquants'))\n  const container = get(id)\n  const div = addFeedback(container, { message: texte, level: type })\n  div.style.width = '400px'\n}\n"],"sourceRoot":""}