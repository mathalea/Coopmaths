/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkmathalea"] = self["webpackChunkmathalea"] || []).push([["src_js_exercices_4e_4L13-1_js"],{

/***/ "./src/js/exercices/4e/4L13-1.js":
/*!***************************************!*\
  !*** ./src/js/exercices/4e/4L13-1.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"titre\": () => (/* binding */ titre),\n/* harmony export */   \"default\": () => (/* binding */ Forme_litterale_introduire_une_lettre)\n/* harmony export */ });\n/* harmony import */ var _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClasseExercice.js */ \"./src/js/exercices/ClasseExercice.js\");\n/* harmony import */ var _modules_outils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/outils.js */ \"./src/js/modules/outils.js\");\n\n\nconst titre = 'Produire une forme littérale en introduisant une lettre pour désigner une valeur inconnue'\n\n/**\n * Produire une forme littérale en introduisant une lettre pour désigner une valeur inconnue\n * * 4L13-1\n * @author Sébastien Lozano\n */\nfunction Forme_litterale_introduire_une_lettre() {\n  'use strict';\n  _ClasseExercice_js__WEBPACK_IMPORTED_MODULE_0__.default.call(this); // Héritage de la classe Exercice()\n  this.debug = false;\n  this.sup = 1;\n  if (this.debug) {\n    this.nb_questions = 3;\n  } else {\n    this.nb_questions = 2;\n  };\n\n  this.titre = titre;\n  this.consigne = \"Exprimer le prix total de l'achat, en fonction des lettres introduites dans l'énoncé.\";\n\n  this.nb_cols = 1;\n  this.nb_cols_corr = 1;\n  //this.nb_questions_modifiable = false;\n  //sortie_html? this.spacing = 3 : this.spacing = 2; \n  //sortie_html? this.spacing_corr = 3 : this.spacing_corr = 2;\n\n  let type_de_questions_disponibles;\n\n  this.nouvelle_version = function () {\n    if (this.debug) {\n      type_de_questions_disponibles = [1];\n    } else {\n      type_de_questions_disponibles = [1];\n    };\n\n    this.liste_questions = []; // Liste de questions\n    this.liste_corrections = []; // Liste de questions corrigées\n    type_de_questions_disponibles = [1];\n    let liste_type_de_questions = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.combinaison_listes)(type_de_questions_disponibles, this.nb_questions) // Tous les types de questions sont posées mais l'ordre diffère à chaque \"cycle\"\n    //let liste_type_de_questions = combinaison_listes_sans_changer_ordre(type_de_questions_disponibles,this.nb_questions) // Tous les types de questions sont posées --> à remettre comme ci dessus\n\n    for (let i = 0, texte, texte_corr, cpt = 0; i < this.nb_questions && cpt < 50;) {\n\n      // une fonction pour gérer le pluriel \n      function pluriel(n, obj) {\n        if (n > 1) {\n          return obj.plur\n        } else {\n          return obj.sing\n        };\n      };\n\n      // une fonction pour gérer la chaine de sortie et supprimer le coeff 1 !\n      function sliceUn(n) {\n        if (n == 1) {\n          return ``;\n        } else {\n          return `${n}`;\n        };\n      };\n\n      // on definit un tableau de couples possibles\t\t\t\n      let situations = [\n        { prenom: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)(), elt1: { lettre: 'c', article: 'un', sing: 'crayon', plur: 'crayons' }, elt2: { lettre: 'g', article: 'une', sing: 'gomme', plur: 'gommes' } },\n        { prenom: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)(), elt1: { lettre: 'r', article: 'une', sing: 'règle', plur: 'règles' }, elt2: { lettre: 'e', article: 'une', sing: 'équerre', plur: 'équerres' } },\n        { prenom: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)(), elt1: { lettre: 'p', article: 'une', sing: 'poire', plur: 'poires' }, elt2: { lettre: 'b', article: 'une', sing: 'banane', plur: 'bananes' } },\n        { prenom: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)(), elt1: { lettre: 'c', article: 'un', sing: 'couteau', plur: 'couteaux' }, elt2: { lettre: 'f', article: 'une', sing: 'fourchette', plur: 'fourchettes' } },\n        { prenom: (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.prenom)(), elt1: { lettre: 'm', article: 'un', sing: 'marteau', plur: 'marteaux' }, elt2: { lettre: 'e', article: 'une', sing: 'enclume', plur: 'enclumes' } },\n      ]\n      let enonces = [];\n      let n = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 6);\n      let p = (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(1, 6);\n      let situation = situations[(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.randint)(0, situations.length - 1)];\n      enonces.push({\n        enonce: `${situation.prenom} veut acheter ${n} ${pluriel(n, situation.elt1)} et ${p} ${pluriel(p, situation.elt2)}.\n\t\t\t\t<br>On note $${situation.elt1.lettre}$\tle prix d'${situation.elt1.article} ${situation.elt1.sing} et $${situation.elt2.lettre}$\tle prix d'${situation.elt2.article} ${situation.elt2.sing}.`,\n        question: ``,\n        correction: `\n        ${situation.prenom} va payer $${n}$ fois le prix d'${situation.elt1.article} ${situation.elt1.sing} et $${p}$ fois le prix d'${situation.elt2.article} ${situation.elt2.sing}.\n        <br> C'est à dire $${n}\\\\times ${situation.elt1.lettre} + ${p}\\\\times ${situation.elt2.lettre} = ${sliceUn(n)}${situation.elt1.lettre} + ${sliceUn(p)}${situation.elt2.lettre}$.\n        <br>${(0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.texte_en_couleur)(`Donc le prix total de l'achat est  $${sliceUn(n)}${situation.elt1.lettre} + ${sliceUn(p)}${situation.elt2.lettre}$.`)}\n        `\n      })\n      switch (liste_type_de_questions[i]) {\n        case 1:\n          texte = `${enonces[0].enonce}`;\n          if (this.debug) {\n            texte += `<br>`;\n            texte += `<br> =====CORRECTION======<br>${enonces[0].correction}`;\n            texte_corr = ``;\n          } else {\n            texte_corr = `${enonces[0].correction}`;\n          };\n          break;\n      }\n\n      if (this.liste_questions.indexOf(texte) == -1) { // Si la question n'a jamais été posée, on en créé une autre\n        this.liste_questions.push(texte);\n        this.liste_corrections.push(texte_corr);\n        i++;\n      }\n      cpt++;\n    }\n    (0,_modules_outils_js__WEBPACK_IMPORTED_MODULE_1__.liste_de_question_to_contenu)(this);\n\n  }\n  //this.besoin_formulaire_numerique = ['Niveau de difficulté',2,\"1 : Entiers naturels\\n2 : Entiers relatifs\"];\n  //this.besoin_formulaire2_case_a_cocher = [\"Avec des équations du second degré\"];\t\n}\n\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/4e/4L13-1.js?");

/***/ }),

/***/ "./src/js/exercices/ClasseExercice.js":
/*!********************************************!*\
  !*** ./src/js/exercices/ClasseExercice.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Exercice)\n/* harmony export */ });\n/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nfunction Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = '';\n  this.consigne = '';\n  this.consigne_correction = '';\n  this.liste_questions = []\n  this.liste_corrections = []\n  this.introduction = '';\n  this.contenu = '';\n  this.contenu_correction = '';\n  this.nb_questions = 10\n  this.nb_cols = 2\n  this.nb_cols_corr = 2\n  this.spacing = 1\n  this.spacing_corr = 1\n  this.beamer = false\n\n  this.besoin_formulaire_numerique = false // Sinon this.besoin_formulaire_numerique = [texte,max,tooltip facultatif];\n  this.besoin_formulaire_texte = false // Sinon this.besoin_formulaire_texte = [texte,tooltip];\n  this.besoin_formulaire_case_a_cocher = false // Sinon this.besoin_formulaire_case_a_cocher = [texte];\n  this.consigne_modifiable = true\n  this.nb_questions_modifiable = true\n  this.nb_cols_modifiable = true\n  this.nb_cols_corr_modifiable = true\n  this.spacing_modifiable = true\n  this.spacing_corr_modifiable = true\n  this.correction_detaillee_disponible = false\n  this.correction_detaillee = true\n  this.video = ''\n  this.bouton_aide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.bouton_aide = modal_texte_court(numero_de_l_exercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_texte_long(numero_de_l_exercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.bouton_aide = modal_youtube(numero_de_l_exercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.bouton_aide = modal_pdf(numero_de_l_exercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pas_de_version_LaTeX = false\n  this.QCM = false // Pour les exercices de type QCM : contient un tableau.\n  this.QCM_disponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.ModeQCM\n  this.ModeQCM = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.MG32editable = false //pas d'interface par défaut pour les figures MG32\n  this.nouvelle_version = function (numero_de_l_exercice) {}\n  this.liste_packages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  //this.type_exercice = \"MG32\";\n  //this.taille_div_MG32 = [500, 450];\n  //this.type_exercice = \"Scratch\"\n  // this.QCM=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n\n\n//# sourceURL=webpack://mathalea/./src/js/exercices/ClasseExercice.js?");

/***/ })

}]);