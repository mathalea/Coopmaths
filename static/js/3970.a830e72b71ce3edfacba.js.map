{"version":3,"sources":["webpack://mathalea/./src/js/exercices/6e/6S11.js","webpack://mathalea/./src/js/exercices/ClasseExercice.js"],"names":["titre","Organiser_donnees_depuis_texte","Exercice","this","consigne","nbQuestions","nbQuestionsModifiable","nbCols","nbColsCorr","sup","sup2","sortieHtml","spacing","spacingCorr","nouvelleVersion","listeQuestions","listeCorrections","texte","texteCorr","m","S","nbFruits","parseInt","lstPrenomExo","length","p","prenom","includes","push","lstFruit","lstFruitExo","i","choice","N","lstTabVal","L","j","randint","nbAmis","shuffle","k","texNombre","numAlpha","repeat","premiereLettreEnMajuscule","arrondiVirgule","S_total","lstmax","nmax","fmax","listeQuestionsToContenu","besoinFormulaire2Numerique","besoinFormulaireCaseACocher","consigneCorrection","introduction","contenu","contenuCorrection","beamer","besoinFormulaireNumerique","besoinFormulaireTexte","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","correctionDetailleeDisponible","correctionDetaillee","video","boutonAide","tailleDiaporama","pasDeVersionLatex","qcm","qcmDisponible","modeQcm","mg32Editable","numeroExercice","listePackages"],"mappings":"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","file":"js/3970.a830e72b71ce3edfacba.js","sourcesContent":["import Exercice from '../ClasseExercice.js';\nimport {listeQuestionsToContenu,randint,choice,shuffle,arrondiVirgule,prenom,texNombre,premiereLettreEnMajuscule,numAlpha} from '../../modules/outils.js'\nexport const titre = 'Organiser des données dans un tableau'\n\n/**\n * Organiser donnees depuis texte\n * @Auteur Erwan Duplessy\n * Référence 6S11\n */\n\n// source : http://www.ac-grenoble.fr/savoie/pedagogie/docs_pedas/ogd_c2_c3/ogd_c2_c3.pdf\n\nexport default function Organiser_donnees_depuis_texte() {\n  Exercice.call(this); // Héritage de la classe Exercice()\n  this.titre = titre;\n  this.consigne = \"Répondre aux questions à l'aide du texte.\";\n  this.nbQuestions = 4;\n  this.nbQuestionsModifiable = false;\n  this.nbCols = 1;\n  this.nbColsCorr = 1;\n  this.sup = false; // false -> effectif ; true -> masse\n  this.sup2 = 4; // paramètre nombre de fruit\n  sortieHtml ? this.spacing = 2 : this.spacing = 1;\n  sortieHtml ? this.spacingCorr = 2 : this.spacingCorr = 1;\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = []; // Liste de questions\n    this.listeCorrections = []; // Liste de questions corrigées\n\n    let nbAmis = 4,texte,texteCorr,m,S; // min = 2\n    let nbFruits = parseInt(this.sup2); // min = 2\n    let lstPrenomExo = []\n    while (lstPrenomExo.length < nbAmis) {\n      let p = prenom();\n      if (!lstPrenomExo.includes(p)) {\n        lstPrenomExo.push(p);\n      }\n    }\n\n    let lstFruit = ['pomme', 'poire', 'kiwi', 'pêche', 'coing', 'melon', 'citron', 'banane', 'mangue'];\n    let lstFruitExo = [];\n    // Choisir les fruits : \n    for (let i = 0; i < nbFruits; i++) {\n      lstFruitExo.push(choice(lstFruit, lstFruitExo));\n    }\n    // Choisir les quantités de fruits pour chaque prénoms : \n    let lstTabVal = []; // tableau i : amis et j : fruits\n    let L = []; // tab temporaire\n    for (let i = 0; i < nbAmis; i++) {\n      for (let j = 0; j < nbFruits; j++) {\n        if (this.sup) {\n          if (randint(0, 8) > 0) {\n            L.push(randint(0, 100) / 10);\n          } else {\n            L.push(0);\n          }\n\n        } else {\n          L.push(randint(0, 10));\n        }\n      }\n      lstTabVal.push(L);\n      L = [];\n    }\n    // Affiche l'énoncé :\n    texte = `Plusieurs amis reviennent du marché. Il s'agit de `;\n    for (let i = 0; i < nbAmis - 2; i++) {\n      texte += lstPrenomExo[i] + ', '\n    }\n    texte += lstPrenomExo[nbAmis - 2] + ' et ' + lstPrenomExo[nbAmis - 1] + '.<br>';\n    let N;\n    //boucle sur les phrases. 1 phrase par personne.\n    for (let i = 0; i < nbAmis; i++) {\n      texte += lstPrenomExo[i] + ' rapporte ';\n      L = []; // ne contient que les fruits d'effectifs strictement positifs\n      for (let j = 0; j < nbFruits; j++) {\n        N = lstTabVal[i][j];\n        if (N > 0) {\n          L.push([N, lstFruitExo[j]])\n        }\n      }\n      m = L.length\n      L = shuffle(L); // mélange l'ordre des fruits\n      for (let k = 0; k < m; k++) {\n        if (this.sup) {\n          texte += texNombre(L[k][0]) + ' kg de ' + L[k][1] + 's';\n        } else {\n          texte += texNombre(L[k][0]) + ' ' + L[k][1];\n          if (L[k][0] > 1) { texte += 's' }\n        }\n        if (k < m - 2) { texte += ', ' }\n        if (k == m - 2) { texte += ' et ' }\n      }\n      texte += '. <br>'\n    }\n    texte += '<br>'\n    texte += numAlpha(0) + ` Remplir le tableau suivant. <br>`;\n\n    if (this.sup) {\n      texte += numAlpha(1) + ` Quel est la masse totale de fruits achetés par les amis ? <br>`;\n    } else {\n      texte += numAlpha(1) + ` Quel est le nombre total de fruits achetés par les amis ? <br>`;\n    }\n    texte += numAlpha(2) + ` Qui a rapporté le plus de fruits ? <br>`;\n    texte += numAlpha(3) + ` Quel fruit a été rapporté en la plus grosse quantité ? <br><br>`;\n\n    texte += `$\\\\begin{array}{|l|` + `c|`.repeat(nbFruits + 1) + `}\\n`;\n    texte += `\\\\hline\\n`;\n    texte += ` `;\n    for (let j = 0; j < nbFruits; j++) {\n      texte += ` & \\\\textbf{\\\\text{` + premiereLettreEnMajuscule(lstFruitExo[j]) + `}}`;\n    }\n    texte += '& \\\\textbf{TOTAL}';\n    texte += `\\\\\\\\\\\\hline\\n`;\n    for (let i = 0; i < nbAmis; i++) {\n      texte += `\\\\textbf{\\\\text{${lstPrenomExo[i]}}}` + `& `.repeat(nbFruits) + ` & `;\n      texte += `\\\\\\\\\\\\hline\\n`;\n    }\n    texte += '\\\\textbf{TOTAL}' + '& '.repeat(nbFruits) + ` & `;\n    texte += `\\\\\\\\\\\\hline\\n`;\n    texte += `\\\\end{array}\\n$`;\n\n    //CORRECTION\n    // Question 1 :\n    texteCorr = numAlpha(0) + ` Voici le tableau complet. <br>`;\n    texteCorr += `$\\\\begin{array}{|l|` + `c|`.repeat(nbFruits + 1) + `}\\n`;\n    texteCorr += `\\\\hline\\n`;\n    texteCorr += ` `;\n    for (let j = 0; j < nbFruits; j++) {\n      texteCorr += ` & \\\\text{${lstFruitExo[j]}}`;\n    }\n    texteCorr += '& TOTAL';\n    texteCorr += `\\\\\\\\\\\\hline\\n`;\n    for (let i = 0; i < nbAmis; i++) {\n      texteCorr += `\\\\text{${lstPrenomExo[i]}}`;\n      let S = 0; // pour calculer les sommes\n      for (let j = 0; j < nbFruits; j++) {\n        texteCorr += '& ' + texNombre(lstTabVal[i][j]); //valeur dans le tableau\n        S += lstTabVal[i][j]; // somme d'une ligne\n      }\n      texteCorr += '& ' + arrondiVirgule(S);\n      texteCorr += `\\\\\\\\\\\\hline\\n`;\n    }\n    texteCorr += 'TOTAL';\n    let S_total = 0; // somme totale de tous les fruits\n    for (let j = 0; j < nbFruits; j++) {\n      S = 0;\n      for (let i = 0; i < nbAmis; i++) {\n        S += lstTabVal[i][j]; // somme d'une colonne\n      }\n      //texteCorr += '& ' + Math.round(S*10)/10;\n      texteCorr += '& ' + arrondiVirgule(S, 1);\n      //texteCorr += '& ' + texNombre(S,1);\n      S_total += S;\n    }\n    texteCorr += '& ' + arrondiVirgule(S_total);\n    texteCorr += `\\\\\\\\\\\\hline\\n`;\n    texteCorr += `\\\\end{array}\\n$`;\n    texteCorr += `<br>`\n\n    // Question 2 :\n    S_total = arrondiVirgule(S_total);\n    if (this.sup) {\n      texteCorr += numAlpha(1) + ` La masse totale de fruits est : ${S_total} kg. <br>`;\n    } else {\n      texteCorr += numAlpha(1) + ` Le nombre total de fruits est : ${S_total}. <br>`;\n    }\n\n    // Question 3 :\n    texteCorr += numAlpha(2) + ` On regarde la dernière colonne du tableau. `;\n    let lstmax = []; //liste des prénoms solutions\n    let nmax = 0; // nombre max de fruit pour une personne\n    for (let i = 0; i < nbAmis; i++) {\n      S = 0;\n      for (let j = 0; j < nbFruits; j++) {\n        S += lstTabVal[i][j]; // somme d'une ligne\n      }\n      if (S == nmax) {\n        lstmax.push(lstPrenomExo[i]);\n      }\n      if (S > nmax) {\n        nmax = S;\n        lstmax = [lstPrenomExo[i]];\n      }\n    }\n    nmax = arrondiVirgule(nmax, 1);\n    if (lstmax.length > 1) {\n      texteCorr += `Les personnes qui ont rapporté le plus de fruits sont : `;\n      texteCorr += lstmax[0];\n      for (let k = 1; k < lstmax.length; k++) {\n        texteCorr += ` et ${lstmax[k]}`;\n      }\n      if (this.sup) {\n        texteCorr += `. La masse maximale rapportée est de ${nmax} kg.<br>`;\n      } else {\n        texteCorr += `. Le nombre maximal de fruits rapporté par une personne est de ${nmax}.<br>`;\n      }\n    } else {\n      if (this.sup) {\n        texteCorr += `La personne qui a rapporté le plus de fruits est ${lstmax}. Cette masse maximale est de ${nmax} kg.<br>`;\n      } else {\n        texteCorr += `La personne qui a rapporté le plus de fruits est ${lstmax}. Ce nombre maximal de fruits est de ${nmax}.<br>`;\n      }\n    }\n\n    // Question 4 :\n    texteCorr += numAlpha(3) + ` On regarde la dernière ligne du tableau. `;\n    let fmax = []; //liste des fruits apporté en quantité max\n    nmax = 0; // nombre max par type de fruit \n    for (let j = 0; j < nbFruits; j++) {\n      S = 0;\n      for (let i = 0; i < nbAmis; i++) {\n        S += lstTabVal[i][j]; // somme d'une colonne\n      }\n      if (S == nmax) {\n        fmax.push(lstFruitExo[j])\n      }\n      if (S > nmax) {\n        nmax = S;\n        fmax = [lstFruitExo[j]];\n      }\n    }\n    nmax = arrondiVirgule(nmax, 1);\n    if (fmax.length > 1) {\n      if (this.sup) {\n        texteCorr += `Les fruits présents en la plus grosse quantité sont : `;\n      } else {\n        texteCorr += `Les fruits les plus nombreux sont : `;\n      }\n      texteCorr += `Les fruits les plus nombreux sont : `;\n      texteCorr += `les ${fmax[0]}s`;\n      for (let k = 1; k < fmax.length; k++) {\n        texteCorr += ` et les ${fmax[k]}s`;\n      }\n      texteCorr += `. Il y en a ${nmax} de chaque sorte.<br>`;\n    } else {\n      if (this.sup) {\n        texteCorr += `Il y a plus de ${fmax}s que d'autres fruits. Il y en a ${nmax} kg.`;\n      } else {\n        texteCorr += `Il y a plus de ${fmax}s que d'autres fruits. Il y en a ${nmax}.`;\n      }\n    }\n\n    this.listeQuestions.push(texte);\n    this.listeCorrections.push(texteCorr);\n    listeQuestionsToContenu(this);\n  }\n  this.besoinFormulaire2Numerique = ['Nombre de fruits différents', 8];\n  this.besoinFormulaireCaseACocher = ['Pour utiliser des nombres décimaux et des masses', false];\n}\n\n","/**\n *\n *  Classe parente de tous les exercices\n *\n * @Auteur Rémi Angot\n */\nexport default function Exercice () {\n  // Classe parente de tous les exercices qui seront créés\n  this.titre = ''\n  this.consigne = ''\n  this.consigneCorrection = ''\n  this.listeQuestions = []\n  this.listeCorrections = []\n  this.introduction = ''\n  this.contenu = ''\n  this.contenuCorrection = ''\n  this.nbQuestions = 10\n  this.nbCols = 2\n  this.nbColsCorr = 2\n  this.spacing = 1\n  this.spacingCorr = 1\n  this.beamer = false\n\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte,max,tooltip facultatif];\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte,tooltip];\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte];\n  this.consigneModifiable = true\n  this.nbQuestionsModifiable = true\n  this.nbColsModifiable = true\n  this.nbColsCorrModifiable = true\n  this.spacingModifiable = true\n  this.spacingCorrModifiable = true\n  this.correctionDetailleeDisponible = false\n  this.correctionDetaillee = true\n  this.video = ''\n  this.boutonAide = false\n  this.tailleDiaporama = 50 // Taille en pixels pour le calcul chronométré\n  // this.boutonAide = modalTexteCourt(numeroExercice,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalTexteLong(numeroExercice,titre,texte,label_bouton=\"Aide\",icone=\"info circle\")\n  // this.boutonAide = modalYoutube(numeroExercice,id_youtube,texte,label_bouton=\"Aide - Vidéo\",icone=\"youtube\")\n  // this.boutonAide = modalPdf(numeroExercice,url_pdf,texte=\"Aide\",label_bouton=\"Aide - PDF\",icone=\"file pdf\")\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n  this.pasDeVersionLatex = false\n  this.qcm = false // Pour les exercices de type QCM : contient un tableau.\n  this.qcmDisponible = false // Pour ajouter une case à cocher Mode QCM qui permet de changer le statut de this.modeQcm\n  this.modeQcm = false // Pour choisir la version QCM ou la version classique (false = version classique)\n\n  this.mg32Editable = false // pas d'interface par défaut pour les figures MG32\n  this.nouvelleVersion = function (numeroExercice) {}\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule\n  // this.typeExercice = \"MG32\";\n  // this.dimensionsDivMg32 = [500, 450];\n  // this.typeExercice = \"Scratch\"\n  // this.qcm=[\"Quels sont les nombres pairs ?\",[7,12,34,25,18],[0,1,1,0,1]] =>[\"La question\",[les réponses],[bonne=1 et mauvaise=0]]\n}\n"],"sourceRoot":""}