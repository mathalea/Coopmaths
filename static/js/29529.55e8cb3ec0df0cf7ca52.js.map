{"version":3,"file":"js/29529.55e8cb3ec0df0cf7ca52.js","mappings":"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","sources":["webpack://mathalea/./src/js/exercices/4e/4F12.js","webpack://mathalea/./src/js/exercices/Exercice.js"],"sourcesContent":["import Exercice from '../Exercice.js'\nimport { context } from '../../modules/context.js'\nimport { listeQuestionsToContenu, randint, choice, calcul, texNombrec, prenomF } from '../../modules/outils.js'\nimport { point, polyline, axes, labelX, labelY, grille, repere, courbeInterpolee, texteParPosition, mathalea2d, repere2, courbe2 } from '../../modules/2d.js'\nexport const titre = 'Problème s’appuyant sur la lecture d’une représentation graphique'\nexport const amcReady = true\nexport const amcType = 'AMCHybride'\n\n/**\n * Problème avec lecture de représentation graphique d'une fonction\n * @author Rémi Angot\n * Référence 4F12\n */\nexport default function ExploiterRepresentationGraphique () {\n  Exercice.call(this) // Héritage de la classe Exercice()\n  this.titre = titre\n  this.consigne = ''\n  this.nbQuestions = 1\n  this.nbCols = 1\n  this.nbColsCorr = 1\n  this.nbQuestionsModifiable = false\n  this.sup = 4\n\n  this.nouvelleVersion = function () {\n    this.listeQuestions = [] // Liste de questions\n    this.listeCorrections = [] // Liste de questions corrigées\n    this.autoCorrection = []\n    // Vitesses initiales donnant une hauteur entière et une portée entière\n    // Vitesses initiales donnant une hauteur entière et une durée de vol entière.\n    const vitessesInitiales = [20.87, 28.27, 35.2, 49.6, 63.55, 70.85, 77.45, 84.85, 91.65]\n    const vitessesInitialesBis = [10.95, 12.65, 14.15, 15.5, 16.7, 17.9, 19, 20, 21, 21.9, 22.8, 23.7, 24.5, 25.3, 26.1, 26.8, 27.6, 28.2, 29]\n    let V0, xscale\n    let typeDeProbleme\n    let enonceAMC\n    let v1, v2, v3, situation\n    let repeRe\n    let tempsPause\n    let periodeRapide\n    if (this.sup === 1) {\n      typeDeProbleme = choice(['projectile', 'projectile2'])\n    }\n    if (this.sup === 2) {\n      typeDeProbleme = 'velo'\n    }\n    if (this.sup === 3) {\n      typeDeProbleme = 'temperature'\n    }\n    if (this.sup === 4) {\n      typeDeProbleme = choice(['temperature', 'projectile', 'projectile2', 'velo'])\n    }\n    let f, t1, l, l1, l2, g1, g2, g3, r, graphique, texte1, texte2, fille, hmin, hmax, tmin, tmax\n    switch (typeDeProbleme) {\n      case 'projectile': // Courbe de l'altitude de vol en fonction du temps\n        V0 = choice(vitessesInitiales)\n        t1 = Math.round(Math.sqrt(2) * V0 / 10)\n        xscale = 9 / t1\n        f = (x) => Math.max(-5 * x ** 2 + V0 * Math.sqrt(2) * x / 2, 0)\n        repeRe = repere2({ xUnite: 1 * xscale, yUnite: 0.1 * xscale, xMin: 0, yMin: 0, xMax: t1 + 1, yMax: f(t1 / 2) + 11, xThickDistance: 1, yThickDistance: 10, grilleSecondaireY: true, grilleSecondaireYDistance: 2, grilleSecondaireYMin: 0, grilleSecondaireYMax: f(t1 / 2) + 5 }) // ()\n        texte1 = texteParPosition('hauteur (en mètre)', 0.2, (f(t1 / 2) / 10 + 0.5) * xscale, 'droite')\n        graphique = courbe2(f, { repere: repeRe, xMax: (t1 + 1) * xscale, step: 0.2 })\n        texte2 = texteParPosition('temps (en s)', (t1 + 0.5) * xscale, 0.4, 'droite')\n\n        this.introduction =\n          'On a représenté ci-dessous l’évolution de la hauteur d’un projectile lancé depuis le sol (en mètre) en fonction du temps (en seconde).'\n\n        this.introduction +=\n          '<br><br>' +\n          mathalea2d(\n            {\n              xmin: -xscale,\n              ymin: -xscale,\n              xmax: (t1 + 4) * xscale,\n              ymax: (f(t1 / 2) / 10 + 2) * xscale,\n              pixelsParCm: 30,\n              scale: 1\n            },\n            repeRe,\n            graphique,\n            texte1,\n            texte2\n          )\n\n        this.introduction +=\n          '<br><br>' +\n          'À l’aide de ce graphique, répondre aux questions suivantes :'\n\n        this.listeQuestions.push(\n          'Au bout de combien de temps le projectile retombe-t-il au sol ?'\n        )\n        this.listeCorrections.push(\n          `Au bout de ${texNombrec(\n            t1\n          )} s, le projectile retombe au sol car la courbe passe par le point de coordonnées $(${texNombrec(\n            t1\n          )}~;~0)$.`\n        )\n\n        this.listeQuestions.push(\n          'Quelle est la hauteur maximale atteinte par le projectile ?'\n        )\n        this.listeCorrections.push(\n          `Le point le plus haut de la courbe a pour abscisse $${texNombrec(\n            (t1 / 2)\n          )}$ et pour ordonnée $${Math.round(f(t1 / 2))}$ donc la hauteur maximale est de $${Math.round(f(t1 / 2))}$ m.`\n        )\n\n        break\n      case 'projectile2':\n        V0 = choice(vitessesInitialesBis)\n        t1 = Math.round(V0 ** 2 / 10)\n        xscale = 52 / t1\n        f = (x) => Math.max(-10 * x ** 2 / (V0 ** 2) + x, 0)\n        repeRe = repere2({ xUnite: 0.25 * xscale, yUnite: 0.5 * xscale, xMin: 0, yMin: 0, xMax: t1 + 4, yMax: f(t1 / 2) + 2.1, xThickDistance: 4, yThickDistance: 1, grilleSecondaireY: true, grilleSecondaireYDistance: 0.25, grilleSecondaireYMin: 0, grilleSecondaireYMax: f(t1 / 2) + 1 }) // ()\n        texte1 = texteParPosition('hauteur (en mètre)', 0.2, xscale * (f(t1 / 2) / 2 + 1), 'droite')\n        graphique = courbe2(f, { repere: repeRe, step: 0.5 })\n        texte2 = texteParPosition('distance (en m)', xscale * ((t1 + 2) / 4), 0.4, 'droite')\n\n        this.introduction =\n            'On a représenté ci-dessous la trajectoire d’un projectile lancé depuis le sol.'\n\n        this.introduction +=\n            '<br><br>' +\n            mathalea2d(\n              {\n                xmin: -xscale,\n                ymin: -xscale,\n                xmax: (t1 + 4) * xscale,\n                ymax: (f(t1 / 2) / 2 + 2) * xscale,\n                pixelsParCm: 30,\n                scale: 1\n              },\n              repeRe,\n              texte1,\n              graphique,\n              texte2\n            )\n\n        this.introduction +=\n            '<br><br>' +\n            'À l’aide de ce graphique, répondre aux questions suivantes :'\n\n        this.listeQuestions.push(\n          'À quelle ditance le projectile est-il retombé ?'\n        )\n        this.listeCorrections.push(\n            `Le projectile retombe au sol à une distance de ${t1} m, car la courbe passe par le point de coordonnées $(${texNombrec(\n              t1\n            )}~;~0)$.`\n        )\n\n        this.listeQuestions.push(\n          'Quelle est la hauteur maximale atteinte par le projectile ?'\n        )\n        this.listeCorrections.push(\n            `Le point le plus haut de la courbe a pour abscisse $${texNombrec((t1 / 2))}$ et pour ordonnée $${Math.round(f(t1 / 2))}$ donc la hauteur maximale est de $${Math.round(f(t1 / 2))}$ m.`\n        )\n\n        break\n\n      case 'velo':\n        v1 = randint(1, 4)\n        v2 = randint(1, 3, v1)\n        v3 = v1 + v2\n        g1 = grille(-1, -1, 6, 8)\n        g1.color = 'black'\n        g1.opacite = 1\n        g2 = grille(-1, -1, 6, 8, 'gray', 0.2, 0.2)\n        g3 = axes(0, 0, 6, 7)\n        texte1 = texteParPosition('distance (en km)', 0.2, 7.3, 'droite')\n        l1 = labelX(0, 50, 1, 'black', -0.6, 10)\n        l2 = labelY(1, 6, 1, 'black', -0.6, 1)\n        texte2 = texteParPosition('temps (en min)', 6.5, 0.4, 'droite')\n        situation = randint(1, 3)\n\n        if (situation === 1) {\n          l = polyline(point(0, 0), point(1, v1), point(2, v1 + v2), point(3, v1 + v2), point(4, 0))\n          tempsPause = 20\n          periodeRapide = 'de la 20e à la 30e minute'\n        }\n        if (situation === 2) {\n          l = polyline(point(0, 0), point(1, v3), point(2, v3), point(3, v2), point(4, 0))\n          tempsPause = 10\n          periodeRapide = 'durant les 10 premières minutes'\n        }\n        if (situation === 3) {\n          l = polyline(point(0, 0), point(1, v3), point(2, v2), point(3, v2), point(4, 0))\n          tempsPause = 20\n          periodeRapide = 'durant les 10 premières minutes'\n        }\n        l.epaisseur = 2\n        l.color = 'blue'\n\n        fille = prenomF()\n        this.introduction = `${fille} fait du vélo avec son smartphone sur une voie-verte rectiligne qui part de chez elle. Une application lui permet de voir à quelle distance de chez elle, elle se trouve.`\n\n        this.introduction += '<br><br>' + mathalea2d({\n          xmin: -1,\n          ymin: -1,\n          xmax: 9,\n          ymax: 8,\n          pixelsParCm: 40,\n          scale: 1\n        }, g1, g2, g3, l, texte1, texte2, l1, l2)\n\n        this.introduction += '<br><br>' + 'À l’aide de ce graphique, répondre aux questions suivantes :'\n\n        this.listeQuestions.push('Pendant combien de temps a-t-elle fait du vélo ?')\n        this.listeCorrections.push('Elle a fait du vélo pendant 40 minutes.')\n\n        this.listeQuestions.push('Quelle distance a-t-elle parcourue au total ?')\n        this.listeCorrections.push(`Le point le plus loin de sa maison est à ${v3} km et ensuite elle revient chez elle, donc la distance totale est de ${2 * v3} km.`)\n\n        this.listeQuestions.push(`Que se passe-t-il après ${tempsPause} minutes de vélo ?`)\n        this.listeCorrections.push('La distance reste constante alors qu\\'elle est sur un chemin rectiligne. Elle a donc fait une pause.')\n\n        this.listeQuestions.push('À quel moment a-t-elle été la plus rapide ?')\n        this.listeCorrections.push(`Elle a été la plus rapide ${periodeRapide} où elle a effectué ${v3} km en 10 minutes.`)\n\n        break\n      case 'temperature':\n        hmin = randint(2, 4)\n        hmax = randint(12, 16)\n        tmin = randint(-5, 15)\n        tmax = tmin + randint(5, 12)\n\n        r = repere({\n          xmin: 0,\n          ymin: tmin - 1,\n          ymax: tmax + 2,\n          xmax: 24,\n          xscale: 2,\n          legendeX: 'Heure',\n          legendeY: 'Température (en °C)'\n        })\n        graphique = courbeInterpolee(\n          [\n            [-2, tmin + 2],\n            [hmin, tmin],\n            [hmax, tmax],\n            [26, tmin + 2]\n          ],\n          'blue',\n          2,\n          r,\n          0,\n          24\n        )\n        this.introduction =\n          'On a représenté ci-dessous l’évolution de la température sur une journée.'\n        this.introduction +=\n          '<br><br>' +\n          mathalea2d(\n            {\n              xmin: -1,\n              ymin: tmin - 2.5,\n              xmax: 16,\n              ymax: tmax + 3,\n              pixelsParCm: 40,\n              scale: 1\n            },\n            r,\n            graphique\n          )\n\n        this.introduction +=\n          '<br><br>' +\n          'À l’aide de ce graphique, répondre aux questions suivantes :'\n\n        this.listeQuestions.push(\n          'Quelle est la température la plus froide de la journée ?'\n        )\n        this.listeCorrections.push(`La température la plus basse est ${tmin}°C.`)\n\n        this.listeQuestions.push(\n          'Quelle est la température la plus chaude de la journée ?'\n        )\n        this.listeCorrections.push(`La température la plus élevée de la journée est ${tmax}°C.`)\n        this.listeQuestions.push(\n          'À quelle heure fait-il le plus chaud ?'\n        )\n        this.listeCorrections.push(`C'est à ${hmax} h qu'il fait le plus chaud.`)\n        this.listeQuestions.push(\n          'À quelle heure fait-il le plus froid ?'\n        )\n        this.listeCorrections.push(`C'est à ${hmin} h qu'il fait le plus froid.`)\n\n        break\n    }\n    if (context.isAmc) {\n      enonceAMC = this.introduction\n      for (let i = 0; i < this.listeQuestions.length; i++) {\n        enonceAMC += `${i + 1}) ${this.listeQuestions[i]}<br>`\n      }\n      switch (typeDeProbleme) {\n        case 'velo':\n          this.autoCorrection[0] = {\n            enonce: enonceAMC,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: this.listeCorrections[0],\n                  statut: '',\n                  reponse: {\n                    texte: '1)',\n                    valeur: 40,\n                    param: {\n                      digits: 2,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: this.listeCorrections[1],\n                  statut: '',\n                  reponse: {\n                    texte: '1)',\n                    valeur: 2 * v3,\n                    param: {\n                      digits: 2,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCOpen',\n                propositions: [{\n                  texte: this.listeCorrections[2],\n                  statut: 2\n                }]\n              },\n              {\n                type: 'AMCOpen',\n                propositions: [{\n                  texte: this.listeCorrections[3],\n                  statut: 2\n                }]\n              }\n            ]\n          }\n          break\n        case 'projectile':\n          this.autoCorrection[0] = {\n            enonce: enonceAMC,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: this.listeCorrections[0],\n                  statut: '',\n                  reponse: {\n                    texte: '1)',\n                    valeur: calcul(t1),\n                    param: {\n                      digits: 2,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: this.listeCorrections[1],\n                  statut: '',\n                  reponse: {\n                    texte: '1)',\n                    valeur: Math.round(f(t1 / 2)),\n                    param: {\n                      digits: 3,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n          break\n        case 'projectile2':\n          this.autoCorrection[0] = {\n            enonce: enonceAMC,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: this.listeCorrections[0],\n                  statut: '',\n                  reponse: {\n                    texte: '1)',\n                    valeur: t1,\n                    param: {\n                      digits: 2,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: this.listeCorrections[1],\n                  statut: '',\n                  reponse: {\n                    texte: '1)',\n                    valeur: Math.round(f(t1 / 2)),\n                    param: {\n                      digits: 3,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n          break\n        case 'temperature':\n          this.autoCorrection[0] = {\n            enonce: enonceAMC,\n            propositions: [\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: this.listeCorrections[0],\n                  statut: '',\n                  reponse: {\n                    texte: '1)',\n                    valeur: tmin,\n                    param: {\n                      digits: 2,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: this.listeCorrections[1],\n                  statut: '',\n                  reponse: {\n                    texte: '1)',\n                    valeur: tmax,\n                    param: {\n                      digits: 2,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: this.listeCorrections[2],\n                  statut: '',\n                  reponse: {\n                    texte: '1)',\n                    valeur: hmax,\n                    param: {\n                      digits: 2,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              },\n              {\n                type: 'AMCNum',\n                propositions: [{\n                  texte: this.listeCorrections[3],\n                  statut: '',\n                  reponse: {\n                    texte: '1)',\n                    valeur: hmin,\n                    param: {\n                      digits: 2,\n                      decimals: 0,\n                      signe: false,\n                      approx: 0\n                    }\n                  }\n                }]\n              }\n            ]\n          }\n          break\n      }\n    } else listeQuestionsToContenu(this)\n  }\n  this.besoinFormulaireNumerique = ['Choix des problèmes', 3, '1 : Projectile\\n2 : Trajet à vélo\\n3 : Température\\n4 : Au hasard']\n}\n","/**\n *\n *  Classe parente de tous les exercices.\n *\n * @author Rémi Angot\n */\nexport default function Exercice () {\n  // ///////////////////////////////////////////////\n  // Autour de l'exercice\n  // ///////////////////////////////////////////////\n  this.titre = '' // Chaîne de caractère sans point à la fin. C'est le titre de l'exercice qui sera affiché avec la référence dans le générateur d'exercices.\n  this.boutonAide = false // Bouton en haut à droite des questions permettant d'afficher un pdf, texte, image, vidéo, contenu d'un autre site en \"pop-up\" via les fonctions modalXXXXXXX de outils.js.\n  // Ci-dessous des exemples d'utilisation du this.boutonAide.\n  // Noter que pour récupérer le numeroExercice dont il est question, au lieu d'écrire \"this.nouvelleVersion = function () {\" comme d'habitude, on écrit \"this.nouvelleVersion = function (numeroExercice) {\".\n  // this.boutonAide = modalImage(numeroExercice, urlImage, titre, labelBouton = 'Illustration', icone = 'image')\n  // this.boutonAide = modalPdf(numeroExercice, urlPdf, titre='Aide', labelBouton = 'Aide - PDF', icone = 'file pdf')\n  // this.boutonAide = modalTexteCourt(numeroExercice, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalTexteLong(numeroExercice, titre, texte, labelBouton = 'Aide', icone = 'info circle')\n  // this.boutonAide = modalUrl(numeroExercice, url, labelBouton = 'Aide', icone) pour afficher le contenu de url dans un iframe\n  // this.boutonAide = modalVideo(numeroExercice, urlVideo, titre, labelBouton, icone)\n  // this.boutonAide = modalYoutube(numeroExercice, idYoutube, titre, labelBouton = 'Aide - Vidéo', icone = 'youtube')\n\n  // ///////////////////////////////////////////////\n  // Construction de l'exercice\n  // ///////////////////////////////////////////////\n  this.consigne = '' // Chaîne de caractère qui apparaît en gras au-dessus des questions de préférence à l'infinitif et sans point à la fin.\n  this.consigneCorrection = '' // Chaîne de caractère en général vide qui apparaît au-dessus des corrections.\n  this.introduction = '' // Texte qui n'est pas forcément en gras et qui apparaît entre la consigne et les questions.\n  this.listeQuestions = [] // Liste de chaînes de caractères avec chacune correspondant à une question. Chaque question est définie par la méthode this.nouvelleVersion puis `listeDeQuestionToContenu(this)` mettra en forme `this.contenu` et `this.contenuCorrection` suivant `context` (sortie HTML ? diaporama ?...)\n  this.listeCorrections = [] // Idem avec la correction.\n  this.contenu = '' // Chaîne de caractères avec tout l'énoncé de l'exercice construit à partir de `this.listeQuestions` suivant le `context`\n  this.contenuCorrection = '' // Idem avec la correction\n  this.autoCorrection = [] // Liste des objets par question pour correction interactive || export AMC.\n  this.tableauSolutionsDuQcm = [] // Pour sauvegarder les solutions des QCM.\n\n  // ///////////////////////////////////////////////\n  // Mise en forme de l'exercice\n  // ///////////////////////////////////////////////\n  this.spacing = 1 // Interligne des questions\n  this.spacingCorr = 1 // Interligne des réponses\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie LateX\n  // ////////////////////////////////////////////\n  this.pasDeVersionLatex = false // booléen qui indique qu'une sortie LateX est impossible.\n  this.listePackages = [] // string ou liste de string avec le nom des packages spécifiques à ajouter dans le préambule.\n  this.consigneModifiable = true // booléen pour déterminer si la consigne est modifiable en ligne dans la sortie LaTeX.\n  this.nbQuestionsModifiable = true // booléen pour déterminer si le nombre de questions est modifiable en ligne.\n  this.nbCols = 1 // Nombre de colonnes pour la sortie LaTeX des questions (environnement multicols).\n  this.nbColsCorr = 1 // Nombre de colonnes pour la sortie LaTeX des réponses (environnement multicols).\n  this.nbColsModifiable = true // booléen pour déterminer si le nombre de colonnes est modifiable en ligne dans la sortie LaTeX.\n  this.nbColsCorrModifiable = true // booléen pour déterminer si le nombre de colonnes de la correction est modifiable en ligne dans la sortie LaTeX.\n  this.spacingModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  this.spacingCorrModifiable = true // booléen pour déterminer si l'espacement est modifiable en ligne dans la sortie LaTeX.\n  // this.vspace = -1 //Ajoute un \\vspace{-1cm} avant l'énoncé ce qui peut être pratique pour des exercices avec des figures.\n\n  // ////////////////////////////////////////////\n  // Gestion de la sortie autre que LateX\n  // ////////////////////////////////////////////\n  this.beamer = false // booléen pour savoir si la sortie devra être un diaporama beamer\n  this.tailleDiaporama = 1 // Facteur par lequel multiplier la police pour la vue 'diap'\n\n  // ////////////////////////////////////////////\n  // Paramètres\n  // ////////////////////////////////////////////\n  this.nbQuestions = 10 // Nombre de questions par défaut (récupéré dans l'url avec le paramètre `,n=`)\n  this.pointsParQuestions = 1 // Pour définir la note par défaut d'un exercice dans sa sortie Moodle\n  this.correctionDetailleeDisponible = false // booléen qui indique si une correction détaillée est disponible.\n  this.correctionDetaillee = true // booléen indiquant si la correction détaillée doit être affiché par défaut (récupéré dans l'url avec le paramètre `,cd=`).\n  this.correctionIsCachee = false // pour cacher une correction\n  this.video = '' // Chaine de caractère pour un complément numérique (id Youtube, url, code iframe...).\n  // Interactivité\n  this.interactif = false // Exercice sans saisie utilisateur par défaut.\n  this.interactifObligatoire = false // Certains exercices sont uniquement des QCM et n'ont pas de version non interactive.\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup ou dans le paramètre d'url ',s='\n  this.besoinFormulaireNumerique = false // Sinon this.besoinFormulaireNumerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaireTexte = false // Sinon this.besoinFormulaireTexte = [texte, tooltip]\n  this.besoinFormulaireCaseACocher = false // Sinon this.besoinFormulaireCaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup2 ou dans le paramètre d'url ',s2='\n  this.besoinFormulaire2Numerique = false // Sinon this.besoinFormulaire2Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire2Texte = false // Sinon this.besoinFormulaire2Texte = [texte, tooltip]\n  this.besoinFormulaire2CaseACocher = false // Sinon this.besoinFormulaire2CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup3 ou dans le paramètre d'url ',s3='\n  this.besoinFormulaire3Numerique = false // Sinon this.besoinFormulaire3Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire3Texte = false // Sinon this.besoinFormulaire3Texte = [texte, tooltip]\n  this.besoinFormulaire3CaseACocher = false // Sinon this.besoinFormulaire3CaseACocher = [texte]\n  // Ajoute un formulaire de paramétrage par l'utilisateur récupéré via this.sup4 ou dans le paramètre d'url ',s4='\n  this.besoinFormulaire4Numerique = false // Sinon this.besoinFormulaire4Numerique = [texte, max, tooltip facultatif]\n  this.besoinFormulaire4Texte = false // Sinon this.besoinFormulaire4Texte = [texte, tooltip]\n  this.besoinFormulaire4CaseACocher = false // Sinon this.besoinFormulaire4CaseACocher = [texte]\n\n  // ///////////////////////////////////////////////\n  // Exercice avec des dépendances particulières\n  // ///////////////////////////////////////////////\n  // this.typeExercice = 'MG32' // Pour charger MathGraph32.\n  this.mg32Editable = false // Les figures MG32 ne sont pas interactives par défaut.\n  // this.dimensionsDivMg32 = [500, 450] // Dimensions du SVG créé par MathGraph32.\n\n  // this.typeExercice = 'Scratch' // Pour charger Scratchblocks.\n  // this.typeExercice = 'IEP' // Pour charger InstrumEnPoche.\n  // this.typeExercice = 'dnb' // Ce n’est pas un exercice aléatoire il est traité différemment. Les exercices DNB sont des images pour la sortie Html et du code LaTeX statique pour la sortie latex.\n  // this.typeExercice = 'XCas' // Pour charger le JavaScript de XCas qui provient de https://www-fourier.ujf-grenoble.fr/~parisse/giac_fr.html\n  // this.typeExercice = 'simple' // Pour les exercices plus simples destinés aux courses aux nombres\n\n  this.listeArguments = [] // Variable servant à comparer les exercices pour ne pas avoir deux exercices identiques\n\n  /**\n   * Fonction qui est appellée pour chaque exercice\n   * @param {number} numeroExercice numéro de l'exercice utilisé pour avoir des identifiants uniques pour associer un champ avec le bon exercice (pour l'interactivité par exemple)\n   */\n  this.nouvelleVersion = function (numeroExercice) {}\n\n  /**\n   * Compare chaque nouvelle version d'un exercice aux précédentes pour s'assurer de ne pas avoir deux exercices identiques\n   * @param {int} i indice de la question\n   * @param  {...any} args toutes les variables pertinentes qui \"résumeraient\" la question\n   * @returns {boolean} true si la question n'a jamais été posée\n   */\n  this.questionJamaisPosee = function (i, ...args) {\n    if (i === 0) this.listeArguments = []\n    let argsConcatenes = ''\n    for (const arg of args) {\n      if (arg !== undefined) argsConcatenes += arg.toString()\n    }\n    if (this.listeArguments.indexOf(argsConcatenes) > -1) {\n      return false\n    } else {\n      this.listeArguments.push(argsConcatenes)\n      return true\n    }\n  }\n}\n"],"names":["titre","amcReady","amcType","ExploiterRepresentationGraphique","Exercice","this","consigne","nbQuestions","nbCols","nbColsCorr","nbQuestionsModifiable","sup","nouvelleVersion","listeQuestions","listeCorrections","autoCorrection","vitessesInitiales","vitessesInitialesBis","V0","xscale","typeDeProbleme","enonceAMC","v1","v2","v3","situation","repeRe","tempsPause","periodeRapide","f","t1","l","l1","l2","g1","g2","g3","r","graphique","texte1","texte2","fille","hmin","hmax","tmin","tmax","choice","Math","round","sqrt","x","max","repere2","xUnite","yUnite","xMin","yMin","xMax","yMax","xThickDistance","yThickDistance","grilleSecondaireY","grilleSecondaireYDistance","grilleSecondaireYMin","grilleSecondaireYMax","texteParPosition","courbe2","repere","step","introduction","mathalea2d","xmin","ymin","xmax","ymax","pixelsParCm","scale","push","texNombrec","randint","grille","color","opacite","axes","labelX","labelY","polyline","point","epaisseur","prenomF","legendeX","legendeY","courbeInterpolee","context","i","length","enonce","propositions","type","texte","statut","reponse","valeur","param","digits","decimals","signe","approx","calcul","listeQuestionsToContenu","besoinFormulaireNumerique","boutonAide","consigneCorrection","contenu","contenuCorrection","tableauSolutionsDuQcm","spacing","spacingCorr","pasDeVersionLatex","listePackages","consigneModifiable","nbColsModifiable","nbColsCorrModifiable","spacingModifiable","spacingCorrModifiable","beamer","tailleDiaporama","pointsParQuestions","correctionDetailleeDisponible","correctionDetaillee","correctionIsCachee","video","interactif","interactifObligatoire","besoinFormulaireTexte","besoinFormulaireCaseACocher","besoinFormulaire2Numerique","besoinFormulaire2Texte","besoinFormulaire2CaseACocher","besoinFormulaire3Numerique","besoinFormulaire3Texte","besoinFormulaire3CaseACocher","besoinFormulaire4Numerique","besoinFormulaire4Texte","besoinFormulaire4CaseACocher","mg32Editable","listeArguments","numeroExercice","questionJamaisPosee","args","argsConcatenes","arg","undefined","toString","indexOf"],"sourceRoot":""}